/*! For license information please see content.js.LICENSE.txt */
(()=>{var e={882:function(e,t,n){const r=n(9500),{log:o}=n(8787),a=n(1028);let i=0;e.exports=()=>{const e=a("Scheduler",i),t={},n={};let l=[];i+=1;const u=()=>Object.keys(t).length,s=()=>{if(0!==l.length){const e=Object.keys(t);for(let r=0;r<e.length;r+=1)if(void 0===n[e[r]]){l[0](t[e[r]]);break}}},c=(t,a)=>new Promise((i,u)=>{const c=r({action:t,payload:a});l.push(async e=>{l.shift(),n[e.id]=c;try{i(await e[t].apply(this,[...a,c.id]))}catch(e){u(e)}finally{delete n[e.id],s()}}),o(`[${e}]: Add ${c.id} to JobQueue`),o(`[${e}]: JobQueue length=${l.length}`),s()});return{addWorker:n=>(t[n.id]=n,o(`[${e}]: Add ${n.id}`),o(`[${e}]: Number of workers=${u()}`),s(),n.id),addJob:async(t,...n)=>{if(0===u())throw Error(`[${e}]: You need to have at least one worker before adding jobs`);return c(t,n)},terminate:async()=>{Object.keys(t).forEach(async e=>{await t[e].terminate()}),l=[]},getQueueLen:()=>l.length,getNumWorkers:u}}},949:e=>{e.exports={OSD_ONLY:"0",AUTO_OSD:"1",AUTO_ONLY:"2",AUTO:"3",SINGLE_COLUMN:"4",SINGLE_BLOCK_VERT_TEXT:"5",SINGLE_BLOCK:"6",SINGLE_LINE:"7",SINGLE_WORD:"8",CIRCLE_WORD:"9",SINGLE_CHAR:"10",SPARSE_TEXT:"11",SPARSE_TEXT_OSD:"12",RAW_LINE:"13"}},961:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(2551)},1020:(e,t,n)=>{"use strict";var r=n(6540),o=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,l=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function s(e,t,n){var r,a={},s=null,c=null;for(r in void 0!==n&&(s=""+n),void 0!==t.key&&(s=""+t.key),void 0!==t.ref&&(c=t.ref),t)i.call(t,r)&&!u.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:o,type:e,key:s,ref:c,props:a,_owner:l.current}}t.Fragment=a,t.jsx=s,t.jsxs=s},1028:e=>{e.exports=(e,t)=>`${e}-${t}-${Math.random().toString(16).slice(3,8)}`},1848:(e,t,n)=>{const{version:r}=n(6125),o=n(4500);var a;e.exports={...o,workerPath:"undefined"!=typeof process&&"development"===process.env.TESS_ENV?(a=`/dist/worker.dev.js?nocache=${Math.random().toString(36).slice(3)}`,new URL(a,window.location.href).href):`https://cdn.jsdelivr.net/npm/tesseract.js@v${r}/dist/worker.min.js`,corePath:null}},2477:(e,t,n)=>{const r=n(5981),o=n(4760),a=n(9500),{log:i}=n(8787),l=n(1028),{defaultOEM:u}=n(8711),{defaultOptions:s,spawnWorker:c,terminateWorker:d,onMessage:f,loadImage:p,send:h}=n(5321);let m=0;e.exports=async(e={})=>{const t=l("Worker",m),{logger:n,errorHandler:g,...y}=r({...s,...e}),v={},b={};let w,x;const k=new Promise((e,t)=>{x=e,w=t});let S=c(y);S.onerror=e=>{w(e.message)},m+=1;const E=(e,t)=>{v[e]=t},C=(e,t)=>{b[e]=t},N=({id:e,action:n,payload:r})=>new Promise((o,a)=>{i(`[${t}]: Start ${e}, action=${n}`),E(n,o),C(n,a),h(S,{workerId:t,jobId:e,action:n,payload:r})});f(S,({workerId:e,jobId:t,status:r,action:a,data:l})=>{if("resolve"===r){i(`[${e}]: Complete ${t}`);let n=l;"recognize"===a?n=o(l):"getPDF"===a&&(n=Array.from({...l,length:Object.keys(l).length})),v[a]({jobId:t,data:n})}else if("reject"===r){if(b[a](l),"load"===a&&w(l),!g)throw Error(l);g(l)}else"progress"===r&&n({...l,userJobId:t})});const _={id:t,worker:S,setResolve:E,setReject:C,load:()=>console.warn("`load` is depreciated and should be removed from code (workers now come pre-loaded)"),writeText:(e,t,n)=>N(a({id:n,action:"FS",payload:{method:"writeFile",args:[e,t]}})),readText:(e,t)=>N(a({id:t,action:"FS",payload:{method:"readFile",args:[e,{encoding:"utf8"}]}})),removeFile:(e,t)=>N(a({id:t,action:"FS",payload:{method:"unlink",args:[e]}})),FS:(e,t,n)=>N(a({id:n,action:"FS",payload:{method:e,args:t}})),loadLanguage:(e="eng",t)=>N(a({id:t,action:"loadLanguage",payload:{langs:e,options:y}})),initialize:(e="eng",t=u,n,r)=>N(a({id:r,action:"initialize",payload:{langs:e,oem:t,config:n}})),setParameters:(e={},t)=>N(a({id:t,action:"setParameters",payload:{params:e}})),recognize:async(e,t={},n={blocks:!0,text:!0,hocr:!0,tsv:!0},r)=>N(a({id:r,action:"recognize",payload:{image:await p(e),options:t,output:n}})),getPDF:(e="Tesseract OCR Result",t=!1,n)=>(console.log("`getPDF` function is depreciated. `recognize` option `savePDF` should be used instead."),N(a({id:n,action:"getPDF",payload:{title:e,textonly:t}}))),detect:async(e,t)=>N(a({id:t,action:"detect",payload:{image:await p(e)}})),terminate:async()=>(null!==S&&(d(S),S=null),Promise.resolve())};return N(a({id:undefined,action:"load",payload:{options:y}})).then(()=>x(_)).catch(()=>{}),k}},2551:(e,t,n)=>{"use strict";var r=n(6540),o=n(9982);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,l={};function u(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(l[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,t,n,r,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){g[e]=new m(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){g[e]=new m(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){g[e]=new m(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){g[e]=new m(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){g[e]=new m(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)});var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,t,n,r){var o=g.hasOwnProperty(t)?g[t]:null;(null!==o?0!==o.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!d.call(h,e)||!d.call(p,e)&&(f.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(y,v);g[t]=new m(t,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(y,v);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(y,v);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)}),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)});var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),_=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),j=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),z=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function D(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var R,I=Object.assign;function F(e){if(void 0===R)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);R=t&&t[1]||""}return"\n"+R+e}var A=!1;function U(e,t){if(!e||A)return"";A=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var o=t.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l]){var u="\n"+o[i].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=i&&0<=l);break}}}finally{A=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function B(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case C:return"Profiler";case E:return"StrictMode";case P:return"Suspense";case j:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case z:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return I({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Z(e,t){X(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return I({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function ae(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var se,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return ce(e,t)})}:ce);function fe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(pe).forEach(function(e){he.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]})});var ye=I({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ee=null;function Ce(e){if(e=wo(e)){if("function"!=typeof ke)throw Error(a(280));var t=e.stateNode;t&&(t=ko(t),ke(e.stateNode,e.type,t))}}function Ne(e){Se?Ee?Ee.push(e):Ee=[e]:Se=e}function _e(){if(Se){var e=Se,t=Ee;if(Ee=Se=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Te(e,t){return e(t)}function Pe(){}var je=!1;function Le(e,t,n){if(je)return e(t,n);je=!0;try{return Te(e,t,n)}finally{je=!1,(null!==Se||null!==Ee)&&(Pe(),_e())}}function ze(e,t){var n=e.stateNode;if(null===n)return null;var r=ko(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Oe=!1;if(c)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ce){Oe=!1}function De(e,t,n,r,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Re=!1,Ie=null,Fe=!1,Ae=null,Ue={onError:function(e){Re=!0,Ie=e}};function Be(e,t,n,r,o,a,i,l,u){Re=!1,Ie=null,De.apply(Ue,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{!!(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(He(e)!==e)throw Error(a(188))}function $e(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return Ve(o),e;if(i===r)return Ve(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ge=o.unstable_scheduleCallback,Qe=o.unstable_cancelCallback,Ye=o.unstable_shouldYield,Ke=o.unstable_requestPaint,Xe=o.unstable_now,Ze=o.unstable_getCurrentPriorityLevel,Je=o.unstable_ImmediatePriority,et=o.unstable_UserBlockingPriority,tt=o.unstable_NormalPriority,nt=o.unstable_LowPriority,rt=o.unstable_IdlePriority,ot=null,at=null,it=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(lt(e)/ut|0)|0},lt=Math.log,ut=Math.LN2,st=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ft(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,i=268435455&n;if(0!==i){var l=i&~o;0!==l?r=dt(l):0!==(a&=i)&&(r=dt(a))}else 0!==(i=n&~o)?r=dt(i):0!==a&&(r=dt(a));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&o)&&((o=r&-r)>=(a=t&-t)||16===o&&4194240&a))return t;if(4&r&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-it(t)),r|=e[n],t&=~o;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=st;return!(4194240&(st<<=1))&&(st=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function vt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),o=1<<r;o&t|e[r]&t&&(e[r]|=t),n&=~o}}var bt=0;function wt(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var xt,kt,St,Et,Ct,Nt=!1,_t=[],Tt=null,Pt=null,jt=null,Lt=new Map,zt=new Map,Ot=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Dt(e,t){switch(e){case"focusin":case"focusout":Tt=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":jt=null;break;case"pointerover":case"pointerout":Lt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":zt.delete(t.pointerId)}}function Rt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[o]},null!==t&&null!==(t=wo(t))&&kt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function It(e){var t=bo(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void Ct(e.priority,function(){St(n)})}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=wo(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function At(e,t,n){Ft(e)&&n.delete(t)}function Ut(){Nt=!1,null!==Tt&&Ft(Tt)&&(Tt=null),null!==Pt&&Ft(Pt)&&(Pt=null),null!==jt&&Ft(jt)&&(jt=null),Lt.forEach(At),zt.forEach(At)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,Nt||(Nt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Ut)))}function Ht(e){function t(t){return Bt(t,e)}if(0<_t.length){Bt(_t[0],e);for(var n=1;n<_t.length;n++){var r=_t[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Tt&&Bt(Tt,e),null!==Pt&&Bt(Pt,e),null!==jt&&Bt(jt,e),Lt.forEach(t),zt.forEach(t),n=0;n<Ot.length;n++)(r=Ot[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)It(n),null===n.blockedOn&&Ot.shift()}var Wt=w.ReactCurrentBatchConfig,Vt=!0;function $t(e,t,n,r){var o=bt,a=Wt.transition;Wt.transition=null;try{bt=1,Gt(e,t,n,r)}finally{bt=o,Wt.transition=a}}function qt(e,t,n,r){var o=bt,a=Wt.transition;Wt.transition=null;try{bt=4,Gt(e,t,n,r)}finally{bt=o,Wt.transition=a}}function Gt(e,t,n,r){if(Vt){var o=Yt(e,t,n,r);if(null===o)Vr(e,t,r,Qt,n),Dt(e,r);else if(function(e,t,n,r,o){switch(t){case"focusin":return Tt=Rt(Tt,e,t,n,r,o),!0;case"dragenter":return Pt=Rt(Pt,e,t,n,r,o),!0;case"mouseover":return jt=Rt(jt,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return Lt.set(a,Rt(Lt.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,zt.set(a,Rt(zt.get(a)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r))r.stopPropagation();else if(Dt(e,r),4&t&&-1<Mt.indexOf(e)){for(;null!==o;){var a=wo(o);if(null!==a&&xt(a),null===(a=Yt(e,t,n,r))&&Vr(e,t,r,Qt,n),a===o)break;o=a}null!==o&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Qt=null;function Yt(e,t,n,r){if(Qt=null,null!==(e=bo(e=xe(r))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Qt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Xt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,o="value"in Xt?Xt.value:Xt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return Jt=o.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function on(e){function t(t,n,r,o,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return I(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,ln,un,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=on(sn),dn=I({},sn,{view:0,detail:0}),fn=on(dn),pn=I({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(an=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=an=0,un=e),an)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),hn=on(pn),mn=on(I({},pn,{dataTransfer:0})),gn=on(I({},dn,{relatedTarget:0})),yn=on(I({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=I({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=on(vn),wn=on(I({},sn,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return En}var Nn=I({},dn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_n=on(Nn),Tn=on(I({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=on(I({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),jn=on(I({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=I({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),zn=on(Ln),On=[9,13,27,32],Mn=c&&"CompositionEvent"in window,Dn=null;c&&"documentMode"in document&&(Dn=document.documentMode);var Rn=c&&"TextEvent"in window&&!Dn,In=c&&(!Mn||Dn&&8<Dn&&11>=Dn),Fn=String.fromCharCode(32),An=!1;function Un(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1,Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function $n(e,t,n,r){Ne(r),0<(t=qr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var qn=null,Gn=null;function Qn(e){Fr(e,0)}function Yn(e){if(G(xo(e)))return e}function Kn(e,t){if("change"===e)return t}var Xn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){qn&&(qn.detachEvent("onpropertychange",nr),Gn=qn=null)}function nr(e){if("value"===e.propertyName&&Yn(Gn)){var t=[];$n(t,Gn,e,xe(e)),Le(Qn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Gn=n,(qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Gn)}function ar(e,t){if("click"===e)return Yn(t)}function ir(e,t){if("input"===e||"change"===e)return Yn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var o=n[r];if(!d.call(t,o)||!lr(e[o],t[o]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=fr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=cr(n,a);var i=cr(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,vr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==gr||gr!==Q(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ur(vr,r)||(vr=r,0<(r=qr(yr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function xr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:xr("Animation","AnimationEnd"),animationiteration:xr("Animation","AnimationIteration"),animationstart:xr("Animation","AnimationStart"),transitionend:xr("Transition","TransitionEnd")},Sr={},Er={};function Cr(e){if(Sr[e])return Sr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Er)return Sr[e]=n[t];return e}c&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Nr=Cr("animationend"),_r=Cr("animationiteration"),Tr=Cr("animationstart"),Pr=Cr("transitionend"),jr=new Map,Lr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function zr(e,t){jr.set(e,t),u(t,[e])}for(var Or=0;Or<Lr.length;Or++){var Mr=Lr[Or];zr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}zr(Nr,"onAnimationEnd"),zr(_r,"onAnimationIteration"),zr(Tr,"onAnimationStart"),zr("dblclick","onDoubleClick"),zr("focusin","onFocus"),zr("focusout","onBlur"),zr(Pr,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Dr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Rr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Dr));function Ir(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,i,l,u,s){if(Be.apply(this,arguments),Re){if(!Re)throw Error(a(198));var c=Ie;Re=!1,Ie=null,Fe||(Fe=!0,Ae=c)}}(r,t,void 0,e),e.currentTarget=null}function Fr(e,t){t=!!(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;Ir(o,l,s),a=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;Ir(o,l,s),a=u}}}if(Fe)throw e=Ae,Fe=!1,Ae=null,e}function Ar(e,t){var n=t[go];void 0===n&&(n=t[go]=new Set);var r=e+"__bubble";n.has(r)||(Wr(t,e,2,!1),n.add(r))}function Ur(e,t,n){var r=0;t&&(r|=4),Wr(n,e,r,t)}var Br="_reactListening"+Math.random().toString(36).slice(2);function Hr(e){if(!e[Br]){e[Br]=!0,i.forEach(function(t){"selectionchange"!==t&&(Rr.has(t)||Ur(t,!1,e),Ur(t,!0,e))});var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Br]||(t[Br]=!0,Ur("selectionchange",!1,t))}}function Wr(e,t,n,r){switch(Kt(t)){case 1:var o=$t;break;case 4:o=qt;break;default:o=Gt}n=o.bind(null,t,n,e),o=void 0,!Oe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,o){var a=r;if(!(1&t||2&t||null===r))e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=bo(l)))return;if(5===(u=i.tag)||6===u){r=a=i;continue e}l=l.parentNode}}r=r.return}Le(function(){var r=a,o=xe(n),i=[];e:{var l=jr.get(e);if(void 0!==l){var u=cn,s=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=_n;break;case"focusin":s="focus",u=gn;break;case"focusout":s="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pn;break;case Nr:case _r:case Tr:u=yn;break;case Pr:u=jn;break;case"scroll":u=fn;break;case"wheel":u=zn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Tn}var c=!!(4&t),d=!c&&"scroll"===e,f=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==f&&null!=(m=ze(h,f))&&c.push($r(h,m,p))),d)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,o),i.push({event:l,listeners:c}))}}if(!(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||n===we||!(s=n.relatedTarget||n.fromElement)||!bo(s)&&!s[mo])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?bo(s):null)&&(s!==(d=He(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=hn,m="onMouseLeave",f="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Tn,m="onPointerLeave",f="onPointerEnter",h="pointer"),d=null==u?l:xo(u),p=null==s?l:xo(s),(l=new c(m,h+"leave",u,n,o)).target=d,l.relatedTarget=p,m=null,bo(o)===r&&((c=new c(f,h+"enter",s,n,o)).target=p,c.relatedTarget=d,m=c),d=m,u&&s)e:{for(f=s,h=0,p=c=u;p;p=Gr(p))h++;for(p=0,m=f;m;m=Gr(m))p++;for(;0<h-p;)c=Gr(c),h--;for(;0<p-h;)f=Gr(f),p--;for(;h--;){if(c===f||null!==f&&c===f.alternate)break e;c=Gr(c),f=Gr(f)}c=null}else c=null;null!==u&&Qr(i,l,u,c,!1),null!==s&&null!==d&&Qr(i,d,s,c,!0)}if("select"===(u=(l=r?xo(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Kn;else if(Vn(l))if(Xn)g=ir;else{g=or;var y=rr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=ar);switch(g&&(g=g(e,r))?$n(i,g,n,o):(y&&y(e,l,r),"focusout"===e&&(y=l._wrapperState)&&y.controlled&&"number"===l.type&&ee(l,"number",l.value)),y=r?xo(r):window,e){case"focusin":(Vn(y)||"true"===y.contentEditable)&&(gr=y,yr=r,vr=null);break;case"focusout":vr=yr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(i,n,o);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":wr(i,n,o)}var v;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Hn?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(In&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Hn&&(v=en()):(Zt="value"in(Xt=o)?Xt.value:Xt.textContent,Hn=!0)),0<(y=qr(r,b)).length&&(b=new wn(b,e,null,n,o),i.push({event:b,listeners:y}),(v||null!==(v=Bn(n)))&&(b.data=v))),(v=Rn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(An=!0,Fn);case"textInput":return(e=t.data)===Fn&&An?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Mn&&Un(e,t)?(e=en(),Jt=Zt=Xt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return In&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=qr(r,"onBeforeInput")).length&&(o=new wn("onBeforeInput","beforeinput",null,n,o),i.push({event:o,listeners:r}),o.data=v)}Fr(i,t)})}function $r(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=ze(e,n))&&r.unshift($r(e,a,o)),null!=(a=ze(e,t))&&r.push($r(e,a,o))),e=e.return}return r}function Gr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qr(e,t,n,r,o){for(var a=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,o?null!=(u=ze(n,a))&&i.unshift($r(n,u,l)):o||null!=(u=ze(n,a))&&i.push($r(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Yr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Yr,"\n").replace(Kr,"")}function Zr(e,t,n){if(t=Xr(t),Xr(e)!==t&&n)throw Error(a(425))}function Jr(){}var eo=null,to=null;function no(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ro="function"==typeof setTimeout?setTimeout:void 0,oo="function"==typeof clearTimeout?clearTimeout:void 0,ao="function"==typeof Promise?Promise:void 0,io="function"==typeof queueMicrotask?queueMicrotask:void 0!==ao?function(e){return ao.resolve(null).then(e).catch(lo)}:ro;function lo(e){setTimeout(function(){throw e})}function uo(e,t){var n=t,r=0;do{var o=n.nextSibling;if(e.removeChild(n),o&&8===o.nodeType)if("/$"===(n=o.data)){if(0===r)return e.removeChild(o),void Ht(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=o}while(n);Ht(t)}function so(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function co(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fo=Math.random().toString(36).slice(2),po="__reactFiber$"+fo,ho="__reactProps$"+fo,mo="__reactContainer$"+fo,go="__reactEvents$"+fo,yo="__reactListeners$"+fo,vo="__reactHandles$"+fo;function bo(e){var t=e[po];if(t)return t;for(var n=e.parentNode;n;){if(t=n[mo]||n[po]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=co(e);null!==e;){if(n=e[po])return n;e=co(e)}return t}n=(e=n).parentNode}return null}function wo(e){return!(e=e[po]||e[mo])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function ko(e){return e[ho]||null}var So=[],Eo=-1;function Co(e){return{current:e}}function No(e){0>Eo||(e.current=So[Eo],So[Eo]=null,Eo--)}function _o(e,t){Eo++,So[Eo]=e.current,e.current=t}var To={},Po=Co(To),jo=Co(!1),Lo=To;function zo(e,t){var n=e.type.contextTypes;if(!n)return To;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Oo(e){return null!=e.childContextTypes}function Mo(){No(jo),No(Po)}function Do(e,t,n){if(Po.current!==To)throw Error(a(168));_o(Po,t),_o(jo,n)}function Ro(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in t))throw Error(a(108,W(e)||"Unknown",o));return I({},n,r)}function Io(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||To,Lo=Po.current,_o(Po,e),_o(jo,jo.current),!0}function Fo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Ro(e,t,Lo),r.__reactInternalMemoizedMergedChildContext=e,No(jo),No(Po),_o(Po,e)):No(jo),_o(jo,n)}var Ao=null,Uo=!1,Bo=!1;function Ho(e){null===Ao?Ao=[e]:Ao.push(e)}function Wo(){if(!Bo&&null!==Ao){Bo=!0;var e=0,t=bt;try{var n=Ao;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ao=null,Uo=!1}catch(t){throw null!==Ao&&(Ao=Ao.slice(e+1)),Ge(Je,Wo),t}finally{bt=t,Bo=!1}}return null}var Vo=[],$o=0,qo=null,Go=0,Qo=[],Yo=0,Ko=null,Xo=1,Zo="";function Jo(e,t){Vo[$o++]=Go,Vo[$o++]=qo,qo=e,Go=t}function ea(e,t,n){Qo[Yo++]=Xo,Qo[Yo++]=Zo,Qo[Yo++]=Ko,Ko=e;var r=Xo;e=Zo;var o=32-it(r)-1;r&=~(1<<o),n+=1;var a=32-it(t)+o;if(30<a){var i=o-o%5;a=(r&(1<<i)-1).toString(32),r>>=i,o-=i,Xo=1<<32-it(t)+o|n<<o|r,Zo=a+e}else Xo=1<<a|n<<o|r,Zo=e}function ta(e){null!==e.return&&(Jo(e,1),ea(e,1,0))}function na(e){for(;e===qo;)qo=Vo[--$o],Vo[$o]=null,Go=Vo[--$o],Vo[$o]=null;for(;e===Ko;)Ko=Qo[--Yo],Qo[Yo]=null,Zo=Qo[--Yo],Qo[Yo]=null,Xo=Qo[--Yo],Qo[Yo]=null}var ra=null,oa=null,aa=!1,ia=null;function la(e,t){var n=Ls(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ua(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ra=e,oa=so(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ra=e,oa=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ko?{id:Xo,overflow:Zo}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ls(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ra=e,oa=null,!0);default:return!1}}function sa(e){return!(!(1&e.mode)||128&e.flags)}function ca(e){if(aa){var t=oa;if(t){var n=t;if(!ua(e,t)){if(sa(e))throw Error(a(418));t=so(n.nextSibling);var r=ra;t&&ua(e,t)?la(r,n):(e.flags=-4097&e.flags|2,aa=!1,ra=e)}}else{if(sa(e))throw Error(a(418));e.flags=-4097&e.flags|2,aa=!1,ra=e}}}function da(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ra=e}function fa(e){if(e!==ra)return!1;if(!aa)return da(e),aa=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!no(e.type,e.memoizedProps)),t&&(t=oa)){if(sa(e))throw pa(),Error(a(418));for(;t;)la(e,t),t=so(t.nextSibling)}if(da(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){oa=so(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}oa=null}}else oa=ra?so(e.stateNode.nextSibling):null;return!0}function pa(){for(var e=oa;e;)e=so(e.nextSibling)}function ha(){oa=ra=null,aa=!1}function ma(e){null===ia?ia=[e]:ia.push(e)}var ga=w.ReactCurrentBatchConfig;function ya(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=o.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function va(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ba(e){return(0,e._init)(e._payload)}function wa(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Os(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function l(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Is(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){var a=n.type;return a===S?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===z&&ba(a)===t.type)?((r=o(t,n.props)).ref=ya(e,t,n),r.return=e,r):((r=Ms(n.type,n.key,n.props,null,e.mode,r)).ref=ya(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Fs(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=Ds(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Is(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Ms(t.type,t.key,t.props,null,e.mode,n)).ref=ya(e,null,t),n.return=e,n;case k:return(t=Fs(t,e.mode,n)).return=e,t;case z:return f(e,(0,t._init)(t._payload),n)}if(te(t)||D(t))return(t=Ds(t,e.mode,n,null)).return=e,t;va(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===o?s(e,t,n,r):null;case k:return n.key===o?c(e,t,n,r):null;case z:return p(e,t,(o=n._init)(n._payload),r)}if(te(n)||D(n))return null!==o?null:d(e,t,n,r,null);va(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case x:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o);case z:return h(e,t,n,(0,r._init)(r._payload),o)}if(te(r)||D(r))return d(t,e=e.get(n)||null,r,o,null);va(t,r)}return null}function m(o,a,l,u){for(var s=null,c=null,d=a,m=a=0,g=null;null!==d&&m<l.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=p(o,d,l[m],u);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(o,d),a=i(y,a,m),null===c?s=y:c.sibling=y,c=y,d=g}if(m===l.length)return n(o,d),aa&&Jo(o,m),s;if(null===d){for(;m<l.length;m++)null!==(d=f(o,l[m],u))&&(a=i(d,a,m),null===c?s=d:c.sibling=d,c=d);return aa&&Jo(o,m),s}for(d=r(o,d);m<l.length;m++)null!==(g=h(d,o,m,l[m],u))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),a=i(g,a,m),null===c?s=g:c.sibling=g,c=g);return e&&d.forEach(function(e){return t(o,e)}),aa&&Jo(o,m),s}function g(o,l,u,s){var c=D(u);if("function"!=typeof c)throw Error(a(150));if(null==(u=c.call(u)))throw Error(a(151));for(var d=c=null,m=l,g=l=0,y=null,v=u.next();null!==m&&!v.done;g++,v=u.next()){m.index>g?(y=m,m=null):y=m.sibling;var b=p(o,m,v.value,s);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,g),null===d?c=b:d.sibling=b,d=b,m=y}if(v.done)return n(o,m),aa&&Jo(o,g),c;if(null===m){for(;!v.done;g++,v=u.next())null!==(v=f(o,v.value,s))&&(l=i(v,l,g),null===d?c=v:d.sibling=v,d=v);return aa&&Jo(o,g),c}for(m=r(o,m);!v.done;g++,v=u.next())null!==(v=h(m,o,g,v.value,s))&&(e&&null!==v.alternate&&m.delete(null===v.key?g:v.key),l=i(v,l,g),null===d?c=v:d.sibling=v,d=v);return e&&m.forEach(function(e){return t(o,e)}),aa&&Jo(o,g),c}return function e(r,a,i,u){if("object"==typeof i&&null!==i&&i.type===S&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case x:e:{for(var s=i.key,c=a;null!==c;){if(c.key===s){if((s=i.type)===S){if(7===c.tag){n(r,c.sibling),(a=o(c,i.props.children)).return=r,r=a;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===z&&ba(s)===c.type){n(r,c.sibling),(a=o(c,i.props)).ref=ya(r,c,i),a.return=r,r=a;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===S?((a=Ds(i.props.children,r.mode,u,i.key)).return=r,r=a):((u=Ms(i.type,i.key,i.props,null,r.mode,u)).ref=ya(r,a,i),u.return=r,r=u)}return l(r);case k:e:{for(c=i.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){n(r,a.sibling),(a=o(a,i.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Fs(i,r.mode,u)).return=r,r=a}return l(r);case z:return e(r,a,(c=i._init)(i._payload),u)}if(te(i))return m(r,a,i,u);if(D(i))return g(r,a,i,u);va(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==a&&6===a.tag?(n(r,a.sibling),(a=o(a,i)).return=r,r=a):(n(r,a),(a=Is(i,r.mode,u)).return=r,r=a),l(r)):n(r,a)}}var xa=wa(!0),ka=wa(!1),Sa=Co(null),Ea=null,Ca=null,Na=null;function _a(){Na=Ca=Ea=null}function Ta(e){var t=Sa.current;No(Sa),e._currentValue=t}function Pa(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function ja(e,t){Ea=e,Na=Ca=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(bl=!0),e.firstContext=null)}function La(e){var t=e._currentValue;if(Na!==e)if(e={context:e,memoizedValue:t,next:null},null===Ca){if(null===Ea)throw Error(a(308));Ca=e,Ea.dependencies={lanes:0,firstContext:e}}else Ca=Ca.next=e;return t}var za=null;function Oa(e){null===za?za=[e]:za.push(e)}function Ma(e,t,n,r){var o=t.interleaved;return null===o?(n.next=n,Oa(t)):(n.next=o.next,o.next=n),t.interleaved=n,Da(e,r)}function Da(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ra=!1;function Ia(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fa(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Aa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ua(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&Tu){var o=r.pending;return null===o?t.next=t:(t.next=o.next,o.next=t),r.pending=t,Da(e,n)}return null===(o=r.interleaved)?(t.next=t,Oa(r)):(t.next=o.next,o.next=t),r.interleaved=t,Da(e,n)}function Ba(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}function Ha(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Wa(e,t,n,r){var o=e.updateQueue;Ra=!1;var a=o.firstBaseUpdate,i=o.lastBaseUpdate,l=o.shared.pending;if(null!==l){o.shared.pending=null;var u=l,s=u.next;u.next=null,null===i?a=s:i.next=s,i=u;var c=e.alternate;null!==c&&(l=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===l?c.firstBaseUpdate=s:l.next=s,c.lastBaseUpdate=u)}if(null!==a){var d=o.baseState;for(i=0,c=s=u=null,l=a;;){var f=l.lane,p=l.eventTime;if((r&f)===f){null!==c&&(c=c.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(f=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,f);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(f="function"==typeof(h=m.payload)?h.call(p,d,f):h))break e;d=I({},d,f);break e;case 2:Ra=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(f=o.effects)?o.effects=[l]:f.push(l))}else p={eventTime:p,lane:f,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===c?(s=c=p,u=d):c=c.next=p,i|=f;if(null===(l=l.next)){if(null===(l=o.shared.pending))break;l=(f=l).next,f.next=null,o.lastBaseUpdate=f,o.shared.pending=null}}if(null===c&&(u=d),o.baseState=u,o.firstBaseUpdate=s,o.lastBaseUpdate=c,null!==(t=o.shared.interleaved)){o=t;do{i|=o.lane,o=o.next}while(o!==t)}else null===a&&(o.shared.lanes=0);Ru|=i,e.lanes=i,e.memoizedState=d}}function Va(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var $a={},qa=Co($a),Ga=Co($a),Qa=Co($a);function Ya(e){if(e===$a)throw Error(a(174));return e}function Ka(e,t){switch(_o(Qa,t),_o(Ga,e),_o(qa,$a),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}No(qa),_o(qa,t)}function Xa(){No(qa),No(Ga),No(Qa)}function Za(e){Ya(Qa.current);var t=Ya(qa.current),n=ue(t,e.type);t!==n&&(_o(Ga,e),_o(qa,n))}function Ja(e){Ga.current===e&&(No(qa),No(Ga))}var ei=Co(0);function ti(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(128&t.flags)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ni=[];function ri(){for(var e=0;e<ni.length;e++)ni[e]._workInProgressVersionPrimary=null;ni.length=0}var oi=w.ReactCurrentDispatcher,ai=w.ReactCurrentBatchConfig,ii=0,li=null,ui=null,si=null,ci=!1,di=!1,fi=0,pi=0;function hi(){throw Error(a(321))}function mi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function gi(e,t,n,r,o,i){if(ii=i,li=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,oi.current=null===e||null===e.memoizedState?Ji:el,e=n(r,o),di){i=0;do{if(di=!1,fi=0,25<=i)throw Error(a(301));i+=1,si=ui=null,t.updateQueue=null,oi.current=tl,e=n(r,o)}while(di)}if(oi.current=Zi,t=null!==ui&&null!==ui.next,ii=0,si=ui=li=null,ci=!1,t)throw Error(a(300));return e}function yi(){var e=0!==fi;return fi=0,e}function vi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===si?li.memoizedState=si=e:si=si.next=e,si}function bi(){if(null===ui){var e=li.alternate;e=null!==e?e.memoizedState:null}else e=ui.next;var t=null===si?li.memoizedState:si.next;if(null!==t)si=t,ui=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ui=e).memoizedState,baseState:ui.baseState,baseQueue:ui.baseQueue,queue:ui.queue,next:null},null===si?li.memoizedState=si=e:si=si.next=e}return si}function wi(e,t){return"function"==typeof t?t(e):t}function xi(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=ui,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){i=o.next,r=r.baseState;var u=l=null,s=null,c=i;do{var d=c.lane;if((ii&d)===d)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var f={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=f,l=r):s=s.next=f,li.lanes|=d,Ru|=d}c=c.next}while(null!==c&&c!==i);null===s?l=r:s.next=u,lr(r,t.memoizedState)||(bl=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){o=e;do{i=o.lane,li.lanes|=i,Ru|=i,o=o.next}while(o!==e)}else null===o&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ki(e){var t=bi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);lr(i,t.memoizedState)||(bl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Si(){}function Ei(e,t){var n=li,r=bi(),o=t(),i=!lr(r.memoizedState,o);if(i&&(r.memoizedState=o,bl=!0),r=r.queue,Ri(_i.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==si&&1&si.memoizedState.tag){if(n.flags|=2048,Li(9,Ni.bind(null,n,r,o,t),void 0,null),null===Pu)throw Error(a(349));30&ii||Ci(n,t,o)}return o}function Ci(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=li.updateQueue)?(t={lastEffect:null,stores:null},li.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ni(e,t,n,r){t.value=n,t.getSnapshot=r,Ti(t)&&Pi(e)}function _i(e,t,n){return n(function(){Ti(t)&&Pi(e)})}function Ti(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!lr(e,n)}catch(e){return!0}}function Pi(e){var t=Da(e,1);null!==t&&ns(t,e,1,-1)}function ji(e){var t=vi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:wi,lastRenderedState:e},t.queue=e,e=e.dispatch=Qi.bind(null,li,e),[t.memoizedState,e]}function Li(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=li.updateQueue)?(t={lastEffect:null,stores:null},li.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function zi(){return bi().memoizedState}function Oi(e,t,n,r){var o=vi();li.flags|=e,o.memoizedState=Li(1|t,n,void 0,void 0===r?null:r)}function Mi(e,t,n,r){var o=bi();r=void 0===r?null:r;var a=void 0;if(null!==ui){var i=ui.memoizedState;if(a=i.destroy,null!==r&&mi(r,i.deps))return void(o.memoizedState=Li(t,n,a,r))}li.flags|=e,o.memoizedState=Li(1|t,n,a,r)}function Di(e,t){return Oi(8390656,8,e,t)}function Ri(e,t){return Mi(2048,8,e,t)}function Ii(e,t){return Mi(4,2,e,t)}function Fi(e,t){return Mi(4,4,e,t)}function Ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ui(e,t,n){return n=null!=n?n.concat([e]):null,Mi(4,4,Ai.bind(null,t,e),n)}function Bi(){}function Hi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Wi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Vi(e,t,n){return 21&ii?(lr(n,t)||(n=mt(),li.lanes|=n,Ru|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,bl=!0),e.memoizedState=n)}function $i(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=ai.transition;ai.transition={};try{e(!1),t()}finally{bt=n,ai.transition=r}}function qi(){return bi().memoizedState}function Gi(e,t,n){var r=ts(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Yi(e)?Ki(t,n):null!==(n=Ma(e,t,n,r))&&(ns(n,e,r,es()),Xi(n,t,r))}function Qi(e,t,n){var r=ts(e),o={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yi(e))Ki(t,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=a(i,n);if(o.hasEagerState=!0,o.eagerState=l,lr(l,i)){var u=t.interleaved;return null===u?(o.next=o,Oa(t)):(o.next=u.next,u.next=o),void(t.interleaved=o)}}catch(e){}null!==(n=Ma(e,t,o,r))&&(ns(n,e,r,o=es()),Xi(n,t,r))}}function Yi(e){var t=e.alternate;return e===li||null!==t&&t===li}function Ki(e,t){di=ci=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Xi(e,t,n){if(4194240&n){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}var Zi={readContext:La,useCallback:hi,useContext:hi,useEffect:hi,useImperativeHandle:hi,useInsertionEffect:hi,useLayoutEffect:hi,useMemo:hi,useReducer:hi,useRef:hi,useState:hi,useDebugValue:hi,useDeferredValue:hi,useTransition:hi,useMutableSource:hi,useSyncExternalStore:hi,useId:hi,unstable_isNewReconciler:!1},Ji={readContext:La,useCallback:function(e,t){return vi().memoizedState=[e,void 0===t?null:t],e},useContext:La,useEffect:Di,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Oi(4194308,4,Ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Oi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Oi(4,2,e,t)},useMemo:function(e,t){var n=vi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=vi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Gi.bind(null,li,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vi().memoizedState=e},useState:ji,useDebugValue:Bi,useDeferredValue:function(e){return vi().memoizedState=e},useTransition:function(){var e=ji(!1),t=e[0];return e=$i.bind(null,e[1]),vi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=li,o=vi();if(aa){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Pu)throw Error(a(349));30&ii||Ci(r,t,n)}o.memoizedState=n;var i={value:n,getSnapshot:t};return o.queue=i,Di(_i.bind(null,r,i,e),[e]),r.flags|=2048,Li(9,Ni.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=vi(),t=Pu.identifierPrefix;if(aa){var n=Zo;t=":"+t+"R"+(n=(Xo&~(1<<32-it(Xo)-1)).toString(32)+n),0<(n=fi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=pi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},el={readContext:La,useCallback:Hi,useContext:La,useEffect:Ri,useImperativeHandle:Ui,useInsertionEffect:Ii,useLayoutEffect:Fi,useMemo:Wi,useReducer:xi,useRef:zi,useState:function(){return xi(wi)},useDebugValue:Bi,useDeferredValue:function(e){return Vi(bi(),ui.memoizedState,e)},useTransition:function(){return[xi(wi)[0],bi().memoizedState]},useMutableSource:Si,useSyncExternalStore:Ei,useId:qi,unstable_isNewReconciler:!1},tl={readContext:La,useCallback:Hi,useContext:La,useEffect:Ri,useImperativeHandle:Ui,useInsertionEffect:Ii,useLayoutEffect:Fi,useMemo:Wi,useReducer:ki,useRef:zi,useState:function(){return ki(wi)},useDebugValue:Bi,useDeferredValue:function(e){var t=bi();return null===ui?t.memoizedState=e:Vi(t,ui.memoizedState,e)},useTransition:function(){return[ki(wi)[0],bi().memoizedState]},useMutableSource:Si,useSyncExternalStore:Ei,useId:qi,unstable_isNewReconciler:!1};function nl(e,t){if(e&&e.defaultProps){for(var n in t=I({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function rl(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:I({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ol={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=es(),o=ts(e),a=Aa(r,o);a.payload=t,null!=n&&(a.callback=n),null!==(t=Ua(e,a,o))&&(ns(t,e,o,r),Ba(t,e,o))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=es(),o=ts(e),a=Aa(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),null!==(t=Ua(e,a,o))&&(ns(t,e,o,r),Ba(t,e,o))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=es(),r=ts(e),o=Aa(n,r);o.tag=2,null!=t&&(o.callback=t),null!==(t=Ua(e,o,r))&&(ns(t,e,r,n),Ba(t,e,r))}};function al(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(o,a))}function il(e,t,n){var r=!1,o=To,a=t.contextType;return"object"==typeof a&&null!==a?a=La(a):(o=Oo(t)?Lo:Po.current,a=(r=null!=(r=t.contextTypes))?zo(e,o):To),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ol,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ll(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ol.enqueueReplaceState(t,t.state,null)}function ul(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs={},Ia(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=La(a):(a=Oo(t)?Lo:Po.current,o.context=zo(e,a)),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(rl(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ol.enqueueReplaceState(o,o.state,null),Wa(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function sl(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o,digest:null}}function cl(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function dl(e,t){try{console.error(t.value)}catch(e){setTimeout(function(){throw e})}}var fl="function"==typeof WeakMap?WeakMap:Map;function pl(e,t,n){(n=Aa(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vu||(Vu=!0,$u=r),dl(0,t)},n}function hl(e,t,n){(n=Aa(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)},n.callback=function(){dl(0,t)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){dl(0,t),"function"!=typeof r&&(null===qu?qu=new Set([this]):qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ml(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new fl;var o=new Set;r.set(t,o)}else void 0===(o=r.get(t))&&(o=new Set,r.set(t,o));o.has(n)||(o.add(n),e=Cs.bind(null,e,t,n),t.then(e,e))}function gl(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yl(e,t,n,r,o){return 1&e.mode?(e.flags|=65536,e.lanes=o,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Aa(-1,1)).tag=2,Ua(n,t,1))),n.lanes|=1),e)}var vl=w.ReactCurrentOwner,bl=!1;function wl(e,t,n,r){t.child=null===e?ka(t,null,n,r):xa(t,e.child,n,r)}function xl(e,t,n,r,o){n=n.render;var a=t.ref;return ja(t,o),r=gi(e,t,n,r,a,o),n=yi(),null===e||bl?(aa&&n&&ta(t),t.flags|=1,wl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,Vl(e,t,o))}function kl(e,t,n,r,o){if(null===e){var a=n.type;return"function"!=typeof a||zs(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ms(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Sl(e,t,a,r,o))}if(a=e.child,0===(e.lanes&o)){var i=a.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(i,r)&&e.ref===t.ref)return Vl(e,t,o)}return t.flags|=1,(e=Os(a,r)).ref=t.ref,e.return=t,t.child=e}function Sl(e,t,n,r,o){if(null!==e){var a=e.memoizedProps;if(ur(a,r)&&e.ref===t.ref){if(bl=!1,t.pendingProps=r=a,0===(e.lanes&o))return t.lanes=e.lanes,Vl(e,t,o);131072&e.flags&&(bl=!0)}}return Nl(e,t,n,r,o)}function El(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&t.mode){if(!(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_o(Ou,zu),zu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,_o(Ou,zu),zu|=r}else t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_o(Ou,zu),zu|=n;else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,_o(Ou,zu),zu|=r;return wl(e,t,o,n),t.child}function Cl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Nl(e,t,n,r,o){var a=Oo(n)?Lo:Po.current;return a=zo(t,a),ja(t,o),n=gi(e,t,n,r,a,o),r=yi(),null===e||bl?(aa&&r&&ta(t),t.flags|=1,wl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~o,Vl(e,t,o))}function _l(e,t,n,r,o){if(Oo(n)){var a=!0;Io(t)}else a=!1;if(ja(t,o),null===t.stateNode)Wl(e,t),il(t,n,r),ul(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?La(s):zo(t,s=Oo(n)?Lo:Po.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&ll(t,i,r,s),Ra=!1;var f=t.memoizedState;i.state=f,Wa(t,r,i,o),u=t.memoizedState,l!==r||f!==u||jo.current||Ra?("function"==typeof c&&(rl(t,n,c,r),u=t.memoizedState),(l=Ra||al(t,n,l,r,f,u,s))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Fa(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:nl(t.type,l),i.props=s,d=t.pendingProps,f=i.context,u="object"==typeof(u=n.contextType)&&null!==u?La(u):zo(t,u=Oo(n)?Lo:Po.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==d||f!==u)&&ll(t,i,r,u),Ra=!1,f=t.memoizedState,i.state=f,Wa(t,r,i,o);var h=t.memoizedState;l!==d||f!==h||jo.current||Ra?("function"==typeof p&&(rl(t,n,p,r),h=t.memoizedState),(s=Ra||al(t,n,s,r,f,h,u)||!1)?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return Tl(e,t,n,r,a,o)}function Tl(e,t,n,r,o,a){Cl(e,t);var i=!!(128&t.flags);if(!r&&!i)return o&&Fo(t,n,!1),Vl(e,t,a);r=t.stateNode,vl.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=xa(t,e.child,null,a),t.child=xa(t,null,l,a)):wl(e,t,l,a),t.memoizedState=r.state,o&&Fo(t,n,!0),t.child}function Pl(e){var t=e.stateNode;t.pendingContext?Do(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Do(0,t.context,!1),Ka(e,t.containerInfo)}function jl(e,t,n,r,o){return ha(),ma(o),t.flags|=256,wl(e,t,n,r),t.child}var Ll,zl,Ol,Ml,Dl={dehydrated:null,treeContext:null,retryLane:0};function Rl(e){return{baseLanes:e,cachePool:null,transitions:null}}function Il(e,t,n){var r,o=t.pendingProps,i=ei.current,l=!1,u=!!(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&!!(2&i)),r?(l=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),_o(ei,1&i),null===e)return ca(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(1&t.mode?"$!"===e.data?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(u=o.children,e=o.fallback,l?(o=t.mode,l=t.child,u={mode:"hidden",children:u},1&o||null===l?l=Rs(u,o,0,null):(l.childLanes=0,l.pendingProps=u),e=Ds(e,o,n,null),l.return=t,e.return=t,l.sibling=e,t.child=l,t.child.memoizedState=Rl(n),t.memoizedState=Dl,e):Fl(t,u));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,o,i,l){if(n)return 256&t.flags?(t.flags&=-257,Al(e,t,l,r=cl(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,o=t.mode,r=Rs({mode:"visible",children:r.children},o,0,null),(i=Ds(i,o,l,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,1&t.mode&&xa(t,e.child,null,l),t.child.memoizedState=Rl(l),t.memoizedState=Dl,i);if(!(1&t.mode))return Al(e,t,l,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var u=r.dgst;return r=u,Al(e,t,l,r=cl(i=Error(a(419)),r,void 0))}if(u=0!==(l&e.childLanes),bl||u){if(null!==(r=Pu)){switch(l&-l){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!==(o&(r.suspendedLanes|l))?0:o)&&o!==i.retryLane&&(i.retryLane=o,Da(e,o),ns(r,e,o,-1))}return ms(),Al(e,t,l,r=cl(Error(a(421))))}return"$?"===o.data?(t.flags|=128,t.child=e.child,t=_s.bind(null,e),o._reactRetry=t,null):(e=i.treeContext,oa=so(o.nextSibling),ra=t,aa=!0,ia=null,null!==e&&(Qo[Yo++]=Xo,Qo[Yo++]=Zo,Qo[Yo++]=Ko,Xo=e.id,Zo=e.overflow,Ko=t),(t=Fl(t,r.children)).flags|=4096,t)}(e,t,u,o,r,i,n);if(l){l=o.fallback,u=t.mode,r=(i=e.child).sibling;var s={mode:"hidden",children:o.children};return 1&u||t.child===i?(o=Os(i,s)).subtreeFlags=14680064&i.subtreeFlags:((o=t.child).childLanes=0,o.pendingProps=s,t.deletions=null),null!==r?l=Os(r,l):(l=Ds(l,u,n,null)).flags|=2,l.return=t,o.return=t,o.sibling=l,t.child=o,o=l,l=t.child,u=null===(u=e.child.memoizedState)?Rl(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},l.memoizedState=u,l.childLanes=e.childLanes&~n,t.memoizedState=Dl,o}return e=(l=e.child).sibling,o=Os(l,{mode:"visible",children:o.children}),!(1&t.mode)&&(o.lanes=n),o.return=t,o.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=o,t.memoizedState=null,o}function Fl(e,t){return(t=Rs({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Al(e,t,n,r){return null!==r&&ma(r),xa(t,e.child,null,n),(e=Fl(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ul(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Pa(e.return,t,n)}function Bl(e,t,n,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=o)}function Hl(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(wl(e,t,r.children,n),2&(r=ei.current))r=1&r|2,t.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ul(e,n,t);else if(19===e.tag)Ul(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_o(ei,r),1&t.mode)switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===ti(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Bl(t,!1,o,n,a);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ti(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Bl(t,!0,n,null,a);break;case"together":Bl(t,!1,null,null,void 0);break;default:t.memoizedState=null}else t.memoizedState=null;return t.child}function Wl(e,t){!(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ru|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Os(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Os(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function $l(e,t){if(!aa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ql(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var o=e.child;null!==o;)n|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)n|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Gl(e,t,n){var r=t.pendingProps;switch(na(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return ql(t),null;case 1:case 17:return Oo(t.type)&&Mo(),ql(t),null;case 3:return r=t.stateNode,Xa(),No(jo),No(Po),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fa(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&t.flags)||(t.flags|=1024,null!==ia&&(is(ia),ia=null))),zl(e,t),ql(t),null;case 5:Ja(t);var o=Ya(Qa.current);if(n=t.type,null!==e&&null!=t.stateNode)Ol(e,t,n,r,o),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return ql(t),null}if(e=Ya(qa.current),fa(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[po]=t,r[ho]=i,e=!!(1&t.mode),n){case"dialog":Ar("cancel",r),Ar("close",r);break;case"iframe":case"object":case"embed":Ar("load",r);break;case"video":case"audio":for(o=0;o<Dr.length;o++)Ar(Dr[o],r);break;case"source":Ar("error",r);break;case"img":case"image":case"link":Ar("error",r),Ar("load",r);break;case"details":Ar("toggle",r);break;case"input":K(r,i),Ar("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Ar("invalid",r);break;case"textarea":oe(r,i),Ar("invalid",r)}for(var u in ve(n,i),o=null,i)if(i.hasOwnProperty(u)){var s=i[u];"children"===u?"string"==typeof s?r.textContent!==s&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,s,e),o=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,s,e),o=["children",""+s]):l.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Ar("scroll",r)}switch(n){case"input":q(r),J(r,i,!0);break;case"textarea":q(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Jr)}r=o,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[po]=t,e[ho]=r,Ll(e,t,!1,!1),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":Ar("cancel",e),Ar("close",e),o=r;break;case"iframe":case"object":case"embed":Ar("load",e),o=r;break;case"video":case"audio":for(o=0;o<Dr.length;o++)Ar(Dr[o],e);o=r;break;case"source":Ar("error",e),o=r;break;case"img":case"image":case"link":Ar("error",e),Ar("load",e),o=r;break;case"details":Ar("toggle",e),o=r;break;case"input":K(e,r),o=Y(e,r),Ar("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=I({},r,{value:void 0}),Ar("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Ar("invalid",e)}for(i in ve(n,o),s=o)if(s.hasOwnProperty(i)){var c=s[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===i?"string"==typeof c?("textarea"!==n||""!==c)&&fe(e,c):"number"==typeof c&&fe(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(l.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Ar("scroll",e):null!=c&&b(e,i,c,u))}switch(n){case"input":q(e),J(e,r,!1);break;case"textarea":q(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return ql(t),null;case 6:if(e&&null!=t.stateNode)Ml(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));if(n=Ya(Qa.current),Ya(qa.current),fa(t)){if(r=t.stateNode,n=t.memoizedProps,r[po]=t,(i=r.nodeValue!==n)&&null!==(e=ra))switch(e.tag){case 3:Zr(r.nodeValue,n,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,!!(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[po]=t,t.stateNode=r}return ql(t),null;case 13:if(No(ei),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aa&&null!==oa&&1&t.mode&&!(128&t.flags))pa(),ha(),t.flags|=98560,i=!1;else if(i=fa(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(a(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(a(317));i[po]=t}else ha(),!(128&t.flags)&&(t.memoizedState=null),t.flags|=4;ql(t),i=!1}else null!==ia&&(is(ia),ia=null),i=!0;if(!i)return 65536&t.flags?t:null}return 128&t.flags?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,1&t.mode&&(null===e||1&ei.current?0===Mu&&(Mu=3):ms())),null!==t.updateQueue&&(t.flags|=4),ql(t),null);case 4:return Xa(),zl(e,t),null===e&&Hr(t.stateNode.containerInfo),ql(t),null;case 10:return Ta(t.type._context),ql(t),null;case 19:if(No(ei),null===(i=t.memoizedState))return ql(t),null;if(r=!!(128&t.flags),null===(u=i.rendering))if(r)$l(i,!1);else{if(0!==Mu||null!==e&&128&e.flags)for(e=t.child;null!==e;){if(null!==(u=ti(e))){for(t.flags|=128,$l(i,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(u=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=u.childLanes,i.lanes=u.lanes,i.child=u.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=u.memoizedProps,i.memoizedState=u.memoizedState,i.updateQueue=u.updateQueue,i.type=u.type,e=u.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return _o(ei,1&ei.current|2),t.child}e=e.sibling}null!==i.tail&&Xe()>Hu&&(t.flags|=128,r=!0,$l(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ti(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),$l(i,!0),null===i.tail&&"hidden"===i.tailMode&&!u.alternate&&!aa)return ql(t),null}else 2*Xe()-i.renderingStartTime>Hu&&1073741824!==n&&(t.flags|=128,r=!0,$l(i,!1),t.lanes=4194304);i.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=i.last)?n.sibling=u:t.child=u,i.last=u)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Xe(),t.sibling=null,n=ei.current,_o(ei,r?1&n|2:1&n),t):(ql(t),null);case 22:case 23:return ds(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&1&t.mode?!!(1073741824&zu)&&(ql(t),6&t.subtreeFlags&&(t.flags|=8192)):ql(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Ql(e,t){switch(na(t),t.tag){case 1:return Oo(t.type)&&Mo(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Xa(),No(jo),No(Po),ri(),65536&(e=t.flags)&&!(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Ja(t),null;case 13:if(No(ei),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));ha()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return No(ei),null;case 4:return Xa(),null;case 10:return Ta(t.type._context),null;case 22:case 23:return ds(),null;default:return null}}Ll=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},zl=function(){},Ol=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Ya(qa.current);var a,i=null;switch(n){case"input":o=Y(e,o),r=Y(e,r),i=[];break;case"select":o=I({},o,{value:void 0}),r=I({},r,{value:void 0}),i=[];break;case"textarea":o=re(e,o),r=re(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ve(n,r),n=null,o)if(!r.hasOwnProperty(c)&&o.hasOwnProperty(c)&&null!=o[c])if("style"===c){var u=o[c];for(a in u)u.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(l.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var s=r[c];if(u=null!=o?o[c]:void 0,r.hasOwnProperty(c)&&s!==u&&(null!=s||null!=u))if("style"===c)if(u){for(a in u)!u.hasOwnProperty(a)||s&&s.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in s)s.hasOwnProperty(a)&&u[a]!==s[a]&&(n||(n={}),n[a]=s[a])}else n||(i||(i=[]),i.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(i=i||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(l.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&Ar("scroll",e),i||u===s||(i=[])):(i=i||[]).push(c,s))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Ml=function(e,t,n,r){n!==r&&(t.flags|=4)};var Yl=!1,Kl=!1,Xl="function"==typeof WeakSet?WeakSet:Set,Zl=null;function Jl(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Es(e,t,n)}else n.current=null}function eu(e,t,n){try{n()}catch(n){Es(e,t,n)}}var tu=!1;function nu(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&eu(t,n,a)}o=o.next}while(o!==r)}}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ou(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function au(e){var t=e.alternate;null!==t&&(e.alternate=null,au(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[po],delete t[ho],delete t[go],delete t[yo],delete t[vo]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function lu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}var cu=null,du=!1;function fu(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(at&&"function"==typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(ot,n)}catch(e){}switch(n.tag){case 5:Kl||Jl(n,t);case 6:var r=cu,o=du;cu=null,fu(e,t,n),du=o,null!==(cu=r)&&(du?(e=cu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cu.removeChild(n.stateNode));break;case 18:null!==cu&&(du?(e=cu,n=n.stateNode,8===e.nodeType?uo(e.parentNode,n):1===e.nodeType&&uo(e,n),Ht(e)):uo(cu,n.stateNode));break;case 4:r=cu,o=du,cu=n.stateNode.containerInfo,du=!0,fu(e,t,n),cu=r,du=o;break;case 0:case 11:case 14:case 15:if(!Kl&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){o=r=r.next;do{var a=o,i=a.destroy;a=a.tag,void 0!==i&&(2&a||4&a)&&eu(n,t,i),o=o.next}while(o!==r)}fu(e,t,n);break;case 1:if(!Kl&&(Jl(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Es(n,t,e)}fu(e,t,n);break;case 21:fu(e,t,n);break;case 22:1&n.mode?(Kl=(r=Kl)||null!==n.memoizedState,fu(e,t,n),Kl=r):fu(e,t,n);break;default:fu(e,t,n)}}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xl),t.forEach(function(t){var r=Ts.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))})}}function mu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var o=n[r];try{var i=e,l=t,u=l;e:for(;null!==u;){switch(u.tag){case 5:cu=u.stateNode,du=!1;break e;case 3:case 4:cu=u.stateNode.containerInfo,du=!0;break e}u=u.return}if(null===cu)throw Error(a(160));pu(i,l,o),cu=null,du=!1;var s=o.alternate;null!==s&&(s.return=null),o.return=null}catch(e){Es(o,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),yu(e),4&r){try{nu(3,e,e.return),ru(3,e)}catch(t){Es(e,e.return,t)}try{nu(5,e,e.return)}catch(t){Es(e,e.return,t)}}break;case 1:mu(t,e),yu(e),512&r&&null!==n&&Jl(n,n.return);break;case 5:if(mu(t,e),yu(e),512&r&&null!==n&&Jl(n,n.return),32&e.flags){var o=e.stateNode;try{fe(o,"")}catch(t){Es(e,e.return,t)}}if(4&r&&null!=(o=e.stateNode)){var i=e.memoizedProps,l=null!==n?n.memoizedProps:i,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===i.type&&null!=i.name&&X(o,i),be(u,l);var c=be(u,i);for(l=0;l<s.length;l+=2){var d=s[l],f=s[l+1];"style"===d?ge(o,f):"dangerouslySetInnerHTML"===d?de(o,f):"children"===d?fe(o,f):b(o,d,f,c)}switch(u){case"input":Z(o,i);break;case"textarea":ae(o,i);break;case"select":var p=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!i.multiple;var h=i.value;null!=h?ne(o,!!i.multiple,h,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(o,!!i.multiple,i.defaultValue,!0):ne(o,!!i.multiple,i.multiple?[]:"",!1))}o[ho]=i}catch(t){Es(e,e.return,t)}}break;case 6:if(mu(t,e),yu(e),4&r){if(null===e.stateNode)throw Error(a(162));o=e.stateNode,i=e.memoizedProps;try{o.nodeValue=i}catch(t){Es(e,e.return,t)}}break;case 3:if(mu(t,e),yu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(t){Es(e,e.return,t)}break;case 4:default:mu(t,e),yu(e);break;case 13:mu(t,e),yu(e),8192&(o=e.child).flags&&(i=null!==o.memoizedState,o.stateNode.isHidden=i,!i||null!==o.alternate&&null!==o.alternate.memoizedState||(Bu=Xe())),4&r&&hu(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Kl=(c=Kl)||d,mu(t,e),Kl=c):mu(t,e),yu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&1&e.mode)for(Zl=e,d=e.child;null!==d;){for(f=Zl=d;null!==Zl;){switch(h=(p=Zl).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:Jl(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Es(r,n,e)}}break;case 5:Jl(p,p.return);break;case 22:if(null!==p.memoizedState){xu(f);continue}}null!==h?(h.return=p,Zl=h):xu(f)}d=d.sibling}e:for(d=null,f=e;;){if(5===f.tag){if(null===d){d=f;try{o=f.stateNode,c?"function"==typeof(i=o.style).setProperty?i.setProperty("display","none","important"):i.display="none":(u=f.stateNode,l=null!=(s=f.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=me("display",l))}catch(t){Es(e,e.return,t)}}}else if(6===f.tag){if(null===d)try{f.stateNode.nodeValue=c?"":f.memoizedProps}catch(t){Es(e,e.return,t)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:mu(t,e),yu(e),4&r&&hu(e);case 21:}}function yu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(fe(o,""),r.flags&=-33),su(e,lu(e),o);break;case 3:case 4:var i=r.stateNode.containerInfo;uu(e,lu(e),i);break;default:throw Error(a(161))}}catch(t){Es(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function vu(e,t,n){Zl=e,bu(e,t,n)}function bu(e,t,n){for(var r=!!(1&e.mode);null!==Zl;){var o=Zl,a=o.child;if(22===o.tag&&r){var i=null!==o.memoizedState||Yl;if(!i){var l=o.alternate,u=null!==l&&null!==l.memoizedState||Kl;l=Yl;var s=Kl;if(Yl=i,(Kl=u)&&!s)for(Zl=o;null!==Zl;)u=(i=Zl).child,22===i.tag&&null!==i.memoizedState?ku(o):null!==u?(u.return=i,Zl=u):ku(o);for(;null!==a;)Zl=a,bu(a,t,n),a=a.sibling;Zl=o,Yl=l,Kl=s}wu(e)}else 8772&o.subtreeFlags&&null!==a?(a.return=o,Zl=a):wu(e)}}function wu(e){for(;null!==Zl;){var t=Zl;if(8772&t.flags){var n=t.alternate;try{if(8772&t.flags)switch(t.tag){case 0:case 11:case 15:Kl||ru(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Kl)if(null===n)r.componentDidMount();else{var o=t.elementType===t.type?n.memoizedProps:nl(t.type,n.memoizedProps);r.componentDidUpdate(o,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Va(t,i,r);break;case 3:var l=t.updateQueue;if(null!==l){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Va(t,l,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var f=d.dehydrated;null!==f&&Ht(f)}}}break;default:throw Error(a(163))}Kl||512&t.flags&&ou(t)}catch(e){Es(t,t.return,e)}}if(t===e){Zl=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zl=n;break}Zl=t.return}}function xu(e){for(;null!==Zl;){var t=Zl;if(t===e){Zl=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zl=n;break}Zl=t.return}}function ku(e){for(;null!==Zl;){var t=Zl;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ru(4,t)}catch(e){Es(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var o=t.return;try{r.componentDidMount()}catch(e){Es(t,o,e)}}var a=t.return;try{ou(t)}catch(e){Es(t,a,e)}break;case 5:var i=t.return;try{ou(t)}catch(e){Es(t,i,e)}}}catch(e){Es(t,t.return,e)}if(t===e){Zl=null;break}var l=t.sibling;if(null!==l){l.return=t.return,Zl=l;break}Zl=t.return}}var Su,Eu=Math.ceil,Cu=w.ReactCurrentDispatcher,Nu=w.ReactCurrentOwner,_u=w.ReactCurrentBatchConfig,Tu=0,Pu=null,ju=null,Lu=0,zu=0,Ou=Co(0),Mu=0,Du=null,Ru=0,Iu=0,Fu=0,Au=null,Uu=null,Bu=0,Hu=1/0,Wu=null,Vu=!1,$u=null,qu=null,Gu=!1,Qu=null,Yu=0,Ku=0,Xu=null,Zu=-1,Ju=0;function es(){return 6&Tu?Xe():-1!==Zu?Zu:Zu=Xe()}function ts(e){return 1&e.mode?2&Tu&&0!==Lu?Lu&-Lu:null!==ga.transition?(0===Ju&&(Ju=mt()),Ju):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Kt(e.type):1}function ns(e,t,n,r){if(50<Ku)throw Ku=0,Xu=null,Error(a(185));yt(e,n,r),2&Tu&&e===Pu||(e===Pu&&(!(2&Tu)&&(Iu|=n),4===Mu&&ls(e,Lu)),rs(e,r),1===n&&0===Tu&&!(1&t.mode)&&(Hu=Xe()+500,Uo&&Wo()))}function rs(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-it(a),l=1<<i,u=o[i];-1===u?0!==(l&n)&&0===(l&r)||(o[i]=pt(l,t)):u<=t&&(e.expiredLanes|=l),a&=~l}}(e,t);var r=ft(e,e===Pu?Lu:0);if(0===r)null!==n&&Qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Qe(n),1===t)0===e.tag?function(e){Uo=!0,Ho(e)}(us.bind(null,e)):Ho(us.bind(null,e)),io(function(){!(6&Tu)&&Wo()}),n=null;else{switch(wt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Ps(n,os.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function os(e,t){if(Zu=-1,Ju=0,6&Tu)throw Error(a(327));var n=e.callbackNode;if(ks()&&e.callbackNode!==n)return null;var r=ft(e,e===Pu?Lu:0);if(0===r)return null;if(30&r||0!==(r&e.expiredLanes)||t)t=gs(e,r);else{t=r;var o=Tu;Tu|=2;var i=hs();for(Pu===e&&Lu===t||(Wu=null,Hu=Xe()+500,fs(e,t));;)try{vs();break}catch(t){ps(e,t)}_a(),Cu.current=i,Tu=o,null!==ju?t=0:(Pu=null,Lu=0,t=Mu)}if(0!==t){if(2===t&&0!==(o=ht(e))&&(r=o,t=as(e,o)),1===t)throw n=Du,fs(e,0),ls(e,r),rs(e,Xe()),n;if(6===t)ls(e,r);else{if(o=e.current.alternate,!(30&r||function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var o=n[r],a=o.getSnapshot;o=o.value;try{if(!lr(a(),o))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(o)||(t=gs(e,r),2===t&&(i=ht(e),0!==i&&(r=i,t=as(e,i))),1!==t)))throw n=Du,fs(e,0),ls(e,r),rs(e,Xe()),n;switch(e.finishedWork=o,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:xs(e,Uu,Wu);break;case 3:if(ls(e,r),(130023424&r)===r&&10<(t=Bu+500-Xe())){if(0!==ft(e,0))break;if(((o=e.suspendedLanes)&r)!==r){es(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(xs.bind(null,e,Uu,Wu),t);break}xs(e,Uu,Wu);break;case 4:if(ls(e,r),(4194240&r)===r)break;for(t=e.eventTimes,o=-1;0<r;){var l=31-it(r);i=1<<l,(l=t[l])>o&&(o=l),r&=~i}if(r=o,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Eu(r/1960))-r)){e.timeoutHandle=ro(xs.bind(null,e,Uu,Wu),r);break}xs(e,Uu,Wu);break;default:throw Error(a(329))}}}return rs(e,Xe()),e.callbackNode===n?os.bind(null,e):null}function as(e,t){var n=Au;return e.current.memoizedState.isDehydrated&&(fs(e,t).flags|=256),2!==(e=gs(e,t))&&(t=Uu,Uu=n,null!==t&&is(t)),e}function is(e){null===Uu?Uu=e:Uu.push.apply(Uu,e)}function ls(e,t){for(t&=~Fu,t&=~Iu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function us(e){if(6&Tu)throw Error(a(327));ks();var t=ft(e,0);if(!(1&t))return rs(e,Xe()),null;var n=gs(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=as(e,r))}if(1===n)throw n=Du,fs(e,0),ls(e,t),rs(e,Xe()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,xs(e,Uu,Wu),rs(e,Xe()),null}function ss(e,t){var n=Tu;Tu|=1;try{return e(t)}finally{0===(Tu=n)&&(Hu=Xe()+500,Uo&&Wo())}}function cs(e){null!==Qu&&0===Qu.tag&&!(6&Tu)&&ks();var t=Tu;Tu|=1;var n=_u.transition,r=bt;try{if(_u.transition=null,bt=1,e)return e()}finally{bt=r,_u.transition=n,!(6&(Tu=t))&&Wo()}}function ds(){zu=Ou.current,No(Ou)}function fs(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,oo(n)),null!==ju)for(n=ju.return;null!==n;){var r=n;switch(na(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Mo();break;case 3:Xa(),No(jo),No(Po),ri();break;case 5:Ja(r);break;case 4:Xa();break;case 13:case 19:No(ei);break;case 10:Ta(r.type._context);break;case 22:case 23:ds()}n=n.return}if(Pu=e,ju=e=Os(e.current,null),Lu=zu=t,Mu=0,Du=null,Fu=Iu=Ru=0,Uu=Au=null,null!==za){for(t=0;t<za.length;t++)if(null!==(r=(n=za[t]).interleaved)){n.interleaved=null;var o=r.next,a=n.pending;if(null!==a){var i=a.next;a.next=o,r.next=i}n.pending=r}za=null}return e}function ps(e,t){for(;;){var n=ju;try{if(_a(),oi.current=Zi,ci){for(var r=li.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}ci=!1}if(ii=0,si=ui=li=null,di=!1,fi=0,Nu.current=null,null===n||null===n.return){Mu=1,Du=t,ju=null;break}e:{var i=e,l=n.return,u=n,s=t;if(t=Lu,u.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,d=u,f=d.tag;if(!(1&d.mode||0!==f&&11!==f&&15!==f)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var h=gl(l);if(null!==h){h.flags&=-257,yl(h,l,u,0,t),1&h.mode&&ml(i,c,t),s=c;var m=(t=h).updateQueue;if(null===m){var g=new Set;g.add(s),t.updateQueue=g}else m.add(s);break e}if(!(1&t)){ml(i,c,t),ms();break e}s=Error(a(426))}else if(aa&&1&u.mode){var y=gl(l);if(null!==y){!(65536&y.flags)&&(y.flags|=256),yl(y,l,u,0,t),ma(sl(s,u));break e}}i=s=sl(s,u),4!==Mu&&(Mu=2),null===Au?Au=[i]:Au.push(i),i=l;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Ha(i,pl(0,s,t));break e;case 1:u=s;var v=i.type,b=i.stateNode;if(!(128&i.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==qu&&qu.has(b)))){i.flags|=65536,t&=-t,i.lanes|=t,Ha(i,hl(i,u,t));break e}}i=i.return}while(null!==i)}ws(n)}catch(e){t=e,ju===n&&null!==n&&(ju=n=n.return);continue}break}}function hs(){var e=Cu.current;return Cu.current=Zi,null===e?Zi:e}function ms(){0!==Mu&&3!==Mu&&2!==Mu||(Mu=4),null===Pu||!(268435455&Ru)&&!(268435455&Iu)||ls(Pu,Lu)}function gs(e,t){var n=Tu;Tu|=2;var r=hs();for(Pu===e&&Lu===t||(Wu=null,fs(e,t));;)try{ys();break}catch(t){ps(e,t)}if(_a(),Tu=n,Cu.current=r,null!==ju)throw Error(a(261));return Pu=null,Lu=0,Mu}function ys(){for(;null!==ju;)bs(ju)}function vs(){for(;null!==ju&&!Ye();)bs(ju)}function bs(e){var t=Su(e.alternate,e,zu);e.memoizedProps=e.pendingProps,null===t?ws(e):ju=t,Nu.current=null}function ws(e){var t=e;do{var n=t.alternate;if(e=t.return,32768&t.flags){if(null!==(n=Ql(n,t)))return n.flags&=32767,void(ju=n);if(null===e)return Mu=6,void(ju=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(n=Gl(n,t,zu)))return void(ju=n);if(null!==(t=t.sibling))return void(ju=t);ju=t=e}while(null!==t);0===Mu&&(Mu=5)}function xs(e,t,n){var r=bt,o=_u.transition;try{_u.transition=null,bt=1,function(e,t,n,r){do{ks()}while(null!==Qu);if(6&Tu)throw Error(a(327));n=e.finishedWork;var o=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var o=31-it(n),a=1<<o;t[o]=0,r[o]=-1,e[o]=-1,n&=~a}}(e,i),e===Pu&&(ju=Pu=null,Lu=0),!(2064&n.subtreeFlags)&&!(2064&n.flags)||Gu||(Gu=!0,Ps(tt,function(){return ks(),null})),i=!!(15990&n.flags),15990&n.subtreeFlags||i){i=_u.transition,_u.transition=null;var l=bt;bt=1;var u=Tu;Tu|=4,Nu.current=null,function(e,t){if(eo=Vt,pr(e=fr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var o=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var l=0,u=-1,s=-1,c=0,d=0,f=e,p=null;t:for(;;){for(var h;f!==n||0!==o&&3!==f.nodeType||(u=l+o),f!==i||0!==r&&3!==f.nodeType||(s=l+r),3===f.nodeType&&(l+=f.nodeValue.length),null!==(h=f.firstChild);)p=f,f=h;for(;;){if(f===e)break t;if(p===n&&++c===o&&(u=l),p===i&&++d===r&&(s=l),null!==(h=f.nextSibling))break;p=(f=p).parentNode}f=h}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(to={focusedElem:e,selectionRange:n},Vt=!1,Zl=t;null!==Zl;)if(e=(t=Zl).child,1028&t.subtreeFlags&&null!==e)e.return=t,Zl=e;else for(;null!==Zl;){t=Zl;try{var m=t.alternate;if(1024&t.flags)switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,v=t.stateNode,b=v.getSnapshotBeforeUpdate(t.elementType===t.type?g:nl(t.type,g),y);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(a(163))}}catch(e){Es(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Zl=e;break}Zl=t.return}m=tu,tu=!1}(e,n),gu(n,e),hr(to),Vt=!!eo,to=eo=null,e.current=n,vu(n,e,o),Ke(),Tu=u,bt=l,_u.transition=i}else e.current=n;if(Gu&&(Gu=!1,Qu=e,Yu=o),0===(i=e.pendingLanes)&&(qu=null),function(e){if(at&&"function"==typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(ot,e,void 0,!(128&~e.current.flags))}catch(e){}}(n.stateNode),rs(e,Xe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((o=t[n]).value,{componentStack:o.stack,digest:o.digest});if(Vu)throw Vu=!1,e=$u,$u=null,e;!!(1&Yu)&&0!==e.tag&&ks(),1&(i=e.pendingLanes)?e===Xu?Ku++:(Ku=0,Xu=e):Ku=0,Wo()}(e,t,n,r)}finally{_u.transition=o,bt=r}return null}function ks(){if(null!==Qu){var e=wt(Yu),t=_u.transition,n=bt;try{if(_u.transition=null,bt=16>e?16:e,null===Qu)var r=!1;else{if(e=Qu,Qu=null,Yu=0,6&Tu)throw Error(a(331));var o=Tu;for(Tu|=4,Zl=e.current;null!==Zl;){var i=Zl,l=i.child;if(16&Zl.flags){var u=i.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Zl=c;null!==Zl;){var d=Zl;switch(d.tag){case 0:case 11:case 15:nu(8,d,i)}var f=d.child;if(null!==f)f.return=d,Zl=f;else for(;null!==Zl;){var p=(d=Zl).sibling,h=d.return;if(au(d),d===c){Zl=null;break}if(null!==p){p.return=h,Zl=p;break}Zl=h}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Zl=i}}if(2064&i.subtreeFlags&&null!==l)l.return=i,Zl=l;else e:for(;null!==Zl;){if(2048&(i=Zl).flags)switch(i.tag){case 0:case 11:case 15:nu(9,i,i.return)}var v=i.sibling;if(null!==v){v.return=i.return,Zl=v;break e}Zl=i.return}}var b=e.current;for(Zl=b;null!==Zl;){var w=(l=Zl).child;if(2064&l.subtreeFlags&&null!==w)w.return=l,Zl=w;else e:for(l=b;null!==Zl;){if(2048&(u=Zl).flags)try{switch(u.tag){case 0:case 11:case 15:ru(9,u)}}catch(e){Es(u,u.return,e)}if(u===l){Zl=null;break e}var x=u.sibling;if(null!==x){x.return=u.return,Zl=x;break e}Zl=u.return}}if(Tu=o,Wo(),at&&"function"==typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(ot,e)}catch(e){}r=!0}return r}finally{bt=n,_u.transition=t}}return!1}function Ss(e,t,n){e=Ua(e,t=pl(0,t=sl(n,t),1),1),t=es(),null!==e&&(yt(e,1,t),rs(e,t))}function Es(e,t,n){if(3===e.tag)Ss(e,e,n);else for(;null!==t;){if(3===t.tag){Ss(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qu||!qu.has(r))){t=Ua(t,e=hl(t,e=sl(n,e),1),1),e=es(),null!==t&&(yt(t,1,e),rs(t,e));break}}t=t.return}}function Cs(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=es(),e.pingedLanes|=e.suspendedLanes&n,Pu===e&&(Lu&n)===n&&(4===Mu||3===Mu&&(130023424&Lu)===Lu&&500>Xe()-Bu?fs(e,0):Fu|=n),rs(e,t)}function Ns(e,t){0===t&&(1&e.mode?(t=ct,!(130023424&(ct<<=1))&&(ct=4194304)):t=1);var n=es();null!==(e=Da(e,t))&&(yt(e,t,n),rs(e,n))}function _s(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Ns(e,n)}function Ts(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(n=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Ns(e,n)}function Ps(e,t){return Ge(e,t)}function js(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ls(e,t,n,r){return new js(e,t,n,r)}function zs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Os(e,t){var n=e.alternate;return null===n?((n=Ls(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ms(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)zs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case S:return Ds(n.children,o,i,t);case E:l=8,o|=8;break;case C:return(e=Ls(12,n,t,2|o)).elementType=C,e.lanes=i,e;case P:return(e=Ls(13,n,t,o)).elementType=P,e.lanes=i,e;case j:return(e=Ls(19,n,t,o)).elementType=j,e.lanes=i,e;case O:return Rs(n,o,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case N:l=10;break e;case _:l=9;break e;case T:l=11;break e;case L:l=14;break e;case z:l=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Ls(l,n,t,o)).elementType=e,t.type=r,t.lanes=i,t}function Ds(e,t,n,r){return(e=Ls(7,e,r,t)).lanes=n,e}function Rs(e,t,n,r){return(e=Ls(22,e,r,t)).elementType=O,e.lanes=n,e.stateNode={isHidden:!1},e}function Is(e,t,n){return(e=Ls(6,e,null,t)).lanes=n,e}function Fs(e,t,n){return(t=Ls(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function As(e,t,n,r,o){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Us(e,t,n,r,o,a,i,l,u){return e=new As(e,t,n,l,u),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Ls(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ia(a),e}function Bs(e){if(!e)return To;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Oo(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Oo(n))return Ro(e,n,t)}return t}function Hs(e,t,n,r,o,a,i,l,u){return(e=Us(n,r,!0,e,0,a,0,l,u)).context=Bs(null),n=e.current,(a=Aa(r=es(),o=ts(n))).callback=null!=t?t:null,Ua(n,a,o),e.current.lanes=o,yt(e,o,r),rs(e,r),e}function Ws(e,t,n,r){var o=t.current,a=es(),i=ts(o);return n=Bs(n),null===t.context?t.context=n:t.pendingContext=n,(t=Aa(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Ua(o,t,i))&&(ns(e,o,i,a),Ba(e,o,i)),i}function Vs(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function $s(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qs(e,t){$s(e,t),(e=e.alternate)&&$s(e,t)}Su=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||jo.current)bl=!0;else{if(0===(e.lanes&n)&&!(128&t.flags))return bl=!1,function(e,t,n){switch(t.tag){case 3:Pl(t),ha();break;case 5:Za(t);break;case 1:Oo(t.type)&&Io(t);break;case 4:Ka(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,o=t.memoizedProps.value;_o(Sa,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(_o(ei,1&ei.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Il(e,t,n):(_o(ei,1&ei.current),null!==(e=Vl(e,t,n))?e.sibling:null);_o(ei,1&ei.current);break;case 19:if(r=0!==(n&t.childLanes),128&e.flags){if(r)return Hl(e,t,n);t.flags|=128}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),_o(ei,ei.current),r)break;return null;case 22:case 23:return t.lanes=0,El(e,t,n)}return Vl(e,t,n)}(e,t,n);bl=!!(131072&e.flags)}else bl=!1,aa&&1048576&t.flags&&ea(t,Go,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Wl(e,t),e=t.pendingProps;var o=zo(t,Po.current);ja(t,n),o=gi(null,t,r,e,o,n);var i=yi();return t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Oo(r)?(i=!0,Io(t)):i=!1,t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,Ia(t),o.updater=ol,t.stateNode=o,o._reactInternals=t,ul(t,r,e,n),t=Tl(null,t,r,!0,i,n)):(t.tag=0,aa&&i&&ta(t),wl(null,t,o,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Wl(e,t),e=t.pendingProps,r=(o=r._init)(r._payload),t.type=r,o=t.tag=function(e){if("function"==typeof e)return zs(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===L)return 14}return 2}(r),e=nl(r,e),o){case 0:t=Nl(null,t,r,e,n);break e;case 1:t=_l(null,t,r,e,n);break e;case 11:t=xl(null,t,r,e,n);break e;case 14:t=kl(null,t,r,nl(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,o=t.pendingProps,Nl(e,t,r,o=t.elementType===r?o:nl(r,o),n);case 1:return r=t.type,o=t.pendingProps,_l(e,t,r,o=t.elementType===r?o:nl(r,o),n);case 3:e:{if(Pl(t),null===e)throw Error(a(387));r=t.pendingProps,o=(i=t.memoizedState).element,Fa(e,t),Wa(t,r,null,n);var l=t.memoizedState;if(r=l.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=jl(e,t,r,n,o=sl(Error(a(423)),t));break e}if(r!==o){t=jl(e,t,r,n,o=sl(Error(a(424)),t));break e}for(oa=so(t.stateNode.containerInfo.firstChild),ra=t,aa=!0,ia=null,n=ka(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ha(),r===o){t=Vl(e,t,n);break e}wl(e,t,r,n)}t=t.child}return t;case 5:return Za(t),null===e&&ca(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,no(r,o)?l=null:null!==i&&no(r,i)&&(t.flags|=32),Cl(e,t),wl(e,t,l,n),t.child;case 6:return null===e&&ca(t),null;case 13:return Il(e,t,n);case 4:return Ka(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xa(t,null,r,n):wl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,xl(e,t,r,o=t.elementType===r?o:nl(r,o),n);case 7:return wl(e,t,t.pendingProps,n),t.child;case 8:case 12:return wl(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,i=t.memoizedProps,l=o.value,_o(Sa,r._currentValue),r._currentValue=l,null!==i)if(lr(i.value,l)){if(i.children===o.children&&!jo.current){t=Vl(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var u=i.dependencies;if(null!==u){l=i.child;for(var s=u.firstContext;null!==s;){if(s.context===r){if(1===i.tag){(s=Aa(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?s.next=s:(s.next=d.next,d.next=s),c.pending=s}}i.lanes|=n,null!==(s=i.alternate)&&(s.lanes|=n),Pa(i.return,n,t),u.lanes|=n;break}s=s.next}}else if(10===i.tag)l=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(l=i.return))throw Error(a(341));l.lanes|=n,null!==(u=l.alternate)&&(u.lanes|=n),Pa(l,n,t),l=i.sibling}else l=i.child;if(null!==l)l.return=i;else for(l=i;null!==l;){if(l===t){l=null;break}if(null!==(i=l.sibling)){i.return=l.return,l=i;break}l=l.return}i=l}wl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=t.pendingProps.children,ja(t,n),r=r(o=La(o)),t.flags|=1,wl(e,t,r,n),t.child;case 14:return o=nl(r=t.type,t.pendingProps),kl(e,t,r,o=nl(r.type,o),n);case 15:return Sl(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:nl(r,o),Wl(e,t),t.tag=1,Oo(r)?(e=!0,Io(t)):e=!1,ja(t,n),il(t,r,o),ul(t,r,o,n),Tl(null,t,r,!0,e,n);case 19:return Hl(e,t,n);case 22:return El(e,t,n)}throw Error(a(156,t.tag))};var Gs="function"==typeof reportError?reportError:function(e){console.error(e)};function Qs(e){this._internalRoot=e}function Ys(e){this._internalRoot=e}function Ks(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zs(){}function Js(e,t,n,r,o){var a=n._reactRootContainer;if(a){var i=a;if("function"==typeof o){var l=o;o=function(){var e=Vs(i);l.call(e)}}Ws(t,i,e,o)}else i=function(e,t,n,r,o){if(o){if("function"==typeof r){var a=r;r=function(){var e=Vs(i);a.call(e)}}var i=Hs(t,r,e,0,null,!1,0,"",Zs);return e._reactRootContainer=i,e[mo]=i.current,Hr(8===e.nodeType?e.parentNode:e),cs(),i}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof r){var l=r;r=function(){var e=Vs(u);l.call(e)}}var u=Us(e,0,!1,null,0,!1,0,"",Zs);return e._reactRootContainer=u,e[mo]=u.current,Hr(8===e.nodeType?e.parentNode:e),cs(function(){Ws(t,u,n,r)}),u}(n,t,e,o,r);return Vs(i)}Ys.prototype.render=Qs.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Ws(e,t,null,null)},Ys.prototype.unmount=Qs.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cs(function(){Ws(null,e,null,null)}),t[mo]=null}},Ys.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ot.length&&0!==t&&t<Ot[n].priority;n++);Ot.splice(n,0,e),0===n&&It(e)}},xt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(vt(t,1|n),rs(t,Xe()),!(6&Tu)&&(Hu=Xe()+500,Wo()))}break;case 13:cs(function(){var t=Da(e,1);if(null!==t){var n=es();ns(t,e,1,n)}}),qs(e,1)}},kt=function(e){if(13===e.tag){var t=Da(e,134217728);null!==t&&ns(t,e,134217728,es()),qs(e,134217728)}},St=function(e){if(13===e.tag){var t=ts(e),n=Da(e,t);null!==n&&ns(n,e,t,es()),qs(e,t)}},Et=function(){return bt},Ct=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},ke=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=ko(r);if(!o)throw Error(a(90));G(r),Z(r,o)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Te=ss,Pe=cs;var ec={usingClientEntryPoint:!1,Events:[wo,xo,ko,Ne,_e,ss]},tc={findFiberByHostInstance:bo,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{ot=rc.inject(nc),at=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ks(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ks(e))throw Error(a(299));var n=!1,r="",o=Gs;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(o=t.onRecoverableError)),t=Us(e,1,!1,null,0,n,0,r,o),e[mo]=t.current,Hr(8===e.nodeType?e.parentNode:e),new Qs(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e){return cs(e)},t.hydrate=function(e,t,n){if(!Xs(t))throw Error(a(200));return Js(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ks(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,o=!1,i="",l=Gs;if(null!=n&&(!0===n.unstable_strictMode&&(o=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),t=Hs(t,null,e,1,null!=n?n:null,o,0,i,l),e[mo]=t.current,Hr(e),r)for(e=0;e<r.length;e++)o=(o=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,o]:t.mutableSourceEagerHydrationData.push(n,o);return new Ys(t)},t.render=function(e,t,n){if(!Xs(t))throw Error(a(200));return Js(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xs(e))throw Error(a(40));return!!e._reactRootContainer&&(cs(function(){Js(null,null,e,!1,function(){e._reactRootContainer=null,e[mo]=null})}),!0)},t.unstable_batchedUpdates=ss,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Xs(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Js(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},2646:e=>{e.exports={AFR:"afr",AMH:"amh",ARA:"ara",ASM:"asm",AZE:"aze",AZE_CYRL:"aze_cyrl",BEL:"bel",BEN:"ben",BOD:"bod",BOS:"bos",BUL:"bul",CAT:"cat",CEB:"ceb",CES:"ces",CHI_SIM:"chi_sim",CHI_TRA:"chi_tra",CHR:"chr",CYM:"cym",DAN:"dan",DEU:"deu",DZO:"dzo",ELL:"ell",ENG:"eng",ENM:"enm",EPO:"epo",EST:"est",EUS:"eus",FAS:"fas",FIN:"fin",FRA:"fra",FRK:"frk",FRM:"frm",GLE:"gle",GLG:"glg",GRC:"grc",GUJ:"guj",HAT:"hat",HEB:"heb",HIN:"hin",HRV:"hrv",HUN:"hun",IKU:"iku",IND:"ind",ISL:"isl",ITA:"ita",ITA_OLD:"ita_old",JAV:"jav",JPN:"jpn",KAN:"kan",KAT:"kat",KAT_OLD:"kat_old",KAZ:"kaz",KHM:"khm",KIR:"kir",KOR:"kor",KUR:"kur",LAO:"lao",LAT:"lat",LAV:"lav",LIT:"lit",MAL:"mal",MAR:"mar",MKD:"mkd",MLT:"mlt",MSA:"msa",MYA:"mya",NEP:"nep",NLD:"nld",NOR:"nor",ORI:"ori",PAN:"pan",POL:"pol",POR:"por",PUS:"pus",RON:"ron",RUS:"rus",SAN:"san",SIN:"sin",SLK:"slk",SLV:"slv",SPA:"spa",SPA_OLD:"spa_old",SQI:"sqi",SRP:"srp",SRP_LATN:"srp_latn",SWA:"swa",SWE:"swe",SYR:"syr",TAM:"tam",TEL:"tel",TGK:"tgk",TGL:"tgl",THA:"tha",TIR:"tir",TUR:"tur",UIG:"uig",UKR:"ukr",URD:"urd",UZB:"uzb",UZB_CYRL:"uzb_cyrl",VIE:"vie",YID:"yid"}},3820:(e,t,n)=>{const r=n(4866);e.exports=e=>{const t={};return"undefined"!=typeof WorkerGlobalScope?t.type="webworker":r()?t.type="electron":"object"==typeof document?t.type="browser":"object"==typeof process&&(t.type="node"),void 0===e?t:t[e]}},4500:e=>{e.exports={langPath:"https://tessdata.projectnaptha.com/4.0.0",workerBlobURL:!0,logger:()=>{}}},4760:e=>{e.exports=e=>{const t=[],n=[],r=[],o=[],a=[];return e.blocks&&e.blocks.forEach(i=>{i.paragraphs.forEach(t=>{t.lines.forEach(n=>{n.words.forEach(r=>{r.symbols.forEach(o=>{a.push({...o,page:e,block:i,paragraph:t,line:n,word:r})}),o.push({...r,page:e,block:i,paragraph:t,line:n})}),r.push({...n,page:e,block:i,paragraph:t})}),n.push({...t,page:e,block:i})}),t.push({...i,page:e})}),{...e,blocks:t,paragraphs:n,lines:r,words:o,symbols:a}}},4848:(e,t,n)=>{"use strict";e.exports=n(1020)},4866:e=>{e.exports=function(){return"undefined"!=typeof window&&"object"==typeof window.process&&"renderer"===window.process.type||!("undefined"==typeof process||"object"!=typeof process.versions||!process.versions.electron)||"object"==typeof navigator&&"string"==typeof navigator.userAgent&&navigator.userAgent.indexOf("Electron")>=0}},4995:(e,t,n)=>{n(7452);const r=n(882),o=n(2477),a=n(7465),i=n(2646),l=n(9742),u=n(949),{setLogging:s}=n(8787);e.exports={languages:i,OEM:l,PSM:u,createScheduler:r,createWorker:o,setLogging:s,...a}},5039:e=>{e.exports=async(e,t)=>{e.postMessage(t)}},5287:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),u=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function v(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var w=b.prototype=new v;w.constructor=b,m(w,y.prototype),w.isPureReactComponent=!0;var x=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,r){var o,a={},i=null,l=null;if(null!=t)for(o in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,o)&&!E.hasOwnProperty(o)&&(a[o]=t[o]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(o in u=e.defaultProps)void 0===a[o]&&(a[o]=u[o]);return{$$typeof:n,type:e,key:i,ref:l,props:a,_owner:S.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var _=/\/+/g;function T(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return t[e]})}(""+e.key):t.toString(36)}function P(e,t,o,a,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return i=i(u=e),e=""===a?"."+T(u,0):a,x(i)?(o="",null!=e&&(o=e.replace(_,"$&/")+"/"),P(i,t,o,"",function(e){return e})):null!=i&&(N(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,o+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(_,"$&/")+"/")+e)),t.push(i)),1;if(u=0,a=""===a?".":a+":",x(e))for(var s=0;s<e.length;s++){var c=a+T(l=e[s],s);u+=P(l,t,o,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(l=e.next()).done;)u+=P(l=l.value,t,o,c=a+T(l,s++),i);else if("object"===l)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function j(e,t,n){if(null==e)return e;var r=[],o=0;return P(e,r,"","",function(e){return t.call(n,e,o++)}),r}function L(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)},function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var z={current:null},O={transition:null},M={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:O,ReactCurrentOwner:S};function D(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:j,forEach:function(e,t,n){j(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return j(e,function(){t++}),t},toArray:function(e){return j(e,function(e){return e})||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=o,t.Profiler=i,t.PureComponent=b,t.StrictMode=a,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.act=D,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=m({},e.props),a=e.key,i=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,l=S.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=r;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];o.children=u}return{$$typeof:n,type:e.type,key:a,ref:i,props:o,_owner:l}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=O.transition;O.transition={};try{e()}finally{O.transition=t}},t.unstable_act=D,t.useCallback=function(e,t){return z.current.useCallback(e,t)},t.useContext=function(e){return z.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return z.current.useDeferredValue(e)},t.useEffect=function(e,t){return z.current.useEffect(e,t)},t.useId=function(){return z.current.useId()},t.useImperativeHandle=function(e,t,n){return z.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return z.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return z.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return z.current.useMemo(e,t)},t.useReducer=function(e,t,n){return z.current.useReducer(e,t,n)},t.useRef=function(e){return z.current.useRef(e)},t.useState=function(e){return z.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return z.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return z.current.useTransition()},t.version="18.3.1"},5321:(e,t,n)=>{const r=n(1848),o=n(7456),a=n(9548),i=n(5381),l=n(5039),u=n(9996);e.exports={defaultOptions:r,spawnWorker:o,terminateWorker:a,onMessage:i,send:l,loadImage:u}},5338:(e,t,n)=>{"use strict";var r=n(961);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},5381:e=>{e.exports=(e,t)=>{e.onmessage=({data:e})=>{t(e)}}},5981:(e,t,n)=>{const r="browser"===n(3820)("type")?e=>new URL(e,window.location.href).href:e=>e;e.exports=e=>{const t={...e};return["corePath","workerPath","langPath"].forEach(n=>{e[n]&&(t[n]=r(t[n]))}),t}},6125:e=>{"use strict";e.exports=JSON.parse('{"name":"tesseract.js","version":"4.1.4","description":"Pure Javascript Multilingual OCR","main":"src/index.js","types":"src/index.d.ts","unpkg":"dist/tesseract.min.js","jsdelivr":"dist/tesseract.min.js","scripts":{"start":"node scripts/server.js","build":"rimraf dist && webpack --config scripts/webpack.config.prod.js && rollup -c scripts/rollup.esm.mjs","profile:tesseract":"webpack-bundle-analyzer dist/tesseract-stats.json","profile:worker":"webpack-bundle-analyzer dist/worker-stats.json","prepublishOnly":"npm run build","wait":"rimraf dist && wait-on http://localhost:3000/dist/tesseract.dev.js","test":"npm-run-all -p -r start test:all","test:all":"npm-run-all wait test:browser:* test:node:all","test:node":"nyc mocha --exit --bail --require ./scripts/test-helper.js","test:node:all":"npm run test:node -- ./tests/*.test.js","test:browser-tpl":"mocha-headless-chrome -a incognito -a no-sandbox -a disable-setuid-sandbox -a disable-logging -t 300000","test:browser:detect":"npm run test:browser-tpl -- -f ./tests/detect.test.html","test:browser:recognize":"npm run test:browser-tpl -- -f ./tests/recognize.test.html","test:browser:scheduler":"npm run test:browser-tpl -- -f ./tests/scheduler.test.html","test:browser:FS":"npm run test:browser-tpl -- -f ./tests/FS.test.html","lint":"eslint src","lint:fix":"eslint --fix src","postinstall":"opencollective-postinstall || true"},"browser":{"./src/worker/node/index.js":"./src/worker/browser/index.js"},"author":"","contributors":["jeromewu"],"license":"Apache-2.0","devDependencies":{"@babel/core":"^7.21.4","@babel/eslint-parser":"^7.21.3","@babel/preset-env":"^7.21.4","@rollup/plugin-commonjs":"^24.1.0","acorn":"^8.8.2","babel-loader":"^9.1.2","buffer":"^6.0.3","cors":"^2.8.5","eslint":"^7.32.0","eslint-config-airbnb-base":"^14.2.1","eslint-plugin-import":"^2.27.5","expect.js":"^0.3.1","express":"^4.18.2","mocha":"^10.2.0","mocha-headless-chrome":"^4.0.0","npm-run-all":"^4.1.5","nyc":"^15.1.0","rimraf":"^5.0.0","rollup":"^3.20.7","wait-on":"^7.0.1","webpack":"^5.79.0","webpack-bundle-analyzer":"^4.8.0","webpack-cli":"^5.0.1","webpack-dev-middleware":"^6.0.2","rollup-plugin-sourcemaps":"^0.6.3"},"dependencies":{"bmp-js":"^0.1.0","idb-keyval":"^6.2.0","is-electron":"^2.2.2","is-url":"^1.2.4","node-fetch":"^2.6.9","opencollective-postinstall":"^2.0.3","regenerator-runtime":"^0.13.3","tesseract.js-core":"^4.0.4","wasm-feature-detect":"^1.2.11","zlibjs":"^0.3.1"},"overrides":{"@rollup/pluginutils":"^5.0.2"},"repository":{"type":"git","url":"https://github.com/naptha/tesseract.js.git"},"bugs":{"url":"https://github.com/naptha/tesseract.js/issues"},"homepage":"https://github.com/naptha/tesseract.js","collective":{"type":"opencollective","url":"https://opencollective.com/tesseractjs"}}')},6540:(e,t,n)=>{"use strict";e.exports=n(5287)},7452:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,o=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",l=a.asyncIterator||"@@asyncIterator",u=a.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof y?t:y,i=Object.create(a.prototype),l=new j(r||[]);return o(i,"_invoke",{value:N(e,n,l)}),i}function d(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",p="suspendedYield",h="executing",m="completed",g={};function y(){}function v(){}function b(){}var w={};s(w,i,function(){return this});var x=Object.getPrototypeOf,k=x&&x(x(L([])));k&&k!==n&&r.call(k,i)&&(w=k);var S=b.prototype=y.prototype=Object.create(w);function E(e){["next","throw","return"].forEach(function(t){s(e,t,function(e){return this._invoke(t,e)})})}function C(e,t){function n(o,a,i,l){var u=d(e[o],e,a);if("throw"!==u.type){var s=u.arg,c=s.value;return c&&"object"==typeof c&&r.call(c,"__await")?t.resolve(c.__await).then(function(e){n("next",e,i,l)},function(e){n("throw",e,i,l)}):t.resolve(c).then(function(e){s.value=e,i(s)},function(e){return n("throw",e,i,l)})}l(u.arg)}var a;o(this,"_invoke",{value:function(e,r){function o(){return new t(function(t,o){n(e,r,t,o)})}return a=a?a.then(o,o):o()}})}function N(e,t,n){var r=f;return function(o,a){if(r===h)throw new Error("Generator is already running");if(r===m){if("throw"===o)throw a;return z()}for(n.method=o,n.arg=a;;){var i=n.delegate;if(i){var l=_(i,n);if(l){if(l===g)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===f)throw r=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=h;var u=d(e,t,n);if("normal"===u.type){if(r=n.done?m:p,u.arg===g)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=m,n.method="throw",n.arg=u.arg)}}}function _(e,n){var r=n.method,o=e.iterator[r];if(o===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,_(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var a=d(o,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var i=a.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function L(e){if(e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}return{next:z}}function z(){return{value:t,done:!0}}return v.prototype=b,o(S,"constructor",{value:b,configurable:!0}),o(b,"constructor",{value:v,configurable:!0}),v.displayName=s(b,u,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,s(e,u,"GeneratorFunction")),e.prototype=Object.create(S),e},e.awrap=function(e){return{__await:e}},E(C.prototype),s(C.prototype,l,function(){return this}),e.AsyncIterator=C,e.async=function(t,n,r,o,a){void 0===a&&(a=Promise);var i=new C(c(t,n,r,o),a);return e.isGeneratorFunction(n)?i:i.next().then(function(e){return e.done?e.value:i.next()})},E(S),s(S,u,"Generator"),s(S,i,function(){return this}),s(S,"toString",function(){return"[object Generator]"}),e.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=L,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(P),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return l.type="throw",l.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),s=r.call(i,"finallyLoc");if(u&&s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;P(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:L(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},7456:e=>{e.exports=({workerPath:e,workerBlobURL:t})=>{let n;if(Blob&&URL&&t){const t=new Blob([`importScripts("${e}");`],{type:"application/javascript"});n=new Worker(URL.createObjectURL(t))}else n=new Worker(e);return n}},7463:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,o=e[r];if(!(0<a(o,t)))break e;e[r]=t,e[n]=o,n=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length,i=o>>>1;r<i;){var l=2*(r+1)-1,u=e[l],s=l+1,c=e[s];if(0>a(u,n))s<o&&0>a(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[l]=n,r=l);else{if(!(s<o&&0>a(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}var s=[],c=[],d=1,f=null,p=3,h=!1,m=!1,g=!1,y="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(c);null!==t;){if(null===t.callback)o(c);else{if(!(t.startTime<=e))break;o(c),t.sortIndex=t.expirationTime,n(s,t)}t=r(c)}}function x(e){if(g=!1,w(e),!m)if(null!==r(s))m=!0,O(k);else{var t=r(c);null!==t&&M(x,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,v(N),N=-1),h=!0;var a=p;try{for(w(n),f=r(s);null!==f&&(!(f.expirationTime>n)||e&&!P());){var i=f.callback;if("function"==typeof i){f.callback=null,p=f.priorityLevel;var l=i(f.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?f.callback=l:f===r(s)&&o(s),w(n)}else o(s);f=r(s)}if(null!==f)var u=!0;else{var d=r(c);null!==d&&M(x,d.startTime-n),u=!1}return u}finally{f=null,p=a,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,E=!1,C=null,N=-1,_=5,T=-1;function P(){return!(t.unstable_now()-T<_)}function j(){if(null!==C){var e=t.unstable_now();T=e;var n=!0;try{n=C(!0,e)}finally{n?S():(E=!1,C=null)}}else E=!1}if("function"==typeof b)S=function(){b(j)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,z=L.port2;L.port1.onmessage=j,S=function(){z.postMessage(null)}}else S=function(){y(j,0)};function O(e){C=e,E||(E=!0,S())}function M(e,n){N=y(function(){e(t.unstable_now())},n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||h||(m=!0,O(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(s)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,o,a){var i=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?i+a:i,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:d++,callback:o,priorityLevel:e,startTime:a,expirationTime:l=a+l,sortIndex:-1},a>i?(e.sortIndex=a,n(c,e),null===r(s)&&e===r(c)&&(g?(v(N),N=-1):g=!0,M(x,a-i))):(e.sortIndex=l,n(s,e),m||h||(m=!0,O(k))),e},t.unstable_shouldYield=P,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},7465:(e,t,n)=>{const r=n(2477);e.exports={recognize:async(e,t,n)=>{const o=await r(n);return await o.loadLanguage(t),await o.initialize(t),o.recognize(e).finally(async()=>{await o.terminate()})},detect:async(e,t)=>{const n=await r(t);return await n.loadLanguage("osd"),await n.initialize("osd"),n.detect(e).finally(async()=>{await n.terminate()})}}},8711:(e,t,n)=>{const r=n(9742);e.exports={defaultOEM:r.DEFAULT}},8787:function(e,t){let n=!1;t.logging=n,t.setLogging=e=>{n=e},t.log=(...e)=>n?console.log.apply(this,e):null},9500:(e,t,n)=>{const r=n(1028);let o=0;e.exports=({id:e,action:t,payload:n={}})=>{let a=e;return void 0===a&&(a=r("Job",o),o+=1),{id:a,action:t,payload:n}}},9548:e=>{e.exports=e=>{e.terminate()}},9742:e=>{e.exports={TESSERACT_ONLY:0,LSTM_ONLY:1,TESSERACT_LSTM_COMBINED:2,DEFAULT:3}},9982:(e,t,n)=>{"use strict";e.exports=n(7463)},9996:e=>{const t=e=>new Promise((t,n)=>{const r=new FileReader;r.onload=()=>{t(r.result)},r.onerror=({target:{error:{code:e}}})=>{n(Error(`File could not be read! Code=${e}`))},r.readAsArrayBuffer(e)}),n=async e=>{let r=e;if(void 0===e)return"undefined";if("string"==typeof e)if(/data:image\/([a-zA-Z]*);base64,([^"]*)/.test(e))r=atob(e.split(",")[1]).split("").map(e=>e.charCodeAt(0));else{const t=await fetch(e);r=await t.arrayBuffer()}else if("undefined"!=typeof HTMLElement&&e instanceof HTMLElement)"IMG"===e.tagName&&(r=await n(e.src)),"VIDEO"===e.tagName&&(r=await n(e.poster)),"CANVAS"===e.tagName&&await new Promise(n=>{e.toBlob(async e=>{r=await t(e),n()})});else if("undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas){const n=await e.convertToBlob();r=await t(n)}else(e instanceof File||e instanceof Blob)&&(r=await t(e));return new Uint8Array(r)};e.exports=n}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}(()=>{"use strict";var e=n(6540),t=n(5338),r={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const o=(t,n)=>{const o=(0,e.forwardRef)(({color:o="currentColor",size:a=24,strokeWidth:i=2,absoluteStrokeWidth:l,className:u="",children:s,...c},d)=>{return(0,e.createElement)("svg",{ref:d,...r,width:a,height:a,stroke:o,strokeWidth:l?24*Number(i)/Number(a):i,className:["lucide",`lucide-${f=t,f.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase().trim()}`,u].join(" "),...c},[...n.map(([t,n])=>(0,e.createElement)(t,n)),...Array.isArray(s)?s:[s]]);var f});return o.displayName=`${t}`,o},a=o("Sparkles",[["path",{d:"m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z",key:"17u4zn"}],["path",{d:"M5 3v4",key:"bklmnn"}],["path",{d:"M19 17v4",key:"iiml17"}],["path",{d:"M3 5h4",key:"nem4j1"}],["path",{d:"M17 19h4",key:"lbex7p"}]]),i=o("Maximize2",[["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["polyline",{points:"9 21 3 21 3 15",key:"1avn1i"}],["line",{x1:"21",x2:"14",y1:"3",y2:"10",key:"ota7mn"}],["line",{x1:"3",x2:"10",y1:"21",y2:"14",key:"1atl0r"}]]),l=o("Minimize2",[["polyline",{points:"4 14 10 14 10 20",key:"11kfnr"}],["polyline",{points:"20 10 14 10 14 4",key:"rlmsce"}],["line",{x1:"14",x2:"21",y1:"10",y2:"3",key:"o5lafz"}],["line",{x1:"3",x2:"10",y1:"21",y2:"14",key:"1atl0r"}]]),u=o("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]),s=o("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]),c=o("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]]),d=o("Send",[["path",{d:"m22 2-7 20-4-9-9-4Z",key:"1q3vgg"}],["path",{d:"M22 2 11 13",key:"nzbqef"}]]);var f=n(4848);function p(){var e,t,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function a(n,r,o,a){var u=r&&r.prototype instanceof l?r:l,s=Object.create(u.prototype);return h(s,"_invoke",function(n,r,o){var a,l,u,s=0,c=o||[],d=!1,f={p:0,n:0,v:e,a:p,f:p.bind(e,4),d:function(t,n){return a=t,l=0,u=e,f.n=n,i}};function p(n,r){for(l=n,u=r,t=0;!d&&s&&!o&&t<c.length;t++){var o,a=c[t],p=f.p,h=a[2];n>3?(o=h===r)&&(u=a[(l=a[4])?5:(l=3,3)],a[4]=a[5]=e):a[0]<=p&&((o=n<2&&p<a[1])?(l=0,f.v=r,f.n=a[1]):p<h&&(o=n<3||a[0]>r||r>h)&&(a[4]=n,a[5]=r,f.n=h,l=0))}if(o||n>1)return i;throw d=!0,r}return function(o,c,h){if(s>1)throw TypeError("Generator is already running");for(d&&1===c&&p(c,h),l=c,u=h;(t=l<2?e:u)||!d;){a||(l?l<3?(l>1&&(f.n=-1),p(l,u)):f.n=u:f.v=u);try{if(s=2,a){if(l||(o="next"),t=a[o]){if(!(t=t.call(a,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,l<2&&(l=0)}else 1===l&&(t=a.return)&&t.call(a),l<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),l=1);a=e}else if((t=(d=f.n<0)?u:n.call(r,f))!==i)break}catch(t){a=e,l=1,u=t}finally{s=1}}return{value:t,done:d}}}(n,o,a),!0),s}var i={};function l(){}function u(){}function s(){}t=Object.getPrototypeOf;var c=[][r]?t(t([][r]())):(h(t={},r,function(){return this}),t),d=s.prototype=l.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,h(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=s,h(d,"constructor",s),h(s,"constructor",u),u.displayName="GeneratorFunction",h(s,o,"GeneratorFunction"),h(d),h(d,o,"Generator"),h(d,r,function(){return this}),h(d,"toString",function(){return"[object Generator]"}),(p=function(){return{w:a,m:f}})()}function h(e,t,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}h=function(e,t,n,r){if(t)o?o(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n;else{var a=function(t,n){h(e,t,function(e){return this._invoke(t,n,e)})};a("next",0),a("throw",1),a("return",2)}},h(e,t,n,r)}function m(e){return function(e){if(Array.isArray(e))return b(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||v(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,t,n,r,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,o)}function y(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],u=!0,s=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){s=!0,o=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(s)throw o}}return l}}(e,t)||v(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,t){if(e){if("string"==typeof e)return b(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?b(e,t):void 0}}function b(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const w=function(t){var n=t.isVisible,r=t.onClose,o=(t.pageContent,t.pageTitle),h=void 0===o?"":o,v=(t.pageUrl,y((0,e.useState)(!1),2)),b=v[0],w=v[1],x=y((0,e.useState)([]),2),k=x[0],S=x[1],E=y((0,e.useState)(""),2),C=E[0],N=E[1],_=y((0,e.useState)(!1),2),T=_[0],P=_[1],j=y((0,e.useState)(null),2),L=j[0],z=j[1],O=(0,e.useRef)(null);(0,e.useEffect)(function(){O.current&&O.current.scrollIntoView({behavior:"smooth"})},[k]);var M=function(){var e,t=(e=p().m(function e(t){var n,r,o,a;return p().w(function(e){for(;;)switch(e.n){case 0:if(t.trim()){e.n=1;break}return e.a(2);case 1:return n={id:Date.now().toString(),type:"user",content:t,timestamp:new Date},S(function(e){return[].concat(m(e),[n])}),N(""),P(!0),e.p=2,e.n=3,new Promise(function(e){return setTimeout(e,1e3)});case 3:r={id:(Date.now()+1).toString(),type:"ai",content:"I understand you're asking about: \"".concat(t,"\". This is a simulated AI response. In a real implementation, this would connect to an AI service like OpenAI's GPT to provide intelligent responses about the current webpage content."),timestamp:new Date},S(function(e){return[].concat(m(e),[r])}),e.n=5;break;case 4:e.p=4,a=e.v,console.error("AI response error:",a),o={id:(Date.now()+1).toString(),type:"ai",content:"Sorry, I encountered an error. Please try again.",timestamp:new Date},S(function(e){return[].concat(m(e),[o])});case 5:return e.p=5,P(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}),function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function i(e){g(a,r,o,i,l,"next",e)}function l(e){g(a,r,o,i,l,"throw",e)}i(void 0)})});return function(e){return t.apply(this,arguments)}}();return n?(0,f.jsxs)("div",{className:"nest-floating-ai",children:[(0,f.jsxs)("div",{className:"floating-ai-container ".concat(b?"minimized":""),children:[(0,f.jsxs)("div",{className:"floating-ai-header",children:[(0,f.jsxs)("div",{className:"header-left",children:[(0,f.jsx)("div",{className:"ai-icon",children:(0,f.jsx)(a,{size:16})}),(0,f.jsx)("span",{className:"ai-title",children:"AI Assistant"})]}),(0,f.jsxs)("div",{className:"header-actions",children:[(0,f.jsx)("button",{className:"header-btn",onClick:function(){return w(!b)},title:b?"Expand":"Minimize",children:b?(0,f.jsx)(i,{size:14}):(0,f.jsx)(l,{size:14})}),(0,f.jsx)("button",{className:"header-btn",onClick:r,title:"Close",children:(0,f.jsx)(u,{size:14})})]})]}),!b&&(0,f.jsxs)("div",{className:"floating-ai-content",children:[0===k.length&&(0,f.jsxs)("div",{className:"quick-prompts",children:[(0,f.jsxs)("div",{className:"prompts-header",children:[(0,f.jsx)("h4",{children:"Quick Actions"}),(0,f.jsx)("p",{children:"Choose a quick action to get started"})]}),(0,f.jsx)("div",{className:"prompts-grid",children:[{id:"summarize",title:"Summarize Page",description:"Get a quick summary of this webpage",prompt:"Please provide a concise summary of this webpage in 2-3 sentences.",icon:"📄"},{id:"explain",title:"Explain Simply",description:"Explain complex concepts in simple terms",prompt:"Please explain the main concepts on this page in simple, easy-to-understand language.",icon:"💡"},{id:"keypoints",title:"Key Points",description:"Extract the most important points",prompt:"What are the key takeaways and main points from this content?",icon:"🎯"},{id:"questions",title:"Generate Questions",description:"Create questions for deeper understanding",prompt:"Generate 3-5 thoughtful questions about this content that would help someone understand it better.",icon:"❓"},{id:"actionable",title:"Action Items",description:"Extract actionable insights",prompt:"What actionable steps or recommendations can be derived from this content?",icon:"✅"},{id:"research",title:"Research Topics",description:"Suggest related research topics",prompt:"Based on this content, what are some related topics I should research further?",icon:"🔍"}].map(function(e){return(0,f.jsxs)("button",{className:"prompt-card ".concat(L===e.id?"selected":""),onClick:function(){return function(e){z(e.id),M(e.prompt)}(e)},disabled:T,title:e.description,children:[(0,f.jsx)("div",{className:"prompt-icon",children:e.icon}),(0,f.jsxs)("div",{className:"prompt-content",children:[(0,f.jsx)("div",{className:"prompt-title",children:e.title}),(0,f.jsx)("div",{className:"prompt-description",children:e.description})]})]},e.id)})})]}),k.length>0&&(0,f.jsxs)("div",{className:"messages-container",children:[(0,f.jsxs)("div",{className:"messages-header",children:[(0,f.jsxs)("span",{className:"page-context",children:["💬 Chatting about: ",h||"Current Page"]}),(0,f.jsx)("button",{className:"clear-chat-btn",onClick:function(){S([])},title:"Clear chat",children:(0,f.jsx)(s,{size:12})})]}),(0,f.jsxs)("div",{className:"messages-list",children:[k.map(function(e){return(0,f.jsxs)("div",{className:"message ".concat(e.type),children:[(0,f.jsx)("div",{className:"message-content",children:e.content}),(0,f.jsxs)("div",{className:"message-actions",children:[(0,f.jsx)("button",{className:"message-action",onClick:function(){return t=e.content,void navigator.clipboard.writeText(t);var t},title:"Copy",children:(0,f.jsx)(c,{size:12})}),(0,f.jsx)("span",{className:"message-time",children:e.timestamp.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})})]})]},e.id)}),T&&(0,f.jsx)("div",{className:"message ai loading",children:(0,f.jsx)("div",{className:"message-content",children:(0,f.jsxs)("div",{className:"typing-indicator",children:[(0,f.jsx)("span",{}),(0,f.jsx)("span",{}),(0,f.jsx)("span",{})]})})}),(0,f.jsx)("div",{ref:O})]})]}),(0,f.jsx)("div",{className:"ai-input-container",children:(0,f.jsxs)("div",{className:"input-wrapper",children:[(0,f.jsx)("input",{type:"text",value:C,onChange:function(e){return N(e.target.value)},onKeyPress:function(e){return"Enter"===e.key&&M(C)},placeholder:"Ask anything about this page...",className:"ai-input",disabled:T}),(0,f.jsx)("button",{className:"send-btn",onClick:function(){return M(C)},disabled:T||!C.trim(),children:(0,f.jsx)(d,{size:16})})]})})]})]}),(0,f.jsx)("style",{jsx:!0,children:"\n        .nest-floating-ai {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          z-index: 999999;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n        }\n\n        .floating-ai-container {\n          width: 380px;\n          max-height: 600px;\n          background: #ffffff;\n          border-radius: 16px;\n          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n          border: 1px solid #e5e7eb;\n          overflow: hidden;\n          transition: all 0.3s ease;\n        }\n\n        .floating-ai-container.minimized {\n          width: 200px;\n          max-height: 60px;\n        }\n\n        .floating-ai-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 16px;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n        }\n\n        .header-left {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .ai-icon {\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 6px;\n        }\n\n        .ai-title {\n          font-weight: 600;\n          font-size: 14px;\n        }\n\n        .header-actions {\n          display: flex;\n          gap: 4px;\n        }\n\n        .header-btn {\n          width: 28px;\n          height: 28px;\n          border: none;\n          background: rgba(255, 255, 255, 0.2);\n          color: white;\n          border-radius: 6px;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background 0.2s;\n        }\n\n        .header-btn:hover {\n          background: rgba(255, 255, 255, 0.3);\n        }\n\n        .floating-ai-content {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          max-height: 540px;\n        }\n\n        .quick-prompts {\n          padding: 20px;\n        }\n\n        .prompts-header {\n          text-align: center;\n          margin-bottom: 16px;\n        }\n\n        .prompts-header h4 {\n          margin: 0 0 4px 0;\n          font-size: 16px;\n          font-weight: 600;\n          color: #1f2937;\n        }\n\n        .prompts-header p {\n          margin: 0;\n          font-size: 13px;\n          color: #6b7280;\n        }\n\n        .prompts-grid {\n          display: grid;\n          grid-template-columns: repeat(2, 1fr);\n          gap: 8px;\n        }\n\n        .prompt-card {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          padding: 12px;\n          border: 1px solid #e5e7eb;\n          border-radius: 8px;\n          background: white;\n          cursor: pointer;\n          transition: all 0.2s;\n          text-align: left;\n        }\n\n        .prompt-card:hover {\n          border-color: #667eea;\n          background: #f8faff;\n        }\n\n        .prompt-card.selected {\n          border-color: #667eea;\n          background: #f0f4ff;\n        }\n\n        .prompt-icon {\n          font-size: 16px;\n          flex-shrink: 0;\n        }\n\n        .prompt-content {\n          flex: 1;\n          min-width: 0;\n        }\n\n        .prompt-title {\n          font-size: 12px;\n          font-weight: 600;\n          color: #1f2937;\n          margin-bottom: 2px;\n        }\n\n        .prompt-description {\n          font-size: 10px;\n          color: #6b7280;\n          line-height: 1.3;\n        }\n\n        .messages-container {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n        }\n\n        .messages-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 12px 16px;\n          border-bottom: 1px solid #e5e7eb;\n          background: #f9fafb;\n        }\n\n        .page-context {\n          font-size: 12px;\n          color: #6b7280;\n          font-weight: 500;\n        }\n\n        .clear-chat-btn {\n          padding: 4px;\n          border: none;\n          background: none;\n          color: #6b7280;\n          cursor: pointer;\n          border-radius: 4px;\n          transition: color 0.2s;\n        }\n\n        .clear-chat-btn:hover {\n          color: #374151;\n        }\n\n        .messages-list {\n          flex: 1;\n          overflow-y: auto;\n          padding: 16px;\n          max-height: 300px;\n        }\n\n        .message {\n          margin-bottom: 16px;\n        }\n\n        .message.user .message-content {\n          background: #667eea;\n          color: white;\n          margin-left: 40px;\n          border-radius: 16px 16px 4px 16px;\n        }\n\n        .message.ai .message-content {\n          background: #f3f4f6;\n          color: #1f2937;\n          margin-right: 40px;\n          border-radius: 16px 16px 16px 4px;\n        }\n\n        .message-content {\n          padding: 12px 16px;\n          font-size: 14px;\n          line-height: 1.4;\n          word-wrap: break-word;\n        }\n\n        .message-actions {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-top: 4px;\n          padding: 0 8px;\n        }\n\n        .message.user .message-actions {\n          justify-content: flex-end;\n        }\n\n        .message-action {\n          padding: 4px;\n          border: none;\n          background: none;\n          color: #9ca3af;\n          cursor: pointer;\n          border-radius: 4px;\n          transition: color 0.2s;\n        }\n\n        .message-action:hover {\n          color: #6b7280;\n        }\n\n        .message-time {\n          font-size: 11px;\n          color: #9ca3af;\n        }\n\n        .message.loading .message-content {\n          padding: 16px;\n        }\n\n        .typing-indicator {\n          display: flex;\n          gap: 4px;\n          align-items: center;\n        }\n\n        .typing-indicator span {\n          width: 6px;\n          height: 6px;\n          border-radius: 50%;\n          background: #9ca3af;\n          animation: typing 1.4s infinite;\n        }\n\n        .typing-indicator span:nth-child(2) {\n          animation-delay: 0.2s;\n        }\n\n        .typing-indicator span:nth-child(3) {\n          animation-delay: 0.4s;\n        }\n\n        @keyframes typing {\n          0%, 60%, 100% {\n            transform: translateY(0);\n            opacity: 0.5;\n          }\n          30% {\n            transform: translateY(-10px);\n            opacity: 1;\n          }\n        }\n\n        .ai-input-container {\n          padding: 16px;\n          border-top: 1px solid #e5e7eb;\n          background: white;\n        }\n\n        .input-wrapper {\n          display: flex;\n          gap: 8px;\n          align-items: center;\n        }\n\n        .ai-input {\n          flex: 1;\n          padding: 12px 16px;\n          border: 1px solid #e5e7eb;\n          border-radius: 24px;\n          font-size: 14px;\n          outline: none;\n          transition: border-color 0.2s;\n        }\n\n        .ai-input:focus {\n          border-color: #667eea;\n        }\n\n        .send-btn {\n          width: 40px;\n          height: 40px;\n          border: none;\n          background: #667eea;\n          color: white;\n          border-radius: 50%;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background 0.2s;\n        }\n\n        .send-btn:hover:not(:disabled) {\n          background: #5a67d8;\n        }\n\n        .send-btn:disabled {\n          background: #d1d5db;\n          cursor: not-allowed;\n        }\n\n        .messages-list::-webkit-scrollbar {\n          width: 6px;\n        }\n\n        .messages-list::-webkit-scrollbar-track {\n          background: #f1f5f9;\n        }\n\n        .messages-list::-webkit-scrollbar-thumb {\n          background: #cbd5e1;\n          border-radius: 3px;\n        }\n\n        .messages-list::-webkit-scrollbar-thumb:hover {\n          background: #94a3b8;\n        }\n      "})]}):null},x=o("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]),k=o("Palette",[["circle",{cx:"13.5",cy:"6.5",r:".5",key:"1xcu5"}],["circle",{cx:"17.5",cy:"10.5",r:".5",key:"736e4u"}],["circle",{cx:"8.5",cy:"7.5",r:".5",key:"clrty"}],["circle",{cx:"6.5",cy:"12.5",r:".5",key:"1s4xz9"}],["path",{d:"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",key:"12rzf8"}]]),S=o("PenLine",[["path",{d:"M12 20h9",key:"t2du7b"}],["path",{d:"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z",key:"ymcmye"}]]),E=o("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]),C=o("Move",[["polyline",{points:"5 9 2 12 5 15",key:"1r5uj5"}],["polyline",{points:"9 5 12 2 15 5",key:"5v383o"}],["polyline",{points:"15 19 12 22 9 19",key:"g7qi8m"}],["polyline",{points:"19 9 22 12 19 15",key:"tpp73q"}],["line",{x1:"2",x2:"22",y1:"12",y2:"12",key:"1dnqot"}],["line",{x1:"12",x2:"12",y1:"2",y2:"22",key:"7eqyqh"}]]);function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function _(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function T(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?_(Object(n),!0).forEach(function(t){P(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):_(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function P(e,t,n){return(t=function(e){var t=function(e){if("object"!=N(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=N(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==N(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function j(e){return function(e){if(Array.isArray(e))return I(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||R(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function L(){var e,t,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function a(n,r,o,a){var u=r&&r.prototype instanceof l?r:l,s=Object.create(u.prototype);return z(s,"_invoke",function(n,r,o){var a,l,u,s=0,c=o||[],d=!1,f={p:0,n:0,v:e,a:p,f:p.bind(e,4),d:function(t,n){return a=t,l=0,u=e,f.n=n,i}};function p(n,r){for(l=n,u=r,t=0;!d&&s&&!o&&t<c.length;t++){var o,a=c[t],p=f.p,h=a[2];n>3?(o=h===r)&&(u=a[(l=a[4])?5:(l=3,3)],a[4]=a[5]=e):a[0]<=p&&((o=n<2&&p<a[1])?(l=0,f.v=r,f.n=a[1]):p<h&&(o=n<3||a[0]>r||r>h)&&(a[4]=n,a[5]=r,f.n=h,l=0))}if(o||n>1)return i;throw d=!0,r}return function(o,c,h){if(s>1)throw TypeError("Generator is already running");for(d&&1===c&&p(c,h),l=c,u=h;(t=l<2?e:u)||!d;){a||(l?l<3?(l>1&&(f.n=-1),p(l,u)):f.n=u:f.v=u);try{if(s=2,a){if(l||(o="next"),t=a[o]){if(!(t=t.call(a,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,l<2&&(l=0)}else 1===l&&(t=a.return)&&t.call(a),l<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),l=1);a=e}else if((t=(d=f.n<0)?u:n.call(r,f))!==i)break}catch(t){a=e,l=1,u=t}finally{s=1}}return{value:t,done:d}}}(n,o,a),!0),s}var i={};function l(){}function u(){}function s(){}t=Object.getPrototypeOf;var c=[][r]?t(t([][r]())):(z(t={},r,function(){return this}),t),d=s.prototype=l.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,z(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=s,z(d,"constructor",s),z(s,"constructor",u),u.displayName="GeneratorFunction",z(s,o,"GeneratorFunction"),z(d),z(d,o,"Generator"),z(d,r,function(){return this}),z(d,"toString",function(){return"[object Generator]"}),(L=function(){return{w:a,m:f}})()}function z(e,t,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}z=function(e,t,n,r){if(t)o?o(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n;else{var a=function(t,n){z(e,t,function(e){return this._invoke(t,n,e)})};a("next",0),a("throw",1),a("return",2)}},z(e,t,n,r)}function O(e,t,n,r,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,o)}function M(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function i(e){O(a,r,o,i,l,"next",e)}function l(e){O(a,r,o,i,l,"throw",e)}i(void 0)})}}function D(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],u=!0,s=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){s=!0,o=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(s)throw o}}return l}}(e,t)||R(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(e,t){if(e){if("string"==typeof e)return I(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?I(e,t):void 0}}function I(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const F=function(t){var n=t.isVisible,r=(t.onToggle,D((0,e.useState)([]),2)),o=r[0],a=r[1],i=D((0,e.useState)(!1),2),l=i[0],u=i[1],s=D((0,e.useState)(null),2),c=s[0],d=s[1],p=D((0,e.useState)(null),2),h=p[0],m=p[1],g=D((0,e.useState)({x:0,y:0}),2),y=g[0],v=g[1],b=D((0,e.useState)(null),2),w=b[0],N=b[1],_=[{name:"Yellow",value:"#fef08a",border:"#eab308"},{name:"Pink",value:"#fda4af",border:"#ec4899"},{name:"Blue",value:"#93c5fd",border:"#3b82f6"},{name:"Green",value:"#86efac",border:"#10b981"},{name:"Purple",value:"#c4b5fd",border:"#8b5cf6"},{name:"Orange",value:"#fed7aa",border:"#f97316"},{name:"Gray",value:"#d1d5db",border:"#6b7280"},{name:"Red",value:"#fca5a5",border:"#ef4444"}],P=window.location.href,z=window.location.hostname;(0,e.useEffect)(function(){O()},[]);var O=function(){var e=M(L().m(function e(){var t,n,r,o;return L().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.get("nest_sticky_notes");case 1:t=e.v,n=t.nest_sticky_notes||[],r=n.filter(function(e){return e.url===P||e.domain===z}),a(r),e.n=3;break;case 2:e.p=2,o=e.v,console.error("Failed to load sticky notes:",o);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),R=function(){var e=M(L().m(function e(t){var n,r,o,i,l;return L().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.get("nest_sticky_notes");case 1:return n=e.v,r=n.nest_sticky_notes||[],o=r.filter(function(e){return e.url!==P&&e.domain!==z}),i=[].concat(j(o),j(t)),e.n=2,chrome.storage.local.set({nest_sticky_notes:i});case 2:a(t),e.n=4;break;case 3:e.p=3,l=e.v,console.error("Failed to save sticky notes:",l);case 4:return e.a(2)}},e,null,[[0,3]])}));return function(t){return e.apply(this,arguments)}}(),I=function(e,t){var n=o.map(function(n){return n.id===e?T(T(T({},n),t),{},{updatedAt:new Date}):n});R(n)},F=function(e){if(h){e.preventDefault();var t=e.clientX-y.x,n=e.clientY-y.y;I(h,{position:{x:t,y:n}})}},A=function(){m(null),v({x:0,y:0})},U=function(e){var t,n,r,a;l&&e.target&&!e.target.closest(".nest-sticky-note")&&(t=e.clientX,n=e.clientY,r={id:Date.now().toString(),content:"",color:_[0].value,position:{x:t,y:n},size:{width:200,height:150},url:P,domain:z,createdAt:new Date,updatedAt:new Date},a=[].concat(j(o),[r]),R(a),d(r.id),u(!1))};return(0,e.useEffect)(function(){if(h)return document.addEventListener("mousemove",F),document.addEventListener("mouseup",A),function(){document.removeEventListener("mousemove",F),document.removeEventListener("mouseup",A)}},[h,y]),(0,e.useEffect)(function(){if(l)return document.addEventListener("click",U),document.body.style.cursor="crosshair",function(){document.removeEventListener("click",U),document.body.style.cursor="auto"}},[l]),n?(0,f.jsxs)(f.Fragment,{children:[(0,f.jsxs)("div",{className:"nest-sticky-fab",children:[(0,f.jsx)("button",{className:"sticky-fab-button ".concat(l?"creating":""),onClick:function(){return u(!l)},title:l?"Click anywhere to add note":"Add sticky note",children:(0,f.jsx)(x,{size:20})}),l&&(0,f.jsx)("div",{className:"creating-hint",children:"Click anywhere on the page to add a sticky note"})]}),o.map(function(e){var t;return(0,f.jsxs)("div",{className:"nest-sticky-note ".concat(h===e.id?"dragging":""),style:{left:e.position.x,top:e.position.y,width:e.size.width,height:e.size.height,backgroundColor:e.color,borderColor:(null===(t=_.find(function(t){return t.value===e.color}))||void 0===t?void 0:t.border)||"#eab308"},onMouseDown:function(t){return function(e,t){if(e.target===e.currentTarget||e.target.closest(".note-drag-handle")){e.preventDefault(),m(t);var n=o.find(function(e){return e.id===t});n&&v({x:e.clientX-n.position.x,y:e.clientY-n.position.y})}}(t,e.id)},children:[(0,f.jsxs)("div",{className:"note-header note-drag-handle",children:[(0,f.jsxs)("div",{className:"note-actions",children:[(0,f.jsx)("button",{className:"note-action-btn",onClick:function(){return N(w===e.id?null:e.id)},title:"Change color",children:(0,f.jsx)(k,{size:12})}),(0,f.jsx)("button",{className:"note-action-btn",onClick:function(){return d(c===e.id?null:e.id)},title:"Edit note",children:(0,f.jsx)(S,{size:12})}),(0,f.jsx)("button",{className:"note-action-btn delete",onClick:function(){return t=e.id,n=o.filter(function(e){return e.id!==t}),void R(n);var t,n},title:"Delete note",children:(0,f.jsx)(E,{size:12})})]}),(0,f.jsx)("div",{className:"drag-handle",title:"Drag to move",children:(0,f.jsx)(C,{size:12})})]}),w===e.id&&(0,f.jsx)("div",{className:"color-picker",children:_.map(function(t){return(0,f.jsx)("button",{className:"color-option ".concat(e.color===t.value?"selected":""),style:{backgroundColor:t.value,borderColor:t.border},onClick:function(){I(e.id,{color:t.value}),N(null)},title:t.name},t.value)})}),(0,f.jsx)("div",{className:"note-content",children:c===e.id?(0,f.jsx)("textarea",{value:e.content,onChange:function(t){return I(e.id,{content:t.target.value})},onBlur:function(){return d(null)},onKeyDown:function(e){"Escape"===e.key&&d(null)},placeholder:"Type your note here...",className:"note-textarea",autoFocus:!0}):(0,f.jsx)("div",{className:"note-text",onClick:function(){return d(e.id)},style:{cursor:e.content?"text":"pointer"},children:e.content||"Click to add text..."})}),(0,f.jsx)("div",{className:"note-footer",children:(0,f.jsx)("span",{className:"note-timestamp",children:e.updatedAt.toLocaleDateString()})})]},e.id)}),(0,f.jsx)("style",{jsx:!0,children:"\n        .nest-sticky-fab {\n          position: fixed;\n          bottom: 80px;\n          right: 20px;\n          z-index: 999998;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n        }\n\n        .sticky-fab-button {\n          width: 56px;\n          height: 56px;\n          border-radius: 50%;\n          background: #f59e0b;\n          color: white;\n          border: none;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          transition: all 0.3s ease;\n        }\n\n        .sticky-fab-button:hover {\n          background: #d97706;\n          transform: scale(1.1);\n        }\n\n        .sticky-fab-button.creating {\n          background: #10b981;\n          animation: pulse 2s infinite;\n        }\n\n        @keyframes pulse {\n          0%, 100% { transform: scale(1); }\n          50% { transform: scale(1.05); }\n        }\n\n        .creating-hint {\n          position: absolute;\n          bottom: 70px;\n          right: 0;\n          background: #1f2937;\n          color: white;\n          padding: 8px 12px;\n          border-radius: 8px;\n          font-size: 12px;\n          white-space: nowrap;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          animation: fadeIn 0.3s ease;\n        }\n\n        .creating-hint::after {\n          content: '';\n          position: absolute;\n          top: 100%;\n          right: 20px;\n          width: 0;\n          height: 0;\n          border-left: 8px solid transparent;\n          border-right: 8px solid transparent;\n          border-top: 8px solid #1f2937;\n        }\n\n        .nest-sticky-note {\n          position: fixed;\n          z-index: 999997;\n          border: 2px solid;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n          display: flex;\n          flex-direction: column;\n          transition: transform 0.2s ease;\n          user-select: none;\n        }\n\n        .nest-sticky-note:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n        }\n\n        .nest-sticky-note.dragging {\n          transform: rotate(5deg);\n          z-index: 999999;\n          cursor: grabbing;\n        }\n\n        .note-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 8px;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n          cursor: grab;\n        }\n\n        .note-header:active {\n          cursor: grabbing;\n        }\n\n        .note-actions {\n          display: flex;\n          gap: 4px;\n        }\n\n        .note-action-btn {\n          width: 20px;\n          height: 20px;\n          border: none;\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: 4px;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s ease;\n          color: #374151;\n        }\n\n        .note-action-btn:hover {\n          background: rgba(255, 255, 255, 1);\n          transform: scale(1.1);\n        }\n\n        .note-action-btn.delete:hover {\n          background: #ef4444;\n          color: white;\n        }\n\n        .drag-handle {\n          color: rgba(0, 0, 0, 0.4);\n          cursor: grab;\n        }\n\n        .color-picker {\n          position: absolute;\n          top: 40px;\n          left: 8px;\n          background: white;\n          border-radius: 8px;\n          padding: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          display: grid;\n          grid-template-columns: repeat(4, 1fr);\n          gap: 4px;\n          z-index: 1000000;\n        }\n\n        .color-option {\n          width: 24px;\n          height: 24px;\n          border: 2px solid;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: transform 0.2s ease;\n        }\n\n        .color-option:hover {\n          transform: scale(1.1);\n        }\n\n        .color-option.selected {\n          transform: scale(1.2);\n          box-shadow: 0 0 0 2px #374151;\n        }\n\n        .note-content {\n          flex: 1;\n          padding: 12px;\n          overflow: hidden;\n        }\n\n        .note-textarea {\n          width: 100%;\n          height: 100%;\n          border: none;\n          background: transparent;\n          resize: none;\n          outline: none;\n          font-family: inherit;\n          font-size: 14px;\n          line-height: 1.4;\n          color: #374151;\n        }\n\n        .note-text {\n          width: 100%;\n          height: 100%;\n          font-size: 14px;\n          line-height: 1.4;\n          color: #374151;\n          overflow-wrap: break-word;\n          white-space: pre-wrap;\n        }\n\n        .note-text:empty::before {\n          content: 'Click to add text...';\n          color: #9ca3af;\n          font-style: italic;\n        }\n\n        .note-footer {\n          padding: 6px 12px;\n          border-top: 1px solid rgba(0, 0, 0, 0.1);\n          background: rgba(255, 255, 255, 0.3);\n        }\n\n        .note-timestamp {\n          font-size: 10px;\n          color: #6b7280;\n        }\n\n        @keyframes fadeIn {\n          from { opacity: 0; transform: translateY(10px); }\n          to { opacity: 1; transform: translateY(0); }\n        }\n      "})]}):null},A=o("Camera",[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]]),U=o("Square",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}]]),B=o("Circle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]]),H=o("ArrowRight",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"m12 5 7 7-7 7",key:"xquz4c"}]]),W=o("Type",[["polyline",{points:"4 7 4 4 20 4 20 7",key:"1nosan"}],["line",{x1:"9",x2:"15",y1:"20",y2:"20",key:"swin9y"}],["line",{x1:"12",x2:"12",y1:"4",y2:"20",key:"1tx1rr"}]]),V=o("Undo",[["path",{d:"M3 7v6h6",key:"1v2h90"}],["path",{d:"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13",key:"1r6uu6"}]]),$=o("Redo",[["path",{d:"M21 7v6h-6",key:"3ptur4"}],["path",{d:"M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7",key:"1kgawr"}]]),q=o("Save",[["path",{d:"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z",key:"1owoqh"}],["polyline",{points:"17 21 17 13 7 13 7 21",key:"1md35c"}],["polyline",{points:"7 3 7 8 15 8",key:"8nz8an"}]]),G=o("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]);function Q(e){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q(e)}function Y(e){return function(e){if(Array.isArray(e))return ae(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||oe(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function X(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?K(Object(n),!0).forEach(function(t){Z(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):K(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function Z(e,t,n){return(t=function(e){var t=function(e){if("object"!=Q(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Q(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function J(){var e,t,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function a(n,r,o,a){var u=r&&r.prototype instanceof l?r:l,s=Object.create(u.prototype);return ee(s,"_invoke",function(n,r,o){var a,l,u,s=0,c=o||[],d=!1,f={p:0,n:0,v:e,a:p,f:p.bind(e,4),d:function(t,n){return a=t,l=0,u=e,f.n=n,i}};function p(n,r){for(l=n,u=r,t=0;!d&&s&&!o&&t<c.length;t++){var o,a=c[t],p=f.p,h=a[2];n>3?(o=h===r)&&(u=a[(l=a[4])?5:(l=3,3)],a[4]=a[5]=e):a[0]<=p&&((o=n<2&&p<a[1])?(l=0,f.v=r,f.n=a[1]):p<h&&(o=n<3||a[0]>r||r>h)&&(a[4]=n,a[5]=r,f.n=h,l=0))}if(o||n>1)return i;throw d=!0,r}return function(o,c,h){if(s>1)throw TypeError("Generator is already running");for(d&&1===c&&p(c,h),l=c,u=h;(t=l<2?e:u)||!d;){a||(l?l<3?(l>1&&(f.n=-1),p(l,u)):f.n=u:f.v=u);try{if(s=2,a){if(l||(o="next"),t=a[o]){if(!(t=t.call(a,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,l<2&&(l=0)}else 1===l&&(t=a.return)&&t.call(a),l<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),l=1);a=e}else if((t=(d=f.n<0)?u:n.call(r,f))!==i)break}catch(t){a=e,l=1,u=t}finally{s=1}}return{value:t,done:d}}}(n,o,a),!0),s}var i={};function l(){}function u(){}function s(){}t=Object.getPrototypeOf;var c=[][r]?t(t([][r]())):(ee(t={},r,function(){return this}),t),d=s.prototype=l.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,ee(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=s,ee(d,"constructor",s),ee(s,"constructor",u),u.displayName="GeneratorFunction",ee(s,o,"GeneratorFunction"),ee(d),ee(d,o,"Generator"),ee(d,r,function(){return this}),ee(d,"toString",function(){return"[object Generator]"}),(J=function(){return{w:a,m:f}})()}function ee(e,t,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}ee=function(e,t,n,r){if(t)o?o(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n;else{var a=function(t,n){ee(e,t,function(e){return this._invoke(t,n,e)})};a("next",0),a("throw",1),a("return",2)}},ee(e,t,n,r)}function te(e,t,n,r,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,o)}function ne(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function i(e){te(a,r,o,i,l,"next",e)}function l(e){te(a,r,o,i,l,"throw",e)}i(void 0)})}}function re(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],u=!0,s=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){s=!0,o=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(s)throw o}}return l}}(e,t)||oe(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function oe(e,t){if(e){if("string"==typeof e)return ae(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ae(e,t):void 0}}function ae(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const ie=function(t){var n=t.isVisible,r=t.onClose,o=re((0,e.useState)(!1),2),a=o[0],i=o[1],l=re((0,e.useState)(null),2),s=l[0],c=l[1],d=re((0,e.useState)(!1),2),p=d[0],h=d[1],m=re((0,e.useState)("rectangle"),2),g=m[0],y=m[1],v=re((0,e.useState)([]),2),b=v[0],w=v[1],x=re((0,e.useState)(!1),2),S=x[0],E=x[1],C=re((0,e.useState)(null),2),N=C[0],_=C[1],T=re((0,e.useState)("#ef4444"),2),P=T[0],j=T[1],L=re((0,e.useState)(3),2),z=L[0],O=L[1],M=re((0,e.useState)(!1),2),D=M[0],R=M[1],I=re((0,e.useState)(""),2),F=I[0],Q=I[1],K=re((0,e.useState)(!1),2),Z=K[0],ee=K[1],te=re((0,e.useState)({x:0,y:0}),2),oe=te[0],ae=te[1],ie=re((0,e.useState)([]),2),le=ie[0],ue=ie[1],se=re((0,e.useState)(-1),2),ce=se[0],de=se[1],fe=(0,e.useRef)(null);(0,e.useRef)(null),(0,e.useEffect)(function(){return document.body.style.cursor=a?"crosshair":"auto",function(){document.body.style.cursor="auto"}},[a]);var pe=function(){var e=ne(J().m(function e(){var t,n,r;return J().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,i(!0),e.n=1,navigator.mediaDevices.getDisplayMedia({video:{mediaSource:"screen"}});case 1:t=e.v,(n=document.createElement("video")).srcObject=t,n.play(),n.addEventListener("loadedmetadata",function(){var e=document.createElement("canvas");e.width=n.videoWidth,e.height=n.videoHeight;var r=e.getContext("2d");null==r||r.drawImage(n,0,0);var o=e.toDataURL("image/png");c(o),h(!0),i(!1),t.getTracks().forEach(function(e){return e.stop()})}),e.n=3;break;case 2:return e.p=2,r=e.v,console.error("Failed to capture screen:",r),i(!1),e.n=3,he();case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),he=function(){var e=ne(J().m(function e(){var t,n,r;return J().w(function(e){for(;;)switch(e.n){case 0:try{t=document.createElement("canvas"),n=t.getContext("2d"),t.width=window.innerWidth,t.height=window.innerHeight,n&&(n.fillStyle="#ffffff",n.fillRect(0,0,t.width,t.height),n.fillStyle="#374151",n.font="24px Arial",n.textAlign="center",n.fillText("Screenshot captured!",t.width/2,t.height/2),n.fillText("(Demo screenshot - real implementation would capture actual page)",t.width/2,t.height/2+40)),r=t.toDataURL("image/png"),c(r),h(!0),i(!1)}catch(e){console.error("Failed to capture viewport:",e),i(!1)}case 1:return e.a(2)}},e)}));return function(){return e.apply(this,arguments)}}(),me=(0,e.useCallback)(function(e){if(p&&fe.current){var t=fe.current.getBoundingClientRect(),n=e.clientX-t.left,r=e.clientY-t.top;if("text"===g)return ae({x:n,y:r}),void ee(!0);var o={id:Date.now().toString(),type:g,startX:n,startY:r,endX:n,endY:r,color:P,strokeWidth:z};_(o),E(!0)}},[p,g,P,z]),ge=(0,e.useCallback)(function(e){if(S&&N&&fe.current){var t=fe.current.getBoundingClientRect(),n=e.clientX-t.left,r=e.clientY-t.top;_(X(X({},N),{},{endX:n,endY:r}))}},[S,N]),ye=(0,e.useCallback)(function(){if(S&&N){var e=[].concat(Y(b),[N]);w(e);var t=le.slice(0,ce+1);t.push(e),ue(t),de(t.length-1),_(null),E(!1)}},[S,N,b,le,ce]),ve=function(){if(F.trim()){var e={id:Date.now().toString(),type:"text",startX:oe.x,startY:oe.y,endX:oe.x,endY:oe.y,text:F,color:P,strokeWidth:z},t=[].concat(Y(b),[e]);w(t);var n=le.slice(0,ce+1);n.push(t),ue(n),de(n.length-1),Q(""),ee(!1)}},be=function(){var e=fe.current;if(e&&s){var t=e.getContext("2d");if(t){var n=new Image;n.onload=function(){var r=n.width/n.height,o=e.width/e.height,a=e.width,i=e.height;r>o?i=e.width/r:a=e.height*r;var l=(e.width-a)/2,u=(e.height-i)/2;t.clearRect(0,0,e.width,e.height),t.imageSmoothingEnabled=!0,t.imageSmoothingQuality="high",t.drawImage(n,l,u,a,i),[].concat(Y(b),[N]).filter(Boolean).forEach(function(e){!function(e,t){switch(e.strokeStyle=t.color,e.lineWidth=t.strokeWidth,e.lineCap="round",t.type){case"rectangle":e.strokeRect(t.startX,t.startY,t.endX-t.startX,t.endY-t.startY);break;case"circle":var n=Math.sqrt(Math.pow(t.endX-t.startX,2)+Math.pow(t.endY-t.startY,2));e.beginPath(),e.arc(t.startX,t.startY,n,0,2*Math.PI),e.stroke();break;case"arrow":!function(e,t,n,r,o){var a=Math.atan2(o-n,r-t);e.beginPath(),e.moveTo(t,n),e.lineTo(r,o),e.stroke(),e.beginPath(),e.moveTo(r,o),e.lineTo(r-15*Math.cos(a-Math.PI/6),o-15*Math.sin(a-Math.PI/6)),e.moveTo(r,o),e.lineTo(r-15*Math.cos(a+Math.PI/6),o-15*Math.sin(a+Math.PI/6)),e.stroke()}(e,t.startX,t.startY,t.endX,t.endY);break;case"text":e.fillStyle=t.color,e.font="".concat(6*t.strokeWidth,"px Arial"),e.fillText(t.text||"",t.startX,t.startY)}}(t,e)})},n.src=s}}};(0,e.useEffect)(function(){be()},[s,b,N]);var we=function(){var e=ne(J().m(function e(){var t,n,o;return J().w(function(e){for(;;)switch(e.n){case 0:if(t=fe.current){e.n=1;break}return e.a(2);case 1:return e.p=1,n=t.toDataURL(),e.n=2,chrome.runtime.sendMessage({action:"saveScreenshot",screenshot:n,url:window.location.href,title:document.title});case 2:r(),e.n=4;break;case 3:e.p=3,o=e.v,console.error("Failed to save screenshot:",o);case 4:return e.a(2)}},e,null,[[1,3]])}));return function(){return e.apply(this,arguments)}}();return n?(0,f.jsxs)("div",{className:"nest-screenshot-tool",children:[s?(0,f.jsxs)("div",{className:"annotation-interface",children:[(0,f.jsxs)("div",{className:"annotation-toolbar",children:[(0,f.jsxs)("div",{className:"tool-group",children:[(0,f.jsx)("button",{className:"tool-btn ".concat("rectangle"===g?"active":""),onClick:function(){return y("rectangle")},title:"Rectangle",children:(0,f.jsx)(U,{size:18})}),(0,f.jsx)("button",{className:"tool-btn ".concat("circle"===g?"active":""),onClick:function(){return y("circle")},title:"Circle",children:(0,f.jsx)(B,{size:18})}),(0,f.jsx)("button",{className:"tool-btn ".concat("arrow"===g?"active":""),onClick:function(){return y("arrow")},title:"Arrow",children:(0,f.jsx)(H,{size:18})}),(0,f.jsx)("button",{className:"tool-btn ".concat("text"===g?"active":""),onClick:function(){return y("text")},title:"Text",children:(0,f.jsx)(W,{size:18})})]}),(0,f.jsxs)("div",{className:"tool-group",children:[(0,f.jsxs)("button",{className:"tool-btn",onClick:function(){return R(!D)},title:"Color",children:[(0,f.jsx)(k,{size:18}),(0,f.jsx)("div",{className:"color-indicator",style:{backgroundColor:P}})]}),D&&(0,f.jsxs)("div",{className:"color-picker-dropdown",children:[(0,f.jsx)("div",{className:"colors-grid",children:["#ef4444","#f97316","#f59e0b","#10b981","#3b82f6","#8b5cf6","#ec4899","#1f2937"].map(function(e){return(0,f.jsx)("button",{className:"color-option ".concat(P===e?"selected":""),style:{backgroundColor:e},onClick:function(){j(e),R(!1)},title:"Select ".concat(e," color"),"aria-label":"Select ".concat(e," color")},e)})}),(0,f.jsx)("div",{className:"stroke-widths",children:[1,2,3,5,8].map(function(e){return(0,f.jsx)("button",{className:"stroke-option ".concat(z===e?"selected":""),onClick:function(){return O(e)},title:"Stroke width ".concat(e,"px"),"aria-label":"Stroke width ".concat(e,"px"),children:(0,f.jsx)("div",{className:"stroke-preview",style:{width:"".concat(2*e,"px"),height:"".concat(2*e,"px"),backgroundColor:P}})},e)})})]})]}),(0,f.jsxs)("div",{className:"tool-group",children:[(0,f.jsx)("button",{className:"tool-btn",onClick:function(){ce>0?(de(ce-1),w(le[ce-1])):0===ce&&(de(-1),w([]))},disabled:ce<0,title:"Undo",children:(0,f.jsx)(V,{size:18})}),(0,f.jsx)("button",{className:"tool-btn",onClick:function(){ce<le.length-1&&(de(ce+1),w(le[ce+1]))},disabled:ce>=le.length-1,title:"Redo",children:(0,f.jsx)($,{size:18})})]}),(0,f.jsxs)("div",{className:"tool-group",children:[(0,f.jsx)("button",{className:"tool-btn success",onClick:we,title:"Save to Nest",children:(0,f.jsx)(q,{size:18})}),(0,f.jsx)("button",{className:"tool-btn",onClick:function(){var e=fe.current;if(e){var t=document.createElement("a");t.download="nest-screenshot-".concat((new Date).toISOString().slice(0,19),".png"),t.href=e.toDataURL(),t.click()}},title:"Download",children:(0,f.jsx)(G,{size:18})}),(0,f.jsx)("button",{className:"tool-btn",onClick:function(){c(null),h(!1),w([]),ue([]),de(-1),_(null),E(!1),ee(!1),Q("")},title:"New Screenshot",children:(0,f.jsx)(A,{size:18})}),(0,f.jsx)("button",{className:"tool-btn danger",onClick:r,title:"Close",children:(0,f.jsx)(u,{size:18})})]})]}),(0,f.jsx)("div",{className:"canvas-container",children:(0,f.jsx)("canvas",{ref:fe,width:800,height:600,onMouseDown:me,onMouseMove:ge,onMouseUp:ye,style:{cursor:p?"crosshair":"default"}})}),Z&&(0,f.jsx)("div",{className:"text-input-modal",children:(0,f.jsxs)("div",{className:"text-input-content",children:[(0,f.jsx)("h4",{children:"Add Text"}),(0,f.jsx)("input",{type:"text",value:F,onChange:function(e){return Q(e.target.value)},placeholder:"Enter text...",autoFocus:!0,onKeyPress:function(e){"Enter"===e.key?ve():"Escape"===e.key&&(ee(!1),Q(""))}}),(0,f.jsxs)("div",{className:"text-input-actions",children:[(0,f.jsx)("button",{onClick:ve,className:"btn primary",children:"Add Text"}),(0,f.jsx)("button",{onClick:function(){ee(!1),Q("")},className:"btn secondary",children:"Cancel"})]})]})})]}):(0,f.jsxs)("div",{className:"capture-interface",children:[(0,f.jsxs)("div",{className:"capture-card",children:[(0,f.jsxs)("div",{className:"capture-header",children:[(0,f.jsx)(A,{size:32}),(0,f.jsx)("h3",{children:"Screenshot Tool"}),(0,f.jsx)("p",{children:"Capture and annotate screenshots instantly"})]}),(0,f.jsxs)("div",{className:"capture-actions",children:[(0,f.jsxs)("button",{className:"capture-btn primary",onClick:pe,disabled:a,children:[(0,f.jsx)(A,{size:20}),a?"Capturing...":"Capture Screen"]}),(0,f.jsxs)("button",{className:"capture-btn secondary",onClick:he,disabled:a,children:[(0,f.jsx)(U,{size:20}),"Capture Viewport"]})]})]}),(0,f.jsx)("button",{className:"close-btn",onClick:r,title:"Close screenshot tool",children:(0,f.jsx)(u,{size:20})})]}),(0,f.jsx)("style",{jsx:!0,children:"\n        .nest-screenshot-tool {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 999999;\n          background: rgba(0, 0, 0, 0.9);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n        }\n\n        .capture-interface {\n          position: relative;\n        }\n\n        .capture-card {\n          background: white;\n          border-radius: 16px;\n          padding: 40px;\n          text-align: center;\n          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n          max-width: 400px;\n        }\n\n        .capture-header h3 {\n          margin: 16px 0 8px 0;\n          font-size: 24px;\n          font-weight: 600;\n          color: #1f2937;\n        }\n\n        .capture-header p {\n          margin: 0 0 32px 0;\n          color: #6b7280;\n          font-size: 14px;\n        }\n\n        .capture-actions {\n          display: flex;\n          flex-direction: column;\n          gap: 12px;\n        }\n\n        .capture-btn {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n          padding: 12px 24px;\n          border: none;\n          border-radius: 8px;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        .capture-btn.primary {\n          background: #3b82f6;\n          color: white;\n        }\n\n        .capture-btn.primary:hover:not(:disabled) {\n          background: #2563eb;\n        }\n\n        .capture-btn.secondary {\n          background: #f3f4f6;\n          color: #374151;\n        }\n\n        .capture-btn.secondary:hover {\n          background: #e5e7eb;\n        }\n\n        .capture-btn:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .close-btn {\n          position: absolute;\n          top: -50px;\n          right: -50px;\n          width: 40px;\n          height: 40px;\n          border: none;\n          background: rgba(255, 255, 255, 0.1);\n          color: white;\n          border-radius: 50%;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: background 0.2s;\n        }\n\n        .close-btn:hover {\n          background: rgba(255, 255, 255, 0.2);\n        }\n\n        .annotation-interface {\n          width: 100%;\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .annotation-toolbar {\n          display: flex;\n          align-items: center;\n          gap: 16px;\n          padding: 16px;\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(8px);\n        }\n\n        .tool-group {\n          display: flex;\n          gap: 4px;\n          position: relative;\n        }\n\n        .tool-btn {\n          width: 40px;\n          height: 40px;\n          border: none;\n          background: transparent;\n          color: #374151;\n          border-radius: 8px;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s;\n          position: relative;\n        }\n\n        .tool-btn:hover {\n          background: #f3f4f6;\n        }\n\n        .tool-btn.active {\n          background: #3b82f6;\n          color: white;\n        }\n\n        .tool-btn.success {\n          color: #10b981;\n        }\n\n        .tool-btn.success:hover {\n          background: #10b981;\n          color: white;\n        }\n\n        .tool-btn.danger {\n          color: #ef4444;\n        }\n\n        .tool-btn.danger:hover {\n          background: #ef4444;\n          color: white;\n        }\n\n        .tool-btn:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .color-indicator {\n          position: absolute;\n          bottom: 2px;\n          right: 2px;\n          width: 8px;\n          height: 8px;\n          border-radius: 50%;\n          border: 1px solid rgba(255, 255, 255, 0.8);\n        }\n\n        .color-picker-dropdown {\n          position: absolute;\n          top: 100%;\n          left: 0;\n          background: white;\n          border-radius: 8px;\n          padding: 12px;\n          box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n          z-index: 1000;\n        }\n\n        .colors-grid {\n          display: grid;\n          grid-template-columns: repeat(4, 1fr);\n          gap: 4px;\n          margin-bottom: 12px;\n        }\n\n        .color-option {\n          width: 24px;\n          height: 24px;\n          border: 2px solid transparent;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: transform 0.2s;\n        }\n\n        .color-option:hover {\n          transform: scale(1.1);\n        }\n\n        .color-option.selected {\n          border-color: #374151;\n          transform: scale(1.1);\n        }\n\n        .stroke-widths {\n          display: flex;\n          gap: 8px;\n          justify-content: center;\n        }\n\n        .stroke-option {\n          width: 32px;\n          height: 32px;\n          border: 2px solid transparent;\n          border-radius: 4px;\n          background: #f3f4f6;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s;\n        }\n\n        .stroke-option:hover {\n          background: #e5e7eb;\n        }\n\n        .stroke-option.selected {\n          border-color: #3b82f6;\n          background: #dbeafe;\n        }\n\n        .stroke-preview {\n          border-radius: 50%;\n        }\n\n        .canvas-container {\n          flex: 1;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 20px;\n        }\n\n        .canvas-container canvas {\n          max-width: calc(100% - 40px);\n          max-height: calc(100% - 40px);\n          border: 1px solid rgba(255, 255, 255, 0.2);\n          border-radius: 8px;\n          background: white;\n          object-fit: contain;\n          width: auto;\n          height: auto;\n        }\n\n        .text-input-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 1001;\n        }\n\n        .text-input-content {\n          background: white;\n          border-radius: 12px;\n          padding: 24px;\n          min-width: 300px;\n        }\n\n        .text-input-content h4 {\n          margin: 0 0 16px 0;\n          font-size: 18px;\n          font-weight: 600;\n          color: #1f2937;\n        }\n\n        .text-input-content input {\n          width: 100%;\n          padding: 12px;\n          border: 1px solid #d1d5db;\n          border-radius: 8px;\n          font-size: 14px;\n          margin-bottom: 16px;\n          outline: none;\n        }\n\n        .text-input-content input:focus {\n          border-color: #3b82f6;\n        }\n\n        .text-input-actions {\n          display: flex;\n          gap: 8px;\n          justify-content: flex-end;\n        }\n\n        .btn {\n          padding: 8px 16px;\n          border: none;\n          border-radius: 6px;\n          font-size: 14px;\n          font-weight: 500;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n\n        .btn.primary {\n          background: #3b82f6;\n          color: white;\n        }\n\n        .btn.primary:hover {\n          background: #2563eb;\n        }\n\n        .btn.secondary {\n          background: #f3f4f6;\n          color: #374151;\n        }\n\n        .btn.secondary:hover {\n          background: #e5e7eb;\n        }\n      "})]}):null};var le=n(4995);function ue(e){return ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ue(e)}function se(){var e,t,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function a(n,r,o,a){var u=r&&r.prototype instanceof l?r:l,s=Object.create(u.prototype);return ce(s,"_invoke",function(n,r,o){var a,l,u,s=0,c=o||[],d=!1,f={p:0,n:0,v:e,a:p,f:p.bind(e,4),d:function(t,n){return a=t,l=0,u=e,f.n=n,i}};function p(n,r){for(l=n,u=r,t=0;!d&&s&&!o&&t<c.length;t++){var o,a=c[t],p=f.p,h=a[2];n>3?(o=h===r)&&(u=a[(l=a[4])?5:(l=3,3)],a[4]=a[5]=e):a[0]<=p&&((o=n<2&&p<a[1])?(l=0,f.v=r,f.n=a[1]):p<h&&(o=n<3||a[0]>r||r>h)&&(a[4]=n,a[5]=r,f.n=h,l=0))}if(o||n>1)return i;throw d=!0,r}return function(o,c,h){if(s>1)throw TypeError("Generator is already running");for(d&&1===c&&p(c,h),l=c,u=h;(t=l<2?e:u)||!d;){a||(l?l<3?(l>1&&(f.n=-1),p(l,u)):f.n=u:f.v=u);try{if(s=2,a){if(l||(o="next"),t=a[o]){if(!(t=t.call(a,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,l<2&&(l=0)}else 1===l&&(t=a.return)&&t.call(a),l<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),l=1);a=e}else if((t=(d=f.n<0)?u:n.call(r,f))!==i)break}catch(t){a=e,l=1,u=t}finally{s=1}}return{value:t,done:d}}}(n,o,a),!0),s}var i={};function l(){}function u(){}function s(){}t=Object.getPrototypeOf;var c=[][r]?t(t([][r]())):(ce(t={},r,function(){return this}),t),d=s.prototype=l.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,ce(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=s,ce(d,"constructor",s),ce(s,"constructor",u),u.displayName="GeneratorFunction",ce(s,o,"GeneratorFunction"),ce(d),ce(d,o,"Generator"),ce(d,r,function(){return this}),ce(d,"toString",function(){return"[object Generator]"}),(se=function(){return{w:a,m:f}})()}function ce(e,t,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}ce=function(e,t,n,r){if(t)o?o(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n;else{var a=function(t,n){ce(e,t,function(e){return this._invoke(t,n,e)})};a("next",0),a("throw",1),a("return",2)}},ce(e,t,n,r)}function de(e,t,n,r,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,o)}function fe(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function i(e){de(a,r,o,i,l,"next",e)}function l(e){de(a,r,o,i,l,"throw",e)}i(void 0)})}}function pe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,me(r.key),r)}}function he(e,t,n){return(t=me(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function me(e){var t=function(e){if("object"!=ue(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=ue(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ue(t)?t:t+""}var ge=new(function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),he(this,"ocrWorker",null),he(this,"isOcrInitialized",!1),this.initializeOCR()},t=[{key:"initializeOCR",value:(f=fe(se().m(function e(){var t;return se().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,(0,le.createWorker)("eng");case 1:this.ocrWorker=e.v,this.isOcrInitialized=!0,console.log("MediaProcessor: OCR worker initialized"),e.n=3;break;case 2:e.p=2,t=e.v,console.error("MediaProcessor: Failed to initialize OCR worker:",t);case 3:return e.a(2)}},e,this,[[0,2]])})),function(){return f.apply(this,arguments)})},{key:"processScreenshot",value:(d=fe(se().m(function e(t){var n,r,o,a,i,l,u;return se().w(function(e){for(;;)switch(e.n){case 0:if(console.log("MediaProcessor: Processing screenshot with OCR"),n=Date.now(),e.p=1,this.isOcrInitialized){e.n=2;break}return e.n=2,this.initializeOCR();case 2:if(r="",!this.ocrWorker){e.n=4;break}return e.n=3,this.ocrWorker.recognize(t);case 3:o=e.v,a=o.data.text,r=a.trim();case 4:return e.n=5,this.getImageDimensions(t);case 5:return i=e.v,l=Date.now()-n,console.log("MediaProcessor: OCR completed in ".concat(l,"ms, extracted ").concat(r.length," characters")),e.a(2,{type:"image",originalData:t,extractedText:r,metadata:{filename:"screenshot_".concat(Date.now(),".png"),dimensions:i,processingTimeMs:l,ocrConfidence:r.length>0?.8:.1}});case 6:return e.p=6,u=e.v,console.error("MediaProcessor: Screenshot OCR failed:",u),e.a(2,{type:"image",originalData:t,extractedText:"",metadata:{filename:"screenshot_".concat(Date.now(),".png"),error:u.message}})}},e,this,[[1,6]])})),function(e){return d.apply(this,arguments)})},{key:"processVoiceMemo",value:(c=fe(se().m(function e(t){var n,r,o,a,i;return se().w(function(e){for(;;)switch(e.n){case 0:if(console.log("MediaProcessor: Processing voice memo"),n=Date.now(),e.p=1,r="",!("webkitSpeechRecognition"in window)&&!("SpeechRecognition"in window)){e.n=3;break}return e.n=2,this.transcribeWithWebSpeech(t);case 2:r=e.v;case 3:if(r){e.n=5;break}return e.n=4,this.transcribeWithWhisper(t);case 4:r=e.v;case 5:return e.n=6,this.getAudioDuration(t);case 6:return o=e.v,a=Date.now()-n,console.log("MediaProcessor: Voice transcription completed in ".concat(a,"ms")),e.a(2,{type:"audio",originalData:t,extractedText:r,metadata:{filename:"voice_memo_".concat(Date.now(),".webm"),duration:o,mimeType:t.type,size:t.size,processingTimeMs:a}});case 7:return e.p=7,i=e.v,console.error("MediaProcessor: Voice transcription failed:",i),e.a(2,{type:"audio",originalData:t,extractedText:"",metadata:{filename:"voice_memo_".concat(Date.now(),".webm"),error:i.message}})}},e,this,[[1,7]])})),function(e){return c.apply(this,arguments)})},{key:"processPDF",value:(s=fe(se().m(function e(t){var n;return se().w(function(e){for(;;)switch(e.n){case 0:throw console.log("MediaProcessor: Processing PDF"),Date.now(),e.p=1,new Error("PDF text extraction is not available in browser environment. Consider using a server-side solution.");case 2:return e.p=2,n=e.v,console.error("MediaProcessor: PDF processing failed:",n),e.a(2,{type:"pdf",originalData:t,extractedText:"",metadata:{filename:"document_".concat(Date.now(),".pdf"),size:t.byteLength,error:n.message}})}},e,null,[[1,2]])})),function(e){return s.apply(this,arguments)})},{key:"processEmail",value:(u=fe(se().m(function e(t,n){var r,o,a,i,l,u,s,c,d;return se().w(function(e){for(;;)switch(e.n){case 0:return console.log("MediaProcessor: Processing email"),e.p=1,a=new DOMParser,(i=a.parseFromString(t,"text/html")).querySelectorAll("script, style").forEach(function(e){return e.remove()}),l=(null===(r=i.body)||void 0===r||null===(r=r.textContent)||void 0===r?void 0:r.trim())||"",u=(null===(o=i.querySelector('meta[name="subject"]'))||void 0===o?void 0:o.getAttribute("content"))||(null==n?void 0:n.subject)||"Unknown Subject",s=(null==n?void 0:n.from)||"Unknown Sender",c=(null==n?void 0:n.date)||new Date,e.a(2,{type:"email",originalData:t,extractedText:l,metadata:{subject:u,from:s,publishDate:c,wordCount:l.split(/\s+/).length}});case 2:return e.p=2,d=e.v,console.error("MediaProcessor: Email processing failed:",d),e.a(2,{type:"email",originalData:t,extractedText:"",metadata:{error:d.message}})}},e,null,[[1,2]])})),function(e,t){return u.apply(this,arguments)})},{key:"processSocialPost",value:(l=fe(se().m(function e(t,n,r){var o,a,i,l,u,s,c,d;return se().w(function(e){for(;;)switch(e.n){case 0:console.log("MediaProcessor: Processing ".concat(n," post")),e.p=1,a=new DOMParser,i=a.parseFromString(t,"text/html"),l="",u="",c=n.toLowerCase(),e.n="twitter"===c||"x"===c?2:"linkedin"===c?3:"medium"===c?4:5;break;case 2:return l=this.extractTwitterContent(i),u=this.extractTwitterAuthor(i),s=this.extractTwitterDate(i),e.a(3,6);case 3:return l=this.extractLinkedInContent(i),u=this.extractLinkedInAuthor(i),e.a(3,6);case 4:return l=this.extractMediumContent(i),u=this.extractMediumAuthor(i),e.a(3,6);case 5:l=(null===(o=i.body)||void 0===o||null===(o=o.textContent)||void 0===o?void 0:o.trim())||"";case 6:return e.a(2,{type:"social",originalData:t,extractedText:l,metadata:{platform:n,author:u||(null==r?void 0:r.author),publishDate:s||(null==r?void 0:r.publishDate),wordCount:l.split(/\s+/).length}});case 7:return e.p=7,d=e.v,console.error("MediaProcessor: ".concat(n," post processing failed:"),d),e.a(2,{type:"social",originalData:t,extractedText:"",metadata:{platform:n,error:d.message}})}},e,this,[[1,7]])})),function(e,t,n){return l.apply(this,arguments)})},{key:"createAttachment",value:function(e,t){var n,r,o="".concat(t,"_").concat(e.type,"_").concat(Date.now());return"string"==typeof e.originalData?n=e.originalData:e.originalData instanceof Blob&&(e.originalData.size<1048576?n=URL.createObjectURL(e.originalData):r="attachments/".concat(t,"/").concat(o)),{id:o,type:e.type,filename:e.metadata.filename||"".concat(e.type,"_").concat(Date.now()),mimeType:e.metadata.mimeType||this.getMimeType(e.type),size:e.metadata.size||0,dataURL:n,storageKey:r,extractedText:e.extractedText,metadata:e.metadata,createdAt:new Date}}},{key:"getImageDimensions",value:(i=fe(se().m(function e(t){return se().w(function(e){for(;;)if(0===e.n)return e.a(2,new Promise(function(e){var n=new Image;n.onload=function(){return e({width:n.width,height:n.height})},n.onerror=function(){return e({width:0,height:0})},n.src=t}))},e)})),function(e){return i.apply(this,arguments)})},{key:"getAudioDuration",value:(a=fe(se().m(function e(t){return se().w(function(e){for(;;)if(0===e.n)return e.a(2,new Promise(function(e){var n=new Audio;n.onloadedmetadata=function(){return e(n.duration)},n.onerror=function(){return e(0)},n.src=URL.createObjectURL(t)}))},e)})),function(e){return a.apply(this,arguments)})},{key:"transcribeWithWebSpeech",value:(o=fe(se().m(function e(t){return se().w(function(e){for(;;)if(0===e.n)return e.a(2,new Promise(function(e){e("")}))},e)})),function(e){return o.apply(this,arguments)})},{key:"transcribeWithWhisper",value:(r=fe(se().m(function e(t){return se().w(function(e){for(;;)if(0===e.n)return console.log("MediaProcessor: Whisper transcription not implemented yet"),e.a(2,"")},e)})),function(e){return r.apply(this,arguments)})},{key:"extractTwitterContent",value:function(e){var t,n=e.querySelector('[data-testid="tweetText"]');return(null==n||null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}},{key:"extractTwitterAuthor",value:function(e){var t,n=e.querySelector('[data-testid="User-Name"]');return(null==n||null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}},{key:"extractTwitterDate",value:function(e){var t=e.querySelector("time"),n=null==t?void 0:t.getAttribute("datetime");return n?new Date(n):void 0}},{key:"extractLinkedInContent",value:function(e){var t,n=e.querySelector(".feed-shared-update-v2__description");return(null==n||null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}},{key:"extractLinkedInAuthor",value:function(e){var t,n=e.querySelector(".feed-shared-actor__name");return(null==n||null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}},{key:"extractMediumContent",value:function(e){var t,n=e.querySelector("article");return(null==n||null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}},{key:"extractMediumAuthor",value:function(e){var t,n=e.querySelector('[rel="author"]');return(null==n||null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}},{key:"getMimeType",value:function(e){return{image:"image/png",audio:"audio/webm",video:"video/webm",pdf:"application/pdf",email:"text/html",social:"text/html"}[e]||"application/octet-stream"}},{key:"cleanup",value:(n=fe(se().m(function e(){return se().w(function(e){for(;;)switch(e.n){case 0:if(!this.ocrWorker){e.n=2;break}return e.n=1,this.ocrWorker.terminate();case 1:this.ocrWorker=null,this.isOcrInitialized=!1;case 2:return e.a(2)}},e,this)})),function(){return n.apply(this,arguments)})}],t&&pe(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n,r,o,a,i,l,u,s,c,d,f}());function ye(){var e,t,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function a(n,r,o,a){var u=r&&r.prototype instanceof l?r:l,s=Object.create(u.prototype);return ve(s,"_invoke",function(n,r,o){var a,l,u,s=0,c=o||[],d=!1,f={p:0,n:0,v:e,a:p,f:p.bind(e,4),d:function(t,n){return a=t,l=0,u=e,f.n=n,i}};function p(n,r){for(l=n,u=r,t=0;!d&&s&&!o&&t<c.length;t++){var o,a=c[t],p=f.p,h=a[2];n>3?(o=h===r)&&(u=a[(l=a[4])?5:(l=3,3)],a[4]=a[5]=e):a[0]<=p&&((o=n<2&&p<a[1])?(l=0,f.v=r,f.n=a[1]):p<h&&(o=n<3||a[0]>r||r>h)&&(a[4]=n,a[5]=r,f.n=h,l=0))}if(o||n>1)return i;throw d=!0,r}return function(o,c,h){if(s>1)throw TypeError("Generator is already running");for(d&&1===c&&p(c,h),l=c,u=h;(t=l<2?e:u)||!d;){a||(l?l<3?(l>1&&(f.n=-1),p(l,u)):f.n=u:f.v=u);try{if(s=2,a){if(l||(o="next"),t=a[o]){if(!(t=t.call(a,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,l<2&&(l=0)}else 1===l&&(t=a.return)&&t.call(a),l<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),l=1);a=e}else if((t=(d=f.n<0)?u:n.call(r,f))!==i)break}catch(t){a=e,l=1,u=t}finally{s=1}}return{value:t,done:d}}}(n,o,a),!0),s}var i={};function l(){}function u(){}function s(){}t=Object.getPrototypeOf;var c=[][r]?t(t([][r]())):(ve(t={},r,function(){return this}),t),d=s.prototype=l.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,ve(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=s,ve(d,"constructor",s),ve(s,"constructor",u),u.displayName="GeneratorFunction",ve(s,o,"GeneratorFunction"),ve(d),ve(d,o,"Generator"),ve(d,r,function(){return this}),ve(d,"toString",function(){return"[object Generator]"}),(ye=function(){return{w:a,m:f}})()}function ve(e,t,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}ve=function(e,t,n,r){if(t)o?o(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n;else{var a=function(t,n){ve(e,t,function(e){return this._invoke(t,n,e)})};a("next",0),a("throw",1),a("return",2)}},ve(e,t,n,r)}function be(e,t,n,r,o,a,i){try{var l=e[a](i),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,o)}function we(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function i(e){be(a,r,o,i,l,"next",e)}function l(e){be(a,r,o,i,l,"throw",e)}i(void 0)})}}console.log("Nest content script loaded"),document.addEventListener("keydown",function(e){var t=e.target;if(!t||"INPUT"!==t.tagName&&"TEXTAREA"!==t.tagName&&!t.isContentEditable){var n=e.key.toLowerCase();return e.metaKey&&"a"===n||e.altKey&&"a"===n?(e.preventDefault(),void at()):(e.metaKey||e.ctrlKey)&&e.shiftKey&&"s"===n?(e.preventDefault(),void chrome.runtime.sendMessage({action:"saveCurrentPage"})):(e.metaKey||e.ctrlKey)&&e.shiftKey&&"i"===n?(e.preventDefault(),void chrome.runtime.sendMessage({action:"saveCurrentPage",toInbox:!0})):!e.metaKey&&!e.ctrlKey||e.shiftKey||"k"!==n?void 0:(e.preventDefault(),void chrome.runtime.sendMessage({action:"openCommandPalette"}))}});var xe=null,ke=!1,Se=null,Ee=!1,Ce=null,Ne=!1,_e=null,Te=null,Pe=new Map,je=!0,Le=["msn.com","cnn.com","bbc.com","foxnews.com","washingtonpost.com","nytimes.com"],ze={yellow:{primary:"#fef08a",secondary:"#fde047",tertiary:"#facc15"},blue:{primary:"#bfdbfe",secondary:"#93c5fd",tertiary:"#60a5fa"},green:{primary:"#bbf7d0",secondary:"#86efac",tertiary:"#4ade80"},pink:{primary:"#fce7f3",secondary:"#f9a8d4",tertiary:"#ec4899"},purple:{primary:"#e9d5ff",secondary:"#c084fc",tertiary:"#a855f7"},orange:{primary:"#fed7aa",secondary:"#fdba74",tertiary:"#fb923c"},red:{primary:"#fecaca",secondary:"#fca5a5",tertiary:"#ef4444"}};function Oe(){return Me.apply(this,arguments)}function Me(){return(Me=we(ye().m(function e(){var t,n;return ye().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.get("nest_settings");case 1:return t=e.v,n=t.nest_settings||{},e.a(2,{color:n.highlightColor||"yellow",style:n.highlightStyle||"gradient"});case 2:return e.p=2,e.v,console.warn("[Nest] Could not get highlight settings, using defaults"),e.a(2,{color:"yellow",style:"gradient"})}},e,null,[[0,2]])}))).apply(this,arguments)}function De(e,t){var n=ze[e]||ze.yellow;switch(t){case"solid":return"\n        background: ".concat(n.primary," !important;\n        border: 1px solid ").concat(n.secondary," !important;\n      ");case"gradient":default:return"\n        background: linear-gradient(120deg, ".concat(n.primary," 0%, ").concat(n.secondary," 100%) !important;\n        border: 1px solid ").concat(n.tertiary," !important;\n      ");case"underline":return"\n        background: transparent !important;\n        border-bottom: 3px solid ".concat(n.secondary," !important;\n        border-radius: 0 !important;\n        box-shadow: 0 3px 0 ").concat(n.primary," !important;\n      ");case"outline":return"\n        background: transparent !important;\n        border: 2px solid ".concat(n.secondary," !important;\n        box-shadow: 0 0 0 1px ").concat(n.primary," !important;\n      ")}}function Re(){var e=window.location.hostname.toLowerCase();return Le.some(function(t){return e.includes(t)})}function Ie(){console.log("Nest: Text selection event fired"),setTimeout(function(){var e=window.getSelection(),t=null==e?void 0:e.toString().trim();if(console.log("Nest: Selected text:",t,"Length:",null==t?void 0:t.length),t&&t.length>10){console.log("Nest: Text selection meets minimum length requirement");var n=null==e?void 0:e.getRangeAt(0);if(n){console.log("Nest: Range found, creating highlight button");var r=function(e){var t=e.commonAncestorContainer.textContent||"",n=e.startOffset,r=e.endOffset,o=Math.max(0,n-100),a=Math.min(t.length,r+100);return t.substring(o,a)}(n);_e={text:t,context:r,position:Fe(n)},function(e){console.log("Nest: Creating highlight button"),Ue();var t=e.getBoundingClientRect();if(console.log("Nest: Button position:",t),0===t.width&&0===t.height){console.log("Nest: Range rect is empty, trying alternative positioning");var n=window.getSelection();if(n&&n.rangeCount>0){var r=e.startContainer,o=null;if(r.nodeType===Node.TEXT_NODE&&r.parentElement?o=r.parentElement.getBoundingClientRect():r.nodeType===Node.ELEMENT_NODE&&(o=r.getBoundingClientRect()),console.log("Nest: Alternative positioning:",o),o&&o.width>0&&o.height>0)return void Ae(o)}return console.log("Nest: All positioning methods failed, using viewport center fallback"),void Ae({bottom:window.innerHeight/2,left:window.innerWidth/2,top:window.innerHeight/2,right:window.innerWidth/2,width:0,height:0})}Ae(t)}(n)}}else console.log("Nest: Text selection too short or empty, hiding button"),Ue(),_e=null},100)}function Fe(e){return{startOffset:e.startOffset,endOffset:e.endOffset}}function Ae(e){(Te=document.createElement("div")).id="nest-highlight-button",Te.innerHTML='\n    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z" stroke="currentColor" stroke-width="2" stroke-linejoin="round"/>\n    </svg>\n    Save highlight\n  ';var t=window.scrollY||document.documentElement.scrollTop,n=window.scrollX||document.documentElement.scrollLeft,r=window.innerHeight,o=window.innerWidth,a=e.bottom||e.top||0,i=e.left||e.right||0;a<0&&(a=t+100),i<0&&(i=50);var l=a+10,u=Math.max(10,Math.min(o-200,i));if(console.log("Nest: Position calculation:",{rect:e,scrollTop:t,scrollLeft:n,rawTop:a,rawLeft:i,buttonTop:l,buttonLeft:u,viewportHeight:r,viewportWidth:o}),Te.style.cssText="\n    position: absolute;\n    top: ".concat(l,"px;\n    left: ").concat(u,"px;\n    background: #10b981 !important;\n    color: white !important;\n    padding: 8px 12px;\n    border-radius: 6px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    z-index: 999999 !important;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n    font-size: 13px;\n    font-weight: 500;\n    cursor: pointer;\n    display: flex !important;\n    align-items: center;\n    gap: 6px;\n    animation: fadeIn 0.2s ease-out;\n    border: 1px solid #059669 !important;\n    text-decoration: none;\n    pointer-events: auto !important;\n    user-select: none;\n    min-width: 140px;\n    opacity: 1 !important;\n    visibility: visible !important;\n  "),!document.getElementById("nest-highlight-styles")){var s=document.createElement("style");s.id="nest-highlight-styles",s.textContent="\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(-10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      #nest-highlight-button:hover {\n        background: #059669 !important;\n        transform: translateY(-1px);\n      }\n    ",document.head.appendChild(s)}Te.addEventListener("click",function(e){e.preventDefault(),e.stopPropagation(),console.log("Nest: Highlight button clicked!"),function(){if(console.log("[Nest] saveHighlight called",_e),_e){var e=_e;Ue();var t=window.getSelection(),n=null==t?void 0:t.getRangeAt(0);if(console.log("[Nest] saveHighlight selection",t,"range",n),n){var r="temp_".concat(Date.now());ht(n,r).then(function(t){t?(console.log("[Nest] Visual highlight created, sending to background script"),chrome.runtime.sendMessage({action:"saveHighlight",selectedText:e.text,context:e.context,position:e.position},function(e){console.log("[Nest] Received response from background script:",e),e&&e.success?(e.highlightId&&(t.setAttribute("data-nest-highlight-id",e.highlightId),Pe.delete(r),Pe.set(e.highlightId,t)),rt()):(gt(r),console.error("[Nest] Failed to save highlight:",null==e?void 0:e.error))})):(console.warn("[Nest] Visual highlight creation failed, still saving to storage"),chrome.runtime.sendMessage({action:"saveHighlight",selectedText:e.text,context:e.context,position:e.position},function(e){console.log("[Nest] Received response from background script:",e),e&&e.success?rt():console.error("[Nest] Failed to save highlight:",null==e?void 0:e.error)}))})}else console.warn("[Nest] No range available, still saving to storage"),chrome.runtime.sendMessage({action:"saveHighlight",selectedText:e.text,context:e.context,position:e.position},function(e){console.log("[Nest] Received response from background script:",e),e&&e.success?rt():console.error("[Nest] Failed to save highlight:",null==e?void 0:e.error)});_e=null}else console.log("[Nest] No selection data available")}()}),Te.addEventListener("mousedown",function(e){e.preventDefault(),console.log("Nest: Button mousedown")}),document.body.appendChild(Te),console.log("Nest: Highlight button added to page at position:",l,u),Te.offsetHeight;var c=Te.getBoundingClientRect(),d=c.top>=0&&c.top<=r&&c.left>=0&&c.left<=o;console.log("Nest: Button visibility check:",{buttonRect:c,isVisible:d}),d||(console.log("Nest: Button is not visible, repositioning to viewport center"),Te.style.top="".concat(t+r/2,"px"),Te.style.left="".concat(o/2-70,"px")),setTimeout(function(){Te&&Ue()},8e3)}function Ue(){Te&&Te.parentNode&&(Te.parentNode.removeChild(Te),Te=null)}function Be(){return qe()}function He(){return We.apply(this,arguments)}function We(){return(We=we(ye().m(function e(){var t,n,r,o,a,i,l,u,s,c,d,f;return ye().w(function(e){for(;;)switch(e.n){case 0:t=window.location.href,n=document.title,r=window.location.hostname,o=Ve(t,n,r),a=$e(o,t,r),i="",e.p=1,d=o,e.n="pdf"===d?2:"video"===d?4:"social"===d?6:"email"===d?8:10;break;case 2:return e.n=3,Ge();case 3:return i=e.v,e.a(3,11);case 4:return e.n=5,Ye();case 5:return u=e.v,i=u.content,l=u.mediaContent,e.a(3,11);case 6:return e.n=7,Xe(r);case 7:return s=e.v,i=s.content,l=s.mediaContent,e.a(3,11);case 8:return e.n=9,Je();case 9:return c=e.v,i=c.content,l=c.mediaContent,e.a(3,11);case 10:i=qe();case 11:e.n=13;break;case 12:e.p=12,f=e.v,console.error("Enhanced content extraction failed:",f),i=qe();case 13:return e.a(2,{content:i,contentType:o,metadata:a,mediaContent:l})}},e,null,[[1,12]])}))).apply(this,arguments)}function Ve(e,t,n){return e.includes(".pdf")||document.querySelector('embed[type="application/pdf"]')?"pdf":n.includes("youtube.com")||n.includes("youtu.be")||n.includes("vimeo.com")||n.includes("twitch.tv")?"video":n.includes("twitter.com")||n.includes("x.com")||n.includes("linkedin.com")||n.includes("medium.com")||n.includes("facebook.com")||n.includes("instagram.com")?"social":n.includes("gmail.com")||n.includes("outlook.")||n.includes("mail.")||t.toLowerCase().includes("email")?"email":"webpage"}function $e(e,t,n){var r,o,a,i,l,u={url:t,domain:n,extractedAt:(new Date).toISOString()},s=null===(r=document.querySelector('meta[property="og:title"]'))||void 0===r?void 0:r.getAttribute("content"),c=null===(o=document.querySelector('meta[property="og:description"]'))||void 0===o?void 0:o.getAttribute("content"),d=null===(a=document.querySelector('meta[property="og:image"]'))||void 0===a?void 0:a.getAttribute("content"),f=null===(i=document.querySelector('meta[name="author"]'))||void 0===i?void 0:i.getAttribute("content"),p=null===(l=document.querySelector('meta[property="article:published_time"]'))||void 0===l?void 0:l.getAttribute("content");switch(s&&(u.ogTitle=s),c&&(u.ogDescription=c),d&&(u.ogImage=d),f&&(u.author=f),p&&(u.publishDate=p),e){case"video":u.videoData=function(){var e={};if(window.location.hostname.includes("youtube.com")){var t,n,r,o,a,i,l=(null===(t=document.querySelector("#owner-name a"))||void 0===t?void 0:t.textContent)||(null===(n=document.querySelector("#upload-info #channel-name"))||void 0===n?void 0:n.textContent),u=(null===(r=document.querySelector("#count"))||void 0===r?void 0:r.textContent)||(null===(o=document.querySelector(".view-count"))||void 0===o?void 0:o.textContent),s=(null===(a=document.querySelector("#date"))||void 0===a?void 0:a.textContent)||(null===(i=document.querySelector("#upload-date"))||void 0===i?void 0:i.textContent);l&&(e.channel=l),u&&(e.views=u),s&&(e.uploadDate=s)}return e}();break;case"social":u.socialData=function(e){var t={platform:e};if(e.includes("twitter.com")||e.includes("x.com")){var n,r,o=null===(n=document.querySelector('[data-testid="User-Name"]'))||void 0===n?void 0:n.textContent,a=null===(r=document.querySelector("time"))||void 0===r?void 0:r.getAttribute("datetime");o&&(t.author=o),a&&(t.publishDate=a)}else if(e.includes("linkedin.com")){var i,l,u=null===(i=document.querySelector(".feed-shared-actor__name"))||void 0===i?void 0:i.textContent,s=null===(l=document.querySelector(".feed-shared-actor__description"))||void 0===l?void 0:l.textContent;u&&(t.author=u),s&&(t.company=s)}return t}(n);break;case"email":u.emailData=tt()}return u}function qe(){var e=document.querySelectorAll("script, style, nav, header, footer, .ad, .advertisement"),t=document.cloneNode(!0);e.forEach(function(e){var n=t.querySelector(e.tagName.toLowerCase());n&&n.remove()});var n=t.querySelector("main")||t.querySelector("article")||t.querySelector(".content")||t.querySelector("#content")||t.querySelector(".post")||t.querySelector(".entry")||t.body;n||(n=t.body);var r=n.textContent||n.innerText||"";return(r=r.replace(/\s+/g," ").replace(/\n\s*\n/g,"\n").trim()).length>3e3&&(r=r.substring(0,3e3)+"..."),r}function Ge(){return Qe.apply(this,arguments)}function Qe(){return(Qe=we(ye().m(function e(){var t,n,r,o;return ye().w(function(e){for(;;)switch(e.n){case 0:if(e.p=0,!(n=document.querySelector('embed[type="application/pdf"]'))||!n.src){e.n=1;break}return e.a(2,"PDF Document: ".concat(n.src,"\n\nTitle: ").concat(document.title));case 1:return r=(null===(t=document.body)||void 0===t?void 0:t.textContent)||"",e.a(2,r.trim()||"PDF: ".concat(document.title));case 2:return e.p=2,o=e.v,console.error("PDF extraction failed:",o),e.a(2,"PDF: ".concat(document.title))}},e,null,[[0,2]])}))).apply(this,arguments)}function Ye(){return Ke.apply(this,arguments)}function Ke(){return(Ke=we(ye().m(function e(){var t,n,r,o,a,i,l,u,s,c,d;return ye().w(function(e){for(;;)switch(e.n){case 0:if(e.p=0,t="",!window.location.hostname.includes("youtube.com")){e.n=1;break}return l=(null===(r=document.querySelector("h1.ytd-video-primary-info-renderer"))||void 0===r?void 0:r.textContent)||(null===(o=document.querySelector("#title h1"))||void 0===o?void 0:o.textContent)||document.title,u=(null===(a=document.querySelector("#description-text"))||void 0===a?void 0:a.textContent)||(null===(i=document.querySelector("#meta-contents #description"))||void 0===i?void 0:i.textContent)||"",s=new URLSearchParams(window.location.search),(c=s.get("t"))&&(n=parseInt(c)),t="".concat(l,"\n\n").concat(u),e.a(2,{content:t,mediaContent:{type:"video",originalData:window.location.href,extractedText:t,metadata:{platform:"youtube",timestamp:n,title:l,description:u}}});case 1:return t=document.title+"\n\n"+qe(),e.a(2,{content:t});case 2:return e.p=2,d=e.v,console.error("Video extraction failed:",d),e.a(2,{content:document.title+"\n\n"+qe()})}},e,null,[[0,2]])}))).apply(this,arguments)}function Xe(e){return Ze.apply(this,arguments)}function Ze(){return(Ze=we(ye().m(function e(t){var n,r,o;return ye().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,n=document.documentElement.outerHTML,e.n=1,ge.processSocialPost(n,t);case 1:return r=e.v,e.a(2,{content:r.extractedText||qe(),mediaContent:r});case 2:return e.p=2,o=e.v,console.error("Social content extraction failed:",o),e.a(2,{content:qe()})}},e,null,[[0,2]])}))).apply(this,arguments)}function Je(){return et.apply(this,arguments)}function et(){return(et=we(ye().m(function e(){var t,n,r,o;return ye().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,t=document.documentElement.outerHTML,n=tt(),e.n=1,ge.processEmail(t,n);case 1:return r=e.v,e.a(2,{content:r.extractedText||qe(),mediaContent:r});case 2:return e.p=2,o=e.v,console.error("Email extraction failed:",o),e.a(2,{content:qe()})}},e,null,[[0,2]])}))).apply(this,arguments)}function tt(){var e={};if(window.location.hostname.includes("gmail.com")){var t,n,r,o,a=(null===(t=document.querySelector("h2[data-thread-id]"))||void 0===t?void 0:t.textContent)||(null===(n=document.querySelector(".hP"))||void 0===n?void 0:n.textContent),i=(null===(r=document.querySelector(".go span[email]"))||void 0===r?void 0:r.getAttribute("email"))||(null===(o=document.querySelector(".gD"))||void 0===o?void 0:o.getAttribute("email"));a&&(e.subject=a),i&&(e.from=i)}return e}function nt(){var e=document.createElement("div");e.style.cssText="\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: #10b981;\n    color: white;\n    padding: 12px 24px;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    z-index: 10000;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    animation: slideIn 0.3s ease-out;\n  ",e.textContent="✓ Saved to Nest",ot(e)}function rt(){var e=document.createElement("div"),t=Re();e.style.cssText="\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: ".concat(t?"#f59e0b":"#8b5cf6",";\n    color: white;\n    padding: 12px 24px;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    z-index: 10000;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n    font-size: 14px;\n    font-weight: 500;\n    animation: slideIn 0.3s ease-out;\n    max-width: 300px;\n  "),e.innerHTML=t?'\n      <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 4px;">\n        <span>⚠️</span>\n        <strong>Highlight Saved</strong>\n      </div>\n      <div style="font-size: 12px; opacity: 0.9;">\n        Text saved to Nest. Visual highlighting not supported on this site.\n      </div>\n    ':"✨ Highlight saved to Nest",ot(e)}function ot(e){var t=document.createElement("style");t.textContent="\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n  ",document.head.appendChild(t),document.body.appendChild(e),setTimeout(function(){e.parentNode&&(e.style.animation="slideIn 0.3s ease-out reverse",setTimeout(function(){e.parentNode&&e.parentNode.removeChild(e)},300))},3e3)}function at(){console.log("Nest: toggleFloatingAI called, current state:",ke),ke?it():function(){if(console.log("Nest: showFloatingAI called"),xe)return console.log("Nest: Floating AI already exists, just showing"),ke=!0,void lt();var e=document.createElement("div");e.id="nest-floating-ai-container",document.body.appendChild(e),xe=t.createRoot(e),ke=!0,lt()}()}function it(){console.log("Nest: hideFloatingAI called"),ke=!1,lt()}function lt(){if(xe){var t=Be(),n=document.title,r=window.location.href,o=e.createElement(w,{isVisible:ke,onClose:it,pageContent:t,pageTitle:n,pageUrl:r});xe.render(o)}}function ut(){console.log("Nest: toggleStickyNotes called, current state:",Ee),Ee?(console.log("Nest: hideStickyNotes called"),Ee=!1,ct()):st()}function st(){if(console.log("Nest: showStickyNotes called"),Se)return console.log("Nest: Sticky notes already exists, just showing"),Ee=!0,void ct();var e=document.createElement("div");e.id="nest-sticky-notes-container",document.body.appendChild(e),Se=t.createRoot(e),Ee=!0,ct()}function ct(){if(Se){var t=e.createElement(F,{isVisible:Ee,onToggle:ut});Se.render(t)}}function dt(){console.log("Nest: toggleScreenshotTool called, current state:",Ne),Ne?ft():function(){if(console.log("Nest: showScreenshotTool called"),Ce)return console.log("Nest: Screenshot tool already exists, just showing"),Ne=!0,void pt();var e=document.createElement("div");e.id="nest-screenshot-tool-container",document.body.appendChild(e),Ce=t.createRoot(e),Ne=!0,pt()}()}function ft(){console.log("Nest: hideScreenshotTool called"),Ne=!1,pt()}function pt(){if(Ce){var t=e.createElement(ie,{isVisible:Ne,onClose:ft});Ce.render(t)}}function ht(e,t){return mt.apply(this,arguments)}function mt(){return(mt=we(ye().m(function e(t,n){var r,o,a,i,l,u,s,c,d,f,p,h,m,g,y,v;return ye().w(function(e){for(;;)switch(e.n){case 0:if(e.p=0,console.log("[Nest] createVisualHighlight called",{highlightId:n,range:t}),je){e.n=1;break}return console.log("[Nest] Highlights are disabled, skipping visual highlight"),e.a(2,null);case 1:if(t){e.n=2;break}return console.warn("[Nest] No range provided to createVisualHighlight"),e.a(2,null);case 2:if(!Re()){e.n=3;break}return console.log("[Nest] Problematic site detected, skipping visual highlight but saving text"),e.a(2,null);case 3:return e.n=4,Oe();case 4:return r=e.v,o=r.color,a=r.style,i=De(o,a),(l=document.createElement("span")).className="nest-highlight",l.setAttribute("data-nest-highlight-id",n),l.style.cssText="\n      ".concat(i,"\n      color: inherit !important;\n      padding: 2px 4px !important;\n      border-radius: 3px !important;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3) !important;\n      cursor: pointer !important;\n      position: relative !important;\n      display: inline !important;\n      text-decoration: none !important;\n      z-index: 2147483647 !important;\n      opacity: 1 !important;\n      visibility: visible !important;\n      font-weight: inherit !important;\n      font-size: inherit !important;\n      line-height: inherit !important;\n      margin: 0 !important;\n      vertical-align: baseline !important;\n    "),l.addEventListener("click",function(e){e.preventDefault(),e.stopPropagation(),yt(n)}),e.p=5,t.surroundContents(l),Pe.set(n,l),console.log("[Nest] Visual highlight created with surroundContents",{highlightId:n}),e.a(2,l);case 6:if(e.p=6,y=e.v,console.warn("[Nest] surroundContents failed",y),t.startContainer!==t.endContainer||t.startContainer.nodeType!==Node.TEXT_NODE){e.n=8;break}if(u=t.startContainer,s=u.textContent||"",c=s.slice(0,t.startOffset),d=s.slice(t.startOffset,t.endOffset),f=s.slice(t.endOffset),p=u.parentNode){e.n=7;break}return console.warn("[Nest] No parent node for text node"),e.a(2,null);case 7:return h=document.createTextNode(c),m=document.createTextNode(d),g=document.createTextNode(f),l.appendChild(m),p.insertBefore(h,u),p.insertBefore(l,u),p.insertBefore(g,u),p.removeChild(u),Pe.set(n,l),console.log("[Nest] Visual highlight created by splitting text node",{highlightId:n}),e.a(2,l);case 8:return console.warn("[Nest] Could not highlight selection (complex/multi-node selection)",{highlightId:n}),e.a(2,null);case 9:e.n=11;break;case 10:return e.p=10,v=e.v,console.error("[Nest] Failed to create visual highlight:",v),e.a(2,null);case 11:return e.a(2)}},e,null,[[5,6],[0,10]])}))).apply(this,arguments)}function gt(e){console.log("Nest: Removing highlight:",e);var t=Pe.get(e);if(t&&t.parentNode){var n=t.textContent||"",r=document.createTextNode(n);t.parentNode.replaceChild(r,t),Pe.delete(e),console.log("Nest: Highlight removed successfully")}}function yt(e){console.log("Nest: Showing highlight info for:",e);var t=document.createElement("div");t.id="nest-highlight-tooltip",t.style.cssText="\n    position: fixed;\n    background: #1f2937;\n    color: white;\n    padding: 12px 16px;\n    border-radius: 8px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    z-index: 10001;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n    font-size: 14px;\n    max-width: 300px;\n    animation: fadeIn 0.2s ease-out;\n  ",t.innerHTML='\n    <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 8px;">\n      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">\n        <path d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"/>\n      </svg>\n      <strong>Nest Highlight</strong>\n    </div>\n    <div style="margin-bottom: 8px;">\n      <button id="nest-remove-highlight" style="\n        background: #ef4444;\n        color: white;\n        border: none;\n        padding: 6px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 12px;\n      ">Remove Highlight</button>\n    </div>\n  ';var n=Pe.get(e);if(n){var r=n.getBoundingClientRect();t.style.left="".concat(r.left,"px"),t.style.top="".concat(r.bottom+10,"px")}document.body.appendChild(t);var o=t.querySelector("#nest-remove-highlight");o&&o.addEventListener("click",function(){gt(e),vt(),chrome.runtime.sendMessage({action:"removeHighlightFromStorage",highlightId:e,url:window.location.href})}),setTimeout(function(){document.addEventListener("click",vt,{once:!0})},100)}function vt(){var e=document.getElementById("nest-highlight-tooltip");e&&e.parentNode&&e.parentNode.removeChild(e)}function bt(){console.log("Nest: Checking for existing highlights on page");var e=window.location.href;chrome.runtime.sendMessage({action:"getHighlightsForPage",url:e},function(e){e&&e.highlights&&e.highlights.length>0?(console.log("Nest: Found",e.highlights.length,"highlights to restore"),wt(e.highlights)):console.log("Nest: No highlights found for this page")})}function wt(e){console.log("Nest: Restoring highlights:",e),e.forEach(function(e){if(e.position&&e.selectedText)try{var t=function(e,t){var n=[];return function e(r){if(r.nodeType===Node.TEXT_NODE)(r.textContent||"").includes(t)&&n.push(r);else for(var o=0;o<r.childNodes.length;o++)e(r.childNodes[o])}(e),n}(document.body,e.selectedText);if(t.length>0){var n,r=t[0],o=document.createRange(),a=(null===(n=r.textContent)||void 0===n?void 0:n.indexOf(e.selectedText))||0,i=a+e.selectedText.length;o.setStart(r,a),o.setEnd(r,i),ht(o,e.id),console.log("Nest: Restored highlight:",e.id)}else console.log("Nest: Could not find text for highlight:",e.id)}catch(t){console.error("Nest: Failed to restore highlight:",e.id,t)}})}function xt(e){je=e,e?(Pe.forEach(function(e,t){e.style.display="inline",e.style.opacity="1"}),console.log("Nest: Highlights enabled")):(Pe.forEach(function(e,t){e.style.display="none",e.style.opacity="0"}),console.log("Nest: Highlights disabled"))}function kt(){if(!document.getElementById("nest-highlight-styles")){var e=document.createElement("style");e.id="nest-highlight-styles",e.textContent="\n    span.nest-highlight[data-nest-highlight-id] {\n      background: linear-gradient(120deg, #fef08a 0%, #fde047 100%) !important;\n      color: inherit !important;\n      padding: 2px 0 !important;\n      border-radius: 3px !important;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) !important;\n      transition: all 0.2s ease !important;\n      cursor: pointer !important;\n      position: relative !important;\n      display: inline !important;\n      text-decoration: none !important;\n      border: none !important;\n      outline: none !important;\n      z-index: 2147483647 !important;\n    }\n    span.nest-highlight[data-nest-highlight-id]:hover {\n      background: linear-gradient(120deg, #fde047 0%, #facc15 100%) !important;\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15) !important;\n      transform: translateY(-1px) !important;\n    }\n    span.nest-highlight[data-nest-highlight-id]::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 3px;\n      opacity: 0;\n      transition: opacity 0.2s ease;\n      pointer-events: none;\n    }\n    span.nest-highlight[data-nest-highlight-id]:hover::before {\n      opacity: 1;\n    }\n    #nest-highlight-tooltip {\n      animation: fadeIn 0.2s ease-out;\n    }\n    @keyframes fadeIn {\n      from { opacity: 0; transform: translateY(-10px); }\n      to { opacity: 1; transform: translateY(0); }\n    }\n  ",document.head.appendChild(e)}}chrome.runtime.onMessage.addListener(function(){var e=we(ye().m(function e(t,n,r){var o,a,i,l;return ye().w(function(e){for(;;)switch(e.n){case 0:if(console.log("Content Script: Message received:",t),"getPageContent"!==t.action){e.n=1;break}o=Be(),console.log("Content Script: Sending page content, length:",o.length),r({content:o}),e.n=7;break;case 1:if("getEnhancedPageContent"!==t.action){e.n=6;break}return e.p=2,e.n=3,He();case 3:a=e.v,console.log("Content Script: Sending enhanced page content:",a.contentType),r({enhancedContent:a}),e.n=5;break;case 4:e.p=4,l=e.v,console.error("Enhanced content extraction failed:",l),i=Be(),r({enhancedContent:{content:i,contentType:"webpage",metadata:{url:window.location.href,domain:window.location.hostname,extractedAt:(new Date).toISOString()}}});case 5:e.n=7;break;case 6:"showSaveConfirmation"===t.action?nt():"showHighlightConfirmation"===t.action?rt():"toggleFloatingAI"===t.action?(console.log("Nest: Toggle floating AI"),at(),r({success:!0})):"toggleStickyNotes"===t.action?(console.log("Nest: Toggle sticky notes"),ut(),r({success:!0})):"toggleScreenshotTool"===t.action?(console.log("Nest: Toggle screenshot tool"),dt(),r({success:!0})):"restoreHighlights"===t.action?(console.log("Nest: Restoring highlights"),wt(t.highlights),r({success:!0})):"removeHighlight"===t.action?(console.log("Nest: Removing highlight"),gt(t.highlightId),r({success:!0})):"toggleHighlights"===t.action&&(console.log("Nest: Toggling highlights"),xt(t.enabled),r({success:!0}));case 7:return e.a(2,!0)}},e,null,[[2,4]])}));return function(t,n,r){return e.apply(this,arguments)}}()),document.addEventListener("DOMContentLoaded",function(){console.log("Nest: DOM loaded, checking for existing highlights"),bt()}),window.addEventListener("load",function(){console.log("Nest: Page loaded, checking for existing highlights"),bt()}),document.addEventListener("mouseup",Ie),document.addEventListener("keyup",Ie),console.log("Nest: Text selection event listeners added"),document.addEventListener("click",function(e){Te&&!Te.contains(e.target)&&Ue()}),document.addEventListener("keydown",function(e){e.altKey&&"a"===e.key&&(e.preventDefault(),at()),e.altKey&&"s"===e.key&&(e.preventDefault(),ut()),e.altKey&&"c"===e.key&&(e.preventDefault(),dt())}),setTimeout(function(){st()},1e3),document.addEventListener("DOMContentLoaded",function(){kt()}),window.addEventListener("load",function(){kt()})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5qcyIsIm1hcHBpbmdzIjoiO2lDQUFBLE1BQU1BLEVBQVksRUFBUSxPQUNwQixJQUFFQyxHQUFRLEVBQVEsTUFDbEJDLEVBQVEsRUFBUSxNQUV0QixJQUFJQyxFQUFtQixFQUV2QkMsRUFBT0MsUUFBVSxLQUNmLE1BQU1DLEVBQUtKLEVBQU0sWUFBYUMsR0FDeEJJLEVBQVUsQ0FBQyxFQUNYQyxFQUFpQixDQUFDLEVBQ3hCLElBQUlDLEVBQVcsR0FFZk4sR0FBb0IsRUFFcEIsTUFDTU8sRUFBZ0IsSUFBTUMsT0FBT0MsS0FBS0wsR0FBU00sT0FFM0NDLEVBQVUsS0FDZCxHQUF3QixJQUFwQkwsRUFBU0ksT0FBYyxDQUN6QixNQUFNRSxFQUFPSixPQUFPQyxLQUFLTCxHQUN6QixJQUFLLElBQUlTLEVBQUksRUFBR0EsRUFBSUQsRUFBS0YsT0FBUUcsR0FBSyxFQUNwQyxRQUF1QyxJQUE1QlIsRUFBZU8sRUFBS0MsSUFBcUIsQ0FDbERQLEVBQVMsR0FBR0YsRUFBUVEsRUFBS0MsS0FDekIsS0FDRixDQUVKLEdBR0lDLEVBQVEsQ0FBQ0MsRUFBUUMsSUFBWSxJQUM3QkMsUUFBUSxDQUFDQyxFQUFTQyxLQUNwQixNQUFNQyxFQUFNdkIsRUFBVSxDQUFFa0IsU0FBUUMsWUFDaENWLEVBQVNlLEtBQUtDLE1BQU9DLElBQ25CakIsRUFBU2tCLFFBQ1RuQixFQUFla0IsRUFBRXBCLElBQU1pQixFQUN2QixJQUNFRixRQUFjSyxFQUFFUixHQUFRVSxNQUFNQyxLQUFNLElBQUlWLEVBQVNJLEVBQUlqQixLQUN2RCxDQUFFLE1BQU93QixHQUNQUixFQUFPUSxFQUNULENBQUUsZUFDT3RCLEVBQWVrQixFQUFFcEIsSUFDeEJRLEdBQ0YsSUFFRmIsRUFBSSxJQUFJSyxXQUFZaUIsRUFBSWpCLGtCQUN4QkwsRUFBSSxJQUFJSyx1QkFBd0JHLEVBQVNJLFVBQ3pDQyxNQTBCSixNQUFPLENBQ0xpQixVQXZCaUJMLElBQ2pCbkIsRUFBUW1CLEVBQUVwQixJQUFNb0IsRUFDaEJ6QixFQUFJLElBQUlLLFdBQVlvQixFQUFFcEIsTUFDdEJMLEVBQUksSUFBSUsseUJBQTBCSSxPQUNsQ0ksSUFDT1ksRUFBRXBCLElBbUJUMEIsT0FoQmFQLE1BQU9QLEtBQVdDLEtBQy9CLEdBQXdCLElBQXBCVCxJQUNGLE1BQU11QixNQUFNLElBQUkzQiwrREFFbEIsT0FBT1csRUFBTUMsRUFBUUMsSUFhckJlLFVBVmdCVCxVQUNoQmQsT0FBT0MsS0FBS0wsR0FBUzRCLFFBQVFWLE1BQU9XLFVBQzVCN0IsRUFBUTZCLEdBQUtGLGNBRXJCekIsRUFBVyxJQU9YNEIsWUE5RGtCLElBQU01QixFQUFTSSxPQStEakNILGlCLFVDMUVKTixFQUFPQyxRQUFVLENBQ2ZpQyxTQUFVLElBQ1ZDLFNBQVUsSUFDVkMsVUFBVyxJQUNYQyxLQUFNLElBQ05DLGNBQWUsSUFDZkMsdUJBQXdCLElBQ3hCQyxhQUFjLElBQ2RDLFlBQWEsSUFDYkMsWUFBYSxJQUNiQyxZQUFhLElBQ2JDLFlBQWEsS0FDYkMsWUFBYSxLQUNiQyxnQkFBaUIsS0FDakJDLFNBQVUsSyw4QkNmWixTQUFTQyxJQUVQLEdBQzRDLG9CQUFuQ0MsZ0NBQzRDLG1CQUE1Q0EsK0JBQStCRCxTQWN4QyxJQUVFQywrQkFBK0JELFNBQVNBLEVBQzFDLENBQUUsTUFBT3RCLEdBR1B3QixRQUFRQyxNQUFNekIsRUFDaEIsQ0FDRixDQUtFc0IsR0FDQWhELEVBQU9DLFFBQVUsRUFBakIsSyw4QkN6QlcsSUFBSW1ELEVBQUUsRUFBUSxNQUFTQyxFQUFFQyxPQUFPQyxJQUFJLGlCQUFpQkMsRUFBRUYsT0FBT0MsSUFBSSxrQkFBa0JFLEVBQUVsRCxPQUFPbUQsVUFBVUMsZUFBZUMsRUFBRVIsRUFBRVMsbURBQW1EQyxrQkFBa0JDLEVBQUUsQ0FBQ0MsS0FBSSxFQUFHQyxLQUFJLEVBQUdDLFFBQU8sRUFBR0MsVUFBUyxHQUNoUCxTQUFTQyxFQUFFQyxFQUFFQyxFQUFFQyxHQUFHLElBQUlDLEVBQUVDLEVBQUUsQ0FBQyxFQUFFQyxFQUFFLEtBQUtDLEVBQUUsS0FBaUYsSUFBSUgsVUFBaEYsSUFBU0QsSUFBSUcsRUFBRSxHQUFHSCxRQUFHLElBQVNELEVBQUVOLE1BQU1VLEVBQUUsR0FBR0osRUFBRU4sVUFBSyxJQUFTTSxFQUFFTCxNQUFNVSxFQUFFTCxFQUFFTCxLQUFjSyxFQUFFYixFQUFFbUIsS0FBS04sRUFBRUUsS0FBS1QsRUFBRUosZUFBZWEsS0FBS0MsRUFBRUQsR0FBR0YsRUFBRUUsSUFBSSxHQUFHSCxHQUFHQSxFQUFFUSxhQUFhLElBQUlMLEtBQUtGLEVBQUVELEVBQUVRLGtCQUFlLElBQVNKLEVBQUVELEtBQUtDLEVBQUVELEdBQUdGLEVBQUVFLElBQUksTUFBTSxDQUFDTSxTQUFTekIsRUFBRTBCLEtBQUtWLEVBQUVMLElBQUlVLEVBQUVULElBQUlVLEVBQUVLLE1BQU1QLEVBQUVRLE9BQU9yQixFQUFFc0IsUUFBUSxDQUFDakYsRUFBUWtGLFNBQVMzQixFQUFFdkQsRUFBUW1GLElBQUloQixFQUFFbkUsRUFBUW9GLEtBQUtqQixDLFdDVjFXcEUsRUFBT0MsUUFBVSxDQUFDcUYsRUFBUUMsSUFBUSxHQUM3QkQsS0FBVUMsS0FBT0MsS0FBS0MsU0FBU0MsU0FBUyxJQUFJQyxNQUFNLEVBQUcsSSxpQkNEMUQsTUFDTSxRQUFFQyxHQUFZLEVBQVEsTUFDdEJDLEVBQWlCLEVBQVEsTUFGWixJQUFDQyxFQU9wQjlGLEVBQU9DLFFBQVUsSUFDWjRGLEVBQ0hFLFdBQWdDLG9CQUFaQyxTQUFvRCxnQkFBekJBLFFBQVFDLElBQUlDLFVBVHpDSixFQVVILCtCQUErQk4sS0FBS0MsU0FBU0MsU0FBUyxJQUFJQyxNQUFNLEtBVnZELElBQUtRLElBQUlMLEVBQUdNLE9BQU9DLFNBQVNDLE1BQU9BLE1BV3ZELDhDQUE4Q1YsdUJBS2xEVyxTQUFVLEssaUJDaEJaLE1BQU1DLEVBQWUsRUFBUSxNQUN2QkMsRUFBYyxFQUFRLE1BQ3RCN0csRUFBWSxFQUFRLE9BQ3BCLElBQUVDLEdBQVEsRUFBUSxNQUNsQkMsRUFBUSxFQUFRLE9BQ2hCLFdBQUU0RyxHQUFlLEVBQVEsT0FDekIsZUFDSmIsRUFBYyxZQUNkYyxFQUFXLGdCQUNYQyxFQUFlLFVBQ2ZDLEVBQVMsVUFDVEMsRUFBUyxLQUNUQyxHQUNFLEVBQVEsTUFFWixJQUFJQyxFQUFnQixFQUVwQmhILEVBQU9DLFFBQVVvQixNQUFPNEYsRUFBVyxDQUFDLEtBQ2xDLE1BQU0vRyxFQUFLSixFQUFNLFNBQVVrSCxJQUNyQixPQUNKRSxFQUFNLGFBQ05DLEtBQ0dDLEdBQ0RaLEVBQWEsSUFDWlgsS0FDQW9CLElBRUNJLEVBQVcsQ0FBQyxFQUNaQyxFQUFVLENBQUMsRUFFakIsSUFBSUMsRUFDQUMsRUFDSixNQUFNQyxFQUFZLElBQUl6RyxRQUFRLENBQUNDLEVBQVNDLEtBQ3RDc0csRUFBbUJ2RyxFQUNuQnNHLEVBQWtCckcsSUFJcEIsSUFBSXdHLEVBQVNmLEVBQVlTLEdBQ3pCTSxFQUFPQyxRQUhjQyxJQUFZTCxFQUFnQkssRUFBTUMsVUFLdkRiLEdBQWlCLEVBRWpCLE1BQU1jLEVBQWEsQ0FBQ2hILEVBQVFpSCxLQUMxQlYsRUFBU3ZHLEdBQVVpSCxHQUdmQyxFQUFZLENBQUNsSCxFQUFRbUgsS0FDekJYLEVBQVF4RyxHQUFVbUgsR0FHZEMsRUFBVyxFQUFHaEksR0FBSWlJLEVBQU9ySCxTQUFRQyxhQUFjLElBQy9DQyxRQUFRLENBQUNDLEVBQVNDLEtBQ3BCckIsRUFBSSxJQUFJSyxhQUFjaUksYUFBaUJySCxLQUN2Q2dILEVBQVdoSCxFQUFRRyxHQUNuQitHLEVBQVVsSCxFQUFRSSxHQUNsQjZGLEVBQUtXLEVBQVEsQ0FDWFUsU0FBVWxJLEVBQ1ZpSSxRQUNBckgsU0FDQUMsY0FnSE44RixFQUFVYSxFQUFRLEVBQ2hCVSxXQUFVRCxRQUFPRSxTQUFRdkgsU0FBUXdILFdBRWpDLEdBQWUsWUFBWEQsRUFBc0IsQ0FDeEJ4SSxFQUFJLElBQUl1SSxnQkFBdUJELEtBQy9CLElBQUkxRCxFQUFJNkQsRUFDTyxjQUFYeEgsRUFDRjJELEVBQUlnQyxFQUFZNkIsR0FDSSxXQUFYeEgsSUFDVDJELEVBQUk4RCxNQUFNQyxLQUFLLElBQUtGLEVBQU03SCxPQUFRRixPQUFPQyxLQUFLOEgsR0FBTTdILFVBRXRENEcsRUFBU3ZHLEdBQVEsQ0FBRXFILFFBQU9HLEtBQU03RCxHQUNsQyxNQUFPLEdBQWUsV0FBWDRELEVBQXFCLENBRzlCLEdBRkFmLEVBQVF4RyxHQUFRd0gsR0FDRCxTQUFYeEgsR0FBbUJ5RyxFQUFnQmUsSUFDbkNuQixFQUdGLE1BQU10RixNQUFNeUcsR0FGWm5CLEVBQWFtQixFQUlqQixLQUFzQixhQUFYRCxHQUNUbkIsRUFBTyxJQUFLb0IsRUFBTUcsVUFBV04sTUFJakMsTUFBTU8sRUFBYSxDQUNqQnhJLEtBQ0F3SCxTQUNBSSxhQUNBRSxZQUNBVyxLQXpJVyxJQUNYekYsUUFBUTBGLEtBQUssdUZBeUliQyxVQWhJZ0IsQ0FBQ0MsRUFBTUMsRUFBTVosSUFDN0JELEVBQVN0SSxFQUFVLENBQ2pCTSxHQUFJaUksRUFDSnJILE9BQVEsS0FDUkMsUUFBUyxDQUFFaUksT0FBUSxZQUFhQyxLQUFNLENBQUNILEVBQU1DLE9BNkgvQ0csU0F6SGUsQ0FBQ0osRUFBTVgsSUFDdEJELEVBQVN0SSxFQUFVLENBQ2pCTSxHQUFJaUksRUFDSnJILE9BQVEsS0FDUkMsUUFBUyxDQUFFaUksT0FBUSxXQUFZQyxLQUFNLENBQUNILEVBQU0sQ0FBRUssU0FBVSxhQXNIMURDLFdBbEhpQixDQUFDTixFQUFNWCxJQUN4QkQsRUFBU3RJLEVBQVUsQ0FDakJNLEdBQUlpSSxFQUNKckgsT0FBUSxLQUNSQyxRQUFTLENBQUVpSSxPQUFRLFNBQVVDLEtBQU0sQ0FBQ0gsT0ErR3RDTyxHQTNHUyxDQUFDTCxFQUFRQyxFQUFNZCxJQUN4QkQsRUFBU3RJLEVBQVUsQ0FDakJNLEdBQUlpSSxFQUNKckgsT0FBUSxLQUNSQyxRQUFTLENBQUVpSSxTQUFRQyxXQXdHckJLLGFBcEdtQixDQUFDQyxFQUFRLE1BQU9wQixJQUNuQ0QsRUFBU3RJLEVBQVUsQ0FDakJNLEdBQUlpSSxFQUNKckgsT0FBUSxlQUNSQyxRQUFTLENBQUV3SSxRQUFPbkMsY0FpR3BCb0MsV0E3RmlCLENBQUNELEVBQVEsTUFBT0UsRUFBTS9DLEVBQVlnRCxFQUFRdkIsSUFDM0RELEVBQVN0SSxFQUFVLENBQ2pCTSxHQUFJaUksRUFDSnJILE9BQVEsYUFDUkMsUUFBUyxDQUFFd0ksUUFBT0UsTUFBS0MsYUEwRnpCQyxjQXRGb0IsQ0FBQ0MsRUFBUyxDQUFDLEVBQUd6QixJQUNsQ0QsRUFBU3RJLEVBQVUsQ0FDakJNLEdBQUlpSSxFQUNKckgsT0FBUSxnQkFDUkMsUUFBUyxDQUFFNkksYUFtRmJDLFVBL0VnQnhJLE1BQU95SSxFQUFPQyxFQUFPLENBQUMsRUFBR0MsRUFBUyxDQUNsREMsUUFBUSxFQUFNbEIsTUFBTSxFQUFNbUIsTUFBTSxFQUFNQyxLQUFLLEdBQzFDaEMsSUFDREQsRUFBU3RJLEVBQVUsQ0FDakJNLEdBQUlpSSxFQUNKckgsT0FBUSxZQUNSQyxRQUFTLENBQUUrSSxZQUFhaEQsRUFBVWdELEdBQVExQyxRQUFTMkMsRUFBTUMsYUEwRTNESSxPQXRFYSxDQUFDQyxFQUFRLHVCQUF3QkMsR0FBVyxFQUFPbkMsS0FDaEVqRixRQUFRckQsSUFBSSwwRkFDTHFJLEVBQVN0SSxFQUFVLENBQ3hCTSxHQUFJaUksRUFDSnJILE9BQVEsU0FDUkMsUUFBUyxDQUFFc0osUUFBT0MsZ0JBa0VwQkMsT0E5RGFsSixNQUFPeUksRUFBTzNCLElBQzNCRCxFQUFTdEksRUFBVSxDQUNqQk0sR0FBSWlJLEVBQ0pySCxPQUFRLFNBQ1JDLFFBQVMsQ0FBRStJLFlBQWFoRCxFQUFVZ0QsT0EyRHBDaEksVUF2RGdCVCxVQUNELE9BQVhxRyxJQU9GZCxFQUFnQmMsR0FDaEJBLEVBQVMsTUFFSjFHLFFBQVFDLFlBaURqQixPQXBKRWlILEVBQVN0SSxFQUFVLENBQ2pCTSxHQUZrQmlJLFVBRVBySCxPQUFRLE9BQVFDLFFBQVMsQ0FBRXFHLGNBaUozQm9ELEtBQUssSUFBTWhELEVBQWlCa0IsSUFBYStCLE1BQU0sUUFFdkRoRCxFLDhCQzlNSSxJQUFJaUQsRUFBRyxFQUFRLE1BQVNDLEVBQUcsRUFBUSxNQUFhLFNBQVM1RyxFQUFFTyxHQUFHLElBQUksSUFBSUUsRUFBRSx5REFBeURGLEVBQUVELEVBQUUsRUFBRUEsRUFBRXVHLFVBQVVuSyxPQUFPNEQsSUFBSUcsR0FBRyxXQUFXcUcsbUJBQW1CRCxVQUFVdkcsSUFBSSxNQUFNLHlCQUF5QkMsRUFBRSxXQUFXRSxFQUFFLGdIQUFnSCxDQUFDLElBQUlzRyxFQUFHLElBQUlDLElBQUlDLEVBQUcsQ0FBQyxFQUFFLFNBQVNDLEVBQUczRyxFQUFFRSxHQUFHMEcsRUFBRzVHLEVBQUVFLEdBQUcwRyxFQUFHNUcsRUFBRSxVQUFVRSxFQUFFLENBQ3hiLFNBQVMwRyxFQUFHNUcsRUFBRUUsR0FBVyxJQUFSd0csRUFBRzFHLEdBQUdFLEVBQU1GLEVBQUUsRUFBRUEsRUFBRUUsRUFBRS9ELE9BQU82RCxJQUFJd0csRUFBR0ssSUFBSTNHLEVBQUVGLEdBQUcsQ0FDNUQsSUFBSThHLElBQUssb0JBQXFCaEYsYUFBUSxJQUFxQkEsT0FBT2lGLGVBQVUsSUFBcUJqRixPQUFPaUYsU0FBU0MsZUFBZUMsRUFBR2hMLE9BQU9tRCxVQUFVQyxlQUFlNkgsRUFBRyw4VkFBOFZDLEVBQ3BnQixDQUFDLEVBQUVDLEVBQUcsQ0FBQyxFQUNpTixTQUFTQyxFQUFFckgsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsRUFBRXRCLEVBQUVtQixHQUFHOUMsS0FBS21LLGdCQUFnQixJQUFJcEgsR0FBRyxJQUFJQSxHQUFHLElBQUlBLEVBQUUvQyxLQUFLb0ssY0FBY3BILEVBQUVoRCxLQUFLcUssbUJBQW1CcEgsRUFBRWpELEtBQUtzSyxnQkFBZ0IxSCxFQUFFNUMsS0FBS3VLLGFBQWExSCxFQUFFN0MsS0FBS3NELEtBQUtQLEVBQUUvQyxLQUFLd0ssWUFBWTdJLEVBQUUzQixLQUFLeUssa0JBQWtCM0gsQ0FBQyxDQUFDLElBQUk0SCxFQUFFLENBQUMsRUFDcGIsdUlBQXVJQyxNQUFNLEtBQUtySyxRQUFRLFNBQVN1QyxHQUFHNkgsRUFBRTdILEdBQUcsSUFBSXFILEVBQUVySCxFQUFFLEdBQUUsRUFBR0EsRUFBRSxNQUFLLEdBQUcsRUFBRyxHQUFHLENBQUMsQ0FBQyxnQkFBZ0Isa0JBQWtCLENBQUMsWUFBWSxTQUFTLENBQUMsVUFBVSxPQUFPLENBQUMsWUFBWSxlQUFldkMsUUFBUSxTQUFTdUMsR0FBRyxJQUFJRSxFQUFFRixFQUFFLEdBQUc2SCxFQUFFM0gsR0FBRyxJQUFJbUgsRUFBRW5ILEVBQUUsR0FBRSxFQUFHRixFQUFFLEdBQUcsTUFBSyxHQUFHLEVBQUcsR0FBRyxDQUFDLGtCQUFrQixZQUFZLGFBQWEsU0FBU3ZDLFFBQVEsU0FBU3VDLEdBQUc2SCxFQUFFN0gsR0FBRyxJQUFJcUgsRUFBRXJILEVBQUUsR0FBRSxFQUFHQSxFQUFFK0gsY0FBYyxNQUFLLEdBQUcsRUFBRyxHQUMxZSxDQUFDLGNBQWMsNEJBQTRCLFlBQVksaUJBQWlCdEssUUFBUSxTQUFTdUMsR0FBRzZILEVBQUU3SCxHQUFHLElBQUlxSCxFQUFFckgsRUFBRSxHQUFFLEVBQUdBLEVBQUUsTUFBSyxHQUFHLEVBQUcsR0FBRyw4T0FBOE84SCxNQUFNLEtBQUtySyxRQUFRLFNBQVN1QyxHQUFHNkgsRUFBRTdILEdBQUcsSUFBSXFILEVBQUVySCxFQUFFLEdBQUUsRUFBR0EsRUFBRStILGNBQWMsTUFBSyxHQUFHLEVBQUcsR0FDeGIsQ0FBQyxVQUFVLFdBQVcsUUFBUSxZQUFZdEssUUFBUSxTQUFTdUMsR0FBRzZILEVBQUU3SCxHQUFHLElBQUlxSCxFQUFFckgsRUFBRSxHQUFFLEVBQUdBLEVBQUUsTUFBSyxHQUFHLEVBQUcsR0FBRyxDQUFDLFVBQVUsWUFBWXZDLFFBQVEsU0FBU3VDLEdBQUc2SCxFQUFFN0gsR0FBRyxJQUFJcUgsRUFBRXJILEVBQUUsR0FBRSxFQUFHQSxFQUFFLE1BQUssR0FBRyxFQUFHLEdBQUcsQ0FBQyxPQUFPLE9BQU8sT0FBTyxRQUFRdkMsUUFBUSxTQUFTdUMsR0FBRzZILEVBQUU3SCxHQUFHLElBQUlxSCxFQUFFckgsRUFBRSxHQUFFLEVBQUdBLEVBQUUsTUFBSyxHQUFHLEVBQUcsR0FBRyxDQUFDLFVBQVUsU0FBU3ZDLFFBQVEsU0FBU3VDLEdBQUc2SCxFQUFFN0gsR0FBRyxJQUFJcUgsRUFBRXJILEVBQUUsR0FBRSxFQUFHQSxFQUFFK0gsY0FBYyxNQUFLLEdBQUcsRUFBRyxHQUFHLElBQUlDLEVBQUcsZ0JBQWdCLFNBQVNDLEVBQUdqSSxHQUFHLE9BQU9BLEVBQUUsR0FBR2tJLGFBQWEsQ0FJeFosU0FBU0MsRUFBR25JLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSUMsRUFBRXlILEVBQUV4SSxlQUFlYSxHQUFHMkgsRUFBRTNILEdBQUcsTUFBUSxPQUFPRSxFQUFFLElBQUlBLEVBQUVLLEtBQUtOLEtBQUssRUFBRUQsRUFBRS9ELFNBQVMsTUFBTStELEVBQUUsSUFBSSxNQUFNQSxFQUFFLElBQUksTUFBTUEsRUFBRSxJQUFJLE1BQU1BLEVBQUUsTUFQOUksU0FBWUYsRUFBRUUsRUFBRUgsRUFBRUksR0FBRyxHQUFHLE1BQU9ELEdBRDZGLFNBQVlGLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsR0FBRyxPQUFPSixHQUFHLElBQUlBLEVBQUVVLEtBQUssT0FBTSxFQUFHLGNBQWNQLEdBQUcsSUFBSyxXQUFXLElBQUssU0FBUyxPQUFNLEVBQUcsSUFBSyxVQUFVLE9BQUdDLElBQWMsT0FBT0osR0FBU0EsRUFBRXVILGdCQUFtRCxXQUFuQ3RILEVBQUVBLEVBQUUrSCxjQUFjMUcsTUFBTSxFQUFFLEtBQXNCLFVBQVVyQixHQUFFLFFBQVEsT0FBTSxFQUFHLENBQy9Ub0ksQ0FBR3BJLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsT0FBTSxFQUFHLEdBQUdBLEVBQUUsT0FBTSxFQUFHLEdBQUcsT0FBT0osRUFBRSxPQUFPQSxFQUFFVSxNQUFNLEtBQUssRUFBRSxPQUFPUCxFQUFFLEtBQUssRUFBRSxPQUFNLElBQUtBLEVBQUUsS0FBSyxFQUFFLE9BQU9tSSxNQUFNbkksR0FBRyxLQUFLLEVBQUUsT0FBT21JLE1BQU1uSSxJQUFJLEVBQUVBLEVBQUUsT0FBTSxDQUFFLENBT3RFb0ksQ0FBR3BJLEVBQUVILEVBQUVLLEVBQUVELEtBQUtKLEVBQUUsTUFBTUksR0FBRyxPQUFPQyxFQVJ4SyxTQUFZSixHQUFHLFFBQUdpSCxFQUFHM0csS0FBSzhHLEVBQUdwSCxLQUFlaUgsRUFBRzNHLEtBQUs2RyxFQUFHbkgsS0FBZWtILEVBQUdxQixLQUFLdkksR0FBVW9ILEVBQUdwSCxJQUFHLEdBQUdtSCxFQUFHbkgsSUFBRyxHQUFTLEdBQUUsQ0FRd0R3SSxDQUFHdEksS0FBSyxPQUFPSCxFQUFFQyxFQUFFeUksZ0JBQWdCdkksR0FBR0YsRUFBRTBJLGFBQWF4SSxFQUFFLEdBQUdILElBQUlLLEVBQUVxSCxnQkFBZ0J6SCxFQUFFSSxFQUFFc0gsY0FBYyxPQUFPM0gsRUFBRSxJQUFJSyxFQUFFSyxNQUFRLEdBQUdWLEdBQUdHLEVBQUVFLEVBQUVtSCxjQUFjcEgsRUFBRUMsRUFBRW9ILG1CQUFtQixPQUFPekgsRUFBRUMsRUFBRXlJLGdCQUFnQnZJLElBQWFILEVBQUUsS0FBWEssRUFBRUEsRUFBRUssT0FBYyxJQUFJTCxJQUFHLElBQUtMLEVBQUUsR0FBRyxHQUFHQSxFQUFFSSxFQUFFSCxFQUFFMkksZUFBZXhJLEVBQUVELEVBQUVILEdBQUdDLEVBQUUwSSxhQUFheEksRUFBRUgsS0FBSSxDQUhqZCwwakNBQTBqQytILE1BQU0sS0FBS3JLLFFBQVEsU0FBU3VDLEdBQUcsSUFBSUUsRUFBRUYsRUFBRTRJLFFBQVFaLEVBQ3ptQ0MsR0FBSUosRUFBRTNILEdBQUcsSUFBSW1ILEVBQUVuSCxFQUFFLEdBQUUsRUFBR0YsRUFBRSxNQUFLLEdBQUcsRUFBRyxHQUFHLDJFQUEyRThILE1BQU0sS0FBS3JLLFFBQVEsU0FBU3VDLEdBQUcsSUFBSUUsRUFBRUYsRUFBRTRJLFFBQVFaLEVBQUdDLEdBQUlKLEVBQUUzSCxHQUFHLElBQUltSCxFQUFFbkgsRUFBRSxHQUFFLEVBQUdGLEVBQUUsZ0NBQStCLEdBQUcsRUFBRyxHQUFHLENBQUMsV0FBVyxXQUFXLGFBQWF2QyxRQUFRLFNBQVN1QyxHQUFHLElBQUlFLEVBQUVGLEVBQUU0SSxRQUFRWixFQUFHQyxHQUFJSixFQUFFM0gsR0FBRyxJQUFJbUgsRUFBRW5ILEVBQUUsR0FBRSxFQUFHRixFQUFFLHdDQUF1QyxHQUFHLEVBQUcsR0FBRyxDQUFDLFdBQVcsZUFBZXZDLFFBQVEsU0FBU3VDLEdBQUc2SCxFQUFFN0gsR0FBRyxJQUFJcUgsRUFBRXJILEVBQUUsR0FBRSxFQUFHQSxFQUFFK0gsY0FBYyxNQUFLLEdBQUcsRUFBRyxHQUNsZEYsRUFBRWdCLFVBQVUsSUFBSXhCLEVBQUUsWUFBWSxHQUFFLEVBQUcsYUFBYSxnQ0FBK0IsR0FBRyxHQUFJLENBQUMsTUFBTSxPQUFPLFNBQVMsY0FBYzVKLFFBQVEsU0FBU3VDLEdBQUc2SCxFQUFFN0gsR0FBRyxJQUFJcUgsRUFBRXJILEVBQUUsR0FBRSxFQUFHQSxFQUFFK0gsY0FBYyxNQUFLLEdBQUcsRUFBRyxHQUU1TCxJQUFJZSxFQUFHMUMsRUFBRzdHLG1EQUFtRHdKLEVBQUcvSixPQUFPQyxJQUFJLGlCQUFpQitKLEVBQUdoSyxPQUFPQyxJQUFJLGdCQUFnQmdLLEVBQUdqSyxPQUFPQyxJQUFJLGtCQUFrQmlLLEVBQUdsSyxPQUFPQyxJQUFJLHFCQUFxQmtLLEVBQUduSyxPQUFPQyxJQUFJLGtCQUFrQm1LLEVBQUdwSyxPQUFPQyxJQUFJLGtCQUFrQm9LLEVBQUdySyxPQUFPQyxJQUFJLGlCQUFpQnFLLEVBQUd0SyxPQUFPQyxJQUFJLHFCQUFxQnNLLEVBQUd2SyxPQUFPQyxJQUFJLGtCQUFrQnVLLEVBQUd4SyxPQUFPQyxJQUFJLHVCQUF1QndLLEVBQUd6SyxPQUFPQyxJQUFJLGNBQWN5SyxFQUFHMUssT0FBT0MsSUFBSSxjQUFjRCxPQUFPQyxJQUFJLGVBQWVELE9BQU9DLElBQUksMEJBQ2plLElBQUkwSyxFQUFHM0ssT0FBT0MsSUFBSSxtQkFBbUJELE9BQU9DLElBQUksdUJBQXVCRCxPQUFPQyxJQUFJLGVBQWVELE9BQU9DLElBQUksd0JBQXdCLElBQUkySyxFQUFHNUssT0FBTzZLLFNBQVMsU0FBU0MsRUFBRzlKLEdBQUcsT0FBRyxPQUFPQSxHQUFHLGlCQUFrQkEsRUFBUyxLQUF3QyxtQkFBbkNBLEVBQUU0SixHQUFJNUosRUFBRTRKLElBQUs1SixFQUFFLGVBQTBDQSxFQUFFLElBQUksQ0FBQyxJQUFvQitKLEVBQWhCQyxFQUFFL04sT0FBT2dPLE9BQVUsU0FBU0MsRUFBR2xLLEdBQUcsUUFBRyxJQUFTK0osRUFBRyxJQUFJLE1BQU14TSxPQUFRLENBQUMsTUFBTXdDLEdBQUcsSUFBSUcsRUFBRUgsRUFBRW9LLE1BQU1DLE9BQU9DLE1BQU0sZ0JBQWdCTixFQUFHN0osR0FBR0EsRUFBRSxJQUFJLEVBQUUsQ0FBQyxNQUFNLEtBQUs2SixFQUFHL0osQ0FBQyxDQUFDLElBQUlzSyxHQUFHLEVBQ3piLFNBQVNDLEVBQUd2SyxFQUFFRSxHQUFHLElBQUlGLEdBQUdzSyxFQUFHLE1BQU0sR0FBR0EsR0FBRyxFQUFHLElBQUl2SyxFQUFFeEMsTUFBTWlOLGtCQUFrQmpOLE1BQU1pTix1QkFBa0IsRUFBTyxJQUFJLEdBQUd0SyxFQUFFLEdBQUdBLEVBQUUsV0FBVyxNQUFNM0MsT0FBUSxFQUFFdEIsT0FBT3dPLGVBQWV2SyxFQUFFZCxVQUFVLFFBQVEsQ0FBQ3NMLElBQUksV0FBVyxNQUFNbk4sT0FBUSxJQUFJLGlCQUFrQm9OLFNBQVNBLFFBQVFDLFVBQVUsQ0FBQyxJQUFJRCxRQUFRQyxVQUFVMUssRUFBRSxHQUFHLENBQUMsTUFBTWhCLEdBQUcsSUFBSWlCLEVBQUVqQixDQUFDLENBQUN5TCxRQUFRQyxVQUFVNUssRUFBRSxHQUFHRSxFQUFFLEtBQUssQ0FBQyxJQUFJQSxFQUFFSSxNQUFNLENBQUMsTUFBTXBCLEdBQUdpQixFQUFFakIsQ0FBQyxDQUFDYyxFQUFFTSxLQUFLSixFQUFFZCxVQUFVLEtBQUssQ0FBQyxJQUFJLE1BQU03QixPQUFRLENBQUMsTUFBTTJCLEdBQUdpQixFQUFFakIsQ0FBQyxDQUFDYyxHQUFHLENBQUMsQ0FBQyxNQUFNZCxHQUFHLEdBQUdBLEdBQUdpQixHQUFHLGlCQUFrQmpCLEVBQUVpTCxNQUFNLENBQUMsSUFBSSxJQUFJL0osRUFBRWxCLEVBQUVpTCxNQUFNckMsTUFBTSxNQUNuZmhKLEVBQUVxQixFQUFFZ0ssTUFBTXJDLE1BQU0sTUFBTTdILEVBQUVHLEVBQUVqRSxPQUFPLEVBQUVrRSxFQUFFdkIsRUFBRTNDLE9BQU8sRUFBRSxHQUFHOEQsR0FBRyxHQUFHSSxHQUFHRCxFQUFFSCxLQUFLbkIsRUFBRXVCLElBQUlBLElBQUksS0FBSyxHQUFHSixHQUFHLEdBQUdJLEVBQUVKLElBQUlJLElBQUksR0FBR0QsRUFBRUgsS0FBS25CLEVBQUV1QixHQUFHLENBQUMsR0FBRyxJQUFJSixHQUFHLElBQUlJLEVBQUcsTUFBTUosSUFBUSxJQUFKSSxHQUFTRCxFQUFFSCxLQUFLbkIsRUFBRXVCLEdBQUcsQ0FBQyxJQUFJdEIsRUFBRSxLQUFLcUIsRUFBRUgsR0FBRzJJLFFBQVEsV0FBVyxRQUE2RixPQUFyRjVJLEVBQUU2SyxhQUFhOUwsRUFBRStMLFNBQVMsaUJBQWlCL0wsRUFBRUEsRUFBRTZKLFFBQVEsY0FBYzVJLEVBQUU2SyxjQUFxQjlMLENBQUMsUUFBTyxHQUFHa0IsR0FBRyxHQUFHSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUWlLLEdBQUcsRUFBRy9NLE1BQU1pTixrQkFBa0J6SyxDQUFDLENBQUMsT0FBT0MsRUFBRUEsRUFBRUEsRUFBRTZLLGFBQWE3SyxFQUFFK0ssS0FBSyxJQUFJYixFQUFHbEssR0FBRyxFQUFFLENBQzlaLFNBQVNnTCxFQUFHaEwsR0FBRyxPQUFPQSxFQUFFaUwsS0FBSyxLQUFLLEVBQUUsT0FBT2YsRUFBR2xLLEVBQUVTLE1BQU0sS0FBSyxHQUFHLE9BQU95SixFQUFHLFFBQVEsS0FBSyxHQUFHLE9BQU9BLEVBQUcsWUFBWSxLQUFLLEdBQUcsT0FBT0EsRUFBRyxnQkFBZ0IsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEdBQUcsT0FBU0ssRUFBR3ZLLEVBQUVTLE1BQUssR0FBTSxLQUFLLEdBQUcsT0FBUzhKLEVBQUd2SyxFQUFFUyxLQUFLeUssUUFBTyxHQUFNLEtBQUssRUFBRSxPQUFTWCxFQUFHdkssRUFBRVMsTUFBSyxHQUFNLFFBQVEsTUFBTSxHQUFHLENBQ3hSLFNBQVMwSyxFQUFHbkwsR0FBRyxHQUFHLE1BQU1BLEVBQUUsT0FBTyxLQUFLLEdBQUcsbUJBQW9CQSxFQUFFLE9BQU9BLEVBQUU2SyxhQUFhN0ssRUFBRStLLE1BQU0sS0FBSyxHQUFHLGlCQUFrQi9LLEVBQUUsT0FBT0EsRUFBRSxPQUFPQSxHQUFHLEtBQUtpSixFQUFHLE1BQU0sV0FBVyxLQUFLRCxFQUFHLE1BQU0sU0FBUyxLQUFLRyxFQUFHLE1BQU0sV0FBVyxLQUFLRCxFQUFHLE1BQU0sYUFBYSxLQUFLSyxFQUFHLE1BQU0sV0FBVyxLQUFLQyxFQUFHLE1BQU0sZUFBZSxHQUFHLGlCQUFrQnhKLEVBQUUsT0FBT0EsRUFBRVEsVUFBVSxLQUFLNkksRUFBRyxPQUFPckosRUFBRTZLLGFBQWEsV0FBVyxZQUFZLEtBQUt6QixFQUFHLE9BQU9wSixFQUFFb0wsU0FBU1AsYUFBYSxXQUFXLFlBQVksS0FBS3ZCLEVBQUcsSUFBSXBKLEVBQUVGLEVBQUVrTCxPQUM3WixPQURvYWxMLEVBQUVBLEVBQUU2SyxlQUNuZDdLLEVBQUUsTUFEaWVBLEVBQUVFLEVBQUUySyxhQUNsZjNLLEVBQUU2SyxNQUFNLElBQVksY0FBYy9LLEVBQUUsSUFBSSxjQUFxQkEsRUFBRSxLQUFLeUosRUFBRyxPQUE2QixRQUF0QnZKLEVBQUVGLEVBQUU2SyxhQUFhLE1BQWMzSyxFQUFFaUwsRUFBR25MLEVBQUVTLE9BQU8sT0FBTyxLQUFLaUosRUFBR3hKLEVBQUVGLEVBQUVxTCxTQUFTckwsRUFBRUEsRUFBRXNMLE1BQU0sSUFBSSxPQUFPSCxFQUFHbkwsRUFBRUUsR0FBRyxDQUFDLE1BQU1ILEdBQUcsRUFBRSxPQUFPLElBQUksQ0FDM00sU0FBU3dMLEVBQUd2TCxHQUFHLElBQUlFLEVBQUVGLEVBQUVTLEtBQUssT0FBT1QsRUFBRWlMLEtBQUssS0FBSyxHQUFHLE1BQU0sUUFBUSxLQUFLLEVBQUUsT0FBTy9LLEVBQUUySyxhQUFhLFdBQVcsWUFBWSxLQUFLLEdBQUcsT0FBTzNLLEVBQUVrTCxTQUFTUCxhQUFhLFdBQVcsWUFBWSxLQUFLLEdBQUcsTUFBTSxxQkFBcUIsS0FBSyxHQUFHLE9BQWtCN0ssR0FBWEEsRUFBRUUsRUFBRWdMLFFBQVdMLGFBQWE3SyxFQUFFK0ssTUFBTSxHQUFHN0ssRUFBRTJLLGNBQWMsS0FBSzdLLEVBQUUsY0FBY0EsRUFBRSxJQUFJLGNBQWMsS0FBSyxFQUFFLE1BQU0sV0FBVyxLQUFLLEVBQUUsT0FBT0UsRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLEtBQUssRUFBRSxNQUFNLE9BQU8sS0FBSyxFQUFFLE1BQU0sT0FBTyxLQUFLLEdBQUcsT0FBT2lMLEVBQUdqTCxHQUFHLEtBQUssRUFBRSxPQUFPQSxJQUFJZ0osRUFBRyxhQUFhLE9BQU8sS0FBSyxHQUFHLE1BQU0sWUFDdGYsS0FBSyxHQUFHLE1BQU0sV0FBVyxLQUFLLEdBQUcsTUFBTSxRQUFRLEtBQUssR0FBRyxNQUFNLFdBQVcsS0FBSyxHQUFHLE1BQU0sZUFBZSxLQUFLLEdBQUcsTUFBTSxnQkFBZ0IsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsR0FBRyxtQkFBb0JoSixFQUFFLE9BQU9BLEVBQUUySyxhQUFhM0ssRUFBRTZLLE1BQU0sS0FBSyxHQUFHLGlCQUFrQjdLLEVBQUUsT0FBT0EsRUFBRSxPQUFPLElBQUksQ0FBQyxTQUFTc0wsRUFBR3hMLEdBQUcsY0FBY0EsR0FBRyxJQUFLLFVBQVUsSUFBSyxTQUFTLElBQUssU0FBUyxJQUFLLFlBQXFCLElBQUssU0FBUyxPQUFPQSxFQUFFLFFBQVEsTUFBTSxHQUFHLENBQ3JhLFNBQVN5TCxFQUFHekwsR0FBRyxJQUFJRSxFQUFFRixFQUFFUyxLQUFLLE9BQU9ULEVBQUVBLEVBQUUwTCxXQUFXLFVBQVUxTCxFQUFFK0gsZ0JBQWdCLGFBQWE3SCxHQUFHLFVBQVVBLEVBQUUsQ0FFdEYsU0FBU3lMLEVBQUczTCxHQUFHQSxFQUFFNEwsZ0JBQWdCNUwsRUFBRTRMLGNBRHZELFNBQVk1TCxHQUFHLElBQUlFLEVBQUV1TCxFQUFHekwsR0FBRyxVQUFVLFFBQVFELEVBQUU5RCxPQUFPNFAseUJBQXlCN0wsRUFBRThMLFlBQVkxTSxVQUFVYyxHQUFHQyxFQUFFLEdBQUdILEVBQUVFLEdBQUcsSUFBSUYsRUFBRVgsZUFBZWEsU0FBSSxJQUFxQkgsR0FBRyxtQkFBb0JBLEVBQUVnTSxLQUFLLG1CQUFvQmhNLEVBQUUySyxJQUFJLENBQUMsSUFBSXRLLEVBQUVMLEVBQUVnTSxJQUFJak4sRUFBRWlCLEVBQUUySyxJQUFpTCxPQUE3S3pPLE9BQU93TyxlQUFlekssRUFBRUUsRUFBRSxDQUFDOEwsY0FBYSxFQUFHRCxJQUFJLFdBQVcsT0FBTzNMLEVBQUVFLEtBQUtuRCxLQUFLLEVBQUV1TixJQUFJLFNBQVMxSyxHQUFHRyxFQUFFLEdBQUdILEVBQUVsQixFQUFFd0IsS0FBS25ELEtBQUs2QyxFQUFFLElBQUkvRCxPQUFPd08sZUFBZXpLLEVBQUVFLEVBQUUsQ0FBQytMLFdBQVdsTSxFQUFFa00sYUFBbUIsQ0FBQ0MsU0FBUyxXQUFXLE9BQU8vTCxDQUFDLEVBQUVnTSxTQUFTLFNBQVNuTSxHQUFHRyxFQUFFLEdBQUdILENBQUMsRUFBRW9NLGFBQWEsV0FBV3BNLEVBQUU0TCxjQUN4ZixZQUFZNUwsRUFBRUUsRUFBRSxFQUFFLENBQUMsQ0FBa0RtTSxDQUFHck0sR0FBRyxDQUFDLFNBQVNzTSxFQUFHdE0sR0FBRyxJQUFJQSxFQUFFLE9BQU0sRUFBRyxJQUFJRSxFQUFFRixFQUFFNEwsY0FBYyxJQUFJMUwsRUFBRSxPQUFNLEVBQUcsSUFBSUgsRUFBRUcsRUFBRWdNLFdBQWUvTCxFQUFFLEdBQXFELE9BQWxESCxJQUFJRyxFQUFFc0wsRUFBR3pMLEdBQUdBLEVBQUV1TSxRQUFRLE9BQU8sUUFBUXZNLEVBQUV3TSxRQUFPeE0sRUFBRUcsS0FBYUosSUFBR0csRUFBRWlNLFNBQVNuTSxJQUFHLEVBQU0sQ0FBQyxTQUFTeU0sRUFBR3pNLEdBQXdELFFBQUcsS0FBeERBLEVBQUVBLElBQUksb0JBQXFCK0csU0FBU0EsY0FBUyxJQUFrQyxPQUFPLEtBQUssSUFBSSxPQUFPL0csRUFBRTBNLGVBQWUxTSxFQUFFMk0sSUFBSSxDQUFDLE1BQU16TSxHQUFHLE9BQU9GLEVBQUUyTSxJQUFJLENBQUMsQ0FDcGEsU0FBU0MsRUFBRzVNLEVBQUVFLEdBQUcsSUFBSUgsRUFBRUcsRUFBRXFNLFFBQVEsT0FBT3ZDLEVBQUUsQ0FBQyxFQUFFOUosRUFBRSxDQUFDMk0sb0JBQWUsRUFBT0Msa0JBQWEsRUFBT04sV0FBTSxFQUFPRCxRQUFRLE1BQU14TSxFQUFFQSxFQUFFQyxFQUFFK00sY0FBY0MsZ0JBQWdCLENBQUMsU0FBU0MsRUFBR2pOLEVBQUVFLEdBQUcsSUFBSUgsRUFBRSxNQUFNRyxFQUFFNE0sYUFBYSxHQUFHNU0sRUFBRTRNLGFBQWEzTSxFQUFFLE1BQU1ELEVBQUVxTSxRQUFRck0sRUFBRXFNLFFBQVFyTSxFQUFFMk0sZUFBZTlNLEVBQUV5TCxFQUFHLE1BQU10TCxFQUFFc00sTUFBTXRNLEVBQUVzTSxNQUFNek0sR0FBR0MsRUFBRStNLGNBQWMsQ0FBQ0MsZUFBZTdNLEVBQUUrTSxhQUFhbk4sRUFBRW9OLFdBQVcsYUFBYWpOLEVBQUVPLE1BQU0sVUFBVVAsRUFBRU8sS0FBSyxNQUFNUCxFQUFFcU0sUUFBUSxNQUFNck0sRUFBRXNNLE1BQU0sQ0FBQyxTQUFTWSxFQUFHcE4sRUFBRUUsR0FBZSxPQUFaQSxFQUFFQSxFQUFFcU0sVUFBaUJwRSxFQUFHbkksRUFBRSxVQUFVRSxHQUFFLEVBQUcsQ0FDOWQsU0FBU21OLEVBQUdyTixFQUFFRSxHQUFHa04sRUFBR3BOLEVBQUVFLEdBQUcsSUFBSUgsRUFBRXlMLEVBQUd0TCxFQUFFc00sT0FBT3JNLEVBQUVELEVBQUVPLEtBQUssR0FBRyxNQUFNVixFQUFLLFdBQVdJLEdBQU0sSUFBSUosR0FBRyxLQUFLQyxFQUFFd00sT0FBT3hNLEVBQUV3TSxPQUFPek0sS0FBRUMsRUFBRXdNLE1BQU0sR0FBR3pNLEdBQU9DLEVBQUV3TSxRQUFRLEdBQUd6TSxJQUFJQyxFQUFFd00sTUFBTSxHQUFHek0sUUFBUSxHQUFHLFdBQVdJLEdBQUcsVUFBVUEsRUFBOEIsWUFBM0JILEVBQUV5SSxnQkFBZ0IsU0FBZ0J2SSxFQUFFYixlQUFlLFNBQVNpTyxHQUFHdE4sRUFBRUUsRUFBRU8sS0FBS1YsR0FBR0csRUFBRWIsZUFBZSxpQkFBaUJpTyxHQUFHdE4sRUFBRUUsRUFBRU8sS0FBSytLLEVBQUd0TCxFQUFFNE0sZUFBZSxNQUFNNU0sRUFBRXFNLFNBQVMsTUFBTXJNLEVBQUUyTSxpQkFBaUI3TSxFQUFFNk0saUJBQWlCM00sRUFBRTJNLGVBQWUsQ0FDbGEsU0FBU1UsRUFBR3ZOLEVBQUVFLEVBQUVILEdBQUcsR0FBR0csRUFBRWIsZUFBZSxVQUFVYSxFQUFFYixlQUFlLGdCQUFnQixDQUFDLElBQUljLEVBQUVELEVBQUVPLEtBQUssS0FBSyxXQUFXTixHQUFHLFVBQVVBLFFBQUcsSUFBU0QsRUFBRXNNLE9BQU8sT0FBT3RNLEVBQUVzTSxPQUFPLE9BQU90TSxFQUFFLEdBQUdGLEVBQUUrTSxjQUFjRyxhQUFhbk4sR0FBR0csSUFBSUYsRUFBRXdNLFFBQVF4TSxFQUFFd00sTUFBTXRNLEdBQUdGLEVBQUU4TSxhQUFhNU0sQ0FBQyxDQUFVLE1BQVRILEVBQUVDLEVBQUUrSyxRQUFjL0ssRUFBRStLLEtBQUssSUFBSS9LLEVBQUU2TSxpQkFBaUI3TSxFQUFFK00sY0FBY0MsZUFBZSxLQUFLak4sSUFBSUMsRUFBRStLLEtBQUtoTCxFQUFFLENBQ3pWLFNBQVN1TixHQUFHdE4sRUFBRUUsRUFBRUgsR0FBTSxXQUFXRyxHQUFHdU0sRUFBR3pNLEVBQUV3TixpQkFBaUJ4TixJQUFFLE1BQU1ELEVBQUVDLEVBQUU4TSxhQUFhLEdBQUc5TSxFQUFFK00sY0FBY0csYUFBYWxOLEVBQUU4TSxlQUFlLEdBQUcvTSxJQUFJQyxFQUFFOE0sYUFBYSxHQUFHL00sR0FBRSxDQUFDLElBQUkwTixHQUFHeEosTUFBTXlKLFFBQzdLLFNBQVNDLEdBQUczTixFQUFFRSxFQUFFSCxFQUFFSSxHQUFlLEdBQVpILEVBQUVBLEVBQUU4QyxRQUFXNUMsRUFBRSxDQUFDQSxFQUFFLENBQUMsRUFBRSxJQUFJLElBQUlFLEVBQUUsRUFBRUEsRUFBRUwsRUFBRTVELE9BQU9pRSxJQUFJRixFQUFFLElBQUlILEVBQUVLLEtBQUksRUFBRyxJQUFJTCxFQUFFLEVBQUVBLEVBQUVDLEVBQUU3RCxPQUFPNEQsSUFBSUssRUFBRUYsRUFBRWIsZUFBZSxJQUFJVyxFQUFFRCxHQUFHeU0sT0FBT3hNLEVBQUVELEdBQUc2TixXQUFXeE4sSUFBSUosRUFBRUQsR0FBRzZOLFNBQVN4TixHQUFHQSxHQUFHRCxJQUFJSCxFQUFFRCxHQUFHOE4saUJBQWdCLEVBQUcsS0FBSyxDQUFtQixJQUFsQjlOLEVBQUUsR0FBR3lMLEVBQUd6TCxHQUFHRyxFQUFFLEtBQVNFLEVBQUUsRUFBRUEsRUFBRUosRUFBRTdELE9BQU9pRSxJQUFJLENBQUMsR0FBR0osRUFBRUksR0FBR29NLFFBQVF6TSxFQUFpRCxPQUE5Q0MsRUFBRUksR0FBR3dOLFVBQVMsT0FBR3pOLElBQUlILEVBQUVJLEdBQUd5TixpQkFBZ0IsSUFBVyxPQUFPM04sR0FBR0YsRUFBRUksR0FBRzBOLFdBQVc1TixFQUFFRixFQUFFSSxHQUFHLENBQUMsT0FBT0YsSUFBSUEsRUFBRTBOLFVBQVMsRUFBRyxDQUFDLENBQ3hZLFNBQVNHLEdBQUcvTixFQUFFRSxHQUFHLEdBQUcsTUFBTUEsRUFBRThOLHdCQUF3QixNQUFNelEsTUFBTWtDLEVBQUUsS0FBSyxPQUFPdUssRUFBRSxDQUFDLEVBQUU5SixFQUFFLENBQUNzTSxXQUFNLEVBQU9NLGtCQUFhLEVBQU9tQixTQUFTLEdBQUdqTyxFQUFFK00sY0FBY0csY0FBYyxDQUFDLFNBQVNnQixHQUFHbE8sRUFBRUUsR0FBRyxJQUFJSCxFQUFFRyxFQUFFc00sTUFBTSxHQUFHLE1BQU16TSxFQUFFLENBQStCLEdBQTlCQSxFQUFFRyxFQUFFK04sU0FBUy9OLEVBQUVBLEVBQUU0TSxhQUFnQixNQUFNL00sRUFBRSxDQUFDLEdBQUcsTUFBTUcsRUFBRSxNQUFNM0MsTUFBTWtDLEVBQUUsS0FBSyxHQUFHZ08sR0FBRzFOLEdBQUcsQ0FBQyxHQUFHLEVBQUVBLEVBQUU1RCxPQUFPLE1BQU1vQixNQUFNa0MsRUFBRSxLQUFLTSxFQUFFQSxFQUFFLEVBQUUsQ0FBQ0csRUFBRUgsQ0FBQyxDQUFDLE1BQU1HLElBQUlBLEVBQUUsSUFBSUgsRUFBRUcsQ0FBQyxDQUFDRixFQUFFK00sY0FBYyxDQUFDRyxhQUFhMUIsRUFBR3pMLEdBQUcsQ0FDblksU0FBU29PLEdBQUduTyxFQUFFRSxHQUFHLElBQUlILEVBQUV5TCxFQUFHdEwsRUFBRXNNLE9BQU9yTSxFQUFFcUwsRUFBR3RMLEVBQUU0TSxjQUFjLE1BQU0vTSxLQUFJQSxFQUFFLEdBQUdBLEtBQU1DLEVBQUV3TSxRQUFReE0sRUFBRXdNLE1BQU16TSxHQUFHLE1BQU1HLEVBQUU0TSxjQUFjOU0sRUFBRThNLGVBQWUvTSxJQUFJQyxFQUFFOE0sYUFBYS9NLElBQUksTUFBTUksSUFBSUgsRUFBRThNLGFBQWEsR0FBRzNNLEVBQUUsQ0FBQyxTQUFTaU8sR0FBR3BPLEdBQUcsSUFBSUUsRUFBRUYsRUFBRXFPLFlBQVluTyxJQUFJRixFQUFFK00sY0FBY0csY0FBYyxLQUFLaE4sR0FBRyxPQUFPQSxJQUFJRixFQUFFd00sTUFBTXRNLEVBQUUsQ0FBQyxTQUFTb08sR0FBR3RPLEdBQUcsT0FBT0EsR0FBRyxJQUFLLE1BQU0sTUFBTSw2QkFBNkIsSUFBSyxPQUFPLE1BQU0scUNBQXFDLFFBQVEsTUFBTSwrQkFBK0IsQ0FDN2MsU0FBU3VPLEdBQUd2TyxFQUFFRSxHQUFHLE9BQU8sTUFBTUYsR0FBRyxpQ0FBaUNBLEVBQUVzTyxHQUFHcE8sR0FBRywrQkFBK0JGLEdBQUcsa0JBQWtCRSxFQUFFLCtCQUErQkYsQ0FBQyxDQUNoSyxJQUFJd08sR0FBZXhPLEdBQVp5TyxJQUFZek8sR0FBc0osU0FBU0EsRUFBRUUsR0FBRyxHQUFHLCtCQUErQkYsRUFBRTBPLGNBQWMsY0FBYzFPLEVBQUVBLEVBQUUyTyxVQUFVek8sTUFBTSxDQUEyRixLQUExRnNPLEdBQUdBLElBQUl6SCxTQUFTQyxjQUFjLFFBQVUySCxVQUFVLFFBQVF6TyxFQUFFME8sVUFBVXhOLFdBQVcsU0FBYWxCLEVBQUVzTyxHQUFHSyxXQUFXN08sRUFBRTZPLFlBQVk3TyxFQUFFOE8sWUFBWTlPLEVBQUU2TyxZQUFZLEtBQUszTyxFQUFFMk8sWUFBWTdPLEVBQUUrTyxZQUFZN08sRUFBRTJPLFdBQVcsQ0FBQyxFQUF2YixvQkFBcUJHLE9BQU9BLE1BQU1DLHdCQUF3QixTQUFTL08sRUFBRUgsRUFBRUksRUFBRUMsR0FBRzRPLE1BQU1DLHdCQUF3QixXQUFXLE9BQU9qUCxHQUFFRSxFQUFFSCxFQUFNLEVBQUUsRUFBRUMsSUFDdEssU0FBU2tQLEdBQUdsUCxFQUFFRSxHQUFHLEdBQUdBLEVBQUUsQ0FBQyxJQUFJSCxFQUFFQyxFQUFFNk8sV0FBVyxHQUFHOU8sR0FBR0EsSUFBSUMsRUFBRW1QLFdBQVcsSUFBSXBQLEVBQUVxUCxTQUF3QixZQUFkclAsRUFBRXNQLFVBQVVuUCxFQUFTLENBQUNGLEVBQUVxTyxZQUFZbk8sQ0FBQyxDQUN0SCxJQUFJb1AsR0FBRyxDQUFDQyx5QkFBd0IsRUFBR0MsYUFBWSxFQUFHQyxtQkFBa0IsRUFBR0Msa0JBQWlCLEVBQUdDLGtCQUFpQixFQUFHQyxTQUFRLEVBQUdDLGNBQWEsRUFBR0MsaUJBQWdCLEVBQUdDLGFBQVksRUFBR0MsU0FBUSxFQUFHQyxNQUFLLEVBQUdDLFVBQVMsRUFBR0MsY0FBYSxFQUFHQyxZQUFXLEVBQUdDLGNBQWEsRUFBR0MsV0FBVSxFQUFHQyxVQUFTLEVBQUdDLFNBQVEsRUFBR0MsWUFBVyxFQUFHQyxhQUFZLEVBQUdDLGNBQWEsRUFBR0MsWUFBVyxFQUFHQyxlQUFjLEVBQUdDLGdCQUFlLEVBQUdDLGlCQUFnQixFQUFHQyxZQUFXLEVBQUdDLFdBQVUsRUFBR0MsWUFBVyxFQUFHQyxTQUFRLEVBQUdDLE9BQU0sRUFBR0MsU0FBUSxFQUFHQyxTQUFRLEVBQUdDLFFBQU8sRUFBR0MsUUFBTyxFQUNsZkMsTUFBSyxFQUFHQyxhQUFZLEVBQUdDLGNBQWEsRUFBR0MsYUFBWSxFQUFHQyxpQkFBZ0IsRUFBR0Msa0JBQWlCLEVBQUdDLGtCQUFpQixFQUFHQyxlQUFjLEVBQUdDLGFBQVksR0FBSUMsR0FBRyxDQUFDLFNBQVMsS0FBSyxNQUFNLEtBQTZILFNBQVNDLEdBQUduUyxFQUFFRSxFQUFFSCxHQUFHLE9BQU8sTUFBTUcsR0FBRyxrQkFBbUJBLEdBQUcsS0FBS0EsRUFBRSxHQUFHSCxHQUFHLGlCQUFrQkcsR0FBRyxJQUFJQSxHQUFHb1AsR0FBR2pRLGVBQWVXLElBQUlzUCxHQUFHdFAsSUFBSSxHQUFHRSxHQUFHa0ssT0FBT2xLLEVBQUUsSUFBSSxDQUN6YixTQUFTa1MsR0FBR3BTLEVBQUVFLEdBQWEsSUFBSSxJQUFJSCxLQUFsQkMsRUFBRUEsRUFBRXFTLE1BQW1CblMsRUFBRSxHQUFHQSxFQUFFYixlQUFlVSxHQUFHLENBQUMsSUFBSUksRUFBRSxJQUFJSixFQUFFdVMsUUFBUSxNQUFNbFMsRUFBRStSLEdBQUdwUyxFQUFFRyxFQUFFSCxHQUFHSSxHQUFHLFVBQVVKLElBQUlBLEVBQUUsWUFBWUksRUFBRUgsRUFBRXVTLFlBQVl4UyxFQUFFSyxHQUFHSixFQUFFRCxHQUFHSyxDQUFDLENBQUMsQ0FEWW5FLE9BQU9DLEtBQUtvVCxJQUFJN1IsUUFBUSxTQUFTdUMsR0FBR2tTLEdBQUd6VSxRQUFRLFNBQVN5QyxHQUFHQSxFQUFFQSxFQUFFRixFQUFFd1MsT0FBTyxHQUFHdEssY0FBY2xJLEVBQUV5UyxVQUFVLEdBQUduRCxHQUFHcFAsR0FBR29QLEdBQUd0UCxFQUFFLEVBQUUsR0FDaEksSUFBSTBTLEdBQUcxSSxFQUFFLENBQUMySSxVQUFTLEdBQUksQ0FBQ0MsTUFBSyxFQUFHQyxNQUFLLEVBQUdDLElBQUcsRUFBR0MsS0FBSSxFQUFHQyxPQUFNLEVBQUdDLElBQUcsRUFBR0MsS0FBSSxFQUFHQyxPQUFNLEVBQUdDLFFBQU8sRUFBR0MsTUFBSyxFQUFHQyxNQUFLLEVBQUdDLE9BQU0sRUFBR0MsUUFBTyxFQUFHQyxPQUFNLEVBQUdDLEtBQUksSUFDbFQsU0FBU0MsR0FBRzNULEVBQUVFLEdBQUcsR0FBR0EsRUFBRSxDQUFDLEdBQUd3UyxHQUFHMVMsS0FBSyxNQUFNRSxFQUFFK04sVUFBVSxNQUFNL04sRUFBRThOLHlCQUF5QixNQUFNelEsTUFBTWtDLEVBQUUsSUFBSU8sSUFBSSxHQUFHLE1BQU1FLEVBQUU4Tix3QkFBd0IsQ0FBQyxHQUFHLE1BQU05TixFQUFFK04sU0FBUyxNQUFNMVEsTUFBTWtDLEVBQUUsS0FBSyxHQUFHLGlCQUFrQlMsRUFBRThOLDJCQUEyQixXQUFXOU4sRUFBRThOLHlCQUF5QixNQUFNelEsTUFBTWtDLEVBQUUsSUFBSyxDQUFDLEdBQUcsTUFBTVMsRUFBRW1TLE9BQU8saUJBQWtCblMsRUFBRW1TLE1BQU0sTUFBTTlVLE1BQU1rQyxFQUFFLElBQUssQ0FBQyxDQUNsVyxTQUFTbVUsR0FBRzVULEVBQUVFLEdBQUcsSUFBSSxJQUFJRixFQUFFc1MsUUFBUSxLQUFLLE1BQU0saUJBQWtCcFMsRUFBRTJULEdBQUcsT0FBTzdULEdBQUcsSUFBSyxpQkFBaUIsSUFBSyxnQkFBZ0IsSUFBSyxZQUFZLElBQUssZ0JBQWdCLElBQUssZ0JBQWdCLElBQUssbUJBQW1CLElBQUssaUJBQWlCLElBQUssZ0JBQWdCLE9BQU0sRUFBRyxRQUFRLE9BQU0sRUFBRyxDQUFDLElBQUk4VCxHQUFHLEtBQUssU0FBU0MsR0FBRy9ULEdBQTZGLE9BQTFGQSxFQUFFQSxFQUFFZ1UsUUFBUWhVLEVBQUVpVSxZQUFZblMsUUFBU29TLDBCQUEwQmxVLEVBQUVBLEVBQUVrVSx5QkFBZ0MsSUFBSWxVLEVBQUVvUCxTQUFTcFAsRUFBRW1VLFdBQVduVSxDQUFDLENBQUMsSUFBSW9VLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQ3BjLFNBQVNDLEdBQUd2VSxHQUFHLEdBQUdBLEVBQUV3VSxHQUFHeFUsR0FBRyxDQUFDLEdBQUcsbUJBQW9Cb1UsR0FBRyxNQUFNN1csTUFBTWtDLEVBQUUsTUFBTSxJQUFJUyxFQUFFRixFQUFFeVUsVUFBVXZVLElBQUlBLEVBQUV3VSxHQUFHeFUsR0FBR2tVLEdBQUdwVSxFQUFFeVUsVUFBVXpVLEVBQUVTLEtBQUtQLEdBQUcsQ0FBQyxDQUFDLFNBQVN5VSxHQUFHM1UsR0FBR3FVLEdBQUdDLEdBQUdBLEdBQUd4WCxLQUFLa0QsR0FBR3NVLEdBQUcsQ0FBQ3RVLEdBQUdxVSxHQUFHclUsQ0FBQyxDQUFDLFNBQVM0VSxLQUFLLEdBQUdQLEdBQUcsQ0FBQyxJQUFJclUsRUFBRXFVLEdBQUduVSxFQUFFb1UsR0FBb0IsR0FBakJBLEdBQUdELEdBQUcsS0FBS0UsR0FBR3ZVLEdBQU1FLEVBQUUsSUFBSUYsRUFBRSxFQUFFQSxFQUFFRSxFQUFFL0QsT0FBTzZELElBQUl1VSxHQUFHclUsRUFBRUYsR0FBRyxDQUFDLENBQUMsU0FBUzZVLEdBQUc3VSxFQUFFRSxHQUFHLE9BQU9GLEVBQUVFLEVBQUUsQ0FBQyxTQUFTNFUsS0FBSyxDQUFDLElBQUlDLElBQUcsRUFBRyxTQUFTQyxHQUFHaFYsRUFBRUUsRUFBRUgsR0FBRyxHQUFHZ1YsR0FBRyxPQUFPL1UsRUFBRUUsRUFBRUgsR0FBR2dWLElBQUcsRUFBRyxJQUFJLE9BQU9GLEdBQUc3VSxFQUFFRSxFQUFFSCxFQUFFLENBQUMsUUFBV2dWLElBQUcsR0FBRyxPQUFPVixJQUFJLE9BQU9DLE1BQUdRLEtBQUtGLEtBQUksQ0FBQyxDQUNoYixTQUFTSyxHQUFHalYsRUFBRUUsR0FBRyxJQUFJSCxFQUFFQyxFQUFFeVUsVUFBVSxHQUFHLE9BQU8xVSxFQUFFLE9BQU8sS0FBSyxJQUFJSSxFQUFFdVUsR0FBRzNVLEdBQUcsR0FBRyxPQUFPSSxFQUFFLE9BQU8sS0FBS0osRUFBRUksRUFBRUQsR0FBR0YsRUFBRSxPQUFPRSxHQUFHLElBQUssVUFBVSxJQUFLLGlCQUFpQixJQUFLLGdCQUFnQixJQUFLLHVCQUF1QixJQUFLLGNBQWMsSUFBSyxxQkFBcUIsSUFBSyxjQUFjLElBQUsscUJBQXFCLElBQUssWUFBWSxJQUFLLG1CQUFtQixJQUFLLGdCQUFnQkMsR0FBR0EsRUFBRTJOLFlBQXFCM04sSUFBSSxZQUFiSCxFQUFFQSxFQUFFUyxPQUF1QixVQUFVVCxHQUFHLFdBQVdBLEdBQUcsYUFBYUEsSUFBSUEsR0FBR0csRUFBRSxNQUFNSCxFQUFFLFFBQVFBLEdBQUUsRUFBRyxHQUFHQSxFQUFFLE9BQU8sS0FBSyxHQUFHRCxHQUFHLG1CQUNsZUEsRUFBRSxNQUFNeEMsTUFBTWtDLEVBQUUsSUFBSVMsU0FBU0gsSUFBSSxPQUFPQSxDQUFDLENBQUMsSUFBSW1WLElBQUcsRUFBRyxHQUFHcE8sRUFBRyxJQUFJLElBQUlxTyxHQUFHLENBQUMsRUFBRWxaLE9BQU93TyxlQUFlMEssR0FBRyxVQUFVLENBQUNwSixJQUFJLFdBQVdtSixJQUFHLENBQUUsSUFBSXBULE9BQU9zVCxpQkFBaUIsT0FBT0QsR0FBR0EsSUFBSXJULE9BQU91VCxvQkFBb0IsT0FBT0YsR0FBR0EsR0FBRyxDQUFDLE1BQU1uVixJQUFHa1YsSUFBRyxDQUFFLENBQUMsU0FBU0ksR0FBR3RWLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEVBQUV0QixFQUFFbUIsRUFBRUksRUFBRXRCLEdBQUcsSUFBSUcsRUFBRStFLE1BQU03RSxVQUFVaUMsTUFBTWYsS0FBS2dHLFVBQVUsR0FBRyxJQUFJcEcsRUFBRWhELE1BQU02QyxFQUFFYixFQUFFLENBQUMsTUFBTUMsR0FBR2hDLEtBQUtvWSxRQUFRcFcsRUFBRSxDQUFDLENBQUMsSUFBSXFXLElBQUcsRUFBR0MsR0FBRyxLQUFLQyxJQUFHLEVBQUdDLEdBQUcsS0FBS0MsR0FBRyxDQUFDTCxRQUFRLFNBQVN2VixHQUFHd1YsSUFBRyxFQUFHQyxHQUFHelYsQ0FBQyxHQUFHLFNBQVM2VixHQUFHN1YsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsRUFBRXRCLEVBQUVtQixFQUFFSSxFQUFFdEIsR0FBR3lXLElBQUcsRUFBR0MsR0FBRyxLQUFLSCxHQUFHcFksTUFBTTBZLEdBQUd0UCxVQUFVLENBQ2pXLFNBQVN3UCxHQUFHOVYsR0FBRyxJQUFJRSxFQUFFRixFQUFFRCxFQUFFQyxFQUFFLEdBQUdBLEVBQUUrVixVQUFVLEtBQUs3VixFQUFFOFYsUUFBUTlWLEVBQUVBLEVBQUU4VixXQUFXLENBQUNoVyxFQUFFRSxFQUFFLE1BQW9CLE1BQWpCQSxFQUFFRixHQUFTaVcsU0FBY2xXLEVBQUVHLEVBQUU4VixRQUFRaFcsRUFBRUUsRUFBRThWLGFBQWFoVyxFQUFFLENBQUMsT0FBTyxJQUFJRSxFQUFFK0ssSUFBSWxMLEVBQUUsSUFBSSxDQUFDLFNBQVNtVyxHQUFHbFcsR0FBRyxHQUFHLEtBQUtBLEVBQUVpTCxJQUFJLENBQUMsSUFBSS9LLEVBQUVGLEVBQUVtVyxjQUFzRSxHQUF4RCxPQUFPalcsR0FBa0IsUUFBZEYsRUFBRUEsRUFBRStWLGFBQXFCN1YsRUFBRUYsRUFBRW1XLGVBQW1CLE9BQU9qVyxFQUFFLE9BQU9BLEVBQUVrVyxVQUFVLENBQUMsT0FBTyxJQUFJLENBQUMsU0FBU0MsR0FBR3JXLEdBQUcsR0FBRzhWLEdBQUc5VixLQUFLQSxFQUFFLE1BQU16QyxNQUFNa0MsRUFBRSxLQUFNLENBRTFTLFNBQVM2VyxHQUFHdFcsR0FBVyxPQUFPLFFBQWZBLEVBRHROLFNBQVlBLEdBQUcsSUFBSUUsRUFBRUYsRUFBRStWLFVBQVUsSUFBSTdWLEVBQUUsQ0FBUyxHQUFHLFFBQVhBLEVBQUU0VixHQUFHOVYsSUFBZSxNQUFNekMsTUFBTWtDLEVBQUUsTUFBTSxPQUFPUyxJQUFJRixFQUFFLEtBQUtBLENBQUMsQ0FBQyxJQUFJLElBQUlELEVBQUVDLEVBQUVHLEVBQUVELElBQUksQ0FBQyxJQUFJRSxFQUFFTCxFQUFFaVcsT0FBTyxHQUFHLE9BQU81VixFQUFFLE1BQU0sSUFBSXRCLEVBQUVzQixFQUFFMlYsVUFBVSxHQUFHLE9BQU9qWCxFQUFFLENBQVksR0FBRyxRQUFkcUIsRUFBRUMsRUFBRTRWLFFBQW1CLENBQUNqVyxFQUFFSSxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBR0MsRUFBRW1XLFFBQVF6WCxFQUFFeVgsTUFBTSxDQUFDLElBQUl6WCxFQUFFc0IsRUFBRW1XLE1BQU16WCxHQUFHLENBQUMsR0FBR0EsSUFBSWlCLEVBQUUsT0FBT3NXLEdBQUdqVyxHQUFHSixFQUFFLEdBQUdsQixJQUFJcUIsRUFBRSxPQUFPa1csR0FBR2pXLEdBQUdGLEVBQUVwQixFQUFFQSxFQUFFMFgsT0FBTyxDQUFDLE1BQU1qWixNQUFNa0MsRUFBRSxLQUFNLENBQUMsR0FBR00sRUFBRWlXLFNBQVM3VixFQUFFNlYsT0FBT2pXLEVBQUVLLEVBQUVELEVBQUVyQixNQUFNLENBQUMsSUFBSSxJQUFJbUIsR0FBRSxFQUFHSSxFQUFFRCxFQUFFbVcsTUFBTWxXLEdBQUcsQ0FBQyxHQUFHQSxJQUFJTixFQUFFLENBQUNFLEdBQUUsRUFBR0YsRUFBRUssRUFBRUQsRUFBRXJCLEVBQUUsS0FBSyxDQUFDLEdBQUd1QixJQUFJRixFQUFFLENBQUNGLEdBQUUsRUFBR0UsRUFBRUMsRUFBRUwsRUFBRWpCLEVBQUUsS0FBSyxDQUFDdUIsRUFBRUEsRUFBRW1XLE9BQU8sQ0FBQyxJQUFJdlcsRUFBRSxDQUFDLElBQUlJLEVBQUV2QixFQUFFeVgsTUFBTWxXLEdBQUcsQ0FBQyxHQUFHQSxJQUM1Zk4sRUFBRSxDQUFDRSxHQUFFLEVBQUdGLEVBQUVqQixFQUFFcUIsRUFBRUMsRUFBRSxLQUFLLENBQUMsR0FBR0MsSUFBSUYsRUFBRSxDQUFDRixHQUFFLEVBQUdFLEVBQUVyQixFQUFFaUIsRUFBRUssRUFBRSxLQUFLLENBQUNDLEVBQUVBLEVBQUVtVyxPQUFPLENBQUMsSUFBSXZXLEVBQUUsTUFBTTFDLE1BQU1rQyxFQUFFLEtBQU0sQ0FBQyxDQUFDLEdBQUdNLEVBQUVnVyxZQUFZNVYsRUFBRSxNQUFNNUMsTUFBTWtDLEVBQUUsS0FBTSxDQUFDLEdBQUcsSUFBSU0sRUFBRWtMLElBQUksTUFBTTFOLE1BQU1rQyxFQUFFLE1BQU0sT0FBT00sRUFBRTBVLFVBQVU3VCxVQUFVYixFQUFFQyxFQUFFRSxDQUFDLENBQWtCdVcsQ0FBR3pXLElBQW1CMFcsR0FBRzFXLEdBQUcsSUFBSSxDQUFDLFNBQVMwVyxHQUFHMVcsR0FBRyxHQUFHLElBQUlBLEVBQUVpTCxLQUFLLElBQUlqTCxFQUFFaUwsSUFBSSxPQUFPakwsRUFBRSxJQUFJQSxFQUFFQSxFQUFFdVcsTUFBTSxPQUFPdlcsR0FBRyxDQUFDLElBQUlFLEVBQUV3VyxHQUFHMVcsR0FBRyxHQUFHLE9BQU9FLEVBQUUsT0FBT0EsRUFBRUYsRUFBRUEsRUFBRXdXLE9BQU8sQ0FBQyxPQUFPLElBQUksQ0FDMVgsSUFBSUcsR0FBR3RRLEVBQUd1USwwQkFBMEJDLEdBQUd4USxFQUFHeVEsd0JBQXdCQyxHQUFHMVEsRUFBRzJRLHFCQUFxQkMsR0FBRzVRLEVBQUc2USxzQkFBc0JDLEdBQUU5USxFQUFHK1EsYUFBYUMsR0FBR2hSLEVBQUdpUixpQ0FBaUNDLEdBQUdsUixFQUFHbVIsMkJBQTJCQyxHQUFHcFIsRUFBR3FSLDhCQUE4QkMsR0FBR3RSLEVBQUd1Uix3QkFBd0JDLEdBQUd4UixFQUFHeVIscUJBQXFCQyxHQUFHMVIsRUFBRzJSLHNCQUFzQkMsR0FBRyxLQUFLQyxHQUFHLEtBQ25WQyxHQUFHalgsS0FBS2tYLE1BQU1sWCxLQUFLa1gsTUFBaUMsU0FBWXBZLEdBQVUsT0FBTyxLQUFkQSxLQUFLLEdBQWUsR0FBRyxJQUFJcVksR0FBR3JZLEdBQUdzWSxHQUFHLEdBQUcsQ0FBQyxFQUEvRUQsR0FBR25YLEtBQUszRixJQUFJK2MsR0FBR3BYLEtBQUtxWCxJQUFnRUMsR0FBRyxHQUFHQyxHQUFHLFFBQzdILFNBQVNDLEdBQUcxWSxHQUFHLE9BQU9BLEdBQUdBLEdBQUcsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLEdBQUcsT0FBTyxHQUFHLEtBQUssR0FBRyxPQUFPLEdBQUcsS0FBSyxHQUFHLEtBQUssSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLE1BQU0sS0FBSyxNQUFNLEtBQUssTUFBTSxLQUFLLE9BQU8sS0FBSyxPQUFPLEtBQUssT0FBTyxLQUFLLFFBQVEsS0FBSyxRQUFRLE9BQVMsUUFBRkEsRUFBVSxLQUFLLFFBQVEsS0FBSyxRQUFRLEtBQUssU0FBUyxLQUFLLFNBQVMsS0FBSyxTQUFTLE9BQVMsVUFBRkEsRUFBWSxLQUFLLFVBQVUsT0FBTyxVQUFVLEtBQUssVUFBVSxPQUFPLFVBQVUsS0FBSyxVQUFVLE9BQU8sVUFBVSxLQUFLLFdBQVcsT0FBTyxXQUN6Z0IsUUFBUSxPQUFPQSxFQUFFLENBQUMsU0FBUzJZLEdBQUczWSxFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUU0WSxhQUFhLEdBQUcsSUFBSTdZLEVBQUUsT0FBTyxFQUFFLElBQUlJLEVBQUUsRUFBRUMsRUFBRUosRUFBRTZZLGVBQWUvWixFQUFFa0IsRUFBRThZLFlBQVk3WSxFQUFJLFVBQUZGLEVBQVksR0FBRyxJQUFJRSxFQUFFLENBQUMsSUFBSUksRUFBRUosR0FBR0csRUFBRSxJQUFJQyxFQUFFRixFQUFFdVksR0FBR3JZLEdBQVMsS0FBTHZCLEdBQUdtQixLQUFVRSxFQUFFdVksR0FBRzVaLEdBQUksTUFBYSxLQUFQbUIsRUFBRUYsR0FBR0ssR0FBUUQsRUFBRXVZLEdBQUd6WSxHQUFHLElBQUluQixJQUFJcUIsRUFBRXVZLEdBQUc1WixJQUFJLEdBQUcsSUFBSXFCLEVBQUUsT0FBTyxFQUFFLEdBQUcsSUFBSUQsR0FBR0EsSUFBSUMsR0FBRyxLQUFLRCxFQUFFRSxNQUFLQSxFQUFFRCxHQUFHQSxLQUFFckIsRUFBRW9CLEdBQUdBLElBQVEsS0FBS0UsR0FBVSxRQUFGdEIsR0FBWSxPQUFPb0IsRUFBMEMsR0FBakMsRUFBRkMsSUFBT0EsR0FBSyxHQUFGSixHQUE0QixLQUF0QkcsRUFBRUYsRUFBRStZLGdCQUF3QixJQUFJL1ksRUFBRUEsRUFBRWdaLGNBQWM5WSxHQUFHQyxFQUFFLEVBQUVELEdBQWNFLEVBQUUsSUFBYkwsRUFBRSxHQUFHb1ksR0FBR2pZLElBQVVDLEdBQUdILEVBQUVELEdBQUdHLElBQUlFLEVBQUUsT0FBT0QsQ0FBQyxDQUN2YyxTQUFTOFksR0FBR2paLEVBQUVFLEdBQUcsT0FBT0YsR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPRSxFQUFFLElBQUksS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLE1BQU0sS0FBSyxNQUFNLEtBQUssTUFBTSxLQUFLLE9BQU8sS0FBSyxPQUFPLEtBQUssT0FBTyxLQUFLLFFBQVEsS0FBSyxRQUFRLE9BQU9BLEVBQUUsSUFBdUosUUFBUSxPQUFPLEVBQUUsQ0FDck4sU0FBU2daLEdBQUdsWixHQUFnQyxPQUFPLElBQXBDQSxHQUFrQixXQUFoQkEsRUFBRTRZLGNBQXNDNVksRUFBSSxXQUFGQSxFQUFhLFdBQVcsQ0FBQyxDQUFDLFNBQVNtWixLQUFLLElBQUluWixFQUFFd1ksR0FBb0MsUUFBbEIsU0FBZkEsS0FBSyxNQUFxQkEsR0FBRyxJQUFXeFksQ0FBQyxDQUFDLFNBQVNvWixHQUFHcFosR0FBRyxJQUFJLElBQUlFLEVBQUUsR0FBR0gsRUFBRSxFQUFFLEdBQUdBLEVBQUVBLElBQUlHLEVBQUVwRCxLQUFLa0QsR0FBRyxPQUFPRSxDQUFDLENBQzNhLFNBQVNtWixHQUFHclosRUFBRUUsRUFBRUgsR0FBR0MsRUFBRTRZLGNBQWMxWSxFQUFFLFlBQVlBLElBQUlGLEVBQUU2WSxlQUFlLEVBQUU3WSxFQUFFOFksWUFBWSxJQUFHOVksRUFBRUEsRUFBRXNaLFlBQVdwWixFQUFFLEdBQUdpWSxHQUFHalksSUFBUUgsQ0FBQyxDQUN6SCxTQUFTd1osR0FBR3ZaLEVBQUVFLEdBQUcsSUFBSUgsRUFBRUMsRUFBRStZLGdCQUFnQjdZLEVBQUUsSUFBSUYsRUFBRUEsRUFBRWdaLGNBQWNqWixHQUFHLENBQUMsSUFBSUksRUFBRSxHQUFHZ1ksR0FBR3BZLEdBQUdLLEVBQUUsR0FBR0QsRUFBRUMsRUFBRUYsRUFBRUYsRUFBRUcsR0FBR0QsSUFBSUYsRUFBRUcsSUFBSUQsR0FBR0gsSUFBSUssQ0FBQyxDQUFDLENBQUMsSUFBSW9aLEdBQUUsRUFBRSxTQUFTQyxHQUFHelosR0FBUyxPQUFPLEdBQWJBLElBQUlBLEdBQWEsRUFBRUEsRUFBUyxVQUFGQSxFQUFhLEdBQUcsVUFBVSxFQUFFLENBQUMsQ0FBQyxJQUFJMFosR0FBR0MsR0FBR0MsR0FBR0MsR0FBR0MsR0FBR0MsSUFBRyxFQUFHQyxHQUFHLEdBQUdDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsSUFBSUMsSUFBSUMsR0FBRyxJQUFJRCxJQUFJRSxHQUFHLEdBQUdDLEdBQUcsNlBBQTZQMVMsTUFBTSxLQUNoaUIsU0FBUzJTLEdBQUd6YSxFQUFFRSxHQUFHLE9BQU9GLEdBQUcsSUFBSyxVQUFVLElBQUssV0FBV2lhLEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWSxJQUFLLFlBQVlDLEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWSxJQUFLLFdBQVdDLEdBQUcsS0FBSyxNQUFNLElBQUssY0FBYyxJQUFLLGFBQWFDLEdBQUdNLE9BQU94YSxFQUFFeWEsV0FBVyxNQUFNLElBQUssb0JBQW9CLElBQUsscUJBQXFCTCxHQUFHSSxPQUFPeGEsRUFBRXlhLFdBQVcsQ0FDblQsU0FBU0MsR0FBRzVhLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEVBQUV0QixHQUFHLE9BQUcsT0FBT2tCLEdBQUdBLEVBQUU2YSxjQUFjL2IsR0FBU2tCLEVBQUUsQ0FBQzhhLFVBQVU1YSxFQUFFNmEsYUFBYWhiLEVBQUVpYixpQkFBaUI3YSxFQUFFMGEsWUFBWS9iLEVBQUVtYyxpQkFBaUIsQ0FBQzdhLElBQUksT0FBT0YsR0FBWSxRQUFSQSxFQUFFc1UsR0FBR3RVLEtBQWF5WixHQUFHelosR0FBSUYsSUFBRUEsRUFBRWdiLGtCQUFrQjdhLEVBQUVELEVBQUVGLEVBQUVpYixpQkFBaUIsT0FBTzdhLElBQUksSUFBSUYsRUFBRW9TLFFBQVFsUyxJQUFJRixFQUFFcEQsS0FBS3NELEdBQVVKLEVBQUMsQ0FFcFIsU0FBU2tiLEdBQUdsYixHQUFHLElBQUlFLEVBQUVpYixHQUFHbmIsRUFBRWdVLFFBQVEsR0FBRyxPQUFPOVQsRUFBRSxDQUFDLElBQUlILEVBQUUrVixHQUFHNVYsR0FBRyxHQUFHLE9BQU9ILEVBQUUsR0FBVyxNQUFSRyxFQUFFSCxFQUFFa0wsTUFBWSxHQUFXLFFBQVIvSyxFQUFFZ1csR0FBR25XLElBQTRELE9BQS9DQyxFQUFFOGEsVUFBVTVhLE9BQUU0WixHQUFHOVosRUFBRW9iLFNBQVMsV0FBV3hCLEdBQUc3WixFQUFFLFFBQWdCLEdBQUcsSUFBSUcsR0FBR0gsRUFBRTBVLFVBQVU3VCxRQUFRdVYsY0FBY2tGLGFBQW1FLFlBQXJEcmIsRUFBRThhLFVBQVUsSUFBSS9hLEVBQUVrTCxJQUFJbEwsRUFBRTBVLFVBQVU2RyxjQUFjLEtBQVksQ0FBQ3RiLEVBQUU4YSxVQUFVLElBQUksQ0FDbFQsU0FBU1MsR0FBR3ZiLEdBQUcsR0FBRyxPQUFPQSxFQUFFOGEsVUFBVSxPQUFNLEVBQUcsSUFBSSxJQUFJNWEsRUFBRUYsRUFBRWliLGlCQUFpQixFQUFFL2EsRUFBRS9ELFFBQVEsQ0FBQyxJQUFJNEQsRUFBRXliLEdBQUd4YixFQUFFK2EsYUFBYS9hLEVBQUVnYixpQkFBaUI5YSxFQUFFLEdBQUdGLEVBQUU2YSxhQUFhLEdBQUcsT0FBTzlhLEVBQWlHLE9BQWUsUUFBUkcsRUFBRXNVLEdBQUd6VSxLQUFhNFosR0FBR3paLEdBQUdGLEVBQUU4YSxVQUFVL2EsR0FBRSxFQUEzSCxJQUFJSSxFQUFFLElBQXRCSixFQUFFQyxFQUFFNmEsYUFBd0IvTyxZQUFZL0wsRUFBRVUsS0FBS1YsR0FBRytULEdBQUczVCxFQUFFSixFQUFFaVUsT0FBT3lILGNBQWN0YixHQUFHMlQsR0FBRyxLQUEwRDVULEVBQUVqRCxPQUFPLENBQUMsT0FBTSxDQUFFLENBQUMsU0FBU3llLEdBQUcxYixFQUFFRSxFQUFFSCxHQUFHd2IsR0FBR3ZiLElBQUlELEVBQUUyYSxPQUFPeGEsRUFBRSxDQUFDLFNBQVN5YixLQUFLNUIsSUFBRyxFQUFHLE9BQU9FLElBQUlzQixHQUFHdEIsTUFBTUEsR0FBRyxNQUFNLE9BQU9DLElBQUlxQixHQUFHckIsTUFBTUEsR0FBRyxNQUFNLE9BQU9DLElBQUlvQixHQUFHcEIsTUFBTUEsR0FBRyxNQUFNQyxHQUFHM2MsUUFBUWllLElBQUlwQixHQUFHN2MsUUFBUWllLEdBQUcsQ0FDbmYsU0FBU0UsR0FBRzViLEVBQUVFLEdBQUdGLEVBQUU4YSxZQUFZNWEsSUFBSUYsRUFBRThhLFVBQVUsS0FBS2YsS0FBS0EsSUFBRyxFQUFHMVQsRUFBR3VRLDBCQUEwQnZRLEVBQUd1Uix3QkFBd0IrRCxLQUFLLENBQzVILFNBQVNFLEdBQUc3YixHQUFHLFNBQVNFLEVBQUVBLEdBQUcsT0FBTzBiLEdBQUcxYixFQUFFRixFQUFFLENBQUMsR0FBRyxFQUFFZ2EsR0FBRzdkLE9BQU8sQ0FBQ3lmLEdBQUc1QixHQUFHLEdBQUdoYSxHQUFHLElBQUksSUFBSUQsRUFBRSxFQUFFQSxFQUFFaWEsR0FBRzdkLE9BQU80RCxJQUFJLENBQUMsSUFBSUksRUFBRTZaLEdBQUdqYSxHQUFHSSxFQUFFMmEsWUFBWTlhLElBQUlHLEVBQUUyYSxVQUFVLEtBQUssQ0FBQyxDQUF5RixJQUF4RixPQUFPYixJQUFJMkIsR0FBRzNCLEdBQUdqYSxHQUFHLE9BQU9rYSxJQUFJMEIsR0FBRzFCLEdBQUdsYSxHQUFHLE9BQU9tYSxJQUFJeUIsR0FBR3pCLEdBQUduYSxHQUFHb2EsR0FBRzNjLFFBQVF5QyxHQUFHb2EsR0FBRzdjLFFBQVF5QyxHQUFPSCxFQUFFLEVBQUVBLEVBQUV3YSxHQUFHcGUsT0FBTzRELEtBQUlJLEVBQUVvYSxHQUFHeGEsSUFBSythLFlBQVk5YSxJQUFJRyxFQUFFMmEsVUFBVSxNQUFNLEtBQUssRUFBRVAsR0FBR3BlLFFBQWlCLFFBQVI0RCxFQUFFd2EsR0FBRyxJQUFZTyxXQUFZSSxHQUFHbmIsR0FBRyxPQUFPQSxFQUFFK2EsV0FBV1AsR0FBR3RkLE9BQU8sQ0FBQyxJQUFJNmUsR0FBR2hULEVBQUdpVCx3QkFBd0JDLElBQUcsRUFDNWEsU0FBU0MsR0FBR2pjLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSUMsRUFBRW9aLEdBQUUxYSxFQUFFZ2QsR0FBR0ksV0FBV0osR0FBR0ksV0FBVyxLQUFLLElBQUkxQyxHQUFFLEVBQUUyQyxHQUFHbmMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRSxDQUFDLFFBQVFxWixHQUFFcFosRUFBRTBiLEdBQUdJLFdBQVdwZCxDQUFDLENBQUMsQ0FBQyxTQUFTc2QsR0FBR3BjLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSUMsRUFBRW9aLEdBQUUxYSxFQUFFZ2QsR0FBR0ksV0FBV0osR0FBR0ksV0FBVyxLQUFLLElBQUkxQyxHQUFFLEVBQUUyQyxHQUFHbmMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRSxDQUFDLFFBQVFxWixHQUFFcFosRUFBRTBiLEdBQUdJLFdBQVdwZCxDQUFDLENBQUMsQ0FDak8sU0FBU3FkLEdBQUduYyxFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLEdBQUc2YixHQUFHLENBQUMsSUFBSTViLEVBQUVvYixHQUFHeGIsRUFBRUUsRUFBRUgsRUFBRUksR0FBRyxHQUFHLE9BQU9DLEVBQUVpYyxHQUFHcmMsRUFBRUUsRUFBRUMsRUFBRXZFLEdBQUdtRSxHQUFHMGEsR0FBR3phLEVBQUVHLFFBQVEsR0FOdEYsU0FBWUgsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsR0FBRyxPQUFPRixHQUFHLElBQUssVUFBVSxPQUFPK1osR0FBR1csR0FBR1gsR0FBR2phLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLElBQUcsRUFBRyxJQUFLLFlBQVksT0FBTzhaLEdBQUdVLEdBQUdWLEdBQUdsYSxFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxJQUFHLEVBQUcsSUFBSyxZQUFZLE9BQU8rWixHQUFHUyxHQUFHVCxHQUFHbmEsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsSUFBRyxFQUFHLElBQUssY0FBYyxJQUFJdEIsRUFBRXNCLEVBQUV1YSxVQUFrRCxPQUF4Q1AsR0FBRzFQLElBQUk1TCxFQUFFOGIsR0FBR1IsR0FBR3JPLElBQUlqTixJQUFJLEtBQUtrQixFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxLQUFVLEVBQUcsSUFBSyxvQkFBb0IsT0FBT3RCLEVBQUVzQixFQUFFdWEsVUFBVUwsR0FBRzVQLElBQUk1TCxFQUFFOGIsR0FBR04sR0FBR3ZPLElBQUlqTixJQUFJLEtBQUtrQixFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxLQUFJLEVBQUcsT0FBTSxDQUFFLENBTTFRa2MsQ0FBR2xjLEVBQUVKLEVBQUVFLEVBQUVILEVBQUVJLEdBQUdBLEVBQUVvYyx1QkFBdUIsR0FBRzlCLEdBQUd6YSxFQUFFRyxHQUFLLEVBQUZELElBQU0sRUFBRXNhLEdBQUdsSSxRQUFRdFMsR0FBRyxDQUFDLEtBQUssT0FBT0ksR0FBRyxDQUFDLElBQUl0QixFQUFFMFYsR0FBR3BVLEdBQTBELEdBQXZELE9BQU90QixHQUFHNGEsR0FBRzVhLEdBQWlCLFFBQWRBLEVBQUUwYyxHQUFHeGIsRUFBRUUsRUFBRUgsRUFBRUksS0FBYWtjLEdBQUdyYyxFQUFFRSxFQUFFQyxFQUFFdkUsR0FBR21FLEdBQU1qQixJQUFJc0IsRUFBRSxNQUFNQSxFQUFFdEIsQ0FBQyxDQUFDLE9BQU9zQixHQUFHRCxFQUFFb2MsaUJBQWlCLE1BQU1GLEdBQUdyYyxFQUFFRSxFQUFFQyxFQUFFLEtBQUtKLEVBQUUsQ0FBQyxDQUFDLElBQUluRSxHQUFHLEtBQ3BVLFNBQVM0ZixHQUFHeGIsRUFBRUUsRUFBRUgsRUFBRUksR0FBMkIsR0FBeEJ2RSxHQUFHLEtBQXdCLFFBQVhvRSxFQUFFbWIsR0FBVm5iLEVBQUUrVCxHQUFHNVQsS0FBdUIsR0FBVyxRQUFSRCxFQUFFNFYsR0FBRzlWLElBQVlBLEVBQUUsVUFBVSxHQUFXLE1BQVJELEVBQUVHLEVBQUUrSyxLQUFXLENBQVMsR0FBRyxRQUFYakwsRUFBRWtXLEdBQUdoVyxJQUFlLE9BQU9GLEVBQUVBLEVBQUUsSUFBSSxNQUFNLEdBQUcsSUFBSUQsRUFBRSxDQUFDLEdBQUdHLEVBQUV1VSxVQUFVN1QsUUFBUXVWLGNBQWNrRixhQUFhLE9BQU8sSUFBSW5iLEVBQUUrSyxJQUFJL0ssRUFBRXVVLFVBQVU2RyxjQUFjLEtBQUt0YixFQUFFLElBQUksTUFBTUUsSUFBSUYsSUFBSUEsRUFBRSxNQUFXLE9BQUxwRSxHQUFHb0UsRUFBUyxJQUFJLENBQzdTLFNBQVN3YyxHQUFHeGMsR0FBRyxPQUFPQSxHQUFHLElBQUssU0FBUyxJQUFLLFFBQVEsSUFBSyxRQUFRLElBQUssY0FBYyxJQUFLLE9BQU8sSUFBSyxNQUFNLElBQUssV0FBVyxJQUFLLFdBQVcsSUFBSyxVQUFVLElBQUssWUFBWSxJQUFLLE9BQU8sSUFBSyxVQUFVLElBQUssV0FBVyxJQUFLLFFBQVEsSUFBSyxVQUFVLElBQUssVUFBVSxJQUFLLFdBQVcsSUFBSyxRQUFRLElBQUssWUFBWSxJQUFLLFVBQVUsSUFBSyxRQUFRLElBQUssUUFBUSxJQUFLLE9BQU8sSUFBSyxnQkFBZ0IsSUFBSyxjQUFjLElBQUssWUFBWSxJQUFLLGFBQWEsSUFBSyxRQUFRLElBQUssU0FBUyxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssY0FBYyxJQUFLLFdBQVcsSUFBSyxhQUFhLElBQUssZUFBZSxJQUFLLFNBQVMsSUFBSyxrQkFBa0IsSUFBSyxZQUFZLElBQUssbUJBQW1CLElBQUssaUJBQWlCLElBQUssb0JBQW9CLElBQUssYUFBYSxJQUFLLFlBQVksSUFBSyxjQUFjLElBQUssT0FBTyxJQUFLLG1CQUFtQixJQUFLLFFBQVEsSUFBSyxhQUFhLElBQUssV0FBVyxJQUFLLFNBQVMsSUFBSyxjQUFjLE9BQU8sRUFBRSxJQUFLLE9BQU8sSUFBSyxZQUFZLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssY0FBYyxJQUFLLGFBQWEsSUFBSyxjQUFjLElBQUssU0FBUyxJQUFLLFNBQVMsSUFBSyxZQUFZLElBQUssUUFBUSxJQUFLLGFBQWEsSUFBSyxhQUFhLElBQUssZUFBZSxJQUFLLGVBQWUsT0FBTyxFQUNwcUMsSUFBSyxVQUFVLE9BQU9xWCxNQUFNLEtBQUtFLEdBQUcsT0FBTyxFQUFFLEtBQUtFLEdBQUcsT0FBTyxFQUFFLEtBQUtFLEdBQUcsS0FBS0UsR0FBRyxPQUFPLEdBQUcsS0FBS0UsR0FBRyxPQUFPLFVBQVUsUUFBUSxPQUFPLEdBQUcsUUFBUSxPQUFPLEdBQUcsQ0FBQyxJQUFJMEUsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxLQUFLLEdBQUdELEdBQUcsT0FBT0EsR0FBRyxJQUFJM2MsRUFBa0JHLEVBQWhCRCxFQUFFd2MsR0FBRzNjLEVBQUVHLEVBQUUvRCxPQUFTaUUsRUFBRSxVQUFVcWMsR0FBR0EsR0FBR2pRLE1BQU1pUSxHQUFHcE8sWUFBWXZQLEVBQUVzQixFQUFFakUsT0FBTyxJQUFJNkQsRUFBRSxFQUFFQSxFQUFFRCxHQUFHRyxFQUFFRixLQUFLSSxFQUFFSixHQUFHQSxLQUFLLElBQUlDLEVBQUVGLEVBQUVDLEVBQUUsSUFBSUcsRUFBRSxFQUFFQSxHQUFHRixHQUFHQyxFQUFFSCxFQUFFSSxLQUFLQyxFQUFFdEIsRUFBRXFCLEdBQUdBLEtBQUssT0FBT3djLEdBQUd2YyxFQUFFaUIsTUFBTXJCLEVBQUUsRUFBRUcsRUFBRSxFQUFFQSxPQUFFLEVBQU8sQ0FDeFksU0FBUzBjLEdBQUc3YyxHQUFHLElBQUlFLEVBQUVGLEVBQUU4YyxRQUErRSxNQUF2RSxhQUFhOWMsRUFBZ0IsS0FBYkEsRUFBRUEsRUFBRStjLFdBQWdCLEtBQUs3YyxJQUFJRixFQUFFLElBQUtBLEVBQUVFLEVBQUUsS0FBS0YsSUFBSUEsRUFBRSxJQUFXLElBQUlBLEdBQUcsS0FBS0EsRUFBRUEsRUFBRSxDQUFDLENBQUMsU0FBU2dkLEtBQUssT0FBTSxDQUFFLENBQUMsU0FBU0MsS0FBSyxPQUFNLENBQUUsQ0FDNUssU0FBU0MsR0FBR2xkLEdBQUcsU0FBU0UsRUFBRUEsRUFBRUMsRUFBRUMsRUFBRXRCLEVBQUVtQixHQUE2RyxJQUFJLElBQUlGLEtBQWxINUMsS0FBS2dnQixXQUFXamQsRUFBRS9DLEtBQUtpZ0IsWUFBWWhkLEVBQUVqRCxLQUFLc0QsS0FBS04sRUFBRWhELEtBQUswZCxZQUFZL2IsRUFBRTNCLEtBQUs2VyxPQUFPL1QsRUFBRTlDLEtBQUtrZ0IsY0FBYyxLQUFrQnJkLEVBQUVBLEVBQUVYLGVBQWVVLEtBQUtHLEVBQUVGLEVBQUVELEdBQUc1QyxLQUFLNEMsR0FBR0csRUFBRUEsRUFBRXBCLEdBQUdBLEVBQUVpQixJQUFnSSxPQUE1SDVDLEtBQUttZ0Isb0JBQW9CLE1BQU14ZSxFQUFFeWUsaUJBQWlCemUsRUFBRXllLGtCQUFpQixJQUFLemUsRUFBRTBlLGFBQWFSLEdBQUdDLEdBQUc5ZixLQUFLc2dCLHFCQUFxQlIsR0FBVTlmLElBQUksQ0FDOUUsT0FEK0U2TSxFQUFFOUosRUFBRWQsVUFBVSxDQUFDc2UsZUFBZSxXQUFXdmdCLEtBQUtvZ0Isa0JBQWlCLEVBQUcsSUFBSXZkLEVBQUU3QyxLQUFLMGQsWUFBWTdhLElBQUlBLEVBQUUwZCxlQUFlMWQsRUFBRTBkLGlCQUFpQixrQkFBbUIxZCxFQUFFd2QsY0FDN2V4ZCxFQUFFd2QsYUFBWSxHQUFJcmdCLEtBQUttZ0IsbUJBQW1CTixHQUFHLEVBQUVULGdCQUFnQixXQUFXLElBQUl2YyxFQUFFN0MsS0FBSzBkLFlBQVk3YSxJQUFJQSxFQUFFdWMsZ0JBQWdCdmMsRUFBRXVjLGtCQUFrQixrQkFBbUJ2YyxFQUFFMmQsZUFBZTNkLEVBQUUyZCxjQUFhLEdBQUl4Z0IsS0FBS3NnQixxQkFBcUJULEdBQUcsRUFBRVksUUFBUSxXQUFXLEVBQUVDLGFBQWFiLEtBQVk5YyxDQUFDLENBQ2pSLElBQW9MNGQsR0FBR0MsR0FBR0MsR0FBdExDLEdBQUcsQ0FBQ0MsV0FBVyxFQUFFQyxRQUFRLEVBQUVDLFdBQVcsRUFBRUMsVUFBVSxTQUFTcmUsR0FBRyxPQUFPQSxFQUFFcWUsV0FBV0MsS0FBS0MsS0FBSyxFQUFFaEIsaUJBQWlCLEVBQUVpQixVQUFVLEdBQUdDLEdBQUd2QixHQUFHZSxJQUFJUyxHQUFHMVUsRUFBRSxDQUFDLEVBQUVpVSxHQUFHLENBQUNVLEtBQUssRUFBRUMsT0FBTyxJQUFJQyxHQUFHM0IsR0FBR3dCLElBQWFJLEdBQUc5VSxFQUFFLENBQUMsRUFBRTBVLEdBQUcsQ0FBQ0ssUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxpQkFBaUJDLEdBQUdDLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxjQUFjLFNBQVM3ZixHQUFHLFlBQU8sSUFBU0EsRUFBRTZmLGNBQWM3ZixFQUFFOGYsY0FBYzlmLEVBQUVpVSxXQUFXalUsRUFBRStmLFVBQVUvZixFQUFFOGYsWUFBWTlmLEVBQUU2ZixhQUFhLEVBQUVHLFVBQVUsU0FBU2hnQixHQUFHLE1BQUcsY0FDM2VBLEVBQVNBLEVBQUVnZ0IsV0FBVWhnQixJQUFJZ2UsS0FBS0EsSUFBSSxjQUFjaGUsRUFBRVMsTUFBTXFkLEdBQUc5ZCxFQUFFK2UsUUFBUWYsR0FBR2UsUUFBUWhCLEdBQUcvZCxFQUFFZ2YsUUFBUWhCLEdBQUdnQixTQUFTakIsR0FBR0QsR0FBRyxFQUFFRSxHQUFHaGUsR0FBVThkLEdBQUUsRUFBRW1DLFVBQVUsU0FBU2pnQixHQUFHLE1BQU0sY0FBY0EsRUFBRUEsRUFBRWlnQixVQUFVbEMsRUFBRSxJQUFJbUMsR0FBR2hELEdBQUc0QixJQUFpQ3FCLEdBQUdqRCxHQUE3QmxULEVBQUUsQ0FBQyxFQUFFOFUsR0FBRyxDQUFDc0IsYUFBYSxLQUE0Q0MsR0FBR25ELEdBQTlCbFQsRUFBRSxDQUFDLEVBQUUwVSxHQUFHLENBQUNtQixjQUFjLEtBQTBFUyxHQUFHcEQsR0FBNURsVCxFQUFFLENBQUMsRUFBRWlVLEdBQUcsQ0FBQ3NDLGNBQWMsRUFBRUMsWUFBWSxFQUFFQyxjQUFjLEtBQWNDLEdBQUcxVyxFQUFFLENBQUMsRUFBRWlVLEdBQUcsQ0FBQzBDLGNBQWMsU0FBUzNnQixHQUFHLE1BQU0sa0JBQWtCQSxFQUFFQSxFQUFFMmdCLGNBQWM3ZSxPQUFPNmUsYUFBYSxJQUFJQyxHQUFHMUQsR0FBR3dELElBQXlCRyxHQUFHM0QsR0FBckJsVCxFQUFFLENBQUMsRUFBRWlVLEdBQUcsQ0FBQ2phLEtBQUssS0FBYzhjLEdBQUcsQ0FBQ0MsSUFBSSxTQUN4ZkMsU0FBUyxJQUFJQyxLQUFLLFlBQVlDLEdBQUcsVUFBVUMsTUFBTSxhQUFhQyxLQUFLLFlBQVlDLElBQUksU0FBU0MsSUFBSSxLQUFLQyxLQUFLLGNBQWNDLEtBQUssY0FBY0MsT0FBTyxhQUFhQyxnQkFBZ0IsZ0JBQWdCQyxHQUFHLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxHQUFHLFFBQVEsR0FBRyxRQUFRLEdBQUcsUUFBUSxHQUFHLFVBQVUsR0FBRyxNQUFNLEdBQUcsUUFBUSxHQUFHLFdBQVcsR0FBRyxTQUFTLEdBQUcsSUFBSSxHQUFHLFNBQVMsR0FBRyxXQUFXLEdBQUcsTUFBTSxHQUFHLE9BQU8sR0FBRyxZQUFZLEdBQUcsVUFBVSxHQUFHLGFBQWEsR0FBRyxZQUFZLEdBQUcsU0FBUyxHQUFHLFNBQVMsSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUN0ZixJQUFJLEtBQUssSUFBSSxLQUFLLElBQUksTUFBTSxJQUFJLE1BQU0sSUFBSSxNQUFNLElBQUksVUFBVSxJQUFJLGFBQWEsSUFBSSxRQUFRQyxHQUFHLENBQUNDLElBQUksU0FBU0MsUUFBUSxVQUFVQyxLQUFLLFVBQVVDLE1BQU0sWUFBWSxTQUFTQyxHQUFHamlCLEdBQUcsSUFBSUUsRUFBRS9DLEtBQUswZCxZQUFZLE9BQU8zYSxFQUFFdWYsaUJBQWlCdmYsRUFBRXVmLGlCQUFpQnpmLE1BQUlBLEVBQUU0aEIsR0FBRzVoQixPQUFNRSxFQUFFRixFQUFLLENBQUMsU0FBUzBmLEtBQUssT0FBT3VDLEVBQUUsQ0FDaFMsSUFBSUMsR0FBR2xZLEVBQUUsQ0FBQyxFQUFFMFUsR0FBRyxDQUFDaGYsSUFBSSxTQUFTTSxHQUFHLEdBQUdBLEVBQUVOLElBQUksQ0FBQyxJQUFJUSxFQUFFNGdCLEdBQUc5Z0IsRUFBRU4sTUFBTU0sRUFBRU4sSUFBSSxHQUFHLGlCQUFpQlEsRUFBRSxPQUFPQSxDQUFDLENBQUMsTUFBTSxhQUFhRixFQUFFUyxLQUFjLE1BQVJULEVBQUU2YyxHQUFHN2MsSUFBVSxRQUFRbWlCLE9BQU9DLGFBQWFwaUIsR0FBSSxZQUFZQSxFQUFFUyxNQUFNLFVBQVVULEVBQUVTLEtBQUtraEIsR0FBRzNoQixFQUFFOGMsVUFBVSxlQUFlLEVBQUUsRUFBRXVGLEtBQUssRUFBRXRnQixTQUFTLEVBQUVzZCxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUU4QyxPQUFPLEVBQUVDLE9BQU8sRUFBRTlDLGlCQUFpQkMsR0FBRzNDLFNBQVMsU0FBUy9jLEdBQUcsTUFBTSxhQUFhQSxFQUFFUyxLQUFLb2MsR0FBRzdjLEdBQUcsQ0FBQyxFQUFFOGMsUUFBUSxTQUFTOWMsR0FBRyxNQUFNLFlBQVlBLEVBQUVTLE1BQU0sVUFBVVQsRUFBRVMsS0FBS1QsRUFBRThjLFFBQVEsQ0FBQyxFQUFFMEYsTUFBTSxTQUFTeGlCLEdBQUcsTUFBTSxhQUM3ZUEsRUFBRVMsS0FBS29jLEdBQUc3YyxHQUFHLFlBQVlBLEVBQUVTLE1BQU0sVUFBVVQsRUFBRVMsS0FBS1QsRUFBRThjLFFBQVEsQ0FBQyxJQUFJMkYsR0FBR3ZGLEdBQUdnRixJQUFpSVEsR0FBR3hGLEdBQTdIbFQsRUFBRSxDQUFDLEVBQUU4VSxHQUFHLENBQUNuRSxVQUFVLEVBQUVnSSxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFQyxtQkFBbUIsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsWUFBWSxFQUFFQyxVQUFVLEtBQW1JQyxHQUFHbEcsR0FBckhsVCxFQUFFLENBQUMsRUFBRTBVLEdBQUcsQ0FBQzJFLFFBQVEsRUFBRUMsY0FBYyxFQUFFQyxlQUFlLEVBQUVoRSxPQUFPLEVBQUVDLFFBQVEsRUFBRUgsUUFBUSxFQUFFQyxTQUFTLEVBQUVHLGlCQUFpQkMsTUFBMEU4RCxHQUFHdEcsR0FBM0RsVCxFQUFFLENBQUMsRUFBRWlVLEdBQUcsQ0FBQ3ZXLGFBQWEsRUFBRThZLFlBQVksRUFBRUMsY0FBYyxLQUFjZ0QsR0FBR3paLEVBQUUsQ0FBQyxFQUFFOFUsR0FBRyxDQUFDNEUsT0FBTyxTQUFTMWpCLEdBQUcsTUFBTSxXQUFXQSxFQUFFQSxFQUFFMGpCLE9BQU8sZ0JBQWdCMWpCLEdBQUdBLEVBQUUyakIsWUFBWSxDQUFDLEVBQ25mQyxPQUFPLFNBQVM1akIsR0FBRyxNQUFNLFdBQVdBLEVBQUVBLEVBQUU0akIsT0FBTyxnQkFBZ0I1akIsR0FBR0EsRUFBRTZqQixZQUFZLGVBQWU3akIsR0FBR0EsRUFBRThqQixXQUFXLENBQUMsRUFBRUMsT0FBTyxFQUFFQyxVQUFVLElBQUlDLEdBQUcvRyxHQUFHdUcsSUFBSVMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUlDLEdBQUdyZCxHQUFJLHFCQUFxQmhGLE9BQU9zaUIsR0FBRyxLQUFLdGQsR0FBSSxpQkFBaUJDLFdBQVdxZCxHQUFHcmQsU0FBU3NkLGNBQWMsSUFBSUMsR0FBR3hkLEdBQUksY0FBY2hGLFNBQVNzaUIsR0FBR0csR0FBR3pkLEtBQU1xZCxJQUFJQyxJQUFJLEVBQUVBLElBQUksSUFBSUEsSUFBSUksR0FBR3JDLE9BQU9DLGFBQWEsSUFBSXFDLElBQUcsRUFDMVcsU0FBU0MsR0FBRzFrQixFQUFFRSxHQUFHLE9BQU9GLEdBQUcsSUFBSyxRQUFRLE9BQU8sSUFBSWtrQixHQUFHNVIsUUFBUXBTLEVBQUU0YyxTQUFTLElBQUssVUFBVSxPQUFPLE1BQU01YyxFQUFFNGMsUUFBUSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssV0FBVyxPQUFNLEVBQUcsUUFBUSxPQUFNLEVBQUcsQ0FBQyxTQUFTNkgsR0FBRzNrQixHQUFjLE1BQU0saUJBQWpCQSxFQUFFQSxFQUFFNGUsU0FBa0MsU0FBUzVlLEVBQUVBLEVBQUVnRSxLQUFLLElBQUksQ0FBQyxJQUFJNGdCLElBQUcsRUFFMVFDLEdBQUcsQ0FBQ0MsT0FBTSxFQUFHQyxNQUFLLEVBQUdDLFVBQVMsRUFBRyxrQkFBaUIsRUFBR0MsT0FBTSxFQUFHQyxPQUFNLEVBQUdDLFFBQU8sRUFBR0MsVUFBUyxFQUFHQyxPQUFNLEVBQUdDLFFBQU8sRUFBR0MsS0FBSSxFQUFHOWdCLE1BQUssRUFBRytnQixNQUFLLEVBQUdDLEtBQUksRUFBR0MsTUFBSyxHQUFJLFNBQVNDLEdBQUczbEIsR0FBRyxJQUFJRSxFQUFFRixHQUFHQSxFQUFFMEwsVUFBVTFMLEVBQUUwTCxTQUFTM0QsY0FBYyxNQUFNLFVBQVU3SCxJQUFJMmtCLEdBQUc3a0IsRUFBRVMsTUFBTSxhQUFhUCxDQUFPLENBQUMsU0FBUzBsQixHQUFHNWxCLEVBQUVFLEVBQUVILEVBQUVJLEdBQUd3VSxHQUFHeFUsR0FBc0IsR0FBbkJELEVBQUUybEIsR0FBRzNsQixFQUFFLGFBQWdCL0QsU0FBUzRELEVBQUUsSUFBSTBlLEdBQUcsV0FBVyxTQUFTLEtBQUsxZSxFQUFFSSxHQUFHSCxFQUFFbEQsS0FBSyxDQUFDd0csTUFBTXZELEVBQUUrbEIsVUFBVTVsQixJQUFJLENBQUMsSUFBSTZsQixHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxHQUFHam1CLEdBQUdrbUIsR0FBR2xtQixFQUFFLEVBQUUsQ0FBQyxTQUFTbW1CLEdBQUdubUIsR0FBZSxHQUFHc00sRUFBVDhaLEdBQUdwbUIsSUFBWSxPQUFPQSxDQUFDLENBQ3BlLFNBQVNxbUIsR0FBR3JtQixFQUFFRSxHQUFHLEdBQUcsV0FBV0YsRUFBRSxPQUFPRSxDQUFDLENBQUMsSUFBSW9tQixJQUFHLEVBQUcsR0FBR3hmLEVBQUcsQ0FBQyxJQUFJeWYsR0FBRyxHQUFHemYsRUFBRyxDQUFDLElBQUkwZixHQUFHLFlBQVl6ZixTQUFTLElBQUl5ZixHQUFHLENBQUMsSUFBSUMsR0FBRzFmLFNBQVNDLGNBQWMsT0FBT3lmLEdBQUcvZCxhQUFhLFVBQVUsV0FBVzhkLEdBQUcsbUJBQW9CQyxHQUFHQyxPQUFPLENBQUNILEdBQUdDLEVBQUUsTUFBTUQsSUFBRyxFQUFHRCxHQUFHQyxNQUFNeGYsU0FBU3NkLGNBQWMsRUFBRXRkLFNBQVNzZCxhQUFhLENBQUMsU0FBU3NDLEtBQUtaLEtBQUtBLEdBQUdhLFlBQVksbUJBQW1CQyxJQUFJYixHQUFHRCxHQUFHLEtBQUssQ0FBQyxTQUFTYyxHQUFHN21CLEdBQUcsR0FBRyxVQUFVQSxFQUFFMEgsY0FBY3llLEdBQUdILElBQUksQ0FBQyxJQUFJOWxCLEVBQUUsR0FBRzBsQixHQUFHMWxCLEVBQUU4bEIsR0FBR2htQixFQUFFK1QsR0FBRy9ULElBQUlnVixHQUFHaVIsR0FBRy9sQixFQUFFLENBQUMsQ0FDL2IsU0FBUzRtQixHQUFHOW1CLEVBQUVFLEVBQUVILEdBQUcsWUFBWUMsR0FBRzJtQixLQUFVWCxHQUFHam1CLEdBQVJnbUIsR0FBRzdsQixHQUFVNm1CLFlBQVksbUJBQW1CRixLQUFLLGFBQWE3bUIsR0FBRzJtQixJQUFJLENBQUMsU0FBU0ssR0FBR2huQixHQUFHLEdBQUcsb0JBQW9CQSxHQUFHLFVBQVVBLEdBQUcsWUFBWUEsRUFBRSxPQUFPbW1CLEdBQUdILEdBQUcsQ0FBQyxTQUFTaUIsR0FBR2puQixFQUFFRSxHQUFHLEdBQUcsVUFBVUYsRUFBRSxPQUFPbW1CLEdBQUdqbUIsRUFBRSxDQUFDLFNBQVNnbkIsR0FBR2xuQixFQUFFRSxHQUFHLEdBQUcsVUFBVUYsR0FBRyxXQUFXQSxFQUFFLE9BQU9tbUIsR0FBR2ptQixFQUFFLENBQWlFLElBQUlpbkIsR0FBRyxtQkFBb0JsckIsT0FBTzRYLEdBQUc1WCxPQUFPNFgsR0FBNUcsU0FBWTdULEVBQUVFLEdBQUcsT0FBT0YsSUFBSUUsSUFBSSxJQUFJRixHQUFHLEVBQUVBLEdBQUksRUFBRUUsSUFBSUYsR0FBSUEsR0FBR0UsR0FBSUEsQ0FBQyxFQUN0VyxTQUFTa25CLEdBQUdwbkIsRUFBRUUsR0FBRyxHQUFHaW5CLEdBQUdubkIsRUFBRUUsR0FBRyxPQUFNLEVBQUcsR0FBRyxpQkFBa0JGLEdBQUcsT0FBT0EsR0FBRyxpQkFBa0JFLEdBQUcsT0FBT0EsRUFBRSxPQUFNLEVBQUcsSUFBSUgsRUFBRTlELE9BQU9DLEtBQUs4RCxHQUFHRyxFQUFFbEUsT0FBT0MsS0FBS2dFLEdBQUcsR0FBR0gsRUFBRTVELFNBQVNnRSxFQUFFaEUsT0FBTyxPQUFNLEVBQUcsSUFBSWdFLEVBQUUsRUFBRUEsRUFBRUosRUFBRTVELE9BQU9nRSxJQUFJLENBQUMsSUFBSUMsRUFBRUwsRUFBRUksR0FBRyxJQUFJOEcsRUFBRzNHLEtBQUtKLEVBQUVFLEtBQUsrbUIsR0FBR25uQixFQUFFSSxHQUFHRixFQUFFRSxJQUFJLE9BQU0sQ0FBRSxDQUFDLE9BQU0sQ0FBRSxDQUFDLFNBQVNpbkIsR0FBR3JuQixHQUFHLEtBQUtBLEdBQUdBLEVBQUU2TyxZQUFZN08sRUFBRUEsRUFBRTZPLFdBQVcsT0FBTzdPLENBQUMsQ0FDdFUsU0FBU3NuQixHQUFHdG5CLEVBQUVFLEdBQUcsSUFBd0JDLEVBQXBCSixFQUFFc25CLEdBQUdybkIsR0FBTyxJQUFKQSxFQUFFLEVBQVlELEdBQUcsQ0FBQyxHQUFHLElBQUlBLEVBQUVxUCxTQUFTLENBQTBCLEdBQXpCalAsRUFBRUgsRUFBRUQsRUFBRXNPLFlBQVlsUyxPQUFVNkQsR0FBR0UsR0FBR0MsR0FBR0QsRUFBRSxNQUFNLENBQUNxbkIsS0FBS3huQixFQUFFeW5CLE9BQU90bkIsRUFBRUYsR0FBR0EsRUFBRUcsQ0FBQyxDQUFDSCxFQUFFLENBQUMsS0FBS0QsR0FBRyxDQUFDLEdBQUdBLEVBQUUwbkIsWUFBWSxDQUFDMW5CLEVBQUVBLEVBQUUwbkIsWUFBWSxNQUFNem5CLENBQUMsQ0FBQ0QsRUFBRUEsRUFBRW9VLFVBQVUsQ0FBQ3BVLE9BQUUsQ0FBTSxDQUFDQSxFQUFFc25CLEdBQUd0bkIsRUFBRSxDQUFDLENBQUMsU0FBUzJuQixHQUFHMW5CLEVBQUVFLEdBQUcsU0FBT0YsSUFBR0UsS0FBRUYsSUFBSUUsS0FBS0YsR0FBRyxJQUFJQSxFQUFFb1AsWUFBWWxQLEdBQUcsSUFBSUEsRUFBRWtQLFNBQVNzWSxHQUFHMW5CLEVBQUVFLEVBQUVpVSxZQUFZLGFBQWFuVSxFQUFFQSxFQUFFMm5CLFNBQVN6bkIsS0FBR0YsRUFBRTRuQiw0QkFBd0QsR0FBN0I1bkIsRUFBRTRuQix3QkFBd0IxbkIsS0FBWSxDQUM5WixTQUFTMm5CLEtBQUssSUFBSSxJQUFJN25CLEVBQUU4QixPQUFPNUIsRUFBRXVNLElBQUt2TSxhQUFhRixFQUFFOG5CLG1CQUFtQixDQUFDLElBQUksSUFBSS9uQixFQUFFLGlCQUFrQkcsRUFBRTZuQixjQUFjaG1CLFNBQVNDLElBQUksQ0FBQyxNQUFNN0IsR0FBR0osR0FBRSxDQUFFLENBQUMsSUFBR0EsRUFBeUIsTUFBTUcsRUFBRXVNLEdBQS9Cek0sRUFBRUUsRUFBRTZuQixlQUFnQ2hoQixTQUFTLENBQUMsT0FBTzdHLENBQUMsQ0FBQyxTQUFTOG5CLEdBQUdob0IsR0FBRyxJQUFJRSxFQUFFRixHQUFHQSxFQUFFMEwsVUFBVTFMLEVBQUUwTCxTQUFTM0QsY0FBYyxPQUFPN0gsSUFBSSxVQUFVQSxJQUFJLFNBQVNGLEVBQUVTLE1BQU0sV0FBV1QsRUFBRVMsTUFBTSxRQUFRVCxFQUFFUyxNQUFNLFFBQVFULEVBQUVTLE1BQU0sYUFBYVQsRUFBRVMsT0FBTyxhQUFhUCxHQUFHLFNBQVNGLEVBQUVpb0IsZ0JBQWdCLENBQ3hhLFNBQVNDLEdBQUdsb0IsR0FBRyxJQUFJRSxFQUFFMm5CLEtBQUs5bkIsRUFBRUMsRUFBRW1vQixZQUFZaG9CLEVBQUVILEVBQUVvb0IsZUFBZSxHQUFHbG9CLElBQUlILEdBQUdBLEdBQUdBLEVBQUV5TixlQUFla2EsR0FBRzNuQixFQUFFeU4sY0FBYzZhLGdCQUFnQnRvQixHQUFHLENBQUMsR0FBRyxPQUFPSSxHQUFHNm5CLEdBQUdqb0IsR0FBRyxHQUFHRyxFQUFFQyxFQUFFbW9CLFdBQWMsS0FBUnRvQixFQUFFRyxFQUFFb29CLE9BQWlCdm9CLEVBQUVFLEdBQUcsbUJBQW1CSCxFQUFFQSxFQUFFeW9CLGVBQWV0b0IsRUFBRUgsRUFBRTBvQixhQUFhdm5CLEtBQUt3bkIsSUFBSTFvQixFQUFFRCxFQUFFeU0sTUFBTXJRLGFBQWEsSUFBRzZELEdBQUdFLEVBQUVILEVBQUV5TixlQUFlekcsV0FBVzdHLEVBQUV5b0IsYUFBYTdtQixRQUFTOG1CLGFBQWEsQ0FBQzVvQixFQUFFQSxFQUFFNG9CLGVBQWUsSUFBSXhvQixFQUFFTCxFQUFFc08sWUFBWWxTLE9BQU8yQyxFQUFFb0MsS0FBS3duQixJQUFJdm9CLEVBQUVtb0IsTUFBTWxvQixHQUFHRCxPQUFFLElBQVNBLEVBQUVvb0IsSUFBSXpwQixFQUFFb0MsS0FBS3duQixJQUFJdm9CLEVBQUVvb0IsSUFBSW5vQixJQUFJSixFQUFFNm9CLFFBQVEvcEIsRUFBRXFCLElBQUlDLEVBQUVELEVBQUVBLEVBQUVyQixFQUFFQSxFQUFFc0IsR0FBR0EsRUFBRWtuQixHQUFHdm5CLEVBQUVqQixHQUFHLElBQUltQixFQUFFcW5CLEdBQUd2bkIsRUFDdmZJLEdBQUdDLEdBQUdILElBQUksSUFBSUQsRUFBRThvQixZQUFZOW9CLEVBQUUrb0IsYUFBYTNvQixFQUFFbW5CLE1BQU12bkIsRUFBRWdwQixlQUFlNW9CLEVBQUVvbkIsUUFBUXhuQixFQUFFaXBCLFlBQVlocEIsRUFBRXNuQixNQUFNdm5CLEVBQUVrcEIsY0FBY2pwQixFQUFFdW5CLFdBQVV0bkIsRUFBRUEsRUFBRWlwQixlQUFnQkMsU0FBU2hwQixFQUFFbW5CLEtBQUtubkIsRUFBRW9uQixRQUFReG5CLEVBQUVxcEIsa0JBQWtCdnFCLEVBQUVxQixHQUFHSCxFQUFFc3BCLFNBQVNwcEIsR0FBR0YsRUFBRTZvQixPQUFPNW9CLEVBQUVzbkIsS0FBS3RuQixFQUFFdW5CLFVBQVV0bkIsRUFBRXFwQixPQUFPdHBCLEVBQUVzbkIsS0FBS3RuQixFQUFFdW5CLFFBQVF4bkIsRUFBRXNwQixTQUFTcHBCLElBQUksQ0FBTSxJQUFMQSxFQUFFLEdBQU9GLEVBQUVELEVBQUVDLEVBQUVBLEVBQUVtVSxZQUFZLElBQUluVSxFQUFFb1AsVUFBVWxQLEVBQUVwRCxLQUFLLENBQUMwc0IsUUFBUXhwQixFQUFFeXBCLEtBQUt6cEIsRUFBRTBwQixXQUFXQyxJQUFJM3BCLEVBQUU0cEIsWUFBbUQsSUFBdkMsbUJBQW9CN3BCLEVBQUU4cEIsT0FBTzlwQixFQUFFOHBCLFFBQVk5cEIsRUFBRSxFQUFFQSxFQUFFRyxFQUFFL0QsT0FBTzRELEtBQUlDLEVBQUVFLEVBQUVILElBQUt5cEIsUUFBUUUsV0FBVzFwQixFQUFFeXBCLEtBQUt6cEIsRUFBRXdwQixRQUFRSSxVQUFVNXBCLEVBQUUycEIsR0FBRyxDQUFDLENBQ3pmLElBQUlHLEdBQUdoakIsR0FBSSxpQkFBaUJDLFVBQVUsSUFBSUEsU0FBU3NkLGFBQWEwRixHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxJQUFHLEVBQzNGLFNBQVNDLEdBQUducUIsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFSixFQUFFK0IsU0FBUy9CLEVBQUVBLEVBQUVnSCxTQUFTLElBQUloSCxFQUFFcVAsU0FBU3JQLEVBQUVBLEVBQUV5TixjQUFjMGMsSUFBSSxNQUFNSCxJQUFJQSxLQUFLdGQsRUFBR3RNLEtBQXNDQSxFQUE1QixtQkFBTEEsRUFBRTRwQixLQUF5Qi9CLEdBQUc3bkIsR0FBSyxDQUFDbW9CLE1BQU1ub0IsRUFBRXFvQixlQUFlRCxJQUFJcG9CLEVBQUVzb0IsY0FBeUYsQ0FBQ00sWUFBM0U1b0IsR0FBR0EsRUFBRXFOLGVBQWVyTixFQUFFcU4sY0FBY21iLGFBQWE3bUIsUUFBUThtQixnQkFBK0JHLFdBQVdDLGFBQWE3b0IsRUFBRTZvQixhQUFhQyxVQUFVOW9CLEVBQUU4b0IsVUFBVUMsWUFBWS9vQixFQUFFK29CLGFBQWNlLElBQUk3QyxHQUFHNkMsR0FBRzlwQixLQUFLOHBCLEdBQUc5cEIsRUFBc0IsR0FBcEJBLEVBQUUwbEIsR0FBR21FLEdBQUcsYUFBZ0I3dEIsU0FBUytELEVBQUUsSUFBSXVlLEdBQUcsV0FBVyxTQUFTLEtBQUt2ZSxFQUFFSCxHQUFHQyxFQUFFbEQsS0FBSyxDQUFDd0csTUFBTXBELEVBQUU0bEIsVUFBVTNsQixJQUFJRCxFQUFFOFQsT0FBTytWLEtBQUssQ0FDdGYsU0FBU0ssR0FBR3BxQixFQUFFRSxHQUFHLElBQUlILEVBQUUsQ0FBQyxFQUFpRixPQUEvRUEsRUFBRUMsRUFBRStILGVBQWU3SCxFQUFFNkgsY0FBY2hJLEVBQUUsU0FBU0MsR0FBRyxTQUFTRSxFQUFFSCxFQUFFLE1BQU1DLEdBQUcsTUFBTUUsRUFBU0gsQ0FBQyxDQUFDLElBQUlzcUIsR0FBRyxDQUFDQyxhQUFhRixHQUFHLFlBQVksZ0JBQWdCRyxtQkFBbUJILEdBQUcsWUFBWSxzQkFBc0JJLGVBQWVKLEdBQUcsWUFBWSxrQkFBa0JLLGNBQWNMLEdBQUcsYUFBYSxrQkFBa0JNLEdBQUcsQ0FBQyxFQUFFQyxHQUFHLENBQUMsRUFDcEYsU0FBU0MsR0FBRzVxQixHQUFHLEdBQUcwcUIsR0FBRzFxQixHQUFHLE9BQU8wcUIsR0FBRzFxQixHQUFHLElBQUlxcUIsR0FBR3JxQixHQUFHLE9BQU9BLEVBQUUsSUFBWUQsRUFBUkcsRUFBRW1xQixHQUFHcnFCLEdBQUssSUFBSUQsS0FBS0csRUFBRSxHQUFHQSxFQUFFYixlQUFlVSxJQUFJQSxLQUFLNHFCLEdBQUcsT0FBT0QsR0FBRzFxQixHQUFHRSxFQUFFSCxHQUFHLE9BQU9DLENBQUMsQ0FBL1g4RyxJQUFLNmpCLEdBQUc1akIsU0FBU0MsY0FBYyxPQUFPcUwsTUFBTSxtQkFBbUJ2USxnQkFBZ0J1b0IsR0FBR0MsYUFBYU8saUJBQWlCUixHQUFHRSxtQkFBbUJNLGlCQUFpQlIsR0FBR0csZUFBZUssV0FBVyxvQkFBb0Ivb0IsZUFBZXVvQixHQUFHSSxjQUFjdk8sWUFBd0osSUFBSTRPLEdBQUdGLEdBQUcsZ0JBQWdCRyxHQUFHSCxHQUFHLHNCQUFzQkksR0FBR0osR0FBRyxrQkFBa0JLLEdBQUdMLEdBQUcsaUJBQWlCTSxHQUFHLElBQUk3USxJQUFJOFEsR0FBRyxzbUJBQXNtQnJqQixNQUFNLEtBQy9sQyxTQUFTc2pCLEdBQUdwckIsRUFBRUUsR0FBR2dyQixHQUFHeGdCLElBQUkxSyxFQUFFRSxHQUFHeUcsRUFBR3pHLEVBQUUsQ0FBQ0YsR0FBRyxDQUFDLElBQUksSUFBSXFyQixHQUFHLEVBQUVBLEdBQUdGLEdBQUdodkIsT0FBT2t2QixLQUFLLENBQUMsSUFBSUMsR0FBR0gsR0FBR0UsSUFBMkRELEdBQXBERSxHQUFHdmpCLGNBQXVELE1BQXRDdWpCLEdBQUcsR0FBR3BqQixjQUFjb2pCLEdBQUdqcUIsTUFBTSxJQUFpQixDQUFDK3BCLEdBQUdOLEdBQUcsa0JBQWtCTSxHQUFHTCxHQUFHLHdCQUF3QkssR0FBR0osR0FBRyxvQkFBb0JJLEdBQUcsV0FBVyxpQkFBaUJBLEdBQUcsVUFBVSxXQUFXQSxHQUFHLFdBQVcsVUFBVUEsR0FBR0gsR0FBRyxtQkFBbUJya0IsRUFBRyxlQUFlLENBQUMsV0FBVyxjQUFjQSxFQUFHLGVBQWUsQ0FBQyxXQUFXLGNBQWNBLEVBQUcsaUJBQWlCLENBQUMsYUFBYSxnQkFDN2NBLEVBQUcsaUJBQWlCLENBQUMsYUFBYSxnQkFBZ0JELEVBQUcsV0FBVyxvRUFBb0VtQixNQUFNLE1BQU1uQixFQUFHLFdBQVcsdUZBQXVGbUIsTUFBTSxNQUFNbkIsRUFBRyxnQkFBZ0IsQ0FBQyxpQkFBaUIsV0FBVyxZQUFZLFVBQVVBLEVBQUcsbUJBQW1CLDJEQUEyRG1CLE1BQU0sTUFBTW5CLEVBQUcscUJBQXFCLDZEQUE2RG1CLE1BQU0sTUFDL2ZuQixFQUFHLHNCQUFzQiw4REFBOERtQixNQUFNLE1BQU0sSUFBSXlqQixHQUFHLDZOQUE2TnpqQixNQUFNLEtBQUswakIsR0FBRyxJQUFJL2tCLElBQUksMENBQTBDcUIsTUFBTSxLQUFLMmpCLE9BQU9GLEtBQ3paLFNBQVNHLEdBQUcxckIsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFSCxFQUFFUyxNQUFNLGdCQUFnQlQsRUFBRXFkLGNBQWN0ZCxFQWxEakUsU0FBWUMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsRUFBRXRCLEVBQUVtQixFQUFFSSxFQUFFdEIsR0FBNEIsR0FBekI4VyxHQUFHM1ksTUFBTUMsS0FBS21KLFdBQWNrUCxHQUFHLENBQUMsSUFBR0EsR0FBZ0MsTUFBTWpZLE1BQU1rQyxFQUFFLE1BQTFDLElBQUlQLEVBQUV1VyxHQUFHRCxJQUFHLEVBQUdDLEdBQUcsS0FBOEJDLEtBQUtBLElBQUcsRUFBR0MsR0FBR3pXLEVBQUUsQ0FBQyxDQWtEcEV5c0IsQ0FBR3hyQixFQUFFRCxPQUFFLEVBQU9GLEdBQUdBLEVBQUVxZCxjQUFjLElBQUksQ0FDeEcsU0FBUzZJLEdBQUdsbUIsRUFBRUUsR0FBR0EsS0FBUyxFQUFGQSxHQUFLLElBQUksSUFBSUgsRUFBRSxFQUFFQSxFQUFFQyxFQUFFN0QsT0FBTzRELElBQUksQ0FBQyxJQUFJSSxFQUFFSCxFQUFFRCxHQUFHSyxFQUFFRCxFQUFFbUQsTUFBTW5ELEVBQUVBLEVBQUUybEIsVUFBVTlsQixFQUFFLENBQUMsSUFBSWxCLE9BQUUsRUFBTyxHQUFHb0IsRUFBRSxJQUFJLElBQUlELEVBQUVFLEVBQUVoRSxPQUFPLEVBQUUsR0FBRzhELEVBQUVBLElBQUksQ0FBQyxJQUFJSSxFQUFFRixFQUFFRixHQUFHbEIsRUFBRXNCLEVBQUV1ckIsU0FBUzFzQixFQUFFbUIsRUFBRWdkLGNBQTJCLEdBQWJoZCxFQUFFQSxFQUFFd3JCLFNBQVk5c0IsSUFBSUQsR0FBR3NCLEVBQUVxZCx1QkFBdUIsTUFBTXpkLEVBQUUwckIsR0FBR3RyQixFQUFFQyxFQUFFbkIsR0FBR0osRUFBRUMsQ0FBQyxNQUFNLElBQUlrQixFQUFFLEVBQUVBLEVBQUVFLEVBQUVoRSxPQUFPOEQsSUFBSSxDQUFvRCxHQUE1Q2xCLEdBQVBzQixFQUFFRixFQUFFRixJQUFPMnJCLFNBQVMxc0IsRUFBRW1CLEVBQUVnZCxjQUFjaGQsRUFBRUEsRUFBRXdyQixTQUFZOXNCLElBQUlELEdBQUdzQixFQUFFcWQsdUJBQXVCLE1BQU16ZCxFQUFFMHJCLEdBQUd0ckIsRUFBRUMsRUFBRW5CLEdBQUdKLEVBQUVDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRzJXLEdBQUcsTUFBTTFWLEVBQUUyVixHQUFHRCxJQUFHLEVBQUdDLEdBQUcsS0FBSzNWLENBQUUsQ0FDNWEsU0FBUzhyQixHQUFFOXJCLEVBQUVFLEdBQUcsSUFBSUgsRUFBRUcsRUFBRTZyQixTQUFJLElBQVNoc0IsSUFBSUEsRUFBRUcsRUFBRTZyQixJQUFJLElBQUl0bEIsS0FBSyxJQUFJdEcsRUFBRUgsRUFBRSxXQUFXRCxFQUFFaXNCLElBQUk3ckIsS0FBSzhyQixHQUFHL3JCLEVBQUVGLEVBQUUsR0FBRSxHQUFJRCxFQUFFOEcsSUFBSTFHLEdBQUcsQ0FBQyxTQUFTK3JCLEdBQUdsc0IsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFLEVBQUVELElBQUlDLEdBQUcsR0FBRzhyQixHQUFHbHNCLEVBQUVDLEVBQUVHLEVBQUVELEVBQUUsQ0FBQyxJQUFJaXNCLEdBQUcsa0JBQWtCanJCLEtBQUtDLFNBQVNDLFNBQVMsSUFBSUMsTUFBTSxHQUFHLFNBQVMrcUIsR0FBR3BzQixHQUFHLElBQUlBLEVBQUVtc0IsSUFBSSxDQUFDbnNCLEVBQUVtc0IsS0FBSSxFQUFHM2xCLEVBQUcvSSxRQUFRLFNBQVN5QyxHQUFHLG9CQUFvQkEsSUFBSXNyQixHQUFHUSxJQUFJOXJCLElBQUlnc0IsR0FBR2hzQixHQUFFLEVBQUdGLEdBQUdrc0IsR0FBR2hzQixHQUFFLEVBQUdGLEdBQUcsR0FBRyxJQUFJRSxFQUFFLElBQUlGLEVBQUVvUCxTQUFTcFAsRUFBRUEsRUFBRXdOLGNBQWMsT0FBT3ROLEdBQUdBLEVBQUVpc0IsTUFBTWpzQixFQUFFaXNCLEtBQUksRUFBR0QsR0FBRyxtQkFBa0IsRUFBR2hzQixHQUFHLENBQUMsQ0FDamIsU0FBUytyQixHQUFHanNCLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsT0FBT3FjLEdBQUd0YyxJQUFJLEtBQUssRUFBRSxJQUFJRSxFQUFFNmIsR0FBRyxNQUFNLEtBQUssRUFBRTdiLEVBQUVnYyxHQUFHLE1BQU0sUUFBUWhjLEVBQUUrYixHQUFHcGMsRUFBRUssRUFBRWlzQixLQUFLLEtBQUtuc0IsRUFBRUgsRUFBRUMsR0FBR0ksT0FBRSxHQUFROFUsSUFBSSxlQUFlaFYsR0FBRyxjQUFjQSxHQUFHLFVBQVVBLElBQUlFLEdBQUUsR0FBSUQsT0FBRSxJQUFTQyxFQUFFSixFQUFFb1YsaUJBQWlCbFYsRUFBRUgsRUFBRSxDQUFDdXNCLFNBQVEsRUFBR0MsUUFBUW5zQixJQUFJSixFQUFFb1YsaUJBQWlCbFYsRUFBRUgsR0FBRSxRQUFJLElBQVNLLEVBQUVKLEVBQUVvVixpQkFBaUJsVixFQUFFSCxFQUFFLENBQUN3c0IsUUFBUW5zQixJQUFJSixFQUFFb1YsaUJBQWlCbFYsRUFBRUgsR0FBRSxFQUFHLENBQ2xWLFNBQVNzYyxHQUFHcmMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsR0FBRyxJQUFJdEIsRUFBRXFCLEVBQUUsS0FBVSxFQUFGRCxHQUFhLEVBQUZBLEdBQU0sT0FBT0MsR0FBRUgsRUFBRSxPQUFPLENBQUMsR0FBRyxPQUFPRyxFQUFFLE9BQU8sSUFBSUYsRUFBRUUsRUFBRThLLElBQUksR0FBRyxJQUFJaEwsR0FBRyxJQUFJQSxFQUFFLENBQUMsSUFBSUksRUFBRUYsRUFBRXNVLFVBQVU2RyxjQUFjLEdBQUdqYixJQUFJRCxHQUFHLElBQUlDLEVBQUUrTyxVQUFVL08sRUFBRThULGFBQWEvVCxFQUFFLE1BQU0sR0FBRyxJQUFJSCxFQUFFLElBQUlBLEVBQUVFLEVBQUU2VixPQUFPLE9BQU8vVixHQUFHLENBQUMsSUFBSWxCLEVBQUVrQixFQUFFZ0wsSUFBSSxJQUFHLElBQUlsTSxHQUFHLElBQUlBLE1BQUtBLEVBQUVrQixFQUFFd1UsVUFBVTZHLGlCQUFrQmxiLEdBQUcsSUFBSXJCLEVBQUVxUSxVQUFVclEsRUFBRW9WLGFBQWEvVCxHQUFFLE9BQU9ILEVBQUVBLEVBQUUrVixNQUFNLENBQUMsS0FBSyxPQUFPM1YsR0FBRyxDQUFTLEdBQUcsUUFBWEosRUFBRWtiLEdBQUc5YSxJQUFlLE9BQWUsR0FBRyxLQUFYdEIsRUFBRWtCLEVBQUVnTCxNQUFjLElBQUlsTSxFQUFFLENBQUNvQixFQUFFckIsRUFBRW1CLEVBQUUsU0FBU0QsQ0FBQyxDQUFDSyxFQUFFQSxFQUFFOFQsVUFBVSxDQUFDLENBQUNoVSxFQUFFQSxFQUFFNlYsTUFBTSxDQUFDaEIsR0FBRyxXQUFXLElBQUk3VSxFQUFFckIsRUFBRXNCLEVBQUUyVCxHQUFHaFUsR0FBR0UsRUFBRSxHQUNwZkQsRUFBRSxDQUFDLElBQUlLLEVBQUU2cUIsR0FBR25mLElBQUkvTCxHQUFHLFFBQUcsSUFBU0ssRUFBRSxDQUFDLElBQUl0QixFQUFFMGYsR0FBR25mLEVBQUVVLEVBQUUsT0FBT0EsR0FBRyxJQUFLLFdBQVcsR0FBRyxJQUFJNmMsR0FBRzljLEdBQUcsTUFBTUMsRUFBRSxJQUFLLFVBQVUsSUFBSyxRQUFRakIsRUFBRTBqQixHQUFHLE1BQU0sSUFBSyxVQUFVbmpCLEVBQUUsUUFBUVAsRUFBRXNoQixHQUFHLE1BQU0sSUFBSyxXQUFXL2dCLEVBQUUsT0FBT1AsRUFBRXNoQixHQUFHLE1BQU0sSUFBSyxhQUFhLElBQUssWUFBWXRoQixFQUFFc2hCLEdBQUcsTUFBTSxJQUFLLFFBQVEsR0FBRyxJQUFJdGdCLEVBQUU0ZixPQUFPLE1BQU0zZixFQUFFLElBQUssV0FBVyxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssWUFBWSxJQUFLLFVBQVUsSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLGNBQWNqQixFQUFFbWhCLEdBQUcsTUFBTSxJQUFLLE9BQU8sSUFBSyxVQUFVLElBQUssWUFBWSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxPQUFPbmhCLEVBQzFpQm9oQixHQUFHLE1BQU0sSUFBSyxjQUFjLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxhQUFhcGhCLEVBQUVxa0IsR0FBRyxNQUFNLEtBQUswSCxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBR2pzQixFQUFFdWhCLEdBQUcsTUFBTSxLQUFLMkssR0FBR2xzQixFQUFFeWtCLEdBQUcsTUFBTSxJQUFLLFNBQVN6a0IsRUFBRThmLEdBQUcsTUFBTSxJQUFLLFFBQVE5ZixFQUFFa2xCLEdBQUcsTUFBTSxJQUFLLE9BQU8sSUFBSyxNQUFNLElBQUssUUFBUWxsQixFQUFFNmhCLEdBQUcsTUFBTSxJQUFLLG9CQUFvQixJQUFLLHFCQUFxQixJQUFLLGdCQUFnQixJQUFLLGNBQWMsSUFBSyxjQUFjLElBQUssYUFBYSxJQUFLLGNBQWMsSUFBSyxZQUFZN2hCLEVBQUUyakIsR0FBRyxJQUFJOEosS0FBUyxFQUFGdHNCLEdBQUt1c0IsR0FBR0QsR0FBRyxXQUFXeHNCLEVBQUUwc0IsRUFBRUYsRUFBRSxPQUFPbnNCLEVBQUVBLEVBQUUsVUFBVSxLQUFLQSxFQUFFbXNCLEVBQUUsR0FBRyxJQUFJLElBQVFHLEVBQUozdkIsRUFBRW1ELEVBQUksT0FDL2VuRCxHQUFHLENBQUssSUFBSTR2QixHQUFSRCxFQUFFM3ZCLEdBQVV5WCxVQUFzRixHQUE1RSxJQUFJa1ksRUFBRTFoQixLQUFLLE9BQU8yaEIsSUFBSUQsRUFBRUMsRUFBRSxPQUFPRixHQUFjLE9BQVZFLEVBQUUzWCxHQUFHalksRUFBRTB2QixLQUFZRixFQUFFMXZCLEtBQUsrdkIsR0FBRzd2QixFQUFFNHZCLEVBQUVELEtBQVNGLEVBQUUsTUFBTXp2QixFQUFFQSxFQUFFZ1osTUFBTSxDQUFDLEVBQUV3VyxFQUFFcndCLFNBQVNrRSxFQUFFLElBQUl0QixFQUFFc0IsRUFBRWYsRUFBRSxLQUFLUyxFQUFFSyxHQUFHSCxFQUFFbkQsS0FBSyxDQUFDd0csTUFBTWpELEVBQUV5bEIsVUFBVTBHLElBQUksQ0FBQyxDQUFDLEtBQVUsRUFBRnRzQixHQUFLLENBQTRFLEdBQW5DbkIsRUFBRSxhQUFhaUIsR0FBRyxlQUFlQSxLQUF0RUssRUFBRSxjQUFjTCxHQUFHLGdCQUFnQkEsSUFBMkNELElBQUkrVCxNQUFLeFUsRUFBRVMsRUFBRThmLGVBQWU5ZixFQUFFK2YsZUFBZTNFLEdBQUc3YixLQUFJQSxFQUFFd3RCLE9BQWdCL3RCLEdBQUdzQixLQUFHQSxFQUFFRCxFQUFFMEIsU0FBUzFCLEVBQUVBLEdBQUdDLEVBQUVELEVBQUVvTixlQUFlbk4sRUFBRXNvQixhQUFhdG9CLEVBQUUwc0IsYUFBYWpyQixPQUFVL0MsR0FBcUNBLEVBQUVvQixFQUFpQixRQUFmYixHQUFuQ0EsRUFBRVMsRUFBRThmLGVBQWU5ZixFQUFFZ2dCLFdBQWtCNUUsR0FBRzdiLEdBQUcsUUFDOWRBLEtBQVJtdEIsRUFBRTNXLEdBQUd4VyxLQUFVLElBQUlBLEVBQUUyTCxLQUFLLElBQUkzTCxFQUFFMkwsT0FBSzNMLEVBQUUsUUFBVVAsRUFBRSxLQUFLTyxFQUFFYSxHQUFLcEIsSUFBSU8sR0FBRSxDQUFnVSxHQUEvVGt0QixFQUFFdE0sR0FBRzBNLEVBQUUsZUFBZUYsRUFBRSxlQUFlMXZCLEVBQUUsUUFBVyxlQUFlZ0QsR0FBRyxnQkFBZ0JBLElBQUV3c0IsRUFBRTlKLEdBQUdrSyxFQUFFLGlCQUFpQkYsRUFBRSxpQkFBaUIxdkIsRUFBRSxXQUFVeXZCLEVBQUUsTUFBTTF0QixFQUFFc0IsRUFBRStsQixHQUFHcm5CLEdBQUc0dEIsRUFBRSxNQUFNcnRCLEVBQUVlLEVBQUUrbEIsR0FBRzltQixJQUFHZSxFQUFFLElBQUltc0IsRUFBRUksRUFBRTV2QixFQUFFLFFBQVErQixFQUFFZ0IsRUFBRUssSUFBSzRULE9BQU95WSxFQUFFcHNCLEVBQUV3ZixjQUFjOE0sRUFBRUMsRUFBRSxLQUFLelIsR0FBRy9hLEtBQUtELEtBQUlxc0IsRUFBRSxJQUFJQSxFQUFFRSxFQUFFMXZCLEVBQUUsUUFBUXNDLEVBQUVTLEVBQUVLLElBQUs0VCxPQUFPMlksRUFBRUgsRUFBRTNNLGNBQWM0TSxFQUFFRyxFQUFFSixHQUFHQyxFQUFFRyxFQUFLN3RCLEdBQUdPLEVBQUVZLEVBQUUsQ0FBYSxJQUFSd3NCLEVBQUVwdEIsRUFBRXRDLEVBQUUsRUFBTTJ2QixFQUFoQkgsRUFBRXp0QixFQUFrQjR0QixFQUFFQSxFQUFFSyxHQUFHTCxHQUFHM3ZCLElBQVEsSUFBSjJ2QixFQUFFLEVBQU1DLEVBQUVGLEVBQUVFLEVBQUVBLEVBQUVJLEdBQUdKLEdBQUdELElBQUksS0FBSyxFQUFFM3ZCLEVBQUUydkIsR0FBR0gsRUFBRVEsR0FBR1IsR0FBR3h2QixJQUFJLEtBQUssRUFBRTJ2QixFQUFFM3ZCLEdBQUcwdkIsRUFDcGZNLEdBQUdOLEdBQUdDLElBQUksS0FBSzN2QixLQUFLLENBQUMsR0FBR3d2QixJQUFJRSxHQUFHLE9BQU9BLEdBQUdGLElBQUlFLEVBQUUzVyxVQUFVLE1BQU03VixFQUFFc3NCLEVBQUVRLEdBQUdSLEdBQUdFLEVBQUVNLEdBQUdOLEVBQUUsQ0FBQ0YsRUFBRSxJQUFJLE1BQU1BLEVBQUUsS0FBSyxPQUFPenRCLEdBQUdrdUIsR0FBR2h0QixFQUFFSSxFQUFFdEIsRUFBRXl0QixHQUFFLEdBQUksT0FBT2x0QixHQUFHLE9BQU9tdEIsR0FBR1EsR0FBR2h0QixFQUFFd3NCLEVBQUVudEIsRUFBRWt0QixHQUFFLEVBQUcsQ0FBOEQsR0FBRyxZQUExQ3p0QixHQUFqQnNCLEVBQUVGLEVBQUVpbUIsR0FBR2ptQixHQUFHMkIsUUFBVzRKLFVBQVVyTCxFQUFFcUwsU0FBUzNELGdCQUErQixVQUFVaEosR0FBRyxTQUFTc0IsRUFBRUksS0FBSyxJQUFJeXNCLEVBQUc3RyxRQUFRLEdBQUdWLEdBQUd0bEIsR0FBRyxHQUFHaW1CLEdBQUc0RyxFQUFHaEcsT0FBTyxDQUFDZ0csRUFBR2xHLEdBQUcsSUFBSW1HLEVBQUdyRyxFQUFFLE1BQU0vbkIsRUFBRXNCLEVBQUVxTCxXQUFXLFVBQVUzTSxFQUFFZ0osZ0JBQWdCLGFBQWExSCxFQUFFSSxNQUFNLFVBQVVKLEVBQUVJLFFBQVF5c0IsRUFBR2pHLElBQ3JWLE9BRDRWaUcsSUFBS0EsRUFBR0EsRUFBR2x0QixFQUFFRyxJQUFLeWxCLEdBQUczbEIsRUFBRWl0QixFQUFHbnRCLEVBQUVLLElBQVcrc0IsR0FBSUEsRUFBR250QixFQUFFSyxFQUFFRixHQUFHLGFBQWFILElBQUltdEIsRUFBRzlzQixFQUFFME0sZ0JBQ2xmb2dCLEVBQUdoZ0IsWUFBWSxXQUFXOU0sRUFBRUksTUFBTTZNLEdBQUdqTixFQUFFLFNBQVNBLEVBQUVtTSxRQUFPMmdCLEVBQUdodEIsRUFBRWltQixHQUFHam1CLEdBQUcyQixPQUFjOUIsR0FBRyxJQUFLLFdBQWEybEIsR0FBR3dILElBQUssU0FBU0EsRUFBR2xGLG1CQUFnQjhCLEdBQUdvRCxFQUFHbkQsR0FBRzdwQixFQUFFOHBCLEdBQUcsTUFBSyxNQUFNLElBQUssV0FBV0EsR0FBR0QsR0FBR0QsR0FBRyxLQUFLLE1BQU0sSUFBSyxZQUFZRyxJQUFHLEVBQUcsTUFBTSxJQUFLLGNBQWMsSUFBSyxVQUFVLElBQUssVUFBVUEsSUFBRyxFQUFHQyxHQUFHbHFCLEVBQUVGLEVBQUVLLEdBQUcsTUFBTSxJQUFLLGtCQUFrQixHQUFHMHBCLEdBQUcsTUFBTSxJQUFLLFVBQVUsSUFBSyxRQUFRSyxHQUFHbHFCLEVBQUVGLEVBQUVLLEdBQUcsSUFBSWd0QixFQUFHLEdBQUdqSixHQUFHamtCLEVBQUUsQ0FBQyxPQUFPRixHQUFHLElBQUssbUJBQW1CLElBQUlxdEIsRUFBRyxxQkFBcUIsTUFBTW50QixFQUFFLElBQUssaUJBQWlCbXRCLEVBQUcsbUJBQ3BlLE1BQU1udEIsRUFBRSxJQUFLLG9CQUFvQm10QixFQUFHLHNCQUFzQixNQUFNbnRCLEVBQUVtdEIsT0FBRyxDQUFNLE1BQU16SSxHQUFHRixHQUFHMWtCLEVBQUVELEtBQUtzdEIsRUFBRyxvQkFBb0IsWUFBWXJ0QixHQUFHLE1BQU1ELEVBQUUrYyxVQUFVdVEsRUFBRyxzQkFBc0JBLElBQUs5SSxJQUFJLE9BQU94a0IsRUFBRXdpQixTQUFTcUMsSUFBSSx1QkFBdUJ5SSxFQUFHLHFCQUFxQkEsR0FBSXpJLEtBQUt3SSxFQUFHeFEsT0FBWUYsR0FBRyxVQUFSRCxHQUFHcmMsR0FBa0JxYyxHQUFHalEsTUFBTWlRLEdBQUdwTyxZQUFZdVcsSUFBRyxJQUFpQixHQUFadUksRUFBR3RILEdBQUcxbEIsRUFBRWt0QixJQUFTbHhCLFNBQVNreEIsRUFBRyxJQUFJeE0sR0FBR3dNLEVBQUdydEIsRUFBRSxLQUFLRCxFQUFFSyxHQUFHSCxFQUFFbkQsS0FBSyxDQUFDd0csTUFBTStwQixFQUFHdkgsVUFBVXFILEtBQUtDLEdBQXdCLFFBQVRBLEVBQUd6SSxHQUFHNWtCLE9BQWxCc3RCLEVBQUdycEIsS0FBS29wQixNQUEyQ0EsRUFBRzlJLEdBNUJoTSxTQUFZdGtCLEVBQUVFLEdBQUcsT0FBT0YsR0FBRyxJQUFLLGlCQUFpQixPQUFPMmtCLEdBQUd6a0IsR0FBRyxJQUFLLFdBQVcsT0FBRyxLQUFLQSxFQUFFc2lCLE1BQWEsTUFBS2lDLElBQUcsRUFBVUQsSUFBRyxJQUFLLFlBQVksT0FBT3hrQixFQUFFRSxFQUFFOEQsUUFBU3dnQixJQUFJQyxHQUFHLEtBQUt6a0IsRUFBRSxRQUFRLE9BQU8sS0FBSyxDQTRCRXN0QixDQUFHdHRCLEVBQUVELEdBM0J6ZCxTQUFZQyxFQUFFRSxHQUFHLEdBQUcwa0IsR0FBRyxNQUFNLG1CQUFtQjVrQixJQUFJbWtCLElBQUlPLEdBQUcxa0IsRUFBRUUsSUFBSUYsRUFBRTRjLEtBQUtELEdBQUdELEdBQUdELEdBQUcsS0FBS21JLElBQUcsRUFBRzVrQixHQUFHLEtBQUssT0FBT0EsR0FBRyxJQUFLLFFBQWdRLFFBQVEsT0FBTyxLQUEzUCxJQUFLLFdBQVcsS0FBS0UsRUFBRW1mLFNBQVNuZixFQUFFcWYsUUFBUXJmLEVBQUVzZixVQUFVdGYsRUFBRW1mLFNBQVNuZixFQUFFcWYsT0FBTyxDQUFDLEdBQUdyZixFQUFFcXRCLE1BQU0sRUFBRXJ0QixFQUFFcXRCLEtBQUtweEIsT0FBTyxPQUFPK0QsRUFBRXF0QixLQUFLLEdBQUdydEIsRUFBRXNpQixNQUFNLE9BQU9MLE9BQU9DLGFBQWFsaUIsRUFBRXNpQixNQUFNLENBQUMsT0FBTyxLQUFLLElBQUssaUJBQWlCLE9BQU8rQixJQUFJLE9BQU9ya0IsRUFBRXFpQixPQUFPLEtBQUtyaUIsRUFBRThELEtBQXlCLENBMkJxRndwQixDQUFHeHRCLEVBQUVELEtBQ2plLEdBRG9lSSxFQUFFMGxCLEdBQUcxbEIsRUFBRSxrQkFDdmVoRSxTQUFTaUUsRUFBRSxJQUFJeWdCLEdBQUcsZ0JBQWdCLGNBQWMsS0FBSzlnQixFQUFFSyxHQUFHSCxFQUFFbkQsS0FBSyxDQUFDd0csTUFBTWxELEVBQUUwbEIsVUFBVTNsQixJQUFJQyxFQUFFNEQsS0FBS29wQixFQUFHLENBQUNsSCxHQUFHam1CLEVBQUVDLEVBQUUsRUFBRSxDQUFDLFNBQVMyc0IsR0FBRzdzQixFQUFFRSxFQUFFSCxHQUFHLE1BQU0sQ0FBQzZyQixTQUFTNXJCLEVBQUU2ckIsU0FBUzNyQixFQUFFbWQsY0FBY3RkLEVBQUUsQ0FBQyxTQUFTOGxCLEdBQUc3bEIsRUFBRUUsR0FBRyxJQUFJLElBQUlILEVBQUVHLEVBQUUsVUFBVUMsRUFBRSxHQUFHLE9BQU9ILEdBQUcsQ0FBQyxJQUFJSSxFQUFFSixFQUFFbEIsRUFBRXNCLEVBQUVxVSxVQUFVLElBQUlyVSxFQUFFNkssS0FBSyxPQUFPbk0sSUFBSXNCLEVBQUV0QixFQUFZLE9BQVZBLEVBQUVtVyxHQUFHalYsRUFBRUQsS0FBWUksRUFBRXN0QixRQUFRWixHQUFHN3NCLEVBQUVsQixFQUFFc0IsSUFBYyxPQUFWdEIsRUFBRW1XLEdBQUdqVixFQUFFRSxLQUFZQyxFQUFFckQsS0FBSyt2QixHQUFHN3NCLEVBQUVsQixFQUFFc0IsS0FBS0osRUFBRUEsRUFBRWdXLE1BQU0sQ0FBQyxPQUFPN1YsQ0FBQyxDQUFDLFNBQVM2c0IsR0FBR2h0QixHQUFHLEdBQUcsT0FBT0EsRUFBRSxPQUFPLEtBQUssR0FBR0EsRUFBRUEsRUFBRWdXLGFBQWFoVyxHQUFHLElBQUlBLEVBQUVpTCxLQUFLLE9BQU9qTCxHQUFJLElBQUksQ0FDbmQsU0FBU2l0QixHQUFHanRCLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUcsSUFBSSxJQUFJdEIsRUFBRW9CLEVBQUVpZCxXQUFXbGQsRUFBRSxHQUFHLE9BQU9GLEdBQUdBLElBQUlJLEdBQUcsQ0FBQyxJQUFJRSxFQUFFTixFQUFFaEIsRUFBRXNCLEVBQUUwVixVQUFVN1csRUFBRW1CLEVBQUVvVSxVQUFVLEdBQUcsT0FBTzFWLEdBQUdBLElBQUlvQixFQUFFLE1BQU0sSUFBSUUsRUFBRTRLLEtBQUssT0FBTy9MLElBQUltQixFQUFFbkIsRUFBRWtCLEVBQWEsT0FBVnJCLEVBQUVrVyxHQUFHbFYsRUFBRWpCLEtBQVltQixFQUFFd3RCLFFBQVFaLEdBQUc5c0IsRUFBRWhCLEVBQUVzQixJQUFLRCxHQUFjLE9BQVZyQixFQUFFa1csR0FBR2xWLEVBQUVqQixLQUFZbUIsRUFBRW5ELEtBQUsrdkIsR0FBRzlzQixFQUFFaEIsRUFBRXNCLEtBQU1OLEVBQUVBLEVBQUVpVyxNQUFNLENBQUMsSUFBSS9WLEVBQUU5RCxRQUFRNkQsRUFBRWxELEtBQUssQ0FBQ3dHLE1BQU1wRCxFQUFFNGxCLFVBQVU3bEIsR0FBRyxDQUFDLElBQUl5dEIsR0FBRyxTQUFTQyxHQUFHLGlCQUFpQixTQUFTQyxHQUFHNXRCLEdBQUcsT0FBTyxpQkFBa0JBLEVBQUVBLEVBQUUsR0FBR0EsR0FBRzRJLFFBQVE4a0IsR0FBRyxNQUFNOWtCLFFBQVEra0IsR0FBRyxHQUFHLENBQUMsU0FBU0UsR0FBRzd0QixFQUFFRSxFQUFFSCxHQUFXLEdBQVJHLEVBQUUwdEIsR0FBRzF0QixHQUFNMHRCLEdBQUc1dEIsS0FBS0UsR0FBR0gsRUFBRSxNQUFNeEMsTUFBTWtDLEVBQUUsS0FBTSxDQUFDLFNBQVNxdUIsS0FBSyxDQUM5ZSxJQUFJQyxHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxHQUFHanVCLEVBQUVFLEdBQUcsTUFBTSxhQUFhRixHQUFHLGFBQWFBLEdBQUcsaUJBQWtCRSxFQUFFK04sVUFBVSxpQkFBa0IvTixFQUFFK04sVUFBVSxpQkFBa0IvTixFQUFFOE4seUJBQXlCLE9BQU85TixFQUFFOE4seUJBQXlCLE1BQU05TixFQUFFOE4sd0JBQXdCa2dCLE1BQU0sQ0FDNVAsSUFBSUMsR0FBRyxtQkFBb0JDLFdBQVdBLGdCQUFXLEVBQU9DLEdBQUcsbUJBQW9CQyxhQUFhQSxrQkFBYSxFQUFPQyxHQUFHLG1CQUFvQjd4QixRQUFRQSxhQUFRLEVBQU84eEIsR0FBRyxtQkFBb0JDLGVBQWVBLG9CQUFlLElBQXFCRixHQUFHLFNBQVN2dUIsR0FBRyxPQUFPdXVCLEdBQUc1eEIsUUFBUSxNQUFNdUosS0FBS2xHLEdBQUdtRyxNQUFNdW9CLEdBQUcsRUFBRVAsR0FBRyxTQUFTTyxHQUFHMXVCLEdBQUdvdUIsV0FBVyxXQUFXLE1BQU1wdUIsQ0FBRSxFQUFFLENBQ3BWLFNBQVMydUIsR0FBRzN1QixFQUFFRSxHQUFHLElBQUlILEVBQUVHLEVBQUVDLEVBQUUsRUFBRSxFQUFFLENBQUMsSUFBSUMsRUFBRUwsRUFBRTBuQixZQUE2QixHQUFqQnpuQixFQUFFOE8sWUFBWS9PLEdBQU1LLEdBQUcsSUFBSUEsRUFBRWdQLFNBQVMsR0FBWSxRQUFUclAsRUFBRUssRUFBRTRELE1BQWMsQ0FBQyxHQUFHLElBQUk3RCxFQUEwQixPQUF2QkgsRUFBRThPLFlBQVkxTyxRQUFHeWIsR0FBRzNiLEdBQVVDLEdBQUcsS0FBSyxNQUFNSixHQUFHLE9BQU9BLEdBQUcsT0FBT0EsR0FBR0ksSUFBSUosRUFBRUssQ0FBQyxPQUFPTCxHQUFHOGIsR0FBRzNiLEVBQUUsQ0FBQyxTQUFTMHVCLEdBQUc1dUIsR0FBRyxLQUFLLE1BQU1BLEVBQUVBLEVBQUVBLEVBQUV5bkIsWUFBWSxDQUFDLElBQUl2bkIsRUFBRUYsRUFBRW9QLFNBQVMsR0FBRyxJQUFJbFAsR0FBRyxJQUFJQSxFQUFFLE1BQU0sR0FBRyxJQUFJQSxFQUFFLENBQVUsR0FBRyxPQUFaQSxFQUFFRixFQUFFZ0UsT0FBaUIsT0FBTzlELEdBQUcsT0FBT0EsRUFBRSxNQUFNLEdBQUcsT0FBT0EsRUFBRSxPQUFPLElBQUksQ0FBQyxDQUFDLE9BQU9GLENBQUMsQ0FDalksU0FBUzZ1QixHQUFHN3VCLEdBQUdBLEVBQUVBLEVBQUU4dUIsZ0JBQWdCLElBQUksSUFBSTV1QixFQUFFLEVBQUVGLEdBQUcsQ0FBQyxHQUFHLElBQUlBLEVBQUVvUCxTQUFTLENBQUMsSUFBSXJQLEVBQUVDLEVBQUVnRSxLQUFLLEdBQUcsTUFBTWpFLEdBQUcsT0FBT0EsR0FBRyxPQUFPQSxFQUFFLENBQUMsR0FBRyxJQUFJRyxFQUFFLE9BQU9GLEVBQUVFLEdBQUcsS0FBSyxPQUFPSCxHQUFHRyxHQUFHLENBQUNGLEVBQUVBLEVBQUU4dUIsZUFBZSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUlDLEdBQUc3dEIsS0FBS0MsU0FBU0MsU0FBUyxJQUFJQyxNQUFNLEdBQUcydEIsR0FBRyxnQkFBZ0JELEdBQUdFLEdBQUcsZ0JBQWdCRixHQUFHakMsR0FBRyxvQkFBb0JpQyxHQUFHaEQsR0FBRyxpQkFBaUJnRCxHQUFHRyxHQUFHLG9CQUFvQkgsR0FBR0ksR0FBRyxrQkFBa0JKLEdBQ2xYLFNBQVM1VCxHQUFHbmIsR0FBRyxJQUFJRSxFQUFFRixFQUFFZ3ZCLElBQUksR0FBRzl1QixFQUFFLE9BQU9BLEVBQUUsSUFBSSxJQUFJSCxFQUFFQyxFQUFFbVUsV0FBV3BVLEdBQUcsQ0FBQyxHQUFHRyxFQUFFSCxFQUFFK3NCLEtBQUsvc0IsRUFBRWl2QixJQUFJLENBQWUsR0FBZGp2QixFQUFFRyxFQUFFNlYsVUFBYSxPQUFPN1YsRUFBRXFXLE9BQU8sT0FBT3hXLEdBQUcsT0FBT0EsRUFBRXdXLE1BQU0sSUFBSXZXLEVBQUU2dUIsR0FBRzd1QixHQUFHLE9BQU9BLEdBQUcsQ0FBQyxHQUFHRCxFQUFFQyxFQUFFZ3ZCLElBQUksT0FBT2p2QixFQUFFQyxFQUFFNnVCLEdBQUc3dUIsRUFBRSxDQUFDLE9BQU9FLENBQUMsQ0FBS0gsR0FBSkMsRUFBRUQsR0FBTW9VLFVBQVUsQ0FBQyxPQUFPLElBQUksQ0FBQyxTQUFTSyxHQUFHeFUsR0FBa0IsUUFBZkEsRUFBRUEsRUFBRWd2QixLQUFLaHZCLEVBQUU4c0IsTUFBYyxJQUFJOXNCLEVBQUVpTCxLQUFLLElBQUlqTCxFQUFFaUwsS0FBSyxLQUFLakwsRUFBRWlMLEtBQUssSUFBSWpMLEVBQUVpTCxJQUFJLEtBQUtqTCxDQUFDLENBQUMsU0FBU29tQixHQUFHcG1CLEdBQUcsR0FBRyxJQUFJQSxFQUFFaUwsS0FBSyxJQUFJakwsRUFBRWlMLElBQUksT0FBT2pMLEVBQUV5VSxVQUFVLE1BQU1sWCxNQUFNa0MsRUFBRSxJQUFLLENBQUMsU0FBU2lWLEdBQUcxVSxHQUFHLE9BQU9BLEVBQUVpdkIsS0FBSyxJQUFJLENBQUMsSUFBSUcsR0FBRyxHQUFHQyxJQUFJLEVBQUUsU0FBU0MsR0FBR3R2QixHQUFHLE1BQU0sQ0FBQ1ksUUFBUVosRUFBRSxDQUN2ZSxTQUFTdXZCLEdBQUV2dkIsR0FBRyxFQUFFcXZCLEtBQUtydkIsRUFBRVksUUFBUXd1QixHQUFHQyxJQUFJRCxHQUFHQyxJQUFJLEtBQUtBLEtBQUssQ0FBQyxTQUFTRyxHQUFFeHZCLEVBQUVFLEdBQUdtdkIsS0FBS0QsR0FBR0MsSUFBSXJ2QixFQUFFWSxRQUFRWixFQUFFWSxRQUFRVixDQUFDLENBQUMsSUFBSXV2QixHQUFHLENBQUMsRUFBRUMsR0FBRUosR0FBR0csSUFBSUUsR0FBR0wsSUFBRyxHQUFJTSxHQUFHSCxHQUFHLFNBQVNJLEdBQUc3dkIsRUFBRUUsR0FBRyxJQUFJSCxFQUFFQyxFQUFFUyxLQUFLcXZCLGFBQWEsSUFBSS92QixFQUFFLE9BQU8wdkIsR0FBRyxJQUFJdHZCLEVBQUVILEVBQUV5VSxVQUFVLEdBQUd0VSxHQUFHQSxFQUFFNHZCLDhDQUE4Qzd2QixFQUFFLE9BQU9DLEVBQUU2dkIsMENBQTBDLElBQVNseEIsRUFBTHNCLEVBQUUsQ0FBQyxFQUFJLElBQUl0QixLQUFLaUIsRUFBRUssRUFBRXRCLEdBQUdvQixFQUFFcEIsR0FBb0gsT0FBakhxQixLQUFJSCxFQUFFQSxFQUFFeVUsV0FBWXNiLDRDQUE0Qzd2QixFQUFFRixFQUFFZ3dCLDBDQUEwQzV2QixHQUFVQSxDQUFDLENBQzlkLFNBQVM2dkIsR0FBR2p3QixHQUF5QixPQUFPLE1BQTNCQSxFQUFFa3dCLGlCQUE2QyxDQUFDLFNBQVNDLEtBQUtaLEdBQUVJLElBQUlKLEdBQUVHLEdBQUUsQ0FBQyxTQUFTVSxHQUFHcHdCLEVBQUVFLEVBQUVILEdBQUcsR0FBRzJ2QixHQUFFOXVCLFVBQVU2dUIsR0FBRyxNQUFNbHlCLE1BQU1rQyxFQUFFLE1BQU0rdkIsR0FBRUUsR0FBRXh2QixHQUFHc3ZCLEdBQUVHLEdBQUc1dkIsRUFBRSxDQUFDLFNBQVNzd0IsR0FBR3J3QixFQUFFRSxFQUFFSCxHQUFHLElBQUlJLEVBQUVILEVBQUV5VSxVQUFnQyxHQUF0QnZVLEVBQUVBLEVBQUVnd0Isa0JBQXFCLG1CQUFvQi92QixFQUFFbXdCLGdCQUFnQixPQUFPdndCLEVBQXdCLElBQUksSUFBSUssS0FBOUJELEVBQUVBLEVBQUVtd0Isa0JBQWlDLEtBQUtsd0IsS0FBS0YsR0FBRyxNQUFNM0MsTUFBTWtDLEVBQUUsSUFBSThMLEVBQUd2TCxJQUFJLFVBQVVJLElBQUksT0FBTzRKLEVBQUUsQ0FBQyxFQUFFakssRUFBRUksRUFBRSxDQUN4WCxTQUFTb3dCLEdBQUd2d0IsR0FBMkcsT0FBeEdBLEdBQUdBLEVBQUVBLEVBQUV5VSxZQUFZelUsRUFBRXd3QiwyQ0FBMkNmLEdBQUdHLEdBQUdGLEdBQUU5dUIsUUFBUTR1QixHQUFFRSxHQUFFMXZCLEdBQUd3dkIsR0FBRUcsR0FBR0EsR0FBRy91QixVQUFlLENBQUUsQ0FBQyxTQUFTNnZCLEdBQUd6d0IsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFSCxFQUFFeVUsVUFBVSxJQUFJdFUsRUFBRSxNQUFNNUMsTUFBTWtDLEVBQUUsTUFBTU0sR0FBR0MsRUFBRXF3QixHQUFHcndCLEVBQUVFLEVBQUUwdkIsSUFBSXp2QixFQUFFcXdCLDBDQUEwQ3h3QixFQUFFdXZCLEdBQUVJLElBQUlKLEdBQUVHLElBQUdGLEdBQUVFLEdBQUUxdkIsSUFBSXV2QixHQUFFSSxJQUFJSCxHQUFFRyxHQUFHNXZCLEVBQUUsQ0FBQyxJQUFJMndCLEdBQUcsS0FBS0MsSUFBRyxFQUFHQyxJQUFHLEVBQUcsU0FBU0MsR0FBRzd3QixHQUFHLE9BQU8wd0IsR0FBR0EsR0FBRyxDQUFDMXdCLEdBQUcwd0IsR0FBRzV6QixLQUFLa0QsRUFBRSxDQUNoVyxTQUFTOHdCLEtBQUssSUFBSUYsSUFBSSxPQUFPRixHQUFHLENBQUNFLElBQUcsRUFBRyxJQUFJNXdCLEVBQUUsRUFBRUUsRUFBRXNaLEdBQUUsSUFBSSxJQUFJelosRUFBRTJ3QixHQUFHLElBQUlsWCxHQUFFLEVBQUV4WixFQUFFRCxFQUFFNUQsT0FBTzZELElBQUksQ0FBQyxJQUFJRyxFQUFFSixFQUFFQyxHQUFHLEdBQUdHLEVBQUVBLEdBQUUsU0FBVSxPQUFPQSxFQUFFLENBQUN1d0IsR0FBRyxLQUFLQyxJQUFHLENBQUUsQ0FBQyxNQUFNdndCLEdBQUcsTUFBTSxPQUFPc3dCLEtBQUtBLEdBQUdBLEdBQUdydkIsTUFBTXJCLEVBQUUsSUFBSTJXLEdBQUdZLEdBQUd1WixJQUFJMXdCLENBQUUsQ0FBQyxRQUFRb1osR0FBRXRaLEVBQUUwd0IsSUFBRyxDQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJRyxHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxLQUFLQyxHQUFHLEVBQUVDLEdBQUcsR0FBR0MsR0FBRyxFQUFFQyxHQUFHLEtBQUtDLEdBQUcsRUFBRUMsR0FBRyxHQUFHLFNBQVNDLEdBQUd4eEIsRUFBRUUsR0FBRzZ3QixHQUFHQyxNQUFNRSxHQUFHSCxHQUFHQyxNQUFNQyxHQUFHQSxHQUFHanhCLEVBQUVreEIsR0FBR2h4QixDQUFDLENBQ2pWLFNBQVN1eEIsR0FBR3p4QixFQUFFRSxFQUFFSCxHQUFHb3hCLEdBQUdDLE1BQU1FLEdBQUdILEdBQUdDLE1BQU1HLEdBQUdKLEdBQUdDLE1BQU1DLEdBQUdBLEdBQUdyeEIsRUFBRSxJQUFJRyxFQUFFbXhCLEdBQUd0eEIsRUFBRXV4QixHQUFHLElBQUlueEIsRUFBRSxHQUFHK1gsR0FBR2hZLEdBQUcsRUFBRUEsS0FBSyxHQUFHQyxHQUFHTCxHQUFHLEVBQUUsSUFBSWpCLEVBQUUsR0FBR3FaLEdBQUdqWSxHQUFHRSxFQUFFLEdBQUcsR0FBR3RCLEVBQUUsQ0FBQyxJQUFJbUIsRUFBRUcsRUFBRUEsRUFBRSxFQUFFdEIsR0FBR3FCLEdBQUcsR0FBR0YsR0FBRyxHQUFHbUIsU0FBUyxJQUFJakIsSUFBSUYsRUFBRUcsR0FBR0gsRUFBRXF4QixHQUFHLEdBQUcsR0FBR25aLEdBQUdqWSxHQUFHRSxFQUFFTCxHQUFHSyxFQUFFRCxFQUFFb3hCLEdBQUd6eUIsRUFBRWtCLENBQUMsTUFBTXN4QixHQUFHLEdBQUd4eUIsRUFBRWlCLEdBQUdLLEVBQUVELEVBQUVveEIsR0FBR3Z4QixDQUFDLENBQUMsU0FBUzB4QixHQUFHMXhCLEdBQUcsT0FBT0EsRUFBRWdXLFNBQVN3YixHQUFHeHhCLEVBQUUsR0FBR3l4QixHQUFHenhCLEVBQUUsRUFBRSxHQUFHLENBQUMsU0FBUzJ4QixHQUFHM3hCLEdBQUcsS0FBS0EsSUFBSWl4QixJQUFJQSxHQUFHRixLQUFLQyxJQUFJRCxHQUFHQyxJQUFJLEtBQUtFLEdBQUdILEtBQUtDLElBQUlELEdBQUdDLElBQUksS0FBSyxLQUFLaHhCLElBQUlxeEIsSUFBSUEsR0FBR0YsS0FBS0MsSUFBSUQsR0FBR0MsSUFBSSxLQUFLRyxHQUFHSixLQUFLQyxJQUFJRCxHQUFHQyxJQUFJLEtBQUtFLEdBQUdILEtBQUtDLElBQUlELEdBQUdDLElBQUksSUFBSSxDQUFDLElBQUlRLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxJQUFFLEVBQUdDLEdBQUcsS0FDamUsU0FBU0MsR0FBR2h5QixFQUFFRSxHQUFHLElBQUlILEVBQUVreUIsR0FBRyxFQUFFLEtBQUssS0FBSyxHQUFHbHlCLEVBQUVteUIsWUFBWSxVQUFVbnlCLEVBQUUwVSxVQUFVdlUsRUFBRUgsRUFBRWlXLE9BQU9oVyxFQUFnQixRQUFkRSxFQUFFRixFQUFFbXlCLFlBQW9CbnlCLEVBQUVteUIsVUFBVSxDQUFDcHlCLEdBQUdDLEVBQUVpVyxPQUFPLElBQUkvVixFQUFFcEQsS0FBS2lELEVBQUUsQ0FDeEosU0FBU3F5QixHQUFHcHlCLEVBQUVFLEdBQUcsT0FBT0YsRUFBRWlMLEtBQUssS0FBSyxFQUFFLElBQUlsTCxFQUFFQyxFQUFFUyxLQUF5RSxPQUFPLFFBQTNFUCxFQUFFLElBQUlBLEVBQUVrUCxVQUFVclAsRUFBRWdJLGdCQUFnQjdILEVBQUV3TCxTQUFTM0QsY0FBYyxLQUFLN0gsS0FBbUJGLEVBQUV5VSxVQUFVdlUsRUFBRTB4QixHQUFHNXhCLEVBQUU2eEIsR0FBR2pELEdBQUcxdUIsRUFBRTJPLGFBQVksR0FBTyxLQUFLLEVBQUUsT0FBb0QsUUFBN0MzTyxFQUFFLEtBQUtGLEVBQUVxeUIsY0FBYyxJQUFJbnlCLEVBQUVrUCxTQUFTLEtBQUtsUCxLQUFZRixFQUFFeVUsVUFBVXZVLEVBQUUweEIsR0FBRzV4QixFQUFFNnhCLEdBQUcsTUFBSyxHQUFPLEtBQUssR0FBRyxPQUErQixRQUF4QjN4QixFQUFFLElBQUlBLEVBQUVrUCxTQUFTLEtBQUtsUCxLQUFZSCxFQUFFLE9BQU9zeEIsR0FBRyxDQUFDejFCLEdBQUcwMUIsR0FBR2dCLFNBQVNmLElBQUksS0FBS3Z4QixFQUFFbVcsY0FBYyxDQUFDQyxXQUFXbFcsRUFBRXF5QixZQUFZeHlCLEVBQUV5eUIsVUFBVSxhQUFZenlCLEVBQUVreUIsR0FBRyxHQUFHLEtBQUssS0FBSyxJQUFLeGQsVUFBVXZVLEVBQUVILEVBQUVpVyxPQUFPaFcsRUFBRUEsRUFBRXVXLE1BQU14VyxFQUFFNnhCLEdBQUc1eEIsRUFBRTZ4QixHQUNsZixNQUFLLEdBQU8sUUFBUSxPQUFNLEVBQUcsQ0FBQyxTQUFTWSxHQUFHenlCLEdBQUcsVUFBbUIsRUFBUEEsRUFBRTB5QixPQUFzQixJQUFSMXlCLEVBQUVpVyxNQUFVLENBQUMsU0FBUzBjLEdBQUczeUIsR0FBRyxHQUFHOHhCLEdBQUUsQ0FBQyxJQUFJNXhCLEVBQUUyeEIsR0FBRyxHQUFHM3hCLEVBQUUsQ0FBQyxJQUFJSCxFQUFFRyxFQUFFLElBQUlreUIsR0FBR3B5QixFQUFFRSxHQUFHLENBQUMsR0FBR3V5QixHQUFHenlCLEdBQUcsTUFBTXpDLE1BQU1rQyxFQUFFLE1BQU1TLEVBQUUwdUIsR0FBRzd1QixFQUFFMG5CLGFBQWEsSUFBSXRuQixFQUFFeXhCLEdBQUcxeEIsR0FBR2t5QixHQUFHcHlCLEVBQUVFLEdBQUc4eEIsR0FBRzd4QixFQUFFSixJQUFJQyxFQUFFaVcsT0FBZSxLQUFUalcsRUFBRWlXLE1BQVksRUFBRTZiLElBQUUsRUFBR0YsR0FBRzV4QixFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUd5eUIsR0FBR3p5QixHQUFHLE1BQU16QyxNQUFNa0MsRUFBRSxNQUFNTyxFQUFFaVcsT0FBZSxLQUFUalcsRUFBRWlXLE1BQVksRUFBRTZiLElBQUUsRUFBR0YsR0FBRzV4QixDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM0eUIsR0FBRzV5QixHQUFHLElBQUlBLEVBQUVBLEVBQUVnVyxPQUFPLE9BQU9oVyxHQUFHLElBQUlBLEVBQUVpTCxLQUFLLElBQUlqTCxFQUFFaUwsS0FBSyxLQUFLakwsRUFBRWlMLEtBQUtqTCxFQUFFQSxFQUFFZ1csT0FBTzRiLEdBQUc1eEIsQ0FBQyxDQUNoYSxTQUFTNnlCLEdBQUc3eUIsR0FBRyxHQUFHQSxJQUFJNHhCLEdBQUcsT0FBTSxFQUFHLElBQUlFLEdBQUUsT0FBT2MsR0FBRzV5QixHQUFHOHhCLElBQUUsR0FBRyxFQUFHLElBQUk1eEIsRUFBa0csSUFBL0ZBLEVBQUUsSUFBSUYsRUFBRWlMLFFBQVEvSyxFQUFFLElBQUlGLEVBQUVpTCxPQUFnQi9LLEVBQUUsVUFBWEEsRUFBRUYsRUFBRVMsT0FBbUIsU0FBU1AsSUFBSSt0QixHQUFHanVCLEVBQUVTLEtBQUtULEVBQUU4eUIsZ0JBQW1CNXlCLElBQUlBLEVBQUUyeEIsSUFBSSxDQUFDLEdBQUdZLEdBQUd6eUIsR0FBRyxNQUFNK3lCLEtBQUt4MUIsTUFBTWtDLEVBQUUsTUFBTSxLQUFLUyxHQUFHOHhCLEdBQUdoeUIsRUFBRUUsR0FBR0EsRUFBRTB1QixHQUFHMXVCLEVBQUV1bkIsWUFBWSxDQUFPLEdBQU5tTCxHQUFHNXlCLEdBQU0sS0FBS0EsRUFBRWlMLElBQUksQ0FBZ0QsS0FBN0JqTCxFQUFFLFFBQXBCQSxFQUFFQSxFQUFFbVcsZUFBeUJuVyxFQUFFb1csV0FBVyxNQUFXLE1BQU03WSxNQUFNa0MsRUFBRSxNQUFNTyxFQUFFLENBQWlCLElBQWhCQSxFQUFFQSxFQUFFeW5CLFlBQWdCdm5CLEVBQUUsRUFBRUYsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRW9QLFNBQVMsQ0FBQyxJQUFJclAsRUFBRUMsRUFBRWdFLEtBQUssR0FBRyxPQUFPakUsRUFBRSxDQUFDLEdBQUcsSUFBSUcsRUFBRSxDQUFDMnhCLEdBQUdqRCxHQUFHNXVCLEVBQUV5bkIsYUFBYSxNQUFNem5CLENBQUMsQ0FBQ0UsR0FBRyxLQUFLLE1BQU1ILEdBQUcsT0FBT0EsR0FBRyxPQUFPQSxHQUFHRyxHQUFHLENBQUNGLEVBQUVBLEVBQUV5bkIsV0FBVyxDQUFDb0ssR0FDamdCLElBQUksQ0FBQyxNQUFNQSxHQUFHRCxHQUFHaEQsR0FBRzV1QixFQUFFeVUsVUFBVWdULGFBQWEsS0FBSyxPQUFNLENBQUUsQ0FBQyxTQUFTc0wsS0FBSyxJQUFJLElBQUkveUIsRUFBRTZ4QixHQUFHN3hCLEdBQUdBLEVBQUU0dUIsR0FBRzV1QixFQUFFeW5CLFlBQVksQ0FBQyxTQUFTdUwsS0FBS25CLEdBQUdELEdBQUcsS0FBS0UsSUFBRSxDQUFFLENBQUMsU0FBU21CLEdBQUdqekIsR0FBRyxPQUFPK3hCLEdBQUdBLEdBQUcsQ0FBQy94QixHQUFHK3hCLEdBQUdqMUIsS0FBS2tELEVBQUUsQ0FBQyxJQUFJa3pCLEdBQUdwcUIsRUFBR2lULHdCQUNoTSxTQUFTb1gsR0FBR256QixFQUFFRSxFQUFFSCxHQUFXLEdBQUcsUUFBWEMsRUFBRUQsRUFBRUosTUFBaUIsbUJBQW9CSyxHQUFHLGlCQUFrQkEsRUFBRSxDQUFDLEdBQUdELEVBQUVZLE9BQU8sQ0FBWSxHQUFYWixFQUFFQSxFQUFFWSxPQUFZLENBQUMsR0FBRyxJQUFJWixFQUFFa0wsSUFBSSxNQUFNMU4sTUFBTWtDLEVBQUUsTUFBTSxJQUFJVSxFQUFFSixFQUFFMFUsU0FBUyxDQUFDLElBQUl0VSxFQUFFLE1BQU01QyxNQUFNa0MsRUFBRSxJQUFJTyxJQUFJLElBQUlJLEVBQUVELEVBQUVyQixFQUFFLEdBQUdrQixFQUFFLE9BQUcsT0FBT0UsR0FBRyxPQUFPQSxFQUFFUCxLQUFLLG1CQUFvQk8sRUFBRVAsS0FBS08sRUFBRVAsSUFBSXl6QixhQUFhdDBCLEVBQVNvQixFQUFFUCxLQUFJTyxFQUFFLFNBQVNGLEdBQUcsSUFBSUUsRUFBRUUsRUFBRWl6QixLQUFLLE9BQU9yekIsU0FBU0UsRUFBRXBCLEdBQUdvQixFQUFFcEIsR0FBR2tCLENBQUMsRUFBRUUsRUFBRWt6QixXQUFXdDBCLEVBQVNvQixFQUFDLENBQUMsR0FBRyxpQkFBa0JGLEVBQUUsTUFBTXpDLE1BQU1rQyxFQUFFLE1BQU0sSUFBSU0sRUFBRVksT0FBTyxNQUFNcEQsTUFBTWtDLEVBQUUsSUFBSU8sR0FBSSxDQUFDLE9BQU9BLENBQUMsQ0FDL2MsU0FBU3N6QixHQUFHdHpCLEVBQUVFLEdBQXVDLE1BQXBDRixFQUFFL0QsT0FBT21ELFVBQVVnQyxTQUFTZCxLQUFLSixHQUFTM0MsTUFBTWtDLEVBQUUsR0FBRyxvQkFBb0JPLEVBQUUscUJBQXFCL0QsT0FBT0MsS0FBS2dFLEdBQUdxekIsS0FBSyxNQUFNLElBQUl2ekIsR0FBSSxDQUFDLFNBQVN3ekIsR0FBR3h6QixHQUFpQixPQUFPRSxFQUFmRixFQUFFc0wsT0FBZXRMLEVBQUVxTCxTQUFTLENBQ3JNLFNBQVNvb0IsR0FBR3p6QixHQUFHLFNBQVNFLEVBQUVBLEVBQUVILEdBQUcsR0FBR0MsRUFBRSxDQUFDLElBQUlHLEVBQUVELEVBQUVpeUIsVUFBVSxPQUFPaHlCLEdBQUdELEVBQUVpeUIsVUFBVSxDQUFDcHlCLEdBQUdHLEVBQUUrVixPQUFPLElBQUk5VixFQUFFckQsS0FBS2lELEVBQUUsQ0FBQyxDQUFDLFNBQVNBLEVBQUVBLEVBQUVJLEdBQUcsSUFBSUgsRUFBRSxPQUFPLEtBQUssS0FBSyxPQUFPRyxHQUFHRCxFQUFFSCxFQUFFSSxHQUFHQSxFQUFFQSxFQUFFcVcsUUFBUSxPQUFPLElBQUksQ0FBQyxTQUFTclcsRUFBRUgsRUFBRUUsR0FBRyxJQUFJRixFQUFFLElBQUlxYSxJQUFJLE9BQU9uYSxHQUFHLE9BQU9BLEVBQUVSLElBQUlNLEVBQUUwSyxJQUFJeEssRUFBRVIsSUFBSVEsR0FBR0YsRUFBRTBLLElBQUl4SyxFQUFFd3pCLE1BQU14ekIsR0FBR0EsRUFBRUEsRUFBRXNXLFFBQVEsT0FBT3hXLENBQUMsQ0FBQyxTQUFTSSxFQUFFSixFQUFFRSxHQUFzQyxPQUFuQ0YsRUFBRTJ6QixHQUFHM3pCLEVBQUVFLElBQUt3ekIsTUFBTSxFQUFFMXpCLEVBQUV3VyxRQUFRLEtBQVl4VyxDQUFDLENBQUMsU0FBU2xCLEVBQUVvQixFQUFFSCxFQUFFSSxHQUFhLE9BQVZELEVBQUV3ekIsTUFBTXZ6QixFQUFNSCxFQUE2QyxRQUFqQkcsRUFBRUQsRUFBRTZWLFlBQTZCNVYsRUFBRUEsRUFBRXV6QixPQUFRM3pCLEdBQUdHLEVBQUUrVixPQUFPLEVBQUVsVyxHQUFHSSxHQUFFRCxFQUFFK1YsT0FBTyxFQUFTbFcsSUFBckdHLEVBQUUrVixPQUFPLFFBQVFsVyxFQUFxRixDQUFDLFNBQVNFLEVBQUVDLEdBQ3pkLE9BRDRkRixHQUM3ZixPQUFPRSxFQUFFNlYsWUFBWTdWLEVBQUUrVixPQUFPLEdBQVUvVixDQUFDLENBQUMsU0FBU0csRUFBRUwsRUFBRUUsRUFBRUgsRUFBRUksR0FBRyxPQUFHLE9BQU9ELEdBQUcsSUFBSUEsRUFBRStLLE1BQVcvSyxFQUFFMHpCLEdBQUc3ekIsRUFBRUMsRUFBRTB5QixLQUFLdnlCLElBQUs2VixPQUFPaFcsRUFBRUUsS0FBRUEsRUFBRUUsRUFBRUYsRUFBRUgsSUFBS2lXLE9BQU9oVyxFQUFTRSxFQUFDLENBQUMsU0FBU25CLEVBQUVpQixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLElBQUlyQixFQUFFaUIsRUFBRVUsS0FBSyxPQUFHM0IsSUFBSW1LLEVBQVU5SixFQUFFYSxFQUFFRSxFQUFFSCxFQUFFVyxNQUFNdU4sU0FBUzlOLEVBQUVKLEVBQUVMLEtBQVEsT0FBT1EsSUFBSUEsRUFBRWd5QixjQUFjcHpCLEdBQUcsaUJBQWtCQSxHQUFHLE9BQU9BLEdBQUdBLEVBQUUwQixXQUFXa0osR0FBSThwQixHQUFHMTBCLEtBQUtvQixFQUFFTyxRQUFhTixFQUFFQyxFQUFFRixFQUFFSCxFQUFFVyxRQUFTZixJQUFJd3pCLEdBQUduekIsRUFBRUUsRUFBRUgsR0FBR0ksRUFBRTZWLE9BQU9oVyxFQUFFRyxLQUFFQSxFQUFFMHpCLEdBQUc5ekIsRUFBRVUsS0FBS1YsRUFBRUwsSUFBSUssRUFBRVcsTUFBTSxLQUFLVixFQUFFMHlCLEtBQUt2eUIsSUFBS1IsSUFBSXd6QixHQUFHbnpCLEVBQUVFLEVBQUVILEdBQUdJLEVBQUU2VixPQUFPaFcsRUFBU0csRUFBQyxDQUFDLFNBQVNqQixFQUFFYyxFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLE9BQUcsT0FBT0QsR0FBRyxJQUFJQSxFQUFFK0ssS0FDamYvSyxFQUFFdVUsVUFBVTZHLGdCQUFnQnZiLEVBQUV1YixlQUFlcGIsRUFBRXVVLFVBQVVxZixpQkFBaUIvekIsRUFBRSt6QixpQkFBc0I1ekIsRUFBRTZ6QixHQUFHaDBCLEVBQUVDLEVBQUUweUIsS0FBS3Z5QixJQUFLNlYsT0FBT2hXLEVBQUVFLEtBQUVBLEVBQUVFLEVBQUVGLEVBQUVILEVBQUVrTyxVQUFVLEtBQU0rSCxPQUFPaFcsRUFBU0UsRUFBQyxDQUFDLFNBQVNmLEVBQUVhLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVyQixHQUFHLE9BQUcsT0FBT29CLEdBQUcsSUFBSUEsRUFBRStLLE1BQVcvSyxFQUFFOHpCLEdBQUdqMEIsRUFBRUMsRUFBRTB5QixLQUFLdnlCLEVBQUVyQixJQUFLa1gsT0FBT2hXLEVBQUVFLEtBQUVBLEVBQUVFLEVBQUVGLEVBQUVILElBQUtpVyxPQUFPaFcsRUFBU0UsRUFBQyxDQUFDLFNBQVNKLEVBQUVFLEVBQUVFLEVBQUVILEdBQUcsR0FBRyxpQkFBa0JHLEdBQUcsS0FBS0EsR0FBRyxpQkFBa0JBLEVBQUUsT0FBT0EsRUFBRTB6QixHQUFHLEdBQUcxekIsRUFBRUYsRUFBRTB5QixLQUFLM3lCLElBQUtpVyxPQUFPaFcsRUFBRUUsRUFBRSxHQUFHLGlCQUFrQkEsR0FBRyxPQUFPQSxFQUFFLENBQUMsT0FBT0EsRUFBRU0sVUFBVSxLQUFLdUksRUFBRyxPQUFPaEosRUFBRTh6QixHQUFHM3pCLEVBQUVPLEtBQUtQLEVBQUVSLElBQUlRLEVBQUVRLE1BQU0sS0FBS1YsRUFBRTB5QixLQUFLM3lCLElBQ2pmSixJQUFJd3pCLEdBQUduekIsRUFBRSxLQUFLRSxHQUFHSCxFQUFFaVcsT0FBT2hXLEVBQUVELEVBQUUsS0FBS2lKLEVBQUcsT0FBTzlJLEVBQUU2ekIsR0FBRzd6QixFQUFFRixFQUFFMHlCLEtBQUszeUIsSUFBS2lXLE9BQU9oVyxFQUFFRSxFQUFFLEtBQUt3SixFQUFpQixPQUFPNUosRUFBRUUsR0FBRUcsRUFBbkJELEVBQUVvTCxPQUFtQnBMLEVBQUVtTCxVQUFVdEwsR0FBRyxHQUFHME4sR0FBR3ZOLElBQUk0SixFQUFHNUosR0FBRyxPQUFPQSxFQUFFOHpCLEdBQUc5ekIsRUFBRUYsRUFBRTB5QixLQUFLM3lCLEVBQUUsT0FBUWlXLE9BQU9oVyxFQUFFRSxFQUFFb3pCLEdBQUd0ekIsRUFBRUUsRUFBRSxDQUFDLE9BQU8sSUFBSSxDQUFDLFNBQVMrekIsRUFBRWowQixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLElBQUlDLEVBQUUsT0FBT0YsRUFBRUEsRUFBRVIsSUFBSSxLQUFLLEdBQUcsaUJBQWtCSyxHQUFHLEtBQUtBLEdBQUcsaUJBQWtCQSxFQUFFLE9BQU8sT0FBT0ssRUFBRSxLQUFLQyxFQUFFTCxFQUFFRSxFQUFFLEdBQUdILEVBQUVJLEdBQUcsR0FBRyxpQkFBa0JKLEdBQUcsT0FBT0EsRUFBRSxDQUFDLE9BQU9BLEVBQUVTLFVBQVUsS0FBS3VJLEVBQUcsT0FBT2hKLEVBQUVMLE1BQU1VLEVBQUVyQixFQUFFaUIsRUFBRUUsRUFBRUgsRUFBRUksR0FBRyxLQUFLLEtBQUs2SSxFQUFHLE9BQU9qSixFQUFFTCxNQUFNVSxFQUFFbEIsRUFBRWMsRUFBRUUsRUFBRUgsRUFBRUksR0FBRyxLQUFLLEtBQUt1SixFQUFHLE9BQWlCdXFCLEVBQUVqMEIsRUFDcGZFLEdBRHdlRSxFQUFFTCxFQUFFdUwsT0FDeGV2TCxFQUFFc0wsVUFBVWxMLEdBQUcsR0FBR3NOLEdBQUcxTixJQUFJK0osRUFBRy9KLEdBQUcsT0FBTyxPQUFPSyxFQUFFLEtBQUtqQixFQUFFYSxFQUFFRSxFQUFFSCxFQUFFSSxFQUFFLE1BQU1tekIsR0FBR3R6QixFQUFFRCxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsU0FBU20wQixFQUFFbDBCLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUcsR0FBRyxpQkFBa0JELEdBQUcsS0FBS0EsR0FBRyxpQkFBa0JBLEVBQUUsT0FBd0JFLEVBQUVILEVBQW5CRixFQUFFQSxFQUFFK0wsSUFBSWhNLElBQUksS0FBVyxHQUFHSSxFQUFFQyxHQUFHLEdBQUcsaUJBQWtCRCxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxPQUFPQSxFQUFFSyxVQUFVLEtBQUt1SSxFQUFHLE9BQTJDaEssRUFBRW1CLEVBQXRDRixFQUFFQSxFQUFFK0wsSUFBSSxPQUFPNUwsRUFBRVQsSUFBSUssRUFBRUksRUFBRVQsTUFBTSxLQUFXUyxFQUFFQyxHQUFHLEtBQUs0SSxFQUFHLE9BQTJDOUosRUFBRWdCLEVBQXRDRixFQUFFQSxFQUFFK0wsSUFBSSxPQUFPNUwsRUFBRVQsSUFBSUssRUFBRUksRUFBRVQsTUFBTSxLQUFXUyxFQUFFQyxHQUFHLEtBQUtzSixFQUFpQixPQUFPd3FCLEVBQUVsMEIsRUFBRUUsRUFBRUgsR0FBRWpCLEVBQXZCcUIsRUFBRW1MLE9BQXVCbkwsRUFBRWtMLFVBQVVqTCxHQUFHLEdBQUdxTixHQUFHdE4sSUFBSTJKLEVBQUczSixHQUFHLE9BQXdCaEIsRUFBRWUsRUFBbkJGLEVBQUVBLEVBQUUrTCxJQUFJaE0sSUFBSSxLQUFXSSxFQUFFQyxFQUFFLE1BQU1rekIsR0FBR3B6QixFQUFFQyxFQUFFLENBQUMsT0FBTyxJQUFJLENBQzlmLFNBQVNiLEVBQUVjLEVBQUVILEVBQUVJLEVBQUV0QixHQUFHLElBQUksSUFBSUcsRUFBRSxLQUFLQyxFQUFFLEtBQUt3dEIsRUFBRTFzQixFQUFFakQsRUFBRWlELEVBQUUsRUFBRXlzQixFQUFFLEtBQUssT0FBT0MsR0FBRzN2QixFQUFFcUQsRUFBRWxFLE9BQU9hLElBQUksQ0FBQzJ2QixFQUFFK0csTUFBTTEyQixHQUFHMHZCLEVBQUVDLEVBQUVBLEVBQUUsTUFBTUQsRUFBRUMsRUFBRW5XLFFBQVEsSUFBSWxYLEVBQUUyMEIsRUFBRTd6QixFQUFFdXNCLEVBQUV0c0IsRUFBRXJELEdBQUcrQixHQUFHLEdBQUcsT0FBT08sRUFBRSxDQUFDLE9BQU9xdEIsSUFBSUEsRUFBRUQsR0FBRyxLQUFLLENBQUMxc0IsR0FBRzJzQixHQUFHLE9BQU9ydEIsRUFBRXlXLFdBQVc3VixFQUFFRSxFQUFFdXNCLEdBQUcxc0IsRUFBRW5CLEVBQUVRLEVBQUVXLEVBQUVqRCxHQUFHLE9BQU9tQyxFQUFFRCxFQUFFSSxFQUFFSCxFQUFFcVgsUUFBUWxYLEVBQUVILEVBQUVHLEVBQUVxdEIsRUFBRUQsQ0FBQyxDQUFDLEdBQUcxdkIsSUFBSXFELEVBQUVsRSxPQUFPLE9BQU80RCxFQUFFSyxFQUFFdXNCLEdBQUdtRixJQUFHTixHQUFHcHhCLEVBQUVwRCxHQUFHa0MsRUFBRSxHQUFHLE9BQU95dEIsRUFBRSxDQUFDLEtBQUszdkIsRUFBRXFELEVBQUVsRSxPQUFPYSxJQUFrQixRQUFkMnZCLEVBQUU3c0IsRUFBRU0sRUFBRUMsRUFBRXJELEdBQUcrQixNQUFja0IsRUFBRW5CLEVBQUU2dEIsRUFBRTFzQixFQUFFakQsR0FBRyxPQUFPbUMsRUFBRUQsRUFBRXl0QixFQUFFeHRCLEVBQUVxWCxRQUFRbVcsRUFBRXh0QixFQUFFd3RCLEdBQWMsT0FBWG1GLElBQUdOLEdBQUdweEIsRUFBRXBELEdBQVVrQyxDQUFDLENBQUMsSUFBSXl0QixFQUFFeHNCLEVBQUVDLEVBQUV1c0IsR0FBRzN2QixFQUFFcUQsRUFBRWxFLE9BQU9hLElBQXNCLFFBQWxCMHZCLEVBQUV3SCxFQUFFdkgsRUFBRXZzQixFQUFFcEQsRUFBRXFELEVBQUVyRCxHQUFHK0IsTUFBY2lCLEdBQUcsT0FBTzBzQixFQUFFM1csV0FBVzRXLEVBQUVqUyxPQUFPLE9BQ3ZmZ1MsRUFBRWh0QixJQUFJMUMsRUFBRTB2QixFQUFFaHRCLEtBQUtPLEVBQUVuQixFQUFFNHRCLEVBQUV6c0IsRUFBRWpELEdBQUcsT0FBT21DLEVBQUVELEVBQUV3dEIsRUFBRXZ0QixFQUFFcVgsUUFBUWtXLEVBQUV2dEIsRUFBRXV0QixHQUF1RCxPQUFwRDFzQixHQUFHMnNCLEVBQUVsdkIsUUFBUSxTQUFTdUMsR0FBRyxPQUFPRSxFQUFFRSxFQUFFSixFQUFFLEdBQUc4eEIsSUFBR04sR0FBR3B4QixFQUFFcEQsR0FBVWtDLENBQUMsQ0FBQyxTQUFTc3RCLEVBQUVwc0IsRUFBRUgsRUFBRUksRUFBRXRCLEdBQUcsSUFBSUcsRUFBRTRLLEVBQUd6SixHQUFHLEdBQUcsbUJBQW9CbkIsRUFBRSxNQUFNM0IsTUFBTWtDLEVBQUUsTUFBa0IsR0FBRyxPQUFmWSxFQUFFbkIsRUFBRW9CLEtBQUtELElBQWMsTUFBTTlDLE1BQU1rQyxFQUFFLE1BQU0sSUFBSSxJQUFJa3RCLEVBQUV6dEIsRUFBRSxLQUFLQyxFQUFFYyxFQUFFakQsRUFBRWlELEVBQUUsRUFBRXlzQixFQUFFLEtBQUtwdEIsRUFBRWUsRUFBRTh6QixPQUFPLE9BQU9oMUIsSUFBSUcsRUFBRTgwQixLQUFLcDNCLElBQUlzQyxFQUFFZSxFQUFFOHpCLE9BQU8sQ0FBQ2gxQixFQUFFdTBCLE1BQU0xMkIsR0FBRzB2QixFQUFFdnRCLEVBQUVBLEVBQUUsTUFBTXV0QixFQUFFdnRCLEVBQUVxWCxRQUFRLElBQUlnVyxFQUFFeUgsRUFBRTd6QixFQUFFakIsRUFBRUcsRUFBRWtOLE1BQU16TixHQUFHLEdBQUcsT0FBT3l0QixFQUFFLENBQUMsT0FBT3J0QixJQUFJQSxFQUFFdXRCLEdBQUcsS0FBSyxDQUFDMXNCLEdBQUdiLEdBQUcsT0FBT3F0QixFQUFFelcsV0FBVzdWLEVBQUVFLEVBQUVqQixHQUFHYyxFQUFFbkIsRUFBRTB0QixFQUFFdnNCLEVBQUVqRCxHQUFHLE9BQU8ydkIsRUFBRXp0QixFQUFFc3RCLEVBQUVHLEVBQUVuVyxRQUFRZ1csRUFBRUcsRUFBRUgsRUFBRXJ0QixFQUFFdXRCLENBQUMsQ0FBQyxHQUFHcHRCLEVBQUU4MEIsS0FBSyxPQUFPcjBCLEVBQUVLLEVBQ3pmakIsR0FBRzJ5QixJQUFHTixHQUFHcHhCLEVBQUVwRCxHQUFHa0MsRUFBRSxHQUFHLE9BQU9DLEVBQUUsQ0FBQyxNQUFNRyxFQUFFODBCLEtBQUtwM0IsSUFBSXNDLEVBQUVlLEVBQUU4ekIsT0FBd0IsUUFBakI3MEIsRUFBRVEsRUFBRU0sRUFBRWQsRUFBRWtOLE1BQU16TixNQUFja0IsRUFBRW5CLEVBQUVRLEVBQUVXLEVBQUVqRCxHQUFHLE9BQU8ydkIsRUFBRXp0QixFQUFFSSxFQUFFcXRCLEVBQUVuVyxRQUFRbFgsRUFBRXF0QixFQUFFcnRCLEdBQWMsT0FBWHd5QixJQUFHTixHQUFHcHhCLEVBQUVwRCxHQUFVa0MsQ0FBQyxDQUFDLElBQUlDLEVBQUVnQixFQUFFQyxFQUFFakIsSUFBSUcsRUFBRTgwQixLQUFLcDNCLElBQUlzQyxFQUFFZSxFQUFFOHpCLE9BQTRCLFFBQXJCNzBCLEVBQUU0MEIsRUFBRS8wQixFQUFFaUIsRUFBRXBELEVBQUVzQyxFQUFFa04sTUFBTXpOLE1BQWNpQixHQUFHLE9BQU9WLEVBQUV5VyxXQUFXNVcsRUFBRXViLE9BQU8sT0FBT3BiLEVBQUVJLElBQUkxQyxFQUFFc0MsRUFBRUksS0FBS08sRUFBRW5CLEVBQUVRLEVBQUVXLEVBQUVqRCxHQUFHLE9BQU8ydkIsRUFBRXp0QixFQUFFSSxFQUFFcXRCLEVBQUVuVyxRQUFRbFgsRUFBRXF0QixFQUFFcnRCLEdBQXVELE9BQXBEVSxHQUFHYixFQUFFMUIsUUFBUSxTQUFTdUMsR0FBRyxPQUFPRSxFQUFFRSxFQUFFSixFQUFFLEdBQUc4eEIsSUFBR04sR0FBR3B4QixFQUFFcEQsR0FBVWtDLENBQUMsQ0FHM1QsT0FINFQsU0FBU3V0QixFQUFFenNCLEVBQUVHLEVBQUVyQixFQUFFdUIsR0FBa0YsR0FBL0UsaUJBQWtCdkIsR0FBRyxPQUFPQSxHQUFHQSxFQUFFMkIsT0FBT3dJLEdBQUksT0FBT25LLEVBQUVZLE1BQU1aLEVBQUVBLEVBQUU0QixNQUFNdU4sVUFBYSxpQkFBa0JuUCxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxPQUFPQSxFQUFFMEIsVUFBVSxLQUFLdUksRUFBRy9JLEVBQUUsQ0FBQyxJQUFJLElBQUlqQixFQUM3aEJELEVBQUVZLElBQUlSLEVBQUVpQixFQUFFLE9BQU9qQixHQUFHLENBQUMsR0FBR0EsRUFBRVEsTUFBTVgsRUFBRSxDQUFVLElBQVRBLEVBQUVELEVBQUUyQixRQUFZd0ksR0FBSSxHQUFHLElBQUkvSixFQUFFK0wsSUFBSSxDQUFDbEwsRUFBRUMsRUFBRWQsRUFBRXNYLFVBQVNyVyxFQUFFQyxFQUFFbEIsRUFBRUosRUFBRTRCLE1BQU11TixXQUFZK0gsT0FBT2hXLEVBQUVBLEVBQUVHLEVBQUUsTUFBTUgsQ0FBQyxPQUFPLEdBQUdkLEVBQUVnekIsY0FBY256QixHQUFHLGlCQUFrQkEsR0FBRyxPQUFPQSxHQUFHQSxFQUFFeUIsV0FBV2tKLEdBQUk4cEIsR0FBR3owQixLQUFLRyxFQUFFdUIsS0FBSyxDQUFDVixFQUFFQyxFQUFFZCxFQUFFc1gsVUFBU3JXLEVBQUVDLEVBQUVsQixFQUFFSixFQUFFNEIsUUFBU2YsSUFBSXd6QixHQUFHbnpCLEVBQUVkLEVBQUVKLEdBQUdxQixFQUFFNlYsT0FBT2hXLEVBQUVBLEVBQUVHLEVBQUUsTUFBTUgsQ0FBQyxDQUFDRCxFQUFFQyxFQUFFZCxHQUFHLEtBQUssQ0FBTWdCLEVBQUVGLEVBQUVkLEdBQUdBLEVBQUVBLEVBQUVzWCxPQUFPLENBQUMxWCxFQUFFMkIsT0FBT3dJLElBQUk5SSxFQUFFNnpCLEdBQUdsMUIsRUFBRTRCLE1BQU11TixTQUFTak8sRUFBRTB5QixLQUFLcnlCLEVBQUV2QixFQUFFWSxNQUFPc1csT0FBT2hXLEVBQUVBLEVBQUVHLEtBQUlFLEVBQUV3ekIsR0FBRy8wQixFQUFFMkIsS0FBSzNCLEVBQUVZLElBQUlaLEVBQUU0QixNQUFNLEtBQUtWLEVBQUUweUIsS0FBS3J5QixJQUFLVixJQUFJd3pCLEdBQUduekIsRUFBRUcsRUFBRXJCLEdBQUd1QixFQUFFMlYsT0FBT2hXLEVBQUVBLEVBQUVLLEVBQUUsQ0FBQyxPQUFPSixFQUFFRCxHQUFHLEtBQUtnSixFQUFHaEosRUFBRSxDQUFDLElBQUlkLEVBQUVKLEVBQUVZLElBQUksT0FDemZTLEdBQUcsQ0FBQyxHQUFHQSxFQUFFVCxNQUFNUixFQUFFLElBQUcsSUFBSWlCLEVBQUU4SyxLQUFLOUssRUFBRXNVLFVBQVU2RyxnQkFBZ0J4YyxFQUFFd2MsZUFBZW5iLEVBQUVzVSxVQUFVcWYsaUJBQWlCaDFCLEVBQUVnMUIsZUFBZSxDQUFDL3pCLEVBQUVDLEVBQUVHLEVBQUVxVyxVQUFTclcsRUFBRUMsRUFBRUQsRUFBRXJCLEVBQUVtUCxVQUFVLEtBQU0rSCxPQUFPaFcsRUFBRUEsRUFBRUcsRUFBRSxNQUFNSCxDQUFDLENBQU1ELEVBQUVDLEVBQUVHLEdBQUcsS0FBSyxDQUFNRCxFQUFFRixFQUFFRyxHQUFHQSxFQUFFQSxFQUFFcVcsT0FBTyxFQUFDclcsRUFBRTR6QixHQUFHajFCLEVBQUVrQixFQUFFMHlCLEtBQUtyeUIsSUFBSzJWLE9BQU9oVyxFQUFFQSxFQUFFRyxDQUFDLENBQUMsT0FBT0YsRUFBRUQsR0FBRyxLQUFLMEosRUFBRyxPQUFpQitpQixFQUFFenNCLEVBQUVHLEdBQWRqQixFQUFFSixFQUFFd00sT0FBY3hNLEVBQUV1TSxVQUFVaEwsR0FBRyxHQUFHb04sR0FBRzNPLEdBQUcsT0FBT1EsRUFBRVUsRUFBRUcsRUFBRXJCLEVBQUV1QixHQUFHLEdBQUd5SixFQUFHaEwsR0FBRyxPQUFPMHRCLEVBQUV4c0IsRUFBRUcsRUFBRXJCLEVBQUV1QixHQUFHaXpCLEdBQUd0ekIsRUFBRWxCLEVBQUUsQ0FBQyxNQUFNLGlCQUFrQkEsR0FBRyxLQUFLQSxHQUFHLGlCQUFrQkEsR0FBR0EsRUFBRSxHQUFHQSxFQUFFLE9BQU9xQixHQUFHLElBQUlBLEVBQUU4SyxLQUFLbEwsRUFBRUMsRUFBRUcsRUFBRXFXLFVBQVNyVyxFQUFFQyxFQUFFRCxFQUFFckIsSUFBS2tYLE9BQU9oVyxFQUFFQSxFQUFFRyxJQUNuZkosRUFBRUMsRUFBRUcsSUFBR0EsRUFBRXl6QixHQUFHOTBCLEVBQUVrQixFQUFFMHlCLEtBQUtyeUIsSUFBSzJWLE9BQU9oVyxFQUFFQSxFQUFFRyxHQUFHRixFQUFFRCxJQUFJRCxFQUFFQyxFQUFFRyxFQUFFLENBQVMsQ0FBQyxJQUFJazBCLEdBQUdaLElBQUcsR0FBSWEsR0FBR2IsSUFBRyxHQUFJYyxHQUFHakYsR0FBRyxNQUFNa0YsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxLQUFLRCxHQUFHRCxHQUFHRCxHQUFHLElBQUksQ0FBQyxTQUFTSSxHQUFHNTBCLEdBQUcsSUFBSUUsRUFBRXEwQixHQUFHM3pCLFFBQVEydUIsR0FBRWdGLElBQUl2MEIsRUFBRTYwQixjQUFjMzBCLENBQUMsQ0FBQyxTQUFTNDBCLEdBQUc5MEIsRUFBRUUsRUFBRUgsR0FBRyxLQUFLLE9BQU9DLEdBQUcsQ0FBQyxJQUFJRyxFQUFFSCxFQUFFK1YsVUFBK0gsSUFBcEgvVixFQUFFKzBCLFdBQVc3MEIsS0FBS0EsR0FBR0YsRUFBRSswQixZQUFZNzBCLEVBQUUsT0FBT0MsSUFBSUEsRUFBRTQwQixZQUFZNzBCLElBQUksT0FBT0MsSUFBSUEsRUFBRTQwQixXQUFXNzBCLEtBQUtBLElBQUlDLEVBQUU0MEIsWUFBWTcwQixHQUFNRixJQUFJRCxFQUFFLE1BQU1DLEVBQUVBLEVBQUVnVyxNQUFNLENBQUMsQ0FDblosU0FBU2dmLEdBQUdoMUIsRUFBRUUsR0FBR3MwQixHQUFHeDBCLEVBQUUwMEIsR0FBR0QsR0FBRyxLQUFzQixRQUFqQnowQixFQUFFQSxFQUFFaTFCLGVBQXVCLE9BQU9qMUIsRUFBRWsxQixlQUFlLEtBQUtsMUIsRUFBRW0xQixNQUFNajFCLEtBQUtrMUIsSUFBRyxHQUFJcDFCLEVBQUVrMUIsYUFBYSxLQUFLLENBQUMsU0FBU0csR0FBR3IxQixHQUFHLElBQUlFLEVBQUVGLEVBQUU2MEIsY0FBYyxHQUFHSCxLQUFLMTBCLEVBQUUsR0FBR0EsRUFBRSxDQUFDczFCLFFBQVF0MUIsRUFBRXUxQixjQUFjcjFCLEVBQUVpMEIsS0FBSyxNQUFNLE9BQU9NLEdBQUcsQ0FBQyxHQUFHLE9BQU9ELEdBQUcsTUFBTWozQixNQUFNa0MsRUFBRSxNQUFNZzFCLEdBQUd6MEIsRUFBRXcwQixHQUFHUyxhQUFhLENBQUNFLE1BQU0sRUFBRUQsYUFBYWwxQixFQUFFLE1BQU15MEIsR0FBR0EsR0FBR04sS0FBS24wQixFQUFFLE9BQU9FLENBQUMsQ0FBQyxJQUFJczFCLEdBQUcsS0FBSyxTQUFTQyxHQUFHejFCLEdBQUcsT0FBT3cxQixHQUFHQSxHQUFHLENBQUN4MUIsR0FBR3cxQixHQUFHMTRCLEtBQUtrRCxFQUFFLENBQ3ZZLFNBQVMwMUIsR0FBRzExQixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLElBQUlDLEVBQUVGLEVBQUV5MUIsWUFBK0UsT0FBbkUsT0FBT3YxQixHQUFHTCxFQUFFbzBCLEtBQUtwMEIsRUFBRTAxQixHQUFHdjFCLEtBQUtILEVBQUVvMEIsS0FBSy96QixFQUFFK3pCLEtBQUsvekIsRUFBRSt6QixLQUFLcDBCLEdBQUdHLEVBQUV5MUIsWUFBWTUxQixFQUFTNjFCLEdBQUc1MUIsRUFBRUcsRUFBRSxDQUFDLFNBQVN5MUIsR0FBRzUxQixFQUFFRSxHQUFHRixFQUFFbTFCLE9BQU9qMUIsRUFBRSxJQUFJSCxFQUFFQyxFQUFFK1YsVUFBcUMsSUFBM0IsT0FBT2hXLElBQUlBLEVBQUVvMUIsT0FBT2oxQixHQUFHSCxFQUFFQyxFQUFNQSxFQUFFQSxFQUFFZ1csT0FBTyxPQUFPaFcsR0FBR0EsRUFBRSswQixZQUFZNzBCLEVBQWdCLFFBQWRILEVBQUVDLEVBQUUrVixhQUFxQmhXLEVBQUVnMUIsWUFBWTcwQixHQUFHSCxFQUFFQyxFQUFFQSxFQUFFQSxFQUFFZ1csT0FBTyxPQUFPLElBQUlqVyxFQUFFa0wsSUFBSWxMLEVBQUUwVSxVQUFVLElBQUksQ0FBQyxJQUFJb2hCLElBQUcsRUFBRyxTQUFTQyxHQUFHOTFCLEdBQUdBLEVBQUUrMUIsWUFBWSxDQUFDQyxVQUFVaDJCLEVBQUVtVyxjQUFjOGYsZ0JBQWdCLEtBQUtDLGVBQWUsS0FBS0MsT0FBTyxDQUFDQyxRQUFRLEtBQUtULFlBQVksS0FBS1IsTUFBTSxHQUFHa0IsUUFBUSxLQUFLLENBQy9lLFNBQVNDLEdBQUd0MkIsRUFBRUUsR0FBR0YsRUFBRUEsRUFBRSsxQixZQUFZNzFCLEVBQUU2MUIsY0FBYy8xQixJQUFJRSxFQUFFNjFCLFlBQVksQ0FBQ0MsVUFBVWgyQixFQUFFZzJCLFVBQVVDLGdCQUFnQmoyQixFQUFFaTJCLGdCQUFnQkMsZUFBZWwyQixFQUFFazJCLGVBQWVDLE9BQU9uMkIsRUFBRW0yQixPQUFPRSxRQUFRcjJCLEVBQUVxMkIsU0FBUyxDQUFDLFNBQVNFLEdBQUd2MkIsRUFBRUUsR0FBRyxNQUFNLENBQUNzMkIsVUFBVXgyQixFQUFFeTJCLEtBQUt2MkIsRUFBRStLLElBQUksRUFBRXhPLFFBQVEsS0FBS2k2QixTQUFTLEtBQUt2QyxLQUFLLEtBQUssQ0FDdFIsU0FBU3dDLEdBQUczMkIsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFSCxFQUFFKzFCLFlBQVksR0FBRyxPQUFPNTFCLEVBQUUsT0FBTyxLQUFnQixHQUFYQSxFQUFFQSxFQUFFZzJCLE9BQWlCLEVBQUZTLEdBQUssQ0FBQyxJQUFJeDJCLEVBQUVELEVBQUVpMkIsUUFBK0QsT0FBdkQsT0FBT2gyQixFQUFFRixFQUFFaTBCLEtBQUtqMEIsR0FBR0EsRUFBRWkwQixLQUFLL3pCLEVBQUUrekIsS0FBSy96QixFQUFFK3pCLEtBQUtqMEIsR0FBR0MsRUFBRWkyQixRQUFRbDJCLEVBQVMwMUIsR0FBRzUxQixFQUFFRCxFQUFFLENBQW9GLE9BQW5FLFFBQWhCSyxFQUFFRCxFQUFFdzFCLGNBQXNCejFCLEVBQUVpMEIsS0FBS2owQixFQUFFdTFCLEdBQUd0MUIsS0FBS0QsRUFBRWkwQixLQUFLL3pCLEVBQUUrekIsS0FBSy96QixFQUFFK3pCLEtBQUtqMEIsR0FBR0MsRUFBRXcxQixZQUFZejFCLEVBQVMwMUIsR0FBRzUxQixFQUFFRCxFQUFFLENBQUMsU0FBUzgyQixHQUFHNzJCLEVBQUVFLEVBQUVILEdBQW1CLEdBQUcsUUFBbkJHLEVBQUVBLEVBQUU2MUIsZUFBMEI3MUIsRUFBRUEsRUFBRWkyQixPQUFjLFFBQUZwMkIsR0FBWSxDQUFDLElBQUlJLEVBQUVELEVBQUVpMUIsTUFBd0JwMUIsR0FBbEJJLEdBQUdILEVBQUU0WSxhQUFrQjFZLEVBQUVpMUIsTUFBTXAxQixFQUFFd1osR0FBR3ZaLEVBQUVELEVBQUUsQ0FBQyxDQUNyWixTQUFTKzJCLEdBQUc5MkIsRUFBRUUsR0FBRyxJQUFJSCxFQUFFQyxFQUFFKzFCLFlBQVk1MUIsRUFBRUgsRUFBRStWLFVBQVUsR0FBRyxPQUFPNVYsR0FBb0JKLEtBQWhCSSxFQUFFQSxFQUFFNDFCLGFBQW1CLENBQUMsSUFBSTMxQixFQUFFLEtBQUt0QixFQUFFLEtBQXlCLEdBQUcsUUFBdkJpQixFQUFFQSxFQUFFazJCLGlCQUE0QixDQUFDLEVBQUUsQ0FBQyxJQUFJaDJCLEVBQUUsQ0FBQ3UyQixVQUFVejJCLEVBQUV5MkIsVUFBVUMsS0FBSzEyQixFQUFFMDJCLEtBQUt4ckIsSUFBSWxMLEVBQUVrTCxJQUFJeE8sUUFBUXNELEVBQUV0RCxRQUFRaTZCLFNBQVMzMkIsRUFBRTIyQixTQUFTdkMsS0FBSyxNQUFNLE9BQU9yMUIsRUFBRXNCLEVBQUV0QixFQUFFbUIsRUFBRW5CLEVBQUVBLEVBQUVxMUIsS0FBS2wwQixFQUFFRixFQUFFQSxFQUFFbzBCLElBQUksT0FBTyxPQUFPcDBCLEdBQUcsT0FBT2pCLEVBQUVzQixFQUFFdEIsRUFBRW9CLEVBQUVwQixFQUFFQSxFQUFFcTFCLEtBQUtqMEIsQ0FBQyxNQUFNRSxFQUFFdEIsRUFBRW9CLEVBQWlILE9BQS9HSCxFQUFFLENBQUNpMkIsVUFBVTcxQixFQUFFNjFCLFVBQVVDLGdCQUFnQjcxQixFQUFFODFCLGVBQWVwM0IsRUFBRXEzQixPQUFPaDJCLEVBQUVnMkIsT0FBT0UsUUFBUWwyQixFQUFFazJCLGNBQVNyMkIsRUFBRSsxQixZQUFZaDJCLEVBQVEsQ0FBb0IsUUFBbkJDLEVBQUVELEVBQUVtMkIsZ0JBQXdCbjJCLEVBQUVrMkIsZ0JBQWdCLzFCLEVBQUVGLEVBQUVtMEIsS0FDbmZqMEIsRUFBRUgsRUFBRW0yQixlQUFlaDJCLENBQUMsQ0FDcEIsU0FBUzYyQixHQUFHLzJCLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSUMsRUFBRUosRUFBRSsxQixZQUFZRixJQUFHLEVBQUcsSUFBSS8yQixFQUFFc0IsRUFBRTYxQixnQkFBZ0JoMkIsRUFBRUcsRUFBRTgxQixlQUFlNzFCLEVBQUVELEVBQUUrMUIsT0FBT0MsUUFBUSxHQUFHLE9BQU8vMUIsRUFBRSxDQUFDRCxFQUFFKzFCLE9BQU9DLFFBQVEsS0FBSyxJQUFJcjNCLEVBQUVzQixFQUFFbkIsRUFBRUgsRUFBRW8xQixLQUFLcDFCLEVBQUVvMUIsS0FBSyxLQUFLLE9BQU9sMEIsRUFBRW5CLEVBQUVJLEVBQUVlLEVBQUVrMEIsS0FBS2oxQixFQUFFZSxFQUFFbEIsRUFBRSxJQUFJSSxFQUFFYSxFQUFFK1YsVUFBVSxPQUFPNVcsSUFBb0JrQixHQUFoQmxCLEVBQUVBLEVBQUU0MkIsYUFBZ0JHLGtCQUFtQmoyQixJQUFJLE9BQU9JLEVBQUVsQixFQUFFODJCLGdCQUFnQi8yQixFQUFFbUIsRUFBRTh6QixLQUFLajFCLEVBQUVDLEVBQUUrMkIsZUFBZW4zQixFQUFHLENBQUMsR0FBRyxPQUFPRCxFQUFFLENBQUMsSUFBSWdCLEVBQUVNLEVBQUU0MUIsVUFBNkIsSUFBbkIvMUIsRUFBRSxFQUFFZCxFQUFFRCxFQUFFSCxFQUFFLEtBQUtzQixFQUFFdkIsSUFBSSxDQUFDLElBQUltMUIsRUFBRTV6QixFQUFFbzJCLEtBQUt2QyxFQUFFN3pCLEVBQUVtMkIsVUFBVSxJQUFJcjJCLEVBQUU4ekIsS0FBS0EsRUFBRSxDQUFDLE9BQU85MEIsSUFBSUEsRUFBRUEsRUFBRWcxQixLQUFLLENBQUNxQyxVQUFVdEMsRUFBRXVDLEtBQUssRUFBRXhyQixJQUFJNUssRUFBRTRLLElBQUl4TyxRQUFRNEQsRUFBRTVELFFBQVFpNkIsU0FBU3IyQixFQUFFcTJCLFNBQ3ZmdkMsS0FBSyxPQUFPbjBCLEVBQUUsQ0FBQyxJQUFJVixFQUFFVSxFQUFFd3NCLEVBQUVuc0IsRUFBVSxPQUFSNHpCLEVBQUUvekIsRUFBRWcwQixFQUFFbjBCLEVBQVN5c0IsRUFBRXZoQixLQUFLLEtBQUssRUFBYyxHQUFHLG1CQUFmM0wsRUFBRWt0QixFQUFFL3ZCLFNBQWlDLENBQUNxRCxFQUFFUixFQUFFZ0IsS0FBSzR6QixFQUFFcDBCLEVBQUVtMEIsR0FBRyxNQUFNajBCLENBQUMsQ0FBQ0YsRUFBRVIsRUFBRSxNQUFNVSxFQUFFLEtBQUssRUFBRVYsRUFBRTJXLE9BQWUsTUFBVDNXLEVBQUUyVyxNQUFhLElBQUksS0FBSyxFQUFzRCxHQUFHLE9BQTNDZ2UsRUFBRSxtQkFBZDMwQixFQUFFa3RCLEVBQUUvdkIsU0FBZ0M2QyxFQUFFZ0IsS0FBSzR6QixFQUFFcDBCLEVBQUVtMEIsR0FBRzMwQixHQUEwQixNQUFNVSxFQUFFRixFQUFFa0ssRUFBRSxDQUFDLEVBQUVsSyxFQUFFbTBCLEdBQUcsTUFBTWowQixFQUFFLEtBQUssRUFBRTYxQixJQUFHLEVBQUcsQ0FBQyxPQUFPeDFCLEVBQUVxMkIsVUFBVSxJQUFJcjJCLEVBQUVvMkIsT0FBT3oyQixFQUFFaVcsT0FBTyxHQUFlLFFBQVpnZSxFQUFFN3pCLEVBQUVpMkIsU0FBaUJqMkIsRUFBRWkyQixRQUFRLENBQUNoMkIsR0FBRzR6QixFQUFFbjNCLEtBQUt1RCxHQUFHLE1BQU02ekIsRUFBRSxDQUFDc0MsVUFBVXRDLEVBQUV1QyxLQUFLeEMsRUFBRWhwQixJQUFJNUssRUFBRTRLLElBQUl4TyxRQUFRNEQsRUFBRTVELFFBQVFpNkIsU0FBU3IyQixFQUFFcTJCLFNBQVN2QyxLQUFLLE1BQU0sT0FBT2gxQixHQUFHRCxFQUFFQyxFQUFFKzBCLEVBQUVuMUIsRUFBRWUsR0FBR1gsRUFBRUEsRUFBRWcxQixLQUFLRCxFQUFFajBCLEdBQUdnMEIsRUFDM2UsR0FBRyxRQUFaNXpCLEVBQUVBLEVBQUU4ekIsTUFBaUIsSUFBc0IsUUFBbkI5ekIsRUFBRUQsRUFBRSsxQixPQUFPQyxTQUFpQixNQUFlLzFCLEdBQUo0ekIsRUFBRTV6QixHQUFNOHpCLEtBQUtGLEVBQUVFLEtBQUssS0FBSy96QixFQUFFODFCLGVBQWVqQyxFQUFFN3pCLEVBQUUrMUIsT0FBT0MsUUFBUSxLQUFJLENBQXNHLEdBQTVGLE9BQU9qM0IsSUFBSUosRUFBRWUsR0FBR00sRUFBRTQxQixVQUFVajNCLEVBQUVxQixFQUFFNjFCLGdCQUFnQi8yQixFQUFFa0IsRUFBRTgxQixlQUFlLzJCLEVBQTRCLFFBQTFCZSxFQUFFRSxFQUFFKzFCLE9BQU9SLGFBQXdCLENBQUN2MUIsRUFBRUYsRUFBRSxHQUFHRCxHQUFHRyxFQUFFcTJCLEtBQUtyMkIsRUFBRUEsRUFBRSt6QixXQUFXL3pCLElBQUlGLEVBQUUsTUFBTSxPQUFPcEIsSUFBSXNCLEVBQUUrMUIsT0FBT2hCLE1BQU0sR0FBRzZCLElBQUkvMkIsRUFBRUQsRUFBRW0xQixNQUFNbDFCLEVBQUVELEVBQUVtVyxjQUFjclcsQ0FBQyxDQUFDLENBQzlWLFNBQVNtM0IsR0FBR2ozQixFQUFFRSxFQUFFSCxHQUE4QixHQUEzQkMsRUFBRUUsRUFBRW0yQixRQUFRbjJCLEVBQUVtMkIsUUFBUSxLQUFRLE9BQU9yMkIsRUFBRSxJQUFJRSxFQUFFLEVBQUVBLEVBQUVGLEVBQUU3RCxPQUFPK0QsSUFBSSxDQUFDLElBQUlDLEVBQUVILEVBQUVFLEdBQUdFLEVBQUVELEVBQUV1MkIsU0FBUyxHQUFHLE9BQU90MkIsRUFBRSxDQUFxQixHQUFwQkQsRUFBRXUyQixTQUFTLEtBQUt2MkIsRUFBRUosRUFBSyxtQkFBb0JLLEVBQUUsTUFBTTdDLE1BQU1rQyxFQUFFLElBQUlXLElBQUlBLEVBQUVFLEtBQUtILEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSsyQixHQUFHLENBQUMsRUFBRUMsR0FBRzdILEdBQUc0SCxJQUFJRSxHQUFHOUgsR0FBRzRILElBQUlHLEdBQUcvSCxHQUFHNEgsSUFBSSxTQUFTSSxHQUFHdDNCLEdBQUcsR0FBR0EsSUFBSWszQixHQUFHLE1BQU0zNUIsTUFBTWtDLEVBQUUsTUFBTSxPQUFPTyxDQUFDLENBQ25TLFNBQVN1M0IsR0FBR3YzQixFQUFFRSxHQUF5QyxPQUF0Q3N2QixHQUFFNkgsR0FBR24zQixHQUFHc3ZCLEdBQUU0SCxHQUFHcDNCLEdBQUd3dkIsR0FBRTJILEdBQUdELElBQUlsM0IsRUFBRUUsRUFBRWtQLFVBQW1CLEtBQUssRUFBRSxLQUFLLEdBQUdsUCxHQUFHQSxFQUFFQSxFQUFFbW9CLGlCQUFpQm5vQixFQUFFd08sYUFBYUgsR0FBRyxLQUFLLElBQUksTUFBTSxRQUFrRXJPLEVBQUVxTyxHQUFyQ3JPLEdBQXZCRixFQUFFLElBQUlBLEVBQUVFLEVBQUVpVSxXQUFXalUsR0FBTXdPLGNBQWMsS0FBSzFPLEVBQUVBLEVBQUV3M0IsU0FBa0JqSSxHQUFFNEgsSUFBSTNILEdBQUUySCxHQUFHajNCLEVBQUUsQ0FBQyxTQUFTdTNCLEtBQUtsSSxHQUFFNEgsSUFBSTVILEdBQUU2SCxJQUFJN0gsR0FBRThILEdBQUcsQ0FBQyxTQUFTSyxHQUFHMTNCLEdBQUdzM0IsR0FBR0QsR0FBR3oyQixTQUFTLElBQUlWLEVBQUVvM0IsR0FBR0gsR0FBR3YyQixTQUFhYixFQUFFd08sR0FBR3JPLEVBQUVGLEVBQUVTLE1BQU1QLElBQUlILElBQUl5dkIsR0FBRTRILEdBQUdwM0IsR0FBR3d2QixHQUFFMkgsR0FBR3AzQixHQUFHLENBQUMsU0FBUzQzQixHQUFHMzNCLEdBQUdvM0IsR0FBR3gyQixVQUFVWixJQUFJdXZCLEdBQUU0SCxJQUFJNUgsR0FBRTZILElBQUksQ0FBQyxJQUFJUSxHQUFFdEksR0FBRyxHQUN4WixTQUFTdUksR0FBRzczQixHQUFHLElBQUksSUFBSUUsRUFBRUYsRUFBRSxPQUFPRSxHQUFHLENBQUMsR0FBRyxLQUFLQSxFQUFFK0ssSUFBSSxDQUFDLElBQUlsTCxFQUFFRyxFQUFFaVcsY0FBYyxHQUFHLE9BQU9wVyxJQUFtQixRQUFmQSxFQUFFQSxFQUFFcVcsYUFBcUIsT0FBT3JXLEVBQUVpRSxNQUFNLE9BQU9qRSxFQUFFaUUsTUFBTSxPQUFPOUQsQ0FBQyxNQUFNLEdBQUcsS0FBS0EsRUFBRStLLFVBQUssSUFBUy9LLEVBQUU0eUIsY0FBY2dGLGFBQWEsR0FBZ0IsSUFBUjUzQixFQUFFK1YsTUFBVyxPQUFPL1YsT0FBTyxHQUFHLE9BQU9BLEVBQUVxVyxNQUFNLENBQUNyVyxFQUFFcVcsTUFBTVAsT0FBTzlWLEVBQUVBLEVBQUVBLEVBQUVxVyxNQUFNLFFBQVEsQ0FBQyxHQUFHclcsSUFBSUYsRUFBRSxNQUFNLEtBQUssT0FBT0UsRUFBRXNXLFNBQVMsQ0FBQyxHQUFHLE9BQU90VyxFQUFFOFYsUUFBUTlWLEVBQUU4VixTQUFTaFcsRUFBRSxPQUFPLEtBQUtFLEVBQUVBLEVBQUU4VixNQUFNLENBQUM5VixFQUFFc1csUUFBUVIsT0FBTzlWLEVBQUU4VixPQUFPOVYsRUFBRUEsRUFBRXNXLE9BQU8sQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJdWhCLEdBQUcsR0FDcmMsU0FBU0MsS0FBSyxJQUFJLElBQUloNEIsRUFBRSxFQUFFQSxFQUFFKzNCLEdBQUc1N0IsT0FBTzZELElBQUkrM0IsR0FBRy8zQixHQUFHaTRCLDhCQUE4QixLQUFLRixHQUFHNTdCLE9BQU8sQ0FBQyxDQUFDLElBQUkrN0IsR0FBR3B2QixFQUFHcXZCLHVCQUF1QkMsR0FBR3R2QixFQUFHaVQsd0JBQXdCc2MsR0FBRyxFQUFFQyxHQUFFLEtBQUtDLEdBQUUsS0FBS0MsR0FBRSxLQUFLQyxJQUFHLEVBQUdDLElBQUcsRUFBR0MsR0FBRyxFQUFFQyxHQUFHLEVBQUUsU0FBU0MsS0FBSSxNQUFNdDdCLE1BQU1rQyxFQUFFLEtBQU0sQ0FBQyxTQUFTcTVCLEdBQUc5NEIsRUFBRUUsR0FBRyxHQUFHLE9BQU9BLEVBQUUsT0FBTSxFQUFHLElBQUksSUFBSUgsRUFBRSxFQUFFQSxFQUFFRyxFQUFFL0QsUUFBUTRELEVBQUVDLEVBQUU3RCxPQUFPNEQsSUFBSSxJQUFJb25CLEdBQUdubkIsRUFBRUQsR0FBR0csRUFBRUgsSUFBSSxPQUFNLEVBQUcsT0FBTSxDQUFFLENBQ2hXLFNBQVNnNUIsR0FBRy80QixFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxFQUFFdEIsR0FBeUgsR0FBdEh1NUIsR0FBR3Y1QixFQUFFdzVCLEdBQUVwNEIsRUFBRUEsRUFBRWlXLGNBQWMsS0FBS2pXLEVBQUU2MUIsWUFBWSxLQUFLNzFCLEVBQUVpMUIsTUFBTSxFQUFFK0MsR0FBR3QzQixRQUFRLE9BQU9aLEdBQUcsT0FBT0EsRUFBRW1XLGNBQWM2aUIsR0FBR0MsR0FBR2o1QixFQUFFRCxFQUFFSSxFQUFFQyxHQUFNczRCLEdBQUcsQ0FBQzU1QixFQUFFLEVBQUUsRUFBRSxDQUFZLEdBQVg0NUIsSUFBRyxFQUFHQyxHQUFHLEVBQUssSUFBSTc1QixFQUFFLE1BQU12QixNQUFNa0MsRUFBRSxNQUFNWCxHQUFHLEVBQUUwNUIsR0FBRUQsR0FBRSxLQUFLcjRCLEVBQUU2MUIsWUFBWSxLQUFLbUMsR0FBR3QzQixRQUFRczRCLEdBQUdsNUIsRUFBRUQsRUFBRUksRUFBRUMsRUFBRSxPQUFPczRCLEdBQUcsQ0FBK0QsR0FBOURSLEdBQUd0M0IsUUFBUXU0QixHQUFHajVCLEVBQUUsT0FBT3E0QixJQUFHLE9BQU9BLEdBQUVwRSxLQUFLa0UsR0FBRyxFQUFFRyxHQUFFRCxHQUFFRCxHQUFFLEtBQUtHLElBQUcsRUFBTXY0QixFQUFFLE1BQU0zQyxNQUFNa0MsRUFBRSxNQUFNLE9BQU9PLENBQUMsQ0FBQyxTQUFTbzVCLEtBQUssSUFBSXA1QixFQUFFLElBQUkyNEIsR0FBUSxPQUFMQSxHQUFHLEVBQVMzNEIsQ0FBQyxDQUMvWSxTQUFTcTVCLEtBQUssSUFBSXI1QixFQUFFLENBQUNtVyxjQUFjLEtBQUs2ZixVQUFVLEtBQUtzRCxVQUFVLEtBQUsvOEIsTUFBTSxLQUFLNDNCLEtBQUssTUFBOEMsT0FBeEMsT0FBT3FFLEdBQUVGLEdBQUVuaUIsY0FBY3FpQixHQUFFeDRCLEVBQUV3NEIsR0FBRUEsR0FBRXJFLEtBQUtuMEIsRUFBU3c0QixFQUFDLENBQUMsU0FBU2UsS0FBSyxHQUFHLE9BQU9oQixHQUFFLENBQUMsSUFBSXY0QixFQUFFczRCLEdBQUV2aUIsVUFBVS9WLEVBQUUsT0FBT0EsRUFBRUEsRUFBRW1XLGNBQWMsSUFBSSxNQUFNblcsRUFBRXU0QixHQUFFcEUsS0FBSyxJQUFJajBCLEVBQUUsT0FBT3M0QixHQUFFRixHQUFFbmlCLGNBQWNxaUIsR0FBRXJFLEtBQUssR0FBRyxPQUFPajBCLEVBQUVzNEIsR0FBRXQ0QixFQUFFcTRCLEdBQUV2NEIsTUFBTSxDQUFDLEdBQUcsT0FBT0EsRUFBRSxNQUFNekMsTUFBTWtDLEVBQUUsTUFBVU8sRUFBRSxDQUFDbVcsZUFBUG9pQixHQUFFdjRCLEdBQXFCbVcsY0FBYzZmLFVBQVV1QyxHQUFFdkMsVUFBVXNELFVBQVVmLEdBQUVlLFVBQVUvOEIsTUFBTWc4QixHQUFFaDhCLE1BQU00M0IsS0FBSyxNQUFNLE9BQU9xRSxHQUFFRixHQUFFbmlCLGNBQWNxaUIsR0FBRXg0QixFQUFFdzRCLEdBQUVBLEdBQUVyRSxLQUFLbjBCLENBQUMsQ0FBQyxPQUFPdzRCLEVBQUMsQ0FDamUsU0FBU2dCLEdBQUd4NUIsRUFBRUUsR0FBRyxNQUFNLG1CQUFvQkEsRUFBRUEsRUFBRUYsR0FBR0UsQ0FBQyxDQUNuRCxTQUFTdTVCLEdBQUd6NUIsR0FBRyxJQUFJRSxFQUFFcTVCLEtBQUt4NUIsRUFBRUcsRUFBRTNELE1BQU0sR0FBRyxPQUFPd0QsRUFBRSxNQUFNeEMsTUFBTWtDLEVBQUUsTUFBTU0sRUFBRTI1QixvQkFBb0IxNUIsRUFBRSxJQUFJRyxFQUFFbzRCLEdBQUVuNEIsRUFBRUQsRUFBRW01QixVQUFVeDZCLEVBQUVpQixFQUFFcTJCLFFBQVEsR0FBRyxPQUFPdDNCLEVBQUUsQ0FBQyxHQUFHLE9BQU9zQixFQUFFLENBQUMsSUFBSUgsRUFBRUcsRUFBRSt6QixLQUFLL3pCLEVBQUUrekIsS0FBS3IxQixFQUFFcTFCLEtBQUtyMUIsRUFBRXExQixLQUFLbDBCLENBQUMsQ0FBQ0UsRUFBRW01QixVQUFVbDVCLEVBQUV0QixFQUFFaUIsRUFBRXEyQixRQUFRLElBQUksQ0FBQyxHQUFHLE9BQU9oMkIsRUFBRSxDQUFDdEIsRUFBRXNCLEVBQUUrekIsS0FBS2gwQixFQUFFQSxFQUFFNjFCLFVBQVUsSUFBSTMxQixFQUFFSixFQUFFLEtBQUtsQixFQUFFLEtBQUtHLEVBQUVKLEVBQUUsRUFBRSxDQUFDLElBQUlLLEVBQUVELEVBQUV1M0IsS0FBSyxJQUFJNEIsR0FBR2w1QixLQUFLQSxFQUFFLE9BQU9KLElBQUlBLEVBQUVBLEVBQUVvMUIsS0FBSyxDQUFDc0MsS0FBSyxFQUFFajZCLE9BQU8wQyxFQUFFMUMsT0FBT205QixjQUFjejZCLEVBQUV5NkIsY0FBY0MsV0FBVzE2QixFQUFFMDZCLFdBQVd6RixLQUFLLE9BQU9oMEIsRUFBRWpCLEVBQUV5NkIsY0FBY3o2QixFQUFFMDZCLFdBQVc1NUIsRUFBRUcsRUFBRWpCLEVBQUUxQyxZQUFZLENBQUMsSUFBSXNELEVBQUUsQ0FBQzIyQixLQUFLdDNCLEVBQUUzQyxPQUFPMEMsRUFBRTFDLE9BQU9tOUIsY0FBY3o2QixFQUFFeTZCLGNBQ25nQkMsV0FBVzE2QixFQUFFMDZCLFdBQVd6RixLQUFLLE1BQU0sT0FBT3AxQixHQUFHc0IsRUFBRXRCLEVBQUVlLEVBQUVHLEVBQUVFLEdBQUdwQixFQUFFQSxFQUFFbzFCLEtBQUtyMEIsRUFBRXc0QixHQUFFbkQsT0FBT2gyQixFQUFFNjNCLElBQUk3M0IsQ0FBQyxDQUFDRCxFQUFFQSxFQUFFaTFCLElBQUksT0FBTyxPQUFPajFCLEdBQUdBLElBQUlKLEdBQUcsT0FBT0MsRUFBRWtCLEVBQUVFLEVBQUVwQixFQUFFbzFCLEtBQUs5ekIsRUFBRThtQixHQUFHaG5CLEVBQUVELEVBQUVpVyxpQkFBaUJpZixJQUFHLEdBQUlsMUIsRUFBRWlXLGNBQWNoVyxFQUFFRCxFQUFFODFCLFVBQVUvMUIsRUFBRUMsRUFBRW81QixVQUFVdjZCLEVBQUVnQixFQUFFODVCLGtCQUFrQjE1QixDQUFDLENBQWlCLEdBQUcsUUFBbkJILEVBQUVELEVBQUU0MUIsYUFBd0IsQ0FBQ3YxQixFQUFFSixFQUFFLEdBQUdsQixFQUFFc0IsRUFBRXEyQixLQUFLNkIsR0FBRW5ELE9BQU9yMkIsRUFBRWs0QixJQUFJbDRCLEVBQUVzQixFQUFFQSxFQUFFK3pCLFdBQVcvekIsSUFBSUosRUFBRSxNQUFNLE9BQU9JLElBQUlMLEVBQUVvMUIsTUFBTSxHQUFHLE1BQU0sQ0FBQ2oxQixFQUFFaVcsY0FBY3BXLEVBQUUrNUIsU0FBUyxDQUM5WCxTQUFTQyxHQUFHLzVCLEdBQUcsSUFBSUUsRUFBRXE1QixLQUFLeDVCLEVBQUVHLEVBQUUzRCxNQUFNLEdBQUcsT0FBT3dELEVBQUUsTUFBTXhDLE1BQU1rQyxFQUFFLE1BQU1NLEVBQUUyNUIsb0JBQW9CMTVCLEVBQUUsSUFBSUcsRUFBRUosRUFBRSs1QixTQUFTMTVCLEVBQUVMLEVBQUVxMkIsUUFBUXQzQixFQUFFb0IsRUFBRWlXLGNBQWMsR0FBRyxPQUFPL1YsRUFBRSxDQUFDTCxFQUFFcTJCLFFBQVEsS0FBSyxJQUFJbjJCLEVBQUVHLEVBQUVBLEVBQUUrekIsS0FBSyxHQUFHcjFCLEVBQUVrQixFQUFFbEIsRUFBRW1CLEVBQUV6RCxRQUFReUQsRUFBRUEsRUFBRWswQixXQUFXbDBCLElBQUlHLEdBQUcrbUIsR0FBR3JvQixFQUFFb0IsRUFBRWlXLGlCQUFpQmlmLElBQUcsR0FBSWwxQixFQUFFaVcsY0FBY3JYLEVBQUUsT0FBT29CLEVBQUVvNUIsWUFBWXA1QixFQUFFODFCLFVBQVVsM0IsR0FBR2lCLEVBQUU4NUIsa0JBQWtCLzZCLENBQUMsQ0FBQyxNQUFNLENBQUNBLEVBQUVxQixFQUFFLENBQUMsU0FBUzY1QixLQUFLLENBQ3BXLFNBQVNDLEdBQUdqNkIsRUFBRUUsR0FBRyxJQUFJSCxFQUFFdTRCLEdBQUVuNEIsRUFBRW81QixLQUFLbjVCLEVBQUVGLElBQUlwQixHQUFHcW9CLEdBQUdobkIsRUFBRWdXLGNBQWMvVixHQUFzRSxHQUFuRXRCLElBQUlxQixFQUFFZ1csY0FBYy9WLEVBQUVnMUIsSUFBRyxHQUFJajFCLEVBQUVBLEVBQUU1RCxNQUFNMjlCLEdBQUdDLEdBQUc5TixLQUFLLEtBQUt0c0IsRUFBRUksRUFBRUgsR0FBRyxDQUFDQSxJQUFPRyxFQUFFaTZCLGNBQWNsNkIsR0FBR3BCLEdBQUcsT0FBTzA1QixJQUF1QixFQUFwQkEsR0FBRXJpQixjQUFjbEwsSUFBTSxDQUF1RCxHQUF0RGxMLEVBQUVrVyxPQUFPLEtBQUtva0IsR0FBRyxFQUFFQyxHQUFHak8sS0FBSyxLQUFLdHNCLEVBQUVJLEVBQUVDLEVBQUVGLFFBQUcsRUFBTyxNQUFTLE9BQU9xNkIsR0FBRSxNQUFNaDlCLE1BQU1rQyxFQUFFLE1BQWMsR0FBSDQ0QixJQUFRbUMsR0FBR3o2QixFQUFFRyxFQUFFRSxFQUFFLENBQUMsT0FBT0EsQ0FBQyxDQUFDLFNBQVNvNkIsR0FBR3g2QixFQUFFRSxFQUFFSCxHQUFHQyxFQUFFaVcsT0FBTyxNQUFNalcsRUFBRSxDQUFDbzZCLFlBQVlsNkIsRUFBRXNNLE1BQU16TSxHQUFtQixRQUFoQkcsRUFBRW80QixHQUFFdkMsY0FBc0I3MUIsRUFBRSxDQUFDdTZCLFdBQVcsS0FBS0MsT0FBTyxNQUFNcEMsR0FBRXZDLFlBQVk3MUIsRUFBRUEsRUFBRXc2QixPQUFPLENBQUMxNkIsSUFBZ0IsUUFBWEQsRUFBRUcsRUFBRXc2QixRQUFnQng2QixFQUFFdzZCLE9BQU8sQ0FBQzE2QixHQUFHRCxFQUFFakQsS0FBS2tELEVBQUcsQ0FDbGYsU0FBU3M2QixHQUFHdDZCLEVBQUVFLEVBQUVILEVBQUVJLEdBQUdELEVBQUVzTSxNQUFNek0sRUFBRUcsRUFBRWs2QixZQUFZajZCLEVBQUV3NkIsR0FBR3o2QixJQUFJMDZCLEdBQUc1NkIsRUFBRSxDQUFDLFNBQVNtNkIsR0FBR242QixFQUFFRSxFQUFFSCxHQUFHLE9BQU9BLEVBQUUsV0FBVzQ2QixHQUFHejZCLElBQUkwNkIsR0FBRzU2QixFQUFFLEVBQUUsQ0FBQyxTQUFTMjZCLEdBQUczNkIsR0FBRyxJQUFJRSxFQUFFRixFQUFFbzZCLFlBQVlwNkIsRUFBRUEsRUFBRXdNLE1BQU0sSUFBSSxJQUFJek0sRUFBRUcsSUFBSSxPQUFPaW5CLEdBQUdubkIsRUFBRUQsRUFBRSxDQUFDLE1BQU1JLEdBQUcsT0FBTSxDQUFFLENBQUMsQ0FBQyxTQUFTeTZCLEdBQUc1NkIsR0FBRyxJQUFJRSxFQUFFMDFCLEdBQUc1MUIsRUFBRSxHQUFHLE9BQU9FLEdBQUcyNkIsR0FBRzM2QixFQUFFRixFQUFFLEdBQUcsRUFBRSxDQUNsUSxTQUFTODZCLEdBQUc5NkIsR0FBRyxJQUFJRSxFQUFFbTVCLEtBQThNLE1BQXpNLG1CQUFvQnI1QixJQUFJQSxFQUFFQSxLQUFLRSxFQUFFaVcsY0FBY2pXLEVBQUU4MUIsVUFBVWgyQixFQUFFQSxFQUFFLENBQUNvMkIsUUFBUSxLQUFLVCxZQUFZLEtBQUtSLE1BQU0sRUFBRTJFLFNBQVMsS0FBS0osb0JBQW9CRixHQUFHSyxrQkFBa0I3NUIsR0FBR0UsRUFBRTNELE1BQU15RCxFQUFFQSxFQUFFQSxFQUFFODVCLFNBQVNpQixHQUFHMU8sS0FBSyxLQUFLaU0sR0FBRXQ0QixHQUFTLENBQUNFLEVBQUVpVyxjQUFjblcsRUFBRSxDQUM1UCxTQUFTcTZCLEdBQUdyNkIsRUFBRUUsRUFBRUgsRUFBRUksR0FBOE8sT0FBM09ILEVBQUUsQ0FBQ2lMLElBQUlqTCxFQUFFZzdCLE9BQU85NkIsRUFBRSs2QixRQUFRbDdCLEVBQUVtN0IsS0FBSy82QixFQUFFZzBCLEtBQUssTUFBc0IsUUFBaEJqMEIsRUFBRW80QixHQUFFdkMsY0FBc0I3MUIsRUFBRSxDQUFDdTZCLFdBQVcsS0FBS0MsT0FBTyxNQUFNcEMsR0FBRXZDLFlBQVk3MUIsRUFBRUEsRUFBRXU2QixXQUFXejZCLEVBQUVtMEIsS0FBS24wQixHQUFtQixRQUFmRCxFQUFFRyxFQUFFdTZCLFlBQW9CdjZCLEVBQUV1NkIsV0FBV3o2QixFQUFFbTBCLEtBQUtuMEIsR0FBR0csRUFBRUosRUFBRW8wQixLQUFLcDBCLEVBQUVvMEIsS0FBS24wQixFQUFFQSxFQUFFbTBCLEtBQUtoMEIsRUFBRUQsRUFBRXU2QixXQUFXejZCLEdBQVdBLENBQUMsQ0FBQyxTQUFTbTdCLEtBQUssT0FBTzVCLEtBQUtwakIsYUFBYSxDQUFDLFNBQVNpbEIsR0FBR3A3QixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLElBQUlDLEVBQUVpNUIsS0FBS2YsR0FBRXJpQixPQUFPalcsRUFBRUksRUFBRStWLGNBQWNra0IsR0FBRyxFQUFFbjZCLEVBQUVILE9BQUUsT0FBTyxJQUFTSSxFQUFFLEtBQUtBLEVBQUUsQ0FDOVksU0FBU2s3QixHQUFHcjdCLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSUMsRUFBRW01QixLQUFLcDVCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFLElBQUlyQixPQUFFLEVBQU8sR0FBRyxPQUFPeTVCLEdBQUUsQ0FBQyxJQUFJdDRCLEVBQUVzNEIsR0FBRXBpQixjQUEwQixHQUFaclgsRUFBRW1CLEVBQUVnN0IsUUFBVyxPQUFPOTZCLEdBQUcyNEIsR0FBRzM0QixFQUFFRixFQUFFaTdCLE1BQW1DLFlBQTVCOTZCLEVBQUUrVixjQUFja2tCLEdBQUduNkIsRUFBRUgsRUFBRWpCLEVBQUVxQixHQUFVLENBQUNtNEIsR0FBRXJpQixPQUFPalcsRUFBRUksRUFBRStWLGNBQWNra0IsR0FBRyxFQUFFbjZCLEVBQUVILEVBQUVqQixFQUFFcUIsRUFBRSxDQUFDLFNBQVNtN0IsR0FBR3Q3QixFQUFFRSxHQUFHLE9BQU9rN0IsR0FBRyxRQUFRLEVBQUVwN0IsRUFBRUUsRUFBRSxDQUFDLFNBQVNnNkIsR0FBR2w2QixFQUFFRSxHQUFHLE9BQU9tN0IsR0FBRyxLQUFLLEVBQUVyN0IsRUFBRUUsRUFBRSxDQUFDLFNBQVNxN0IsR0FBR3Y3QixFQUFFRSxHQUFHLE9BQU9tN0IsR0FBRyxFQUFFLEVBQUVyN0IsRUFBRUUsRUFBRSxDQUFDLFNBQVNzN0IsR0FBR3g3QixFQUFFRSxHQUFHLE9BQU9tN0IsR0FBRyxFQUFFLEVBQUVyN0IsRUFBRUUsRUFBRSxDQUNoWCxTQUFTdTdCLEdBQUd6N0IsRUFBRUUsR0FBRyxNQUFHLG1CQUFvQkEsR0FBU0YsRUFBRUEsSUFBSUUsRUFBRUYsR0FBRyxXQUFXRSxFQUFFLEtBQUssR0FBSyxNQUFPQSxHQUFxQkYsRUFBRUEsSUFBSUUsRUFBRVUsUUFBUVosRUFBRSxXQUFXRSxFQUFFVSxRQUFRLElBQUksUUFBMUUsQ0FBMkUsQ0FBQyxTQUFTODZCLEdBQUcxN0IsRUFBRUUsRUFBRUgsR0FBNkMsT0FBMUNBLEVBQUUsTUFBT0EsRUFBY0EsRUFBRTByQixPQUFPLENBQUN6ckIsSUFBSSxLQUFZcTdCLEdBQUcsRUFBRSxFQUFFSSxHQUFHcFAsS0FBSyxLQUFLbnNCLEVBQUVGLEdBQUdELEVBQUUsQ0FBQyxTQUFTNDdCLEtBQUssQ0FBQyxTQUFTQyxHQUFHNTdCLEVBQUVFLEdBQUcsSUFBSUgsRUFBRXc1QixLQUFLcjVCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFLElBQUlDLEVBQUVKLEVBQUVvVyxjQUFjLE9BQUcsT0FBT2hXLEdBQUcsT0FBT0QsR0FBRzQ0QixHQUFHNTRCLEVBQUVDLEVBQUUsSUFBV0EsRUFBRSxJQUFHSixFQUFFb1csY0FBYyxDQUFDblcsRUFBRUUsR0FBVUYsRUFBQyxDQUM3WixTQUFTNjdCLEdBQUc3N0IsRUFBRUUsR0FBRyxJQUFJSCxFQUFFdzVCLEtBQUtyNUIsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEVBQUUsSUFBSUMsRUFBRUosRUFBRW9XLGNBQWMsT0FBRyxPQUFPaFcsR0FBRyxPQUFPRCxHQUFHNDRCLEdBQUc1NEIsRUFBRUMsRUFBRSxJQUFXQSxFQUFFLElBQUdILEVBQUVBLElBQUlELEVBQUVvVyxjQUFjLENBQUNuVyxFQUFFRSxHQUFVRixFQUFDLENBQUMsU0FBUzg3QixHQUFHOTdCLEVBQUVFLEVBQUVILEdBQUcsT0FBVyxHQUFIczRCLElBQW9FbFIsR0FBR3BuQixFQUFFRyxLQUFLSCxFQUFFb1osS0FBS21mLEdBQUVuRCxPQUFPcDFCLEVBQUVpM0IsSUFBSWozQixFQUFFQyxFQUFFZzJCLFdBQVUsR0FBVzkxQixJQUEvR0YsRUFBRWcyQixZQUFZaDJCLEVBQUVnMkIsV0FBVSxFQUFHWixJQUFHLEdBQUlwMUIsRUFBRW1XLGNBQWNwVyxFQUE0RCxDQUFDLFNBQVNnOEIsR0FBRy83QixFQUFFRSxHQUFHLElBQUlILEVBQUV5WixHQUFFQSxHQUFFLElBQUl6WixHQUFHLEVBQUVBLEVBQUVBLEVBQUUsRUFBRUMsR0FBRSxHQUFJLElBQUlHLEVBQUVpNEIsR0FBR2xjLFdBQVdrYyxHQUFHbGMsV0FBVyxDQUFDLEVBQUUsSUFBSWxjLEdBQUUsR0FBSUUsR0FBRyxDQUFDLFFBQVFzWixHQUFFelosRUFBRXE0QixHQUFHbGMsV0FBVy9iLENBQUMsQ0FBQyxDQUFDLFNBQVM2N0IsS0FBSyxPQUFPekMsS0FBS3BqQixhQUFhLENBQzFkLFNBQVM4bEIsR0FBR2o4QixFQUFFRSxFQUFFSCxHQUFHLElBQUlJLEVBQUUrN0IsR0FBR2w4QixHQUFHRCxFQUFFLENBQUMwMkIsS0FBS3QyQixFQUFFM0QsT0FBT3VELEVBQUU0NUIsZUFBYyxFQUFHQyxXQUFXLEtBQUt6RixLQUFLLE1BQVNnSSxHQUFHbjhCLEdBQUdvOEIsR0FBR2w4QixFQUFFSCxHQUF5QixRQUFkQSxFQUFFMjFCLEdBQUcxMUIsRUFBRUUsRUFBRUgsRUFBRUksTUFBdUIwNkIsR0FBRzk2QixFQUFFQyxFQUFFRyxFQUFYazhCLE1BQWdCQyxHQUFHdjhCLEVBQUVHLEVBQUVDLEdBQUcsQ0FDL0ssU0FBUzQ2QixHQUFHLzZCLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksRUFBRSs3QixHQUFHbDhCLEdBQUdJLEVBQUUsQ0FBQ3EyQixLQUFLdDJCLEVBQUUzRCxPQUFPdUQsRUFBRTQ1QixlQUFjLEVBQUdDLFdBQVcsS0FBS3pGLEtBQUssTUFBTSxHQUFHZ0ksR0FBR244QixHQUFHbzhCLEdBQUdsOEIsRUFBRUUsT0FBTyxDQUFDLElBQUl0QixFQUFFa0IsRUFBRStWLFVBQVUsR0FBRyxJQUFJL1YsRUFBRW0xQixRQUFRLE9BQU9yMkIsR0FBRyxJQUFJQSxFQUFFcTJCLFFBQWlDLFFBQXhCcjJCLEVBQUVvQixFQUFFdzVCLHFCQUE4QixJQUFJLElBQUl6NUIsRUFBRUMsRUFBRTI1QixrQkFBa0J4NUIsRUFBRXZCLEVBQUVtQixFQUFFRixHQUFxQyxHQUFsQ0ssRUFBRXU1QixlQUFjLEVBQUd2NUIsRUFBRXc1QixXQUFXdjVCLEVBQUs4bUIsR0FBRzltQixFQUFFSixHQUFHLENBQUMsSUFBSWxCLEVBQUVtQixFQUFFeTFCLFlBQStFLE9BQW5FLE9BQU81MkIsR0FBR3FCLEVBQUUrekIsS0FBSy96QixFQUFFcTFCLEdBQUd2MUIsS0FBS0UsRUFBRSt6QixLQUFLcDFCLEVBQUVvMUIsS0FBS3AxQixFQUFFbzFCLEtBQUsvekIsUUFBR0YsRUFBRXkxQixZQUFZdjFCLEVBQVEsQ0FBQyxDQUFDLE1BQU1sQixHQUFHLENBQXdCLFFBQWRhLEVBQUUyMUIsR0FBRzExQixFQUFFRSxFQUFFRSxFQUFFRCxNQUFvQjA2QixHQUFHOTZCLEVBQUVDLEVBQUVHLEVBQWJDLEVBQUVpOEIsTUFBZ0JDLEdBQUd2OEIsRUFBRUcsRUFBRUMsR0FBRyxDQUFDLENBQy9jLFNBQVNnOEIsR0FBR244QixHQUFHLElBQUlFLEVBQUVGLEVBQUUrVixVQUFVLE9BQU8vVixJQUFJczRCLElBQUcsT0FBT3A0QixHQUFHQSxJQUFJbzRCLEVBQUMsQ0FBQyxTQUFTOEQsR0FBR3A4QixFQUFFRSxHQUFHdzRCLEdBQUdELElBQUcsRUFBRyxJQUFJMTRCLEVBQUVDLEVBQUVvMkIsUUFBUSxPQUFPcjJCLEVBQUVHLEVBQUVpMEIsS0FBS2owQixHQUFHQSxFQUFFaTBCLEtBQUtwMEIsRUFBRW8wQixLQUFLcDBCLEVBQUVvMEIsS0FBS2owQixHQUFHRixFQUFFbzJCLFFBQVFsMkIsQ0FBQyxDQUFDLFNBQVNvOEIsR0FBR3Q4QixFQUFFRSxFQUFFSCxHQUFHLEdBQVUsUUFBRkEsRUFBVyxDQUFDLElBQUlJLEVBQUVELEVBQUVpMUIsTUFBd0JwMUIsR0FBbEJJLEdBQUdILEVBQUU0WSxhQUFrQjFZLEVBQUVpMUIsTUFBTXAxQixFQUFFd1osR0FBR3ZaLEVBQUVELEVBQUUsQ0FBQyxDQUM5UCxJQUFJbzVCLEdBQUcsQ0FBQ29ELFlBQVlsSCxHQUFHbUgsWUFBWTNELEdBQUU0RCxXQUFXNUQsR0FBRTZELFVBQVU3RCxHQUFFOEQsb0JBQW9COUQsR0FBRStELG1CQUFtQi9ELEdBQUVnRSxnQkFBZ0JoRSxHQUFFaUUsUUFBUWpFLEdBQUVrRSxXQUFXbEUsR0FBRW1FLE9BQU9uRSxHQUFFb0UsU0FBU3BFLEdBQUVxRSxjQUFjckUsR0FBRXNFLGlCQUFpQnRFLEdBQUV1RSxjQUFjdkUsR0FBRXdFLGlCQUFpQnhFLEdBQUV5RSxxQkFBcUJ6RSxHQUFFMEUsTUFBTTFFLEdBQUUyRSwwQkFBeUIsR0FBSXhFLEdBQUcsQ0FBQ3VELFlBQVlsSCxHQUFHbUgsWUFBWSxTQUFTeDhCLEVBQUVFLEdBQTRDLE9BQXpDbTVCLEtBQUtsakIsY0FBYyxDQUFDblcsT0FBRSxJQUFTRSxFQUFFLEtBQUtBLEdBQVVGLENBQUMsRUFBRXk4QixXQUFXcEgsR0FBR3FILFVBQVVwQixHQUFHcUIsb0JBQW9CLFNBQVMzOEIsRUFBRUUsRUFBRUgsR0FBNkMsT0FBMUNBLEVBQUUsTUFBT0EsRUFBY0EsRUFBRTByQixPQUFPLENBQUN6ckIsSUFBSSxLQUFZbzdCLEdBQUcsUUFDM2YsRUFBRUssR0FBR3BQLEtBQUssS0FBS25zQixFQUFFRixHQUFHRCxFQUFFLEVBQUU4OEIsZ0JBQWdCLFNBQVM3OEIsRUFBRUUsR0FBRyxPQUFPazdCLEdBQUcsUUFBUSxFQUFFcDdCLEVBQUVFLEVBQUUsRUFBRTA4QixtQkFBbUIsU0FBUzU4QixFQUFFRSxHQUFHLE9BQU9rN0IsR0FBRyxFQUFFLEVBQUVwN0IsRUFBRUUsRUFBRSxFQUFFNDhCLFFBQVEsU0FBUzk4QixFQUFFRSxHQUFHLElBQUlILEVBQUVzNUIsS0FBcUQsT0FBaERuNUIsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEVBQUVGLEVBQUVBLElBQUlELEVBQUVvVyxjQUFjLENBQUNuVyxFQUFFRSxHQUFVRixDQUFDLEVBQUUrOEIsV0FBVyxTQUFTLzhCLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksRUFBRWs1QixLQUFrTSxPQUE3TG41QixPQUFFLElBQVNILEVBQUVBLEVBQUVHLEdBQUdBLEVBQUVDLEVBQUVnVyxjQUFjaFcsRUFBRTYxQixVQUFVOTFCLEVBQUVGLEVBQUUsQ0FBQ28yQixRQUFRLEtBQUtULFlBQVksS0FBS1IsTUFBTSxFQUFFMkUsU0FBUyxLQUFLSixvQkFBb0IxNUIsRUFBRTY1QixrQkFBa0IzNUIsR0FBR0MsRUFBRTVELE1BQU15RCxFQUFFQSxFQUFFQSxFQUFFODVCLFNBQVNtQyxHQUFHNVAsS0FBSyxLQUFLaU0sR0FBRXQ0QixHQUFTLENBQUNHLEVBQUVnVyxjQUFjblcsRUFBRSxFQUFFZzlCLE9BQU8sU0FBU2g5QixHQUMzZCxPQUFkQSxFQUFFLENBQUNZLFFBQVFaLEdBQWhCcTVCLEtBQTRCbGpCLGNBQWNuVyxDQUFDLEVBQUVpOUIsU0FBU25DLEdBQUdvQyxjQUFjdkIsR0FBR3dCLGlCQUFpQixTQUFTbjlCLEdBQUcsT0FBT3E1QixLQUFLbGpCLGNBQWNuVyxDQUFDLEVBQUVvOUIsY0FBYyxXQUFXLElBQUlwOUIsRUFBRTg2QixJQUFHLEdBQUk1NkIsRUFBRUYsRUFBRSxHQUE2QyxPQUExQ0EsRUFBRSs3QixHQUFHMVAsS0FBSyxLQUFLcnNCLEVBQUUsSUFBSXE1QixLQUFLbGpCLGNBQWNuVyxFQUFRLENBQUNFLEVBQUVGLEVBQUUsRUFBRXE5QixpQkFBaUIsV0FBVyxFQUFFQyxxQkFBcUIsU0FBU3Q5QixFQUFFRSxFQUFFSCxHQUFHLElBQUlJLEVBQUVtNEIsR0FBRWw0QixFQUFFaTVCLEtBQUssR0FBR3ZILEdBQUUsQ0FBQyxRQUFHLElBQVMveEIsRUFBRSxNQUFNeEMsTUFBTWtDLEVBQUUsTUFBTU0sRUFBRUEsR0FBRyxLQUFLLENBQU8sR0FBTkEsRUFBRUcsSUFBTyxPQUFPcTZCLEdBQUUsTUFBTWg5QixNQUFNa0MsRUFBRSxNQUFjLEdBQUg0NEIsSUFBUW1DLEdBQUdyNkIsRUFBRUQsRUFBRUgsRUFBRSxDQUFDSyxFQUFFK1YsY0FBY3BXLEVBQUUsSUFBSWpCLEVBQUUsQ0FBQzBOLE1BQU16TSxFQUFFcTZCLFlBQVlsNkIsR0FDdlosT0FEMFpFLEVBQUU3RCxNQUFNdUMsRUFBRXc4QixHQUFHbkIsR0FBRzlOLEtBQUssS0FBS2xzQixFQUNwZnJCLEVBQUVrQixHQUFHLENBQUNBLElBQUlHLEVBQUU4VixPQUFPLEtBQUtva0IsR0FBRyxFQUFFQyxHQUFHak8sS0FBSyxLQUFLbHNCLEVBQUVyQixFQUFFaUIsRUFBRUcsUUFBRyxFQUFPLE1BQWFILENBQUMsRUFBRXc5QixNQUFNLFdBQVcsSUFBSXY5QixFQUFFcTVCLEtBQUtuNUIsRUFBRXE2QixHQUFFa0QsaUJBQWlCLEdBQUczTCxHQUFFLENBQUMsSUFBSS94QixFQUFFd3hCLEdBQWtEcnhCLEVBQUUsSUFBSUEsRUFBRSxLQUE5Q0gsR0FBSHV4QixLQUFVLEdBQUcsR0FBR25aLEdBQWhCbVosSUFBc0IsSUFBSWx3QixTQUFTLElBQUlyQixHQUF1QixHQUFQQSxFQUFFNDRCLFFBQVd6NEIsR0FBRyxJQUFJSCxFQUFFcUIsU0FBUyxLQUFLbEIsR0FBRyxHQUFHLE1BQWFBLEVBQUUsSUFBSUEsRUFBRSxLQUFmSCxFQUFFNjRCLE1BQW1CeDNCLFNBQVMsSUFBSSxJQUFJLE9BQU9wQixFQUFFbVcsY0FBY2pXLENBQUMsRUFBRXM5QiwwQkFBeUIsR0FBSXZFLEdBQUcsQ0FBQ3NELFlBQVlsSCxHQUFHbUgsWUFBWVosR0FBR2EsV0FBV3BILEdBQUdxSCxVQUFVeEMsR0FBR3lDLG9CQUFvQmpCLEdBQUdrQixtQkFBbUJyQixHQUFHc0IsZ0JBQWdCckIsR0FBR3NCLFFBQVFqQixHQUFHa0IsV0FBV3RELEdBQUd1RCxPQUFPN0IsR0FBRzhCLFNBQVMsV0FBVyxPQUFPeEQsR0FBR0QsR0FBRyxFQUNyaEIwRCxjQUFjdkIsR0FBR3dCLGlCQUFpQixTQUFTbjlCLEdBQWMsT0FBTzg3QixHQUFadkMsS0FBaUJoQixHQUFFcGlCLGNBQWNuVyxFQUFFLEVBQUVvOUIsY0FBYyxXQUFnRCxNQUFNLENBQXJDM0QsR0FBR0QsSUFBSSxHQUFLRCxLQUFLcGpCLGNBQXlCLEVBQUVrbkIsaUJBQWlCckQsR0FBR3NELHFCQUFxQnJELEdBQUdzRCxNQUFNdkIsR0FBR3dCLDBCQUF5QixHQUFJdEUsR0FBRyxDQUFDcUQsWUFBWWxILEdBQUdtSCxZQUFZWixHQUFHYSxXQUFXcEgsR0FBR3FILFVBQVV4QyxHQUFHeUMsb0JBQW9CakIsR0FBR2tCLG1CQUFtQnJCLEdBQUdzQixnQkFBZ0JyQixHQUFHc0IsUUFBUWpCLEdBQUdrQixXQUFXaEQsR0FBR2lELE9BQU83QixHQUFHOEIsU0FBUyxXQUFXLE9BQU9sRCxHQUFHUCxHQUFHLEVBQUUwRCxjQUFjdkIsR0FBR3dCLGlCQUFpQixTQUFTbjlCLEdBQUcsSUFBSUUsRUFBRXE1QixLQUFLLE9BQU8sT0FDemZoQixHQUFFcjRCLEVBQUVpVyxjQUFjblcsRUFBRTg3QixHQUFHNTdCLEVBQUVxNEIsR0FBRXBpQixjQUFjblcsRUFBRSxFQUFFbzlCLGNBQWMsV0FBZ0QsTUFBTSxDQUFyQ3JELEdBQUdQLElBQUksR0FBS0QsS0FBS3BqQixjQUF5QixFQUFFa25CLGlCQUFpQnJELEdBQUdzRCxxQkFBcUJyRCxHQUFHc0QsTUFBTXZCLEdBQUd3QiwwQkFBeUIsR0FBSSxTQUFTRSxHQUFHMTlCLEVBQUVFLEdBQUcsR0FBR0YsR0FBR0EsRUFBRU8sYUFBYSxDQUE0QixJQUFJLElBQUlSLEtBQW5DRyxFQUFFOEosRUFBRSxDQUFDLEVBQUU5SixHQUFHRixFQUFFQSxFQUFFTyxrQkFBNEIsSUFBU0wsRUFBRUgsS0FBS0csRUFBRUgsR0FBR0MsRUFBRUQsSUFBSSxPQUFPRyxDQUFDLENBQUMsT0FBT0EsQ0FBQyxDQUFDLFNBQVN5OUIsR0FBRzM5QixFQUFFRSxFQUFFSCxFQUFFSSxHQUE4QkosRUFBRSxPQUFYQSxFQUFFQSxFQUFFSSxFQUF0QkQsRUFBRUYsRUFBRW1XLGdCQUE4Q2pXLEVBQUU4SixFQUFFLENBQUMsRUFBRTlKLEVBQUVILEdBQUdDLEVBQUVtVyxjQUFjcFcsRUFBRSxJQUFJQyxFQUFFbTFCLFFBQVFuMUIsRUFBRSsxQixZQUFZQyxVQUFVajJCLEVBQUUsQ0FDcmQsSUFBSTY5QixHQUFHLENBQUNDLFVBQVUsU0FBUzc5QixHQUFHLFNBQU9BLEVBQUVBLEVBQUU4OUIsa0JBQWlCaG9CLEdBQUc5VixLQUFLQSxDQUFJLEVBQUUrOUIsZ0JBQWdCLFNBQVMvOUIsRUFBRUUsRUFBRUgsR0FBR0MsRUFBRUEsRUFBRTg5QixnQkFBZ0IsSUFBSTM5QixFQUFFazhCLEtBQUlqOEIsRUFBRTg3QixHQUFHbDhCLEdBQUdsQixFQUFFeTNCLEdBQUdwMkIsRUFBRUMsR0FBR3RCLEVBQUVyQyxRQUFReUQsRUFBRSxNQUFTSCxJQUFjakIsRUFBRTQzQixTQUFTMzJCLEdBQWUsUUFBWkcsRUFBRXkyQixHQUFHMzJCLEVBQUVsQixFQUFFc0IsTUFBY3k2QixHQUFHMzZCLEVBQUVGLEVBQUVJLEVBQUVELEdBQUcwMkIsR0FBRzMyQixFQUFFRixFQUFFSSxHQUFHLEVBQUU0OUIsb0JBQW9CLFNBQVNoK0IsRUFBRUUsRUFBRUgsR0FBR0MsRUFBRUEsRUFBRTg5QixnQkFBZ0IsSUFBSTM5QixFQUFFazhCLEtBQUlqOEIsRUFBRTg3QixHQUFHbDhCLEdBQUdsQixFQUFFeTNCLEdBQUdwMkIsRUFBRUMsR0FBR3RCLEVBQUVtTSxJQUFJLEVBQUVuTSxFQUFFckMsUUFBUXlELEVBQUUsTUFBU0gsSUFBY2pCLEVBQUU0M0IsU0FBUzMyQixHQUFlLFFBQVpHLEVBQUV5MkIsR0FBRzMyQixFQUFFbEIsRUFBRXNCLE1BQWN5NkIsR0FBRzM2QixFQUFFRixFQUFFSSxFQUFFRCxHQUFHMDJCLEdBQUczMkIsRUFBRUYsRUFBRUksR0FBRyxFQUFFNjlCLG1CQUFtQixTQUFTaitCLEVBQUVFLEdBQUdGLEVBQUVBLEVBQUU4OUIsZ0JBQWdCLElBQUkvOUIsRUFBRXM4QixLQUFJbDhCLEVBQ25mKzdCLEdBQUdsOEIsR0FBR0ksRUFBRW0yQixHQUFHeDJCLEVBQUVJLEdBQUdDLEVBQUU2SyxJQUFJLEVBQUUsTUFBUy9LLElBQWNFLEVBQUVzMkIsU0FBU3gyQixHQUFlLFFBQVpBLEVBQUV5MkIsR0FBRzMyQixFQUFFSSxFQUFFRCxNQUFjMDZCLEdBQUczNkIsRUFBRUYsRUFBRUcsRUFBRUosR0FBRzgyQixHQUFHMzJCLEVBQUVGLEVBQUVHLEdBQUcsR0FBRyxTQUFTKzlCLEdBQUdsK0IsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsRUFBRXRCLEVBQUVtQixHQUFpQixNQUFNLG1CQUFwQkQsRUFBRUEsRUFBRXlVLFdBQXNDMHBCLHNCQUFzQm4rQixFQUFFbStCLHNCQUFzQmgrQixFQUFFckIsRUFBRW1CLEtBQUdDLEVBQUVkLFdBQVdjLEVBQUVkLFVBQVVnL0Isc0JBQXNCaFgsR0FBR3JuQixFQUFFSSxJQUFLaW5CLEdBQUdobkIsRUFBRXRCLEdBQUssQ0FDMVMsU0FBU3UvQixHQUFHcitCLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksR0FBRSxFQUFHQyxFQUFFcXZCLEdBQU8zd0IsRUFBRW9CLEVBQUVvK0IsWUFBMlcsTUFBL1YsaUJBQWtCeC9CLEdBQUcsT0FBT0EsRUFBRUEsRUFBRXUyQixHQUFHdjJCLElBQUlzQixFQUFFNnZCLEdBQUcvdkIsR0FBRzB2QixHQUFHRixHQUFFOXVCLFFBQXlCOUIsR0FBR3FCLEVBQUUsT0FBdEJBLEVBQUVELEVBQUU0dkIsZUFBd0NELEdBQUc3dkIsRUFBRUksR0FBR3F2QixJQUFJdnZCLEVBQUUsSUFBSUEsRUFBRUgsRUFBRWpCLEdBQUdrQixFQUFFbVcsY0FBYyxPQUFPalcsRUFBRXErQixZQUFPLElBQVNyK0IsRUFBRXErQixNQUFNcitCLEVBQUVxK0IsTUFBTSxLQUFLcitCLEVBQUVzK0IsUUFBUVosR0FBRzU5QixFQUFFeVUsVUFBVXZVLEVBQUVBLEVBQUU0OUIsZ0JBQWdCOTlCLEVBQUVHLEtBQUlILEVBQUVBLEVBQUV5VSxXQUFZc2IsNENBQTRDM3ZCLEVBQUVKLEVBQUVnd0IsMENBQTBDbHhCLEdBQVVvQixDQUFDLENBQzVaLFNBQVN1K0IsR0FBR3orQixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHSCxFQUFFRSxFQUFFcStCLE1BQU0sbUJBQW9CcitCLEVBQUV3K0IsMkJBQTJCeCtCLEVBQUV3K0IsMEJBQTBCMytCLEVBQUVJLEdBQUcsbUJBQW9CRCxFQUFFeStCLGtDQUFrQ3orQixFQUFFeStCLGlDQUFpQzUrQixFQUFFSSxHQUFHRCxFQUFFcStCLFFBQVF2K0IsR0FBRzQ5QixHQUFHSSxvQkFBb0I5OUIsRUFBRUEsRUFBRXErQixNQUFNLEtBQUssQ0FDcFEsU0FBU0ssR0FBRzUrQixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLElBQUlDLEVBQUVKLEVBQUV5VSxVQUFVclUsRUFBRU0sTUFBTVgsRUFBRUssRUFBRW0rQixNQUFNditCLEVBQUVtVyxjQUFjL1YsRUFBRWl6QixLQUFLLENBQUMsRUFBRXlDLEdBQUc5MUIsR0FBRyxJQUFJbEIsRUFBRW9CLEVBQUVvK0IsWUFBWSxpQkFBa0J4L0IsR0FBRyxPQUFPQSxFQUFFc0IsRUFBRWsxQixRQUFRRCxHQUFHdjJCLElBQUlBLEVBQUVteEIsR0FBRy92QixHQUFHMHZCLEdBQUdGLEdBQUU5dUIsUUFBUVIsRUFBRWsxQixRQUFRekYsR0FBRzd2QixFQUFFbEIsSUFBSXNCLEVBQUVtK0IsTUFBTXYrQixFQUFFbVcsY0FBMkMsbUJBQTdCclgsRUFBRW9CLEVBQUUyK0IsNEJBQWlEbEIsR0FBRzM5QixFQUFFRSxFQUFFcEIsRUFBRWlCLEdBQUdLLEVBQUVtK0IsTUFBTXYrQixFQUFFbVcsZUFBZSxtQkFBb0JqVyxFQUFFMitCLDBCQUEwQixtQkFBb0J6K0IsRUFBRTArQix5QkFBeUIsbUJBQW9CMStCLEVBQUUyK0IsMkJBQTJCLG1CQUFvQjMrQixFQUFFNCtCLHFCQUFxQjkrQixFQUFFRSxFQUFFbStCLE1BQ3JmLG1CQUFvQm4rQixFQUFFNCtCLG9CQUFvQjUrQixFQUFFNCtCLHFCQUFxQixtQkFBb0I1K0IsRUFBRTIrQiwyQkFBMkIzK0IsRUFBRTIrQiw0QkFBNEI3K0IsSUFBSUUsRUFBRW0rQixPQUFPWCxHQUFHSSxvQkFBb0I1OUIsRUFBRUEsRUFBRW0rQixNQUFNLE1BQU14SCxHQUFHLzJCLEVBQUVELEVBQUVLLEVBQUVELEdBQUdDLEVBQUVtK0IsTUFBTXYrQixFQUFFbVcsZUFBZSxtQkFBb0IvVixFQUFFNitCLG9CQUFvQmovQixFQUFFaVcsT0FBTyxRQUFRLENBQUMsU0FBU2lwQixHQUFHbC9CLEVBQUVFLEdBQUcsSUFBSSxJQUFJSCxFQUFFLEdBQUdJLEVBQUVELEVBQUUsR0FBR0gsR0FBR2lMLEVBQUc3SyxHQUFHQSxFQUFFQSxFQUFFNlYsYUFBYTdWLEdBQUcsSUFBSUMsRUFBRUwsQ0FBQyxDQUFDLE1BQU1qQixHQUFHc0IsRUFBRSw2QkFBNkJ0QixFQUFFeUUsUUFBUSxLQUFLekUsRUFBRXFMLEtBQUssQ0FBQyxNQUFNLENBQUNxQyxNQUFNeE0sRUFBRXdULE9BQU90VCxFQUFFaUssTUFBTS9KLEVBQUUrK0IsT0FBTyxLQUFLLENBQzFkLFNBQVNDLEdBQUdwL0IsRUFBRUUsRUFBRUgsR0FBRyxNQUFNLENBQUN5TSxNQUFNeE0sRUFBRXdULE9BQU8sS0FBS3JKLE1BQU0sTUFBTXBLLEVBQUVBLEVBQUUsS0FBS28vQixPQUFPLE1BQU1qL0IsRUFBRUEsRUFBRSxLQUFLLENBQUMsU0FBU20vQixHQUFHci9CLEVBQUVFLEdBQUcsSUFBSXRCLFFBQVFDLE1BQU1xQixFQUFFc00sTUFBTSxDQUFDLE1BQU16TSxHQUFHcXVCLFdBQVcsV0FBVyxNQUFNcnVCLENBQUUsRUFBRSxDQUFDLENBQUMsSUFBSXUvQixHQUFHLG1CQUFvQkMsUUFBUUEsUUFBUWxsQixJQUFJLFNBQVNtbEIsR0FBR3gvQixFQUFFRSxFQUFFSCxJQUFHQSxFQUFFdzJCLElBQUksRUFBRXgyQixJQUFLa0wsSUFBSSxFQUFFbEwsRUFBRXRELFFBQVEsQ0FBQytzQixRQUFRLE1BQU0sSUFBSXJwQixFQUFFRCxFQUFFc00sTUFBc0QsT0FBaER6TSxFQUFFMjJCLFNBQVMsV0FBVytJLEtBQUtBLElBQUcsRUFBR0MsR0FBR3YvQixHQUFHay9CLEdBQUdyL0IsRUFBRUUsRUFBRSxFQUFTSCxDQUFDLENBQ3JXLFNBQVM0L0IsR0FBRzMvQixFQUFFRSxFQUFFSCxJQUFHQSxFQUFFdzJCLElBQUksRUFBRXgyQixJQUFLa0wsSUFBSSxFQUFFLElBQUk5SyxFQUFFSCxFQUFFUyxLQUFLbS9CLHlCQUF5QixHQUFHLG1CQUFvQnovQixFQUFFLENBQUMsSUFBSUMsRUFBRUYsRUFBRXNNLE1BQU16TSxFQUFFdEQsUUFBUSxXQUFXLE9BQU8wRCxFQUFFQyxFQUFFLEVBQUVMLEVBQUUyMkIsU0FBUyxXQUFXMkksR0FBR3IvQixFQUFFRSxFQUFFLENBQUMsQ0FBQyxJQUFJcEIsRUFBRWtCLEVBQUV5VSxVQUE4TyxPQUFwTyxPQUFPM1YsR0FBRyxtQkFBb0JBLEVBQUUrZ0Msb0JBQW9COS9CLEVBQUUyMkIsU0FBUyxXQUFXMkksR0FBR3IvQixFQUFFRSxHQUFHLG1CQUFvQkMsSUFBSSxPQUFPMi9CLEdBQUdBLEdBQUcsSUFBSXI1QixJQUFJLENBQUN0SixPQUFPMmlDLEdBQUdqNUIsSUFBSTFKLE9BQU8sSUFBSTRDLEVBQUVHLEVBQUVpSyxNQUFNaE4sS0FBSzBpQyxrQkFBa0IzL0IsRUFBRXNNLE1BQU0sQ0FBQ3V6QixlQUFlLE9BQU9oZ0MsRUFBRUEsRUFBRSxJQUFJLEdBQVVBLENBQUMsQ0FDbmIsU0FBU2lnQyxHQUFHaGdDLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksRUFBRUgsRUFBRWlnQyxVQUFVLEdBQUcsT0FBTzkvQixFQUFFLENBQUNBLEVBQUVILEVBQUVpZ0MsVUFBVSxJQUFJWCxHQUFHLElBQUlsL0IsRUFBRSxJQUFJcUcsSUFBSXRHLEVBQUV1SyxJQUFJeEssRUFBRUUsRUFBRSxXQUFpQixLQUFYQSxFQUFFRCxFQUFFNEwsSUFBSTdMLE1BQWdCRSxFQUFFLElBQUlxRyxJQUFJdEcsRUFBRXVLLElBQUl4SyxFQUFFRSxJQUFJQSxFQUFFNHJCLElBQUlqc0IsS0FBS0ssRUFBRXlHLElBQUk5RyxHQUFHQyxFQUFFa2dDLEdBQUc3VCxLQUFLLEtBQUtyc0IsRUFBRUUsRUFBRUgsR0FBR0csRUFBRWdHLEtBQUtsRyxFQUFFQSxHQUFHLENBQUMsU0FBU21nQyxHQUFHbmdDLEdBQUcsRUFBRSxDQUFDLElBQUlFLEVBQTRFLElBQXZFQSxFQUFFLEtBQUtGLEVBQUVpTCxPQUFzQi9LLEVBQUUsUUFBcEJBLEVBQUVGLEVBQUVtVyxnQkFBeUIsT0FBT2pXLEVBQUVrVyxZQUF1QmxXLEVBQUUsT0FBT0YsRUFBRUEsRUFBRUEsRUFBRWdXLE1BQU0sT0FBTyxPQUFPaFcsR0FBRyxPQUFPLElBQUksQ0FDaFcsU0FBU29nQyxHQUFHcGdDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUcsT0FBZSxFQUFQSixFQUFFMHlCLE1BQXdLMXlCLEVBQUVpVyxPQUFPLE1BQU1qVyxFQUFFbTFCLE1BQU0vMEIsRUFBU0osSUFBekxBLElBQUlFLEVBQUVGLEVBQUVpVyxPQUFPLE9BQU9qVyxFQUFFaVcsT0FBTyxJQUFJbFcsRUFBRWtXLE9BQU8sT0FBT2xXLEVBQUVrVyxRQUFRLE1BQU0sSUFBSWxXLEVBQUVrTCxNQUFNLE9BQU9sTCxFQUFFZ1csVUFBVWhXLEVBQUVrTCxJQUFJLEtBQUkvSyxFQUFFcTJCLElBQUksRUFBRSxJQUFLdHJCLElBQUksRUFBRTByQixHQUFHNTJCLEVBQUVHLEVBQUUsS0FBS0gsRUFBRW8xQixPQUFPLEdBQUduMUIsRUFBbUMsQ0FBQyxJQUFJcWdDLEdBQUd2M0IsRUFBR3RKLGtCQUFrQjQxQixJQUFHLEVBQUcsU0FBU2tMLEdBQUd0Z0MsRUFBRUUsRUFBRUgsRUFBRUksR0FBR0QsRUFBRXFXLE1BQU0sT0FBT3ZXLEVBQUVzMEIsR0FBR3AwQixFQUFFLEtBQUtILEVBQUVJLEdBQUdrMEIsR0FBR24wQixFQUFFRixFQUFFdVcsTUFBTXhXLEVBQUVJLEVBQUUsQ0FDblYsU0FBU29nQyxHQUFHdmdDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUdMLEVBQUVBLEVBQUVtTCxPQUFPLElBQUlwTSxFQUFFb0IsRUFBRVAsSUFBcUMsT0FBakNxMUIsR0FBRzkwQixFQUFFRSxHQUFHRCxFQUFFNDRCLEdBQUcvNEIsRUFBRUUsRUFBRUgsRUFBRUksRUFBRXJCLEVBQUVzQixHQUFHTCxFQUFFcTVCLEtBQVEsT0FBT3A1QixHQUFJbzFCLElBQTJFdEQsSUFBRy94QixHQUFHMnhCLEdBQUd4eEIsR0FBR0EsRUFBRStWLE9BQU8sRUFBRXFxQixHQUFHdGdDLEVBQUVFLEVBQUVDLEVBQUVDLEdBQVVGLEVBQUVxVyxRQUE3R3JXLEVBQUU2MUIsWUFBWS8xQixFQUFFKzFCLFlBQVk3MUIsRUFBRStWLFFBQVEsS0FBS2pXLEVBQUVtMUIsUUFBUS8wQixFQUFFb2dDLEdBQUd4Z0MsRUFBRUUsRUFBRUUsR0FBb0QsQ0FDek4sU0FBU3FnQyxHQUFHemdDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUcsR0FBRyxPQUFPSixFQUFFLENBQUMsSUFBSWxCLEVBQUVpQixFQUFFVSxLQUFLLE1BQUcsbUJBQW9CM0IsR0FBSTRoQyxHQUFHNWhDLFNBQUksSUFBU0EsRUFBRXlCLGNBQWMsT0FBT1IsRUFBRTRnQyxjQUFTLElBQVM1Z0MsRUFBRVEsZUFBb0RQLEVBQUU2ekIsR0FBRzl6QixFQUFFVSxLQUFLLEtBQUtOLEVBQUVELEVBQUVBLEVBQUV3eUIsS0FBS3R5QixJQUFLVCxJQUFJTyxFQUFFUCxJQUFJSyxFQUFFZ1csT0FBTzlWLEVBQVNBLEVBQUVxVyxNQUFNdlcsSUFBckdFLEVBQUUrSyxJQUFJLEdBQUcvSyxFQUFFTyxLQUFLM0IsRUFBRThoQyxHQUFHNWdDLEVBQUVFLEVBQUVwQixFQUFFcUIsRUFBRUMsR0FBeUUsQ0FBVyxHQUFWdEIsRUFBRWtCLEVBQUV1VyxNQUFTLEtBQUt2VyxFQUFFbTFCLE1BQU0vMEIsR0FBRyxDQUFDLElBQUlILEVBQUVuQixFQUFFZzBCLGNBQTBDLElBQWhCL3lCLEVBQUUsUUFBZEEsRUFBRUEsRUFBRTRnQyxTQUFtQjVnQyxFQUFFcW5CLElBQVFubkIsRUFBRUUsSUFBSUgsRUFBRUwsTUFBTU8sRUFBRVAsSUFBSSxPQUFPNmdDLEdBQUd4Z0MsRUFBRUUsRUFBRUUsRUFBRSxDQUE2QyxPQUE1Q0YsRUFBRStWLE9BQU8sR0FBRWpXLEVBQUUyekIsR0FBRzcwQixFQUFFcUIsSUFBS1IsSUFBSU8sRUFBRVAsSUFBSUssRUFBRWdXLE9BQU85VixFQUFTQSxFQUFFcVcsTUFBTXZXLENBQUMsQ0FDMWIsU0FBUzRnQyxHQUFHNWdDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUcsR0FBRyxPQUFPSixFQUFFLENBQUMsSUFBSWxCLEVBQUVrQixFQUFFOHlCLGNBQWMsR0FBRzFMLEdBQUd0b0IsRUFBRXFCLElBQUlILEVBQUVMLE1BQU1PLEVBQUVQLElBQUksSUFBR3kxQixJQUFHLEVBQUdsMUIsRUFBRW15QixhQUFhbHlCLEVBQUVyQixFQUFFLEtBQUtrQixFQUFFbTFCLE1BQU0vMEIsR0FBc0MsT0FBT0YsRUFBRWkxQixNQUFNbjFCLEVBQUVtMUIsTUFBTXFMLEdBQUd4Z0MsRUFBRUUsRUFBRUUsR0FBcEQsT0FBUkosRUFBRWlXLFFBQWdCbWYsSUFBRyxFQUF3QyxDQUFDLENBQUMsT0FBT3lMLEdBQUc3Z0MsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsRUFBRSxDQUN4TixTQUFTMGdDLEdBQUc5Z0MsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFRCxFQUFFbXlCLGFBQWFqeUIsRUFBRUQsRUFBRThOLFNBQVNuUCxFQUFFLE9BQU9rQixFQUFFQSxFQUFFbVcsY0FBYyxLQUFLLEdBQUcsV0FBV2hXLEVBQUV1eUIsS0FBSyxHQUFlLEVBQVB4eUIsRUFBRXd5QixLQUF5RixDQUFDLEtBQVUsV0FBRjN5QixHQUFjLE9BQU9DLEVBQUUsT0FBT2xCLEVBQUVBLEVBQUVpaUMsVUFBVWhoQyxFQUFFQSxFQUFFRyxFQUFFaTFCLE1BQU1qMUIsRUFBRTYwQixXQUFXLFdBQVc3MEIsRUFBRWlXLGNBQWMsQ0FBQzRxQixVQUFVL2dDLEVBQUVnaEMsVUFBVSxLQUFLQyxZQUFZLE1BQU0vZ0MsRUFBRTYxQixZQUFZLEtBQUt2RyxHQUFFMFIsR0FBR0MsSUFBSUEsSUFBSW5oQyxFQUFFLEtBQUtFLEVBQUVpVyxjQUFjLENBQUM0cUIsVUFBVSxFQUFFQyxVQUFVLEtBQUtDLFlBQVksTUFBTTlnQyxFQUFFLE9BQU9yQixFQUFFQSxFQUFFaWlDLFVBQVVoaEMsRUFBRXl2QixHQUFFMFIsR0FBR0MsSUFBSUEsSUFBSWhoQyxDQUFDLE1BQXBYRCxFQUFFaVcsY0FBYyxDQUFDNHFCLFVBQVUsRUFBRUMsVUFBVSxLQUFLQyxZQUFZLE1BQU16UixHQUFFMFIsR0FBR0MsSUFBSUEsSUFBSXBoQyxPQUErUyxPQUN0ZmpCLEdBQUdxQixFQUFFckIsRUFBRWlpQyxVQUFVaGhDLEVBQUVHLEVBQUVpVyxjQUFjLE1BQU1oVyxFQUFFSixFQUFFeXZCLEdBQUUwUixHQUFHQyxJQUFJQSxJQUFJaGhDLEVBQWMsT0FBWm1nQyxHQUFHdGdDLEVBQUVFLEVBQUVFLEVBQUVMLEdBQVVHLEVBQUVxVyxLQUFLLENBQUMsU0FBUzZxQixHQUFHcGhDLEVBQUVFLEdBQUcsSUFBSUgsRUFBRUcsRUFBRVAsS0FBTyxPQUFPSyxHQUFHLE9BQU9ELEdBQUcsT0FBT0MsR0FBR0EsRUFBRUwsTUFBTUksS0FBRUcsRUFBRStWLE9BQU8sSUFBSS9WLEVBQUUrVixPQUFPLFFBQU8sQ0FBQyxTQUFTNHFCLEdBQUc3Z0MsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsR0FBRyxJQUFJdEIsRUFBRW14QixHQUFHbHdCLEdBQUc2dkIsR0FBR0YsR0FBRTl1QixRQUFtRCxPQUEzQzlCLEVBQUUrd0IsR0FBRzN2QixFQUFFcEIsR0FBR2syQixHQUFHOTBCLEVBQUVFLEdBQUdMLEVBQUVnNUIsR0FBRy80QixFQUFFRSxFQUFFSCxFQUFFSSxFQUFFckIsRUFBRXNCLEdBQUdELEVBQUVpNUIsS0FBUSxPQUFPcDVCLEdBQUlvMUIsSUFBMkV0RCxJQUFHM3hCLEdBQUd1eEIsR0FBR3h4QixHQUFHQSxFQUFFK1YsT0FBTyxFQUFFcXFCLEdBQUd0Z0MsRUFBRUUsRUFBRUgsRUFBRUssR0FBVUYsRUFBRXFXLFFBQTdHclcsRUFBRTYxQixZQUFZLzFCLEVBQUUrMUIsWUFBWTcxQixFQUFFK1YsUUFBUSxLQUFLalcsRUFBRW0xQixRQUFRLzBCLEVBQUVvZ0MsR0FBR3hnQyxFQUFFRSxFQUFFRSxHQUFvRCxDQUNsYSxTQUFTaWhDLEdBQUdyaEMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsR0FBRyxHQUFHNnZCLEdBQUdsd0IsR0FBRyxDQUFDLElBQUlqQixHQUFFLEVBQUd5eEIsR0FBR3J3QixFQUFFLE1BQU1wQixHQUFFLEVBQVcsR0FBUmsyQixHQUFHOTBCLEVBQUVFLEdBQU0sT0FBT0YsRUFBRXVVLFVBQVU2c0IsR0FBR3RoQyxFQUFFRSxHQUFHbStCLEdBQUduK0IsRUFBRUgsRUFBRUksR0FBR3krQixHQUFHMStCLEVBQUVILEVBQUVJLEVBQUVDLEdBQUdELEdBQUUsT0FBUSxHQUFHLE9BQU9ILEVBQUUsQ0FBQyxJQUFJQyxFQUFFQyxFQUFFdVUsVUFBVXBVLEVBQUVILEVBQUU0eUIsY0FBYzd5QixFQUFFUyxNQUFNTCxFQUFFLElBQUl0QixFQUFFa0IsRUFBRXExQixRQUFRcDJCLEVBQUVhLEVBQUV1K0IsWUFBMENwL0IsRUFBOUIsaUJBQWtCQSxHQUFHLE9BQU9BLEVBQUltMkIsR0FBR24yQixHQUEyQjJ3QixHQUFHM3ZCLEVBQTFCaEIsRUFBRSt3QixHQUFHbHdCLEdBQUc2dkIsR0FBR0YsR0FBRTl1QixTQUFtQixJQUFJekIsRUFBRVksRUFBRTgrQix5QkFBeUIvK0IsRUFBRSxtQkFBb0JYLEdBQUcsbUJBQW9CYyxFQUFFNitCLHdCQUF3QmgvQixHQUFHLG1CQUFvQkcsRUFBRTArQixrQ0FBa0MsbUJBQW9CMStCLEVBQUV5K0IsNEJBQzFkcitCLElBQUlGLEdBQUdwQixJQUFJRyxJQUFJdS9CLEdBQUd2K0IsRUFBRUQsRUFBRUUsRUFBRWpCLEdBQUcyMkIsSUFBRyxFQUFHLElBQUk1QixFQUFFL3pCLEVBQUVpVyxjQUFjbFcsRUFBRXMrQixNQUFNdEssRUFBRThDLEdBQUc3MkIsRUFBRUMsRUFBRUYsRUFBRUcsR0FBR3JCLEVBQUVtQixFQUFFaVcsY0FBYzlWLElBQUlGLEdBQUc4ekIsSUFBSWwxQixHQUFHNHdCLEdBQUcvdUIsU0FBU2kxQixJQUFJLG1CQUFvQjEyQixJQUFJdytCLEdBQUd6OUIsRUFBRUgsRUFBRVosRUFBRWdCLEdBQUdwQixFQUFFbUIsRUFBRWlXLGdCQUFnQjlWLEVBQUV3MUIsSUFBSXFJLEdBQUdoK0IsRUFBRUgsRUFBRU0sRUFBRUYsRUFBRTh6QixFQUFFbDFCLEVBQUVHLEtBQUtZLEdBQUcsbUJBQW9CRyxFQUFFOCtCLDJCQUEyQixtQkFBb0I5K0IsRUFBRSsrQixxQkFBcUIsbUJBQW9CLytCLEVBQUUrK0Isb0JBQW9CLytCLEVBQUUrK0IscUJBQXFCLG1CQUFvQi8rQixFQUFFOCtCLDJCQUEyQjkrQixFQUFFOCtCLDZCQUE2QixtQkFBb0I5K0IsRUFBRWcvQixvQkFBb0IvK0IsRUFBRStWLE9BQU8sV0FDbGYsbUJBQW9CaFcsRUFBRWcvQixvQkFBb0IvK0IsRUFBRStWLE9BQU8sU0FBUy9WLEVBQUU0eUIsY0FBYzN5QixFQUFFRCxFQUFFaVcsY0FBY3BYLEdBQUdrQixFQUFFUyxNQUFNUCxFQUFFRixFQUFFcytCLE1BQU14L0IsRUFBRWtCLEVBQUVxMUIsUUFBUXAyQixFQUFFaUIsRUFBRUUsSUFBSSxtQkFBb0JKLEVBQUVnL0Isb0JBQW9CLytCLEVBQUUrVixPQUFPLFNBQVM5VixHQUFFLEVBQUcsS0FBSyxDQUFDRixFQUFFQyxFQUFFdVUsVUFBVTZoQixHQUFHdDJCLEVBQUVFLEdBQUdHLEVBQUVILEVBQUU0eUIsY0FBYzV6QixFQUFFZ0IsRUFBRU8sT0FBT1AsRUFBRWd5QixZQUFZN3hCLEVBQUVxOUIsR0FBR3g5QixFQUFFTyxLQUFLSixHQUFHSixFQUFFUyxNQUFNeEIsRUFBRVksRUFBRUksRUFBRW15QixhQUFhNEIsRUFBRWgwQixFQUFFcTFCLFFBQXNEdjJCLEVBQTlCLGlCQUFoQkEsRUFBRWdCLEVBQUV1K0IsY0FBaUMsT0FBT3YvQixFQUFJczJCLEdBQUd0MkIsR0FBMkI4d0IsR0FBRzN2QixFQUExQm5CLEVBQUVreEIsR0FBR2x3QixHQUFHNnZCLEdBQUdGLEdBQUU5dUIsU0FBbUIsSUFBSXN6QixFQUFFbjBCLEVBQUU4K0IsMEJBQTBCMS9CLEVBQUUsbUJBQW9CKzBCLEdBQUcsbUJBQW9CajBCLEVBQUU2K0IsMEJBQzllLG1CQUFvQjcrQixFQUFFMCtCLGtDQUFrQyxtQkFBb0IxK0IsRUFBRXkrQiw0QkFBNEJyK0IsSUFBSVAsR0FBR20wQixJQUFJbDFCLElBQUkwL0IsR0FBR3YrQixFQUFFRCxFQUFFRSxFQUFFcEIsR0FBRzgyQixJQUFHLEVBQUc1QixFQUFFL3pCLEVBQUVpVyxjQUFjbFcsRUFBRXMrQixNQUFNdEssRUFBRThDLEdBQUc3MkIsRUFBRUMsRUFBRUYsRUFBRUcsR0FBRyxJQUFJZCxFQUFFWSxFQUFFaVcsY0FBYzlWLElBQUlQLEdBQUdtMEIsSUFBSTMwQixHQUFHcXdCLEdBQUcvdUIsU0FBU2kxQixJQUFJLG1CQUFvQjNCLElBQUl5SixHQUFHejlCLEVBQUVILEVBQUVtMEIsRUFBRS96QixHQUFHYixFQUFFWSxFQUFFaVcsZ0JBQWdCalgsRUFBRTIyQixJQUFJcUksR0FBR2grQixFQUFFSCxFQUFFYixFQUFFaUIsRUFBRTh6QixFQUFFMzBCLEVBQUVQLEtBQUksSUFBS0ksR0FBRyxtQkFBb0JjLEVBQUVzaEMsNEJBQTRCLG1CQUFvQnRoQyxFQUFFdWhDLHNCQUFzQixtQkFBb0J2aEMsRUFBRXVoQyxxQkFBcUJ2aEMsRUFBRXVoQyxvQkFBb0JyaEMsRUFBRWIsRUFBRVAsR0FBRyxtQkFBb0JrQixFQUFFc2hDLDRCQUM1ZnRoQyxFQUFFc2hDLDJCQUEyQnBoQyxFQUFFYixFQUFFUCxJQUFJLG1CQUFvQmtCLEVBQUV3aEMscUJBQXFCdmhDLEVBQUUrVixPQUFPLEdBQUcsbUJBQW9CaFcsRUFBRTYrQiwwQkFBMEI1K0IsRUFBRStWLE9BQU8sUUFBUSxtQkFBb0JoVyxFQUFFd2hDLG9CQUFvQnBoQyxJQUFJTCxFQUFFOHlCLGVBQWVtQixJQUFJajBCLEVBQUVtVyxnQkFBZ0JqVyxFQUFFK1YsT0FBTyxHQUFHLG1CQUFvQmhXLEVBQUU2K0IseUJBQXlCeitCLElBQUlMLEVBQUU4eUIsZUFBZW1CLElBQUlqMEIsRUFBRW1XLGdCQUFnQmpXLEVBQUUrVixPQUFPLE1BQU0vVixFQUFFNHlCLGNBQWMzeUIsRUFBRUQsRUFBRWlXLGNBQWM3VyxHQUFHVyxFQUFFUyxNQUFNUCxFQUFFRixFQUFFcytCLE1BQU1qL0IsRUFBRVcsRUFBRXExQixRQUFRdjJCLEVBQUVvQixFQUFFakIsSUFBSSxtQkFBb0JlLEVBQUV3aEMsb0JBQW9CcGhDLElBQUlMLEVBQUU4eUIsZUFBZW1CLElBQ2pmajBCLEVBQUVtVyxnQkFBZ0JqVyxFQUFFK1YsT0FBTyxHQUFHLG1CQUFvQmhXLEVBQUU2K0IseUJBQXlCeitCLElBQUlMLEVBQUU4eUIsZUFBZW1CLElBQUlqMEIsRUFBRW1XLGdCQUFnQmpXLEVBQUUrVixPQUFPLE1BQU05VixHQUFFLEVBQUcsQ0FBQyxPQUFPdWhDLEdBQUcxaEMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRXJCLEVBQUVzQixFQUFFLENBQ25LLFNBQVNzaEMsR0FBRzFoQyxFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxFQUFFdEIsR0FBR3NpQyxHQUFHcGhDLEVBQUVFLEdBQUcsSUFBSUQsS0FBZSxJQUFSQyxFQUFFK1YsT0FBVyxJQUFJOVYsSUFBSUYsRUFBRSxPQUFPRyxHQUFHcXdCLEdBQUd2d0IsRUFBRUgsR0FBRSxHQUFJeWdDLEdBQUd4Z0MsRUFBRUUsRUFBRXBCLEdBQUdxQixFQUFFRCxFQUFFdVUsVUFBVTRyQixHQUFHei9CLFFBQVFWLEVBQUUsSUFBSUcsRUFBRUosR0FBRyxtQkFBb0JGLEVBQUU2L0IseUJBQXlCLEtBQUt6L0IsRUFBRStLLFNBQXdJLE9BQS9IaEwsRUFBRStWLE9BQU8sRUFBRSxPQUFPalcsR0FBR0MsR0FBR0MsRUFBRXFXLE1BQU04ZCxHQUFHbjBCLEVBQUVGLEVBQUV1VyxNQUFNLEtBQUt6WCxHQUFHb0IsRUFBRXFXLE1BQU04ZCxHQUFHbjBCLEVBQUUsS0FBS0csRUFBRXZCLElBQUl3aEMsR0FBR3RnQyxFQUFFRSxFQUFFRyxFQUFFdkIsR0FBR29CLEVBQUVpVyxjQUFjaFcsRUFBRW8rQixNQUFNbitCLEdBQUdxd0IsR0FBR3Z3QixFQUFFSCxHQUFFLEdBQVdHLEVBQUVxVyxLQUFLLENBQUMsU0FBU29yQixHQUFHM2hDLEdBQUcsSUFBSUUsRUFBRUYsRUFBRXlVLFVBQVV2VSxFQUFFMGhDLGVBQWV4UixHQUFHcHdCLEVBQUVFLEVBQUUwaEMsZUFBZTFoQyxFQUFFMGhDLGlCQUFpQjFoQyxFQUFFbzFCLFNBQVNwMUIsRUFBRW8xQixTQUFTbEYsR0FBR3B3QixFQUFFRSxFQUFFbzFCLFNBQVEsR0FBSWlDLEdBQUd2M0IsRUFBRUUsRUFBRW9iLGNBQWMsQ0FDNWUsU0FBU3VtQixHQUFHN2hDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQXVDLE9BQXBDNHlCLEtBQUtDLEdBQUc3eUIsR0FBR0YsRUFBRStWLE9BQU8sSUFBSXFxQixHQUFHdGdDLEVBQUVFLEVBQUVILEVBQUVJLEdBQVVELEVBQUVxVyxLQUFLLENBQUMsSUFhcUx1ckIsR0FBR0MsR0FBR0MsR0FBR0MsR0FiMUxDLEdBQUcsQ0FBQzlyQixXQUFXLEtBQUttYyxZQUFZLEtBQUtDLFVBQVUsR0FBRyxTQUFTMlAsR0FBR25pQyxHQUFHLE1BQU0sQ0FBQytnQyxVQUFVL2dDLEVBQUVnaEMsVUFBVSxLQUFLQyxZQUFZLEtBQUssQ0FDbE0sU0FBU21CLEdBQUdwaUMsRUFBRUUsRUFBRUgsR0FBRyxJQUEwRE0sRUFBdERGLEVBQUVELEVBQUVteUIsYUFBYWp5QixFQUFFdzNCLEdBQUVoM0IsUUFBUTlCLEdBQUUsRUFBR21CLEtBQWUsSUFBUkMsRUFBRStWLE9BQXFKLElBQXZJNVYsRUFBRUosS0FBS0ksR0FBRSxPQUFPTCxHQUFHLE9BQU9BLEVBQUVtVyxtQkFBd0IsRUFBRi9WLElBQVNDLEdBQUV2QixHQUFFLEVBQUdvQixFQUFFK1YsUUFBUSxLQUFZLE9BQU9qVyxHQUFHLE9BQU9BLEVBQUVtVyxnQkFBYy9WLEdBQUcsR0FBRW92QixHQUFFb0ksR0FBSSxFQUFGeDNCLEdBQVEsT0FBT0osRUFBMkIsT0FBeEIyeUIsR0FBR3p5QixHQUF3QixRQUFyQkYsRUFBRUUsRUFBRWlXLGdCQUEyQyxRQUFmblcsRUFBRUEsRUFBRW9XLGFBQXdDLEVBQVBsVyxFQUFFd3lCLEtBQWtCLE9BQU8xeUIsRUFBRWdFLEtBQUs5RCxFQUFFaTFCLE1BQU0sRUFBRWoxQixFQUFFaTFCLE1BQU0sV0FBMUNqMUIsRUFBRWkxQixNQUFNLEVBQTZDLE9BQUtsMUIsRUFBRUUsRUFBRThOLFNBQVNqTyxFQUFFRyxFQUFFa2lDLFNBQWdCdmpDLEdBQUdxQixFQUFFRCxFQUFFd3lCLEtBQUs1ekIsRUFBRW9CLEVBQUVxVyxNQUFNdFcsRUFBRSxDQUFDeXlCLEtBQUssU0FBU3prQixTQUFTaE8sR0FBVSxFQUFGRSxHQUFNLE9BQU9yQixFQUN0ZEEsRUFBRXdqQyxHQUFHcmlDLEVBQUVFLEVBQUUsRUFBRSxPQUQ4Y3JCLEVBQUVpMkIsV0FBVyxFQUFFajJCLEVBQUV1ekIsYUFDN2VweUIsR0FBb0JELEVBQUVnMEIsR0FBR2gwQixFQUFFRyxFQUFFSixFQUFFLE1BQU1qQixFQUFFa1gsT0FBTzlWLEVBQUVGLEVBQUVnVyxPQUFPOVYsRUFBRXBCLEVBQUUwWCxRQUFReFcsRUFBRUUsRUFBRXFXLE1BQU16WCxFQUFFb0IsRUFBRXFXLE1BQU1KLGNBQWNnc0IsR0FBR3BpQyxHQUFHRyxFQUFFaVcsY0FBYytyQixHQUFHbGlDLEdBQUd1aUMsR0FBR3JpQyxFQUFFRCxJQUFxQixHQUFHLFFBQXJCRyxFQUFFSixFQUFFbVcsZ0JBQTJDLFFBQWY5VixFQUFFRCxFQUFFZ1csWUFBcUIsT0FHcE0sU0FBWXBXLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEVBQUV0QixFQUFFbUIsR0FBRyxHQUFHRixFQUFHLE9BQVcsSUFBUkcsRUFBRStWLE9BQWlCL1YsRUFBRStWLFFBQVEsSUFBd0J1c0IsR0FBR3hpQyxFQUFFRSxFQUFFRCxFQUEzQkUsRUFBRWkvQixHQUFHN2hDLE1BQU1rQyxFQUFFLFNBQXNCLE9BQU9TLEVBQUVpVyxlQUFxQmpXLEVBQUVxVyxNQUFNdlcsRUFBRXVXLE1BQU1yVyxFQUFFK1YsT0FBTyxJQUFJLE9BQUtuWCxFQUFFcUIsRUFBRWtpQyxTQUFTamlDLEVBQUVGLEVBQUV3eUIsS0FBS3Z5QixFQUFFbWlDLEdBQUcsQ0FBQzVQLEtBQUssVUFBVXprQixTQUFTOU4sRUFBRThOLFVBQVU3TixFQUFFLEVBQUUsT0FBTXRCLEVBQUVrMUIsR0FBR2wxQixFQUFFc0IsRUFBRUgsRUFBRSxPQUFRZ1csT0FBTyxFQUFFOVYsRUFBRTZWLE9BQU85VixFQUFFcEIsRUFBRWtYLE9BQU85VixFQUFFQyxFQUFFcVcsUUFBUTFYLEVBQUVvQixFQUFFcVcsTUFBTXBXLEVBQWMsRUFBUEQsRUFBRXd5QixNQUFTMkIsR0FBR24wQixFQUFFRixFQUFFdVcsTUFBTSxLQUFLdFcsR0FBR0MsRUFBRXFXLE1BQU1KLGNBQWNnc0IsR0FBR2xpQyxHQUFHQyxFQUFFaVcsY0FBYytyQixHQUFVcGpDLEdBQUUsS0FBZSxFQUFQb0IsRUFBRXd5QixNQUFRLE9BQU84UCxHQUFHeGlDLEVBQUVFLEVBQUVELEVBQUUsTUFBTSxHQUFHLE9BQU9HLEVBQUU0RCxLQUFLLENBQ2hkLEdBRGlkN0QsRUFBRUMsRUFBRXFuQixhQUFhcm5CLEVBQUVxbkIsWUFBWWdiLFFBQzNlLElBQUlwaUMsRUFBRUYsRUFBRXVpQyxLQUEwQyxPQUFyQ3ZpQyxFQUFFRSxFQUEwQ21pQyxHQUFHeGlDLEVBQUVFLEVBQUVELEVBQS9CRSxFQUFFaS9CLEdBQWxCdGdDLEVBQUV2QixNQUFNa0MsRUFBRSxNQUFhVSxPQUFFLEdBQTBCLENBQXdCLEdBQXZCRSxFQUFFLEtBQUtKLEVBQUVELEVBQUUrMEIsWUFBZUssSUFBSS8wQixFQUFFLENBQUssR0FBRyxRQUFQRixFQUFFbzZCLElBQWMsQ0FBQyxPQUFPdDZCLEdBQUdBLEdBQUcsS0FBSyxFQUFFRyxFQUFFLEVBQUUsTUFBTSxLQUFLLEdBQUdBLEVBQUUsRUFBRSxNQUFNLEtBQUssR0FBRyxLQUFLLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNLEtBQUssTUFBTSxLQUFLLE1BQU0sS0FBSyxPQUFPLEtBQUssT0FBTyxLQUFLLE9BQU8sS0FBSyxRQUFRLEtBQUssUUFBUSxLQUFLLFFBQVEsS0FBSyxRQUFRLEtBQUssU0FBUyxLQUFLLFNBQVMsS0FBSyxTQUFTQSxFQUFFLEdBQUcsTUFBTSxLQUFLLFVBQVVBLEVBQUUsVUFBVSxNQUFNLFFBQVFBLEVBQUUsRUFDaGQsS0FEa2RBLEVBQUUsS0FBS0EsR0FBR0QsRUFBRTBZLGVBQWU1WSxJQUFJLEVBQUVHLElBQzVlQSxJQUFJdEIsRUFBRTB6QixZQUFZMXpCLEVBQUUwekIsVUFBVXB5QixFQUFFdzFCLEdBQUc1MUIsRUFBRUksR0FBR3k2QixHQUFHMTZCLEVBQUVILEVBQUVJLEdBQUcsR0FBRyxDQUEwQixPQUF6QnVpQyxLQUFnQ0gsR0FBR3hpQyxFQUFFRSxFQUFFRCxFQUFsQ0UsRUFBRWkvQixHQUFHN2hDLE1BQU1rQyxFQUFFLE9BQXlCLENBQUMsTUFBRyxPQUFPVyxFQUFFNEQsTUFBWTlELEVBQUUrVixPQUFPLElBQUkvVixFQUFFcVcsTUFBTXZXLEVBQUV1VyxNQUFNclcsRUFBRTBpQyxHQUFHdlcsS0FBSyxLQUFLcnNCLEdBQUdJLEVBQUV5aUMsWUFBWTNpQyxFQUFFLE9BQUtGLEVBQUVsQixFQUFFeXpCLFlBQVlWLEdBQUdqRCxHQUFHeHVCLEVBQUVxbkIsYUFBYW1LLEdBQUcxeEIsRUFBRTR4QixJQUFFLEVBQUdDLEdBQUcsS0FBSyxPQUFPL3hCLElBQUlteEIsR0FBR0MsTUFBTUUsR0FBR0gsR0FBR0MsTUFBTUcsR0FBR0osR0FBR0MsTUFBTUMsR0FBR0MsR0FBR3R4QixFQUFFcEUsR0FBRzIxQixHQUFHdnhCLEVBQUVzeUIsU0FBU2pCLEdBQUdueEIsSUFBR0EsRUFBRXFpQyxHQUFHcmlDLEVBQUVDLEVBQUU4TixXQUFZZ0ksT0FBTyxLQUFZL1YsRUFBQyxDQUxySzRpQyxDQUFHOWlDLEVBQUVFLEVBQUVELEVBQUVFLEVBQUVFLEVBQUVELEVBQUVMLEdBQUcsR0FBR2pCLEVBQUUsQ0FBQ0EsRUFBRXFCLEVBQUVraUMsU0FBU3BpQyxFQUFFQyxFQUFFd3lCLEtBQWVyeUIsR0FBVkQsRUFBRUosRUFBRXVXLE9BQVVDLFFBQVEsSUFBSXpYLEVBQUUsQ0FBQzJ6QixLQUFLLFNBQVN6a0IsU0FBUzlOLEVBQUU4TixVQUNoRixPQURpRyxFQUFGaE8sR0FBTUMsRUFBRXFXLFFBQVFuVyxHQUFnRUQsRUFBRXd6QixHQUFHdnpCLEVBQUVyQixJQUFLZ2tDLGFBQTRCLFNBQWYzaUMsRUFBRTJpQyxlQUF4RjVpQyxFQUFFRCxFQUFFcVcsT0FBUXdlLFdBQVcsRUFBRTUwQixFQUFFa3lCLGFBQWF0ekIsRUFBRW1CLEVBQUVpeUIsVUFBVSxNQUF5RCxPQUFPOXhCLEVBQUV2QixFQUFFNjBCLEdBQUd0ekIsRUFBRXZCLElBQUlBLEVBQUVrMUIsR0FBR2wxQixFQUFFbUIsRUFBRUYsRUFBRSxPQUFRa1csT0FBTyxFQUFHblgsRUFBRWtYLE9BQ25mOVYsRUFBRUMsRUFBRTZWLE9BQU85VixFQUFFQyxFQUFFcVcsUUFBUTFYLEVBQUVvQixFQUFFcVcsTUFBTXBXLEVBQUVBLEVBQUVyQixFQUFFQSxFQUFFb0IsRUFBRXFXLE1BQThCdFcsRUFBRSxRQUExQkEsRUFBRUQsRUFBRXVXLE1BQU1KLGVBQXlCZ3NCLEdBQUdwaUMsR0FBRyxDQUFDZ2hDLFVBQVU5Z0MsRUFBRThnQyxVQUFVaGhDLEVBQUVpaEMsVUFBVSxLQUFLQyxZQUFZaGhDLEVBQUVnaEMsYUFBYW5pQyxFQUFFcVgsY0FBY2xXLEVBQUVuQixFQUFFaTJCLFdBQVcvMEIsRUFBRSswQixZQUFZaDFCLEVBQUVHLEVBQUVpVyxjQUFjK3JCLEdBQVUvaEMsQ0FBQyxDQUFvTyxPQUF6TkgsR0FBVmxCLEVBQUVrQixFQUFFdVcsT0FBVUMsUUFBUXJXLEVBQUV3ekIsR0FBRzcwQixFQUFFLENBQUM0ekIsS0FBSyxVQUFVemtCLFNBQVM5TixFQUFFOE4sYUFBdUIsRUFBUC9OLEVBQUV3eUIsUUFBVXZ5QixFQUFFZzFCLE1BQU1wMUIsR0FBR0ksRUFBRTZWLE9BQU85VixFQUFFQyxFQUFFcVcsUUFBUSxLQUFLLE9BQU94VyxJQUFrQixRQUFkRCxFQUFFRyxFQUFFaXlCLFlBQW9CanlCLEVBQUVpeUIsVUFBVSxDQUFDbnlCLEdBQUdFLEVBQUUrVixPQUFPLElBQUlsVyxFQUFFakQsS0FBS2tELElBQUlFLEVBQUVxVyxNQUFNcFcsRUFBRUQsRUFBRWlXLGNBQWMsS0FBWWhXLENBQUMsQ0FDbmQsU0FBU29pQyxHQUFHdmlDLEVBQUVFLEdBQThELE9BQTNEQSxFQUFFb2lDLEdBQUcsQ0FBQzVQLEtBQUssVUFBVXprQixTQUFTL04sR0FBR0YsRUFBRTB5QixLQUFLLEVBQUUsT0FBUTFjLE9BQU9oVyxFQUFTQSxFQUFFdVcsTUFBTXJXLENBQUMsQ0FBQyxTQUFTc2lDLEdBQUd4aUMsRUFBRUUsRUFBRUgsRUFBRUksR0FBd0csT0FBckcsT0FBT0EsR0FBRzh5QixHQUFHOXlCLEdBQUdrMEIsR0FBR24wQixFQUFFRixFQUFFdVcsTUFBTSxLQUFLeFcsSUFBR0MsRUFBRXVpQyxHQUFHcmlDLEVBQUVBLEVBQUVteUIsYUFBYXBrQixXQUFZZ0ksT0FBTyxFQUFFL1YsRUFBRWlXLGNBQWMsS0FBWW5XLENBQUMsQ0FHa0osU0FBU2dqQyxHQUFHaGpDLEVBQUVFLEVBQUVILEdBQUdDLEVBQUVtMUIsT0FBT2oxQixFQUFFLElBQUlDLEVBQUVILEVBQUUrVixVQUFVLE9BQU81VixJQUFJQSxFQUFFZzFCLE9BQU9qMUIsR0FBRzQwQixHQUFHOTBCLEVBQUVnVyxPQUFPOVYsRUFBRUgsRUFBRSxDQUN4YyxTQUFTa2pDLEdBQUdqakMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsR0FBRyxJQUFJdEIsRUFBRWtCLEVBQUVtVyxjQUFjLE9BQU9yWCxFQUFFa0IsRUFBRW1XLGNBQWMsQ0FBQytzQixZQUFZaGpDLEVBQUVpakMsVUFBVSxLQUFLQyxtQkFBbUIsRUFBRUMsS0FBS2xqQyxFQUFFbWpDLEtBQUt2akMsRUFBRXdqQyxTQUFTbmpDLElBQUl0QixFQUFFb2tDLFlBQVloakMsRUFBRXBCLEVBQUVxa0MsVUFBVSxLQUFLcmtDLEVBQUVza0MsbUJBQW1CLEVBQUV0a0MsRUFBRXVrQyxLQUFLbGpDLEVBQUVyQixFQUFFd2tDLEtBQUt2akMsRUFBRWpCLEVBQUV5a0MsU0FBU25qQyxFQUFFLENBQzNPLFNBQVNvakMsR0FBR3hqQyxFQUFFRSxFQUFFSCxHQUFHLElBQUlJLEVBQUVELEVBQUVteUIsYUFBYWp5QixFQUFFRCxFQUFFMjNCLFlBQVloNUIsRUFBRXFCLEVBQUVtakMsS0FBc0MsR0FBakNoRCxHQUFHdGdDLEVBQUVFLEVBQUVDLEVBQUU4TixTQUFTbE8sR0FBeUIsR0FBdEJJLEVBQUV5M0IsR0FBRWgzQixTQUFxQlQsRUFBSSxFQUFGQSxFQUFJLEVBQUVELEVBQUUrVixPQUFPLFFBQVEsQ0FBQyxHQUFHLE9BQU9qVyxHQUFnQixJQUFSQSxFQUFFaVcsTUFBV2pXLEVBQUUsSUFBSUEsRUFBRUUsRUFBRXFXLE1BQU0sT0FBT3ZXLEdBQUcsQ0FBQyxHQUFHLEtBQUtBLEVBQUVpTCxJQUFJLE9BQU9qTCxFQUFFbVcsZUFBZTZzQixHQUFHaGpDLEVBQUVELEVBQUVHLFFBQVEsR0FBRyxLQUFLRixFQUFFaUwsSUFBSSszQixHQUFHaGpDLEVBQUVELEVBQUVHLFFBQVEsR0FBRyxPQUFPRixFQUFFdVcsTUFBTSxDQUFDdlcsRUFBRXVXLE1BQU1QLE9BQU9oVyxFQUFFQSxFQUFFQSxFQUFFdVcsTUFBTSxRQUFRLENBQUMsR0FBR3ZXLElBQUlFLEVBQUUsTUFBTUYsRUFBRSxLQUFLLE9BQU9BLEVBQUV3VyxTQUFTLENBQUMsR0FBRyxPQUFPeFcsRUFBRWdXLFFBQVFoVyxFQUFFZ1csU0FBUzlWLEVBQUUsTUFBTUYsRUFBRUEsRUFBRUEsRUFBRWdXLE1BQU0sQ0FBQ2hXLEVBQUV3VyxRQUFRUixPQUFPaFcsRUFBRWdXLE9BQU9oVyxFQUFFQSxFQUFFd1csT0FBTyxDQUFDclcsR0FBRyxDQUFDLENBQVEsR0FBUHF2QixHQUFFb0ksR0FBRXozQixHQUFrQixFQUFQRCxFQUFFd3lCLEtBQzNkLE9BQU90eUIsR0FBRyxJQUFLLFdBQXFCLElBQVZMLEVBQUVHLEVBQUVxVyxNQUFVblcsRUFBRSxLQUFLLE9BQU9MLEdBQWlCLFFBQWRDLEVBQUVELEVBQUVnVyxZQUFvQixPQUFPOGhCLEdBQUc3M0IsS0FBS0ksRUFBRUwsR0FBR0EsRUFBRUEsRUFBRXlXLFFBQVksUUFBSnpXLEVBQUVLLElBQVlBLEVBQUVGLEVBQUVxVyxNQUFNclcsRUFBRXFXLE1BQU0sT0FBT25XLEVBQUVMLEVBQUV5VyxRQUFRelcsRUFBRXlXLFFBQVEsTUFBTXlzQixHQUFHL2lDLEdBQUUsRUFBR0UsRUFBRUwsRUFBRWpCLEdBQUcsTUFBTSxJQUFLLFlBQTZCLElBQWpCaUIsRUFBRSxLQUFLSyxFQUFFRixFQUFFcVcsTUFBVXJXLEVBQUVxVyxNQUFNLEtBQUssT0FBT25XLEdBQUcsQ0FBZSxHQUFHLFFBQWpCSixFQUFFSSxFQUFFMlYsWUFBdUIsT0FBTzhoQixHQUFHNzNCLEdBQUcsQ0FBQ0UsRUFBRXFXLE1BQU1uVyxFQUFFLEtBQUssQ0FBQ0osRUFBRUksRUFBRW9XLFFBQVFwVyxFQUFFb1csUUFBUXpXLEVBQUVBLEVBQUVLLEVBQUVBLEVBQUVKLENBQUMsQ0FBQ2lqQyxHQUFHL2lDLEdBQUUsRUFBR0gsRUFBRSxLQUFLakIsR0FBRyxNQUFNLElBQUssV0FBV21rQyxHQUFHL2lDLEdBQUUsRUFBRyxLQUFLLFVBQUssR0FBUSxNQUFNLFFBQVFBLEVBQUVpVyxjQUFjLFVBRG1DalcsRUFBRWlXLGNBQy9lLEtBQStjLE9BQU9qVyxFQUFFcVcsS0FBSyxDQUM3ZCxTQUFTK3FCLEdBQUd0aEMsRUFBRUUsS0FBZSxFQUFQQSxFQUFFd3lCLE9BQVMsT0FBTzF5QixJQUFJQSxFQUFFK1YsVUFBVSxLQUFLN1YsRUFBRTZWLFVBQVUsS0FBSzdWLEVBQUUrVixPQUFPLEVBQUUsQ0FBQyxTQUFTdXFCLEdBQUd4Z0MsRUFBRUUsRUFBRUgsR0FBeUQsR0FBdEQsT0FBT0MsSUFBSUUsRUFBRSswQixhQUFhajFCLEVBQUVpMUIsY0FBYytCLElBQUk5MkIsRUFBRWkxQixNQUFTLEtBQUtwMUIsRUFBRUcsRUFBRTYwQixZQUFZLE9BQU8sS0FBSyxHQUFHLE9BQU8vMEIsR0FBR0UsRUFBRXFXLFFBQVF2VyxFQUFFdVcsTUFBTSxNQUFNaFosTUFBTWtDLEVBQUUsTUFBTSxHQUFHLE9BQU9TLEVBQUVxVyxNQUFNLENBQTRDLElBQWpDeFcsRUFBRTR6QixHQUFaM3pCLEVBQUVFLEVBQUVxVyxNQUFhdlcsRUFBRXF5QixjQUFjbnlCLEVBQUVxVyxNQUFNeFcsRUFBTUEsRUFBRWlXLE9BQU85VixFQUFFLE9BQU9GLEVBQUV3VyxTQUFTeFcsRUFBRUEsRUFBRXdXLFNBQVF6VyxFQUFFQSxFQUFFeVcsUUFBUW1kLEdBQUczekIsRUFBRUEsRUFBRXF5QixlQUFnQnJjLE9BQU85VixFQUFFSCxFQUFFeVcsUUFBUSxJQUFJLENBQUMsT0FBT3RXLEVBQUVxVyxLQUFLLENBTzlhLFNBQVNrdEIsR0FBR3pqQyxFQUFFRSxHQUFHLElBQUk0eEIsR0FBRSxPQUFPOXhCLEVBQUV1akMsVUFBVSxJQUFLLFNBQVNyakMsRUFBRUYsRUFBRXNqQyxLQUFLLElBQUksSUFBSXZqQyxFQUFFLEtBQUssT0FBT0csR0FBRyxPQUFPQSxFQUFFNlYsWUFBWWhXLEVBQUVHLEdBQUdBLEVBQUVBLEVBQUVzVyxRQUFRLE9BQU96VyxFQUFFQyxFQUFFc2pDLEtBQUssS0FBS3ZqQyxFQUFFeVcsUUFBUSxLQUFLLE1BQU0sSUFBSyxZQUFZelcsRUFBRUMsRUFBRXNqQyxLQUFLLElBQUksSUFBSW5qQyxFQUFFLEtBQUssT0FBT0osR0FBRyxPQUFPQSxFQUFFZ1csWUFBWTVWLEVBQUVKLEdBQUdBLEVBQUVBLEVBQUV5VyxRQUFRLE9BQU9yVyxFQUFFRCxHQUFHLE9BQU9GLEVBQUVzakMsS0FBS3RqQyxFQUFFc2pDLEtBQUssS0FBS3RqQyxFQUFFc2pDLEtBQUs5c0IsUUFBUSxLQUFLclcsRUFBRXFXLFFBQVEsS0FBSyxDQUM1VSxTQUFTa3RCLEdBQUUxakMsR0FBRyxJQUFJRSxFQUFFLE9BQU9GLEVBQUUrVixXQUFXL1YsRUFBRStWLFVBQVVRLFFBQVF2VyxFQUFFdVcsTUFBTXhXLEVBQUUsRUFBRUksRUFBRSxFQUFFLEdBQUdELEVBQUUsSUFBSSxJQUFJRSxFQUFFSixFQUFFdVcsTUFBTSxPQUFPblcsR0FBR0wsR0FBR0ssRUFBRSswQixNQUFNLzBCLEVBQUUyMEIsV0FBVzUwQixHQUFrQixTQUFmQyxFQUFFMmlDLGFBQXNCNWlDLEdBQVcsU0FBUkMsRUFBRTZWLE1BQWU3VixFQUFFNFYsT0FBT2hXLEVBQUVJLEVBQUVBLEVBQUVvVyxhQUFhLElBQUlwVyxFQUFFSixFQUFFdVcsTUFBTSxPQUFPblcsR0FBR0wsR0FBR0ssRUFBRSswQixNQUFNLzBCLEVBQUUyMEIsV0FBVzUwQixHQUFHQyxFQUFFMmlDLGFBQWE1aUMsR0FBR0MsRUFBRTZWLE1BQU03VixFQUFFNFYsT0FBT2hXLEVBQUVJLEVBQUVBLEVBQUVvVyxRQUF5QyxPQUFqQ3hXLEVBQUUraUMsY0FBYzVpQyxFQUFFSCxFQUFFKzBCLFdBQVdoMUIsRUFBU0csQ0FBQyxDQUM3VixTQUFTeWpDLEdBQUczakMsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFRCxFQUFFbXlCLGFBQW1CLE9BQU5WLEdBQUd6eEIsR0FBVUEsRUFBRStLLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsS0FBSyxHQUFHLE9BQU95NEIsR0FBRXhqQyxHQUFHLEtBQUssS0FBSyxFQVV0RCxLQUFLLEdBQUcsT0FBTyt2QixHQUFHL3ZCLEVBQUVPLE9BQU8wdkIsS0FBS3VULEdBQUV4akMsR0FBRyxLQVZxRCxLQUFLLEVBQTJRLE9BQXpRQyxFQUFFRCxFQUFFdVUsVUFBVWdqQixLQUFLbEksR0FBRUksSUFBSUosR0FBRUcsSUFBR3NJLEtBQUs3M0IsRUFBRXloQyxpQkFBaUJ6aEMsRUFBRW0xQixRQUFRbjFCLEVBQUV5aEMsZUFBZXpoQyxFQUFFeWhDLGVBQWUsTUFBUyxPQUFPNWhDLEdBQUcsT0FBT0EsRUFBRXVXLFFBQU1zYyxHQUFHM3lCLEdBQUdBLEVBQUUrVixPQUFPLEVBQUUsT0FBT2pXLEdBQUdBLEVBQUVtVyxjQUFja0YsZ0JBQTJCLElBQVJuYixFQUFFK1YsU0FBYS9WLEVBQUUrVixPQUFPLEtBQUssT0FBTzhiLEtBQUs2UixHQUFHN1IsSUFBSUEsR0FBRyxRQUFPZ1EsR0FBRy9oQyxFQUFFRSxHQUFHd2pDLEdBQUV4akMsR0FBVSxLQUFLLEtBQUssRUFBRXkzQixHQUFHejNCLEdBQUcsSUFBSUUsRUFBRWszQixHQUFHRCxHQUFHejJCLFNBQzdlLEdBQVRiLEVBQUVHLEVBQUVPLEtBQVEsT0FBT1QsR0FBRyxNQUFNRSxFQUFFdVUsVUFBVXV0QixHQUFHaGlDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUdKLEVBQUVMLE1BQU1PLEVBQUVQLE1BQU1PLEVBQUUrVixPQUFPLElBQUkvVixFQUFFK1YsT0FBTyxhQUFhLENBQUMsSUFBSTlWLEVBQUUsQ0FBQyxHQUFHLE9BQU9ELEVBQUV1VSxVQUFVLE1BQU1sWCxNQUFNa0MsRUFBRSxNQUFXLE9BQUxpa0MsR0FBRXhqQyxHQUFVLElBQUksQ0FBa0IsR0FBakJGLEVBQUVzM0IsR0FBR0gsR0FBR3YyQixTQUFZaXlCLEdBQUczeUIsR0FBRyxDQUFDQyxFQUFFRCxFQUFFdVUsVUFBVTFVLEVBQUVHLEVBQUVPLEtBQUssSUFBSTNCLEVBQUVvQixFQUFFNHlCLGNBQStDLE9BQWpDM3lCLEVBQUU2dUIsSUFBSTl1QixFQUFFQyxFQUFFOHVCLElBQUlud0IsRUFBRWtCLEtBQWMsRUFBUEUsRUFBRXd5QixNQUFlM3lCLEdBQUcsSUFBSyxTQUFTK3JCLEdBQUUsU0FBUzNyQixHQUFHMnJCLEdBQUUsUUFBUTNyQixHQUFHLE1BQU0sSUFBSyxTQUFTLElBQUssU0FBUyxJQUFLLFFBQVEyckIsR0FBRSxPQUFPM3JCLEdBQUcsTUFBTSxJQUFLLFFBQVEsSUFBSyxRQUFRLElBQUlDLEVBQUUsRUFBRUEsRUFBRW1yQixHQUFHcHZCLE9BQU9pRSxJQUFJMHJCLEdBQUVQLEdBQUduckIsR0FBR0QsR0FBRyxNQUFNLElBQUssU0FBUzJyQixHQUFFLFFBQVEzckIsR0FBRyxNQUFNLElBQUssTUFBTSxJQUFLLFFBQVEsSUFBSyxPQUFPMnJCLEdBQUUsUUFDbmhCM3JCLEdBQUcyckIsR0FBRSxPQUFPM3JCLEdBQUcsTUFBTSxJQUFLLFVBQVUyckIsR0FBRSxTQUFTM3JCLEdBQUcsTUFBTSxJQUFLLFFBQVE4TSxFQUFHOU0sRUFBRXJCLEdBQUdndEIsR0FBRSxVQUFVM3JCLEdBQUcsTUFBTSxJQUFLLFNBQVNBLEVBQUU0TSxjQUFjLENBQUM4MkIsY0FBYy9rQyxFQUFFZ2xDLFVBQVVoWSxHQUFFLFVBQVUzckIsR0FBRyxNQUFNLElBQUssV0FBVytOLEdBQUcvTixFQUFFckIsR0FBR2d0QixHQUFFLFVBQVUzckIsR0FBa0IsSUFBSSxJQUFJRixLQUF2QjBULEdBQUc1VCxFQUFFakIsR0FBR3NCLEVBQUUsS0FBa0J0QixFQUFFLEdBQUdBLEVBQUVPLGVBQWVZLEdBQUcsQ0FBQyxJQUFJSSxFQUFFdkIsRUFBRW1CLEdBQUcsYUFBYUEsRUFBRSxpQkFBa0JJLEVBQUVGLEVBQUVrTyxjQUFjaE8sS0FBSSxJQUFLdkIsRUFBRWlsQywwQkFBMEJsVyxHQUFHMXRCLEVBQUVrTyxZQUFZaE8sRUFBRUwsR0FBR0ksRUFBRSxDQUFDLFdBQVdDLElBQUksaUJBQWtCQSxHQUFHRixFQUFFa08sY0FBYyxHQUFHaE8sS0FBSSxJQUFLdkIsRUFBRWlsQywwQkFBMEJsVyxHQUFHMXRCLEVBQUVrTyxZQUMxZWhPLEVBQUVMLEdBQUdJLEVBQUUsQ0FBQyxXQUFXLEdBQUdDLElBQUlxRyxFQUFHckgsZUFBZVksSUFBSSxNQUFNSSxHQUFHLGFBQWFKLEdBQUc2ckIsR0FBRSxTQUFTM3JCLEVBQUUsQ0FBQyxPQUFPSixHQUFHLElBQUssUUFBUTRMLEVBQUd4TCxHQUFHb04sRUFBR3BOLEVBQUVyQixHQUFFLEdBQUksTUFBTSxJQUFLLFdBQVc2TSxFQUFHeEwsR0FBR2lPLEdBQUdqTyxHQUFHLE1BQU0sSUFBSyxTQUFTLElBQUssU0FBUyxNQUFNLFFBQVEsbUJBQW9CckIsRUFBRWtsQyxVQUFVN2pDLEVBQUU4akMsUUFBUW5XLElBQUkzdEIsRUFBRUMsRUFBRUYsRUFBRTYxQixZQUFZNTFCLEVBQUUsT0FBT0EsSUFBSUQsRUFBRStWLE9BQU8sRUFBRSxLQUFLLENBQUNoVyxFQUFFLElBQUlHLEVBQUVnUCxTQUFTaFAsRUFBRUEsRUFBRW9OLGNBQWMsaUNBQWlDeE4sSUFBSUEsRUFBRXNPLEdBQUd2TyxJQUFJLGlDQUFpQ0MsRUFBRSxXQUFXRCxJQUFHQyxFQUFFQyxFQUFFK0csY0FBYyxRQUFTMkgsVUFBVSxxQkFBdUIzTyxFQUFFQSxFQUFFOE8sWUFBWTlPLEVBQUU2TyxhQUMvZixpQkFBa0IxTyxFQUFFMFQsR0FBRzdULEVBQUVDLEVBQUUrRyxjQUFjakgsRUFBRSxDQUFDOFQsR0FBRzFULEVBQUUwVCxNQUFNN1QsRUFBRUMsRUFBRStHLGNBQWNqSCxHQUFHLFdBQVdBLElBQUlFLEVBQUVELEVBQUVHLEVBQUUyakMsU0FBUzdqQyxFQUFFNmpDLFVBQVMsRUFBRzNqQyxFQUFFK2pDLE9BQU9qa0MsRUFBRWlrQyxLQUFLL2pDLEVBQUUrakMsUUFBUWxrQyxFQUFFQyxFQUFFa2tDLGdCQUFnQm5rQyxFQUFFRCxHQUFHQyxFQUFFZ3ZCLElBQUk5dUIsRUFBRUYsRUFBRWl2QixJQUFJOXVCLEVBQUUyaEMsR0FBRzloQyxFQUFFRSxHQUFFLEdBQUcsR0FBSUEsRUFBRXVVLFVBQVV6VSxFQUFFQSxFQUFFLENBQVcsT0FBVkMsRUFBRTJULEdBQUc3VCxFQUFFSSxHQUFVSixHQUFHLElBQUssU0FBUytyQixHQUFFLFNBQVM5ckIsR0FBRzhyQixHQUFFLFFBQVE5ckIsR0FBR0ksRUFBRUQsRUFBRSxNQUFNLElBQUssU0FBUyxJQUFLLFNBQVMsSUFBSyxRQUFRMnJCLEdBQUUsT0FBTzlyQixHQUFHSSxFQUFFRCxFQUFFLE1BQU0sSUFBSyxRQUFRLElBQUssUUFBUSxJQUFJQyxFQUFFLEVBQUVBLEVBQUVtckIsR0FBR3B2QixPQUFPaUUsSUFBSTByQixHQUFFUCxHQUFHbnJCLEdBQUdKLEdBQUdJLEVBQUVELEVBQUUsTUFBTSxJQUFLLFNBQVMyckIsR0FBRSxRQUFROXJCLEdBQUdJLEVBQUVELEVBQUUsTUFBTSxJQUFLLE1BQU0sSUFBSyxRQUFRLElBQUssT0FBTzJyQixHQUFFLFFBQ2xmOXJCLEdBQUc4ckIsR0FBRSxPQUFPOXJCLEdBQUdJLEVBQUVELEVBQUUsTUFBTSxJQUFLLFVBQVUyckIsR0FBRSxTQUFTOXJCLEdBQUdJLEVBQUVELEVBQUUsTUFBTSxJQUFLLFFBQVE4TSxFQUFHak4sRUFBRUcsR0FBR0MsRUFBRXdNLEVBQUc1TSxFQUFFRyxHQUFHMnJCLEdBQUUsVUFBVTlyQixHQUFHLE1BQU0sSUFBSyxTQUFpTCxRQUFRSSxFQUFFRCxRQUF4SyxJQUFLLFNBQVNILEVBQUUrTSxjQUFjLENBQUM4MkIsY0FBYzFqQyxFQUFFMmpDLFVBQVUxakMsRUFBRTRKLEVBQUUsQ0FBQyxFQUFFN0osRUFBRSxDQUFDcU0sV0FBTSxJQUFTc2YsR0FBRSxVQUFVOXJCLEdBQUcsTUFBTSxJQUFLLFdBQVdrTyxHQUFHbE8sRUFBRUcsR0FBR0MsRUFBRTJOLEdBQUcvTixFQUFFRyxHQUFHMnJCLEdBQUUsVUFBVTlyQixHQUFpQyxJQUFJbEIsS0FBaEI2VSxHQUFHNVQsRUFBRUssR0FBR0MsRUFBRUQsRUFBYSxHQUFHQyxFQUFFaEIsZUFBZVAsR0FBRyxDQUFDLElBQUlDLEVBQUVzQixFQUFFdkIsR0FBRyxVQUFVQSxFQUFFc1QsR0FBR3BTLEVBQUVqQixHQUFHLDRCQUE0QkQsRUFBdUIsT0FBcEJDLEVBQUVBLEVBQUVBLEVBQUVtdkIsWUFBTyxJQUFnQnpmLEdBQUd6TyxFQUFFakIsR0FBSSxhQUFhRCxFQUFFLGlCQUFrQkMsR0FBRyxhQUM3ZWdCLEdBQUcsS0FBS2hCLElBQUltUSxHQUFHbFAsRUFBRWpCLEdBQUcsaUJBQWtCQSxHQUFHbVEsR0FBR2xQLEVBQUUsR0FBR2pCLEdBQUcsbUNBQW1DRCxHQUFHLDZCQUE2QkEsR0FBRyxjQUFjQSxJQUFJNEgsRUFBR3JILGVBQWVQLEdBQUcsTUFBTUMsR0FBRyxhQUFhRCxHQUFHZ3RCLEdBQUUsU0FBUzlyQixHQUFHLE1BQU1qQixHQUFHb0osRUFBR25JLEVBQUVsQixFQUFFQyxFQUFFa0IsR0FBRyxDQUFDLE9BQU9GLEdBQUcsSUFBSyxRQUFRNEwsRUFBRzNMLEdBQUd1TixFQUFHdk4sRUFBRUcsR0FBRSxHQUFJLE1BQU0sSUFBSyxXQUFXd0wsRUFBRzNMLEdBQUdvTyxHQUFHcE8sR0FBRyxNQUFNLElBQUssU0FBUyxNQUFNRyxFQUFFcU0sT0FBT3hNLEVBQUUwSSxhQUFhLFFBQVEsR0FBRzhDLEVBQUdyTCxFQUFFcU0sUUFBUSxNQUFNLElBQUssU0FBU3hNLEVBQUU4akMsV0FBVzNqQyxFQUFFMmpDLFNBQW1CLE9BQVZobEMsRUFBRXFCLEVBQUVxTSxPQUFjbUIsR0FBRzNOLElBQUlHLEVBQUUyakMsU0FBU2hsQyxHQUFFLEdBQUksTUFBTXFCLEVBQUUyTSxjQUFjYSxHQUFHM04sSUFBSUcsRUFBRTJqQyxTQUFTM2pDLEVBQUUyTSxjQUNsZixHQUFJLE1BQU0sUUFBUSxtQkFBb0IxTSxFQUFFNGpDLFVBQVVoa0MsRUFBRWlrQyxRQUFRblcsSUFBSSxPQUFPL3RCLEdBQUcsSUFBSyxTQUFTLElBQUssUUFBUSxJQUFLLFNBQVMsSUFBSyxXQUFXSSxJQUFJQSxFQUFFaWtDLFVBQVUsTUFBTXBrQyxFQUFFLElBQUssTUFBTUcsR0FBRSxFQUFHLE1BQU1ILEVBQUUsUUFBUUcsR0FBRSxFQUFHLENBQUNBLElBQUlELEVBQUUrVixPQUFPLEVBQUUsQ0FBQyxPQUFPL1YsRUFBRVAsTUFBTU8sRUFBRStWLE9BQU8sSUFBSS9WLEVBQUUrVixPQUFPLFFBQVEsQ0FBTSxPQUFMeXRCLEdBQUV4akMsR0FBVSxLQUFLLEtBQUssRUFBRSxHQUFHRixHQUFHLE1BQU1FLEVBQUV1VSxVQUFVd3RCLEdBQUdqaUMsRUFBRUUsRUFBRUYsRUFBRTh5QixjQUFjM3lCLE9BQU8sQ0FBQyxHQUFHLGlCQUFrQkEsR0FBRyxPQUFPRCxFQUFFdVUsVUFBVSxNQUFNbFgsTUFBTWtDLEVBQUUsTUFBc0MsR0FBaENNLEVBQUV1M0IsR0FBR0QsR0FBR3oyQixTQUFTMDJCLEdBQUdILEdBQUd2MkIsU0FBWWl5QixHQUFHM3lCLEdBQUcsQ0FBeUMsR0FBeENDLEVBQUVELEVBQUV1VSxVQUFVMVUsRUFBRUcsRUFBRTR5QixjQUFjM3lCLEVBQUU2dUIsSUFBSTl1QixHQUFLcEIsRUFBRXFCLEVBQUVrUCxZQUFZdFAsSUFDL2UsUUFEb2ZDLEVBQ3ZmNHhCLElBQVksT0FBTzV4QixFQUFFaUwsS0FBSyxLQUFLLEVBQUU0aUIsR0FBRzF0QixFQUFFa1AsVUFBVXRQLEtBQWMsRUFBUEMsRUFBRTB5QixPQUFTLE1BQU0sS0FBSyxHQUFFLElBQUsxeUIsRUFBRTh5QixjQUFjaVIsMEJBQTBCbFcsR0FBRzF0QixFQUFFa1AsVUFBVXRQLEtBQWMsRUFBUEMsRUFBRTB5QixPQUFTNXpCLElBQUlvQixFQUFFK1YsT0FBTyxFQUFFLE1BQU05VixHQUFHLElBQUlKLEVBQUVxUCxTQUFTclAsRUFBRUEsRUFBRXlOLGVBQWU2MkIsZUFBZWxrQyxJQUFLNnVCLElBQUk5dUIsRUFBRUEsRUFBRXVVLFVBQVV0VSxDQUFDLENBQU0sT0FBTHVqQyxHQUFFeGpDLEdBQVUsS0FBSyxLQUFLLEdBQTBCLEdBQXZCcXZCLEdBQUVxSSxJQUFHejNCLEVBQUVELEVBQUVpVyxjQUFpQixPQUFPblcsR0FBRyxPQUFPQSxFQUFFbVcsZUFBZSxPQUFPblcsRUFBRW1XLGNBQWNDLFdBQVcsQ0FBQyxHQUFHMGIsSUFBRyxPQUFPRCxJQUFnQixFQUFQM3hCLEVBQUV3eUIsUUFBc0IsSUFBUnh5QixFQUFFK1YsT0FBVzhjLEtBQUtDLEtBQUs5eUIsRUFBRStWLE9BQU8sTUFBTW5YLEdBQUUsT0FBUSxHQUFHQSxFQUFFK3pCLEdBQUczeUIsR0FBRyxPQUFPQyxHQUFHLE9BQU9BLEVBQUVpVyxXQUFXLENBQUMsR0FBRyxPQUM1ZnBXLEVBQUUsQ0FBQyxJQUFJbEIsRUFBRSxNQUFNdkIsTUFBTWtDLEVBQUUsTUFBcUQsS0FBN0JYLEVBQUUsUUFBcEJBLEVBQUVvQixFQUFFaVcsZUFBeUJyWCxFQUFFc1gsV0FBVyxNQUFXLE1BQU03WSxNQUFNa0MsRUFBRSxNQUFNWCxFQUFFa3dCLElBQUk5dUIsQ0FBQyxNQUFNOHlCLE9BQWtCLElBQVI5eUIsRUFBRStWLFNBQWEvVixFQUFFaVcsY0FBYyxNQUFNalcsRUFBRStWLE9BQU8sRUFBRXl0QixHQUFFeGpDLEdBQUdwQixHQUFFLENBQUUsTUFBTSxPQUFPaXpCLEtBQUs2UixHQUFHN1IsSUFBSUEsR0FBRyxNQUFNanpCLEdBQUUsRUFBRyxJQUFJQSxFQUFFLE9BQWUsTUFBUm9CLEVBQUUrVixNQUFZL1YsRUFBRSxJQUFJLENBQUMsT0FBZ0IsSUFBUkEsRUFBRStWLE9BQWtCL1YsRUFBRWkxQixNQUFNcDFCLEVBQUVHLEtBQUVDLEVBQUUsT0FBT0EsS0FBTyxPQUFPSCxHQUFHLE9BQU9BLEVBQUVtVyxnQkFBZ0JoVyxJQUFJRCxFQUFFcVcsTUFBTU4sT0FBTyxLQUFpQixFQUFQL1YsRUFBRXd5QixPQUFVLE9BQU8xeUIsR0FBa0IsRUFBVjQzQixHQUFFaDNCLFFBQVcsSUFBSTBqQyxLQUFJQSxHQUFFLEdBQUczQixPQUFPLE9BQU96aUMsRUFBRTYxQixjQUFjNzFCLEVBQUUrVixPQUFPLEdBQUd5dEIsR0FBRXhqQyxHQUFVLE1BQUssS0FBSyxFQUFFLE9BQU91M0IsS0FDcmZzSyxHQUFHL2hDLEVBQUVFLEdBQUcsT0FBT0YsR0FBR29zQixHQUFHbHNCLEVBQUV1VSxVQUFVNkcsZUFBZW9vQixHQUFFeGpDLEdBQUcsS0FBSyxLQUFLLEdBQUcsT0FBTzAwQixHQUFHMTBCLEVBQUVPLEtBQUsySyxVQUFVczRCLEdBQUV4akMsR0FBRyxLQUErQyxLQUFLLEdBQTBCLEdBQXZCcXZCLEdBQUVxSSxJQUF3QixRQUFyQjk0QixFQUFFb0IsRUFBRWlXLGVBQTBCLE9BQU91dEIsR0FBRXhqQyxHQUFHLEtBQXVDLEdBQWxDQyxLQUFlLElBQVJELEVBQUUrVixPQUE0QixRQUFqQmhXLEVBQUVuQixFQUFFcWtDLFdBQXNCLEdBQUdoakMsRUFBRXNqQyxHQUFHM2tDLEdBQUUsT0FBUSxDQUFDLEdBQUcsSUFBSXdsQyxJQUFHLE9BQU90a0MsR0FBZ0IsSUFBUkEsRUFBRWlXLE1BQVcsSUFBSWpXLEVBQUVFLEVBQUVxVyxNQUFNLE9BQU92VyxHQUFHLENBQVMsR0FBRyxRQUFYQyxFQUFFNDNCLEdBQUc3M0IsSUFBZSxDQUFtRyxJQUFsR0UsRUFBRStWLE9BQU8sSUFBSXd0QixHQUFHM2tDLEdBQUUsR0FBb0IsUUFBaEJxQixFQUFFRixFQUFFODFCLGVBQXVCNzFCLEVBQUU2MUIsWUFBWTUxQixFQUFFRCxFQUFFK1YsT0FBTyxHQUFHL1YsRUFBRTZpQyxhQUFhLEVBQUU1aUMsRUFBRUosRUFBTUEsRUFBRUcsRUFBRXFXLE1BQU0sT0FBT3hXLEdBQU9DLEVBQUVHLEdBQU5yQixFQUFFaUIsR0FBUWtXLE9BQU8sU0FDL2QsUUFBZGhXLEVBQUVuQixFQUFFaVgsWUFBb0JqWCxFQUFFaTJCLFdBQVcsRUFBRWoyQixFQUFFcTJCLE1BQU1uMUIsRUFBRWxCLEVBQUV5WCxNQUFNLEtBQUt6WCxFQUFFaWtDLGFBQWEsRUFBRWprQyxFQUFFZzBCLGNBQWMsS0FBS2gwQixFQUFFcVgsY0FBYyxLQUFLclgsRUFBRWkzQixZQUFZLEtBQUtqM0IsRUFBRW0yQixhQUFhLEtBQUtuMkIsRUFBRTJWLFVBQVUsT0FBTzNWLEVBQUVpMkIsV0FBVzkwQixFQUFFODBCLFdBQVdqMkIsRUFBRXEyQixNQUFNbDFCLEVBQUVrMUIsTUFBTXIyQixFQUFFeVgsTUFBTXRXLEVBQUVzVyxNQUFNelgsRUFBRWlrQyxhQUFhLEVBQUVqa0MsRUFBRXF6QixVQUFVLEtBQUtyekIsRUFBRWcwQixjQUFjN3lCLEVBQUU2eUIsY0FBY2gwQixFQUFFcVgsY0FBY2xXLEVBQUVrVyxjQUFjclgsRUFBRWkzQixZQUFZOTFCLEVBQUU4MUIsWUFBWWozQixFQUFFMkIsS0FBS1IsRUFBRVEsS0FBS1QsRUFBRUMsRUFBRWcxQixhQUFhbjJCLEVBQUVtMkIsYUFBYSxPQUFPajFCLEVBQUUsS0FBSyxDQUFDbTFCLE1BQU1uMUIsRUFBRW0xQixNQUFNRCxhQUFhbDFCLEVBQUVrMUIsZUFBZW4xQixFQUFFQSxFQUFFeVcsUUFBMkIsT0FBbkJnWixHQUFFb0ksR0FBWSxFQUFWQSxHQUFFaDNCLFFBQVUsR0FBVVYsRUFBRXFXLEtBQUssQ0FBQ3ZXLEVBQ2xnQkEsRUFBRXdXLE9BQU8sQ0FBQyxPQUFPMVgsRUFBRXdrQyxNQUFNbnNCLEtBQUlvdEIsS0FBS3JrQyxFQUFFK1YsT0FBTyxJQUFJOVYsR0FBRSxFQUFHc2pDLEdBQUcza0MsR0FBRSxHQUFJb0IsRUFBRWkxQixNQUFNLFFBQVEsS0FBSyxDQUFDLElBQUloMUIsRUFBRSxHQUFXLFFBQVJILEVBQUU2M0IsR0FBRzUzQixLQUFhLEdBQUdDLEVBQUUrVixPQUFPLElBQUk5VixHQUFFLEVBQW1CLFFBQWhCSixFQUFFQyxFQUFFKzFCLGVBQXVCNzFCLEVBQUU2MUIsWUFBWWgyQixFQUFFRyxFQUFFK1YsT0FBTyxHQUFHd3RCLEdBQUcza0MsR0FBRSxHQUFJLE9BQU9BLEVBQUV3a0MsTUFBTSxXQUFXeGtDLEVBQUV5a0MsV0FBV3RqQyxFQUFFOFYsWUFBWStiLEdBQUUsT0FBTzRSLEdBQUV4akMsR0FBRyxVQUFVLEVBQUVpWCxLQUFJclksRUFBRXNrQyxtQkFBbUJtQixJQUFJLGFBQWF4a0MsSUFBSUcsRUFBRStWLE9BQU8sSUFBSTlWLEdBQUUsRUFBR3NqQyxHQUFHM2tDLEdBQUUsR0FBSW9CLEVBQUVpMUIsTUFBTSxTQUFTcjJCLEVBQUVva0MsYUFBYWpqQyxFQUFFdVcsUUFBUXRXLEVBQUVxVyxNQUFNclcsRUFBRXFXLE1BQU10VyxJQUFhLFFBQVRGLEVBQUVqQixFQUFFdWtDLE1BQWN0akMsRUFBRXlXLFFBQVF2VyxFQUFFQyxFQUFFcVcsTUFBTXRXLEVBQUVuQixFQUFFdWtDLEtBQUtwakMsRUFBRSxDQUFDLE9BQUcsT0FBT25CLEVBQUV3a0MsTUFBWXBqQyxFQUFFcEIsRUFBRXdrQyxLQUFLeGtDLEVBQUVxa0MsVUFDOWVqakMsRUFBRXBCLEVBQUV3a0MsS0FBS3BqQyxFQUFFc1csUUFBUTFYLEVBQUVza0MsbUJBQW1CanNCLEtBQUlqWCxFQUFFc1csUUFBUSxLQUFLelcsRUFBRTYzQixHQUFFaDNCLFFBQVE0dUIsR0FBRW9JLEdBQUV6M0IsRUFBSSxFQUFGSixFQUFJLEVBQUksRUFBRkEsR0FBS0csSUFBRXdqQyxHQUFFeGpDLEdBQVUsTUFBSyxLQUFLLEdBQUcsS0FBSyxHQUFHLE9BQU9za0MsS0FBS3JrQyxFQUFFLE9BQU9ELEVBQUVpVyxjQUFjLE9BQU9uVyxHQUFHLE9BQU9BLEVBQUVtVyxnQkFBZ0JoVyxJQUFJRCxFQUFFK1YsT0FBTyxNQUFNOVYsR0FBZSxFQUFQRCxFQUFFd3lCLFFBQWdCLFdBQUh5TyxNQUFpQnVDLEdBQUV4akMsR0FBa0IsRUFBZkEsRUFBRTZpQyxlQUFpQjdpQyxFQUFFK1YsT0FBTyxPQUFPeXRCLEdBQUV4akMsR0FBRyxLQUFLLEtBQUssR0FBZSxLQUFLLEdBQUcsT0FBTyxLQUFLLE1BQU0zQyxNQUFNa0MsRUFBRSxJQUFJUyxFQUFFK0ssS0FBTSxDQUNsWCxTQUFTdzVCLEdBQUd6a0MsRUFBRUUsR0FBUyxPQUFOeXhCLEdBQUd6eEIsR0FBVUEsRUFBRStLLEtBQUssS0FBSyxFQUFFLE9BQU9nbEIsR0FBRy92QixFQUFFTyxPQUFPMHZCLEtBQWlCLE9BQVpud0IsRUFBRUUsRUFBRStWLFFBQWUvVixFQUFFK1YsT0FBUyxNQUFIalcsRUFBUyxJQUFJRSxHQUFHLEtBQUssS0FBSyxFQUFFLE9BQU91M0IsS0FBS2xJLEdBQUVJLElBQUlKLEdBQUVHLElBQUdzSSxLQUFzQixPQUFqQmg0QixFQUFFRSxFQUFFK1YsVUFBNEIsSUFBRmpXLElBQVFFLEVBQUUrVixPQUFTLE1BQUhqVyxFQUFTLElBQUlFLEdBQUcsS0FBSyxLQUFLLEVBQUUsT0FBT3kzQixHQUFHejNCLEdBQUcsS0FBSyxLQUFLLEdBQTBCLEdBQXZCcXZCLEdBQUVxSSxJQUF3QixRQUFyQjUzQixFQUFFRSxFQUFFaVcsZ0JBQTJCLE9BQU9uVyxFQUFFb1csV0FBVyxDQUFDLEdBQUcsT0FBT2xXLEVBQUU2VixVQUFVLE1BQU14WSxNQUFNa0MsRUFBRSxNQUFNdXpCLElBQUksQ0FBVyxPQUFTLE9BQW5CaHpCLEVBQUVFLEVBQUUrVixRQUFzQi9WLEVBQUUrVixPQUFTLE1BQUhqVyxFQUFTLElBQUlFLEdBQUcsS0FBSyxLQUFLLEdBQUcsT0FBT3F2QixHQUFFcUksSUFBRyxLQUFLLEtBQUssRUFBRSxPQUFPSCxLQUFLLEtBQUssS0FBSyxHQUFHLE9BQU83QyxHQUFHMTBCLEVBQUVPLEtBQUsySyxVQUFVLEtBQUssS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPbzVCLEtBQzFnQixLQUF5QixRQUFRLE9BQU8sS0FBSyxDQXJCN0MxQyxHQUFHLFNBQVM5aEMsRUFBRUUsR0FBRyxJQUFJLElBQUlILEVBQUVHLEVBQUVxVyxNQUFNLE9BQU94VyxHQUFHLENBQUMsR0FBRyxJQUFJQSxFQUFFa0wsS0FBSyxJQUFJbEwsRUFBRWtMLElBQUlqTCxFQUFFK08sWUFBWWhQLEVBQUUwVSxnQkFBZ0IsR0FBRyxJQUFJMVUsRUFBRWtMLEtBQUssT0FBT2xMLEVBQUV3VyxNQUFNLENBQUN4VyxFQUFFd1csTUFBTVAsT0FBT2pXLEVBQUVBLEVBQUVBLEVBQUV3VyxNQUFNLFFBQVEsQ0FBQyxHQUFHeFcsSUFBSUcsRUFBRSxNQUFNLEtBQUssT0FBT0gsRUFBRXlXLFNBQVMsQ0FBQyxHQUFHLE9BQU96VyxFQUFFaVcsUUFBUWpXLEVBQUVpVyxTQUFTOVYsRUFBRSxPQUFPSCxFQUFFQSxFQUFFaVcsTUFBTSxDQUFDalcsRUFBRXlXLFFBQVFSLE9BQU9qVyxFQUFFaVcsT0FBT2pXLEVBQUVBLEVBQUV5VyxPQUFPLENBQUMsRUFBRXVyQixHQUFHLFdBQVcsRUFDeFRDLEdBQUcsU0FBU2hpQyxFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLElBQUlDLEVBQUVKLEVBQUU4eUIsY0FBYyxHQUFHMXlCLElBQUlELEVBQUUsQ0FBQ0gsRUFBRUUsRUFBRXVVLFVBQVU2aUIsR0FBR0gsR0FBR3YyQixTQUFTLElBQTRSWCxFQUF4Um5CLEVBQUUsS0FBSyxPQUFPaUIsR0FBRyxJQUFLLFFBQVFLLEVBQUV3TSxFQUFHNU0sRUFBRUksR0FBR0QsRUFBRXlNLEVBQUc1TSxFQUFFRyxHQUFHckIsRUFBRSxHQUFHLE1BQU0sSUFBSyxTQUFTc0IsRUFBRTRKLEVBQUUsQ0FBQyxFQUFFNUosRUFBRSxDQUFDb00sV0FBTSxJQUFTck0sRUFBRTZKLEVBQUUsQ0FBQyxFQUFFN0osRUFBRSxDQUFDcU0sV0FBTSxJQUFTMU4sRUFBRSxHQUFHLE1BQU0sSUFBSyxXQUFXc0IsRUFBRTJOLEdBQUcvTixFQUFFSSxHQUFHRCxFQUFFNE4sR0FBRy9OLEVBQUVHLEdBQUdyQixFQUFFLEdBQUcsTUFBTSxRQUFRLG1CQUFvQnNCLEVBQUU0akMsU0FBUyxtQkFBb0I3akMsRUFBRTZqQyxVQUFVaGtDLEVBQUVpa0MsUUFBUW5XLElBQXlCLElBQUk1dUIsS0FBekJ5VSxHQUFHNVQsRUFBRUksR0FBU0osRUFBRSxLQUFjSyxFQUFFLElBQUlELEVBQUVkLGVBQWVILElBQUlrQixFQUFFZixlQUFlSCxJQUFJLE1BQU1rQixFQUFFbEIsR0FBRyxHQUFHLFVBQVVBLEVBQUUsQ0FBQyxJQUFJbUIsRUFBRUQsRUFBRWxCLEdBQUcsSUFBSWUsS0FBS0ksRUFBRUEsRUFBRWhCLGVBQWVZLEtBQ2pmRixJQUFJQSxFQUFFLENBQUMsR0FBR0EsRUFBRUUsR0FBRyxHQUFHLEtBQUssNEJBQTRCZixHQUFHLGFBQWFBLEdBQUcsbUNBQW1DQSxHQUFHLDZCQUE2QkEsR0FBRyxjQUFjQSxJQUFJd0gsRUFBR3JILGVBQWVILEdBQUdKLElBQUlBLEVBQUUsS0FBS0EsRUFBRUEsR0FBRyxJQUFJaEMsS0FBS29DLEVBQUUsT0FBTyxJQUFJQSxLQUFLaUIsRUFBRSxDQUFDLElBQUlwQixFQUFFb0IsRUFBRWpCLEdBQXlCLEdBQXRCbUIsRUFBRSxNQUFNRCxFQUFFQSxFQUFFbEIsUUFBRyxFQUFVaUIsRUFBRWQsZUFBZUgsSUFBSUgsSUFBSXNCLElBQUksTUFBTXRCLEdBQUcsTUFBTXNCLEdBQUcsR0FBRyxVQUFVbkIsRUFBRSxHQUFHbUIsRUFBRSxDQUFDLElBQUlKLEtBQUtJLEdBQUdBLEVBQUVoQixlQUFlWSxJQUFJbEIsR0FBR0EsRUFBRU0sZUFBZVksS0FBS0YsSUFBSUEsRUFBRSxDQUFDLEdBQUdBLEVBQUVFLEdBQUcsSUFBSSxJQUFJQSxLQUFLbEIsRUFBRUEsRUFBRU0sZUFBZVksSUFBSUksRUFBRUosS0FBS2xCLEVBQUVrQixLQUFLRixJQUFJQSxFQUFFLENBQUMsR0FBR0EsRUFBRUUsR0FBR2xCLEVBQUVrQixHQUFHLE1BQU1GLElBQUlqQixJQUFJQSxFQUFFLElBQUlBLEVBQUVoQyxLQUFLb0MsRUFDcGZhLElBQUlBLEVBQUVoQixNQUFNLDRCQUE0QkcsR0FBR0gsRUFBRUEsRUFBRUEsRUFBRW12QixZQUFPLEVBQU83dEIsRUFBRUEsRUFBRUEsRUFBRTZ0QixZQUFPLEVBQU8sTUFBTW52QixHQUFHc0IsSUFBSXRCLElBQUlELEVBQUVBLEdBQUcsSUFBSWhDLEtBQUtvQyxFQUFFSCxJQUFJLGFBQWFHLEVBQUUsaUJBQWtCSCxHQUFHLGlCQUFrQkEsSUFBSUQsRUFBRUEsR0FBRyxJQUFJaEMsS0FBS29DLEVBQUUsR0FBR0gsR0FBRyxtQ0FBbUNHLEdBQUcsNkJBQTZCQSxJQUFJd0gsRUFBR3JILGVBQWVILElBQUksTUFBTUgsR0FBRyxhQUFhRyxHQUFHNHNCLEdBQUUsU0FBUzlyQixHQUFHbEIsR0FBR3VCLElBQUl0QixJQUFJRCxFQUFFLE1BQU1BLEVBQUVBLEdBQUcsSUFBSWhDLEtBQUtvQyxFQUFFSCxHQUFHLENBQUNnQixJQUFJakIsRUFBRUEsR0FBRyxJQUFJaEMsS0FBSyxRQUFRaUQsR0FBRyxJQUFJYixFQUFFSixHQUFLb0IsRUFBRTYxQixZQUFZNzJCLEtBQUVnQixFQUFFK1YsT0FBTyxFQUFDLENBQUMsRUFBRWdzQixHQUFHLFNBQVNqaUMsRUFBRUUsRUFBRUgsRUFBRUksR0FBR0osSUFBSUksSUFBSUQsRUFBRStWLE9BQU8sRUFBRSxFQWtCbGIsSUFBSXl1QixJQUFHLEVBQUdDLElBQUUsRUFBR0MsR0FBRyxtQkFBb0JDLFFBQVFBLFFBQVFwK0IsSUFBSXErQixHQUFFLEtBQUssU0FBU0MsR0FBRy9rQyxFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUVMLElBQUksR0FBRyxPQUFPSSxFQUFFLEdBQUcsbUJBQW9CQSxFQUFFLElBQUlBLEVBQUUsS0FBSyxDQUFDLE1BQU1JLEdBQUc2a0MsR0FBRWhsQyxFQUFFRSxFQUFFQyxFQUFFLE1BQU1KLEVBQUVhLFFBQVEsSUFBSSxDQUFDLFNBQVNxa0MsR0FBR2psQyxFQUFFRSxFQUFFSCxHQUFHLElBQUlBLEdBQUcsQ0FBQyxNQUFNSSxHQUFHNmtDLEdBQUVobEMsRUFBRUUsRUFBRUMsRUFBRSxDQUFDLENBQUMsSUFBSStrQyxJQUFHLEVBSXhSLFNBQVNDLEdBQUdubEMsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFRCxFQUFFNjFCLFlBQXlDLEdBQUcsUUFBaEM1MUIsRUFBRSxPQUFPQSxFQUFFQSxFQUFFczZCLFdBQVcsTUFBaUIsQ0FBQyxJQUFJcjZCLEVBQUVELEVBQUVBLEVBQUVnMEIsS0FBSyxFQUFFLENBQUMsSUFBSS96QixFQUFFNkssSUFBSWpMLEtBQUtBLEVBQUUsQ0FBQyxJQUFJbEIsRUFBRXNCLEVBQUU2NkIsUUFBUTc2QixFQUFFNjZCLGFBQVEsT0FBTyxJQUFTbjhCLEdBQUdtbUMsR0FBRy9rQyxFQUFFSCxFQUFFakIsRUFBRSxDQUFDc0IsRUFBRUEsRUFBRSt6QixJQUFJLE9BQU8vekIsSUFBSUQsRUFBRSxDQUFDLENBQUMsU0FBU2lsQyxHQUFHcGxDLEVBQUVFLEdBQWdELEdBQUcsUUFBaENBLEVBQUUsUUFBbEJBLEVBQUVBLEVBQUU2MUIsYUFBdUI3MUIsRUFBRXU2QixXQUFXLE1BQWlCLENBQUMsSUFBSTE2QixFQUFFRyxFQUFFQSxFQUFFaTBCLEtBQUssRUFBRSxDQUFDLElBQUlwMEIsRUFBRWtMLElBQUlqTCxLQUFLQSxFQUFFLENBQUMsSUFBSUcsRUFBRUosRUFBRWk3QixPQUFPajdCLEVBQUVrN0IsUUFBUTk2QixHQUFHLENBQUNKLEVBQUVBLEVBQUVvMEIsSUFBSSxPQUFPcDBCLElBQUlHLEVBQUUsQ0FBQyxDQUFDLFNBQVNtbEMsR0FBR3JsQyxHQUFHLElBQUlFLEVBQUVGLEVBQUVMLElBQUksR0FBRyxPQUFPTyxFQUFFLENBQUMsSUFBSUgsRUFBRUMsRUFBRXlVLFVBQWlCelUsRUFBRWlMLElBQThCakwsRUFBRUQsRUFBRSxtQkFBb0JHLEVBQUVBLEVBQUVGLEdBQUdFLEVBQUVVLFFBQVFaLENBQUMsQ0FBQyxDQUNsZixTQUFTc2xDLEdBQUd0bEMsR0FBRyxJQUFJRSxFQUFFRixFQUFFK1YsVUFBVSxPQUFPN1YsSUFBSUYsRUFBRStWLFVBQVUsS0FBS3V2QixHQUFHcGxDLElBQUlGLEVBQUV1VyxNQUFNLEtBQUt2VyxFQUFFbXlCLFVBQVUsS0FBS255QixFQUFFd1csUUFBUSxLQUFLLElBQUl4VyxFQUFFaUwsS0FBb0IsUUFBZC9LLEVBQUVGLEVBQUV5VSxvQkFBNEJ2VSxFQUFFOHVCLFdBQVc5dUIsRUFBRSt1QixXQUFXL3VCLEVBQUU2ckIsV0FBVzdyQixFQUFFZ3ZCLFdBQVdodkIsRUFBRWl2QixLQUFNbnZCLEVBQUV5VSxVQUFVLEtBQUt6VSxFQUFFZ1csT0FBTyxLQUFLaFcsRUFBRWkxQixhQUFhLEtBQUtqMUIsRUFBRTh5QixjQUFjLEtBQUs5eUIsRUFBRW1XLGNBQWMsS0FBS25XLEVBQUVxeUIsYUFBYSxLQUFLcnlCLEVBQUV5VSxVQUFVLEtBQUt6VSxFQUFFKzFCLFlBQVksSUFBSSxDQUFDLFNBQVN3UCxHQUFHdmxDLEdBQUcsT0FBTyxJQUFJQSxFQUFFaUwsS0FBSyxJQUFJakwsRUFBRWlMLEtBQUssSUFBSWpMLEVBQUVpTCxHQUFHLENBQ25hLFNBQVN1NkIsR0FBR3hsQyxHQUFHQSxFQUFFLE9BQU8sQ0FBQyxLQUFLLE9BQU9BLEVBQUV3VyxTQUFTLENBQUMsR0FBRyxPQUFPeFcsRUFBRWdXLFFBQVF1dkIsR0FBR3ZsQyxFQUFFZ1csUUFBUSxPQUFPLEtBQUtoVyxFQUFFQSxFQUFFZ1csTUFBTSxDQUEyQixJQUExQmhXLEVBQUV3VyxRQUFRUixPQUFPaFcsRUFBRWdXLE9BQVdoVyxFQUFFQSxFQUFFd1csUUFBUSxJQUFJeFcsRUFBRWlMLEtBQUssSUFBSWpMLEVBQUVpTCxLQUFLLEtBQUtqTCxFQUFFaUwsS0FBSyxDQUFDLEdBQVcsRUFBUmpMLEVBQUVpVyxNQUFRLFNBQVNqVyxFQUFFLEdBQUcsT0FBT0EsRUFBRXVXLE9BQU8sSUFBSXZXLEVBQUVpTCxJQUFJLFNBQVNqTCxFQUFPQSxFQUFFdVcsTUFBTVAsT0FBT2hXLEVBQUVBLEVBQUVBLEVBQUV1VyxLQUFLLENBQUMsS0FBYSxFQUFSdlcsRUFBRWlXLE9BQVMsT0FBT2pXLEVBQUV5VSxTQUFTLENBQUMsQ0FDelQsU0FBU2d4QixHQUFHemxDLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksRUFBRUgsRUFBRWlMLElBQUksR0FBRyxJQUFJOUssR0FBRyxJQUFJQSxFQUFFSCxFQUFFQSxFQUFFeVUsVUFBVXZVLEVBQUUsSUFBSUgsRUFBRXFQLFNBQVNyUCxFQUFFb1UsV0FBV3V4QixhQUFhMWxDLEVBQUVFLEdBQUdILEVBQUUybEMsYUFBYTFsQyxFQUFFRSxJQUFJLElBQUlILEVBQUVxUCxVQUFVbFAsRUFBRUgsRUFBRW9VLFlBQWF1eEIsYUFBYTFsQyxFQUFFRCxJQUFLRyxFQUFFSCxHQUFJZ1AsWUFBWS9PLEdBQTRCLE9BQXhCRCxFQUFFQSxFQUFFNGxDLHNCQUEwQyxPQUFPemxDLEVBQUUrakMsVUFBVS9qQyxFQUFFK2pDLFFBQVFuVyxVQUFVLEdBQUcsSUFBSTN0QixHQUFjLFFBQVZILEVBQUVBLEVBQUV1VyxPQUFnQixJQUFJa3ZCLEdBQUd6bEMsRUFBRUUsRUFBRUgsR0FBR0MsRUFBRUEsRUFBRXdXLFFBQVEsT0FBT3hXLEdBQUd5bEMsR0FBR3psQyxFQUFFRSxFQUFFSCxHQUFHQyxFQUFFQSxFQUFFd1csT0FBTyxDQUMxWCxTQUFTb3ZCLEdBQUc1bEMsRUFBRUUsRUFBRUgsR0FBRyxJQUFJSSxFQUFFSCxFQUFFaUwsSUFBSSxHQUFHLElBQUk5SyxHQUFHLElBQUlBLEVBQUVILEVBQUVBLEVBQUV5VSxVQUFVdlUsRUFBRUgsRUFBRTJsQyxhQUFhMWxDLEVBQUVFLEdBQUdILEVBQUVnUCxZQUFZL08sUUFBUSxHQUFHLElBQUlHLEdBQWMsUUFBVkgsRUFBRUEsRUFBRXVXLE9BQWdCLElBQUlxdkIsR0FBRzVsQyxFQUFFRSxFQUFFSCxHQUFHQyxFQUFFQSxFQUFFd1csUUFBUSxPQUFPeFcsR0FBRzRsQyxHQUFHNWxDLEVBQUVFLEVBQUVILEdBQUdDLEVBQUVBLEVBQUV3VyxPQUFPLENBQUMsSUFBSXF2QixHQUFFLEtBQUtDLElBQUcsRUFBRyxTQUFTQyxHQUFHL2xDLEVBQUVFLEVBQUVILEdBQUcsSUFBSUEsRUFBRUEsRUFBRXdXLE1BQU0sT0FBT3hXLEdBQUdpbUMsR0FBR2htQyxFQUFFRSxFQUFFSCxHQUFHQSxFQUFFQSxFQUFFeVcsT0FBTyxDQUNuUixTQUFTd3ZCLEdBQUdobUMsRUFBRUUsRUFBRUgsR0FBRyxHQUFHbVksSUFBSSxtQkFBb0JBLEdBQUcrdEIscUJBQXFCLElBQUkvdEIsR0FBRyt0QixxQkFBcUJodUIsR0FBR2xZLEVBQUUsQ0FBQyxNQUFNTSxHQUFHLENBQUMsT0FBT04sRUFBRWtMLEtBQUssS0FBSyxFQUFFMDVCLElBQUdJLEdBQUdobEMsRUFBRUcsR0FBRyxLQUFLLEVBQUUsSUFBSUMsRUFBRTBsQyxHQUFFemxDLEVBQUUwbEMsR0FBR0QsR0FBRSxLQUFLRSxHQUFHL2xDLEVBQUVFLEVBQUVILEdBQU8rbEMsR0FBRzFsQyxFQUFFLFFBQVR5bEMsR0FBRTFsQyxLQUFrQjJsQyxJQUFJOWxDLEVBQUU2bEMsR0FBRTlsQyxFQUFFQSxFQUFFMFUsVUFBVSxJQUFJelUsRUFBRW9QLFNBQVNwUCxFQUFFbVUsV0FBV3JGLFlBQVkvTyxHQUFHQyxFQUFFOE8sWUFBWS9PLElBQUk4bEMsR0FBRS8yQixZQUFZL08sRUFBRTBVLFlBQVksTUFBTSxLQUFLLEdBQUcsT0FBT294QixLQUFJQyxJQUFJOWxDLEVBQUU2bEMsR0FBRTlsQyxFQUFFQSxFQUFFMFUsVUFBVSxJQUFJelUsRUFBRW9QLFNBQVN1ZixHQUFHM3VCLEVBQUVtVSxXQUFXcFUsR0FBRyxJQUFJQyxFQUFFb1AsVUFBVXVmLEdBQUczdUIsRUFBRUQsR0FBRzhiLEdBQUc3YixJQUFJMnVCLEdBQUdrWCxHQUFFOWxDLEVBQUUwVSxZQUFZLE1BQU0sS0FBSyxFQUFFdFUsRUFBRTBsQyxHQUFFemxDLEVBQUUwbEMsR0FBR0QsR0FBRTlsQyxFQUFFMFUsVUFBVTZHLGNBQWN3cUIsSUFBRyxFQUNsZkMsR0FBRy9sQyxFQUFFRSxFQUFFSCxHQUFHOGxDLEdBQUUxbEMsRUFBRTJsQyxHQUFHMWxDLEVBQUUsTUFBTSxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsSUFBSXVrQyxJQUFvQixRQUFoQnhrQyxFQUFFSixFQUFFZzJCLGNBQXNDLFFBQWY1MUIsRUFBRUEsRUFBRXM2QixZQUFzQixDQUFDcjZCLEVBQUVELEVBQUVBLEVBQUVnMEIsS0FBSyxFQUFFLENBQUMsSUFBSXIxQixFQUFFc0IsRUFBRUgsRUFBRW5CLEVBQUVtOEIsUUFBUW44QixFQUFFQSxFQUFFbU0sU0FBSSxJQUFTaEwsSUFBVyxFQUFGbkIsR0FBc0IsRUFBRkEsSUFBZm1tQyxHQUFHbGxDLEVBQUVHLEVBQUVELEdBQXlCRyxFQUFFQSxFQUFFK3pCLElBQUksT0FBTy96QixJQUFJRCxFQUFFLENBQUM0bEMsR0FBRy9sQyxFQUFFRSxFQUFFSCxHQUFHLE1BQU0sS0FBSyxFQUFFLElBQUk0a0MsS0FBSUksR0FBR2hsQyxFQUFFRyxHQUFpQixtQkFBZEMsRUFBRUosRUFBRTBVLFdBQWdDeXhCLHNCQUFzQixJQUFJL2xDLEVBQUVPLE1BQU1YLEVBQUUreUIsY0FBYzN5QixFQUFFbytCLE1BQU14K0IsRUFBRW9XLGNBQWNoVyxFQUFFK2xDLHNCQUFzQixDQUFDLE1BQU03bEMsR0FBRzJrQyxHQUFFamxDLEVBQUVHLEVBQUVHLEVBQUUsQ0FBQzBsQyxHQUFHL2xDLEVBQUVFLEVBQUVILEdBQUcsTUFBTSxLQUFLLEdBQUdnbUMsR0FBRy9sQyxFQUFFRSxFQUFFSCxHQUFHLE1BQU0sS0FBSyxHQUFVLEVBQVBBLEVBQUUyeUIsTUFBUWlTLElBQUd4a0MsRUFBRXdrQyxLQUFJLE9BQ2hmNWtDLEVBQUVvVyxjQUFjNHZCLEdBQUcvbEMsRUFBRUUsRUFBRUgsR0FBRzRrQyxHQUFFeGtDLEdBQUc0bEMsR0FBRy9sQyxFQUFFRSxFQUFFSCxHQUFHLE1BQU0sUUFBUWdtQyxHQUFHL2xDLEVBQUVFLEVBQUVILEdBQUcsQ0FBQyxTQUFTb21DLEdBQUdubUMsR0FBRyxJQUFJRSxFQUFFRixFQUFFKzFCLFlBQVksR0FBRyxPQUFPNzFCLEVBQUUsQ0FBQ0YsRUFBRSsxQixZQUFZLEtBQUssSUFBSWgyQixFQUFFQyxFQUFFeVUsVUFBVSxPQUFPMVUsSUFBSUEsRUFBRUMsRUFBRXlVLFVBQVUsSUFBSW13QixJQUFJMWtDLEVBQUV6QyxRQUFRLFNBQVN5QyxHQUFHLElBQUlDLEVBQUVpbUMsR0FBRy9aLEtBQUssS0FBS3JzQixFQUFFRSxHQUFHSCxFQUFFaXNCLElBQUk5ckIsS0FBS0gsRUFBRThHLElBQUkzRyxHQUFHQSxFQUFFZ0csS0FBSy9GLEVBQUVBLEdBQUcsRUFBRSxDQUFDLENBQ3pRLFNBQVNrbUMsR0FBR3JtQyxFQUFFRSxHQUFHLElBQUlILEVBQUVHLEVBQUVpeUIsVUFBVSxHQUFHLE9BQU9weUIsRUFBRSxJQUFJLElBQUlJLEVBQUUsRUFBRUEsRUFBRUosRUFBRTVELE9BQU9nRSxJQUFJLENBQUMsSUFBSUMsRUFBRUwsRUFBRUksR0FBRyxJQUFJLElBQUlyQixFQUFFa0IsRUFBRUMsRUFBRUMsRUFBRUcsRUFBRUosRUFBRUQsRUFBRSxLQUFLLE9BQU9LLEdBQUcsQ0FBQyxPQUFPQSxFQUFFNEssS0FBSyxLQUFLLEVBQUU0NkIsR0FBRXhsQyxFQUFFb1UsVUFBVXF4QixJQUFHLEVBQUcsTUFBTTlsQyxFQUFFLEtBQUssRUFBNEMsS0FBSyxFQUFFNmxDLEdBQUV4bEMsRUFBRW9VLFVBQVU2RyxjQUFjd3FCLElBQUcsRUFBRyxNQUFNOWxDLEVBQUVLLEVBQUVBLEVBQUUyVixNQUFNLENBQUMsR0FBRyxPQUFPNnZCLEdBQUUsTUFBTXRvQyxNQUFNa0MsRUFBRSxNQUFNdW1DLEdBQUdsbkMsRUFBRW1CLEVBQUVHLEdBQUd5bEMsR0FBRSxLQUFLQyxJQUFHLEVBQUcsSUFBSS9tQyxFQUFFcUIsRUFBRTJWLFVBQVUsT0FBT2hYLElBQUlBLEVBQUVpWCxPQUFPLE1BQU01VixFQUFFNFYsT0FBTyxJQUFJLENBQUMsTUFBTTlXLEdBQUc4bEMsR0FBRTVrQyxFQUFFRixFQUFFaEIsRUFBRSxDQUFDLENBQUMsR0FBa0IsTUFBZmdCLEVBQUU2aUMsYUFBbUIsSUFBSTdpQyxFQUFFQSxFQUFFcVcsTUFBTSxPQUFPclcsR0FBR29tQyxHQUFHcG1DLEVBQUVGLEdBQUdFLEVBQUVBLEVBQUVzVyxPQUFPLENBQ2plLFNBQVM4dkIsR0FBR3RtQyxFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUUrVixVQUFVNVYsRUFBRUgsRUFBRWlXLE1BQU0sT0FBT2pXLEVBQUVpTCxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBaUIsR0FBZG83QixHQUFHbm1DLEVBQUVGLEdBQUd1bUMsR0FBR3ZtQyxHQUFRLEVBQUZHLEVBQUksQ0FBQyxJQUFJZ2xDLEdBQUcsRUFBRW5sQyxFQUFFQSxFQUFFZ1csUUFBUW92QixHQUFHLEVBQUVwbEMsRUFBRSxDQUFDLE1BQU13c0IsR0FBR3dZLEdBQUVobEMsRUFBRUEsRUFBRWdXLE9BQU93VyxFQUFFLENBQUMsSUFBSTJZLEdBQUcsRUFBRW5sQyxFQUFFQSxFQUFFZ1csT0FBTyxDQUFDLE1BQU13VyxHQUFHd1ksR0FBRWhsQyxFQUFFQSxFQUFFZ1csT0FBT3dXLEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxFQUFFNlosR0FBR25tQyxFQUFFRixHQUFHdW1DLEdBQUd2bUMsR0FBSyxJQUFGRyxHQUFPLE9BQU9KLEdBQUdnbEMsR0FBR2hsQyxFQUFFQSxFQUFFaVcsUUFBUSxNQUFNLEtBQUssRUFBZ0QsR0FBOUNxd0IsR0FBR25tQyxFQUFFRixHQUFHdW1DLEdBQUd2bUMsR0FBSyxJQUFGRyxHQUFPLE9BQU9KLEdBQUdnbEMsR0FBR2hsQyxFQUFFQSxFQUFFaVcsUUFBbUIsR0FBUmhXLEVBQUVpVyxNQUFTLENBQUMsSUFBSTdWLEVBQUVKLEVBQUV5VSxVQUFVLElBQUl2RixHQUFHOU8sRUFBRSxHQUFHLENBQUMsTUFBTW9zQixHQUFHd1ksR0FBRWhsQyxFQUFFQSxFQUFFZ1csT0FBT3dXLEVBQUUsQ0FBQyxDQUFDLEdBQUssRUFBRnJzQixHQUFvQixPQUFkQyxFQUFFSixFQUFFeVUsV0FBbUIsQ0FBQyxJQUFJM1YsRUFBRWtCLEVBQUU4eUIsY0FBYzd5QixFQUFFLE9BQU9GLEVBQUVBLEVBQUUreUIsY0FBY2gwQixFQUFFdUIsRUFBRUwsRUFBRVMsS0FBSzFCLEVBQUVpQixFQUFFKzFCLFlBQ2plLEdBQW5CLzFCLEVBQUUrMUIsWUFBWSxLQUFRLE9BQU9oM0IsRUFBRSxJQUFJLFVBQVVzQixHQUFHLFVBQVV2QixFQUFFMkIsTUFBTSxNQUFNM0IsRUFBRWlNLE1BQU1xQyxFQUFHaE4sRUFBRXRCLEdBQUc4VSxHQUFHdlQsRUFBRUosR0FBRyxJQUFJZixFQUFFMFUsR0FBR3ZULEVBQUV2QixHQUFHLElBQUltQixFQUFFLEVBQUVBLEVBQUVsQixFQUFFNUMsT0FBTzhELEdBQUcsRUFBRSxDQUFDLElBQUlkLEVBQUVKLEVBQUVrQixHQUFHSCxFQUFFZixFQUFFa0IsRUFBRSxHQUFHLFVBQVVkLEVBQUVpVCxHQUFHaFMsRUFBRU4sR0FBRyw0QkFBNEJYLEVBQUVzUCxHQUFHck8sRUFBRU4sR0FBRyxhQUFhWCxFQUFFK1AsR0FBRzlPLEVBQUVOLEdBQUdxSSxFQUFHL0gsRUFBRWpCLEVBQUVXLEVBQUVaLEVBQUUsQ0FBQyxPQUFPbUIsR0FBRyxJQUFLLFFBQVFnTixFQUFHak4sRUFBRXRCLEdBQUcsTUFBTSxJQUFLLFdBQVdxUCxHQUFHL04sRUFBRXRCLEdBQUcsTUFBTSxJQUFLLFNBQVMsSUFBSW0xQixFQUFFN3pCLEVBQUUyTSxjQUFjODJCLFlBQVl6akMsRUFBRTJNLGNBQWM4MkIsY0FBYy9rQyxFQUFFZ2xDLFNBQVMsSUFBSTVQLEVBQUVwMUIsRUFBRTBOLE1BQU0sTUFBTTBuQixFQUFFdm1CLEdBQUd2TixJQUFJdEIsRUFBRWdsQyxTQUFTNVAsR0FBRSxHQUFJRCxNQUFNbjFCLEVBQUVnbEMsV0FBVyxNQUFNaGxDLEVBQUVnTyxhQUFhYSxHQUFHdk4sSUFBSXRCLEVBQUVnbEMsU0FDbmZobEMsRUFBRWdPLGNBQWEsR0FBSWEsR0FBR3ZOLElBQUl0QixFQUFFZ2xDLFNBQVNobEMsRUFBRWdsQyxTQUFTLEdBQUcsSUFBRyxJQUFLMWpDLEVBQUU2dUIsSUFBSW53QixDQUFDLENBQUMsTUFBTTB0QixHQUFHd1ksR0FBRWhsQyxFQUFFQSxFQUFFZ1csT0FBT3dXLEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxFQUFnQixHQUFkNlosR0FBR25tQyxFQUFFRixHQUFHdW1DLEdBQUd2bUMsR0FBUSxFQUFGRyxFQUFJLENBQUMsR0FBRyxPQUFPSCxFQUFFeVUsVUFBVSxNQUFNbFgsTUFBTWtDLEVBQUUsTUFBTVcsRUFBRUosRUFBRXlVLFVBQVUzVixFQUFFa0IsRUFBRTh5QixjQUFjLElBQUkxeUIsRUFBRWlQLFVBQVV2USxDQUFDLENBQUMsTUFBTTB0QixHQUFHd1ksR0FBRWhsQyxFQUFFQSxFQUFFZ1csT0FBT3dXLEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxFQUFnQixHQUFkNlosR0FBR25tQyxFQUFFRixHQUFHdW1DLEdBQUd2bUMsR0FBUSxFQUFGRyxHQUFLLE9BQU9KLEdBQUdBLEVBQUVvVyxjQUFja0YsYUFBYSxJQUFJUSxHQUFHM2IsRUFBRW9iLGNBQWMsQ0FBQyxNQUFNa1IsR0FBR3dZLEdBQUVobEMsRUFBRUEsRUFBRWdXLE9BQU93VyxFQUFFLENBQUMsTUFBTSxLQUFLLEVBRzRHLFFBQVE2WixHQUFHbm1DLEVBQ25mRixHQUFHdW1DLEdBQUd2bUMsU0FKNFksS0FBSyxHQUFHcW1DLEdBQUdubUMsRUFBRUYsR0FBR3VtQyxHQUFHdm1DLEdBQXFCLE1BQWxCSSxFQUFFSixFQUFFdVcsT0FBUU4sUUFBYW5YLEVBQUUsT0FBT3NCLEVBQUUrVixjQUFjL1YsRUFBRXFVLFVBQVUreEIsU0FBUzFuQyxHQUFHQSxHQUNsZixPQUFPc0IsRUFBRTJWLFdBQVcsT0FBTzNWLEVBQUUyVixVQUFVSSxnQkFBZ0Jzd0IsR0FBR3R2QixPQUFRLEVBQUZoWCxHQUFLZ21DLEdBQUdubUMsR0FBRyxNQUFNLEtBQUssR0FBc0YsR0FBbkZiLEVBQUUsT0FBT1ksR0FBRyxPQUFPQSxFQUFFb1csY0FBcUIsRUFBUG5XLEVBQUUweUIsTUFBUWlTLElBQUd6bEMsRUFBRXlsQyxLQUFJeGxDLEVBQUVrbkMsR0FBR25tQyxFQUFFRixHQUFHMmtDLEdBQUV6bEMsR0FBR21uQyxHQUFHbm1DLEVBQUVGLEdBQUd1bUMsR0FBR3ZtQyxHQUFRLEtBQUZHLEVBQU8sQ0FBMEIsR0FBekJqQixFQUFFLE9BQU9jLEVBQUVtVyxlQUFrQm5XLEVBQUV5VSxVQUFVK3hCLFNBQVN0bkMsS0FBS0MsR0FBZSxFQUFQYSxFQUFFMHlCLEtBQVEsSUFBSW9TLEdBQUU5a0MsRUFBRWIsRUFBRWEsRUFBRXVXLE1BQU0sT0FBT3BYLEdBQUcsQ0FBQyxJQUFJVyxFQUFFZ2xDLEdBQUUzbEMsRUFBRSxPQUFPMmxDLElBQUcsQ0FBZSxPQUFWNVEsR0FBSkQsRUFBRTZRLElBQU12dUIsTUFBYTBkLEVBQUVocEIsS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUdrNkIsR0FBRyxFQUFFbFIsRUFBRUEsRUFBRWplLFFBQVEsTUFBTSxLQUFLLEVBQUUrdUIsR0FBRzlRLEVBQUVBLEVBQUVqZSxRQUFRLElBQUkxVyxFQUFFMjBCLEVBQUV4ZixVQUFVLEdBQUcsbUJBQW9CblYsRUFBRTRtQyxxQkFBcUIsQ0FBQy9sQyxFQUFFOHpCLEVBQUVsMEIsRUFBRWswQixFQUFFamUsT0FBTyxJQUFJOVYsRUFBRUMsRUFBRWIsRUFBRW9CLE1BQ3BmUixFQUFFNHlCLGNBQWN4ekIsRUFBRWkvQixNQUFNcitCLEVBQUVpVyxjQUFjN1csRUFBRTRtQyxzQkFBc0IsQ0FBQyxNQUFNMVosR0FBR3dZLEdBQUU3a0MsRUFBRUosRUFBRXlzQixFQUFFLENBQUMsQ0FBQyxNQUFNLEtBQUssRUFBRXVZLEdBQUc5USxFQUFFQSxFQUFFamUsUUFBUSxNQUFNLEtBQUssR0FBRyxHQUFHLE9BQU9pZSxFQUFFOWQsY0FBYyxDQUFDdXdCLEdBQUc1bUMsR0FBRyxRQUFRLEVBQUUsT0FBT28wQixHQUFHQSxFQUFFbGUsT0FBT2llLEVBQUU2USxHQUFFNVEsR0FBR3dTLEdBQUc1bUMsRUFBRSxDQUFDWCxFQUFFQSxFQUFFcVgsT0FBTyxDQUFDeFcsRUFBRSxJQUFJYixFQUFFLEtBQUtXLEVBQUVFLElBQUksQ0FBQyxHQUFHLElBQUlGLEVBQUVtTCxLQUFLLEdBQUcsT0FBTzlMLEVBQUUsQ0FBQ0EsRUFBRVcsRUFBRSxJQUFJTSxFQUFFTixFQUFFMlUsVUFBVXZWLEVBQWEsbUJBQVZKLEVBQUVzQixFQUFFaVMsT0FBNEJFLFlBQVl6VCxFQUFFeVQsWUFBWSxVQUFVLE9BQU8sYUFBYXpULEVBQUU2bkMsUUFBUSxRQUFTdG1DLEVBQUVQLEVBQUUyVSxVQUFrQ3hVLEVBQUUsT0FBMUJsQixFQUFFZSxFQUFFZ3pCLGNBQWN6Z0IsUUFBOEJ0VCxFQUFFTSxlQUFlLFdBQVdOLEVBQUU0bkMsUUFBUSxLQUFLdG1DLEVBQUVnUyxNQUFNczBCLFFBQ3pmeDBCLEdBQUcsVUFBVWxTLEdBQUcsQ0FBQyxNQUFNdXNCLEdBQUd3WSxHQUFFaGxDLEVBQUVBLEVBQUVnVyxPQUFPd1csRUFBRSxDQUFDLE9BQU8sR0FBRyxJQUFJMXNCLEVBQUVtTCxLQUFLLEdBQUcsT0FBTzlMLEVBQUUsSUFBSVcsRUFBRTJVLFVBQVVwRixVQUFVblEsRUFBRSxHQUFHWSxFQUFFZ3pCLGFBQWEsQ0FBQyxNQUFNdEcsR0FBR3dZLEdBQUVobEMsRUFBRUEsRUFBRWdXLE9BQU93VyxFQUFFLE9BQU8sSUFBSSxLQUFLMXNCLEVBQUVtTCxLQUFLLEtBQUtuTCxFQUFFbUwsS0FBSyxPQUFPbkwsRUFBRXFXLGVBQWVyVyxJQUFJRSxJQUFJLE9BQU9GLEVBQUV5VyxNQUFNLENBQUN6VyxFQUFFeVcsTUFBTVAsT0FBT2xXLEVBQUVBLEVBQUVBLEVBQUV5VyxNQUFNLFFBQVEsQ0FBQyxHQUFHelcsSUFBSUUsRUFBRSxNQUFNQSxFQUFFLEtBQUssT0FBT0YsRUFBRTBXLFNBQVMsQ0FBQyxHQUFHLE9BQU8xVyxFQUFFa1csUUFBUWxXLEVBQUVrVyxTQUFTaFcsRUFBRSxNQUFNQSxFQUFFYixJQUFJVyxJQUFJWCxFQUFFLE1BQU1XLEVBQUVBLEVBQUVrVyxNQUFNLENBQUM3VyxJQUFJVyxJQUFJWCxFQUFFLE1BQU1XLEVBQUUwVyxRQUFRUixPQUFPbFcsRUFBRWtXLE9BQU9sVyxFQUFFQSxFQUFFMFcsT0FBTyxDQUFDLENBQUMsTUFBTSxLQUFLLEdBQUc2dkIsR0FBR25tQyxFQUFFRixHQUFHdW1DLEdBQUd2bUMsR0FBSyxFQUFGRyxHQUFLZ21DLEdBQUdubUMsR0FBUyxLQUFLLElBQ3RkLENBQUMsU0FBU3VtQyxHQUFHdm1DLEdBQUcsSUFBSUUsRUFBRUYsRUFBRWlXLE1BQU0sR0FBSyxFQUFGL1YsRUFBSSxDQUFDLElBQUlGLEVBQUUsQ0FBQyxJQUFJLElBQUlELEVBQUVDLEVBQUVnVyxPQUFPLE9BQU9qVyxHQUFHLENBQUMsR0FBR3dsQyxHQUFHeGxDLEdBQUcsQ0FBQyxJQUFJSSxFQUFFSixFQUFFLE1BQU1DLENBQUMsQ0FBQ0QsRUFBRUEsRUFBRWlXLE1BQU0sQ0FBQyxNQUFNelksTUFBTWtDLEVBQUUsS0FBTSxDQUFDLE9BQU9VLEVBQUU4SyxLQUFLLEtBQUssRUFBRSxJQUFJN0ssRUFBRUQsRUFBRXNVLFVBQWtCLEdBQVJ0VSxFQUFFOFYsUUFBVy9HLEdBQUc5TyxFQUFFLElBQUlELEVBQUU4VixRQUFRLElBQWdCMnZCLEdBQUc1bEMsRUFBVHdsQyxHQUFHeGxDLEdBQVVJLEdBQUcsTUFBTSxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUlILEVBQUVFLEVBQUVzVSxVQUFVNkcsY0FBc0JtcUIsR0FBR3psQyxFQUFUd2xDLEdBQUd4bEMsR0FBVUMsR0FBRyxNQUFNLFFBQVEsTUFBTTFDLE1BQU1rQyxFQUFFLE1BQU8sQ0FBQyxNQUFNVixHQUFHaW1DLEdBQUVobEMsRUFBRUEsRUFBRWdXLE9BQU9qWCxFQUFFLENBQUNpQixFQUFFaVcsUUFBUSxDQUFDLENBQUcsS0FBRi9WLElBQVNGLEVBQUVpVyxRQUFRLEtBQUssQ0FBQyxTQUFTMndCLEdBQUc1bUMsRUFBRUUsRUFBRUgsR0FBRytrQyxHQUFFOWtDLEVBQUU2bUMsR0FBRzdtQyxFQUFFRSxFQUFFSCxFQUFFLENBQ3ZiLFNBQVM4bUMsR0FBRzdtQyxFQUFFRSxFQUFFSCxHQUFHLElBQUksSUFBSUksS0FBYyxFQUFQSCxFQUFFMHlCLE1BQVEsT0FBT29TLElBQUcsQ0FBQyxJQUFJMWtDLEVBQUUwa0MsR0FBRWhtQyxFQUFFc0IsRUFBRW1XLE1BQU0sR0FBRyxLQUFLblcsRUFBRTZLLEtBQUs5SyxFQUFFLENBQUMsSUFBSUYsRUFBRSxPQUFPRyxFQUFFK1YsZUFBZXV1QixHQUFHLElBQUl6a0MsRUFBRSxDQUFDLElBQUlJLEVBQUVELEVBQUUyVixVQUFVaFgsRUFBRSxPQUFPc0IsR0FBRyxPQUFPQSxFQUFFOFYsZUFBZXd1QixHQUFFdGtDLEVBQUVxa0MsR0FBRyxJQUFJeGxDLEVBQUV5bEMsR0FBTyxHQUFMRCxHQUFHemtDLEdBQU0wa0MsR0FBRTVsQyxLQUFLRyxFQUFFLElBQUk0bEMsR0FBRTFrQyxFQUFFLE9BQU8wa0MsSUFBTy9sQyxHQUFKa0IsRUFBRTZrQyxJQUFNdnVCLE1BQU0sS0FBS3RXLEVBQUVnTCxLQUFLLE9BQU9oTCxFQUFFa1csY0FBYzJ3QixHQUFHMW1DLEdBQUcsT0FBT3JCLEdBQUdBLEVBQUVpWCxPQUFPL1YsRUFBRTZrQyxHQUFFL2xDLEdBQUcrbkMsR0FBRzFtQyxHQUFHLEtBQUssT0FBT3RCLEdBQUdnbUMsR0FBRWhtQyxFQUFFK25DLEdBQUcvbkMsRUFBRW9CLEVBQUVILEdBQUdqQixFQUFFQSxFQUFFMFgsUUFBUXN1QixHQUFFMWtDLEVBQUVza0MsR0FBR3JrQyxFQUFFc2tDLEdBQUV6bEMsQ0FBQyxDQUFDNm5DLEdBQUcvbUMsRUFBTSxNQUEwQixLQUFmSSxFQUFFMmlDLGNBQW9CLE9BQU9qa0MsR0FBR0EsRUFBRWtYLE9BQU81VixFQUFFMGtDLEdBQUVobUMsR0FBR2lvQyxHQUFHL21DLEVBQU0sQ0FBQyxDQUN2YyxTQUFTK21DLEdBQUcvbUMsR0FBRyxLQUFLLE9BQU84a0MsSUFBRyxDQUFDLElBQUk1a0MsRUFBRTRrQyxHQUFFLEdBQWdCLEtBQVI1a0MsRUFBRStWLE1BQVksQ0FBQyxJQUFJbFcsRUFBRUcsRUFBRTZWLFVBQVUsSUFBSSxHQUFnQixLQUFSN1YsRUFBRStWLE1BQVksT0FBTy9WLEVBQUUrSyxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHMDVCLElBQUdTLEdBQUcsRUFBRWxsQyxHQUFHLE1BQU0sS0FBSyxFQUFFLElBQUlDLEVBQUVELEVBQUV1VSxVQUFVLEdBQVcsRUFBUnZVLEVBQUUrVixRQUFVMHVCLEdBQUUsR0FBRyxPQUFPNWtDLEVBQUVJLEVBQUU4K0Isd0JBQXdCLENBQUMsSUFBSTcrQixFQUFFRixFQUFFZ3lCLGNBQWNoeUIsRUFBRU8sS0FBS1YsRUFBRSt5QixjQUFjNEssR0FBR3g5QixFQUFFTyxLQUFLVixFQUFFK3lCLGVBQWUzeUIsRUFBRXNoQyxtQkFBbUJyaEMsRUFBRUwsRUFBRW9XLGNBQWNoVyxFQUFFNm1DLG9DQUFvQyxDQUFDLElBQUlsb0MsRUFBRW9CLEVBQUU2MUIsWUFBWSxPQUFPajNCLEdBQUdtNEIsR0FBRy8yQixFQUFFcEIsRUFBRXFCLEdBQUcsTUFBTSxLQUFLLEVBQUUsSUFBSUYsRUFBRUMsRUFBRTYxQixZQUFZLEdBQUcsT0FBTzkxQixFQUFFLENBQVEsR0FBUEYsRUFBRSxLQUFRLE9BQU9HLEVBQUVxVyxNQUFNLE9BQU9yVyxFQUFFcVcsTUFBTXRMLEtBQUssS0FBSyxFQUN2ZixLQUFLLEVBQUVsTCxFQUFFRyxFQUFFcVcsTUFBTTlCLFVBQVV3aUIsR0FBRy8yQixFQUFFRCxFQUFFRixFQUFFLENBQUMsTUFBTSxLQUFLLEVBQUUsSUFBSU0sRUFBRUgsRUFBRXVVLFVBQVUsR0FBRyxPQUFPMVUsR0FBVyxFQUFSRyxFQUFFK1YsTUFBUSxDQUFDbFcsRUFBRU0sRUFBRSxJQUFJdEIsRUFBRW1CLEVBQUU0eUIsY0FBYyxPQUFPNXlCLEVBQUVPLE1BQU0sSUFBSyxTQUFTLElBQUssUUFBUSxJQUFLLFNBQVMsSUFBSyxXQUFXMUIsRUFBRXFsQyxXQUFXcmtDLEVBQUU4cEIsUUFBUSxNQUFNLElBQUssTUFBTTlxQixFQUFFa29DLE1BQU1sbkMsRUFBRWtuQyxJQUFJbG9DLEVBQUVrb0MsS0FBSyxDQUFDLE1BQU0sS0FBSyxFQUFRLEtBQUssRUFBUSxLQUFLLEdBQXlKLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLE1BQWhNLEtBQUssR0FBRyxHQUFHLE9BQU8vbUMsRUFBRWlXLGNBQWMsQ0FBQyxJQUFJalgsRUFBRWdCLEVBQUU2VixVQUFVLEdBQUcsT0FBTzdXLEVBQUUsQ0FBQyxJQUFJQyxFQUFFRCxFQUFFaVgsY0FBYyxHQUFHLE9BQU9oWCxFQUFFLENBQUMsSUFBSVcsRUFBRVgsRUFBRWlYLFdBQVcsT0FBT3RXLEdBQUcrYixHQUFHL2IsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUM1YyxRQUFRLE1BQU12QyxNQUFNa0MsRUFBRSxNQUFPa2xDLElBQVcsSUFBUnprQyxFQUFFK1YsT0FBV292QixHQUFHbmxDLEVBQUUsQ0FBQyxNQUFNK3pCLEdBQUcrUSxHQUFFOWtDLEVBQUVBLEVBQUU4VixPQUFPaWUsRUFBRSxDQUFDLENBQUMsR0FBRy96QixJQUFJRixFQUFFLENBQUM4a0MsR0FBRSxLQUFLLEtBQUssQ0FBYSxHQUFHLFFBQWYva0MsRUFBRUcsRUFBRXNXLFNBQW9CLENBQUN6VyxFQUFFaVcsT0FBTzlWLEVBQUU4VixPQUFPOHVCLEdBQUUva0MsRUFBRSxLQUFLLENBQUMra0MsR0FBRTVrQyxFQUFFOFYsTUFBTSxDQUFDLENBQUMsU0FBUzB3QixHQUFHMW1DLEdBQUcsS0FBSyxPQUFPOGtDLElBQUcsQ0FBQyxJQUFJNWtDLEVBQUU0a0MsR0FBRSxHQUFHNWtDLElBQUlGLEVBQUUsQ0FBQzhrQyxHQUFFLEtBQUssS0FBSyxDQUFDLElBQUkva0MsRUFBRUcsRUFBRXNXLFFBQVEsR0FBRyxPQUFPelcsRUFBRSxDQUFDQSxFQUFFaVcsT0FBTzlWLEVBQUU4VixPQUFPOHVCLEdBQUUva0MsRUFBRSxLQUFLLENBQUMra0MsR0FBRTVrQyxFQUFFOFYsTUFBTSxDQUFDLENBQ3ZTLFNBQVM4d0IsR0FBRzltQyxHQUFHLEtBQUssT0FBTzhrQyxJQUFHLENBQUMsSUFBSTVrQyxFQUFFNGtDLEdBQUUsSUFBSSxPQUFPNWtDLEVBQUUrSyxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUlsTCxFQUFFRyxFQUFFOFYsT0FBTyxJQUFJb3ZCLEdBQUcsRUFBRWxsQyxFQUFFLENBQUMsTUFBTW5CLEdBQUdpbUMsR0FBRTlrQyxFQUFFSCxFQUFFaEIsRUFBRSxDQUFDLE1BQU0sS0FBSyxFQUFFLElBQUlvQixFQUFFRCxFQUFFdVUsVUFBVSxHQUFHLG1CQUFvQnRVLEVBQUU4K0Isa0JBQWtCLENBQUMsSUFBSTcrQixFQUFFRixFQUFFOFYsT0FBTyxJQUFJN1YsRUFBRTgrQixtQkFBbUIsQ0FBQyxNQUFNbGdDLEdBQUdpbUMsR0FBRTlrQyxFQUFFRSxFQUFFckIsRUFBRSxDQUFDLENBQUMsSUFBSUQsRUFBRW9CLEVBQUU4VixPQUFPLElBQUlxdkIsR0FBR25sQyxFQUFFLENBQUMsTUFBTW5CLEdBQUdpbUMsR0FBRTlrQyxFQUFFcEIsRUFBRUMsRUFBRSxDQUFDLE1BQU0sS0FBSyxFQUFFLElBQUlrQixFQUFFQyxFQUFFOFYsT0FBTyxJQUFJcXZCLEdBQUdubEMsRUFBRSxDQUFDLE1BQU1uQixHQUFHaW1DLEdBQUU5a0MsRUFBRUQsRUFBRWxCLEVBQUUsRUFBRSxDQUFDLE1BQU1BLEdBQUdpbUMsR0FBRTlrQyxFQUFFQSxFQUFFOFYsT0FBT2pYLEVBQUUsQ0FBQyxHQUFHbUIsSUFBSUYsRUFBRSxDQUFDOGtDLEdBQUUsS0FBSyxLQUFLLENBQUMsSUFBSXprQyxFQUFFSCxFQUFFc1csUUFBUSxHQUFHLE9BQU9uVyxFQUFFLENBQUNBLEVBQUUyVixPQUFPOVYsRUFBRThWLE9BQU84dUIsR0FBRXprQyxFQUFFLEtBQUssQ0FBQ3lrQyxHQUFFNWtDLEVBQUU4VixNQUFNLENBQUMsQ0FDN2QsSUF3QmtOa3hCLEdBeEI5TUMsR0FBR2ptQyxLQUFLa21DLEtBQUtDLEdBQUd2K0IsRUFBR3F2Qix1QkFBdUJtUCxHQUFHeCtCLEVBQUd0SixrQkFBa0IrbkMsR0FBR3orQixFQUFHaVQsd0JBQXdCNmEsR0FBRSxFQUFFMkQsR0FBRSxLQUFLaU4sR0FBRSxLQUFLQyxHQUFFLEVBQUV0RyxHQUFHLEVBQUVELEdBQUc1UixHQUFHLEdBQUdnVixHQUFFLEVBQUVvRCxHQUFHLEtBQUsxUSxHQUFHLEVBQUUyUSxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxLQUFLQyxHQUFHLEtBQUtyQixHQUFHLEVBQUVsQyxHQUFHd0QsSUFBU0MsR0FBRyxLQUFLdkksSUFBRyxFQUFHQyxHQUFHLEtBQUtJLEdBQUcsS0FBS21JLElBQUcsRUFBR0MsR0FBRyxLQUFLQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxLQUFLQyxJQUFJLEVBQUVDLEdBQUcsRUFBRSxTQUFTbE0sS0FBSSxPQUFjLEVBQUZ6RixHQUFLemYsTUFBSyxJQUFJbXhCLEdBQUdBLEdBQUdBLEdBQUdueEIsSUFBRyxDQUNoVSxTQUFTK2tCLEdBQUdsOEIsR0FBRyxPQUFlLEVBQVBBLEVBQUUweUIsS0FBMkIsRUFBRmtFLElBQU0sSUFBSTZRLEdBQVNBLElBQUdBLEdBQUssT0FBT3ZVLEdBQUdoWCxZQUFrQixJQUFJcXNCLEtBQUtBLEdBQUdwdkIsTUFBTW92QixJQUFVLEtBQVB2b0MsRUFBRXdaLElBQWtCeFosRUFBaUJBLE9BQUUsS0FBakJBLEVBQUU4QixPQUFPd0IsT0FBbUIsR0FBR2taLEdBQUd4YyxFQUFFUyxNQUFoSixDQUE4SixDQUFDLFNBQVNvNkIsR0FBRzc2QixFQUFFRSxFQUFFSCxFQUFFSSxHQUFHLEdBQUcsR0FBR2lvQyxHQUFHLE1BQU1BLEdBQUcsRUFBRUMsR0FBRyxLQUFLOXFDLE1BQU1rQyxFQUFFLE1BQU00WixHQUFHclosRUFBRUQsRUFBRUksR0FBYSxFQUFGeTJCLElBQU01MkIsSUFBSXU2QixLQUFFdjZCLElBQUl1NkIsT0FBVyxFQUFGM0QsTUFBTytRLElBQUk1bkMsR0FBRyxJQUFJdWtDLElBQUdrRSxHQUFHeG9DLEVBQUV5bkMsS0FBSWdCLEdBQUd6b0MsRUFBRUcsR0FBRyxJQUFJSixHQUFHLElBQUk2MkIsTUFBZSxFQUFQMTJCLEVBQUV3eUIsUUFBVTZSLEdBQUdwdEIsS0FBSSxJQUFJd1osSUFBSUcsTUFBSyxDQUMxWSxTQUFTMlgsR0FBR3pvQyxFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUUwb0MsY0EzTXpCLFNBQVkxb0MsRUFBRUUsR0FBRyxJQUFJLElBQUlILEVBQUVDLEVBQUU2WSxlQUFlMVksRUFBRUgsRUFBRThZLFlBQVkxWSxFQUFFSixFQUFFMm9DLGdCQUFnQjdwQyxFQUFFa0IsRUFBRTRZLGFBQWEsRUFBRTlaLEdBQUcsQ0FBQyxJQUFJbUIsRUFBRSxHQUFHa1ksR0FBR3JaLEdBQUd1QixFQUFFLEdBQUdKLEVBQUVsQixFQUFFcUIsRUFBRUgsSUFBTyxJQUFJbEIsRUFBTSxLQUFLc0IsRUFBRU4sSUFBSSxLQUFLTSxFQUFFRixLQUFHQyxFQUFFSCxHQUFHZ1osR0FBRzVZLEVBQUVILElBQVFuQixHQUFHbUIsSUFBSUYsRUFBRTRvQyxjQUFjdm9DLEdBQUd2QixJQUFJdUIsQ0FBQyxDQUFDLENBMk1uTHdvQyxDQUFHN29DLEVBQUVFLEdBQUcsSUFBSUMsRUFBRXdZLEdBQUczWSxFQUFFQSxJQUFJdTZCLEdBQUVrTixHQUFFLEdBQUcsR0FBRyxJQUFJdG5DLEVBQUUsT0FBT0osR0FBRzhXLEdBQUc5VyxHQUFHQyxFQUFFMG9DLGFBQWEsS0FBSzFvQyxFQUFFOG9DLGlCQUFpQixPQUFPLEdBQUc1b0MsRUFBRUMsR0FBR0EsRUFBRUgsRUFBRThvQyxtQkFBbUI1b0MsRUFBRSxDQUFnQixHQUFmLE1BQU1ILEdBQUc4VyxHQUFHOVcsR0FBTSxJQUFJRyxFQUFFLElBQUlGLEVBQUVpTCxJQTVJc0osU0FBWWpMLEdBQUcyd0IsSUFBRyxFQUFHRSxHQUFHN3dCLEVBQUUsQ0E0STVLK29DLENBQUdDLEdBQUczYyxLQUFLLEtBQUtyc0IsSUFBSTZ3QixHQUFHbVksR0FBRzNjLEtBQUssS0FBS3JzQixJQUFJd3VCLEdBQUcsYUFBa0IsRUFBRm9JLEtBQU05RixJQUFJLEdBQUcvd0IsRUFBRSxTQUFTLENBQUMsT0FBTzBaLEdBQUd0WixJQUFJLEtBQUssRUFBRUosRUFBRXdYLEdBQUcsTUFBTSxLQUFLLEVBQUV4WCxFQUFFMFgsR0FBRyxNQUFNLEtBQUssR0FBd0MsUUFBUTFYLEVBQUU0WCxTQUFwQyxLQUFLLFVBQVU1WCxFQUFFZ1ksR0FBc0JoWSxFQUFFa3BDLEdBQUdscEMsRUFBRW1wQyxHQUFHN2MsS0FBSyxLQUFLcnNCLEdBQUcsQ0FBQ0EsRUFBRThvQyxpQkFBaUI1b0MsRUFBRUYsRUFBRTBvQyxhQUFhM29DLENBQUMsQ0FBQyxDQUM3YyxTQUFTbXBDLEdBQUdscEMsRUFBRUUsR0FBYyxHQUFYb29DLElBQUksRUFBRUMsR0FBRyxFQUFZLEVBQUYzUixHQUFLLE1BQU1yNUIsTUFBTWtDLEVBQUUsTUFBTSxJQUFJTSxFQUFFQyxFQUFFMG9DLGFBQWEsR0FBR1MsTUFBTW5wQyxFQUFFMG9DLGVBQWUzb0MsRUFBRSxPQUFPLEtBQUssSUFBSUksRUFBRXdZLEdBQUczWSxFQUFFQSxJQUFJdTZCLEdBQUVrTixHQUFFLEdBQUcsR0FBRyxJQUFJdG5DLEVBQUUsT0FBTyxLQUFLLEdBQVUsR0FBRkEsR0FBTyxLQUFLQSxFQUFFSCxFQUFFNG9DLGVBQWUxb0MsRUFBRUEsRUFBRWtwQyxHQUFHcHBDLEVBQUVHLE9BQU8sQ0FBQ0QsRUFBRUMsRUFBRSxJQUFJQyxFQUFFdzJCLEdBQUVBLElBQUcsRUFBRSxJQUFJOTNCLEVBQUV1cUMsS0FBZ0QsSUFBeEM5TyxLQUFJdjZCLEdBQUd5bkMsS0FBSXZuQyxJQUFFOG5DLEdBQUcsS0FBS3pELEdBQUdwdEIsS0FBSSxJQUFJbXlCLEdBQUd0cEMsRUFBRUUsVUFBVXFwQyxLQUFLLEtBQUssQ0FBQyxNQUFNbHBDLEdBQUdtcEMsR0FBR3hwQyxFQUFFSyxFQUFFLENBQVVzMEIsS0FBSzBTLEdBQUd6bUMsUUFBUTlCLEVBQUU4M0IsR0FBRXgyQixFQUFFLE9BQU9vbkMsR0FBRXRuQyxFQUFFLEdBQUdxNkIsR0FBRSxLQUFLa04sR0FBRSxFQUFFdm5DLEVBQUVva0MsR0FBRSxDQUFDLEdBQUcsSUFBSXBrQyxFQUFFLENBQXlDLEdBQXhDLElBQUlBLEdBQVksS0FBUkUsRUFBRThZLEdBQUdsWixNQUFXRyxFQUFFQyxFQUFFRixFQUFFdXBDLEdBQUd6cEMsRUFBRUksSUFBUSxJQUFJRixFQUFFLE1BQU1ILEVBQUUybkMsR0FBRzRCLEdBQUd0cEMsRUFBRSxHQUFHd29DLEdBQUd4b0MsRUFBRUcsR0FBR3NvQyxHQUFHem9DLEVBQUVtWCxNQUFLcFgsRUFBRSxHQUFHLElBQUlHLEVBQUVzb0MsR0FBR3hvQyxFQUFFRyxPQUNoZixDQUF1QixHQUF0QkMsRUFBRUosRUFBRVksUUFBUW1WLFlBQW9CLEdBQUY1VixHQUduQyxTQUFZSCxHQUFHLElBQUksSUFBSUUsRUFBRUYsSUFBSSxDQUFDLEdBQVcsTUFBUkUsRUFBRStWLE1BQVksQ0FBQyxJQUFJbFcsRUFBRUcsRUFBRTYxQixZQUFZLEdBQUcsT0FBT2gyQixHQUFlLFFBQVhBLEVBQUVBLEVBQUUyNkIsUUFBaUIsSUFBSSxJQUFJdjZCLEVBQUUsRUFBRUEsRUFBRUosRUFBRTVELE9BQU9nRSxJQUFJLENBQUMsSUFBSUMsRUFBRUwsRUFBRUksR0FBR3JCLEVBQUVzQixFQUFFZzZCLFlBQVloNkIsRUFBRUEsRUFBRW9NLE1BQU0sSUFBSSxJQUFJMmEsR0FBR3JvQixJQUFJc0IsR0FBRyxPQUFNLENBQUUsQ0FBQyxNQUFNSCxHQUFHLE9BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBVyxHQUFWRixFQUFFRyxFQUFFcVcsTUFBd0IsTUFBZnJXLEVBQUU2aUMsY0FBb0IsT0FBT2hqQyxFQUFFQSxFQUFFaVcsT0FBTzlWLEVBQUVBLEVBQUVILE1BQU0sQ0FBQyxHQUFHRyxJQUFJRixFQUFFLE1BQU0sS0FBSyxPQUFPRSxFQUFFc1csU0FBUyxDQUFDLEdBQUcsT0FBT3RXLEVBQUU4VixRQUFROVYsRUFBRThWLFNBQVNoVyxFQUFFLE9BQU0sRUFBR0UsRUFBRUEsRUFBRThWLE1BQU0sQ0FBQzlWLEVBQUVzVyxRQUFRUixPQUFPOVYsRUFBRThWLE9BQU85VixFQUFFQSxFQUFFc1csT0FBTyxDQUFDLENBQUMsT0FBTSxDQUFFLENBSHZYa3pCLENBQUd0cEMsS0FBS0YsRUFBRWtwQyxHQUFHcHBDLEVBQUVHLEdBQUcsSUFBSUQsSUFBSXBCLEVBQUVvYSxHQUFHbFosR0FBRyxJQUFJbEIsSUFBSXFCLEVBQUVyQixFQUFFb0IsRUFBRXVwQyxHQUFHenBDLEVBQUVsQixLQUFLLElBQUlvQixJQUFHLE1BQU1ILEVBQUUybkMsR0FBRzRCLEdBQUd0cEMsRUFBRSxHQUFHd29DLEdBQUd4b0MsRUFBRUcsR0FBR3NvQyxHQUFHem9DLEVBQUVtWCxNQUFLcFgsRUFBcUMsT0FBbkNDLEVBQUUycEMsYUFBYXZwQyxFQUFFSixFQUFFNHBDLGNBQWN6cEMsRUFBU0QsR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0zQyxNQUFNa0MsRUFBRSxNQUFNLEtBQUssRUFDOEIsS0FBSyxFQUFFb3FDLEdBQUc3cEMsRUFBRThuQyxHQUFHRSxJQUFJLE1BRDdCLEtBQUssRUFBVSxHQUFSUSxHQUFHeG9DLEVBQUVHLElBQVMsVUFBRkEsS0FBZUEsR0FBaUIsSUFBYkQsRUFBRXVtQyxHQUFHLElBQUl0dkIsTUFBVSxDQUFDLEdBQUcsSUFBSXdCLEdBQUczWSxFQUFFLEdBQUcsTUFBeUIsS0FBbkJJLEVBQUVKLEVBQUU2WSxnQkFBcUIxWSxLQUFLQSxFQUFFLENBQUNrOEIsS0FBSXI4QixFQUFFOFksYUFBYTlZLEVBQUU2WSxlQUFlelksRUFBRSxLQUFLLENBQUNKLEVBQUU4cEMsY0FBYzNiLEdBQUcwYixHQUFHeGQsS0FBSyxLQUFLcnNCLEVBQUU4bkMsR0FBR0UsSUFBSTluQyxHQUFHLEtBQUssQ0FBQzJwQyxHQUFHN3BDLEVBQUU4bkMsR0FBR0UsSUFBSSxNQUFNLEtBQUssRUFBVSxHQUFSUSxHQUFHeG9DLEVBQUVHLElBQVMsUUFBRkEsS0FDOWVBLEVBQUUsTUFBcUIsSUFBZkQsRUFBRUYsRUFBRXNaLFdBQWVsWixHQUFHLEVBQUUsRUFBRUQsR0FBRyxDQUFDLElBQUlGLEVBQUUsR0FBR2tZLEdBQUdoWSxHQUFHckIsRUFBRSxHQUFHbUIsR0FBRUEsRUFBRUMsRUFBRUQsSUFBS0csSUFBSUEsRUFBRUgsR0FBR0UsSUFBSXJCLENBQUMsQ0FBcUcsR0FBcEdxQixFQUFFQyxFQUFxRyxJQUEzRkQsR0FBRyxLQUFYQSxFQUFFZ1gsS0FBSWhYLEdBQVcsSUFBSSxJQUFJQSxFQUFFLElBQUksS0FBS0EsRUFBRSxLQUFLLEtBQUtBLEVBQUUsS0FBSyxJQUFJQSxFQUFFLElBQUksS0FBS0EsRUFBRSxLQUFLLEtBQUtnbkMsR0FBR2huQyxFQUFFLE9BQU9BLEdBQVUsQ0FBQ0gsRUFBRThwQyxjQUFjM2IsR0FBRzBiLEdBQUd4ZCxLQUFLLEtBQUtyc0IsRUFBRThuQyxHQUFHRSxJQUFJN25DLEdBQUcsS0FBSyxDQUFDMHBDLEdBQUc3cEMsRUFBRThuQyxHQUFHRSxJQUFJLE1BQStCLFFBQVEsTUFBTXpxQyxNQUFNa0MsRUFBRSxNQUFPLENBQUMsQ0FBVyxPQUFWZ3BDLEdBQUd6b0MsRUFBRW1YLE1BQVluWCxFQUFFMG9DLGVBQWUzb0MsRUFBRW1wQyxHQUFHN2MsS0FBSyxLQUFLcnNCLEdBQUcsSUFBSSxDQUNyWCxTQUFTeXBDLEdBQUd6cEMsRUFBRUUsR0FBRyxJQUFJSCxFQUFFOG5DLEdBQTJHLE9BQXhHN25DLEVBQUVZLFFBQVF1VixjQUFja0YsZUFBZWl1QixHQUFHdHBDLEVBQUVFLEdBQUcrVixPQUFPLEtBQWUsS0FBVmpXLEVBQUVvcEMsR0FBR3BwQyxFQUFFRSxNQUFXQSxFQUFFNG5DLEdBQUdBLEdBQUcvbkMsRUFBRSxPQUFPRyxHQUFHMGpDLEdBQUcxakMsSUFBV0YsQ0FBQyxDQUFDLFNBQVM0akMsR0FBRzVqQyxHQUFHLE9BQU84bkMsR0FBR0EsR0FBRzluQyxFQUFFOG5DLEdBQUdockMsS0FBS0ksTUFBTTRxQyxHQUFHOW5DLEVBQUUsQ0FFNUwsU0FBU3dvQyxHQUFHeG9DLEVBQUVFLEdBQXVELElBQXBEQSxJQUFJMG5DLEdBQUcxbkMsSUFBSXluQyxHQUFHM25DLEVBQUU2WSxnQkFBZ0IzWSxFQUFFRixFQUFFOFksY0FBYzVZLEVBQU1GLEVBQUVBLEVBQUUyb0MsZ0JBQWdCLEVBQUV6b0MsR0FBRyxDQUFDLElBQUlILEVBQUUsR0FBR29ZLEdBQUdqWSxHQUFHQyxFQUFFLEdBQUdKLEVBQUVDLEVBQUVELElBQUksRUFBRUcsSUFBSUMsQ0FBQyxDQUFDLENBQUMsU0FBUzZvQyxHQUFHaHBDLEdBQUcsR0FBVSxFQUFGNDJCLEdBQUssTUFBTXI1QixNQUFNa0MsRUFBRSxNQUFNMHBDLEtBQUssSUFBSWpwQyxFQUFFeVksR0FBRzNZLEVBQUUsR0FBRyxLQUFVLEVBQUZFLEdBQUssT0FBT3VvQyxHQUFHem9DLEVBQUVtWCxNQUFLLEtBQUssSUFBSXBYLEVBQUVxcEMsR0FBR3BwQyxFQUFFRSxHQUFHLEdBQUcsSUFBSUYsRUFBRWlMLEtBQUssSUFBSWxMLEVBQUUsQ0FBQyxJQUFJSSxFQUFFK1ksR0FBR2xaLEdBQUcsSUFBSUcsSUFBSUQsRUFBRUMsRUFBRUosRUFBRTBwQyxHQUFHenBDLEVBQUVHLEdBQUcsQ0FBQyxHQUFHLElBQUlKLEVBQUUsTUFBTUEsRUFBRTJuQyxHQUFHNEIsR0FBR3RwQyxFQUFFLEdBQUd3b0MsR0FBR3hvQyxFQUFFRSxHQUFHdW9DLEdBQUd6b0MsRUFBRW1YLE1BQUtwWCxFQUFFLEdBQUcsSUFBSUEsRUFBRSxNQUFNeEMsTUFBTWtDLEVBQUUsTUFBaUYsT0FBM0VPLEVBQUUycEMsYUFBYTNwQyxFQUFFWSxRQUFRbVYsVUFBVS9WLEVBQUU0cEMsY0FBYzFwQyxFQUFFMnBDLEdBQUc3cEMsRUFBRThuQyxHQUFHRSxJQUFJUyxHQUFHem9DLEVBQUVtWCxNQUFZLElBQUksQ0FDdmQsU0FBUzR5QixHQUFHL3BDLEVBQUVFLEdBQUcsSUFBSUgsRUFBRTYyQixHQUFFQSxJQUFHLEVBQUUsSUFBSSxPQUFPNTJCLEVBQUVFLEVBQUUsQ0FBQyxRQUFZLEtBQUowMkIsR0FBRTcyQixLQUFVd2tDLEdBQUdwdEIsS0FBSSxJQUFJd1osSUFBSUcsS0FBSyxDQUFDLENBQUMsU0FBU2taLEdBQUdocUMsR0FBRyxPQUFPa29DLElBQUksSUFBSUEsR0FBR2o5QixPQUFZLEVBQUYyckIsS0FBTXVTLEtBQUssSUFBSWpwQyxFQUFFMDJCLEdBQUVBLElBQUcsRUFBRSxJQUFJNzJCLEVBQUV3bkMsR0FBR3JyQixXQUFXL2IsRUFBRXFaLEdBQUUsSUFBSSxHQUFHK3RCLEdBQUdyckIsV0FBVyxLQUFLMUMsR0FBRSxFQUFFeFosRUFBRSxPQUFPQSxHQUFHLENBQUMsUUFBUXdaLEdBQUVyWixFQUFFb25DLEdBQUdyckIsV0FBV25jLElBQWEsR0FBWDYyQixHQUFFMTJCLEtBQWE0d0IsSUFBSSxDQUFDLENBQUMsU0FBUzBULEtBQUtyRCxHQUFHRCxHQUFHdGdDLFFBQVEydUIsR0FBRTJSLEdBQUcsQ0FDaFQsU0FBU29JLEdBQUd0cEMsRUFBRUUsR0FBR0YsRUFBRTJwQyxhQUFhLEtBQUszcEMsRUFBRTRwQyxjQUFjLEVBQUUsSUFBSTdwQyxFQUFFQyxFQUFFOHBDLGNBQWlELElBQWxDLElBQUkvcEMsSUFBSUMsRUFBRThwQyxlQUFlLEVBQUV6YixHQUFHdHVCLElBQU8sT0FBT3luQyxHQUFFLElBQUl6bkMsRUFBRXluQyxHQUFFeHhCLE9BQU8sT0FBT2pXLEdBQUcsQ0FBQyxJQUFJSSxFQUFFSixFQUFRLE9BQU40eEIsR0FBR3h4QixHQUFVQSxFQUFFOEssS0FBSyxLQUFLLEVBQTZCLE9BQTNCOUssRUFBRUEsRUFBRU0sS0FBS3l2QixvQkFBd0NDLEtBQUssTUFBTSxLQUFLLEVBQUVzSCxLQUFLbEksR0FBRUksSUFBSUosR0FBRUcsSUFBR3NJLEtBQUssTUFBTSxLQUFLLEVBQUVMLEdBQUd4M0IsR0FBRyxNQUFNLEtBQUssRUFBRXMzQixLQUFLLE1BQU0sS0FBSyxHQUFjLEtBQUssR0FBR2xJLEdBQUVxSSxJQUFHLE1BQU0sS0FBSyxHQUFHaEQsR0FBR3owQixFQUFFTSxLQUFLMkssVUFBVSxNQUFNLEtBQUssR0FBRyxLQUFLLEdBQUdvNUIsS0FBS3prQyxFQUFFQSxFQUFFaVcsTUFBTSxDQUFxRSxHQUFwRXVrQixHQUFFdjZCLEVBQUV3bkMsR0FBRXhuQyxFQUFFMnpCLEdBQUczekIsRUFBRVksUUFBUSxNQUFNNm1DLEdBQUV0RyxHQUFHamhDLEVBQUVva0MsR0FBRSxFQUFFb0QsR0FBRyxLQUFLRSxHQUFHRCxHQUFHM1EsR0FBRyxFQUFFOFEsR0FBR0QsR0FBRyxLQUFRLE9BQU9yUyxHQUFHLENBQUMsSUFBSXQxQixFQUMxZixFQUFFQSxFQUFFczFCLEdBQUdyNUIsT0FBTytELElBQUksR0FBMkIsUUFBaEJDLEdBQVJKLEVBQUV5MUIsR0FBR3QxQixJQUFPeTFCLGFBQXFCLENBQUM1MUIsRUFBRTQxQixZQUFZLEtBQUssSUFBSXYxQixFQUFFRCxFQUFFZzBCLEtBQUtyMUIsRUFBRWlCLEVBQUVxMkIsUUFBUSxHQUFHLE9BQU90M0IsRUFBRSxDQUFDLElBQUltQixFQUFFbkIsRUFBRXExQixLQUFLcjFCLEVBQUVxMUIsS0FBSy96QixFQUFFRCxFQUFFZzBCLEtBQUtsMEIsQ0FBQyxDQUFDRixFQUFFcTJCLFFBQVFqMkIsQ0FBQyxDQUFDcTFCLEdBQUcsSUFBSSxDQUFDLE9BQU94MUIsQ0FBQyxDQUMzSyxTQUFTd3BDLEdBQUd4cEMsRUFBRUUsR0FBRyxPQUFFLENBQUMsSUFBSUgsRUFBRXluQyxHQUFFLElBQXVCLEdBQW5CN1MsS0FBS3VELEdBQUd0M0IsUUFBUXU0QixHQUFNVixHQUFHLENBQUMsSUFBSSxJQUFJdDRCLEVBQUVtNEIsR0FBRW5pQixjQUFjLE9BQU9oVyxHQUFHLENBQUMsSUFBSUMsRUFBRUQsRUFBRTVELE1BQU0sT0FBTzZELElBQUlBLEVBQUVnMkIsUUFBUSxNQUFNajJCLEVBQUVBLEVBQUVnMEIsSUFBSSxDQUFDc0UsSUFBRyxDQUFFLENBQTRDLEdBQTNDSixHQUFHLEVBQUVHLEdBQUVELEdBQUVELEdBQUUsS0FBS0ksSUFBRyxFQUFHQyxHQUFHLEVBQUUyTyxHQUFHMW1DLFFBQVEsS0FBUSxPQUFPYixHQUFHLE9BQU9BLEVBQUVpVyxPQUFPLENBQUNzdUIsR0FBRSxFQUFFb0QsR0FBR3huQyxFQUFFc25DLEdBQUUsS0FBSyxLQUFLLENBQUN4bkMsRUFBRSxDQUFDLElBQUlsQixFQUFFa0IsRUFBRUMsRUFBRUYsRUFBRWlXLE9BQU8zVixFQUFFTixFQUFFaEIsRUFBRW1CLEVBQXFCLEdBQW5CQSxFQUFFdW5DLEdBQUVwbkMsRUFBRTRWLE9BQU8sTUFBUyxPQUFPbFgsR0FBRyxpQkFBa0JBLEdBQUcsbUJBQW9CQSxFQUFFbUgsS0FBSyxDQUFDLElBQUloSCxFQUFFSCxFQUFFSSxFQUFFa0IsRUFBRVAsRUFBRVgsRUFBRThMLElBQUksS0FBZSxFQUFQOUwsRUFBRXV6QixNQUFVLElBQUk1eUIsR0FBRyxLQUFLQSxHQUFHLEtBQUtBLEdBQUcsQ0FBQyxJQUFJbTBCLEVBQUU5MEIsRUFBRTRXLFVBQVVrZSxHQUFHOTBCLEVBQUU0MkIsWUFBWTlCLEVBQUU4QixZQUFZNTJCLEVBQUVnWCxjQUFjOGQsRUFBRTlkLGNBQ3hlaFgsRUFBRWcyQixNQUFNbEIsRUFBRWtCLFFBQVFoMkIsRUFBRTQyQixZQUFZLEtBQUs1MkIsRUFBRWdYLGNBQWMsS0FBSyxDQUFDLElBQUkrZCxFQUFFaU0sR0FBR2xnQyxHQUFHLEdBQUcsT0FBT2kwQixFQUFFLENBQUNBLEVBQUVqZSxRQUFRLElBQUltcUIsR0FBR2xNLEVBQUVqMEIsRUFBRUksRUFBRXZCLEVBQUVvQixHQUFVLEVBQVBnMEIsRUFBRXhCLE1BQVFzTixHQUFHbGhDLEVBQUVJLEVBQUVnQixHQUFPbkIsRUFBRUcsRUFBRSxJQUFJSSxHQUFaWSxFQUFFZzBCLEdBQWM2QixZQUFZLEdBQUcsT0FBT3oyQixFQUFFLENBQUMsSUFBSWt0QixFQUFFLElBQUkvbEIsSUFBSStsQixFQUFFM2xCLElBQUk5SCxHQUFHbUIsRUFBRTYxQixZQUFZdkosQ0FBQyxNQUFNbHRCLEVBQUV1SCxJQUFJOUgsR0FBRyxNQUFNaUIsQ0FBQyxDQUFNLEtBQVUsRUFBRkUsR0FBSyxDQUFDOC9CLEdBQUdsaEMsRUFBRUksRUFBRWdCLEdBQUd5aUMsS0FBSyxNQUFNM2lDLENBQUMsQ0FBQ2pCLEVBQUV4QixNQUFNa0MsRUFBRSxLQUFNLE1BQU0sR0FBR3F5QixJQUFVLEVBQVB6eEIsRUFBRXF5QixLQUFPLENBQUMsSUFBSWpHLEVBQUUwVCxHQUFHbGdDLEdBQUcsR0FBRyxPQUFPd3NCLEVBQUUsR0FBYyxNQUFSQSxFQUFFeFcsU0FBZXdXLEVBQUV4VyxPQUFPLEtBQUttcUIsR0FBRzNULEVBQUV4c0IsRUFBRUksRUFBRXZCLEVBQUVvQixHQUFHK3lCLEdBQUdpTSxHQUFHbmdDLEVBQUVzQixJQUFJLE1BQU1MLENBQUMsQ0FBQyxDQUFDbEIsRUFBRUMsRUFBRW1nQyxHQUFHbmdDLEVBQUVzQixHQUFHLElBQUlpa0MsS0FBSUEsR0FBRSxHQUFHLE9BQU91RCxHQUFHQSxHQUFHLENBQUMvb0MsR0FBRytvQyxHQUFHL3FDLEtBQUtnQyxHQUFHQSxFQUFFbUIsRUFBRSxFQUFFLENBQUMsT0FBT25CLEVBQUVtTSxLQUFLLEtBQUssRUFBRW5NLEVBQUVtWCxPQUFPLE1BQ3BmL1YsSUFBSUEsRUFBRXBCLEVBQUVxMkIsT0FBT2oxQixFQUFrQjQyQixHQUFHaDRCLEVBQWIwZ0MsR0FBRzFnQyxFQUFFQyxFQUFFbUIsSUFBVyxNQUFNRixFQUFFLEtBQUssRUFBRUssRUFBRXRCLEVBQUUsSUFBSS9CLEVBQUU4QixFQUFFMkIsS0FBS2tzQixFQUFFN3RCLEVBQUUyVixVQUFVLEtBQWdCLElBQVIzVixFQUFFbVgsT0FBYSxtQkFBb0JqWixFQUFFNGlDLDJCQUEwQixPQUFPalQsR0FBRyxtQkFBb0JBLEVBQUVrVCxtQkFBb0IsT0FBT0MsSUFBS0EsR0FBRzlULElBQUlXLEtBQUssQ0FBQzd0QixFQUFFbVgsT0FBTyxNQUFNL1YsSUFBSUEsRUFBRXBCLEVBQUVxMkIsT0FBT2oxQixFQUFrQjQyQixHQUFHaDRCLEVBQWI2Z0MsR0FBRzdnQyxFQUFFdUIsRUFBRUgsSUFBVyxNQUFNRixDQUFDLEVBQUVsQixFQUFFQSxFQUFFa1gsTUFBTSxPQUFPLE9BQU9sWCxFQUFFLENBQUNtckMsR0FBR2xxQyxFQUFFLENBQUMsTUFBTW10QixHQUFJaHRCLEVBQUVndEIsRUFBR3NhLEtBQUl6bkMsR0FBRyxPQUFPQSxJQUFJeW5DLEdBQUV6bkMsRUFBRUEsRUFBRWlXLFFBQVEsUUFBUSxDQUFDLEtBQUssQ0FBUyxDQUFDLFNBQVNxekIsS0FBSyxJQUFJcnBDLEVBQUVxbkMsR0FBR3ptQyxRQUFzQixPQUFkeW1DLEdBQUd6bUMsUUFBUXU0QixHQUFVLE9BQU9uNUIsRUFBRW01QixHQUFHbjVCLENBQUMsQ0FDcmQsU0FBUzJpQyxLQUFRLElBQUkyQixJQUFHLElBQUlBLElBQUcsSUFBSUEsS0FBRUEsR0FBRSxHQUFFLE9BQU8vSixNQUFXLFVBQUh2RCxPQUF1QixVQUFIMlEsS0FBZWEsR0FBR2pPLEdBQUVrTixHQUFFLENBQUMsU0FBUzJCLEdBQUdwcEMsRUFBRUUsR0FBRyxJQUFJSCxFQUFFNjJCLEdBQUVBLElBQUcsRUFBRSxJQUFJejJCLEVBQUVrcEMsS0FBcUMsSUFBN0I5TyxLQUFJdjZCLEdBQUd5bkMsS0FBSXZuQyxJQUFFOG5DLEdBQUcsS0FBS3NCLEdBQUd0cEMsRUFBRUUsVUFBVWdxQyxLQUFLLEtBQUssQ0FBQyxNQUFNOXBDLEdBQUdvcEMsR0FBR3hwQyxFQUFFSSxFQUFFLENBQWdDLEdBQXRCdTBCLEtBQUtpQyxHQUFFNzJCLEVBQUVzbkMsR0FBR3ptQyxRQUFRVCxFQUFLLE9BQU9xbkMsR0FBRSxNQUFNanFDLE1BQU1rQyxFQUFFLE1BQWlCLE9BQVg4NkIsR0FBRSxLQUFLa04sR0FBRSxFQUFTbkQsRUFBQyxDQUFDLFNBQVM0RixLQUFLLEtBQUssT0FBTzFDLElBQUcyQyxHQUFHM0MsR0FBRSxDQUFDLFNBQVMrQixLQUFLLEtBQUssT0FBTy9CLEtBQUl6d0IsTUFBTW96QixHQUFHM0MsR0FBRSxDQUFDLFNBQVMyQyxHQUFHbnFDLEdBQUcsSUFBSUUsRUFBRWduQyxHQUFHbG5DLEVBQUUrVixVQUFVL1YsRUFBRW1oQyxJQUFJbmhDLEVBQUU4eUIsY0FBYzl5QixFQUFFcXlCLGFBQWEsT0FBT255QixFQUFFK3BDLEdBQUdqcUMsR0FBR3duQyxHQUFFdG5DLEVBQUVvbkMsR0FBRzFtQyxRQUFRLElBQUksQ0FDMWQsU0FBU3FwQyxHQUFHanFDLEdBQUcsSUFBSUUsRUFBRUYsRUFBRSxFQUFFLENBQUMsSUFBSUQsRUFBRUcsRUFBRTZWLFVBQXFCLEdBQVgvVixFQUFFRSxFQUFFOFYsT0FBdUIsTUFBUjlWLEVBQUUrVixNQUF3RCxDQUFXLEdBQUcsUUFBYmxXLEVBQUUwa0MsR0FBRzFrQyxFQUFFRyxJQUFtQyxPQUFuQkgsRUFBRWtXLE9BQU8sV0FBTXV4QixHQUFFem5DLEdBQVMsR0FBRyxPQUFPQyxFQUFtRSxPQUFYc2tDLEdBQUUsT0FBRWtELEdBQUUsTUFBNUR4bkMsRUFBRWlXLE9BQU8sTUFBTWpXLEVBQUUraUMsYUFBYSxFQUFFL2lDLEVBQUVteUIsVUFBVSxJQUE0QixNQUFoTCxHQUFnQixRQUFicHlCLEVBQUU0akMsR0FBRzVqQyxFQUFFRyxFQUFFaWhDLEtBQWtCLFlBQUpxRyxHQUFFem5DLEdBQWlLLEdBQUcsUUFBZkcsRUFBRUEsRUFBRXNXLFNBQXlCLFlBQUpneEIsR0FBRXRuQyxHQUFTc25DLEdBQUV0bkMsRUFBRUYsQ0FBQyxPQUFPLE9BQU9FLEdBQUcsSUFBSW9rQyxLQUFJQSxHQUFFLEVBQUUsQ0FBQyxTQUFTdUYsR0FBRzdwQyxFQUFFRSxFQUFFSCxHQUFHLElBQUlJLEVBQUVxWixHQUFFcFosRUFBRW1uQyxHQUFHcnJCLFdBQVcsSUFBSXFyQixHQUFHcnJCLFdBQVcsS0FBSzFDLEdBQUUsRUFDM1ksU0FBWXhaLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsR0FBR2dwQyxXQUFXLE9BQU9qQixJQUFJLEdBQVUsRUFBRnRSLEdBQUssTUFBTXI1QixNQUFNa0MsRUFBRSxNQUFNTSxFQUFFQyxFQUFFMnBDLGFBQWEsSUFBSXZwQyxFQUFFSixFQUFFNHBDLGNBQWMsR0FBRyxPQUFPN3BDLEVBQUUsT0FBTyxLQUEyQyxHQUF0Q0MsRUFBRTJwQyxhQUFhLEtBQUszcEMsRUFBRTRwQyxjQUFjLEVBQUs3cEMsSUFBSUMsRUFBRVksUUFBUSxNQUFNckQsTUFBTWtDLEVBQUUsTUFBTU8sRUFBRTBvQyxhQUFhLEtBQUsxb0MsRUFBRThvQyxpQkFBaUIsRUFBRSxJQUFJaHFDLEVBQUVpQixFQUFFbzFCLE1BQU1wMUIsRUFBRWcxQixXQUE4SixHQXpOdFQsU0FBWS8wQixFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUU0WSxjQUFjMVksRUFBRUYsRUFBRTRZLGFBQWExWSxFQUFFRixFQUFFNlksZUFBZSxFQUFFN1ksRUFBRThZLFlBQVksRUFBRTlZLEVBQUU0b0MsY0FBYzFvQyxFQUFFRixFQUFFb3FDLGtCQUFrQmxxQyxFQUFFRixFQUFFK1ksZ0JBQWdCN1ksRUFBRUEsRUFBRUYsRUFBRWdaLGNBQWMsSUFBSTdZLEVBQUVILEVBQUVzWixXQUFXLElBQUl0WixFQUFFQSxFQUFFMm9DLGdCQUFnQixFQUFFNW9DLEdBQUcsQ0FBQyxJQUFJSyxFQUFFLEdBQUcrWCxHQUFHcFksR0FBR2pCLEVBQUUsR0FBR3NCLEVBQUVGLEVBQUVFLEdBQUcsRUFBRUQsRUFBRUMsSUFBSSxFQUFFSixFQUFFSSxJQUFJLEVBQUVMLElBQUlqQixDQUFDLENBQUMsQ0F5TjVHdXJDLENBQUdycUMsRUFBRWxCLEdBQUdrQixJQUFJdTZCLEtBQUlpTixHQUFFak4sR0FBRSxLQUFLa04sR0FBRSxLQUF1QixLQUFmMW5DLEVBQUVnakMsaUJBQWlDLEtBQVJoakMsRUFBRWtXLFFBQWFneUIsS0FBS0EsSUFBRyxFQUFHZ0IsR0FBR3R4QixHQUFHLFdBQWdCLE9BQUx3eEIsS0FBWSxJQUFJLElBQUlycUMsS0FBZSxNQUFSaUIsRUFBRWtXLE9BQW9DLE1BQWZsVyxFQUFFZ2pDLGNBQXFCamtDLEVBQUUsQ0FBQ0EsRUFBRXlvQyxHQUFHcnJCLFdBQVdxckIsR0FBR3JyQixXQUFXLEtBQ2hmLElBQUlqYyxFQUFFdVosR0FBRUEsR0FBRSxFQUFFLElBQUluWixFQUFFdTJCLEdBQUVBLElBQUcsRUFBRTBRLEdBQUcxbUMsUUFBUSxLQTFDcEMsU0FBWVosRUFBRUUsR0FBZ0IsR0FBYjZ0QixHQUFHL1IsR0FBYWdNLEdBQVZob0IsRUFBRTZuQixNQUFjLENBQUMsR0FBRyxtQkFBbUI3bkIsRUFBRSxJQUFJRCxFQUFFLENBQUN1b0IsTUFBTXRvQixFQUFFd29CLGVBQWVELElBQUl2b0IsRUFBRXlvQixtQkFBbUJ6b0IsRUFBRSxDQUE4QyxJQUFJRyxHQUFqREosR0FBR0EsRUFBRUMsRUFBRXdOLGdCQUFnQnpOLEVBQUU0b0IsYUFBYTdtQixRQUFlOG1CLGNBQWM3b0IsRUFBRTZvQixlQUFlLEdBQUd6b0IsR0FBRyxJQUFJQSxFQUFFMm9CLFdBQVcsQ0FBQy9vQixFQUFFSSxFQUFFNG9CLFdBQVcsSUFBSTNvQixFQUFFRCxFQUFFNm9CLGFBQWFscUIsRUFBRXFCLEVBQUU4b0IsVUFBVTlvQixFQUFFQSxFQUFFK29CLFlBQVksSUFBSW5wQixFQUFFcVAsU0FBU3RRLEVBQUVzUSxRQUFRLENBQUMsTUFBTXdkLEdBQUc3c0IsRUFBRSxLQUFLLE1BQU1DLENBQUMsQ0FBQyxJQUFJQyxFQUFFLEVBQUVJLEdBQUcsRUFBRXRCLEdBQUcsRUFBRUcsRUFBRSxFQUFFQyxFQUFFLEVBQUVXLEVBQUVFLEVBQUVpMEIsRUFBRSxLQUFLL3pCLEVBQUUsT0FBTyxDQUFDLElBQUksSUFBSWcwQixFQUFLcDBCLElBQUlDLEdBQUcsSUFBSUssR0FBRyxJQUFJTixFQUFFc1AsV0FBVy9PLEVBQUVKLEVBQUVHLEdBQUdOLElBQUloQixHQUFHLElBQUlxQixHQUFHLElBQUlMLEVBQUVzUCxXQUFXclEsRUFBRWtCLEVBQUVFLEdBQUcsSUFBSUwsRUFBRXNQLFdBQVduUCxHQUNuZkgsRUFBRXVQLFVBQVVsVCxRQUFXLFFBQVErM0IsRUFBRXAwQixFQUFFK08sYUFBa0JvbEIsRUFBRW4wQixFQUFFQSxFQUFFbzBCLEVBQUUsT0FBTyxDQUFDLEdBQUdwMEIsSUFBSUUsRUFBRSxNQUFNRSxFQUE4QyxHQUE1Qyt6QixJQUFJbDBCLEtBQUtiLElBQUlrQixJQUFJQyxFQUFFSixHQUFHZzBCLElBQUluMUIsS0FBS0ssSUFBSWdCLElBQUlwQixFQUFFa0IsR0FBTSxRQUFRaTBCLEVBQUVwMEIsRUFBRTJuQixhQUFhLE1BQVV3TSxHQUFKbjBCLEVBQUVtMEIsR0FBTTlmLFVBQVUsQ0FBQ3JVLEVBQUVvMEIsQ0FBQyxDQUFDbjBCLEdBQUcsSUFBSU0sSUFBSSxJQUFJdEIsRUFBRSxLQUFLLENBQUN1cEIsTUFBTWpvQixFQUFFa29CLElBQUl4cEIsRUFBRSxNQUFNZ0IsRUFBRSxJQUFJLENBQUNBLEVBQUVBLEdBQUcsQ0FBQ3VvQixNQUFNLEVBQUVDLElBQUksRUFBRSxNQUFNeG9CLEVBQUUsS0FBK0MsSUFBMUNpdUIsR0FBRyxDQUFDN0YsWUFBWW5vQixFQUFFb29CLGVBQWVyb0IsR0FBR2ljLElBQUcsRUFBTzhvQixHQUFFNWtDLEVBQUUsT0FBTzRrQyxJQUFHLEdBQU85a0MsR0FBSkUsRUFBRTRrQyxJQUFNdnVCLE1BQTBCLEtBQWZyVyxFQUFFNmlDLGNBQW9CLE9BQU8vaUMsRUFBRUEsRUFBRWdXLE9BQU85VixFQUFFNGtDLEdBQUU5a0MsT0FBTyxLQUFLLE9BQU84a0MsSUFBRyxDQUFDNWtDLEVBQUU0a0MsR0FBRSxJQUFJLElBQUl4bEMsRUFBRVksRUFBRTZWLFVBQVUsR0FBZ0IsS0FBUjdWLEVBQUUrVixNQUFZLE9BQU8vVixFQUFFK0ssS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FDdkssS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLE1BQTNXLEtBQUssRUFBRSxHQUFHLE9BQU8zTCxFQUFFLENBQUMsSUFBSWt0QixFQUFFbHRCLEVBQUV3ekIsY0FBY3JHLEVBQUVudEIsRUFBRTZXLGNBQWN1VyxFQUFFeHNCLEVBQUV1VSxVQUFVelgsRUFBRTB2QixFQUFFb1Msd0JBQXdCNStCLEVBQUVneUIsY0FBY2h5QixFQUFFTyxLQUFLK3JCLEVBQUVrUixHQUFHeDlCLEVBQUVPLEtBQUsrckIsR0FBR0MsR0FBR0MsRUFBRXNhLG9DQUFvQ2hxQyxDQUFDLENBQUMsTUFBTSxLQUFLLEVBQUUsSUFBSTJ2QixFQUFFenNCLEVBQUV1VSxVQUFVNkcsY0FBYyxJQUFJcVIsRUFBRXZkLFNBQVN1ZCxFQUFFdGUsWUFBWSxHQUFHLElBQUlzZSxFQUFFdmQsVUFBVXVkLEVBQUV0RSxpQkFBaUJzRSxFQUFFN2QsWUFBWTZkLEVBQUV0RSxpQkFBaUIsTUFBeUMsUUFBUSxNQUFNOXFCLE1BQU1rQyxFQUFFLE1BQU8sQ0FBQyxNQUFNbXRCLEdBQUdvWSxHQUFFOWtDLEVBQUVBLEVBQUU4VixPQUFPNFcsRUFBRSxDQUFhLEdBQUcsUUFBZjVzQixFQUFFRSxFQUFFc1csU0FBb0IsQ0FBQ3hXLEVBQUVnVyxPQUFPOVYsRUFBRThWLE9BQU84dUIsR0FBRTlrQyxFQUFFLEtBQUssQ0FBQzhrQyxHQUFFNWtDLEVBQUU4VixNQUFNLENBQUMxVyxFQUFFNGxDLEdBQUdBLElBQUcsQ0FBVyxDQXdDbGRvRixDQUFHdHFDLEVBQUVELEdBQUd1bUMsR0FBR3ZtQyxFQUFFQyxHQUFHa29CLEdBQUc4RixJQUFJaFMsS0FBSytSLEdBQUdDLEdBQUdELEdBQUcsS0FBSy90QixFQUFFWSxRQUFRYixFQUFFNm1DLEdBQUc3bUMsRUFBRUMsRUFBRUksR0FBRzZXLEtBQUsyZixHQUFFdjJCLEVBQUVtWixHQUFFdlosRUFBRXNuQyxHQUFHcnJCLFdBQVdwZCxDQUFDLE1BQU1rQixFQUFFWSxRQUFRYixFQUFzRixHQUFwRmtvQyxLQUFLQSxJQUFHLEVBQUdDLEdBQUdsb0MsRUFBRW1vQyxHQUFHL25DLEdBQW9CLEtBQWpCdEIsRUFBRWtCLEVBQUU0WSxnQkFBcUJrbkIsR0FBRyxNQWhPbUosU0FBWTkvQixHQUFHLEdBQUdrWSxJQUFJLG1CQUFvQkEsR0FBR3F5QixrQkFBa0IsSUFBSXJ5QixHQUFHcXlCLGtCQUFrQnR5QixHQUFHalksT0FBRSxJQUFPLEtBQU9BLEVBQUVZLFFBQVFxVixPQUFXLENBQUMsTUFBTS9WLEdBQUcsQ0FBQyxDQWdPeFJzcUMsQ0FBR3pxQyxFQUFFMFUsV0FBYWcwQixHQUFHem9DLEVBQUVtWCxNQUFRLE9BQU9qWCxFQUFFLElBQUlDLEVBQUVILEVBQUV5cUMsbUJBQW1CMXFDLEVBQUUsRUFBRUEsRUFBRUcsRUFBRS9ELE9BQU80RCxJQUFXSSxHQUFQQyxFQUFFRixFQUFFSCxJQUFPeU0sTUFBTSxDQUFDdXpCLGVBQWUzL0IsRUFBRStKLE1BQU1nMUIsT0FBTy8rQixFQUFFKytCLFNBQVMsR0FBR00sR0FBRyxNQUFNQSxJQUFHLEVBQUd6L0IsRUFBRTAvQixHQUFHQSxHQUFHLEtBQUsxL0IsS0FBVSxFQUFIbW9DLEtBQU8sSUFBSW5vQyxFQUFFaUwsS0FBS2srQixLQUE2QixHQUF4QnJxQyxFQUFFa0IsRUFBRTRZLGNBQXVCNVksSUFBSXFvQyxHQUFHRCxNQUFNQSxHQUFHLEVBQUVDLEdBQUdyb0MsR0FBR29vQyxHQUFHLEVBQUV0WCxJQUFnQixDQUZ4RjRaLENBQUcxcUMsRUFBRUUsRUFBRUgsRUFBRUksRUFBRSxDQUFDLFFBQVFvbkMsR0FBR3JyQixXQUFXOWIsRUFBRW9aLEdBQUVyWixDQUFDLENBQUMsT0FBTyxJQUFJLENBR2hjLFNBQVNncEMsS0FBSyxHQUFHLE9BQU9qQixHQUFHLENBQUMsSUFBSWxvQyxFQUFFeVosR0FBRzB1QixJQUFJam9DLEVBQUVxbkMsR0FBR3JyQixXQUFXbmMsRUFBRXlaLEdBQUUsSUFBbUMsR0FBL0IrdEIsR0FBR3JyQixXQUFXLEtBQUsxQyxHQUFFLEdBQUd4WixFQUFFLEdBQUdBLEVBQUssT0FBT2tvQyxHQUFHLElBQUkvbkMsR0FBRSxNQUFPLENBQW1CLEdBQWxCSCxFQUFFa29DLEdBQUdBLEdBQUcsS0FBS0MsR0FBRyxFQUFZLEVBQUZ2UixHQUFLLE1BQU1yNUIsTUFBTWtDLEVBQUUsTUFBTSxJQUFJVyxFQUFFdzJCLEdBQU8sSUFBTEEsSUFBRyxFQUFNa08sR0FBRTlrQyxFQUFFWSxRQUFRLE9BQU9ra0MsSUFBRyxDQUFDLElBQUlobUMsRUFBRWdtQyxHQUFFN2tDLEVBQUVuQixFQUFFeVgsTUFBTSxHQUFnQixHQUFSdXVCLEdBQUU3dUIsTUFBVSxDQUFDLElBQUk1VixFQUFFdkIsRUFBRXF6QixVQUFVLEdBQUcsT0FBTzl4QixFQUFFLENBQUMsSUFBSSxJQUFJdEIsRUFBRSxFQUFFQSxFQUFFc0IsRUFBRWxFLE9BQU80QyxJQUFJLENBQUMsSUFBSUcsRUFBRW1CLEVBQUV0QixHQUFHLElBQUkrbEMsR0FBRTVsQyxFQUFFLE9BQU80bEMsSUFBRyxDQUFDLElBQUkzbEMsRUFBRTJsQyxHQUFFLE9BQU8zbEMsRUFBRThMLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUdrNkIsR0FBRyxFQUFFaG1DLEVBQUVMLEdBQUcsSUFBSWdCLEVBQUVYLEVBQUVvWCxNQUFNLEdBQUcsT0FBT3pXLEVBQUVBLEVBQUVrVyxPQUFPN1csRUFBRTJsQyxHQUFFaGxDLE9BQU8sS0FBSyxPQUFPZ2xDLElBQUcsQ0FBSyxJQUFJN1EsR0FBUjkwQixFQUFFMmxDLElBQVV0dUIsUUFBUTBkLEVBQUUvMEIsRUFBRTZXLE9BQWEsR0FBTnN2QixHQUFHbm1DLEdBQU1BLElBQ25mRCxFQUFFLENBQUM0bEMsR0FBRSxLQUFLLEtBQUssQ0FBQyxHQUFHLE9BQU83USxFQUFFLENBQUNBLEVBQUVqZSxPQUFPa2UsRUFBRTRRLEdBQUU3USxFQUFFLEtBQUssQ0FBQzZRLEdBQUU1USxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk1MEIsRUFBRVIsRUFBRWlYLFVBQVUsR0FBRyxPQUFPelcsRUFBRSxDQUFDLElBQUlrdEIsRUFBRWx0QixFQUFFaVgsTUFBTSxHQUFHLE9BQU9pVyxFQUFFLENBQUNsdEIsRUFBRWlYLE1BQU0sS0FBSyxFQUFFLENBQUMsSUFBSWtXLEVBQUVELEVBQUVoVyxRQUFRZ1csRUFBRWhXLFFBQVEsS0FBS2dXLEVBQUVDLENBQUMsT0FBTyxPQUFPRCxFQUFFLENBQUMsQ0FBQ3NZLEdBQUVobUMsQ0FBQyxDQUFDLENBQUMsR0FBdUIsS0FBZkEsRUFBRWlrQyxjQUFvQixPQUFPOWlDLEVBQUVBLEVBQUUrVixPQUFPbFgsRUFBRWdtQyxHQUFFN2tDLE9BQU9DLEVBQUUsS0FBSyxPQUFPNGtDLElBQUcsQ0FBSyxHQUFnQixNQUFwQmhtQyxFQUFFZ21DLElBQVk3dUIsTUFBWSxPQUFPblgsRUFBRW1NLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUdrNkIsR0FBRyxFQUFFcm1DLEVBQUVBLEVBQUVrWCxRQUFRLElBQUkwVyxFQUFFNXRCLEVBQUUwWCxRQUFRLEdBQUcsT0FBT2tXLEVBQUUsQ0FBQ0EsRUFBRTFXLE9BQU9sWCxFQUFFa1gsT0FBTzh1QixHQUFFcFksRUFBRSxNQUFNeHNCLENBQUMsQ0FBQzRrQyxHQUFFaG1DLEVBQUVrWCxNQUFNLENBQUMsQ0FBQyxJQUFJaFosRUFBRWdELEVBQUVZLFFBQVEsSUFBSWtrQyxHQUFFOW5DLEVBQUUsT0FBTzhuQyxJQUFHLENBQUssSUFBSW5ZLEdBQVIxc0IsRUFBRTZrQyxJQUFVdnVCLE1BQU0sR0FBdUIsS0FBZnRXLEVBQUU4aUMsY0FBb0IsT0FDbGZwVyxFQUFFQSxFQUFFM1csT0FBTy9WLEVBQUU2a0MsR0FBRW5ZLE9BQU96c0IsRUFBRSxJQUFJRCxFQUFFakQsRUFBRSxPQUFPOG5DLElBQUcsQ0FBSyxHQUFnQixNQUFwQnprQyxFQUFFeWtDLElBQVk3dUIsTUFBWSxJQUFJLE9BQU81VixFQUFFNEssS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBR202QixHQUFHLEVBQUUva0MsR0FBRyxDQUFDLE1BQU02c0IsR0FBSThYLEdBQUUza0MsRUFBRUEsRUFBRTJWLE9BQU9rWCxFQUFHLENBQUMsR0FBRzdzQixJQUFJSixFQUFFLENBQUM2a0MsR0FBRSxLQUFLLE1BQU01a0MsQ0FBQyxDQUFDLElBQUkwc0IsRUFBRXZzQixFQUFFbVcsUUFBUSxHQUFHLE9BQU9vVyxFQUFFLENBQUNBLEVBQUU1VyxPQUFPM1YsRUFBRTJWLE9BQU84dUIsR0FBRWxZLEVBQUUsTUFBTTFzQixDQUFDLENBQUM0a0MsR0FBRXprQyxFQUFFMlYsTUFBTSxDQUFDLENBQVUsR0FBVDRnQixHQUFFeDJCLEVBQUUwd0IsS0FBUTVZLElBQUksbUJBQW9CQSxHQUFHeXlCLHNCQUFzQixJQUFJenlCLEdBQUd5eUIsc0JBQXNCMXlCLEdBQUdqWSxFQUFFLENBQUMsTUFBTWt0QixHQUFJLENBQUMvc0IsR0FBRSxDQUFFLENBQUMsT0FBT0EsQ0FBQyxDQUFDLFFBQVFxWixHQUFFelosRUFBRXduQyxHQUFHcnJCLFdBQVdoYyxDQUFDLENBQUMsQ0FBQyxPQUFNLENBQUUsQ0FBQyxTQUFTMHFDLEdBQUc1cUMsRUFBRUUsRUFBRUgsR0FBeUJDLEVBQUUyMkIsR0FBRzMyQixFQUFqQkUsRUFBRXMvQixHQUFHeC9CLEVBQWZFLEVBQUVnL0IsR0FBR24vQixFQUFFRyxHQUFZLEdBQVksR0FBR0EsRUFBRW04QixLQUFJLE9BQU9yOEIsSUFBSXFaLEdBQUdyWixFQUFFLEVBQUVFLEdBQUd1b0MsR0FBR3pvQyxFQUFFRSxHQUFHLENBQ3plLFNBQVM4a0MsR0FBRWhsQyxFQUFFRSxFQUFFSCxHQUFHLEdBQUcsSUFBSUMsRUFBRWlMLElBQUkyL0IsR0FBRzVxQyxFQUFFQSxFQUFFRCxRQUFRLEtBQUssT0FBT0csR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRStLLElBQUksQ0FBQzIvQixHQUFHMXFDLEVBQUVGLEVBQUVELEdBQUcsS0FBSyxDQUFNLEdBQUcsSUFBSUcsRUFBRStLLElBQUksQ0FBQyxJQUFJOUssRUFBRUQsRUFBRXVVLFVBQVUsR0FBRyxtQkFBb0J2VSxFQUFFTyxLQUFLbS9CLDBCQUEwQixtQkFBb0J6L0IsRUFBRTAvQixvQkFBb0IsT0FBT0MsS0FBS0EsR0FBRzlULElBQUk3ckIsSUFBSSxDQUF1QkQsRUFBRXkyQixHQUFHejJCLEVBQWpCRixFQUFFMi9CLEdBQUd6L0IsRUFBZkYsRUFBRWsvQixHQUFHbi9CLEVBQUVDLEdBQVksR0FBWSxHQUFHQSxFQUFFcThCLEtBQUksT0FBT244QixJQUFJbVosR0FBR25aLEVBQUUsRUFBRUYsR0FBR3lvQyxHQUFHdm9DLEVBQUVGLElBQUksS0FBSyxDQUFDLENBQUNFLEVBQUVBLEVBQUU4VixNQUFNLENBQUMsQ0FDblYsU0FBU2txQixHQUFHbGdDLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksRUFBRUgsRUFBRWlnQyxVQUFVLE9BQU85L0IsR0FBR0EsRUFBRXVhLE9BQU94YSxHQUFHQSxFQUFFbThCLEtBQUlyOEIsRUFBRThZLGFBQWE5WSxFQUFFNlksZUFBZTlZLEVBQUV3NkIsS0FBSXY2QixJQUFJeW5DLEdBQUUxbkMsS0FBS0EsSUFBSSxJQUFJdWtDLElBQUcsSUFBSUEsS0FBTSxVQUFGbUQsTUFBZUEsSUFBRyxJQUFJdHdCLEtBQUlzdkIsR0FBRzZDLEdBQUd0cEMsRUFBRSxHQUFHNG5DLElBQUk3bkMsR0FBRzBvQyxHQUFHem9DLEVBQUVFLEVBQUUsQ0FBQyxTQUFTMnFDLEdBQUc3cUMsRUFBRUUsR0FBRyxJQUFJQSxJQUFnQixFQUFQRixFQUFFMHlCLE1BQWF4eUIsRUFBRXVZLEtBQWtCLFdBQWZBLEtBQUssTUFBdUJBLEdBQUcsVUFBekN2WSxFQUFFLEdBQWtELElBQUlILEVBQUVzOEIsS0FBYyxRQUFWcjhCLEVBQUU0MUIsR0FBRzUxQixFQUFFRSxNQUFjbVosR0FBR3JaLEVBQUVFLEVBQUVILEdBQUcwb0MsR0FBR3pvQyxFQUFFRCxHQUFHLENBQUMsU0FBUzZpQyxHQUFHNWlDLEdBQUcsSUFBSUUsRUFBRUYsRUFBRW1XLGNBQWNwVyxFQUFFLEVBQUUsT0FBT0csSUFBSUgsRUFBRUcsRUFBRXN5QixXQUFXcVksR0FBRzdxQyxFQUFFRCxFQUFFLENBQ2paLFNBQVNxbUMsR0FBR3BtQyxFQUFFRSxHQUFHLElBQUlILEVBQUUsRUFBRSxPQUFPQyxFQUFFaUwsS0FBSyxLQUFLLEdBQUcsSUFBSTlLLEVBQUVILEVBQUV5VSxVQUFjclUsRUFBRUosRUFBRW1XLGNBQWMsT0FBTy9WLElBQUlMLEVBQUVLLEVBQUVveUIsV0FBVyxNQUFNLEtBQUssR0FBR3J5QixFQUFFSCxFQUFFeVUsVUFBVSxNQUFNLFFBQVEsTUFBTWxYLE1BQU1rQyxFQUFFLE1BQU8sT0FBT1UsR0FBR0EsRUFBRXVhLE9BQU94YSxHQUFHMnFDLEdBQUc3cUMsRUFBRUQsRUFBRSxDQVFxSyxTQUFTa3BDLEdBQUdqcEMsRUFBRUUsR0FBRyxPQUFPeVcsR0FBRzNXLEVBQUVFLEVBQUUsQ0FDalosU0FBUzRxQyxHQUFHOXFDLEVBQUVFLEVBQUVILEVBQUVJLEdBQUdoRCxLQUFLOE4sSUFBSWpMLEVBQUU3QyxLQUFLdUMsSUFBSUssRUFBRTVDLEtBQUtxWixRQUFRclosS0FBS29aLE1BQU1wWixLQUFLNlksT0FBTzdZLEtBQUtzWCxVQUFVdFgsS0FBS3NELEtBQUt0RCxLQUFLKzBCLFlBQVksS0FBSy8wQixLQUFLdTJCLE1BQU0sRUFBRXYyQixLQUFLd0MsSUFBSSxLQUFLeEMsS0FBS2sxQixhQUFhbnlCLEVBQUUvQyxLQUFLODNCLGFBQWE5M0IsS0FBS2daLGNBQWNoWixLQUFLNDRCLFlBQVk1NEIsS0FBSzIxQixjQUFjLEtBQUszMUIsS0FBS3UxQixLQUFLdnlCLEVBQUVoRCxLQUFLNGxDLGFBQWE1bEMsS0FBSzhZLE1BQU0sRUFBRTlZLEtBQUtnMUIsVUFBVSxLQUFLaDFCLEtBQUs0M0IsV0FBVzUzQixLQUFLZzRCLE1BQU0sRUFBRWg0QixLQUFLNFksVUFBVSxJQUFJLENBQUMsU0FBU2tjLEdBQUdqeUIsRUFBRUUsRUFBRUgsRUFBRUksR0FBRyxPQUFPLElBQUkycUMsR0FBRzlxQyxFQUFFRSxFQUFFSCxFQUFFSSxFQUFFLENBQUMsU0FBU3VnQyxHQUFHMWdDLEdBQWlCLFVBQWRBLEVBQUVBLEVBQUVaLGFBQXVCWSxFQUFFK3FDLGlCQUFpQixDQUVwZCxTQUFTcFgsR0FBRzN6QixFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUUrVixVQUN1QixPQURiLE9BQU9oVyxJQUFHQSxFQUFFa3lCLEdBQUdqeUIsRUFBRWlMLElBQUkvSyxFQUFFRixFQUFFTixJQUFJTSxFQUFFMHlCLE9BQVFSLFlBQVlseUIsRUFBRWt5QixZQUFZbnlCLEVBQUVVLEtBQUtULEVBQUVTLEtBQUtWLEVBQUUwVSxVQUFVelUsRUFBRXlVLFVBQVUxVSxFQUFFZ1csVUFBVS9WLEVBQUVBLEVBQUUrVixVQUFVaFcsSUFBSUEsRUFBRXN5QixhQUFhbnlCLEVBQUVILEVBQUVVLEtBQUtULEVBQUVTLEtBQUtWLEVBQUVrVyxNQUFNLEVBQUVsVyxFQUFFZ2pDLGFBQWEsRUFBRWhqQyxFQUFFb3lCLFVBQVUsTUFBTXB5QixFQUFFa1csTUFBYyxTQUFSalcsRUFBRWlXLE1BQWVsVyxFQUFFZzFCLFdBQVcvMEIsRUFBRSswQixXQUFXaDFCLEVBQUVvMUIsTUFBTW4xQixFQUFFbTFCLE1BQU1wMUIsRUFBRXdXLE1BQU12VyxFQUFFdVcsTUFBTXhXLEVBQUUreUIsY0FBYzl5QixFQUFFOHlCLGNBQWMveUIsRUFBRW9XLGNBQWNuVyxFQUFFbVcsY0FBY3BXLEVBQUVnMkIsWUFBWS8xQixFQUFFKzFCLFlBQVk3MUIsRUFBRUYsRUFBRWkxQixhQUFhbDFCLEVBQUVrMUIsYUFBYSxPQUFPLzBCLEVBQUUsS0FBSyxDQUFDaTFCLE1BQU1qMUIsRUFBRWkxQixNQUFNRCxhQUFhaDFCLEVBQUVnMUIsY0FDL2VuMUIsRUFBRXlXLFFBQVF4VyxFQUFFd1csUUFBUXpXLEVBQUUyekIsTUFBTTF6QixFQUFFMHpCLE1BQU0zekIsRUFBRUosSUFBSUssRUFBRUwsSUFBV0ksQ0FBQyxDQUN4RCxTQUFTOHpCLEdBQUc3ekIsRUFBRUUsRUFBRUgsRUFBRUksRUFBRUMsRUFBRXRCLEdBQUcsSUFBSW1CLEVBQUUsRUFBTSxHQUFKRSxFQUFFSCxFQUFLLG1CQUFvQkEsRUFBRTBnQyxHQUFHMWdDLEtBQUtDLEVBQUUsUUFBUSxHQUFHLGlCQUFrQkQsRUFBRUMsRUFBRSxPQUFPRCxFQUFFLE9BQU9BLEdBQUcsS0FBS2lKLEVBQUcsT0FBTytxQixHQUFHajBCLEVBQUVrTyxTQUFTN04sRUFBRXRCLEVBQUVvQixHQUFHLEtBQUtnSixFQUFHakosRUFBRSxFQUFFRyxHQUFHLEVBQUUsTUFBTSxLQUFLK0ksRUFBRyxPQUFPbkosRUFBRWl5QixHQUFHLEdBQUdseUIsRUFBRUcsRUFBSSxFQUFGRSxJQUFPOHhCLFlBQVkvb0IsRUFBR25KLEVBQUVtMUIsTUFBTXIyQixFQUFFa0IsRUFBRSxLQUFLdUosRUFBRyxPQUFPdkosRUFBRWl5QixHQUFHLEdBQUdseUIsRUFBRUcsRUFBRUUsSUFBSzh4QixZQUFZM29CLEVBQUd2SixFQUFFbTFCLE1BQU1yMkIsRUFBRWtCLEVBQUUsS0FBS3dKLEVBQUcsT0FBT3hKLEVBQUVpeUIsR0FBRyxHQUFHbHlCLEVBQUVHLEVBQUVFLElBQUs4eEIsWUFBWTFvQixFQUFHeEosRUFBRW0xQixNQUFNcjJCLEVBQUVrQixFQUFFLEtBQUsySixFQUFHLE9BQU8yNEIsR0FBR3ZpQyxFQUFFSyxFQUFFdEIsRUFBRW9CLEdBQUcsUUFBUSxHQUFHLGlCQUFrQkYsR0FBRyxPQUFPQSxFQUFFLE9BQU9BLEVBQUVRLFVBQVUsS0FBSzRJLEVBQUduSixFQUFFLEdBQUcsTUFBTUQsRUFBRSxLQUFLcUosRUFBR3BKLEVBQUUsRUFBRSxNQUFNRCxFQUFFLEtBQUtzSixFQUFHckosRUFBRSxHQUNwZixNQUFNRCxFQUFFLEtBQUt5SixFQUFHeEosRUFBRSxHQUFHLE1BQU1ELEVBQUUsS0FBSzBKLEVBQUd6SixFQUFFLEdBQUdFLEVBQUUsS0FBSyxNQUFNSCxFQUFFLE1BQU16QyxNQUFNa0MsRUFBRSxJQUFJLE1BQU1PLEVBQUVBLFNBQVNBLEVBQUUsS0FBdUQsT0FBakRFLEVBQUUreEIsR0FBR2h5QixFQUFFRixFQUFFRyxFQUFFRSxJQUFLOHhCLFlBQVlseUIsRUFBRUUsRUFBRU8sS0FBS04sRUFBRUQsRUFBRWkxQixNQUFNcjJCLEVBQVNvQixDQUFDLENBQUMsU0FBUzh6QixHQUFHaDBCLEVBQUVFLEVBQUVILEVBQUVJLEdBQTJCLE9BQXhCSCxFQUFFaXlCLEdBQUcsRUFBRWp5QixFQUFFRyxFQUFFRCxJQUFLaTFCLE1BQU1wMUIsRUFBU0MsQ0FBQyxDQUFDLFNBQVNzaUMsR0FBR3RpQyxFQUFFRSxFQUFFSCxFQUFFSSxHQUF1RSxPQUFwRUgsRUFBRWl5QixHQUFHLEdBQUdqeUIsRUFBRUcsRUFBRUQsSUFBS2d5QixZQUFZdm9CLEVBQUczSixFQUFFbTFCLE1BQU1wMUIsRUFBRUMsRUFBRXlVLFVBQVUsQ0FBQyt4QixVQUFTLEdBQVd4bUMsQ0FBQyxDQUFDLFNBQVM0ekIsR0FBRzV6QixFQUFFRSxFQUFFSCxHQUE4QixPQUEzQkMsRUFBRWl5QixHQUFHLEVBQUVqeUIsRUFBRSxLQUFLRSxJQUFLaTFCLE1BQU1wMUIsRUFBU0MsQ0FBQyxDQUM1VyxTQUFTK3pCLEdBQUcvekIsRUFBRUUsRUFBRUgsR0FBOEosT0FBM0pHLEVBQUUreEIsR0FBRyxFQUFFLE9BQU9qeUIsRUFBRWlPLFNBQVNqTyxFQUFFaU8sU0FBUyxHQUFHak8sRUFBRU4sSUFBSVEsSUFBS2kxQixNQUFNcDFCLEVBQUVHLEVBQUV1VSxVQUFVLENBQUM2RyxjQUFjdGIsRUFBRXNiLGNBQWMwdkIsZ0JBQWdCLEtBQUtsWCxlQUFlOXpCLEVBQUU4ekIsZ0JBQXVCNXpCLENBQUMsQ0FDdEwsU0FBUytxQyxHQUFHanJDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUdqRCxLQUFLOE4sSUFBSS9LLEVBQUUvQyxLQUFLbWUsY0FBY3RiLEVBQUU3QyxLQUFLd3NDLGFBQWF4c0MsS0FBSzhpQyxVQUFVOWlDLEtBQUt5RCxRQUFRekQsS0FBSzZ0QyxnQkFBZ0IsS0FBSzd0QyxLQUFLMnNDLGVBQWUsRUFBRTNzQyxLQUFLdXJDLGFBQWF2ckMsS0FBS3lrQyxlQUFlemtDLEtBQUttNEIsUUFBUSxLQUFLbjRCLEtBQUsyckMsaUJBQWlCLEVBQUUzckMsS0FBS21jLFdBQVdGLEdBQUcsR0FBR2pjLEtBQUt3ckMsZ0JBQWdCdnZCLElBQUksR0FBR2pjLEtBQUs0YixlQUFlNWIsS0FBS3lzQyxjQUFjenNDLEtBQUtpdEMsaUJBQWlCanRDLEtBQUt5ckMsYUFBYXpyQyxLQUFLMmIsWUFBWTNiLEtBQUswYixlQUFlMWIsS0FBS3liLGFBQWEsRUFBRXpiLEtBQUs2YixjQUFjSSxHQUFHLEdBQUdqYyxLQUFLc2dDLGlCQUFpQnQ5QixFQUFFaEQsS0FBS3N0QyxtQkFBbUJycUMsRUFBRWpELEtBQUsrdEMsZ0NBQy9lLElBQUksQ0FBQyxTQUFTQyxHQUFHbnJDLEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEVBQUV0QixFQUFFbUIsRUFBRUksRUFBRXRCLEdBQWdOLE9BQTdNaUIsRUFBRSxJQUFJaXJDLEdBQUdqckMsRUFBRUUsRUFBRUgsRUFBRU0sRUFBRXRCLEdBQUcsSUFBSW1CLEdBQUdBLEVBQUUsR0FBRSxJQUFLcEIsSUFBSW9CLEdBQUcsSUFBSUEsRUFBRSxFQUFFcEIsRUFBRW16QixHQUFHLEVBQUUsS0FBSyxLQUFLL3hCLEdBQUdGLEVBQUVZLFFBQVE5QixFQUFFQSxFQUFFMlYsVUFBVXpVLEVBQUVsQixFQUFFcVgsY0FBYyxDQUFDcVQsUUFBUXJwQixFQUFFa2IsYUFBYXRiLEVBQUVxckMsTUFBTSxLQUFLbkssWUFBWSxLQUFLb0ssMEJBQTBCLE1BQU12VixHQUFHaDNCLEdBQVVrQixDQUFDLENBQ3pQLFNBQVNzckMsR0FBR3RyQyxHQUFHLElBQUlBLEVBQUUsT0FBT3l2QixHQUF1Qnp2QixFQUFFLENBQUMsR0FBRzhWLEdBQTFCOVYsRUFBRUEsRUFBRTg5QixtQkFBOEI5OUIsR0FBRyxJQUFJQSxFQUFFaUwsSUFBSSxNQUFNMU4sTUFBTWtDLEVBQUUsTUFBTSxJQUFJUyxFQUFFRixFQUFFLEVBQUUsQ0FBQyxPQUFPRSxFQUFFK0ssS0FBSyxLQUFLLEVBQUUvSyxFQUFFQSxFQUFFdVUsVUFBVTZnQixRQUFRLE1BQU10MUIsRUFBRSxLQUFLLEVBQUUsR0FBR2l3QixHQUFHL3ZCLEVBQUVPLE1BQU0sQ0FBQ1AsRUFBRUEsRUFBRXVVLFVBQVUrYiwwQ0FBMEMsTUFBTXh3QixDQUFDLEVBQUVFLEVBQUVBLEVBQUU4VixNQUFNLE9BQU8sT0FBTzlWLEdBQUcsTUFBTTNDLE1BQU1rQyxFQUFFLEtBQU0sQ0FBQyxHQUFHLElBQUlPLEVBQUVpTCxJQUFJLENBQUMsSUFBSWxMLEVBQUVDLEVBQUVTLEtBQUssR0FBR3d2QixHQUFHbHdCLEdBQUcsT0FBT3N3QixHQUFHcndCLEVBQUVELEVBQUVHLEVBQUUsQ0FBQyxPQUFPQSxDQUFDLENBQ3BXLFNBQVNxckMsR0FBR3ZyQyxFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxFQUFFdEIsRUFBRW1CLEVBQUVJLEVBQUV0QixHQUF3SyxPQUFyS2lCLEVBQUVtckMsR0FBR3ByQyxFQUFFSSxHQUFFLEVBQUdILEVBQUVJLEVBQUV0QixFQUFFbUIsRUFBRUksRUFBRXRCLElBQUt1MkIsUUFBUWdXLEdBQUcsTUFBTXZyQyxFQUFFQyxFQUFFWSxTQUFzQjlCLEVBQUV5M0IsR0FBaEJwMkIsRUFBRWs4QixLQUFJajhCLEVBQUU4N0IsR0FBR244QixLQUFlMjJCLFNBQVMsTUFBU3gyQixFQUFZQSxFQUFFLEtBQUt5MkIsR0FBRzUyQixFQUFFakIsRUFBRXNCLEdBQUdKLEVBQUVZLFFBQVF1MEIsTUFBTS8wQixFQUFFaVosR0FBR3JaLEVBQUVJLEVBQUVELEdBQUdzb0MsR0FBR3pvQyxFQUFFRyxHQUFVSCxDQUFDLENBQUMsU0FBU3dyQyxHQUFHeHJDLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSUMsRUFBRUYsRUFBRVUsUUFBUTlCLEVBQUV1OUIsS0FBSXA4QixFQUFFaThCLEdBQUc5N0IsR0FBc0wsT0FBbkxMLEVBQUV1ckMsR0FBR3ZyQyxHQUFHLE9BQU9HLEVBQUVvMUIsUUFBUXAxQixFQUFFbzFCLFFBQVF2MUIsRUFBRUcsRUFBRTBoQyxlQUFlN2hDLEdBQUVHLEVBQUVxMkIsR0FBR3ozQixFQUFFbUIsSUFBS3hELFFBQVEsQ0FBQytzQixRQUFReHBCLEdBQXVCLFFBQXBCRyxPQUFFLElBQVNBLEVBQUUsS0FBS0EsS0FBYUQsRUFBRXcyQixTQUFTdjJCLEdBQWUsUUFBWkgsRUFBRTIyQixHQUFHdjJCLEVBQUVGLEVBQUVELE1BQWM0NkIsR0FBRzc2QixFQUFFSSxFQUFFSCxFQUFFbkIsR0FBRyszQixHQUFHNzJCLEVBQUVJLEVBQUVILElBQVdBLENBQUMsQ0FDM2IsU0FBU3dyQyxHQUFHenJDLEdBQWUsT0FBWkEsRUFBRUEsRUFBRVksU0FBYzJWLE9BQXlCdlcsRUFBRXVXLE1BQU10TCxJQUFvRGpMLEVBQUV1VyxNQUFNOUIsV0FBaEYsSUFBMEYsQ0FBQyxTQUFTaTNCLEdBQUcxckMsRUFBRUUsR0FBcUIsR0FBRyxRQUFyQkYsRUFBRUEsRUFBRW1XLGdCQUEyQixPQUFPblcsRUFBRW9XLFdBQVcsQ0FBQyxJQUFJclcsRUFBRUMsRUFBRXd5QixVQUFVeHlCLEVBQUV3eUIsVUFBVSxJQUFJenlCLEdBQUdBLEVBQUVHLEVBQUVILEVBQUVHLENBQUMsQ0FBQyxDQUFDLFNBQVN5ckMsR0FBRzNyQyxFQUFFRSxHQUFHd3JDLEdBQUcxckMsRUFBRUUsSUFBSUYsRUFBRUEsRUFBRStWLFlBQVkyMUIsR0FBRzFyQyxFQUFFRSxFQUFFLENBbkI3U2duQyxHQUFHLFNBQVNsbkMsRUFBRUUsRUFBRUgsR0FBRyxHQUFHLE9BQU9DLEVBQUUsR0FBR0EsRUFBRTh5QixnQkFBZ0I1eUIsRUFBRW15QixjQUFjMUMsR0FBRy91QixRQUFRdzBCLElBQUcsTUFBTyxDQUFDLEdBQUcsS0FBS3AxQixFQUFFbTFCLE1BQU1wMUIsTUFBaUIsSUFBUkcsRUFBRStWLE9BQVcsT0FBT21mLElBQUcsRUF6RTFJLFNBQVlwMUIsRUFBRUUsRUFBRUgsR0FBRyxPQUFPRyxFQUFFK0ssS0FBSyxLQUFLLEVBQUUwMkIsR0FBR3poQyxHQUFHOHlCLEtBQUssTUFBTSxLQUFLLEVBQUUwRSxHQUFHeDNCLEdBQUcsTUFBTSxLQUFLLEVBQUUrdkIsR0FBRy92QixFQUFFTyxPQUFPOHZCLEdBQUdyd0IsR0FBRyxNQUFNLEtBQUssRUFBRXEzQixHQUFHcjNCLEVBQUVBLEVBQUV1VSxVQUFVNkcsZUFBZSxNQUFNLEtBQUssR0FBRyxJQUFJbmIsRUFBRUQsRUFBRU8sS0FBSzJLLFNBQVNoTCxFQUFFRixFQUFFNHlCLGNBQWN0bUIsTUFBTWdqQixHQUFFK0UsR0FBR3AwQixFQUFFMDBCLGVBQWUxMEIsRUFBRTAwQixjQUFjejBCLEVBQUUsTUFBTSxLQUFLLEdBQXFCLEdBQUcsUUFBckJELEVBQUVELEVBQUVpVyxlQUEyQixPQUFHLE9BQU9oVyxFQUFFaVcsWUFBa0JvWixHQUFFb0ksR0FBWSxFQUFWQSxHQUFFaDNCLFNBQVdWLEVBQUUrVixPQUFPLElBQUksTUFBUSxLQUFLbFcsRUFBRUcsRUFBRXFXLE1BQU13ZSxZQUFtQnFOLEdBQUdwaUMsRUFBRUUsRUFBRUgsSUFBR3l2QixHQUFFb0ksR0FBWSxFQUFWQSxHQUFFaDNCLFNBQThCLFFBQW5CWixFQUFFd2dDLEdBQUd4Z0MsRUFBRUUsRUFBRUgsSUFBbUJDLEVBQUV3VyxRQUFRLE1BQUtnWixHQUFFb0ksR0FBWSxFQUFWQSxHQUFFaDNCLFNBQVcsTUFBTSxLQUFLLEdBQzdkLEdBRGdlVCxFQUFFLEtBQUtKLEVBQ3JmRyxFQUFFNjBCLFlBQTRCLElBQVIvMEIsRUFBRWlXLE1BQVcsQ0FBQyxHQUFHOVYsRUFBRSxPQUFPcWpDLEdBQUd4akMsRUFBRUUsRUFBRUgsR0FBR0csRUFBRStWLE9BQU8sR0FBRyxDQUE2RixHQUExRSxRQUFsQjdWLEVBQUVGLEVBQUVpVyxpQkFBeUIvVixFQUFFK2lDLFVBQVUsS0FBSy9pQyxFQUFFa2pDLEtBQUssS0FBS2xqQyxFQUFFcTZCLFdBQVcsTUFBTWpMLEdBQUVvSSxHQUFFQSxHQUFFaDNCLFNBQVlULEVBQUUsTUFBVyxPQUFPLEtBQUssS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPRCxFQUFFaTFCLE1BQU0sRUFBRTJMLEdBQUc5Z0MsRUFBRUUsRUFBRUgsR0FBRyxPQUFPeWdDLEdBQUd4Z0MsRUFBRUUsRUFBRUgsRUFBRSxDQXdFN0c2ckMsQ0FBRzVyQyxFQUFFRSxFQUFFSCxHQUFHcTFCLE1BQWdCLE9BQVJwMUIsRUFBRWlXLE1BQW1CLE1BQU1tZixJQUFHLEVBQUd0RCxJQUFnQixRQUFSNXhCLEVBQUUrVixPQUFnQndiLEdBQUd2eEIsRUFBRWd4QixHQUFHaHhCLEVBQUV3ekIsT0FBaUIsT0FBVnh6QixFQUFFaTFCLE1BQU0sRUFBU2oxQixFQUFFK0ssS0FBSyxLQUFLLEVBQUUsSUFBSTlLLEVBQUVELEVBQUVPLEtBQUs2Z0MsR0FBR3RoQyxFQUFFRSxHQUFHRixFQUFFRSxFQUFFbXlCLGFBQWEsSUFBSWp5QixFQUFFeXZCLEdBQUczdkIsRUFBRXd2QixHQUFFOXVCLFNBQVNvMEIsR0FBRzkwQixFQUFFSCxHQUFHSyxFQUFFMjRCLEdBQUcsS0FBSzc0QixFQUFFQyxFQUFFSCxFQUFFSSxFQUFFTCxHQUFHLElBQUlqQixFQUFFczZCLEtBQ3ZJLE9BRDRJbDVCLEVBQUUrVixPQUFPLEVBQUUsaUJBQWtCN1YsR0FBRyxPQUFPQSxHQUFHLG1CQUFvQkEsRUFBRThLLGFBQVEsSUFBUzlLLEVBQUVJLFVBQVVOLEVBQUUrSyxJQUFJLEVBQUUvSyxFQUFFaVcsY0FBYyxLQUFLalcsRUFBRTYxQixZQUMxZSxLQUFLOUYsR0FBRzl2QixJQUFJckIsR0FBRSxFQUFHeXhCLEdBQUdyd0IsSUFBSXBCLEdBQUUsRUFBR29CLEVBQUVpVyxjQUFjLE9BQU8vVixFQUFFbStCLFlBQU8sSUFBU24rQixFQUFFbStCLE1BQU1uK0IsRUFBRW0rQixNQUFNLEtBQUt6SSxHQUFHNTFCLEdBQUdFLEVBQUVvK0IsUUFBUVosR0FBRzE5QixFQUFFdVUsVUFBVXJVLEVBQUVBLEVBQUUwOUIsZ0JBQWdCNTlCLEVBQUUwK0IsR0FBRzErQixFQUFFQyxFQUFFSCxFQUFFRCxHQUFHRyxFQUFFd2hDLEdBQUcsS0FBS3hoQyxFQUFFQyxHQUFFLEVBQUdyQixFQUFFaUIsS0FBS0csRUFBRStLLElBQUksRUFBRTZtQixJQUFHaHpCLEdBQUc0eUIsR0FBR3h4QixHQUFHb2dDLEdBQUcsS0FBS3BnQyxFQUFFRSxFQUFFTCxHQUFHRyxFQUFFQSxFQUFFcVcsT0FBY3JXLEVBQUUsS0FBSyxHQUFHQyxFQUFFRCxFQUFFZ3lCLFlBQVlseUIsRUFBRSxDQUFxRixPQUFwRnNoQyxHQUFHdGhDLEVBQUVFLEdBQUdGLEVBQUVFLEVBQUVteUIsYUFBdUJseUIsR0FBVkMsRUFBRUQsRUFBRW1MLE9BQVVuTCxFQUFFa0wsVUFBVW5MLEVBQUVPLEtBQUtOLEVBQUVDLEVBQUVGLEVBQUUrSyxJQVF0VSxTQUFZakwsR0FBRyxHQUFHLG1CQUFvQkEsRUFBRSxPQUFPMGdDLEdBQUcxZ0MsR0FBRyxFQUFFLEVBQUUsR0FBRyxNQUFTQSxFQUFZLENBQWMsSUFBYkEsRUFBRUEsRUFBRVEsWUFBZ0I4SSxFQUFHLE9BQU8sR0FBRyxHQUFHdEosSUFBSXlKLEVBQUcsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLENBUjJMb2lDLENBQUcxckMsR0FBR0gsRUFBRTA5QixHQUFHdjlCLEVBQUVILEdBQVVJLEdBQUcsS0FBSyxFQUFFRixFQUFFMmdDLEdBQUcsS0FBSzNnQyxFQUFFQyxFQUFFSCxFQUFFRCxHQUFHLE1BQU1DLEVBQUUsS0FBSyxFQUFFRSxFQUFFbWhDLEdBQUcsS0FBS25oQyxFQUFFQyxFQUFFSCxFQUFFRCxHQUFHLE1BQU1DLEVBQUUsS0FBSyxHQUFHRSxFQUFFcWdDLEdBQUcsS0FBS3JnQyxFQUFFQyxFQUFFSCxFQUFFRCxHQUFHLE1BQU1DLEVBQUUsS0FBSyxHQUFHRSxFQUFFdWdDLEdBQUcsS0FBS3ZnQyxFQUFFQyxFQUFFdTlCLEdBQUd2OUIsRUFBRU0sS0FBS1QsR0FBR0QsR0FBRyxNQUFNQyxFQUFFLE1BQU16QyxNQUFNa0MsRUFBRSxJQUN2Z0JVLEVBQUUsSUFBSyxDQUFDLE9BQU9ELEVBQUUsS0FBSyxFQUFFLE9BQU9DLEVBQUVELEVBQUVPLEtBQUtMLEVBQUVGLEVBQUVteUIsYUFBMkN3TyxHQUFHN2dDLEVBQUVFLEVBQUVDLEVBQXJDQyxFQUFFRixFQUFFZ3lCLGNBQWMveEIsRUFBRUMsRUFBRXM5QixHQUFHdjlCLEVBQUVDLEdBQWNMLEdBQUcsS0FBSyxFQUFFLE9BQU9JLEVBQUVELEVBQUVPLEtBQUtMLEVBQUVGLEVBQUVteUIsYUFBMkNnUCxHQUFHcmhDLEVBQUVFLEVBQUVDLEVBQXJDQyxFQUFFRixFQUFFZ3lCLGNBQWMveEIsRUFBRUMsRUFBRXM5QixHQUFHdjlCLEVBQUVDLEdBQWNMLEdBQUcsS0FBSyxFQUFFQyxFQUFFLENBQU8sR0FBTjJoQyxHQUFHemhDLEdBQU0sT0FBT0YsRUFBRSxNQUFNekMsTUFBTWtDLEVBQUUsTUFBTVUsRUFBRUQsRUFBRW15QixhQUErQmp5QixHQUFsQnRCLEVBQUVvQixFQUFFaVcsZUFBa0JxVCxRQUFROE0sR0FBR3QyQixFQUFFRSxHQUFHNjJCLEdBQUc3MkIsRUFBRUMsRUFBRSxLQUFLSixHQUFHLElBQUlFLEVBQUVDLEVBQUVpVyxjQUEwQixHQUFaaFcsRUFBRUYsRUFBRXVwQixRQUFXMXFCLEVBQUV1YyxhQUFhLElBQUd2YyxFQUFFLENBQUMwcUIsUUFBUXJwQixFQUFFa2IsY0FBYSxFQUFHK3ZCLE1BQU1uckMsRUFBRW1yQyxNQUFNQywwQkFBMEJwckMsRUFBRW9yQywwQkFBMEJwSyxZQUFZaGhDLEVBQUVnaEMsYUFBYS9nQyxFQUFFNjFCLFlBQVlDLFVBQ2hmbDNCLEVBQUVvQixFQUFFaVcsY0FBY3JYLEVBQVUsSUFBUm9CLEVBQUUrVixNQUFVLENBQXVCL1YsRUFBRTJoQyxHQUFHN2hDLEVBQUVFLEVBQUVDLEVBQUVKLEVBQWpDSyxFQUFFOCtCLEdBQUczaEMsTUFBTWtDLEVBQUUsTUFBTVMsSUFBbUIsTUFBTUYsQ0FBQyxDQUFNLEdBQUdHLElBQUlDLEVBQUUsQ0FBdUJGLEVBQUUyaEMsR0FBRzdoQyxFQUFFRSxFQUFFQyxFQUFFSixFQUFqQ0ssRUFBRTgrQixHQUFHM2hDLE1BQU1rQyxFQUFFLE1BQU1TLElBQW1CLE1BQU1GLENBQUMsQ0FBTSxJQUFJNnhCLEdBQUdqRCxHQUFHMXVCLEVBQUV1VSxVQUFVNkcsY0FBY3pNLFlBQVkraUIsR0FBRzF4QixFQUFFNHhCLElBQUUsRUFBR0MsR0FBRyxLQUFLaHlCLEVBQUV1MEIsR0FBR3AwQixFQUFFLEtBQUtDLEVBQUVKLEdBQUdHLEVBQUVxVyxNQUFNeFcsRUFBRUEsR0FBR0EsRUFBRWtXLE9BQWUsRUFBVGxXLEVBQUVrVyxNQUFTLEtBQUtsVyxFQUFFQSxFQUFFeVcsT0FBTyxLQUFLLENBQU0sR0FBTHdjLEtBQVE3eUIsSUFBSUMsRUFBRSxDQUFDRixFQUFFc2dDLEdBQUd4Z0MsRUFBRUUsRUFBRUgsR0FBRyxNQUFNQyxDQUFDLENBQUNzZ0MsR0FBR3RnQyxFQUFFRSxFQUFFQyxFQUFFSixFQUFFLENBQUNHLEVBQUVBLEVBQUVxVyxLQUFLLENBQUMsT0FBT3JXLEVBQUUsS0FBSyxFQUFFLE9BQU93M0IsR0FBR3gzQixHQUFHLE9BQU9GLEdBQUcyeUIsR0FBR3p5QixHQUFHQyxFQUFFRCxFQUFFTyxLQUFLTCxFQUFFRixFQUFFbXlCLGFBQWF2ekIsRUFBRSxPQUFPa0IsRUFBRUEsRUFBRTh5QixjQUFjLEtBQUs3eUIsRUFBRUcsRUFBRTZOLFNBQVNnZ0IsR0FBRzl0QixFQUFFQyxHQUFHSCxFQUFFLEtBQUssT0FBT25CLEdBQUdtdkIsR0FBRzl0QixFQUFFckIsS0FBS29CLEVBQUUrVixPQUFPLElBQ25mbXJCLEdBQUdwaEMsRUFBRUUsR0FBR29nQyxHQUFHdGdDLEVBQUVFLEVBQUVELEVBQUVGLEdBQUdHLEVBQUVxVyxNQUFNLEtBQUssRUFBRSxPQUFPLE9BQU92VyxHQUFHMnlCLEdBQUd6eUIsR0FBRyxLQUFLLEtBQUssR0FBRyxPQUFPa2lDLEdBQUdwaUMsRUFBRUUsRUFBRUgsR0FBRyxLQUFLLEVBQUUsT0FBT3czQixHQUFHcjNCLEVBQUVBLEVBQUV1VSxVQUFVNkcsZUFBZW5iLEVBQUVELEVBQUVteUIsYUFBYSxPQUFPcnlCLEVBQUVFLEVBQUVxVyxNQUFNOGQsR0FBR24wQixFQUFFLEtBQUtDLEVBQUVKLEdBQUd1Z0MsR0FBR3RnQyxFQUFFRSxFQUFFQyxFQUFFSixHQUFHRyxFQUFFcVcsTUFBTSxLQUFLLEdBQUcsT0FBT3BXLEVBQUVELEVBQUVPLEtBQUtMLEVBQUVGLEVBQUVteUIsYUFBMkNrTyxHQUFHdmdDLEVBQUVFLEVBQUVDLEVBQXJDQyxFQUFFRixFQUFFZ3lCLGNBQWMveEIsRUFBRUMsRUFBRXM5QixHQUFHdjlCLEVBQUVDLEdBQWNMLEdBQUcsS0FBSyxFQUFFLE9BQU91Z0MsR0FBR3RnQyxFQUFFRSxFQUFFQSxFQUFFbXlCLGFBQWF0eUIsR0FBR0csRUFBRXFXLE1BQU0sS0FBSyxFQUFtRCxLQUFLLEdBQUcsT0FBTytwQixHQUFHdGdDLEVBQUVFLEVBQUVBLEVBQUVteUIsYUFBYXBrQixTQUFTbE8sR0FBR0csRUFBRXFXLE1BQU0sS0FBSyxHQUFHdlcsRUFBRSxDQUN4WixHQUR5WkcsRUFBRUQsRUFBRU8sS0FBSzJLLFNBQVNoTCxFQUFFRixFQUFFbXlCLGFBQWF2ekIsRUFBRW9CLEVBQUU0eUIsY0FDbGY3eUIsRUFBRUcsRUFBRW9NLE1BQU1nakIsR0FBRStFLEdBQUdwMEIsRUFBRTAwQixlQUFlMTBCLEVBQUUwMEIsY0FBYzUwQixFQUFLLE9BQU9uQixFQUFFLEdBQUdxb0IsR0FBR3JvQixFQUFFME4sTUFBTXZNLElBQUksR0FBR25CLEVBQUVtUCxXQUFXN04sRUFBRTZOLFdBQVcwaEIsR0FBRy91QixRQUFRLENBQUNWLEVBQUVzZ0MsR0FBR3hnQyxFQUFFRSxFQUFFSCxHQUFHLE1BQU1DLENBQUMsT0FBTyxJQUFjLFFBQVZsQixFQUFFb0IsRUFBRXFXLFNBQWlCelgsRUFBRWtYLE9BQU85VixHQUFHLE9BQU9wQixHQUFHLENBQUMsSUFBSXVCLEVBQUV2QixFQUFFbTJCLGFBQWEsR0FBRyxPQUFPNTBCLEVBQUUsQ0FBQ0osRUFBRW5CLEVBQUV5WCxNQUFNLElBQUksSUFBSXhYLEVBQUVzQixFQUFFNjBCLGFBQWEsT0FBT24yQixHQUFHLENBQUMsR0FBR0EsRUFBRXUyQixVQUFVbjFCLEVBQUUsQ0FBQyxHQUFHLElBQUlyQixFQUFFbU0sSUFBSSxFQUFDbE0sRUFBRXczQixJQUFJLEVBQUV4MkIsR0FBR0EsSUFBS2tMLElBQUksRUFBRSxJQUFJL0wsRUFBRUosRUFBRWkzQixZQUFZLEdBQUcsT0FBTzcyQixFQUFFLENBQVksSUFBSUMsR0FBZkQsRUFBRUEsRUFBRWkzQixRQUFlQyxRQUFRLE9BQU9qM0IsRUFBRUosRUFBRW8xQixLQUFLcDFCLEdBQUdBLEVBQUVvMUIsS0FBS2gxQixFQUFFZzFCLEtBQUtoMUIsRUFBRWcxQixLQUFLcDFCLEdBQUdHLEVBQUVrM0IsUUFBUXIzQixDQUFDLENBQUMsQ0FBQ0QsRUFBRXEyQixPQUFPcDFCLEVBQWdCLFFBQWRoQixFQUFFRCxFQUFFaVgsYUFBcUJoWCxFQUFFbzJCLE9BQU9wMUIsR0FBRyswQixHQUFHaDJCLEVBQUVrWCxPQUNsZmpXLEVBQUVHLEdBQUdHLEVBQUU4MEIsT0FBT3AxQixFQUFFLEtBQUssQ0FBQ2hCLEVBQUVBLEVBQUVvMUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLcjFCLEVBQUVtTSxJQUFJaEwsRUFBRW5CLEVBQUUyQixPQUFPUCxFQUFFTyxLQUFLLEtBQUszQixFQUFFeVgsV0FBVyxHQUFHLEtBQUt6WCxFQUFFbU0sSUFBSSxDQUFZLEdBQUcsUUFBZGhMLEVBQUVuQixFQUFFa1gsUUFBbUIsTUFBTXpZLE1BQU1rQyxFQUFFLE1BQU1RLEVBQUVrMUIsT0FBT3AxQixFQUFnQixRQUFkTSxFQUFFSixFQUFFOFYsYUFBcUIxVixFQUFFODBCLE9BQU9wMUIsR0FBRyswQixHQUFHNzBCLEVBQUVGLEVBQUVHLEdBQUdELEVBQUVuQixFQUFFMFgsT0FBTyxNQUFNdlcsRUFBRW5CLEVBQUV5WCxNQUFNLEdBQUcsT0FBT3RXLEVBQUVBLEVBQUUrVixPQUFPbFgsT0FBTyxJQUFJbUIsRUFBRW5CLEVBQUUsT0FBT21CLEdBQUcsQ0FBQyxHQUFHQSxJQUFJQyxFQUFFLENBQUNELEVBQUUsS0FBSyxLQUFLLENBQWEsR0FBRyxRQUFmbkIsRUFBRW1CLEVBQUV1VyxTQUFvQixDQUFDMVgsRUFBRWtYLE9BQU8vVixFQUFFK1YsT0FBTy9WLEVBQUVuQixFQUFFLEtBQUssQ0FBQ21CLEVBQUVBLEVBQUUrVixNQUFNLENBQUNsWCxFQUFFbUIsQ0FBQyxDQUFDcWdDLEdBQUd0Z0MsRUFBRUUsRUFBRUUsRUFBRTZOLFNBQVNsTyxHQUFHRyxFQUFFQSxFQUFFcVcsS0FBSyxDQUFDLE9BQU9yVyxFQUFFLEtBQUssRUFBRSxPQUFPRSxFQUFFRixFQUFFTyxLQUFLTixFQUFFRCxFQUFFbXlCLGFBQWFwa0IsU0FBUyttQixHQUFHOTBCLEVBQUVILEdBQVdJLEVBQUVBLEVBQVZDLEVBQUVpMUIsR0FBR2oxQixJQUFVRixFQUFFK1YsT0FBTyxFQUFFcXFCLEdBQUd0Z0MsRUFBRUUsRUFBRUMsRUFBRUosR0FDcGZHLEVBQUVxVyxNQUFNLEtBQUssR0FBRyxPQUFnQm5XLEVBQUVzOUIsR0FBWHY5QixFQUFFRCxFQUFFTyxLQUFZUCxFQUFFbXlCLGNBQTZCb08sR0FBR3pnQyxFQUFFRSxFQUFFQyxFQUF0QkMsRUFBRXM5QixHQUFHdjlCLEVBQUVNLEtBQUtMLEdBQWNMLEdBQUcsS0FBSyxHQUFHLE9BQU82Z0MsR0FBRzVnQyxFQUFFRSxFQUFFQSxFQUFFTyxLQUFLUCxFQUFFbXlCLGFBQWF0eUIsR0FBRyxLQUFLLEdBQUcsT0FBT0ksRUFBRUQsRUFBRU8sS0FBS0wsRUFBRUYsRUFBRW15QixhQUFhanlCLEVBQUVGLEVBQUVneUIsY0FBYy94QixFQUFFQyxFQUFFczlCLEdBQUd2OUIsRUFBRUMsR0FBR2toQyxHQUFHdGhDLEVBQUVFLEdBQUdBLEVBQUUrSyxJQUFJLEVBQUVnbEIsR0FBRzl2QixJQUFJSCxHQUFFLEVBQUd1d0IsR0FBR3J3QixJQUFJRixHQUFFLEVBQUdnMUIsR0FBRzkwQixFQUFFSCxHQUFHcytCLEdBQUduK0IsRUFBRUMsRUFBRUMsR0FBR3crQixHQUFHMStCLEVBQUVDLEVBQUVDLEVBQUVMLEdBQUcyaEMsR0FBRyxLQUFLeGhDLEVBQUVDLEdBQUUsRUFBR0gsRUFBRUQsR0FBRyxLQUFLLEdBQUcsT0FBT3lqQyxHQUFHeGpDLEVBQUVFLEVBQUVILEdBQUcsS0FBSyxHQUFHLE9BQU8rZ0MsR0FBRzlnQyxFQUFFRSxFQUFFSCxHQUFHLE1BQU14QyxNQUFNa0MsRUFBRSxJQUFJUyxFQUFFK0ssS0FBTSxFQVl4QyxJQUFJNmdDLEdBQUcsbUJBQW9CQyxZQUFZQSxZQUFZLFNBQVMvckMsR0FBR3BCLFFBQVFDLE1BQU1tQixFQUFFLEVBQUUsU0FBU2dzQyxHQUFHaHNDLEdBQUc3QyxLQUFLOHVDLGNBQWNqc0MsQ0FBQyxDQUNqSSxTQUFTa3NDLEdBQUdsc0MsR0FBRzdDLEtBQUs4dUMsY0FBY2pzQyxDQUFDLENBQzVKLFNBQVNtc0MsR0FBR25zQyxHQUFHLFNBQVNBLEdBQUcsSUFBSUEsRUFBRW9QLFVBQVUsSUFBSXBQLEVBQUVvUCxVQUFVLEtBQUtwUCxFQUFFb1AsU0FBUyxDQUFDLFNBQVNnOUIsR0FBR3BzQyxHQUFHLFNBQVNBLEdBQUcsSUFBSUEsRUFBRW9QLFVBQVUsSUFBSXBQLEVBQUVvUCxVQUFVLEtBQUtwUCxFQUFFb1AsV0FBVyxJQUFJcFAsRUFBRW9QLFVBQVUsaUNBQWlDcFAsRUFBRXFQLFdBQVcsQ0FBQyxTQUFTZzlCLEtBQUssQ0FFeGEsU0FBU0MsR0FBR3RzQyxFQUFFRSxFQUFFSCxFQUFFSSxFQUFFQyxHQUFHLElBQUl0QixFQUFFaUIsRUFBRTRsQyxvQkFBb0IsR0FBRzdtQyxFQUFFLENBQUMsSUFBSW1CLEVBQUVuQixFQUFFLEdBQUcsbUJBQW9Cc0IsRUFBRSxDQUFDLElBQUlDLEVBQUVELEVBQUVBLEVBQUUsV0FBVyxJQUFJSixFQUFFeXJDLEdBQUd4ckMsR0FBR0ksRUFBRUMsS0FBS04sRUFBRSxDQUFDLENBQUN3ckMsR0FBR3RyQyxFQUFFRCxFQUFFRCxFQUFFSSxFQUFFLE1BQU1ILEVBRHhKLFNBQVlELEVBQUVFLEVBQUVILEVBQUVJLEVBQUVDLEdBQUcsR0FBR0EsRUFBRSxDQUFDLEdBQUcsbUJBQW9CRCxFQUFFLENBQUMsSUFBSXJCLEVBQUVxQixFQUFFQSxFQUFFLFdBQVcsSUFBSUgsRUFBRXlyQyxHQUFHeHJDLEdBQUduQixFQUFFd0IsS0FBS04sRUFBRSxDQUFDLENBQUMsSUFBSUMsRUFBRXNyQyxHQUFHcnJDLEVBQUVDLEVBQUVILEVBQUUsRUFBRSxNQUFLLEVBQUcsRUFBRyxHQUFHcXNDLElBQW1GLE9BQS9FcnNDLEVBQUUybEMsb0JBQW9CMWxDLEVBQUVELEVBQUU4c0IsSUFBSTdzQixFQUFFVyxRQUFRd3JCLEdBQUcsSUFBSXBzQixFQUFFb1AsU0FBU3BQLEVBQUVtVSxXQUFXblUsR0FBR2dxQyxLQUFZL3BDLENBQUMsQ0FBQyxLQUFLRyxFQUFFSixFQUFFbVAsV0FBV25QLEVBQUU4TyxZQUFZMU8sR0FBRyxHQUFHLG1CQUFvQkQsRUFBRSxDQUFDLElBQUlFLEVBQUVGLEVBQUVBLEVBQUUsV0FBVyxJQUFJSCxFQUFFeXJDLEdBQUcxc0MsR0FBR3NCLEVBQUVDLEtBQUtOLEVBQUUsQ0FBQyxDQUFDLElBQUlqQixFQUFFb3NDLEdBQUduckMsRUFBRSxHQUFFLEVBQUcsS0FBSyxHQUFLLEVBQUcsRUFBRyxHQUFHcXNDLElBQTBHLE9BQXRHcnNDLEVBQUUybEMsb0JBQW9CNW1DLEVBQUVpQixFQUFFOHNCLElBQUkvdEIsRUFBRTZCLFFBQVF3ckIsR0FBRyxJQUFJcHNCLEVBQUVvUCxTQUFTcFAsRUFBRW1VLFdBQVduVSxHQUFHZ3FDLEdBQUcsV0FBV3dCLEdBQUd0ckMsRUFBRW5CLEVBQUVnQixFQUFFSSxFQUFFLEdBQVVwQixDQUFDLENBQ3BVd3RDLENBQUd4c0MsRUFBRUcsRUFBRUYsRUFBRUksRUFBRUQsR0FBRyxPQUFPc3JDLEdBQUd4ckMsRUFBRSxDQUhwTGlzQyxHQUFHOXNDLFVBQVU4TCxPQUFPOGdDLEdBQUc1c0MsVUFBVThMLE9BQU8sU0FBU2xMLEdBQUcsSUFBSUUsRUFBRS9DLEtBQUs4dUMsY0FBYyxHQUFHLE9BQU8vckMsRUFBRSxNQUFNM0MsTUFBTWtDLEVBQUUsTUFBTStyQyxHQUFHeHJDLEVBQUVFLEVBQUUsS0FBSyxLQUFLLEVBQUVnc0MsR0FBRzlzQyxVQUFVb3RDLFFBQVFSLEdBQUc1c0MsVUFBVW90QyxRQUFRLFdBQVcsSUFBSXhzQyxFQUFFN0MsS0FBSzh1QyxjQUFjLEdBQUcsT0FBT2pzQyxFQUFFLENBQUM3QyxLQUFLOHVDLGNBQWMsS0FBSyxJQUFJL3JDLEVBQUVGLEVBQUVzYixjQUFjMHVCLEdBQUcsV0FBV3dCLEdBQUcsS0FBS3hyQyxFQUFFLEtBQUssS0FBSyxHQUFHRSxFQUFFNHNCLElBQUksSUFBSSxDQUFDLEVBQ3pUb2YsR0FBRzlzQyxVQUFVcXRDLDJCQUEyQixTQUFTenNDLEdBQUcsR0FBR0EsRUFBRSxDQUFDLElBQUlFLEVBQUUyWixLQUFLN1osRUFBRSxDQUFDOGEsVUFBVSxLQUFLOUcsT0FBT2hVLEVBQUVvYixTQUFTbGIsR0FBRyxJQUFJLElBQUlILEVBQUUsRUFBRUEsRUFBRXdhLEdBQUdwZSxRQUFRLElBQUkrRCxHQUFHQSxFQUFFcWEsR0FBR3hhLEdBQUdxYixTQUFTcmIsS0FBS3dhLEdBQUdteUIsT0FBTzNzQyxFQUFFLEVBQUVDLEdBQUcsSUFBSUQsR0FBR21iLEdBQUdsYixFQUFFLENBQUMsRUFFWDBaLEdBQUcsU0FBUzFaLEdBQUcsT0FBT0EsRUFBRWlMLEtBQUssS0FBSyxFQUFFLElBQUkvSyxFQUFFRixFQUFFeVUsVUFBVSxHQUFHdlUsRUFBRVUsUUFBUXVWLGNBQWNrRixhQUFhLENBQUMsSUFBSXRiLEVBQUUyWSxHQUFHeFksRUFBRTBZLGNBQWMsSUFBSTdZLElBQUl3WixHQUFHclosRUFBSSxFQUFGSCxHQUFLMG9DLEdBQUd2b0MsRUFBRWlYLFFBQVksRUFBRnlmLE1BQU8yTixHQUFHcHRCLEtBQUksSUFBSTJaLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBR2taLEdBQUcsV0FBVyxJQUFJOXBDLEVBQUUwMUIsR0FBRzUxQixFQUFFLEdBQUcsR0FBRyxPQUFPRSxFQUFFLENBQUMsSUFBSUgsRUFBRXM4QixLQUFJeEIsR0FBRzM2QixFQUFFRixFQUFFLEVBQUVELEVBQUUsQ0FBQyxHQUFHNHJDLEdBQUczckMsRUFBRSxHQUFHLEVBQy9iMlosR0FBRyxTQUFTM1osR0FBRyxHQUFHLEtBQUtBLEVBQUVpTCxJQUFJLENBQUMsSUFBSS9LLEVBQUUwMUIsR0FBRzUxQixFQUFFLFdBQWMsT0FBT0UsR0FBYTI2QixHQUFHMzZCLEVBQUVGLEVBQUUsVUFBWHE4QixNQUF3QnNQLEdBQUczckMsRUFBRSxVQUFVLENBQUMsRUFBRTRaLEdBQUcsU0FBUzVaLEdBQUcsR0FBRyxLQUFLQSxFQUFFaUwsSUFBSSxDQUFDLElBQUkvSyxFQUFFZzhCLEdBQUdsOEIsR0FBR0QsRUFBRTYxQixHQUFHNTFCLEVBQUVFLEdBQU0sT0FBT0gsR0FBYTg2QixHQUFHOTZCLEVBQUVDLEVBQUVFLEVBQVhtOEIsTUFBZ0JzUCxHQUFHM3JDLEVBQUVFLEVBQUUsQ0FBQyxFQUFFMlosR0FBRyxXQUFXLE9BQU9MLEVBQUMsRUFBRU0sR0FBRyxTQUFTOVosRUFBRUUsR0FBRyxJQUFJSCxFQUFFeVosR0FBRSxJQUFJLE9BQU9BLEdBQUV4WixFQUFFRSxHQUFHLENBQUMsUUFBUXNaLEdBQUV6WixDQUFDLENBQUMsRUFDbFNxVSxHQUFHLFNBQVNwVSxFQUFFRSxFQUFFSCxHQUFHLE9BQU9HLEdBQUcsSUFBSyxRQUF5QixHQUFqQm1OLEVBQUdyTixFQUFFRCxHQUFHRyxFQUFFSCxFQUFFZ0wsS0FBUSxVQUFVaEwsRUFBRVUsTUFBTSxNQUFNUCxFQUFFLENBQUMsSUFBSUgsRUFBRUMsRUFBRUQsRUFBRW9VLFlBQVlwVSxFQUFFQSxFQUFFb1UsV0FBc0YsSUFBM0VwVSxFQUFFQSxFQUFFNHNDLGlCQUFpQixjQUFjQyxLQUFLQyxVQUFVLEdBQUczc0MsR0FBRyxtQkFBdUJBLEVBQUUsRUFBRUEsRUFBRUgsRUFBRTVELE9BQU8rRCxJQUFJLENBQUMsSUFBSUMsRUFBRUosRUFBRUcsR0FBRyxHQUFHQyxJQUFJSCxHQUFHRyxFQUFFMnNDLE9BQU85c0MsRUFBRThzQyxLQUFLLENBQUMsSUFBSTFzQyxFQUFFc1UsR0FBR3ZVLEdBQUcsSUFBSUMsRUFBRSxNQUFNN0MsTUFBTWtDLEVBQUUsS0FBSzZNLEVBQUduTSxHQUFHa04sRUFBR2xOLEVBQUVDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFLLFdBQVcrTixHQUFHbk8sRUFBRUQsR0FBRyxNQUFNLElBQUssU0FBbUIsT0FBVkcsRUFBRUgsRUFBRXlNLFFBQWVtQixHQUFHM04sSUFBSUQsRUFBRStqQyxTQUFTNWpDLEdBQUUsR0FBSSxFQUFFMlUsR0FBR2sxQixHQUFHajFCLEdBQUdrMUIsR0FDcGEsSUFBSStDLEdBQUcsQ0FBQ0MsdUJBQXNCLEVBQUdDLE9BQU8sQ0FBQ3o0QixHQUFHNFIsR0FBRzFSLEdBQUdDLEdBQUdDLEdBQUdtMUIsS0FBS21ELEdBQUcsQ0FBQ0Msd0JBQXdCaHlCLEdBQUdpeUIsV0FBVyxFQUFFOXJDLFFBQVEsU0FBUytyQyxvQkFBb0IsYUFDMUlDLEdBQUcsQ0FBQ0YsV0FBV0YsR0FBR0UsV0FBVzlyQyxRQUFRNHJDLEdBQUc1ckMsUUFBUStyQyxvQkFBb0JILEdBQUdHLG9CQUFvQkUsZUFBZUwsR0FBR0ssZUFBZUMsa0JBQWtCLEtBQUtDLDRCQUE0QixLQUFLQyw0QkFBNEIsS0FBS0MsY0FBYyxLQUFLQyx3QkFBd0IsS0FBS0Msd0JBQXdCLEtBQUtDLGdCQUFnQixLQUFLQyxtQkFBbUIsS0FBS0MsZUFBZSxLQUFLQyxxQkFBcUJubEMsRUFBR3F2Qix1QkFBdUIrVix3QkFBd0IsU0FBU2x1QyxHQUFXLE9BQU8sUUFBZkEsRUFBRXNXLEdBQUd0VyxJQUFtQixLQUFLQSxFQUFFeVUsU0FBUyxFQUFFMDRCLHdCQUF3QkQsR0FBR0MseUJBUmpOLFdBQWMsT0FBTyxJQUFJLEVBU3BVZ0IsNEJBQTRCLEtBQUtDLGdCQUFnQixLQUFLQyxhQUFhLEtBQUtDLGtCQUFrQixLQUFLQyxnQkFBZ0IsS0FBS0Msa0JBQWtCLG1DQUFtQyxHQUFHLG9CQUFxQjd2QywrQkFBK0IsQ0FBQyxJQUFJOHZDLEdBQUc5dkMsK0JBQStCLElBQUk4dkMsR0FBR0MsWUFBWUQsR0FBR0UsY0FBYyxJQUFJMTJCLEdBQUd3MkIsR0FBR0csT0FBT3RCLElBQUlwMUIsR0FBR3UyQixFQUFFLENBQUMsTUFBTXp1QyxJQUFHLENBQUMsQ0FBQ3JFLEVBQVE0RCxtREFBbUR3dEMsR0FDL1lweEMsRUFBUWt6QyxhQUFhLFNBQVM3dUMsRUFBRUUsR0FBRyxJQUFJSCxFQUFFLEVBQUV1RyxVQUFVbkssYUFBUSxJQUFTbUssVUFBVSxHQUFHQSxVQUFVLEdBQUcsS0FBSyxJQUFJNmxDLEdBQUdqc0MsR0FBRyxNQUFNM0MsTUFBTWtDLEVBQUUsTUFBTSxPQWJ1SCxTQUFZTyxFQUFFRSxFQUFFSCxHQUFHLElBQUlJLEVBQUUsRUFBRW1HLFVBQVVuSyxhQUFRLElBQVNtSyxVQUFVLEdBQUdBLFVBQVUsR0FBRyxLQUFLLE1BQU0sQ0FBQzlGLFNBQVN3SSxFQUFHdEosSUFBSSxNQUFNUyxFQUFFLEtBQUssR0FBR0EsRUFBRThOLFNBQVNqTyxFQUFFc2IsY0FBY3BiLEVBQUU0ekIsZUFBZS96QixFQUFFLENBYTFSK3VDLENBQUc5dUMsRUFBRUUsRUFBRSxLQUFLSCxFQUFFLEVBQUVwRSxFQUFRb3pDLFdBQVcsU0FBUy91QyxFQUFFRSxHQUFHLElBQUlpc0MsR0FBR25zQyxHQUFHLE1BQU16QyxNQUFNa0MsRUFBRSxNQUFNLElBQUlNLEdBQUUsRUFBR0ksRUFBRSxHQUFHQyxFQUFFMHJDLEdBQTRQLE9BQXpQLE1BQU81ckMsS0FBZ0IsSUFBS0EsRUFBRTh1QyxzQkFBc0JqdkMsR0FBRSxRQUFJLElBQVNHLEVBQUV1OUIsbUJBQW1CdDlCLEVBQUVELEVBQUV1OUIsdUJBQWtCLElBQVN2OUIsRUFBRXVxQyxxQkFBcUJycUMsRUFBRUYsRUFBRXVxQyxxQkFBcUJ2cUMsRUFBRWlyQyxHQUFHbnJDLEVBQUUsR0FBRSxFQUFHLEtBQUssRUFBS0QsRUFBRSxFQUFHSSxFQUFFQyxHQUFHSixFQUFFOHNCLElBQUk1c0IsRUFBRVUsUUFBUXdyQixHQUFHLElBQUlwc0IsRUFBRW9QLFNBQVNwUCxFQUFFbVUsV0FBV25VLEdBQVUsSUFBSWdzQyxHQUFHOXJDLEVBQUUsRUFDcmZ2RSxFQUFRc3pDLFlBQVksU0FBU2p2QyxHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPLEtBQUssR0FBRyxJQUFJQSxFQUFFb1AsU0FBUyxPQUFPcFAsRUFBRSxJQUFJRSxFQUFFRixFQUFFODlCLGdCQUFnQixRQUFHLElBQVM1OUIsRUFBRSxDQUFDLEdBQUcsbUJBQW9CRixFQUFFa0wsT0FBTyxNQUFNM04sTUFBTWtDLEVBQUUsTUFBaUMsTUFBM0JPLEVBQUUvRCxPQUFPQyxLQUFLOEQsR0FBR3V6QixLQUFLLEtBQVdoMkIsTUFBTWtDLEVBQUUsSUFBSU8sR0FBSSxDQUFxQyxPQUExQixRQUFWQSxFQUFFc1csR0FBR3BXLElBQWMsS0FBS0YsRUFBRXlVLFNBQWtCLEVBQUU5WSxFQUFRdXpDLFVBQVUsU0FBU2x2QyxHQUFHLE9BQU9ncUMsR0FBR2hxQyxFQUFFLEVBQUVyRSxFQUFRd3pDLFFBQVEsU0FBU252QyxFQUFFRSxFQUFFSCxHQUFHLElBQUlxc0MsR0FBR2xzQyxHQUFHLE1BQU0zQyxNQUFNa0MsRUFBRSxNQUFNLE9BQU82c0MsR0FBRyxLQUFLdHNDLEVBQUVFLEdBQUUsRUFBR0gsRUFBRSxFQUMvWXBFLEVBQVF5ekMsWUFBWSxTQUFTcHZDLEVBQUVFLEVBQUVILEdBQUcsSUFBSW9zQyxHQUFHbnNDLEdBQUcsTUFBTXpDLE1BQU1rQyxFQUFFLE1BQU0sSUFBSVUsRUFBRSxNQUFNSixHQUFHQSxFQUFFc3ZDLGlCQUFpQixLQUFLanZDLEdBQUUsRUFBR3RCLEVBQUUsR0FBR21CLEVBQUU2ckMsR0FBeU8sR0FBdE8sTUFBTy9yQyxLQUFnQixJQUFLQSxFQUFFaXZDLHNCQUFzQjV1QyxHQUFFLFFBQUksSUFBU0wsRUFBRTA5QixtQkFBbUIzK0IsRUFBRWlCLEVBQUUwOUIsdUJBQWtCLElBQVMxOUIsRUFBRTBxQyxxQkFBcUJ4cUMsRUFBRUYsRUFBRTBxQyxxQkFBcUJ2cUMsRUFBRXFyQyxHQUFHcnJDLEVBQUUsS0FBS0YsRUFBRSxFQUFFLE1BQU1ELEVBQUVBLEVBQUUsS0FBS0ssRUFBRSxFQUFHdEIsRUFBRW1CLEdBQUdELEVBQUU4c0IsSUFBSTVzQixFQUFFVSxRQUFRd3JCLEdBQUdwc0IsR0FBTUcsRUFBRSxJQUFJSCxFQUFFLEVBQUVBLEVBQUVHLEVBQUVoRSxPQUFPNkQsSUFBMkJJLEdBQWhCQSxHQUFQTCxFQUFFSSxFQUFFSCxJQUFPc3ZDLGFBQWdCdnZDLEVBQUV3dkMsU0FBUyxNQUFNcnZDLEVBQUVnckMsZ0NBQWdDaHJDLEVBQUVnckMsZ0NBQWdDLENBQUNuckMsRUFBRUssR0FBR0YsRUFBRWdyQyxnQ0FBZ0NwdUMsS0FBS2lELEVBQ3ZoQkssR0FBRyxPQUFPLElBQUk4ckMsR0FBR2hzQyxFQUFFLEVBQUV2RSxFQUFRdVAsT0FBTyxTQUFTbEwsRUFBRUUsRUFBRUgsR0FBRyxJQUFJcXNDLEdBQUdsc0MsR0FBRyxNQUFNM0MsTUFBTWtDLEVBQUUsTUFBTSxPQUFPNnNDLEdBQUcsS0FBS3RzQyxFQUFFRSxHQUFFLEVBQUdILEVBQUUsRUFBRXBFLEVBQVE2ekMsdUJBQXVCLFNBQVN4dkMsR0FBRyxJQUFJb3NDLEdBQUdwc0MsR0FBRyxNQUFNekMsTUFBTWtDLEVBQUUsS0FBSyxRQUFPTyxFQUFFMmxDLHNCQUFxQnFFLEdBQUcsV0FBV3NDLEdBQUcsS0FBSyxLQUFLdHNDLEdBQUUsRUFBRyxXQUFXQSxFQUFFMmxDLG9CQUFvQixLQUFLM2xDLEVBQUU4c0IsSUFBSSxJQUFJLEVBQUUsSUFBRyxFQUFNLEVBQUVueEIsRUFBUTh6Qyx3QkFBd0IxRixHQUMvVXB1QyxFQUFRK3pDLG9DQUFvQyxTQUFTMXZDLEVBQUVFLEVBQUVILEVBQUVJLEdBQUcsSUFBSWlzQyxHQUFHcnNDLEdBQUcsTUFBTXhDLE1BQU1rQyxFQUFFLE1BQU0sR0FBRyxNQUFNTyxRQUFHLElBQVNBLEVBQUU4OUIsZ0JBQWdCLE1BQU12Z0MsTUFBTWtDLEVBQUUsS0FBSyxPQUFPNnNDLEdBQUd0c0MsRUFBRUUsRUFBRUgsR0FBRSxFQUFHSSxFQUFFLEVBQUV4RSxFQUFRMkYsUUFBUSxpQyxXQy9NN0w1RixFQUFPQyxRQUFVLENBQ2ZnMEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLFNBQVUsV0FDVkMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLFFBQVMsVUFDVEMsUUFBUyxVQUNUQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsUUFBUyxVQUNUQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLFFBQVMsVUFDVEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsUUFBUyxVQUNUQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsU0FBVSxXQUNWQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsSUFBSyxNQUNMQyxJQUFLLE1BQ0xDLElBQUssTUFDTEMsU0FBVSxXQUNWQyxJQUFLLE1BQ0xDLElBQUssTSxpQkN4TlAsTUFBTUMsRUFBYSxFQUFRLE1BRTNCdjZDLEVBQU9DLFFBQVcrRCxJQUNoQixNQUFNaUMsRUFBTSxDQUFDLEVBWWIsTUFWaUMsb0JBQXRCdTBDLGtCQUNUdjBDLEVBQUlsQixLQUFPLFlBQ0Z3MUMsSUFDVHQwQyxFQUFJbEIsS0FBTyxXQUNrQixpQkFBYnNHLFNBQ2hCcEYsRUFBSWxCLEtBQU8sVUFDaUIsaUJBQVppQixVQUNoQkMsRUFBSWxCLEtBQU8sYUFHTSxJQUFSZixFQUNGaUMsRUFHRkEsRUFBSWpDLEcsV0NuQmJoRSxFQUFPQyxRQUFVLENBSWZ3NkMsU0FBVSwyQ0FNVkMsZUFBZSxFQUNmeHpDLE9BQVEsTyxXQ01WbEgsRUFBT0MsUUFBVzA2QyxJQUNoQixNQUFNMXdDLEVBQVMsR0FDVDJ3QyxFQUFhLEdBQ2JDLEVBQVEsR0FDUkMsRUFBUSxHQUNSQyxFQUFVLEdBOEJoQixPQTVCSUosRUFBSzF3QyxRQUNQMHdDLEVBQUsxd0MsT0FBT2xJLFFBQVNpNUMsSUFDbkJBLEVBQU1KLFdBQVc3NEMsUUFBU2s1QyxJQUN4QkEsRUFBVUosTUFBTTk0QyxRQUFTbTVDLElBQ3ZCQSxFQUFLSixNQUFNLzRDLFFBQVNvNUMsSUFDbEJBLEVBQUtKLFFBQVFoNUMsUUFBU3E1QyxJQUNwQkwsRUFBUTM1QyxLQUFLLElBQ1JnNkMsRUFBS1QsT0FBTUssUUFBT0MsWUFBV0MsT0FBTUMsV0FHMUNMLEVBQU0xNUMsS0FBSyxJQUNOKzVDLEVBQU1SLE9BQU1LLFFBQU9DLFlBQVdDLFdBR3JDTCxFQUFNejVDLEtBQUssSUFDTjg1QyxFQUFNUCxPQUFNSyxRQUFPQyxnQkFHMUJMLEVBQVd4NUMsS0FBSyxJQUNYNjVDLEVBQVdOLE9BQU1LLFlBR3hCL3dDLEVBQU83SSxLQUFLLElBQ1A0NUMsRUFBT0wsV0FLVCxJQUNGQSxFQUFNMXdDLFNBQVEyd0MsYUFBWUMsUUFBT0MsUUFBT0MsVyw4QkNsRDdDLzZDLEVBQU9DLFFBQVUsRUFBakIsSyxXQ2lCRkQsRUFBT0MsUUFuQlAsV0FFSSxNQUFzQixvQkFBWG1HLFFBQW9ELGlCQUFuQkEsT0FBT0osU0FBZ0QsYUFBeEJJLE9BQU9KLFFBQVFqQixRQUtuRSxvQkFBWmlCLFNBQXVELGlCQUFyQkEsUUFBUXExQyxXQUEyQnIxQyxRQUFRcTFDLFNBQVNDLFdBS3hFLGlCQUFkQyxXQUF5RCxpQkFBeEJBLFVBQVVDLFdBQTBCRCxVQUFVQyxVQUFVNWtDLFFBQVEsYUFBZSxDQUsvSCxDLGlCQ1RBLEVBQVEsTUFDUixNQUFNNmtDLEVBQWtCLEVBQVEsS0FDMUJDLEVBQWUsRUFBUSxNQUN2QkMsRUFBWSxFQUFRLE1BQ3BCQyxFQUFZLEVBQVEsTUFDcEJDLEVBQU0sRUFBUSxNQUNkQyxFQUFNLEVBQVEsTUFDZCxXQUFFQyxHQUFlLEVBQVEsTUFFL0IvN0MsRUFBT0MsUUFBVSxDQUNmMjdDLFlBQ0FDLE1BQ0FDLE1BQ0FMLGtCQUNBQyxlQUNBSyxnQkFDR0osRSxXQ2xCTDM3QyxFQUFPQyxRQUFVb0IsTUFBT3FHLEVBQVFzMEMsS0FDOUJ0MEMsRUFBT3UwQyxZQUFZRCxHLDRCQ0NSLElBQUl4NEMsRUFBRUYsT0FBT0MsSUFBSSxpQkFBaUJLLEVBQUVOLE9BQU9DLElBQUksZ0JBQWdCUSxFQUFFVCxPQUFPQyxJQUFJLGtCQUFrQmEsRUFBRWQsT0FBT0MsSUFBSSxxQkFBcUJnMUIsRUFBRWoxQixPQUFPQyxJQUFJLGtCQUFrQnV0QixFQUFFeHRCLE9BQU9DLElBQUksa0JBQWtCMHRCLEVBQUUzdEIsT0FBT0MsSUFBSSxpQkFBaUJvSSxFQUFFckksT0FBT0MsSUFBSSxxQkFBcUJqQyxFQUFFZ0MsT0FBT0MsSUFBSSxrQkFBa0J5dEIsRUFBRTF0QixPQUFPQyxJQUFJLGNBQWNpMUIsRUFBRWwxQixPQUFPQyxJQUFJLGNBQWM0SSxFQUFFN0ksT0FBTzZLLFNBQ3JXc04sRUFBRSxDQUFDMG1CLFVBQVUsV0FBVyxPQUFNLENBQUUsRUFBRUksbUJBQW1CLFdBQVcsRUFBRUQsb0JBQW9CLFdBQVcsRUFBRUQsZ0JBQWdCLFdBQVcsR0FBR3ZrQixFQUFFdmQsT0FBT2dPLE9BQU82aEIsRUFBRSxDQUFDLEVBQUUsU0FBU3lELEVBQUV2dkIsRUFBRUUsRUFBRUUsR0FBR2pELEtBQUt1RCxNQUFNVixFQUFFN0MsS0FBS200QixRQUFRcDFCLEVBQUUvQyxLQUFLazJCLEtBQUt2SCxFQUFFM3VCLEtBQUtxaEMsUUFBUXArQixHQUFHK1csQ0FBQyxDQUN3SSxTQUFTeVYsSUFBSSxDQUF5QixTQUFTNEMsRUFBRXh2QixFQUFFRSxFQUFFRSxHQUFHakQsS0FBS3VELE1BQU1WLEVBQUU3QyxLQUFLbTRCLFFBQVFwMUIsRUFBRS9DLEtBQUtrMkIsS0FBS3ZILEVBQUUzdUIsS0FBS3FoQyxRQUFRcCtCLEdBQUcrVyxDQUFDLENBRHhQb1ksRUFBRW53QixVQUFVMnJDLGlCQUFpQixDQUFDLEVBQ3BReGIsRUFBRW53QixVQUFVdzRDLFNBQVMsU0FBUzUzQyxFQUFFRSxHQUFHLEdBQUcsaUJBQWtCRixHQUFHLG1CQUFvQkEsR0FBRyxNQUFNQSxFQUFFLE1BQU16QyxNQUFNLHlIQUF5SEosS0FBS3FoQyxRQUFRVCxnQkFBZ0I1Z0MsS0FBSzZDLEVBQUVFLEVBQUUsV0FBVyxFQUFFcXZCLEVBQUVud0IsVUFBVXk0QyxZQUFZLFNBQVM3M0MsR0FBRzdDLEtBQUtxaEMsUUFBUVAsbUJBQW1COWdDLEtBQUs2QyxFQUFFLGNBQWMsRUFBZ0I0c0IsRUFBRXh0QixVQUFVbXdCLEVBQUVud0IsVUFBc0YsSUFBSXN3QixFQUFFRixFQUFFcHdCLFVBQVUsSUFBSXd0QixFQUNyZjhDLEVBQUU1akIsWUFBWTBqQixFQUFFaFcsRUFBRWtXLEVBQUVILEVBQUVud0IsV0FBV3N3QixFQUFFME8sc0JBQXFCLEVBQUcsSUFBSXRNLEVBQUU3dEIsTUFBTXlKLFFBQVErZSxFQUFFeHdCLE9BQU9tRCxVQUFVQyxlQUFldTNCLEVBQUUsQ0FBQ2gyQixRQUFRLE1BQU1nM0IsRUFBRSxDQUFDbDRCLEtBQUksRUFBR0MsS0FBSSxFQUFHQyxRQUFPLEVBQUdDLFVBQVMsR0FDdEssU0FBU3k0QixFQUFFdDRCLEVBQUVFLEVBQUVFLEdBQUcsSUFBSUQsRUFBRUosRUFBRSxDQUFDLEVBQUVoQixFQUFFLEtBQUtzQixFQUFFLEtBQUssR0FBRyxNQUFNSCxFQUFFLElBQUlDLFVBQUssSUFBU0QsRUFBRVAsTUFBTVUsRUFBRUgsRUFBRVAsVUFBSyxJQUFTTyxFQUFFUixNQUFNWCxFQUFFLEdBQUdtQixFQUFFUixLQUFLUSxFQUFFdXNCLEVBQUVuc0IsS0FBS0osRUFBRUMsS0FBS3kzQixFQUFFdjRCLGVBQWVjLEtBQUtKLEVBQUVJLEdBQUdELEVBQUVDLElBQUksSUFBSUYsRUFBRXFHLFVBQVVuSyxPQUFPLEVBQUUsR0FBRyxJQUFJOEQsRUFBRUYsRUFBRWtPLFNBQVM3TixPQUFPLEdBQUcsRUFBRUgsRUFBRSxDQUFDLElBQUksSUFBSW5CLEVBQUVtRixNQUFNaEUsR0FBR2QsRUFBRSxFQUFFQSxFQUFFYyxFQUFFZCxJQUFJTCxFQUFFSyxHQUFHbUgsVUFBVW5ILEVBQUUsR0FBR1ksRUFBRWtPLFNBQVNuUCxDQUFDLENBQUMsR0FBR2tCLEdBQUdBLEVBQUVPLGFBQWEsSUFBSUosS0FBS0YsRUFBRUQsRUFBRU8sa0JBQWUsSUFBU1IsRUFBRUksS0FBS0osRUFBRUksR0FBR0YsRUFBRUUsSUFBSSxNQUFNLENBQUNLLFNBQVN0QixFQUFFdUIsS0FBS1QsRUFBRU4sSUFBSVgsRUFBRVksSUFBSVUsRUFBRUssTUFBTVgsRUFBRVksT0FBT2kyQixFQUFFaDJCLFFBQVEsQ0FDaFYsU0FBUzQzQixFQUFFeDRCLEdBQUcsTUFBTSxpQkFBa0JBLEdBQUcsT0FBT0EsR0FBR0EsRUFBRVEsV0FBV3RCLENBQUMsQ0FBb0csSUFBSTI1QixFQUFFLE9BQU8sU0FBUzBCLEVBQUV2NkIsRUFBRUUsR0FBRyxNQUFNLGlCQUFrQkYsR0FBRyxPQUFPQSxHQUFHLE1BQU1BLEVBQUVOLElBQTdLLFNBQWdCTSxHQUFHLElBQUlFLEVBQUUsQ0FBQyxJQUFJLEtBQUssSUFBSSxNQUFNLE1BQU0sSUFBSUYsRUFBRTRJLFFBQVEsUUFBUSxTQUFTNUksR0FBRyxPQUFPRSxFQUFFRixFQUFFLEVBQUUsQ0FBK0U4M0MsQ0FBTyxHQUFHOTNDLEVBQUVOLEtBQUtRLEVBQUVrQixTQUFTLEdBQUcsQ0FDL1csU0FBU2k3QixFQUFFcjhCLEVBQUVFLEVBQUVFLEVBQUVELEVBQUVKLEdBQUcsSUFBSWhCLFNBQVNpQixFQUFLLGNBQWNqQixHQUFHLFlBQVlBLElBQUVpQixFQUFFLE1BQUssSUFBSUssR0FBRSxFQUFHLEdBQUcsT0FBT0wsRUFBRUssR0FBRSxPQUFRLE9BQU90QixHQUFHLElBQUssU0FBUyxJQUFLLFNBQVNzQixHQUFFLEVBQUcsTUFBTSxJQUFLLFNBQVMsT0FBT0wsRUFBRVEsVUFBVSxLQUFLdEIsRUFBRSxLQUFLSSxFQUFFZSxHQUFFLEdBQUksR0FBR0EsRUFBRSxPQUFXTixFQUFFQSxFQUFOTSxFQUFFTCxHQUFTQSxFQUFFLEtBQUtHLEVBQUUsSUFBSW82QixFQUFFbDZCLEVBQUUsR0FBR0YsRUFBRTJ4QixFQUFFL3hCLElBQUlLLEVBQUUsR0FBRyxNQUFNSixJQUFJSSxFQUFFSixFQUFFNEksUUFBUWl3QixFQUFFLE9BQU8sS0FBS3dELEVBQUV0OEIsRUFBRUcsRUFBRUUsRUFBRSxHQUFHLFNBQVNKLEdBQUcsT0FBT0EsQ0FBQyxJQUFJLE1BQU1ELElBQUl5NEIsRUFBRXo0QixLQUFLQSxFQURuVyxTQUFXQyxFQUFFRSxHQUFHLE1BQU0sQ0FBQ00sU0FBU3RCLEVBQUV1QixLQUFLVCxFQUFFUyxLQUFLZixJQUFJUSxFQUFFUCxJQUFJSyxFQUFFTCxJQUFJZSxNQUFNVixFQUFFVSxNQUFNQyxPQUFPWCxFQUFFVyxPQUFPLENBQ3lRNDNCLENBQUV4NEIsRUFBRUssSUFBSUwsRUFBRUwsS0FBS1csR0FBR0EsRUFBRVgsTUFBTUssRUFBRUwsSUFBSSxJQUFJLEdBQUdLLEVBQUVMLEtBQUtrSixRQUFRaXdCLEVBQUUsT0FBTyxLQUFLNzRCLElBQUlFLEVBQUVwRCxLQUFLaUQsSUFBSSxFQUF5QixHQUF2Qk0sRUFBRSxFQUFFRixFQUFFLEtBQUtBLEVBQUUsSUFBSUEsRUFBRSxJQUFPMnhCLEVBQUU5eEIsR0FBRyxJQUFJLElBQUlDLEVBQUUsRUFBRUEsRUFBRUQsRUFBRTdELE9BQU84RCxJQUFJLENBQy9lLElBQUluQixFQUFFcUIsRUFBRW82QixFQUR3ZXg3QixFQUNyZmlCLEVBQUVDLEdBQWVBLEdBQUdJLEdBQUdnOEIsRUFBRXQ5QixFQUFFbUIsRUFBRUUsRUFBRXRCLEVBQUVpQixFQUFFLE1BQU0sR0FBR2pCLEVBUHNVLFNBQVdrQixHQUFHLE9BQUcsT0FBT0EsR0FBRyxpQkFBa0JBLEVBQVMsS0FBc0MsbUJBQWpDQSxFQUFFNkgsR0FBRzdILEVBQUU2SCxJQUFJN0gsRUFBRSxlQUEwQ0EsRUFBRSxJQUFJLENBTzViZ0ssQ0FBRWhLLEdBQUcsbUJBQW9CbEIsRUFBRSxJQUFJa0IsRUFBRWxCLEVBQUV3QixLQUFLTixHQUFHQyxFQUFFLElBQUlsQixFQUFFaUIsRUFBRW0wQixRQUFRQyxNQUE2Qi96QixHQUFHZzhCLEVBQTFCdDlCLEVBQUVBLEVBQUV5TixNQUEwQnRNLEVBQUVFLEVBQXRCdEIsRUFBRXFCLEVBQUVvNkIsRUFBRXg3QixFQUFFa0IsS0FBa0JGLFFBQVEsR0FBRyxXQUFXaEIsRUFBRSxNQUFNbUIsRUFBRWlpQixPQUFPbmlCLEdBQUd6QyxNQUFNLG1EQUFtRCxvQkFBb0IyQyxFQUFFLHFCQUFxQmpFLE9BQU9DLEtBQUs4RCxHQUFHdXpCLEtBQUssTUFBTSxJQUFJcnpCLEdBQUcsNkVBQTZFLE9BQU9HLENBQUMsQ0FDelosU0FBU3FqQyxFQUFFMWpDLEVBQUVFLEVBQUVFLEdBQUcsR0FBRyxNQUFNSixFQUFFLE9BQU9BLEVBQUUsSUFBSUcsRUFBRSxHQUFHSixFQUFFLEVBQW1ELE9BQWpEczhCLEVBQUVyOEIsRUFBRUcsRUFBRSxHQUFHLEdBQUcsU0FBU0gsR0FBRyxPQUFPRSxFQUFFSSxLQUFLRixFQUFFSixFQUFFRCxJQUFJLEdBQVVJLENBQUMsQ0FBQyxTQUFTbWtDLEVBQUV0a0MsR0FBRyxJQUFJLElBQUlBLEVBQUUrM0MsUUFBUSxDQUFDLElBQUk3M0MsRUFBRUYsRUFBRWc0QyxTQUFROTNDLEVBQUVBLEtBQU1nRyxLQUFLLFNBQVNoRyxHQUFNLElBQUlGLEVBQUUrM0MsVUFBVSxJQUFJLzNDLEVBQUUrM0MsVUFBUS8zQyxFQUFFKzNDLFFBQVEsRUFBRS8zQyxFQUFFZzRDLFFBQVE5M0MsRUFBQyxFQUFFLFNBQVNBLEdBQU0sSUFBSUYsRUFBRSszQyxVQUFVLElBQUkvM0MsRUFBRSszQyxVQUFRLzNDLEVBQUUrM0MsUUFBUSxFQUFFLzNDLEVBQUVnNEMsUUFBUTkzQyxFQUFDLElBQUksSUFBSUYsRUFBRSszQyxVQUFVLzNDLEVBQUUrM0MsUUFBUSxFQUFFLzNDLEVBQUVnNEMsUUFBUTkzQyxFQUFFLENBQUMsR0FBRyxJQUFJRixFQUFFKzNDLFFBQVEsT0FBTy8zQyxFQUFFZzRDLFFBQVFDLFFBQVEsTUFBTWo0QyxFQUFFZzRDLE9BQVEsQ0FDNVosSUFBSXJULEVBQUUsQ0FBQy9qQyxRQUFRLE1BQU1ra0MsRUFBRSxDQUFDNW9CLFdBQVcsTUFBTThvQixFQUFFLENBQUM3TSx1QkFBdUJ3TSxFQUFFNW9CLHdCQUF3QitvQixFQUFFdGxDLGtCQUFrQm8zQixHQUFHLFNBQVNpUCxJQUFJLE1BQU10b0MsTUFBTSwyREFBNEQsQ0FDek01QixFQUFRdThDLFNBQVMsQ0FBQ0MsSUFBSXpVLEVBQUVqbUMsUUFBUSxTQUFTdUMsRUFBRUUsRUFBRUUsR0FBR3NqQyxFQUFFMWpDLEVBQUUsV0FBV0UsRUFBRWhELE1BQU1DLEtBQUttSixVQUFVLEVBQUVsRyxFQUFFLEVBQUVnNEMsTUFBTSxTQUFTcDRDLEdBQUcsSUFBSUUsRUFBRSxFQUF1QixPQUFyQndqQyxFQUFFMWpDLEVBQUUsV0FBV0UsR0FBRyxHQUFVQSxDQUFDLEVBQUVtNEMsUUFBUSxTQUFTcjRDLEdBQUcsT0FBTzBqQyxFQUFFMWpDLEVBQUUsU0FBU0EsR0FBRyxPQUFPQSxDQUFDLElBQUksRUFBRSxFQUFFczRDLEtBQUssU0FBU3Q0QyxHQUFHLElBQUl3NEIsRUFBRXg0QixHQUFHLE1BQU16QyxNQUFNLHlFQUF5RSxPQUFPeUMsQ0FBQyxHQUFHckUsRUFBUTQ4QyxVQUFVaHBCLEVBQUU1ekIsRUFBUWtGLFNBQVNwQixFQUFFOUQsRUFBUTY4QyxTQUFTdmtCLEVBQUV0NEIsRUFBUTg4QyxjQUFjanBCLEVBQUU3ekIsRUFBUSs4QyxXQUFXNTRDLEVBQUVuRSxFQUFRZzlDLFNBQVMzN0MsRUFDbGNyQixFQUFRNEQsbURBQW1EeWxDLEVBQUVycEMsRUFBUWk5QyxJQUFJL1MsRUFDekVscUMsRUFBUWs5QyxhQUFhLFNBQVM3NEMsRUFBRUUsRUFBRUUsR0FBRyxHQUFHLE1BQU9KLEVBQWMsTUFBTXpDLE1BQU0saUZBQWlGeUMsRUFBRSxLQUFLLElBQUlHLEVBQUVxWixFQUFFLENBQUMsRUFBRXhaLEVBQUVVLE9BQU9YLEVBQUVDLEVBQUVOLElBQUlYLEVBQUVpQixFQUFFTCxJQUFJVSxFQUFFTCxFQUFFVyxPQUFPLEdBQUcsTUFBTVQsRUFBRSxDQUFvRSxRQUFuRSxJQUFTQSxFQUFFUCxNQUFNWixFQUFFbUIsRUFBRVAsSUFBSVUsRUFBRXUyQixFQUFFaDJCLGNBQVMsSUFBU1YsRUFBRVIsTUFBTUssRUFBRSxHQUFHRyxFQUFFUixLQUFRTSxFQUFFUyxNQUFNVCxFQUFFUyxLQUFLRixhQUFhLElBQUlOLEVBQUVELEVBQUVTLEtBQUtGLGFBQWEsSUFBSXpCLEtBQUtvQixFQUFFdXNCLEVBQUVuc0IsS0FBS0osRUFBRXBCLEtBQUs4NEIsRUFBRXY0QixlQUFlUCxLQUFLcUIsRUFBRXJCLFFBQUcsSUFBU29CLEVBQUVwQixTQUFJLElBQVNtQixFQUFFQSxFQUFFbkIsR0FBR29CLEVBQUVwQixHQUFHLENBQUMsSUFBSUEsRUFBRXdILFVBQVVuSyxPQUFPLEVBQUUsR0FBRyxJQUFJMkMsRUFBRXFCLEVBQUU4TixTQUFTN04sT0FBTyxHQUFHLEVBQUV0QixFQUFFLENBQUNtQixFQUFFZ0UsTUFBTW5GLEdBQ3JmLElBQUksSUFBSUssRUFBRSxFQUFFQSxFQUFFTCxFQUFFSyxJQUFJYyxFQUFFZCxHQUFHbUgsVUFBVW5ILEVBQUUsR0FBR2dCLEVBQUU4TixTQUFTaE8sQ0FBQyxDQUFDLE1BQU0sQ0FBQ08sU0FBU3RCLEVBQUV1QixLQUFLVCxFQUFFUyxLQUFLZixJQUFJSyxFQUFFSixJQUFJWixFQUFFMkIsTUFBTVAsRUFBRVEsT0FBT04sRUFBRSxFQUFFMUUsRUFBUW05QyxjQUFjLFNBQVM5NEMsR0FBcUssT0FBbEtBLEVBQUUsQ0FBQ1EsU0FBU21zQixFQUFFa0ksY0FBYzcwQixFQUFFKzRDLGVBQWUvNEMsRUFBRWc1QyxhQUFhLEVBQUVDLFNBQVMsS0FBS0MsU0FBUyxLQUFLQyxjQUFjLEtBQUtDLFlBQVksT0FBUUgsU0FBUyxDQUFDejRDLFNBQVNnc0IsRUFBRXBoQixTQUFTcEwsR0FBVUEsRUFBRWs1QyxTQUFTbDVDLENBQUMsRUFBRXJFLEVBQVFxTCxjQUFjc3hCLEVBQUUzOEIsRUFBUTA5QyxjQUFjLFNBQVNyNUMsR0FBRyxJQUFJRSxFQUFFbzRCLEVBQUVqTSxLQUFLLEtBQUtyc0IsR0FBWSxPQUFURSxFQUFFTyxLQUFLVCxFQUFTRSxDQUFDLEVBQUV2RSxFQUFRMjlDLFVBQVUsV0FBVyxNQUFNLENBQUMxNEMsUUFBUSxLQUFLLEVBQzlkakYsRUFBUTQ5QyxXQUFXLFNBQVN2NUMsR0FBRyxNQUFNLENBQUNRLFNBQVM2RyxFQUFFNkQsT0FBT2xMLEVBQUUsRUFBRXJFLEVBQVE2OUMsZUFBZWhoQixFQUFFNzhCLEVBQVE4OUMsS0FBSyxTQUFTejVDLEdBQUcsTUFBTSxDQUFDUSxTQUFTMHpCLEVBQUU3b0IsU0FBUyxDQUFDMHNDLFNBQVMsRUFBRUMsUUFBUWg0QyxHQUFHc0wsTUFBTWc1QixFQUFFLEVBQUUzb0MsRUFBUSs5QyxLQUFLLFNBQVMxNUMsRUFBRUUsR0FBRyxNQUFNLENBQUNNLFNBQVNrc0IsRUFBRWpzQixLQUFLVCxFQUFFMmdDLGFBQVEsSUFBU3pnQyxFQUFFLEtBQUtBLEVBQUUsRUFBRXZFLEVBQVFnK0MsZ0JBQWdCLFNBQVMzNUMsR0FBRyxJQUFJRSxFQUFFNGtDLEVBQUU1b0IsV0FBVzRvQixFQUFFNW9CLFdBQVcsQ0FBQyxFQUFFLElBQUlsYyxHQUFHLENBQUMsUUFBUThrQyxFQUFFNW9CLFdBQVdoYyxDQUFDLENBQUMsRUFBRXZFLEVBQVFpK0MsYUFBYS9ULEVBQUVscUMsRUFBUTZnQyxZQUFZLFNBQVN4OEIsRUFBRUUsR0FBRyxPQUFPeWtDLEVBQUUvakMsUUFBUTQ3QixZQUFZeDhCLEVBQUVFLEVBQUUsRUFBRXZFLEVBQVE4Z0MsV0FBVyxTQUFTejhCLEdBQUcsT0FBTzJrQyxFQUFFL2pDLFFBQVE2N0IsV0FBV3o4QixFQUFFLEVBQzNmckUsRUFBUXVoQyxjQUFjLFdBQVcsRUFBRXZoQyxFQUFRd2hDLGlCQUFpQixTQUFTbjlCLEdBQUcsT0FBTzJrQyxFQUFFL2pDLFFBQVF1OEIsaUJBQWlCbjlCLEVBQUUsRUFBRXJFLEVBQVErZ0MsVUFBVSxTQUFTMThCLEVBQUVFLEdBQUcsT0FBT3lrQyxFQUFFL2pDLFFBQVE4N0IsVUFBVTE4QixFQUFFRSxFQUFFLEVBQUV2RSxFQUFRNGhDLE1BQU0sV0FBVyxPQUFPb0gsRUFBRS9qQyxRQUFRMjhCLE9BQU8sRUFBRTVoQyxFQUFRZ2hDLG9CQUFvQixTQUFTMzhCLEVBQUVFLEVBQUVFLEdBQUcsT0FBT3VrQyxFQUFFL2pDLFFBQVErN0Isb0JBQW9CMzhCLEVBQUVFLEVBQUVFLEVBQUUsRUFBRXpFLEVBQVFpaEMsbUJBQW1CLFNBQVM1OEIsRUFBRUUsR0FBRyxPQUFPeWtDLEVBQUUvakMsUUFBUWc4QixtQkFBbUI1OEIsRUFBRUUsRUFBRSxFQUFFdkUsRUFBUWtoQyxnQkFBZ0IsU0FBUzc4QixFQUFFRSxHQUFHLE9BQU95a0MsRUFBRS9qQyxRQUFRaThCLGdCQUFnQjc4QixFQUFFRSxFQUFFLEVBQ3pkdkUsRUFBUW1oQyxRQUFRLFNBQVM5OEIsRUFBRUUsR0FBRyxPQUFPeWtDLEVBQUUvakMsUUFBUWs4QixRQUFROThCLEVBQUVFLEVBQUUsRUFBRXZFLEVBQVFvaEMsV0FBVyxTQUFTLzhCLEVBQUVFLEVBQUVFLEdBQUcsT0FBT3VrQyxFQUFFL2pDLFFBQVFtOEIsV0FBVy84QixFQUFFRSxFQUFFRSxFQUFFLEVBQUV6RSxFQUFRcWhDLE9BQU8sU0FBU2g5QixHQUFHLE9BQU8ya0MsRUFBRS9qQyxRQUFRbzhCLE9BQU9oOUIsRUFBRSxFQUFFckUsRUFBUXNoQyxTQUFTLFNBQVNqOUIsR0FBRyxPQUFPMmtDLEVBQUUvakMsUUFBUXE4QixTQUFTajlCLEVBQUUsRUFBRXJFLEVBQVEyaEMscUJBQXFCLFNBQVN0OUIsRUFBRUUsRUFBRUUsR0FBRyxPQUFPdWtDLEVBQUUvakMsUUFBUTA4QixxQkFBcUJ0OUIsRUFBRUUsRUFBRUUsRUFBRSxFQUFFekUsRUFBUXloQyxjQUFjLFdBQVcsT0FBT3VILEVBQUUvakMsUUFBUXc4QixlQUFlLEVBQUV6aEMsRUFBUTJGLFFBQVEsUSxpQkNoQnBhLE1BQU1DLEVBQWlCLEVBQVEsTUFDekJjLEVBQWMsRUFBUSxNQUN0QkMsRUFBa0IsRUFBUSxNQUMxQkMsRUFBWSxFQUFRLE1BQ3BCRSxFQUFPLEVBQVEsTUFDZkQsRUFBWSxFQUFRLE1BRTFCOUcsRUFBT0MsUUFBVSxDQUNmNEYsaUJBQ0FjLGNBQ0FDLGtCQUNBQyxZQUNBRSxPQUNBRCxZLDhCQ3BCRixJQUFJckQsRUFBSSxFQUFRLEtBRWR4RCxFQUFRb3pDLFdBQWE1dkMsRUFBRTR2QyxXQUN2QnB6QyxFQUFReXpDLFlBQWNqd0MsRUFBRWl3QyxXLFdDTDFCMXpDLEVBQU9DLFFBQVUsQ0FBQ3lILEVBQVF5MkMsS0FDeEJ6MkMsRUFBTzAyQyxVQUFZLEVBQUc5MUMsV0FDcEI2MUMsRUFBUTcxQyxJLGlCQ0ZaLE1BRU0rMUMsRUFGb0QsWUFBeEMsRUFBUSxLQUFSLENBQTRCLFFBRWZ2NEMsR0FBSyxJQUFLSyxJQUFJTCxFQUFHTSxPQUFPQyxTQUFTQyxNQUFPQSxLQUFPUixHQUFLQSxFQUVuRjlGLEVBQU9DLFFBQVdtSCxJQUNoQixNQUFNMkMsRUFBTyxJQUFLM0MsR0FNbEIsTUFMQSxDQUFDLFdBQVksYUFBYyxZQUFZckYsUUFBU2lDLElBQzFDb0QsRUFBUXBELEtBQ1YrRixFQUFLL0YsR0FBT3E2QyxFQUFXdDBDLEVBQUsvRixPQUd6QitGLEUscXhGQ1JQL0osRUFBT0MsUUFBVSxFQUFqQixLLFdDSUYsSUFBSXErQyxFQUFXLFNBQVVyK0MsR0FDdkIsYUFFQSxJQUdJcytDLEVBSEFDLEVBQUtqK0MsT0FBT21ELFVBQ1orNkMsRUFBU0QsRUFBRzc2QyxlQUNab0wsRUFBaUJ4TyxPQUFPd08sZ0JBQWtCLFNBQVUydkMsRUFBSzE2QyxFQUFLMjZDLEdBQVFELEVBQUkxNkMsR0FBTzI2QyxFQUFLN3RDLEtBQU8sRUFFN0Y4dEMsRUFBNEIsbUJBQVh0N0MsT0FBd0JBLE9BQVMsQ0FBQyxFQUNuRHU3QyxFQUFpQkQsRUFBUXp3QyxVQUFZLGFBQ3JDMndDLEVBQXNCRixFQUFRRyxlQUFpQixrQkFDL0NDLEVBQW9CSixFQUFRSyxhQUFlLGdCQUUvQyxTQUFTQyxFQUFPUixFQUFLMTZDLEVBQUs4TSxHQU94QixPQU5BdlEsT0FBT3dPLGVBQWUydkMsRUFBSzE2QyxFQUFLLENBQzlCOE0sTUFBT0EsRUFDUFAsWUFBWSxFQUNaRCxjQUFjLEVBQ2Q2dUMsVUFBVSxJQUVMVCxFQUFJMTZDLEVBQ2IsQ0FDQSxJQUVFazdDLEVBQU8sQ0FBQyxFQUFHLEdBQ2IsQ0FBRSxNQUFPeDlDLEdBQ1B3OUMsRUFBUyxTQUFTUixFQUFLMTZDLEVBQUs4TSxHQUMxQixPQUFPNHRDLEVBQUkxNkMsR0FBTzhNLENBQ3BCLENBQ0YsQ0FFQSxTQUFTc3VDLEVBQUtDLEVBQVNDLEVBQVNDLEVBQU1DLEdBRXBDLElBQUlDLEVBQWlCSCxHQUFXQSxFQUFRNTdDLHFCQUFxQmc4QyxFQUFZSixFQUFVSSxFQUMvRUMsRUFBWXAvQyxPQUFPKytCLE9BQU9tZ0IsRUFBZS83QyxXQUN6Q2syQixFQUFVLElBQUlnbUIsRUFBUUosR0FBZSxJQU16QyxPQUZBendDLEVBQWU0d0MsRUFBVyxVQUFXLENBQUU3dUMsTUFBTyt1QyxFQUFpQlIsRUFBU0UsRUFBTTNsQixLQUV2RStsQixDQUNULENBYUEsU0FBU0csRUFBU0MsRUFBSXJCLEVBQUtzQixHQUN6QixJQUNFLE1BQU8sQ0FBRWo3QyxLQUFNLFNBQVVpN0MsSUFBS0QsRUFBR243QyxLQUFLODVDLEVBQUtzQixHQUM3QyxDQUFFLE1BQU90K0MsR0FDUCxNQUFPLENBQUVxRCxLQUFNLFFBQVNpN0MsSUFBS3QrQyxFQUMvQixDQUNGLENBbEJBekIsRUFBUW0vQyxLQUFPQSxFQW9CZixJQUFJYSxFQUF5QixpQkFDekJDLEVBQXlCLGlCQUN6QkMsRUFBb0IsWUFDcEJDLEVBQW9CLFlBSXBCQyxFQUFtQixDQUFDLEVBTXhCLFNBQVNYLElBQWEsQ0FDdEIsU0FBU1ksSUFBcUIsQ0FDOUIsU0FBU0MsSUFBOEIsQ0FJdkMsSUFBSUMsRUFBb0IsQ0FBQyxFQUN6QnRCLEVBQU9zQixFQUFtQjNCLEVBQWdCLFdBQ3hDLE9BQU9wOUMsSUFDVCxHQUVBLElBQUlnL0MsRUFBV2xnRCxPQUFPbWdELGVBQ2xCQyxFQUEwQkYsR0FBWUEsRUFBU0EsRUFBU0csRUFBTyxNQUMvREQsR0FDQUEsSUFBNEJuQyxHQUM1QkMsRUFBTzc1QyxLQUFLKzdDLEVBQXlCOUIsS0FHdkMyQixFQUFvQkcsR0FHdEIsSUFBSUUsRUFBS04sRUFBMkI3OEMsVUFDbENnOEMsRUFBVWg4QyxVQUFZbkQsT0FBTysrQixPQUFPa2hCLEdBZ0J0QyxTQUFTTSxFQUFzQnA5QyxHQUM3QixDQUFDLE9BQVEsUUFBUyxVQUFVM0IsUUFBUSxTQUFTaUgsR0FDM0NrMkMsRUFBT3g3QyxFQUFXc0YsRUFBUSxTQUFTZzNDLEdBQ2pDLE9BQU92K0MsS0FBS3MvQyxRQUFRLzNDLEVBQVFnM0MsRUFDOUIsRUFDRixFQUNGLENBK0JBLFNBQVNnQixFQUFjckIsRUFBV3NCLEdBQ2hDLFNBQVNDLEVBQU9sNEMsRUFBUWczQyxFQUFLLytDLEVBQVNDLEdBQ3BDLElBQUlpZ0QsRUFBU3JCLEVBQVNILEVBQVUzMkMsR0FBUzIyQyxFQUFXSyxHQUNwRCxHQUFvQixVQUFoQm1CLEVBQU9wOEMsS0FFSixDQUNMLElBQUlxOEMsRUFBU0QsRUFBT25CLElBQ2hCbHZDLEVBQVFzd0MsRUFBT3R3QyxNQUNuQixPQUFJQSxHQUNpQixpQkFBVkEsR0FDUDJ0QyxFQUFPNzVDLEtBQUtrTSxFQUFPLFdBQ2Rtd0MsRUFBWWhnRCxRQUFRNlAsRUFBTXV3QyxTQUFTNzJDLEtBQUssU0FBU3NHLEdBQ3REb3dDLEVBQU8sT0FBUXB3QyxFQUFPN1AsRUFBU0MsRUFDakMsRUFBRyxTQUFTUSxHQUNWdy9DLEVBQU8sUUFBU3gvQyxFQUFLVCxFQUFTQyxFQUNoQyxHQUdLKy9DLEVBQVloZ0QsUUFBUTZQLEdBQU90RyxLQUFLLFNBQVM4MkMsR0FJOUNGLEVBQU90d0MsTUFBUXd3QyxFQUNmcmdELEVBQVFtZ0QsRUFDVixFQUFHLFNBQVNqK0MsR0FHVixPQUFPKzlDLEVBQU8sUUFBUy85QyxFQUFPbEMsRUFBU0MsRUFDekMsRUFDRixDQXpCRUEsRUFBT2lnRCxFQUFPbkIsSUEwQmxCLENBRUEsSUFBSXVCLEVBZ0NKeHlDLEVBQWV0TixLQUFNLFVBQVcsQ0FBRXFQLE1BOUJsQyxTQUFpQjlILEVBQVFnM0MsR0FDdkIsU0FBU3dCLElBQ1AsT0FBTyxJQUFJUCxFQUFZLFNBQVNoZ0QsRUFBU0MsR0FDdkNnZ0QsRUFBT2w0QyxFQUFRZzNDLEVBQUsvK0MsRUFBU0MsRUFDL0IsRUFDRixDQUVBLE9BQU9xZ0QsRUFhTEEsRUFBa0JBLEVBQWdCLzJDLEtBQ2hDZzNDLEVBR0FBLEdBQ0VBLEdBQ1IsR0FLRixDQTBCQSxTQUFTM0IsRUFBaUJSLEVBQVNFLEVBQU0zbEIsR0FDdkMsSUFBSWlKLEVBQVFvZCxFQUVaLE9BQU8sU0FBZ0JqM0MsRUFBUWczQyxHQUM3QixHQUFJbmQsSUFBVXNkLEVBQ1osTUFBTSxJQUFJdCtDLE1BQU0sZ0NBR2xCLEdBQUlnaEMsSUFBVXVkLEVBQW1CLENBQy9CLEdBQWUsVUFBWHAzQyxFQUNGLE1BQU1nM0MsRUFLUixPQUFPeUIsR0FDVCxDQUtBLElBSEE3bkIsRUFBUTV3QixPQUFTQSxFQUNqQjR3QixFQUFRb21CLElBQU1BLElBRUQsQ0FDWCxJQUFJMEIsRUFBVzluQixFQUFROG5CLFNBQ3ZCLEdBQUlBLEVBQVUsQ0FDWixJQUFJQyxFQUFpQkMsRUFBb0JGLEVBQVU5bkIsR0FDbkQsR0FBSStuQixFQUFnQixDQUNsQixHQUFJQSxJQUFtQnRCLEVBQWtCLFNBQ3pDLE9BQU9zQixDQUNULENBQ0YsQ0FFQSxHQUF1QixTQUFuQi9uQixFQUFRNXdCLE9BR1Y0d0IsRUFBUWlvQixLQUFPam9CLEVBQVFrb0IsTUFBUWxvQixFQUFRb21CLFNBRWxDLEdBQXVCLFVBQW5CcG1CLEVBQVE1d0IsT0FBb0IsQ0FDckMsR0FBSTY1QixJQUFVb2QsRUFFWixNQURBcGQsRUFBUXVkLEVBQ0Z4bUIsRUFBUW9tQixJQUdoQnBtQixFQUFRbW9CLGtCQUFrQm5vQixFQUFRb21CLElBRXBDLEtBQThCLFdBQW5CcG1CLEVBQVE1d0IsUUFDakI0d0IsRUFBUW9vQixPQUFPLFNBQVVwb0IsRUFBUW9tQixLQUduQ25kLEVBQVFzZCxFQUVSLElBQUlnQixFQUFTckIsRUFBU1QsRUFBU0UsRUFBTTNsQixHQUNyQyxHQUFvQixXQUFoQnVuQixFQUFPcDhDLEtBQW1CLENBTzVCLEdBSkE4OUIsRUFBUWpKLEVBQVFsQixLQUNaMG5CLEVBQ0FGLEVBRUFpQixFQUFPbkIsTUFBUUssRUFDakIsU0FHRixNQUFPLENBQ0x2dkMsTUFBT3F3QyxFQUFPbkIsSUFDZHRuQixLQUFNa0IsRUFBUWxCLEtBR2xCLENBQTJCLFVBQWhCeW9CLEVBQU9wOEMsT0FDaEI4OUIsRUFBUXVkLEVBR1J4bUIsRUFBUTV3QixPQUFTLFFBQ2pCNHdCLEVBQVFvbUIsSUFBTW1CLEVBQU9uQixJQUV6QixDQUNGLENBQ0YsQ0FNQSxTQUFTNEIsRUFBb0JGLEVBQVU5bkIsR0FDckMsSUFBSXFvQixFQUFhcm9CLEVBQVE1d0IsT0FDckJBLEVBQVMwNEMsRUFBU3Z6QyxTQUFTOHpDLEdBQy9CLEdBQUlqNUMsSUFBV3UxQyxFQU9iLE9BSEEza0IsRUFBUThuQixTQUFXLEtBR0EsVUFBZk8sR0FBMEJQLEVBQVN2ekMsU0FBaUIsU0FHdER5ckIsRUFBUTV3QixPQUFTLFNBQ2pCNHdCLEVBQVFvbUIsSUFBTXpCLEVBQ2RxRCxFQUFvQkYsRUFBVTluQixHQUVQLFVBQW5CQSxFQUFRNXdCLFNBTUssV0FBZmk1QyxJQUNGcm9CLEVBQVE1d0IsT0FBUyxRQUNqQjR3QixFQUFRb21CLElBQU0sSUFBSWtDLFVBQ2hCLG9DQUFzQ0QsRUFBYSxhQU41QzVCLEVBWWIsSUFBSWMsRUFBU3JCLEVBQVM5MkMsRUFBUTA0QyxFQUFTdnpDLFNBQVV5ckIsRUFBUW9tQixLQUV6RCxHQUFvQixVQUFoQm1CLEVBQU9wOEMsS0FJVCxPQUhBNjBCLEVBQVE1d0IsT0FBUyxRQUNqQjR3QixFQUFRb21CLElBQU1tQixFQUFPbkIsSUFDckJwbUIsRUFBUThuQixTQUFXLEtBQ1pyQixFQUdULElBQUk4QixFQUFPaEIsRUFBT25CLElBRWxCLE9BQU1tQyxFQU9GQSxFQUFLenBCLE1BR1BrQixFQUFROG5CLEVBQVNVLFlBQWNELEVBQUtyeEMsTUFHcEM4b0IsRUFBUW5CLEtBQU9pcEIsRUFBU1csUUFRRCxXQUFuQnpvQixFQUFRNXdCLFNBQ1Y0d0IsRUFBUTV3QixPQUFTLE9BQ2pCNHdCLEVBQVFvbUIsSUFBTXpCLEdBVWxCM2tCLEVBQVE4bkIsU0FBVyxLQUNackIsR0FORThCLEdBM0JQdm9CLEVBQVE1d0IsT0FBUyxRQUNqQjR3QixFQUFRb21CLElBQU0sSUFBSWtDLFVBQVUsb0NBQzVCdG9CLEVBQVE4bkIsU0FBVyxLQUNackIsRUErQlgsQ0FxQkEsU0FBU2lDLEVBQWFDLEdBQ3BCLElBQUlDLEVBQVEsQ0FBRUMsT0FBUUYsRUFBSyxJQUV2QixLQUFLQSxJQUNQQyxFQUFNRSxTQUFXSCxFQUFLLElBR3BCLEtBQUtBLElBQ1BDLEVBQU1HLFdBQWFKLEVBQUssR0FDeEJDLEVBQU1JLFNBQVdMLEVBQUssSUFHeEI5Z0QsS0FBS29oRCxXQUFXemhELEtBQUtvaEQsRUFDdkIsQ0FFQSxTQUFTTSxFQUFjTixHQUNyQixJQUFJckIsRUFBU3FCLEVBQU1PLFlBQWMsQ0FBQyxFQUNsQzVCLEVBQU9wOEMsS0FBTyxnQkFDUG84QyxFQUFPbkIsSUFDZHdDLEVBQU1PLFdBQWE1QixDQUNyQixDQUVBLFNBQVN2QixFQUFRSixHQUlmLzlDLEtBQUtvaEQsV0FBYSxDQUFDLENBQUVKLE9BQVEsU0FDN0JqRCxFQUFZejlDLFFBQVF1Z0QsRUFBYzdnRCxNQUNsQ0EsS0FBS3VoRCxPQUFNLEVBQ2IsQ0E4QkEsU0FBU3BDLEVBQU9xQyxHQUNkLEdBQUlBLEVBQVUsQ0FDWixJQUFJQyxFQUFpQkQsRUFBU3BFLEdBQzlCLEdBQUlxRSxFQUNGLE9BQU9BLEVBQWV0K0MsS0FBS3ErQyxHQUc3QixHQUE2QixtQkFBbEJBLEVBQVN4cUIsS0FDbEIsT0FBT3dxQixFQUdULElBQUt0MkMsTUFBTXMyQyxFQUFTeGlELFFBQVMsQ0FDM0IsSUFBSUcsR0FBSyxFQUFHNjNCLEVBQU8sU0FBU0EsSUFDMUIsT0FBUzczQixFQUFJcWlELEVBQVN4aUQsUUFDcEIsR0FBSWcrQyxFQUFPNzVDLEtBQUtxK0MsRUFBVXJpRCxHQUd4QixPQUZBNjNCLEVBQUszbkIsTUFBUW15QyxFQUFTcmlELEdBQ3RCNjNCLEVBQUtDLE1BQU8sRUFDTEQsRUFPWCxPQUhBQSxFQUFLM25CLE1BQVF5dEMsRUFDYjlsQixFQUFLQyxNQUFPLEVBRUxELENBQ1QsRUFFQSxPQUFPQSxFQUFLQSxLQUFPQSxDQUNyQixDQUNGLENBR0EsTUFBTyxDQUFFQSxLQUFNZ3BCLEVBQ2pCLENBR0EsU0FBU0EsSUFDUCxNQUFPLENBQUUzd0MsTUFBT3l0QyxFQUFXN2xCLE1BQU0sRUFDbkMsQ0E4TUEsT0FubkJBNG5CLEVBQWtCNThDLFVBQVk2OEMsRUFDOUJ4eEMsRUFBZTh4QyxFQUFJLGNBQWUsQ0FBRS92QyxNQUFPeXZDLEVBQTRCandDLGNBQWMsSUFDckZ2QixFQUNFd3hDLEVBQ0EsY0FDQSxDQUFFenZDLE1BQU93dkMsRUFBbUJod0MsY0FBYyxJQUU1Q2d3QyxFQUFrQm54QyxZQUFjK3ZDLEVBQzlCcUIsRUFDQXZCLEVBQ0EscUJBYUYvK0MsRUFBUWtqRCxvQkFBc0IsU0FBU0MsR0FDckMsSUFBSUMsRUFBeUIsbUJBQVhELEdBQXlCQSxFQUFPaHpDLFlBQ2xELFFBQU9pekMsSUFDSEEsSUFBUy9DLEdBRzJCLHVCQUFuQytDLEVBQUtsMEMsYUFBZWswQyxFQUFLaDBDLE1BRWhDLEVBRUFwUCxFQUFRcWpELEtBQU8sU0FBU0YsR0FRdEIsT0FQSTdpRCxPQUFPZ2pELGVBQ1RoakQsT0FBT2dqRCxlQUFlSCxFQUFRN0MsSUFFOUI2QyxFQUFPSSxVQUFZakQsRUFDbkJyQixFQUFPa0UsRUFBUXBFLEVBQW1CLHNCQUVwQ29FLEVBQU8xL0MsVUFBWW5ELE9BQU8rK0IsT0FBT3VoQixHQUMxQnVDLENBQ1QsRUFNQW5qRCxFQUFRd2pELE1BQVEsU0FBU3pELEdBQ3ZCLE1BQU8sQ0FBRXFCLFFBQVNyQixFQUNwQixFQXFFQWMsRUFBc0JFLEVBQWN0OUMsV0FDcEN3N0MsRUFBTzhCLEVBQWN0OUMsVUFBV283QyxFQUFxQixXQUNuRCxPQUFPcjlDLElBQ1QsR0FDQXhCLEVBQVErZ0QsY0FBZ0JBLEVBS3hCL2dELEVBQVFvQixNQUFRLFNBQVNnK0MsRUFBU0MsRUFBU0MsRUFBTUMsRUFBYXlCLFFBQ3hDLElBQWhCQSxJQUF3QkEsRUFBY2pnRCxTQUUxQyxJQUFJMGlELEVBQU8sSUFBSTFDLEVBQ2I1QixFQUFLQyxFQUFTQyxFQUFTQyxFQUFNQyxHQUM3QnlCLEdBR0YsT0FBT2hoRCxFQUFRa2pELG9CQUFvQjdELEdBQy9Cb0UsRUFDQUEsRUFBS2pyQixPQUFPanVCLEtBQUssU0FBUzQyQyxHQUN4QixPQUFPQSxFQUFPMW9CLEtBQU8wb0IsRUFBT3R3QyxNQUFRNHlDLEVBQUtqckIsTUFDM0MsRUFDTixFQXNLQXFvQixFQUFzQkQsR0FFdEIzQixFQUFPMkIsRUFBSTdCLEVBQW1CLGFBTzlCRSxFQUFPMkIsRUFBSWhDLEVBQWdCLFdBQ3pCLE9BQU9wOUMsSUFDVCxHQUVBeTlDLEVBQU8yQixFQUFJLFdBQVksV0FDckIsTUFBTyxvQkFDVCxHQWlDQTVnRCxFQUFRTyxLQUFPLFNBQVNtakQsR0FDdEIsSUFBSUMsRUFBU3JqRCxPQUFPb2pELEdBQ2hCbmpELEVBQU8sR0FDWCxJQUFLLElBQUl3RCxLQUFPNC9DLEVBQ2RwakQsRUFBS1ksS0FBSzRDLEdBTVosT0FKQXhELEVBQUtxakQsVUFJRSxTQUFTcHJCLElBQ2QsS0FBT2o0QixFQUFLQyxRQUFRLENBQ2xCLElBQUl1RCxFQUFNeEQsRUFBS3NqRCxNQUNmLEdBQUk5L0MsS0FBTzQvQyxFQUdULE9BRkFuckIsRUFBSzNuQixNQUFROU0sRUFDYnkwQixFQUFLQyxNQUFPLEVBQ0xELENBRVgsQ0FNQSxPQURBQSxFQUFLQyxNQUFPLEVBQ0xELENBQ1QsQ0FDRixFQW9DQXg0QixFQUFRMmdELE9BQVNBLEVBTWpCaEIsRUFBUWw4QyxVQUFZLENBQ2xCME0sWUFBYXd2QyxFQUVib0QsTUFBTyxTQUFTZSxHQWNkLEdBYkF0aUQsS0FBS3VpRCxLQUFPLEVBQ1p2aUQsS0FBS2czQixLQUFPLEVBR1poM0IsS0FBS29nRCxLQUFPcGdELEtBQUtxZ0QsTUFBUXZELEVBQ3pCOThDLEtBQUtpM0IsTUFBTyxFQUNaajNCLEtBQUtpZ0QsU0FBVyxLQUVoQmpnRCxLQUFLdUgsT0FBUyxPQUNkdkgsS0FBS3UrQyxJQUFNekIsRUFFWDk4QyxLQUFLb2hELFdBQVc5Z0QsUUFBUStnRCxJQUVuQmlCLEVBQ0gsSUFBSyxJQUFJMTBDLEtBQVE1TixLQUVRLE1BQW5CNE4sRUFBS3lILE9BQU8sSUFDWjJuQyxFQUFPNzVDLEtBQUtuRCxLQUFNNE4sS0FDakIxQyxPQUFPMEMsRUFBSzFKLE1BQU0sTUFDckJsRSxLQUFLNE4sR0FBUWt2QyxFQUlyQixFQUVBMEYsS0FBTSxXQUNKeGlELEtBQUtpM0IsTUFBTyxFQUVaLElBQ0l3ckIsRUFEWXppRCxLQUFLb2hELFdBQVcsR0FDTEUsV0FDM0IsR0FBd0IsVUFBcEJtQixFQUFXbi9DLEtBQ2IsTUFBTW0vQyxFQUFXbEUsSUFHbkIsT0FBT3YrQyxLQUFLMGlELElBQ2QsRUFFQXBDLGtCQUFtQixTQUFTcUMsR0FDMUIsR0FBSTNpRCxLQUFLaTNCLEtBQ1AsTUFBTTByQixFQUdSLElBQUl4cUIsRUFBVW40QixLQUNkLFNBQVM0aUQsRUFBT0MsRUFBS0MsR0FZbkIsT0FYQXBELEVBQU9wOEMsS0FBTyxRQUNkbzhDLEVBQU9uQixJQUFNb0UsRUFDYnhxQixFQUFRbkIsS0FBTzZyQixFQUVYQyxJQUdGM3FCLEVBQVE1d0IsT0FBUyxPQUNqQjR3QixFQUFRb21CLElBQU16QixLQUdOZ0csQ0FDWixDQUVBLElBQUssSUFBSTNqRCxFQUFJYSxLQUFLb2hELFdBQVdwaUQsT0FBUyxFQUFHRyxHQUFLLElBQUtBLEVBQUcsQ0FDcEQsSUFBSTRoRCxFQUFRL2dELEtBQUtvaEQsV0FBV2ppRCxHQUN4QnVnRCxFQUFTcUIsRUFBTU8sV0FFbkIsR0FBcUIsU0FBakJQLEVBQU1DLE9BSVIsT0FBTzRCLEVBQU8sT0FHaEIsR0FBSTdCLEVBQU1DLFFBQVVoaEQsS0FBS3VpRCxLQUFNLENBQzdCLElBQUlRLEVBQVcvRixFQUFPNzVDLEtBQUs0OUMsRUFBTyxZQUM5QmlDLEVBQWFoRyxFQUFPNzVDLEtBQUs0OUMsRUFBTyxjQUVwQyxHQUFJZ0MsR0FBWUMsRUFBWSxDQUMxQixHQUFJaGpELEtBQUt1aUQsS0FBT3hCLEVBQU1FLFNBQ3BCLE9BQU8yQixFQUFPN0IsRUFBTUUsVUFBVSxHQUN6QixHQUFJamhELEtBQUt1aUQsS0FBT3hCLEVBQU1HLFdBQzNCLE9BQU8wQixFQUFPN0IsRUFBTUcsV0FHeEIsTUFBTyxHQUFJNkIsR0FDVCxHQUFJL2lELEtBQUt1aUQsS0FBT3hCLEVBQU1FLFNBQ3BCLE9BQU8yQixFQUFPN0IsRUFBTUUsVUFBVSxPQUczQixLQUFJK0IsRUFNVCxNQUFNLElBQUk1aUQsTUFBTSwwQ0FMaEIsR0FBSUosS0FBS3VpRCxLQUFPeEIsRUFBTUcsV0FDcEIsT0FBTzBCLEVBQU83QixFQUFNRyxXQUt4QixDQUNGLENBQ0YsQ0FDRixFQUVBWCxPQUFRLFNBQVNqOUMsRUFBTWk3QyxHQUNyQixJQUFLLElBQUlwL0MsRUFBSWEsS0FBS29oRCxXQUFXcGlELE9BQVMsRUFBR0csR0FBSyxJQUFLQSxFQUFHLENBQ3BELElBQUk0aEQsRUFBUS9nRCxLQUFLb2hELFdBQVdqaUQsR0FDNUIsR0FBSTRoRCxFQUFNQyxRQUFVaGhELEtBQUt1aUQsTUFDckJ2RixFQUFPNzVDLEtBQUs0OUMsRUFBTyxlQUNuQi9nRCxLQUFLdWlELEtBQU94QixFQUFNRyxXQUFZLENBQ2hDLElBQUkrQixFQUFlbEMsRUFDbkIsS0FDRixDQUNGLENBRUlrQyxJQUNVLFVBQVQzL0MsR0FDUyxhQUFUQSxJQUNEMi9DLEVBQWFqQyxRQUFVekMsR0FDdkJBLEdBQU8wRSxFQUFhL0IsYUFHdEIrQixFQUFlLE1BR2pCLElBQUl2RCxFQUFTdUQsRUFBZUEsRUFBYTNCLFdBQWEsQ0FBQyxFQUl2RCxPQUhBNUIsRUFBT3A4QyxLQUFPQSxFQUNkbzhDLEVBQU9uQixJQUFNQSxFQUVUMEUsR0FDRmpqRCxLQUFLdUgsT0FBUyxPQUNkdkgsS0FBS2czQixLQUFPaXNCLEVBQWEvQixXQUNsQnRDLEdBR0Y1K0MsS0FBS2tqRCxTQUFTeEQsRUFDdkIsRUFFQXdELFNBQVUsU0FBU3hELEVBQVF5QixHQUN6QixHQUFvQixVQUFoQnpCLEVBQU9wOEMsS0FDVCxNQUFNbzhDLEVBQU9uQixJQWNmLE1BWG9CLFVBQWhCbUIsRUFBT3A4QyxNQUNTLGFBQWhCbzhDLEVBQU9wOEMsS0FDVHRELEtBQUtnM0IsS0FBTzBvQixFQUFPbkIsSUFDTSxXQUFoQm1CLEVBQU9wOEMsTUFDaEJ0RCxLQUFLMGlELEtBQU8xaUQsS0FBS3UrQyxJQUFNbUIsRUFBT25CLElBQzlCditDLEtBQUt1SCxPQUFTLFNBQ2R2SCxLQUFLZzNCLEtBQU8sT0FDYSxXQUFoQjBvQixFQUFPcDhDLE1BQXFCNjlDLElBQ3JDbmhELEtBQUtnM0IsS0FBT21xQixHQUdQdkMsQ0FDVCxFQUVBdUUsT0FBUSxTQUFTakMsR0FDZixJQUFLLElBQUkvaEQsRUFBSWEsS0FBS29oRCxXQUFXcGlELE9BQVMsRUFBR0csR0FBSyxJQUFLQSxFQUFHLENBQ3BELElBQUk0aEQsRUFBUS9nRCxLQUFLb2hELFdBQVdqaUQsR0FDNUIsR0FBSTRoRCxFQUFNRyxhQUFlQSxFQUd2QixPQUZBbGhELEtBQUtrakQsU0FBU25DLEVBQU1PLFdBQVlQLEVBQU1JLFVBQ3RDRSxFQUFjTixHQUNQbkMsQ0FFWCxDQUNGLEVBRUEsTUFBUyxTQUFTb0MsR0FDaEIsSUFBSyxJQUFJN2hELEVBQUlhLEtBQUtvaEQsV0FBV3BpRCxPQUFTLEVBQUdHLEdBQUssSUFBS0EsRUFBRyxDQUNwRCxJQUFJNGhELEVBQVEvZ0QsS0FBS29oRCxXQUFXamlELEdBQzVCLEdBQUk0aEQsRUFBTUMsU0FBV0EsRUFBUSxDQUMzQixJQUFJdEIsRUFBU3FCLEVBQU1PLFdBQ25CLEdBQW9CLFVBQWhCNUIsRUFBT3A4QyxLQUFrQixDQUMzQixJQUFJOC9DLEVBQVMxRCxFQUFPbkIsSUFDcEI4QyxFQUFjTixFQUNoQixDQUNBLE9BQU9xQyxDQUNULENBQ0YsQ0FJQSxNQUFNLElBQUloakQsTUFBTSx3QkFDbEIsRUFFQWlqRCxjQUFlLFNBQVM3QixFQUFVYixFQUFZQyxHQWE1QyxPQVpBNWdELEtBQUtpZ0QsU0FBVyxDQUNkdnpDLFNBQVV5eUMsRUFBT3FDLEdBQ2pCYixXQUFZQSxFQUNaQyxRQUFTQSxHQUdTLFNBQWhCNWdELEtBQUt1SCxTQUdQdkgsS0FBS3UrQyxJQUFNekIsR0FHTjhCLENBQ1QsR0FPS3BnRCxDQUVULENBdnRCYyxDQTR0QmlCRCxFQUFPQyxTQUd0QyxJQUNFOGtELG1CQUFxQnpHLENBQ3ZCLENBQUUsTUFBTzBHLEdBV21CLGlCQUFmQyxXQUNUQSxXQUFXRixtQkFBcUJ6RyxFQUVoQzRHLFNBQVMsSUFBSyx5QkFBZEEsQ0FBd0M1RyxFQUU1QyxDLFdDanZCQXQrQyxFQUFPQyxRQUFVLEVBQUc4RixhQUFZMjBDLG9CQUM5QixJQUFJaHpDLEVBQ0osR0FBSXk5QyxNQUFRaC9DLEtBQU91MEMsRUFBZSxDQUNoQyxNQUFNMEssRUFBTyxJQUFJRCxLQUFLLENBQUMsa0JBQWtCcC9DLFFBQWtCLENBQ3pEaEIsS0FBTSwyQkFFUjJDLEVBQVMsSUFBSTI5QyxPQUFPbC9DLElBQUltL0MsZ0JBQWdCRixHQUMxQyxNQUNFMTlDLEVBQVMsSUFBSTI5QyxPQUFPdC9DLEdBR3RCLE9BQU8yQixFLDRCQ1RJLFNBQVN0RSxFQUFFa0IsRUFBRUUsR0FBRyxJQUFJSCxFQUFFQyxFQUFFN0QsT0FBTzZELEVBQUVsRCxLQUFLb0QsR0FBR0YsRUFBRSxLQUFLLEVBQUVELEdBQUcsQ0FBQyxJQUFJSSxFQUFFSixFQUFFLElBQUksRUFBRUssRUFBRUosRUFBRUcsR0FBRyxLQUFHLEVBQUVGLEVBQUVHLEVBQUVGLElBQTBCLE1BQU1GLEVBQTdCQSxFQUFFRyxHQUFHRCxFQUFFRixFQUFFRCxHQUFHSyxFQUFFTCxFQUFFSSxDQUFjLENBQUMsQ0FBQyxTQUFTRSxFQUFFTCxHQUFHLE9BQU8sSUFBSUEsRUFBRTdELE9BQU8sS0FBSzZELEVBQUUsRUFBRSxDQUFDLFNBQVNqQixFQUFFaUIsR0FBRyxHQUFHLElBQUlBLEVBQUU3RCxPQUFPLE9BQU8sS0FBSyxJQUFJK0QsRUFBRUYsRUFBRSxHQUFHRCxFQUFFQyxFQUFFdy9DLE1BQU0sR0FBR3ovQyxJQUFJRyxFQUFFLENBQUNGLEVBQUUsR0FBR0QsRUFBRUMsRUFBRSxJQUFJLElBQUlHLEVBQUUsRUFBRUMsRUFBRUosRUFBRTdELE9BQU9hLEVBQUVvRCxJQUFJLEVBQUVELEVBQUVuRCxHQUFHLENBQUMsSUFBSW1DLEVBQUUsR0FBR2dCLEVBQUUsR0FBRyxFQUFFcVosRUFBRXhaLEVBQUViLEdBQUdHLEVBQUVILEVBQUUsRUFBRXV0QixFQUFFMXNCLEVBQUVWLEdBQUcsR0FBRyxFQUFFVyxFQUFFdVosRUFBRXpaLEdBQUdULEVBQUVjLEdBQUcsRUFBRUgsRUFBRXlzQixFQUFFbFQsSUFBSXhaLEVBQUVHLEdBQUd1c0IsRUFBRTFzQixFQUFFVixHQUFHUyxFQUFFSSxFQUFFYixJQUFJVSxFQUFFRyxHQUFHcVosRUFBRXhaLEVBQUViLEdBQUdZLEVBQUVJLEVBQUVoQixPQUFRLE1BQUdHLEVBQUVjLEdBQUcsRUFBRUgsRUFBRXlzQixFQUFFM3NCLElBQTBCLE1BQU1DLEVBQTdCQSxFQUFFRyxHQUFHdXNCLEVBQUUxc0IsRUFBRVYsR0FBR1MsRUFBRUksRUFBRWIsQ0FBYVUsQ0FBQyxDQUFDLENBQUMsT0FBT0UsQ0FBQyxDQUMzYyxTQUFTRCxFQUFFRCxFQUFFRSxHQUFHLElBQUlILEVBQUVDLEVBQUVpaEQsVUFBVS9nRCxFQUFFK2dELFVBQVUsT0FBTyxJQUFJbGhELEVBQUVBLEVBQUVDLEVBQUVwRSxHQUFHc0UsRUFBRXRFLEVBQUUsQ0FBQyxHQUFHLGlCQUFrQnNsRCxhQUFhLG1CQUFvQkEsWUFBWTNpQyxJQUFJLENBQUMsSUFBSXJmLEVBQUVnaUQsWUFBWXZsRCxFQUFReWIsYUFBYSxXQUFXLE9BQU9sWSxFQUFFcWYsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJOWUsRUFBRTZlLEtBQUt4ZSxFQUFFTCxFQUFFOGUsTUFBTTVpQixFQUFReWIsYUFBYSxXQUFXLE9BQU8zWCxFQUFFOGUsTUFBTXplLENBQUMsQ0FBQyxDQUFDLElBQUltMEIsRUFBRSxHQUFHekgsRUFBRSxHQUFHRyxFQUFFLEVBQUV0bEIsRUFBRSxLQUFLNnNCLEVBQUUsRUFBRXJzQixHQUFFLEVBQUdtQyxHQUFFLEVBQUdtTixHQUFFLEVBQUcyVSxFQUFFLG1CQUFvQnNDLFdBQVdBLFdBQVcsS0FBS21CLEVBQUUsbUJBQW9CakIsYUFBYUEsYUFBYSxLQUFLMUIsRUFBRSxvQkFBcUJ1MEIsYUFBYUEsYUFBYSxLQUNuVCxTQUFTM3hCLEVBQUV4dkIsR0FBRyxJQUFJLElBQUlFLEVBQUVHLEVBQUVtc0IsR0FBRyxPQUFPdHNCLEdBQUcsQ0FBQyxHQUFHLE9BQU9BLEVBQUV3MkIsU0FBUzMzQixFQUFFeXRCLE9BQVEsTUFBR3RzQixFQUFFa2hELFdBQVdwaEQsR0FBZ0QsTUFBOUNqQixFQUFFeXRCLEdBQUd0c0IsRUFBRStnRCxVQUFVL2dELEVBQUVtaEQsZUFBZXZpRCxFQUFFbTFCLEVBQUUvekIsRUFBYSxDQUFDQSxFQUFFRyxFQUFFbXNCLEVBQUUsQ0FBQyxDQUFDLFNBQVNrRCxFQUFFMXZCLEdBQWEsR0FBVm1YLEdBQUUsRUFBR3FZLEVBQUV4dkIsSUFBT2dLLEVBQUUsR0FBRyxPQUFPM0osRUFBRTR6QixHQUFHanFCLEdBQUUsRUFBRzhuQixFQUFFckYsT0FBTyxDQUFDLElBQUl2c0IsRUFBRUcsRUFBRW1zQixHQUFHLE9BQU90c0IsR0FBRzAyQixFQUFFbEgsRUFBRXh2QixFQUFFa2hELFVBQVVwaEQsRUFBRSxDQUFDLENBQ3JhLFNBQVN5c0IsRUFBRXpzQixFQUFFRSxHQUFHOEosR0FBRSxFQUFHbU4sSUFBSUEsR0FBRSxFQUFHb1ksRUFBRXFJLEdBQUdBLEdBQUcsR0FBRy92QixHQUFFLEVBQUcsSUFBSTlILEVBQUVtMEIsRUFBRSxJQUFTLElBQUwxRSxFQUFFdHZCLEdBQU9tSCxFQUFFaEgsRUFBRTR6QixHQUFHLE9BQU81c0IsTUFBTUEsRUFBRWc2QyxlQUFlbmhELElBQUlGLElBQUlzNEIsTUFBTSxDQUFDLElBQUluNEIsRUFBRWtILEVBQUVxdkIsU0FBUyxHQUFHLG1CQUFvQnYyQixFQUFFLENBQUNrSCxFQUFFcXZCLFNBQVMsS0FBS3hDLEVBQUU3c0IsRUFBRWk2QyxjQUFjLElBQUlsaEQsRUFBRUQsRUFBRWtILEVBQUVnNkMsZ0JBQWdCbmhELEdBQUdBLEVBQUV2RSxFQUFReWIsZUFBZSxtQkFBb0JoWCxFQUFFaUgsRUFBRXF2QixTQUFTdDJCLEVBQUVpSCxJQUFJaEgsRUFBRTR6QixJQUFJbDFCLEVBQUVrMUIsR0FBR3pFLEVBQUV0dkIsRUFBRSxNQUFNbkIsRUFBRWsxQixHQUFHNXNCLEVBQUVoSCxFQUFFNHpCLEVBQUUsQ0FBQyxHQUFHLE9BQU81c0IsRUFBRSxJQUFJckssR0FBRSxNQUFPLENBQUMsSUFBSW1DLEVBQUVrQixFQUFFbXNCLEdBQUcsT0FBT3J0QixHQUFHeTNCLEVBQUVsSCxFQUFFdndCLEVBQUVpaUQsVUFBVWxoRCxHQUFHbEQsR0FBRSxDQUFFLENBQUMsT0FBT0EsQ0FBQyxDQUFDLFFBQVFxSyxFQUFFLEtBQUs2c0IsRUFBRW4wQixFQUFFOEgsR0FBRSxDQUFFLENBQUMsQ0FEMWEsb0JBQXFCb3ZDLGdCQUFXLElBQVNBLFVBQVVzSyxpQkFBWSxJQUFTdEssVUFBVXNLLFdBQVdDLGdCQUFnQnZLLFVBQVVzSyxXQUFXQyxlQUFlbjFCLEtBQUs0cUIsVUFBVXNLLFlBQzJRLElBQ3pQN2QsRUFENlBuTCxHQUFFLEVBQUdDLEVBQUUsS0FBS1osR0FBRyxFQUFFaUIsRUFBRSxFQUFFMEIsR0FBRyxFQUN2YyxTQUFTakMsSUFBSSxRQUFPMzhCLEVBQVF5YixlQUFlbWpCLEVBQUUxQixFQUFPLENBQUMsU0FBU3dELElBQUksR0FBRyxPQUFPN0QsRUFBRSxDQUFDLElBQUl4NEIsRUFBRXJFLEVBQVF5YixlQUFlbWpCLEVBQUV2NkIsRUFBRSxJQUFJRSxHQUFFLEVBQUcsSUFBSUEsRUFBRXM0QixHQUFFLEVBQUd4NEIsRUFBRSxDQUFDLFFBQVFFLEVBQUV3akMsS0FBS25MLEdBQUUsRUFBR0MsRUFBRSxLQUFLLENBQUMsTUFBTUQsR0FBRSxDQUFFLENBQU8sR0FBRyxtQkFBb0IzTCxFQUFFOFcsRUFBRSxXQUFXOVcsRUFBRXlQLEVBQUUsT0FBTyxHQUFHLG9CQUFxQm9sQixlQUFlLENBQUMsSUFBSW5kLEVBQUUsSUFBSW1kLGVBQWU5YyxFQUFFTCxFQUFFb2QsTUFBTXBkLEVBQUVxZCxNQUFNN0gsVUFBVXpkLEVBQUVxSCxFQUFFLFdBQVdpQixFQUFFZ1QsWUFBWSxLQUFLLENBQUMsTUFBTWpVLEVBQUUsV0FBVzVYLEVBQUV1USxFQUFFLEVBQUUsRUFBRSxTQUFTdkssRUFBRTl4QixHQUFHdzRCLEVBQUV4NEIsRUFBRXU0QixJQUFJQSxHQUFFLEVBQUdtTCxJQUFJLENBQUMsU0FBUzlNLEVBQUU1MkIsRUFBRUUsR0FBRzAzQixFQUFFOUwsRUFBRSxXQUFXOXJCLEVBQUVyRSxFQUFReWIsZUFBZSxFQUFFbFgsRUFBRSxDQUM1ZHZFLEVBQVFxYyxzQkFBc0IsRUFBRXJjLEVBQVE2YiwyQkFBMkIsRUFBRTdiLEVBQVFtYyxxQkFBcUIsRUFBRW5jLEVBQVFpYyx3QkFBd0IsRUFBRWpjLEVBQVFpbUQsbUJBQW1CLEtBQUtqbUQsRUFBUStiLDhCQUE4QixFQUFFL2IsRUFBUW1iLHdCQUF3QixTQUFTOVcsR0FBR0EsRUFBRTAyQixTQUFTLElBQUksRUFBRS82QixFQUFRa21ELDJCQUEyQixXQUFXNzNDLEdBQUduQyxJQUFJbUMsR0FBRSxFQUFHOG5CLEVBQUVyRixHQUFHLEVBQzFVOXdCLEVBQVFtbUQsd0JBQXdCLFNBQVM5aEQsR0FBRyxFQUFFQSxHQUFHLElBQUlBLEVBQUVwQixRQUFRQyxNQUFNLG1IQUFtSGc2QixFQUFFLEVBQUU3NEIsRUFBRWtCLEtBQUs2Z0QsTUFBTSxJQUFJL2hELEdBQUcsQ0FBQyxFQUFFckUsRUFBUTJiLGlDQUFpQyxXQUFXLE9BQU80YyxDQUFDLEVBQUV2NEIsRUFBUXFtRCw4QkFBOEIsV0FBVyxPQUFPM2hELEVBQUU0ekIsRUFBRSxFQUFFdDRCLEVBQVFzbUQsY0FBYyxTQUFTamlELEdBQUcsT0FBT2swQixHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUloMEIsRUFBRSxFQUFFLE1BQU0sUUFBUUEsRUFBRWcwQixFQUFFLElBQUluMEIsRUFBRW0wQixFQUFFQSxFQUFFaDBCLEVBQUUsSUFBSSxPQUFPRixHQUFHLENBQUMsUUFBUWswQixFQUFFbjBCLENBQUMsQ0FBQyxFQUFFcEUsRUFBUXVtRCx3QkFBd0IsV0FBVyxFQUM5ZnZtRCxFQUFRdWIsc0JBQXNCLFdBQVcsRUFBRXZiLEVBQVF3bUQseUJBQXlCLFNBQVNuaUQsRUFBRUUsR0FBRyxPQUFPRixHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTSxRQUFRQSxFQUFFLEVBQUUsSUFBSUQsRUFBRW0wQixFQUFFQSxFQUFFbDBCLEVBQUUsSUFBSSxPQUFPRSxHQUFHLENBQUMsUUFBUWcwQixFQUFFbjBCLENBQUMsQ0FBQyxFQUNoTXBFLEVBQVFpYiwwQkFBMEIsU0FBUzVXLEVBQUVFLEVBQUVILEdBQUcsSUFBSUksRUFBRXhFLEVBQVF5YixlQUE4RixPQUF0Q3JYLEVBQXpDLGlCQUFrQkEsR0FBRyxPQUFPQSxHQUFlLGlCQUFaQSxFQUFFQSxFQUFFcWlELFFBQTZCLEVBQUVyaUQsRUFBRUksRUFBRUosRUFBT0ksRUFBU0gsR0FBRyxLQUFLLEVBQUUsSUFBSUksR0FBRyxFQUFFLE1BQU0sS0FBSyxFQUFFQSxFQUFFLElBQUksTUFBTSxLQUFLLEVBQUVBLEVBQUUsV0FBVyxNQUFNLEtBQUssRUFBRUEsRUFBRSxJQUFJLE1BQU0sUUFBUUEsRUFBRSxJQUFtTixPQUF6TUosRUFBRSxDQUFDcEUsR0FBRyt3QixJQUFJK0osU0FBU3gyQixFQUFFb2hELGNBQWN0aEQsRUFBRW9oRCxVQUFVcmhELEVBQUVzaEQsZUFBdkRqaEQsRUFBRUwsRUFBRUssRUFBb0U2Z0QsV0FBVyxHQUFHbGhELEVBQUVJLEdBQUdILEVBQUVpaEQsVUFBVWxoRCxFQUFFakIsRUFBRTB0QixFQUFFeHNCLEdBQUcsT0FBT0ssRUFBRTR6QixJQUFJajBCLElBQUlLLEVBQUVtc0IsS0FBS3JWLEdBQUdvWSxFQUFFcUksR0FBR0EsR0FBRyxHQUFHemdCLEdBQUUsRUFBR3lmLEVBQUVsSCxFQUFFM3ZCLEVBQUVJLE1BQU1ILEVBQUVpaEQsVUFBVTdnRCxFQUFFdEIsRUFBRW0xQixFQUFFajBCLEdBQUdnSyxHQUFHbkMsSUFBSW1DLEdBQUUsRUFBRzhuQixFQUFFckYsS0FBWXpzQixDQUFDLEVBQ25lckUsRUFBUXFiLHFCQUFxQnNoQixFQUFFMzhCLEVBQVEwbUQsc0JBQXNCLFNBQVNyaUQsR0FBRyxJQUFJRSxFQUFFZzBCLEVBQUUsT0FBTyxXQUFXLElBQUluMEIsRUFBRW0wQixFQUFFQSxFQUFFaDBCLEVBQUUsSUFBSSxPQUFPRixFQUFFOUMsTUFBTUMsS0FBS21KLFVBQVUsQ0FBQyxRQUFRNHRCLEVBQUVuMEIsQ0FBQyxDQUFDLENBQUMsQyxpQkNsQi9KLE1BQU1xM0MsRUFBZSxFQUFRLE1Bc0I3QjE3QyxFQUFPQyxRQUFVLENBQ2Y0SixVQXJCZ0J4SSxNQUFPeUksRUFBT1AsRUFBT25DLEtBQ3JDLE1BQU1NLFFBQWVnMEMsRUFBYXQwQyxHQUdsQyxhQUZNTSxFQUFPNEIsYUFBYUMsU0FDcEI3QixFQUFPOEIsV0FBV0QsR0FDakI3QixFQUFPbUMsVUFBVUMsR0FDckI4OEMsUUFBUXZsRCxnQkFDRHFHLEVBQU81RixlQWdCakJ5SSxPQVphbEosTUFBT3lJLEVBQU8xQyxLQUMzQixNQUFNTSxRQUFlZzBDLEVBQWF0MEMsR0FHbEMsYUFGTU0sRUFBTzRCLGFBQWEsYUFDcEI1QixFQUFPOEIsV0FBVyxPQUNqQjlCLEVBQU82QyxPQUFPVCxHQUNsQjg4QyxRQUFRdmxELGdCQUNEcUcsRUFBTzVGLGUsaUJDbEJuQixNQUFNKzVDLEVBQU0sRUFBUSxNQUVwQjc3QyxFQUFPQyxRQUFVLENBQ2Z5RyxXQUFZbTFDLEVBQUlnTCxRLHFCQ0hsQixJQUFJQyxHQUFVLEVBRWQ3bUQsRUFBUTZtRCxRQUFVQSxFQUVsQjdtRCxFQUFRODdDLFdBQWNnTCxJQUNwQkQsRUFBVUMsR0FHWjltRCxFQUFRSixJQUFNLElBQUlvSixJQUFVNjlDLEVBQVU1akQsUUFBUXJELElBQUkyQixNQUFNQyxLQUFNd0gsR0FBUSxJLGlCQ1J0RSxNQUFNbkosRUFBUSxFQUFRLE1BRXRCLElBQUlrbkQsRUFBYSxFQUVqQmhuRCxFQUFPQyxRQUFVLEVBQ2ZDLEdBQUkrbUQsRUFDSm5tRCxTQUNBQyxVQUFVLENBQUMsTUFFWCxJQUFJYixFQUFLK21ELEVBTVQsWUFMa0IsSUFBUC9tRCxJQUNUQSxFQUFLSixFQUFNLE1BQU9rbkQsR0FDbEJBLEdBQWMsR0FHVCxDQUNMOW1ELEtBQ0FZLFNBQ0FDLFcsV0NYSmYsRUFBT0MsUUFBV3lILElBQ2hCQSxFQUFPNUYsWSxXQ0ZUOUIsRUFBT0MsUUFBVSxDQUNmaW5ELGVBQWdCLEVBQ2hCQyxVQUFXLEVBQ1hDLHdCQUF5QixFQUN6QlAsUUFBUyxFLDhCQ1BUN21ELEVBQU9DLFFBQVUsRUFBakIsSyxXQ0lGLE1BQU1vbkQsRUFBc0JqQyxHQUFTLElBQy9CcGtELFFBQVEsQ0FBQ0MsRUFBU0MsS0FDcEIsTUFBTW9tRCxFQUFhLElBQUlDLFdBQ3ZCRCxFQUFXRSxPQUFTLEtBQ2xCdm1ELEVBQVFxbUQsRUFBV2xHLFNBRXJCa0csRUFBVzMvQyxRQUFVLEVBQUcyUSxRQUFVblYsT0FBU3dqQixhQUN6Q3psQixFQUFPVyxNQUFNLGdDQUFnQzhrQixPQUUvQzJnQyxFQUFXRyxrQkFBa0JyQyxLQVczQnQrQyxFQUFZekYsTUFBT3lJLElBQ3ZCLElBQUl4QixFQUFPd0IsRUFDWCxRQUFxQixJQUFWQSxFQUNULE1BQU8sWUFHVCxHQUFxQixpQkFBVkEsRUFFVCxHQUFJLHlDQUF5QytDLEtBQUsvQyxHQUNoRHhCLEVBQU9vL0MsS0FBSzU5QyxFQUFNc0MsTUFBTSxLQUFLLElBQzFCQSxNQUFNLElBQ05xd0MsSUFBS3A0QyxHQUFNQSxFQUFFc2pELFdBQVcsUUFDdEIsQ0FDTCxNQUFNQyxRQUFhQyxNQUFNLzlDLEdBQ3pCeEIsUUFBYXMvQyxFQUFLRSxhQUNwQixNQUNLLEdBQTJCLG9CQUFoQkMsYUFBK0JqK0MsYUFBaUJpK0MsWUFDMUMsUUFBbEJqK0MsRUFBTWd5QixVQUNSeHpCLFFBQWF4QixFQUFVZ0QsRUFBTXloQyxNQUVULFVBQWxCemhDLEVBQU1neUIsVUFDUnh6QixRQUFheEIsRUFBVWdELEVBQU1rK0MsU0FFVCxXQUFsQmwrQyxFQUFNZ3lCLGVBQ0YsSUFBSTk2QixRQUFTQyxJQUNqQjZJLEVBQU1tK0MsT0FBTzVtRCxNQUFPK2pELElBQ2xCOThDLFFBQWErK0MsRUFBbUJqQyxHQUNoQ25rRCxhQUlELEdBQStCLG9CQUFwQmluRCxpQkFBbUNwK0MsYUFBaUJvK0MsZ0JBQWlCLENBQ3JGLE1BQU05QyxRQUFhdDdDLEVBQU1xK0MsZ0JBQ3pCNy9DLFFBQWErK0MsRUFBbUJqQyxFQUNsQyxNQUFXdDdDLGFBQWlCcytDLE1BQVF0K0MsYUFBaUJxN0MsUUFDbkQ3OEMsUUFBYSsrQyxFQUFtQnY5QyxJQUdsQyxPQUFPLElBQUl1K0MsV0FBVy8vQyxJQUd4QnRJLEVBQU9DLFFBQVU2RyxDLEdDbkVid2hELEVBQTJCLENBQUMsRUFHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQmpLLElBQWpCa0ssRUFDSCxPQUFPQSxFQUFheG9ELFFBR3JCLElBQUlELEVBQVNzb0QsRUFBeUJFLEdBQVksQ0FHakR2b0QsUUFBUyxDQUFDLEdBT1gsT0FIQXlvRCxFQUFvQkYsR0FBVTVqRCxLQUFLNUUsRUFBT0MsUUFBU0QsRUFBUUEsRUFBT0MsUUFBU3NvRCxHQUdwRXZvRCxFQUFPQyxPQUNmLEMsMkNDZkkwb0QsRUFBb0IsQ0FDdEJDLE1BQU8sNkJBQ1AzaEMsTUFBTyxHQUNQQyxPQUFRLEdBQ1IyaEMsUUFBUyxZQUNUQyxLQUFNLE9BQ05DLE9BQVEsZUFDUnh5QyxZQUFhLEVBQ2J5eUMsY0FBZSxRQUNmQyxlQUFnQixTQ05sQixNQUNNQyxFQUFtQixDQUFDQyxFQUFVQyxLQUNsQyxNQUFNdk0sR0FBWSxJQUFBZ0IsWUFDaEIsRUFBR3owQixRQUFRLGVBQWdCb2YsT0FBTyxHQUFJanlCLGNBQWMsRUFBRzh5QyxzQkFBcUJDLFlBQVksR0FBSS8yQyxjQUFhZzNDLEdBQVF0bEQsS0FBUSxXQUFBcUgsZUFDdkgsTUFDQSxDQUNFckgsU0FDRzBrRCxFQUNIMWhDLE1BQU91aEIsRUFDUHRoQixPQUFRc2hCLEVBQ1J1Z0IsT0FBUTMvQixFQUNSN1MsWUFBYTh5QyxFQUE0QyxHQUF0QkcsT0FBT2p6QyxHQUFvQml6QyxPQUFPaGhCLEdBQVFqeUIsRUFDN0UreUMsVUFBVyxDQUFDLFNBQVUsVUFaVEcsRUFZK0JOLEVBWnBCTSxFQUFPdjhDLFFBQVEscUJBQXNCLFNBQVNiLGNBQWNxQyxTQVkzQjQ2QyxHQUFXenhCLEtBQUssUUFDdEUweEIsR0FFTCxJQUNLSCxFQUFTM00sSUFBSSxFQUFFbHRDLEVBQUttNkMsTUFBVyxJQUFBcCtDLGVBQWNpRSxFQUFLbTZDLE9BQ2xEbmhELE1BQU15SixRQUFRTyxHQUFZQSxFQUFXLENBQUNBLEtBakI3QixJQUFDazNDLElBc0JuQixPQURBNU0sRUFBVTF0QyxZQUFjLEdBQUdnNkMsSUFDcEJ0TSxHQ3ZCSDhNLEVBQVdULEVBQWlCLFdBQVksQ0FDNUMsQ0FDRSxPQUNBLENBQ0V6a0QsRUFBRyx3S0FDSFQsSUFBSyxXQUdULENBQUMsT0FBUSxDQUFFUyxFQUFHLFNBQVVULElBQUssV0FDN0IsQ0FBQyxPQUFRLENBQUVTLEVBQUcsV0FBWVQsSUFBSyxXQUMvQixDQUFDLE9BQVEsQ0FBRVMsRUFBRyxTQUFVVCxJQUFLLFdBQzdCLENBQUMsT0FBUSxDQUFFUyxFQUFHLFdBQVlULElBQUssYUNYM0I0bEQsRUFBWVYsRUFBaUIsWUFBYSxDQUM5QyxDQUFDLFdBQVksQ0FBRVcsT0FBUSxpQkFBa0I3bEQsSUFBSyxXQUM5QyxDQUFDLFdBQVksQ0FBRTZsRCxPQUFRLGlCQUFrQjdsRCxJQUFLLFdBQzlDLENBQUMsT0FBUSxDQUFFOGxELEdBQUksS0FBTUMsR0FBSSxLQUFNQyxHQUFJLElBQUtDLEdBQUksS0FBTWptRCxJQUFLLFdBQ3ZELENBQUMsT0FBUSxDQUFFOGxELEdBQUksSUFBS0MsR0FBSSxLQUFNQyxHQUFJLEtBQU1DLEdBQUksS0FBTWptRCxJQUFLLGFDSm5Ea21ELEVBQVloQixFQUFpQixZQUFhLENBQzlDLENBQUMsV0FBWSxDQUFFVyxPQUFRLG1CQUFvQjdsRCxJQUFLLFdBQ2hELENBQUMsV0FBWSxDQUFFNmxELE9BQVEsbUJBQW9CN2xELElBQUssV0FDaEQsQ0FBQyxPQUFRLENBQUU4bEQsR0FBSSxLQUFNQyxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxJQUFLam1ELElBQUssV0FDdkQsQ0FBQyxPQUFRLENBQUU4bEQsR0FBSSxJQUFLQyxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxLQUFNam1ELElBQUssYUNKbkRtbUMsRUFBSStlLEVBQWlCLElBQUssQ0FDOUIsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyxhQUFjVCxJQUFLLFdBQ2pDLENBQUMsT0FBUSxDQUFFUyxFQUFHLGFBQWNULElBQUssYUNGN0JtbUQsRUFBWWpCLEVBQWlCLFlBQWEsQ0FDOUMsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyxxREFBc0RULElBQUssV0FDekUsQ0FBQyxPQUFRLENBQUVTLEVBQUcsYUFBY1QsSUFBSyxXQUNqQyxDQUFDLE9BQVEsQ0FBRVMsRUFBRyxzREFBdURULElBQUssV0FDMUUsQ0FBQyxPQUFRLENBQUVTLEVBQUcsWUFBYVQsSUFBSyxhQ0o1Qm9tRCxFQUFPbEIsRUFBaUIsT0FBUSxDQUNwQyxDQUFDLE9BQVEsQ0FBRWppQyxNQUFPLEtBQU1DLE9BQVEsS0FBTThKLEVBQUcsSUFBS3dILEVBQUcsSUFBSzZ4QixHQUFJLElBQUtDLEdBQUksSUFBS3RtRCxJQUFLLFdBQzdFLENBQUMsT0FBUSxDQUFFUyxFQUFHLDBEQUEyRFQsSUFBSyxhQ0YxRXVtRCxFQUFPckIsRUFBaUIsT0FBUSxDQUNwQyxDQUFDLE9BQVEsQ0FBRXprRCxFQUFHLHNCQUF1QlQsSUFBSyxXQUMxQyxDQUFDLE9BQVEsQ0FBRVMsRUFBRyxjQUFlVCxJQUFLLGEsMkJDVnBDLElBQUFVLEVBQUFvc0IsRUFBQXlILEVBQUEsbUJBQUFqMUIsT0FBQUEsT0FBQSxHQUFBTSxFQUFBMjBCLEVBQUFwcUIsVUFBQSxhQUFBcThDLEVBQUFqeUIsRUFBQTBtQixhQUFBLHlCQUFBcitDLEVBQUEyM0IsRUFBQTMwQixFQUFBNG1ELEVBQUE1cEQsR0FBQSxJQUFBeUQsRUFBQVQsR0FBQUEsRUFBQUYscUJBQUFnOEMsRUFBQTk3QyxFQUFBODdDLEVBQUF6dUIsRUFBQTF3QixPQUFBKytCLE9BQUFqN0IsRUFBQVgsV0FBQSxPQUFBK21ELEVBQUF4NUIsRUFBQSxtQkFBQXNILEVBQUEzMEIsRUFBQTRtRCxHQUFBLElBQUE1cEQsRUFBQXlELEVBQUE0c0IsRUFBQTd0QixFQUFBLEVBQUFXLEVBQUF5bUQsR0FBQSxHQUFBaHlCLEdBQUEsRUFBQTFFLEVBQUEsQ0FBQS92QixFQUFBLEVBQUFILEVBQUEsRUFBQStILEVBQUFqSCxFQUFBSixFQUFBRyxFQUFBckIsRUFBQXFCLEVBQUFrc0IsS0FBQWpzQixFQUFBLEdBQUFELEVBQUEsU0FBQXFzQixFQUFBeUgsR0FBQSxPQUFBMzNCLEVBQUFrd0IsRUFBQXpzQixFQUFBLEVBQUE0c0IsRUFBQXZzQixFQUFBb3ZCLEVBQUFsd0IsRUFBQTIwQixFQUFBajBCLENBQUEsWUFBQUcsRUFBQTh6QixFQUFBMzBCLEdBQUEsSUFBQVMsRUFBQWswQixFQUFBdEgsRUFBQXJ0QixFQUFBa3RCLEVBQUEsR0FBQTBILEdBQUFwMUIsSUFBQW9uRCxHQUFBMTVCLEVBQUEvc0IsRUFBQXRELE9BQUFxd0IsSUFBQSxLQUFBMDVCLEVBQUE1cEQsRUFBQW1ELEVBQUErc0IsR0FBQXJzQixFQUFBcXZCLEVBQUEvdkIsRUFBQVAsRUFBQTVDLEVBQUEsR0FBQTIzQixFQUFBLEdBQUFpeUIsRUFBQWhuRCxJQUFBSSxLQUFBcXRCLEVBQUFyd0IsR0FBQXlELEVBQUF6RCxFQUFBLE9BQUF5RCxFQUFBLE1BQUF6RCxFQUFBLEdBQUFBLEVBQUEsR0FBQThELEdBQUE5RCxFQUFBLElBQUE2RCxLQUFBK2xELEVBQUFqeUIsRUFBQSxHQUFBOXpCLEVBQUE3RCxFQUFBLEtBQUF5RCxFQUFBLEVBQUF5dkIsRUFBQW5vQixFQUFBL0gsRUFBQWt3QixFQUFBbHdCLEVBQUFoRCxFQUFBLElBQUE2RCxFQUFBakIsSUFBQWduRCxFQUFBanlCLEVBQUEsR0FBQTMzQixFQUFBLEdBQUFnRCxHQUFBQSxFQUFBSixLQUFBNUMsRUFBQSxHQUFBMjNCLEVBQUEzM0IsRUFBQSxHQUFBZ0QsRUFBQWt3QixFQUFBbHdCLEVBQUFKLEVBQUFhLEVBQUEsT0FBQW1tRCxHQUFBanlCLEVBQUEsU0FBQWowQixFQUFBLE1BQUFrMEIsR0FBQSxFQUFBNTBCLENBQUEsaUJBQUE0bUQsRUFBQXptRCxFQUFBUCxHQUFBLEdBQUFKLEVBQUEsUUFBQTgrQyxVQUFBLG9DQUFBMXBCLEdBQUEsSUFBQXowQixHQUFBVSxFQUFBVixFQUFBUCxHQUFBYSxFQUFBTixFQUFBa3RCLEVBQUF6dEIsR0FBQXN0QixFQUFBenNCLEVBQUEsRUFBQUssRUFBQXVzQixLQUFBdUgsR0FBQSxDQUFBNTNCLElBQUF5RCxFQUFBQSxFQUFBLEdBQUFBLEVBQUEsSUFBQXl2QixFQUFBbHdCLEdBQUEsR0FBQWEsRUFBQUosRUFBQTRzQixJQUFBNkMsRUFBQWx3QixFQUFBcXRCLEVBQUE2QyxFQUFBbm9CLEVBQUFzbEIsR0FBQSxPQUFBN3RCLEVBQUEsRUFBQXhDLEVBQUEsSUFBQXlELElBQUFtbUQsRUFBQSxRQUFBMTVCLEVBQUFsd0IsRUFBQTRwRCxHQUFBLE1BQUExNUIsRUFBQUEsRUFBQWxzQixLQUFBaEUsRUFBQXF3QixJQUFBLE1BQUFpeEIsVUFBQSx3Q0FBQXB4QixFQUFBNEgsS0FBQSxPQUFBNUgsRUFBQUcsRUFBQUgsRUFBQWhnQixNQUFBek0sRUFBQSxJQUFBQSxFQUFBLFlBQUFBLElBQUF5c0IsRUFBQWx3QixFQUFBLFNBQUFrd0IsRUFBQWxzQixLQUFBaEUsR0FBQXlELEVBQUEsSUFBQTRzQixFQUFBaXhCLFVBQUEsb0NBQUFzSSxFQUFBLFlBQUFubUQsRUFBQSxHQUFBekQsRUFBQThELENBQUEsVUFBQW9zQixHQUFBMEgsRUFBQTFFLEVBQUFsd0IsRUFBQSxHQUFBcXRCLEVBQUFzSCxFQUFBM3pCLEtBQUFoQixFQUFBa3dCLE1BQUF4dkIsRUFBQSxZQUFBd3NCLEdBQUFsd0IsRUFBQThELEVBQUFMLEVBQUEsRUFBQTRzQixFQUFBSCxDQUFBLFNBQUExdEIsRUFBQSxVQUFBME4sTUFBQWdnQixFQUFBNEgsS0FBQUYsRUFBQSxHQUFBRCxFQUFBaXlCLEVBQUE1cEQsSUFBQSxHQUFBcXdCLENBQUEsS0FBQTNzQixFQUFBLFlBQUFvN0MsSUFBQSxVQUFBWSxJQUFBLFVBQUFDLElBQUEsQ0FBQXp2QixFQUFBdndCLE9BQUFtZ0QsZUFBQSxJQUFBcjhDLEVBQUEsR0FBQVQsR0FBQWt0QixFQUFBQSxFQUFBLEdBQUFsdEIsUUFBQTZtRCxFQUFBMzVCLEVBQUEsR0FBQWx0QixFQUFBLHlCQUFBa3RCLEdBQUFHLEVBQUFzdkIsRUFBQTc4QyxVQUFBZzhDLEVBQUFoOEMsVUFBQW5ELE9BQUErK0IsT0FBQWo3QixHQUFBLFNBQUFqQixFQUFBc0IsR0FBQSxPQUFBbkUsT0FBQWdqRCxlQUFBaGpELE9BQUFnakQsZUFBQTcrQyxFQUFBNjdDLElBQUE3N0MsRUFBQTgrQyxVQUFBakQsRUFBQWtLLEVBQUEvbEQsRUFBQThsRCxFQUFBLHNCQUFBOWxELEVBQUFoQixVQUFBbkQsT0FBQSsrQixPQUFBck8sR0FBQXZzQixDQUFBLFFBQUE0N0MsRUFBQTU4QyxVQUFBNjhDLEVBQUFrSyxFQUFBeDVCLEVBQUEsY0FBQXN2QixHQUFBa0ssRUFBQWxLLEVBQUEsY0FBQUQsR0FBQUEsRUFBQW54QyxZQUFBLG9CQUFBczdDLEVBQUFsSyxFQUFBaUssRUFBQSxxQkFBQUMsRUFBQXg1QixHQUFBdzVCLEVBQUF4NUIsRUFBQXU1QixFQUFBLGFBQUFDLEVBQUF4NUIsRUFBQXJ0QixFQUFBLHlCQUFBNm1ELEVBQUF4NUIsRUFBQSxvREFBQXk1QixFQUFBLGtCQUFBcHBELEVBQUFWLEVBQUE2QyxFQUFBTCxFQUFBLGNBQUFxbkQsRUFBQS9sRCxFQUFBNnpCLEVBQUEzMEIsRUFBQWt0QixHQUFBLElBQUFsd0IsRUFBQUwsT0FBQXdPLGVBQUEsSUFBQW5PLEVBQUEsZ0JBQUE4RCxHQUFBOUQsRUFBQSxFQUFBNnBELEVBQUEsU0FBQS9sRCxFQUFBNnpCLEVBQUEzMEIsRUFBQWt0QixHQUFBLEdBQUF5SCxFQUFBMzNCLEVBQUFBLEVBQUE4RCxFQUFBNnpCLEVBQUEsQ0FBQXpuQixNQUFBbE4sRUFBQTJNLFlBQUF1Z0IsRUFBQXhnQixjQUFBd2dCLEVBQUFxdUIsVUFBQXJ1QixJQUFBcHNCLEVBQUE2ekIsR0FBQTMwQixNQUFBLEtBQUE0bUQsRUFBQSxTQUFBanlCLEVBQUEzMEIsR0FBQTZtRCxFQUFBL2xELEVBQUE2ekIsRUFBQSxTQUFBN3pCLEdBQUEsWUFBQXE4QyxRQUFBeG9CLEVBQUEzMEIsRUFBQWMsRUFBQSxJQUFBOGxELEVBQUEsVUFBQUEsRUFBQSxXQUFBQSxFQUFBLGNBQUFDLEVBQUEvbEQsRUFBQTZ6QixFQUFBMzBCLEVBQUFrdEIsRUFBQSxVQUFBNjVCLEVBQUFweUIsR0FBQSxnQkFBQUEsR0FBQSxHQUFBaHdCLE1BQUF5SixRQUFBdW1CLEdBQUEsT0FBQXF5QixFQUFBcnlCLEVBQUEsQ0FBQXN5QixDQUFBdHlCLElBQUEsU0FBQUEsR0FBQSx1QkFBQWoxQixRQUFBLE1BQUFpMUIsRUFBQWoxQixPQUFBNkssV0FBQSxNQUFBb3FCLEVBQUEscUJBQUFod0IsTUFBQUMsS0FBQSt2QixFQUFBLENBQUF1eUIsQ0FBQXZ5QixJQUFBd3lCLEVBQUF4eUIsSUFBQSxxQkFBQTJwQixVQUFBLHdJQUFBOEksRUFBQSxVQUFBQyxFQUFBcm5ELEVBQUFrdEIsRUFBQXBzQixFQUFBNnpCLEVBQUFpeUIsRUFBQWxtRCxFQUFBRCxHQUFBLFFBQUF6RCxFQUFBZ0QsRUFBQVUsR0FBQUQsR0FBQTRzQixFQUFBcndCLEVBQUFrUSxLQUFBLE9BQUFsTixHQUFBLFlBQUFjLEVBQUFkLEVBQUEsQ0FBQWhELEVBQUE4M0IsS0FBQTVILEVBQUFHLEdBQUFqd0IsUUFBQUMsUUFBQWd3QixHQUFBem1CLEtBQUErdEIsRUFBQWl5QixFQUFBLFVBQUFVLEVBQUEzeUIsRUFBQTd6QixHQUFBLGdCQUFBNnpCLEdBQUEsR0FBQWh3QixNQUFBeUosUUFBQXVtQixHQUFBLE9BQUFBLENBQUEsQ0FBQTR5QixDQUFBNXlCLElBQUEsU0FBQUEsRUFBQS8wQixHQUFBLElBQUFzdEIsRUFBQSxNQUFBeUgsRUFBQSx5QkFBQWoxQixRQUFBaTFCLEVBQUFqMUIsT0FBQTZLLFdBQUFvcUIsRUFBQSx1QkFBQXpILEVBQUEsS0FBQXBzQixFQUFBZCxFQUFBaEQsRUFBQXF3QixFQUFBM3NCLEVBQUEsR0FBQWxCLEdBQUEsRUFBQW9uRCxHQUFBLFNBQUE1cEQsR0FBQWt3QixFQUFBQSxFQUFBbHNCLEtBQUEyekIsSUFBQUUsS0FBQSxJQUFBajFCLEVBQUEsSUFBQWpELE9BQUF1d0IsS0FBQUEsRUFBQSxPQUFBMXRCLEdBQUEsY0FBQUEsR0FBQXNCLEVBQUE5RCxFQUFBZ0UsS0FBQWtzQixJQUFBNEgsUUFBQXAwQixFQUFBbEQsS0FBQXNELEVBQUFvTSxPQUFBeE0sRUFBQTdELFNBQUErQyxHQUFBSixHQUFBLFVBQUFtMUIsR0FBQWl5QixHQUFBLEVBQUE1bUQsRUFBQTIwQixDQUFBLGlCQUFBbjFCLEdBQUEsTUFBQTB0QixFQUFBLFNBQUFHLEVBQUFILEVBQUEsU0FBQXZ3QixPQUFBMHdCLEtBQUFBLEdBQUEsa0JBQUF1NUIsRUFBQSxNQUFBNW1ELENBQUEsU0FBQVUsQ0FBQSxFQUFBOG1ELENBQUE3eUIsRUFBQTd6QixJQUFBcW1ELEVBQUF4eUIsRUFBQTd6QixJQUFBLHFCQUFBdzlDLFVBQUEsNklBQUFtSixFQUFBLFVBQUFOLEVBQUF4eUIsRUFBQWowQixHQUFBLEdBQUFpMEIsRUFBQSxxQkFBQUEsRUFBQSxPQUFBcXlCLEVBQUFyeUIsRUFBQWowQixHQUFBLElBQUF3c0IsRUFBQSxHQUFBcHJCLFNBQUFkLEtBQUEyekIsR0FBQTV5QixNQUFBLHVCQUFBbXJCLEdBQUF5SCxFQUFBbm9CLGNBQUEwZ0IsRUFBQXlILEVBQUFub0IsWUFBQWYsTUFBQSxRQUFBeWhCLEdBQUEsUUFBQUEsRUFBQXZvQixNQUFBQyxLQUFBK3ZCLEdBQUEsY0FBQXpILEdBQUEsMkNBQUFqa0IsS0FBQWlrQixHQUFBODVCLEVBQUFyeUIsRUFBQWowQixRQUFBLFlBQUFzbUQsRUFBQXJ5QixFQUFBajBCLElBQUEsTUFBQUEsR0FBQUEsRUFBQWkwQixFQUFBOTNCLFVBQUE2RCxFQUFBaTBCLEVBQUE5M0IsUUFBQSxRQUFBaUUsRUFBQSxFQUFBZCxFQUFBMkUsTUFBQWpFLEdBQUFJLEVBQUFKLEVBQUFJLElBQUFkLEVBQUFjLEdBQUE2ekIsRUFBQTd6QixHQUFBLE9BQUFkLENBQUEsQ0Ftb0JBLFFBbG5COEMsU0FBSDBuRCxHQU1yQyxJQUxKQyxFQUFTRCxFQUFUQyxVQUNBQyxFQUFPRixFQUFQRSxRQUNnQkMsR0FEVEgsRUFDUEksWUFBZ0JKLEVBQ2hCSyxXQUFBQSxPQUFTLElBQUFGLEVBQUcsR0FBRUEsRUFHdUNHLEdBSHZDTixFQUNkTyxRQUVxRFgsR0FBZjNwQixFQUFBQSxFQUFBQSxXQUFTLEdBQU0sSUFBOUN1cUIsRUFBV0YsRUFBQSxHQUFFRyxFQUFjSCxFQUFBLEdBQ3FCSSxFQUFBZCxHQUF2QjNwQixFQUFBQSxFQUFBQSxVQUFvQixJQUFHLEdBQWhEMHFCLEVBQVFELEVBQUEsR0FBRUUsRUFBV0YsRUFBQSxHQUNvQkcsRUFBQWpCLEdBQVozcEIsRUFBQUEsRUFBQUEsVUFBUyxJQUFHLEdBQXpDNnFCLEVBQVVELEVBQUEsR0FBRUUsRUFBYUYsRUFBQSxHQUNpQkcsRUFBQXBCLEdBQWYzcEIsRUFBQUEsRUFBQUEsV0FBUyxHQUFNLEdBQTFDZ3JCLEVBQVNELEVBQUEsR0FBRUUsRUFBWUYsRUFBQSxHQUMyQ0csRUFBQXZCLEdBQTdCM3BCLEVBQUFBLEVBQUFBLFVBQXdCLE1BQUssR0FBbEVtckIsRUFBY0QsRUFBQSxHQUFFRSxFQUFpQkYsRUFBQSxHQUNsQ0csR0FBaUJ0ckIsRUFBQUEsRUFBQUEsUUFBdUIsT0ErQzlDTixFQUFBQSxFQUFBQSxXQUFVLFdBQ0o0ckIsRUFBZTFuRCxTQUNqQjBuRCxFQUFlMW5ELFFBQVEybkQsZUFBZSxDQUFFQyxTQUFVLFVBRXRELEVBQUcsQ0FBQ2IsSUFFSixJQUFNYyxFQUFpQixlQWxGekJucEQsRUFrRnlCb3BELEdBbEZ6QnBwRCxFQWtGeUI4bUQsSUFBQWpuRCxFQUFHLFNBQUF3cEQsRUFBT3BsRCxHQUFlLElBQUFxbEQsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQSxPQUFBM0MsSUFBQXBwRCxFQUFBLFNBQUFvTyxHQUFBLGNBQUFBLEVBQUE5TCxHQUFBLFVBQ3pDaUUsRUFBUTZHLE9BQVEsQ0FBRmdCLEVBQUE5TCxFQUFBLGVBQUE4TCxFQUFBcEwsRUFBQSxVQVdBLE9BVGI0b0QsRUFBdUIsQ0FDM0JodEQsR0FBSTBpQixLQUFLQyxNQUFNbmQsV0FDZlgsS0FBTSxPQUNOdW9ELFFBQVN6bEQsRUFDVDBsRCxVQUFXLElBQUkzcUMsTUFHakJzcEMsRUFBWSxTQUFBbEksR0FBSSxTQUFBajBCLE9BQUE0NkIsRUFBUTNHLEdBQUksQ0FBRWtKLEdBQVcsR0FDekNiLEVBQWMsSUFDZEcsR0FBYSxHQUFNOThDLEVBQUEzTCxFQUFBLEVBQUEyTCxFQUFBOUwsRUFBQSxFQUlYLElBQUk1QyxRQUFRLFNBQUFDLEdBQU8sT0FBSXl4QixXQUFXenhCLEVBQVMsSUFBSyxHQUFDLE9BRWpEa3NELEVBQXNCLENBQzFCanRELElBQUswaUIsS0FBS0MsTUFBUSxHQUFHbmQsV0FDckJYLEtBQU0sS0FDTnVvRCxRQUFTLHVDQUFGdjlCLE9BQXdDbG9CLEVBQU8sNExBQ3REMGxELFVBQVcsSUFBSTNxQyxNQUdqQnNwQyxFQUFZLFNBQUFsSSxHQUFJLFNBQUFqMEIsT0FBQTQ2QixFQUFRM0csR0FBSSxDQUFFbUosR0FBVSxHQUFHejlDLEVBQUE5TCxFQUFBLGVBQUE4TCxFQUFBM0wsRUFBQSxFQUFBc3BELEVBQUEzOUMsRUFBQS9ELEVBRTNDekksUUFBUUMsTUFBTSxxQkFBb0JrcUQsR0FDNUJELEVBQXdCLENBQzVCbHRELElBQUswaUIsS0FBS0MsTUFBUSxHQUFHbmQsV0FDckJYLEtBQU0sS0FDTnVvRCxRQUFTLG1EQUNUQyxVQUFXLElBQUkzcUMsTUFFakJzcEMsRUFBWSxTQUFBbEksR0FBSSxTQUFBajBCLE9BQUE0NkIsRUFBUTNHLEdBQUksQ0FBRW9KLEdBQVksR0FBRyxPQUV6QixPQUZ5QjE5QyxFQUFBM0wsRUFBQSxFQUU3Q3lvRCxHQUFhLEdBQU85OEMsRUFBQXRNLEVBQUEsaUJBQUFzTSxFQUFBcEwsRUFBQSxLQUFBMm9ELEVBQUEsb0JBdEgxQixlQUFBbjhCLEVBQUEsS0FBQXBzQixFQUFBa0csVUFBQSxXQUFBNUosUUFBQSxTQUFBdTNCLEVBQUFpeUIsR0FBQSxJQUFBbG1ELEVBQUFWLEVBQUFwQyxNQUFBc3ZCLEVBQUFwc0IsR0FBQSxTQUFBOG9ELEVBQUE1cEQsR0FBQXFuRCxFQUFBM21ELEVBQUFpMEIsRUFBQWl5QixFQUFBZ0QsRUFBQUMsRUFBQSxPQUFBN3BELEVBQUEsVUFBQTZwRCxFQUFBN3BELEdBQUFxbkQsRUFBQTNtRCxFQUFBaTBCLEVBQUFpeUIsRUFBQWdELEVBQUFDLEVBQUEsUUFBQTdwRCxFQUFBLENBQUE0cEQsT0FBQSxPQXdIRyxnQkF0Q3NCRSxHQUFBLE9BQUFWLEVBQUF4ckQsTUFBQSxLQUFBb0osVUFBQSxLQXFEdkIsT0FBSzJnRCxHQUdIb0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxtQkFBa0IvMkMsU0FBQSxFQUMvQm83QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFTLHlCQUFBdjVCLE9BQTJCKzdCLEVBQWMsWUFBYyxJQUFLdjVDLFNBQUEsRUFFeEVvN0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxxQkFBb0IvMkMsU0FBQSxFQUNqQ283QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGNBQWEvMkMsU0FBQSxFQUMxQnE3QyxFQUFBQSxFQUFBQSxLQUFBLE9BQUt0RSxVQUFVLFVBQVMvMkMsVUFDdEJxN0MsRUFBQUEsRUFBQUEsS0FBQ2pFLEVBQVEsQ0FBQ25oQixLQUFNLFFBRWxCb2xCLEVBQUFBLEVBQUFBLEtBQUEsUUFBTXRFLFVBQVUsV0FBVS8yQyxTQUFDLHFCQUU3Qm83QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGlCQUFnQi8yQyxTQUFBLEVBQzdCcTdDLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVUsYUFDVmhoQixRQUFTLFdBQUYsT0FBUXlqQixHQUFnQkQsRUFBWSxFQUMzQ3poRCxNQUFPeWhELEVBQWMsU0FBVyxXQUFXdjVDLFNBRTFDdTVDLEdBQWM4QixFQUFBQSxFQUFBQSxLQUFDaEUsRUFBUyxDQUFDcGhCLEtBQU0sTUFBU29sQixFQUFBQSxFQUFBQSxLQUFDMUQsRUFBUyxDQUFDMWhCLEtBQU0sUUFFNURvbEIsRUFBQUEsRUFBQUEsS0FBQSxVQUNFdEUsVUFBVSxhQUNWaGhCLFFBQVNrakIsRUFDVG5oRCxNQUFNLFFBQU9rSSxVQUVicTdDLEVBQUFBLEVBQUFBLEtBQUN6akIsRUFBQyxDQUFDM0IsS0FBTSxjQU1ic2pCLElBQ0E2QixFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLHNCQUFxQi8yQyxTQUFBLENBRWIsSUFBcEIwNUMsRUFBU3hyRCxTQUNSa3RELEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUsZ0JBQWUvMkMsU0FBQSxFQUM1Qm83QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGlCQUFnQi8yQyxTQUFBLEVBQzdCcTdDLEVBQUFBLEVBQUFBLEtBQUEsTUFBQXI3QyxTQUFJLG1CQUNKcTdDLEVBQUFBLEVBQUFBLEtBQUEsS0FBQXI3QyxTQUFHLDZDQUVMcTdDLEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUsZUFBYy8yQyxTQWpKdEIsQ0FDbkIsQ0FDRXJTLEdBQUksWUFDSm1LLE1BQU8saUJBQ1B3akQsWUFBYSxzQ0FDYkMsT0FBUSxxRUFDUkMsS0FBTSxNQUVSLENBQ0U3dEQsR0FBSSxVQUNKbUssTUFBTyxpQkFDUHdqRCxZQUFhLDJDQUNiQyxPQUFRLHdGQUNSQyxLQUFNLE1BRVIsQ0FDRTd0RCxHQUFJLFlBQ0ptSyxNQUFPLGFBQ1B3akQsWUFBYSxvQ0FDYkMsT0FBUSxnRUFDUkMsS0FBTSxNQUVSLENBQ0U3dEQsR0FBSSxZQUNKbUssTUFBTyxxQkFDUHdqRCxZQUFhLDRDQUNiQyxPQUFRLHFHQUNSQyxLQUFNLEtBRVIsQ0FDRTd0RCxHQUFJLGFBQ0ptSyxNQUFPLGVBQ1B3akQsWUFBYSw4QkFDYkMsT0FBUSw2RUFDUkMsS0FBTSxLQUVSLENBQ0U3dEQsR0FBSSxXQUNKbUssTUFBTyxrQkFDUHdqRCxZQUFhLGtDQUNiQyxPQUFRLGlGQUNSQyxLQUFNLE9BeUdvQnRSLElBQUksU0FBQ3FSLEdBQU0sT0FDRkgsRUFBQUEsRUFBQUEsTUFBQSxVQUVsQnJFLFVBQVMsZUFBQXY1QixPQUFpQjI4QixJQUFtQm9CLEVBQU81dEQsR0FBSyxXQUFhLElBQ3RFb29DLFFBQVMsV0FBRixPQTNERixTQUFDd2xCLEdBQ3pCbkIsRUFBa0JtQixFQUFPNXRELElBQ3pCNnNELEVBQWtCZSxFQUFPQSxPQUMzQixDQXdEb0NFLENBQWtCRixFQUFPLEVBQ3hDMTdDLFNBQVVtNkMsRUFDVmxpRCxNQUFPeWpELEVBQU9ELFlBQVl0N0MsU0FBQSxFQUUzQnE3QyxFQUFBQSxFQUFBQSxLQUFBLE9BQUt0RSxVQUFVLGNBQWEvMkMsU0FBRXU3QyxFQUFPQyxRQUNyQ0osRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxpQkFBZ0IvMkMsU0FBQSxFQUM3QnE3QyxFQUFBQSxFQUFBQSxLQUFBLE9BQUt0RSxVQUFVLGVBQWMvMkMsU0FBRXU3QyxFQUFPempELFNBQ3RDdWpELEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUscUJBQW9CLzJDLFNBQUV1N0MsRUFBT0QsbUJBVHhDQyxFQUFPNXRELEdBV04sUUFPaEIrckQsRUFBU3hyRCxPQUFTLElBQ2pCa3RELEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUscUJBQW9CLzJDLFNBQUEsRUFDakNvN0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxrQkFBaUIvMkMsU0FBQSxFQUM5Qm83QyxFQUFBQSxFQUFBQSxNQUFBLFFBQU1yRSxVQUFVLGVBQWMvMkMsU0FBQSxDQUFDLHNCQUNUbzVDLEdBQWEsbUJBRW5DaUMsRUFBQUEsRUFBQUEsS0FBQSxVQUNFdEUsVUFBVSxpQkFDVmhoQixRQTFFQSxXQUNoQjRqQixFQUFZLEdBQ2QsRUF5RWtCN2hELE1BQU0sYUFBWWtJLFVBRWxCcTdDLEVBQUFBLEVBQUFBLEtBQUN6RCxFQUFTLENBQUMzaEIsS0FBTSxXQUdyQm1sQixFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGdCQUFlLzJDLFNBQUEsQ0FDM0IwNUMsRUFBU3hQLElBQUksU0FBQzUwQyxHQUFPLE9BQ3BCOGxELEVBQUFBLEVBQUFBLE1BQUEsT0FFRXJFLFVBQVMsV0FBQXY1QixPQUFhbG9CLEVBQVE5QyxNQUFPd04sU0FBQSxFQUVyQ3E3QyxFQUFBQSxFQUFBQSxLQUFBLE9BQUt0RSxVQUFVLGtCQUFpQi8yQyxTQUM3QjFLLEVBQVF5bEQsV0FFWEssRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxrQkFBaUIvMkMsU0FBQSxFQUM5QnE3QyxFQUFBQSxFQUFBQSxLQUFBLFVBQ0V0RSxVQUFVLGlCQUNWaGhCLFFBQVMsV0FBRixPQWhHVmdsQixFQWdHOEJ6bEQsRUFBUXlsRCxhQS9GekQvUixVQUFVMFMsVUFBVXBsRCxVQUFVeWtELEdBRFosSUFBQ0EsQ0FnRzhDLEVBQzNDampELE1BQU0sT0FBTWtJLFVBRVpxN0MsRUFBQUEsRUFBQUEsS0FBQ3hELEVBQUksQ0FBQzVoQixLQUFNLFFBRWRvbEIsRUFBQUEsRUFBQUEsS0FBQSxRQUFNdEUsVUFBVSxlQUFjLzJDLFNBQzNCMUssRUFBUTBsRCxVQUFVVyxtQkFBbUIsR0FBSSxDQUN4Q0MsS0FBTSxVQUNOQyxPQUFRLG1CQWpCVHZtRCxFQUFRM0gsR0FxQlQsR0FFUHFzRCxJQUNDcUIsRUFBQUEsRUFBQUEsS0FBQSxPQUFLdEUsVUFBVSxxQkFBb0IvMkMsVUFDakNxN0MsRUFBQUEsRUFBQUEsS0FBQSxPQUFLdEUsVUFBVSxrQkFBaUIvMkMsVUFDOUJvN0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxtQkFBa0IvMkMsU0FBQSxFQUMvQnE3QyxFQUFBQSxFQUFBQSxLQUFBLFlBQ0FBLEVBQUFBLEVBQUFBLEtBQUEsWUFDQUEsRUFBQUEsRUFBQUEsS0FBQSxtQkFLUkEsRUFBQUEsRUFBQUEsS0FBQSxPQUFLM3BELElBQUsyb0QsV0FNaEJnQixFQUFBQSxFQUFBQSxLQUFBLE9BQUt0RSxVQUFVLHFCQUFvQi8yQyxVQUNqQ283QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGdCQUFlLzJDLFNBQUEsRUFDNUJxN0MsRUFBQUEsRUFBQUEsS0FBQSxTQUNFN29ELEtBQUssT0FDTCtMLE1BQU9zN0MsRUFDUGlDLFNBQVUsU0FBQzNwRCxHQUFDLE9BQUsybkQsRUFBYzNuRCxFQUFFNFQsT0FBT3hILE1BQU0sRUFDOUN3OUMsV0FBWSxTQUFDNXBELEdBQUMsTUFBZSxVQUFWQSxFQUFFVixLQUFtQitvRCxFQUFrQlgsRUFBVyxFQUNyRW1DLFlBQVksa0NBQ1pqRixVQUFVLFdBQ1ZsM0MsU0FBVW02QyxLQUVacUIsRUFBQUEsRUFBQUEsS0FBQSxVQUNFdEUsVUFBVSxXQUNWaGhCLFFBQVMsV0FBRixPQUFReWtCLEVBQWtCWCxFQUFXLEVBQzVDaDZDLFNBQVVtNkMsSUFBY0gsRUFBVzE5QyxPQUFPNkQsVUFFMUNxN0MsRUFBQUEsRUFBQUEsS0FBQ3JELEVBQUksQ0FBQy9oQixLQUFNLG1CQVF4Qm9sQixFQUFBQSxFQUFBQSxLQUFBLFNBQU94b0QsS0FBRyxFQUFBbU4sU0FBQSw4c1FBL0lTLElBMGZ6QixFQ3puQk1pOEMsRUFBT3RGLEVBQWlCLE9BQVEsQ0FDcEMsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyxXQUFZVCxJQUFLLFdBQy9CLENBQUMsT0FBUSxDQUFFUyxFQUFHLFdBQVlULElBQUssYUNGM0J5cUQsRUFBVXZGLEVBQWlCLFVBQVcsQ0FDMUMsQ0FBQyxTQUFVLENBQUV3RixHQUFJLE9BQVFDLEdBQUksTUFBT3AyQixFQUFHLEtBQU12MEIsSUFBSyxVQUNsRCxDQUFDLFNBQVUsQ0FBRTBxRCxHQUFJLE9BQVFDLEdBQUksT0FBUXAyQixFQUFHLEtBQU12MEIsSUFBSyxXQUNuRCxDQUFDLFNBQVUsQ0FBRTBxRCxHQUFJLE1BQU9DLEdBQUksTUFBT3AyQixFQUFHLEtBQU12MEIsSUFBSyxVQUNqRCxDQUFDLFNBQVUsQ0FBRTBxRCxHQUFJLE1BQU9DLEdBQUksT0FBUXAyQixFQUFHLEtBQU12MEIsSUFBSyxXQUNsRCxDQUNFLE9BQ0EsQ0FDRVMsRUFBRywyTkFDSFQsSUFBSyxhQ1RMNHFELEVBQVUxRixFQUFpQixVQUFXLENBQzFDLENBQUMsT0FBUSxDQUFFemtELEVBQUcsV0FBWVQsSUFBSyxXQUMvQixDQUFDLE9BQVEsQ0FBRVMsRUFBRywrQ0FBZ0RULElBQUssYUNGL0Q2cUQsRUFBUzNGLEVBQWlCLFNBQVUsQ0FDeEMsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyxVQUFXVCxJQUFLLFdBQzlCLENBQUMsT0FBUSxDQUFFUyxFQUFHLHdDQUF5Q1QsSUFBSyxXQUM1RCxDQUFDLE9BQVEsQ0FBRVMsRUFBRyxxQ0FBc0NULElBQUssV0FDekQsQ0FBQyxPQUFRLENBQUU4bEQsR0FBSSxLQUFNQyxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxLQUFNam1ELElBQUssV0FDeEQsQ0FBQyxPQUFRLENBQUU4bEQsR0FBSSxLQUFNQyxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxLQUFNam1ELElBQUssWUNMcEQ4cUQsRUFBTzVGLEVBQWlCLE9BQVEsQ0FDcEMsQ0FBQyxXQUFZLENBQUVXLE9BQVEsZ0JBQWlCN2xELElBQUssV0FDN0MsQ0FBQyxXQUFZLENBQUU2bEQsT0FBUSxnQkFBaUI3bEQsSUFBSyxXQUM3QyxDQUFDLFdBQVksQ0FBRTZsRCxPQUFRLG1CQUFvQjdsRCxJQUFLLFdBQ2hELENBQUMsV0FBWSxDQUFFNmxELE9BQVEsbUJBQW9CN2xELElBQUssV0FDaEQsQ0FBQyxPQUFRLENBQUU4bEQsR0FBSSxJQUFLQyxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxLQUFNam1ELElBQUssV0FDdkQsQ0FBQyxPQUFRLENBQUU4bEQsR0FBSSxLQUFNQyxHQUFJLEtBQU1DLEdBQUksSUFBS0MsR0FBSSxLQUFNam1ELElBQUssYSxvaURDZHpELElBQUFVLEVBQUFvc0IsRUFBQXlILEVBQUEsbUJBQUFqMUIsT0FBQUEsT0FBQSxHQUFBTSxFQUFBMjBCLEVBQUFwcUIsVUFBQSxhQUFBcThDLEVBQUFqeUIsRUFBQTBtQixhQUFBLHlCQUFBcitDLEVBQUEyM0IsRUFBQTMwQixFQUFBNG1ELEVBQUE1cEQsR0FBQSxJQUFBeUQsRUFBQVQsR0FBQUEsRUFBQUYscUJBQUFnOEMsRUFBQTk3QyxFQUFBODdDLEVBQUF6dUIsRUFBQTF3QixPQUFBKytCLE9BQUFqN0IsRUFBQVgsV0FBQSxPQUFBK21ELEVBQUF4NUIsRUFBQSxtQkFBQXNILEVBQUEzMEIsRUFBQTRtRCxHQUFBLElBQUE1cEQsRUFBQXlELEVBQUE0c0IsRUFBQTd0QixFQUFBLEVBQUFXLEVBQUF5bUQsR0FBQSxHQUFBaHlCLEdBQUEsRUFBQTFFLEVBQUEsQ0FBQS92QixFQUFBLEVBQUFILEVBQUEsRUFBQStILEVBQUFqSCxFQUFBSixFQUFBRyxFQUFBckIsRUFBQXFCLEVBQUFrc0IsS0FBQWpzQixFQUFBLEdBQUFELEVBQUEsU0FBQXFzQixFQUFBeUgsR0FBQSxPQUFBMzNCLEVBQUFrd0IsRUFBQXpzQixFQUFBLEVBQUE0c0IsRUFBQXZzQixFQUFBb3ZCLEVBQUFsd0IsRUFBQTIwQixFQUFBajBCLENBQUEsWUFBQUcsRUFBQTh6QixFQUFBMzBCLEdBQUEsSUFBQVMsRUFBQWswQixFQUFBdEgsRUFBQXJ0QixFQUFBa3RCLEVBQUEsR0FBQTBILEdBQUFwMUIsSUFBQW9uRCxHQUFBMTVCLEVBQUEvc0IsRUFBQXRELE9BQUFxd0IsSUFBQSxLQUFBMDVCLEVBQUE1cEQsRUFBQW1ELEVBQUErc0IsR0FBQXJzQixFQUFBcXZCLEVBQUEvdkIsRUFBQVAsRUFBQTVDLEVBQUEsR0FBQTIzQixFQUFBLEdBQUFpeUIsRUFBQWhuRCxJQUFBSSxLQUFBcXRCLEVBQUFyd0IsR0FBQXlELEVBQUF6RCxFQUFBLE9BQUF5RCxFQUFBLE1BQUF6RCxFQUFBLEdBQUFBLEVBQUEsR0FBQThELEdBQUE5RCxFQUFBLElBQUE2RCxLQUFBK2xELEVBQUFqeUIsRUFBQSxHQUFBOXpCLEVBQUE3RCxFQUFBLEtBQUF5RCxFQUFBLEVBQUF5dkIsRUFBQW5vQixFQUFBL0gsRUFBQWt3QixFQUFBbHdCLEVBQUFoRCxFQUFBLElBQUE2RCxFQUFBakIsSUFBQWduRCxFQUFBanlCLEVBQUEsR0FBQTMzQixFQUFBLEdBQUFnRCxHQUFBQSxFQUFBSixLQUFBNUMsRUFBQSxHQUFBMjNCLEVBQUEzM0IsRUFBQSxHQUFBZ0QsRUFBQWt3QixFQUFBbHdCLEVBQUFKLEVBQUFhLEVBQUEsT0FBQW1tRCxHQUFBanlCLEVBQUEsU0FBQWowQixFQUFBLE1BQUFrMEIsR0FBQSxFQUFBNTBCLENBQUEsaUJBQUE0bUQsRUFBQXptRCxFQUFBUCxHQUFBLEdBQUFKLEVBQUEsUUFBQTgrQyxVQUFBLG9DQUFBMXBCLEdBQUEsSUFBQXowQixHQUFBVSxFQUFBVixFQUFBUCxHQUFBYSxFQUFBTixFQUFBa3RCLEVBQUF6dEIsR0FBQXN0QixFQUFBenNCLEVBQUEsRUFBQUssRUFBQXVzQixLQUFBdUgsR0FBQSxDQUFBNTNCLElBQUF5RCxFQUFBQSxFQUFBLEdBQUFBLEVBQUEsSUFBQXl2QixFQUFBbHdCLEdBQUEsR0FBQWEsRUFBQUosRUFBQTRzQixJQUFBNkMsRUFBQWx3QixFQUFBcXRCLEVBQUE2QyxFQUFBbm9CLEVBQUFzbEIsR0FBQSxPQUFBN3RCLEVBQUEsRUFBQXhDLEVBQUEsSUFBQXlELElBQUFtbUQsRUFBQSxRQUFBMTVCLEVBQUFsd0IsRUFBQTRwRCxHQUFBLE1BQUExNUIsRUFBQUEsRUFBQWxzQixLQUFBaEUsRUFBQXF3QixJQUFBLE1BQUFpeEIsVUFBQSx3Q0FBQXB4QixFQUFBNEgsS0FBQSxPQUFBNUgsRUFBQUcsRUFBQUgsRUFBQWhnQixNQUFBek0sRUFBQSxJQUFBQSxFQUFBLFlBQUFBLElBQUF5c0IsRUFBQWx3QixFQUFBLFNBQUFrd0IsRUFBQWxzQixLQUFBaEUsR0FBQXlELEVBQUEsSUFBQTRzQixFQUFBaXhCLFVBQUEsb0NBQUFzSSxFQUFBLFlBQUFubUQsRUFBQSxHQUFBekQsRUFBQThELENBQUEsVUFBQW9zQixHQUFBMEgsRUFBQTFFLEVBQUFsd0IsRUFBQSxHQUFBcXRCLEVBQUFzSCxFQUFBM3pCLEtBQUFoQixFQUFBa3dCLE1BQUF4dkIsRUFBQSxZQUFBd3NCLEdBQUFsd0IsRUFBQThELEVBQUFMLEVBQUEsRUFBQTRzQixFQUFBSCxDQUFBLFNBQUExdEIsRUFBQSxVQUFBME4sTUFBQWdnQixFQUFBNEgsS0FBQUYsRUFBQSxHQUFBRCxFQUFBaXlCLEVBQUE1cEQsSUFBQSxHQUFBcXdCLENBQUEsS0FBQTNzQixFQUFBLFlBQUFvN0MsSUFBQSxVQUFBWSxJQUFBLFVBQUFDLElBQUEsQ0FBQXp2QixFQUFBdndCLE9BQUFtZ0QsZUFBQSxJQUFBcjhDLEVBQUEsR0FBQVQsR0FBQWt0QixFQUFBQSxFQUFBLEdBQUFsdEIsUUFBQTZtRCxFQUFBMzVCLEVBQUEsR0FBQWx0QixFQUFBLHlCQUFBa3RCLEdBQUFHLEVBQUFzdkIsRUFBQTc4QyxVQUFBZzhDLEVBQUFoOEMsVUFBQW5ELE9BQUErK0IsT0FBQWo3QixHQUFBLFNBQUFqQixFQUFBc0IsR0FBQSxPQUFBbkUsT0FBQWdqRCxlQUFBaGpELE9BQUFnakQsZUFBQTcrQyxFQUFBNjdDLElBQUE3N0MsRUFBQTgrQyxVQUFBakQsRUFBQWtLLEVBQUEvbEQsRUFBQThsRCxFQUFBLHNCQUFBOWxELEVBQUFoQixVQUFBbkQsT0FBQSsrQixPQUFBck8sR0FBQXZzQixDQUFBLFFBQUE0N0MsRUFBQTU4QyxVQUFBNjhDLEVBQUFrSyxFQUFBeDVCLEVBQUEsY0FBQXN2QixHQUFBa0ssRUFBQWxLLEVBQUEsY0FBQUQsR0FBQUEsRUFBQW54QyxZQUFBLG9CQUFBczdDLEVBQUFsSyxFQUFBaUssRUFBQSxxQkFBQUMsRUFBQXg1QixHQUFBdzVCLEVBQUF4NUIsRUFBQXU1QixFQUFBLGFBQUFDLEVBQUF4NUIsRUFBQXJ0QixFQUFBLHlCQUFBNm1ELEVBQUF4NUIsRUFBQSxvREFBQXk1QixFQUFBLGtCQUFBcHBELEVBQUFWLEVBQUE2QyxFQUFBTCxFQUFBLGNBQUFxbkQsRUFBQS9sRCxFQUFBNnpCLEVBQUEzMEIsRUFBQWt0QixHQUFBLElBQUFsd0IsRUFBQUwsT0FBQXdPLGVBQUEsSUFBQW5PLEVBQUEsZ0JBQUE4RCxHQUFBOUQsRUFBQSxFQUFBNnBELEVBQUEsU0FBQS9sRCxFQUFBNnpCLEVBQUEzMEIsRUFBQWt0QixHQUFBLEdBQUF5SCxFQUFBMzNCLEVBQUFBLEVBQUE4RCxFQUFBNnpCLEVBQUEsQ0FBQXpuQixNQUFBbE4sRUFBQTJNLFlBQUF1Z0IsRUFBQXhnQixjQUFBd2dCLEVBQUFxdUIsVUFBQXJ1QixJQUFBcHNCLEVBQUE2ekIsR0FBQTMwQixNQUFBLEtBQUE0bUQsRUFBQSxTQUFBanlCLEVBQUEzMEIsR0FBQTZtRCxFQUFBL2xELEVBQUE2ekIsRUFBQSxTQUFBN3pCLEdBQUEsWUFBQXE4QyxRQUFBeG9CLEVBQUEzMEIsRUFBQWMsRUFBQSxJQUFBOGxELEVBQUEsVUFBQUEsRUFBQSxXQUFBQSxFQUFBLGNBQUFDLEVBQUEvbEQsRUFBQTZ6QixFQUFBMzBCLEVBQUFrdEIsRUFBQSxVQUFBbTZCLEVBQUFybkQsRUFBQWt0QixFQUFBcHNCLEVBQUE2ekIsRUFBQWl5QixFQUFBbG1ELEVBQUFELEdBQUEsUUFBQXpELEVBQUFnRCxFQUFBVSxHQUFBRCxHQUFBNHNCLEVBQUFyd0IsRUFBQWtRLEtBQUEsT0FBQWxOLEdBQUEsWUFBQWMsRUFBQWQsRUFBQSxDQUFBaEQsRUFBQTgzQixLQUFBNUgsRUFBQUcsR0FBQWp3QixRQUFBQyxRQUFBZ3dCLEdBQUF6bUIsS0FBQSt0QixFQUFBaXlCLEVBQUEsVUFBQXVFLEVBQUFuckQsR0FBQSxzQkFBQWt0QixFQUFBLEtBQUFwc0IsRUFBQWtHLFVBQUEsV0FBQTVKLFFBQUEsU0FBQXUzQixFQUFBaXlCLEdBQUEsSUFBQWxtRCxFQUFBVixFQUFBcEMsTUFBQXN2QixFQUFBcHNCLEdBQUEsU0FBQThvRCxFQUFBNXBELEdBQUFxbkQsRUFBQTNtRCxFQUFBaTBCLEVBQUFpeUIsRUFBQWdELEVBQUFDLEVBQUEsT0FBQTdwRCxFQUFBLFVBQUE2cEQsRUFBQTdwRCxHQUFBcW5ELEVBQUEzbUQsRUFBQWkwQixFQUFBaXlCLEVBQUFnRCxFQUFBQyxFQUFBLFFBQUE3cEQsRUFBQSxDQUFBNHBELE9BQUEsZUFBQXRDLEVBQUEzeUIsRUFBQTd6QixHQUFBLGdCQUFBNnpCLEdBQUEsR0FBQWh3QixNQUFBeUosUUFBQXVtQixHQUFBLE9BQUFBLENBQUEsQ0FBQTR5QixDQUFBNXlCLElBQUEsU0FBQUEsRUFBQS8wQixHQUFBLElBQUFzdEIsRUFBQSxNQUFBeUgsRUFBQSx5QkFBQWoxQixRQUFBaTFCLEVBQUFqMUIsT0FBQTZLLFdBQUFvcUIsRUFBQSx1QkFBQXpILEVBQUEsS0FBQXBzQixFQUFBZCxFQUFBaEQsRUFBQXF3QixFQUFBM3NCLEVBQUEsR0FBQWxCLEdBQUEsRUFBQW9uRCxHQUFBLFNBQUE1cEQsR0FBQWt3QixFQUFBQSxFQUFBbHNCLEtBQUEyekIsSUFBQUUsS0FBQSxJQUFBajFCLEVBQUEsSUFBQWpELE9BQUF1d0IsS0FBQUEsRUFBQSxPQUFBMXRCLEdBQUEsY0FBQUEsR0FBQXNCLEVBQUE5RCxFQUFBZ0UsS0FBQWtzQixJQUFBNEgsUUFBQXAwQixFQUFBbEQsS0FBQXNELEVBQUFvTSxPQUFBeE0sRUFBQTdELFNBQUErQyxHQUFBSixHQUFBLFVBQUFtMUIsR0FBQWl5QixHQUFBLEVBQUE1bUQsRUFBQTIwQixDQUFBLGlCQUFBbjFCLEdBQUEsTUFBQTB0QixFQUFBLFNBQUFHLEVBQUFILEVBQUEsU0FBQXZ3QixPQUFBMHdCLEtBQUFBLEdBQUEsa0JBQUF1NUIsRUFBQSxNQUFBNW1ELENBQUEsU0FBQVUsQ0FBQSxFQUFBOG1ELENBQUE3eUIsRUFBQTd6QixJQUFBcW1ELEVBQUF4eUIsRUFBQTd6QixJQUFBLHFCQUFBdzlDLFVBQUEsNklBQUFtSixFQUFBLFVBQUFOLEVBQUF4eUIsRUFBQWowQixHQUFBLEdBQUFpMEIsRUFBQSxxQkFBQUEsRUFBQSxPQUFBcXlCLEVBQUFyeUIsRUFBQWowQixHQUFBLElBQUF3c0IsRUFBQSxHQUFBcHJCLFNBQUFkLEtBQUEyekIsR0FBQTV5QixNQUFBLHVCQUFBbXJCLEdBQUF5SCxFQUFBbm9CLGNBQUEwZ0IsRUFBQXlILEVBQUFub0IsWUFBQWYsTUFBQSxRQUFBeWhCLEdBQUEsUUFBQUEsRUFBQXZvQixNQUFBQyxLQUFBK3ZCLEdBQUEsY0FBQXpILEdBQUEsMkNBQUFqa0IsS0FBQWlrQixHQUFBODVCLEVBQUFyeUIsRUFBQWowQixRQUFBLFlBQUFzbUQsRUFBQXJ5QixFQUFBajBCLElBQUEsTUFBQUEsR0FBQUEsRUFBQWkwQixFQUFBOTNCLFVBQUE2RCxFQUFBaTBCLEVBQUE5M0IsUUFBQSxRQUFBaUUsRUFBQSxFQUFBZCxFQUFBMkUsTUFBQWpFLEdBQUFJLEVBQUFKLEVBQUFJLElBQUFkLEVBQUFjLEdBQUE2ekIsRUFBQTd6QixHQUFBLE9BQUFkLENBQUEsQ0F3Z0JBLFFBcmZnRCxTQUFIMG5ELEdBQWdDLElBQTFCQyxFQUFTRCxFQUFUQyxVQUNHSyxHQURnQk4sRUFBUjBELFNBQ1I5RCxHQUExQjNwQixFQUFBQSxFQUFBQSxVQUF1QixJQUFHLElBQTdDMHRCLEVBQUtyRCxFQUFBLEdBQUVzRCxFQUFRdEQsRUFBQSxHQUM2QkksRUFBQWQsR0FBZjNwQixFQUFBQSxFQUFBQSxXQUFTLEdBQU0sR0FBNUM0dEIsRUFBVW5ELEVBQUEsR0FBRW9ELEVBQWFwRCxFQUFBLEdBQ21DRyxFQUFBakIsR0FBN0IzcEIsRUFBQUEsRUFBQUEsVUFBd0IsTUFBSyxHQUE1RDh0QixFQUFXbEQsRUFBQSxHQUFFbUQsRUFBY25ELEVBQUEsR0FDaUNHLEVBQUFwQixHQUE3QjNwQixFQUFBQSxFQUFBQSxVQUF3QixNQUFLLEdBQTVEZ3VCLEVBQVdqRCxFQUFBLEdBQUVrRCxFQUFjbEQsRUFBQSxHQUMwQkcsRUFBQXZCLEdBQXhCM3BCLEVBQUFBLEVBQUFBLFVBQVMsQ0FBRXZRLEVBQUcsRUFBR3dILEVBQUcsSUFBSSxHQUFyRGkzQixFQUFVaEQsRUFBQSxHQUFFaUQsRUFBYWpELEVBQUEsR0FDMkNrRCxFQUFBekUsR0FBN0IzcEIsRUFBQUEsRUFBQUEsVUFBd0IsTUFBSyxHQUFwRXF1QixFQUFlRCxFQUFBLEdBQUVFLEVBQWtCRixFQUFBLEdBRXBDRyxFQUFhLENBQ2pCLENBQUV6Z0QsS0FBTSxTQUFVeUIsTUFBTyxVQUFXaS9DLE9BQVEsV0FDNUMsQ0FBRTFnRCxLQUFNLE9BQVF5QixNQUFPLFVBQVdpL0MsT0FBUSxXQUMxQyxDQUFFMWdELEtBQU0sT0FBUXlCLE1BQU8sVUFBV2kvQyxPQUFRLFdBQzFDLENBQUUxZ0QsS0FBTSxRQUFTeUIsTUFBTyxVQUFXaS9DLE9BQVEsV0FDM0MsQ0FBRTFnRCxLQUFNLFNBQVV5QixNQUFPLFVBQVdpL0MsT0FBUSxXQUM1QyxDQUFFMWdELEtBQU0sU0FBVXlCLE1BQU8sVUFBV2kvQyxPQUFRLFdBQzVDLENBQUUxZ0QsS0FBTSxPQUFReUIsTUFBTyxVQUFXaS9DLE9BQVEsV0FDMUMsQ0FBRTFnRCxLQUFNLE1BQU95QixNQUFPLFVBQVdpL0MsT0FBUSxZQUdyQ0MsRUFBYTVwRCxPQUFPQyxTQUFTQyxLQUM3QjJwRCxFQUFnQjdwRCxPQUFPQyxTQUFTNnBELFVBRXRDbHZCLEVBQUFBLEVBQUFBLFdBQVUsV0FDUm12QixHQUNGLEVBQUcsSUFFSCxJQUFNQSxFQUFTLGVBQUFuRCxFQUFBK0IsRUFBQXJFLElBQUFqbkQsRUFBRyxTQUFBd3BELElBQUEsSUFBQTdMLEVBQUFnUCxFQUFBQyxFQUFBaEQsRUFBQSxPQUFBM0MsSUFBQXBwRCxFQUFBLFNBQUFvTyxHQUFBLGNBQUFBLEVBQUE5TCxHQUFBLGNBQUE4TCxFQUFBM0wsRUFBQSxFQUFBMkwsRUFBQTlMLEVBQUEsRUFFTzBzRCxPQUFPQyxRQUFRQyxNQUFNbmdELElBQUkscUJBQW9CLE9BQTVEK3dDLEVBQU0xeEMsRUFBQS9ELEVBQ055a0QsRUFBV2hQLEVBQU9xUCxtQkFBcUIsR0FHdkNKLEVBQVdELEVBQVNNLE9BQU8sU0FBQ0MsR0FBZ0IsT0FDaERBLEVBQUs1bUMsTUFBUWltQyxHQUFjVyxFQUFLQyxTQUFXWCxDQUFhLEdBRzFEZixFQUFTbUIsR0FBVTNnRCxFQUFBOUwsRUFBQSxlQUFBOEwsRUFBQTNMLEVBQUEsRUFBQXNwRCxFQUFBMzlDLEVBQUEvRCxFQUVuQnpJLFFBQVFDLE1BQU0sK0JBQThCa3FELEdBQVMsY0FBQTM5QyxFQUFBcEwsRUFBQSxLQUFBMm9ELEVBQUEsaUJBRXhELGtCQWRjLE9BQUFELEVBQUF4ckQsTUFBQSxLQUFBb0osVUFBQSxLQWdCVGltRCxFQUFTLGVBQUFDLEVBQUEvQixFQUFBckUsSUFBQWpuRCxFQUFHLFNBQUFzdEQsRUFBT0MsR0FBMEIsSUFBQTVQLEVBQUFnUCxFQUFBYSxFQUFBQyxFQUFBQyxFQUFBLE9BQUF6RyxJQUFBcHBELEVBQUEsU0FBQTh2RCxHQUFBLGNBQUFBLEVBQUF4dEQsR0FBQSxjQUFBd3RELEVBQUFydEQsRUFBQSxFQUFBcXRELEVBQUF4dEQsRUFBQSxFQUUxQjBzRCxPQUFPQyxRQUFRQyxNQUFNbmdELElBQUkscUJBQW9CLE9BU2YsT0FUN0Mrd0MsRUFBTWdRLEVBQUF6bEQsRUFDTnlrRCxFQUFXaFAsRUFBT3FQLG1CQUFxQixHQUd2Q1EsRUFBYWIsRUFBU00sT0FBTyxTQUFDQyxHQUFnQixPQUNsREEsRUFBSzVtQyxNQUFRaW1DLEdBQWNXLEVBQUtDLFNBQVdYLENBQWEsR0FJcERpQixFQUFjLEdBQUhuaEMsT0FBQTQ2QixFQUFPc0csR0FBVXRHLEVBQUtxRyxJQUFZSSxFQUFBeHRELEVBQUEsRUFFN0Mwc0QsT0FBT0MsUUFBUUMsTUFBTXhoRCxJQUFJLENBQUV5aEQsa0JBQW1CUyxJQUFjLE9BQ2xFaEMsRUFBUzhCLEdBQWNJLEVBQUF4dEQsRUFBQSxlQUFBd3RELEVBQUFydEQsRUFBQSxFQUFBb3RELEVBQUFDLEVBQUF6bEQsRUFFdkJ6SSxRQUFRQyxNQUFNLCtCQUE4Qmd1RCxHQUFTLGNBQUFDLEVBQUE5c0QsRUFBQSxLQUFBeXNELEVBQUEsaUJBRXhELGdCQWxCY3JELEdBQUEsT0FBQW9ELEVBQUF0dkQsTUFBQSxLQUFBb0osVUFBQSxLQXVDVHltRCxFQUFhLFNBQUNueEQsRUFBWW94RCxHQUM5QixJQUFNTixFQUFlL0IsRUFBTXhTLElBQUksU0FBQWtVLEdBQUksT0FDakNBLEVBQUt6d0QsS0FBT0EsRUFBRXF4RCxFQUFBQSxFQUFBQSxFQUFBLEdBQ0xaLEdBQVNXLEdBQU8sSUFBRUUsVUFBVyxJQUFJNXVDLE9BQ3RDK3RDLENBQUksR0FFVkUsRUFBVUcsRUFDWixFQXNCTVMsRUFBa0IsU0FBQy9zRCxHQUN2QixHQUFJNnFELEVBQWEsQ0FDZjdxRCxFQUFFc2QsaUJBQ0YsSUFBTTB2QyxFQUFPaHRELEVBQUU2ZSxRQUFVa3NDLEVBQVd6K0IsRUFDOUIyZ0MsRUFBT2p0RCxFQUFFOGUsUUFBVWlzQyxFQUFXajNCLEVBRXBDNjRCLEVBQVc5QixFQUFhLENBQ3RCcUMsU0FBVSxDQUFFNWdDLEVBQUcwZ0MsRUFBTWw1QixFQUFHbTVCLElBRTVCLENBQ0YsRUFFTUUsRUFBZ0IsV0FDcEJyQyxFQUFlLE1BQ2ZFLEVBQWMsQ0FBRTErQixFQUFHLEVBQUd3SCxFQUFHLEdBQzNCLEVBRU1zNUIsRUFBa0IsU0FBQ3B0RCxHQWpFTixJQUFDc3NCLEVBQVd3SCxFQUN2QnU1QixFQVlBZixFQXFERjdCLEdBQWN6cUQsRUFBRTRULFNBQVk1VCxFQUFFNFQsT0FBdUIwNUMsUUFBUSx1QkFsRS9DaGhDLEVBbUVOdHNCLEVBQUU2ZSxRQW5FZWlWLEVBb0VqQjl6QixFQUFFOGUsUUFuRVJ1dUMsRUFBc0IsQ0FDMUI3eEQsR0FBSTBpQixLQUFLQyxNQUFNbmQsV0FDZjRuRCxRQUFTLEdBQ1Rsa0MsTUFBTzBtQyxFQUFXLEdBQUdoL0MsTUFDckI4Z0QsU0FBVSxDQUFFNWdDLEVBQUFBLEVBQUd3SCxFQUFBQSxHQUNmZ1EsS0FBTSxDQUFFdmhCLE1BQU8sSUFBS0MsT0FBUSxLQUM1QjZDLElBQUtpbUMsRUFDTFksT0FBUVgsRUFDUmdDLFVBQVcsSUFBSXJ2QyxLQUNmNHVDLFVBQVcsSUFBSTV1QyxNQUdYb3VDLEVBQWUsR0FBSGpoQyxPQUFBNDZCLEVBQU9zRSxHQUFLLENBQUU4QyxJQUNoQ2xCLEVBQVVHLEdBQ1YxQixFQUFleUMsRUFBUTd4RCxJQUN2Qmt2RCxHQUFjLEdBdURoQixFQTBCQSxPQXhCQXB1QixFQUFBQSxFQUFBQSxXQUFVLFdBQ1IsR0FBSXV1QixFQUlGLE9BSEFsa0QsU0FBU3FPLGlCQUFpQixZQUFhKzNDLEdBQ3ZDcG1ELFNBQVNxTyxpQkFBaUIsVUFBV200QyxHQUU5QixXQUNMeG1ELFNBQVNzTyxvQkFBb0IsWUFBYTgzQyxHQUMxQ3BtRCxTQUFTc08sb0JBQW9CLFVBQVdrNEMsRUFDMUMsQ0FFSixFQUFHLENBQUN0QyxFQUFhRSxLQUVqQnp1QixFQUFBQSxFQUFBQSxXQUFVLFdBQ1IsR0FBSW11QixFQUlGLE9BSEE5akQsU0FBU3FPLGlCQUFpQixRQUFTbzRDLEdBQ25Dem1ELFNBQVM0RixLQUFLMEYsTUFBTXU3QyxPQUFTLFlBRXRCLFdBQ0w3bUQsU0FBU3NPLG9CQUFvQixRQUFTbTRDLEdBQ3RDem1ELFNBQVM0RixLQUFLMEYsTUFBTXU3QyxPQUFTLE1BQy9CLENBRUosRUFBRyxDQUFDL0MsSUFFQzVELEdBR0hvQyxFQUFBQSxFQUFBQSxNQUFBd0UsRUFBQUEsU0FBQSxDQUFBNS9DLFNBQUEsRUFFRW83QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGtCQUFpQi8yQyxTQUFBLEVBQzlCcTdDLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVMscUJBQUF2NUIsT0FBdUJvL0IsRUFBYSxXQUFhLElBQzFEN21CLFFBQVMsV0FBRixPQUFROG1CLEdBQWVELEVBQVcsRUFDekM5a0QsTUFBTzhrRCxFQUFhLDZCQUErQixrQkFBa0I1OEMsVUFFckVxN0MsRUFBQUEsRUFBQUEsS0FBQ1ksRUFBSSxDQUFDaG1CLEtBQU0sT0FFYjJtQixJQUNDdkIsRUFBQUEsRUFBQUEsS0FBQSxPQUFLdEUsVUFBVSxnQkFBZS8yQyxTQUFDLHVEQU9sQzA4QyxFQUFNeFMsSUFBSSxTQUFBa1UsR0FBSSxJQUFBeUIsRUFBQSxPQUNiekUsRUFBQUEsRUFBQUEsTUFBQSxPQUVFckUsVUFBUyxvQkFBQXY1QixPQUFzQncvQixJQUFnQm9CLEVBQUt6d0QsR0FBSyxXQUFhLElBQ3RFeVcsTUFBTyxDQUNMb1gsS0FBTTRpQyxFQUFLaUIsU0FBUzVnQyxFQUNwQi9DLElBQUswaUMsRUFBS2lCLFNBQVNwNUIsRUFDbkJ2UixNQUFPMHBDLEVBQUtub0IsS0FBS3ZoQixNQUNqQkMsT0FBUXlwQyxFQUFLbm9CLEtBQUt0aEIsT0FDbEJtckMsZ0JBQWlCMUIsRUFBS3ZuQyxNQUN0QmtwQyxhQUF5RCxRQUE1Q0YsRUFBQXRDLEVBQVd5QyxLQUFLLFNBQUFsdUQsR0FBQyxPQUFJQSxFQUFFeU0sUUFBVTYvQyxFQUFLdm5DLEtBQUssVUFBQyxJQUFBZ3BDLE9BQUEsRUFBNUNBLEVBQThDckMsU0FBVSxXQUV2RXlDLFlBQWEsU0FBQzl0RCxHQUFDLE9BakdDLFNBQUNBLEVBQXFCK3RELEdBQzVDLEdBQUkvdEQsRUFBRTRULFNBQVc1VCxFQUFFaWQsZUFBa0JqZCxFQUFFNFQsT0FBdUIwNUMsUUFBUSxxQkFBc0IsQ0FDMUZ0dEQsRUFBRXNkLGlCQUNGd3RDLEVBQWVpRCxHQUVmLElBQU05QixFQUFPMUIsRUFBTXNELEtBQUssU0FBQTN1RCxHQUFDLE9BQUlBLEVBQUUxRCxLQUFPdXlELENBQU0sR0FDeEM5QixHQUNGakIsRUFBYyxDQUNaMStCLEVBQUd0c0IsRUFBRTZlLFFBQVVvdEMsRUFBS2lCLFNBQVM1Z0MsRUFDN0J3SCxFQUFHOXpCLEVBQUU4ZSxRQUFVbXRDLEVBQUtpQixTQUFTcDVCLEdBR25DLENBQ0YsQ0FvRjRCazZCLENBQWdCaHVELEVBQUdpc0QsRUFBS3p3RCxHQUFHLEVBQUNxUyxTQUFBLEVBR2hEbzdDLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUsK0JBQThCLzJDLFNBQUEsRUFDM0NvN0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxlQUFjLzJDLFNBQUEsRUFDM0JxN0MsRUFBQUEsRUFBQUEsS0FBQSxVQUNFdEUsVUFBVSxrQkFDVmhoQixRQUFTLFdBQUYsT0FBUXVuQixFQUFtQkQsSUFBb0JlLEVBQUt6d0QsR0FBSyxLQUFPeXdELEVBQUt6d0QsR0FBRyxFQUMvRW1LLE1BQU0sZUFBY2tJLFVBRXBCcTdDLEVBQUFBLEVBQUFBLEtBQUNhLEVBQU8sQ0FBQ2ptQixLQUFNLFFBRWpCb2xCLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVUsa0JBQ1ZoaEIsUUFBUyxXQUFGLE9BQVFnbkIsRUFBZUQsSUFBZ0JzQixFQUFLendELEdBQUssS0FBT3l3RCxFQUFLendELEdBQUcsRUFDdkVtSyxNQUFNLFlBQVdrSSxVQUVqQnE3QyxFQUFBQSxFQUFBQSxLQUFDK0UsRUFBSyxDQUFDbnFCLEtBQU0sUUFFZm9sQixFQUFBQSxFQUFBQSxLQUFBLFVBQ0V0RSxVQUFVLHlCQUNWaGhCLFFBQVMsV0FBRixPQTNIRHBvQyxFQTJIb0J5d0QsRUFBS3p3RCxHQTFIckM4d0QsRUFBZS9CLEVBQU15QixPQUFPLFNBQUFDLEdBQUksT0FBSUEsRUFBS3p3RCxLQUFPQSxDQUFFLFFBQ3hEMndELEVBQVVHLEdBRk8sSUFBQzl3RCxFQUNaOHdELENBMEh3QyxFQUNsQzNtRCxNQUFNLGNBQWFrSSxVQUVuQnE3QyxFQUFBQSxFQUFBQSxLQUFDaUIsRUFBTSxDQUFDcm1CLEtBQU0sV0FHbEJvbEIsRUFBQUEsRUFBQUEsS0FBQSxPQUFLdEUsVUFBVSxjQUFjai9DLE1BQU0sZUFBY2tJLFVBQy9DcTdDLEVBQUFBLEVBQUFBLEtBQUNrQixFQUFJLENBQUN0bUIsS0FBTSxVQUtmb25CLElBQW9CZSxFQUFLendELEtBQ3hCMHRELEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUsZUFBYy8yQyxTQUMxQnU5QyxFQUFXclQsSUFBSSxTQUFBcnpCLEdBQUssT0FDbkJ3a0MsRUFBQUEsRUFBQUEsS0FBQSxVQUVFdEUsVUFBUyxnQkFBQXY1QixPQUFrQjRnQyxFQUFLdm5DLFFBQVVBLEVBQU10WSxNQUFRLFdBQWEsSUFDckU2RixNQUFPLENBQUUwN0MsZ0JBQWlCanBDLEVBQU10WSxNQUFPd2hELFlBQWFscEMsRUFBTTJtQyxRQUMxRHpuQixRQUFTLFdBQ1Arb0IsRUFBV1YsRUFBS3p3RCxHQUFJLENBQUVrcEIsTUFBT0EsRUFBTXRZLFFBQ25DKytDLEVBQW1CLEtBQ3JCLEVBQ0F4bEQsTUFBTytlLEVBQU0vWixNQVBSK1osRUFBTXRZLE1BUVgsTUFNUjg4QyxFQUFBQSxFQUFBQSxLQUFBLE9BQUt0RSxVQUFVLGVBQWMvMkMsU0FDMUI4OEMsSUFBZ0JzQixFQUFLendELElBQ3BCMHRELEVBQUFBLEVBQUFBLEtBQUEsWUFDRTk4QyxNQUFPNi9DLEVBQUtyRCxRQUNaZSxTQUFVLFNBQUMzcEQsR0FBQyxPQUFLMnNELEVBQVdWLEVBQUt6d0QsR0FBSSxDQUFFb3RELFFBQVM1b0QsRUFBRTRULE9BQU94SCxPQUFRLEVBQ2pFOGhELE9BQVEsV0FBRixPQUFRdEQsRUFBZSxLQUFLLEVBQ2xDdUQsVUFBVyxTQUFDbnVELEdBQ0ksV0FBVkEsRUFBRVYsS0FDSnNyRCxFQUFlLEtBRW5CLEVBQ0FmLFlBQVkseUJBQ1pqRixVQUFVLGdCQUNWNWdCLFdBQVMsS0FHWGtsQixFQUFBQSxFQUFBQSxLQUFBLE9BQ0V0RSxVQUFVLFlBQ1ZoaEIsUUFBUyxXQUFGLE9BQVFnbkIsRUFBZXFCLEVBQUt6d0QsR0FBRyxFQUN0Q3lXLE1BQU8sQ0FBRXU3QyxPQUFRdkIsRUFBS3JELFFBQVUsT0FBUyxXQUFZLzZDLFNBRXBEbytDLEVBQUtyRCxTQUFXLDRCQU12Qk0sRUFBQUEsRUFBQUEsS0FBQSxPQUFLdEUsVUFBVSxjQUFhLzJDLFVBQzFCcTdDLEVBQUFBLEVBQUFBLEtBQUEsUUFBTXRFLFVBQVUsaUJBQWdCLzJDLFNBQzdCbytDLEVBQUthLFVBQVVzQiwyQkExRmZuQyxFQUFLendELEdBNkZOLElBR1IwdEQsRUFBQUEsRUFBQUEsS0FBQSxTQUFPeG9ELEtBQUcsRUFBQW1OLFNBQUEsd2hMQXZIUyxJQW9WekIsRUM5Zk13Z0QsRUFBUzdKLEVBQWlCLFNBQVUsQ0FDeEMsQ0FDRSxPQUNBLENBQ0V6a0QsRUFBRyw2RkFDSFQsSUFBSyxXQUdULENBQUMsU0FBVSxDQUFFMHFELEdBQUksS0FBTUMsR0FBSSxLQUFNcDJCLEVBQUcsSUFBS3YwQixJQUFLLGFDUjFDZ3ZELEVBQVM5SixFQUFpQixTQUFVLENBQ3hDLENBQUMsT0FBUSxDQUFFamlDLE1BQU8sS0FBTUMsT0FBUSxLQUFNOEosRUFBRyxJQUFLd0gsRUFBRyxJQUFLNnhCLEdBQUksSUFBS3JtRCxJQUFLLGFDRGhFaXZELEVBQVMvSixFQUFpQixTQUFVLENBQ3hDLENBQUMsU0FBVSxDQUFFd0YsR0FBSSxLQUFNQyxHQUFJLEtBQU1wMkIsRUFBRyxLQUFNdjBCLElBQUssYUNEM0NrdkQsRUFBYWhLLEVBQWlCLGFBQWMsQ0FDaEQsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyxXQUFZVCxJQUFLLFdBQy9CLENBQUMsT0FBUSxDQUFFUyxFQUFHLGdCQUFpQlQsSUFBSyxhQ0ZoQ212RCxFQUFPakssRUFBaUIsT0FBUSxDQUNwQyxDQUFDLFdBQVksQ0FBRVcsT0FBUSxvQkFBcUI3bEQsSUFBSyxXQUNqRCxDQUFDLE9BQVEsQ0FBRThsRCxHQUFJLElBQUtDLEdBQUksS0FBTUMsR0FBSSxLQUFNQyxHQUFJLEtBQU1qbUQsSUFBSyxXQUN2RCxDQUFDLE9BQVEsQ0FBRThsRCxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxJQUFLQyxHQUFJLEtBQU1qbUQsSUFBSyxhQ0huRG92RCxFQUFPbEssRUFBaUIsT0FBUSxDQUNwQyxDQUFDLE9BQVEsQ0FBRXprRCxFQUFHLFdBQVlULElBQUssV0FDL0IsQ0FBQyxPQUFRLENBQUVTLEVBQUcsNENBQTZDVCxJQUFLLGFDRjVEcXZELEVBQU9uSyxFQUFpQixPQUFRLENBQ3BDLENBQUMsT0FBUSxDQUFFemtELEVBQUcsYUFBY1QsSUFBSyxXQUNqQyxDQUFDLE9BQVEsQ0FBRVMsRUFBRyw0Q0FBNkNULElBQUssYUNGNURzdkQsRUFBT3BLLEVBQWlCLE9BQVEsQ0FDcEMsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyxrRUFBbUVULElBQUssV0FDdEYsQ0FBQyxXQUFZLENBQUU2bEQsT0FBUSx3QkFBeUI3bEQsSUFBSyxXQUNyRCxDQUFDLFdBQVksQ0FBRTZsRCxPQUFRLGVBQWdCN2xELElBQUssYUNIeEN1dkQsRUFBV3JLLEVBQWlCLFdBQVksQ0FDNUMsQ0FBQyxPQUFRLENBQUV6a0QsRUFBRyw0Q0FBNkNULElBQUssV0FDaEUsQ0FBQyxXQUFZLENBQUU2bEQsT0FBUSxtQkFBb0I3bEQsSUFBSyxXQUNoRCxDQUFDLE9BQVEsQ0FBRThsRCxHQUFJLEtBQU1DLEdBQUksS0FBTUMsR0FBSSxLQUFNQyxHQUFJLElBQUtqbUQsSUFBSyxhLHNpRENYekQsSUFBQVUsRUFBQW9zQixFQUFBeUgsRUFBQSxtQkFBQWoxQixPQUFBQSxPQUFBLEdBQUFNLEVBQUEyMEIsRUFBQXBxQixVQUFBLGFBQUFxOEMsRUFBQWp5QixFQUFBMG1CLGFBQUEseUJBQUFyK0MsRUFBQTIzQixFQUFBMzBCLEVBQUE0bUQsRUFBQTVwRCxHQUFBLElBQUF5RCxFQUFBVCxHQUFBQSxFQUFBRixxQkFBQWc4QyxFQUFBOTdDLEVBQUE4N0MsRUFBQXp1QixFQUFBMXdCLE9BQUErK0IsT0FBQWo3QixFQUFBWCxXQUFBLE9BQUErbUQsR0FBQXg1QixFQUFBLG1CQUFBc0gsRUFBQTMwQixFQUFBNG1ELEdBQUEsSUFBQTVwRCxFQUFBeUQsRUFBQTRzQixFQUFBN3RCLEVBQUEsRUFBQVcsRUFBQXltRCxHQUFBLEdBQUFoeUIsR0FBQSxFQUFBMUUsRUFBQSxDQUFBL3ZCLEVBQUEsRUFBQUgsRUFBQSxFQUFBK0gsRUFBQWpILEVBQUFKLEVBQUFHLEVBQUFyQixFQUFBcUIsRUFBQWtzQixLQUFBanNCLEVBQUEsR0FBQUQsRUFBQSxTQUFBcXNCLEVBQUF5SCxHQUFBLE9BQUEzM0IsRUFBQWt3QixFQUFBenNCLEVBQUEsRUFBQTRzQixFQUFBdnNCLEVBQUFvdkIsRUFBQWx3QixFQUFBMjBCLEVBQUFqMEIsQ0FBQSxZQUFBRyxFQUFBOHpCLEVBQUEzMEIsR0FBQSxJQUFBUyxFQUFBazBCLEVBQUF0SCxFQUFBcnRCLEVBQUFrdEIsRUFBQSxHQUFBMEgsR0FBQXAxQixJQUFBb25ELEdBQUExNUIsRUFBQS9zQixFQUFBdEQsT0FBQXF3QixJQUFBLEtBQUEwNUIsRUFBQTVwRCxFQUFBbUQsRUFBQStzQixHQUFBcnNCLEVBQUFxdkIsRUFBQS92QixFQUFBUCxFQUFBNUMsRUFBQSxHQUFBMjNCLEVBQUEsR0FBQWl5QixFQUFBaG5ELElBQUFJLEtBQUFxdEIsRUFBQXJ3QixHQUFBeUQsRUFBQXpELEVBQUEsT0FBQXlELEVBQUEsTUFBQXpELEVBQUEsR0FBQUEsRUFBQSxHQUFBOEQsR0FBQTlELEVBQUEsSUFBQTZELEtBQUErbEQsRUFBQWp5QixFQUFBLEdBQUE5ekIsRUFBQTdELEVBQUEsS0FBQXlELEVBQUEsRUFBQXl2QixFQUFBbm9CLEVBQUEvSCxFQUFBa3dCLEVBQUFsd0IsRUFBQWhELEVBQUEsSUFBQTZELEVBQUFqQixJQUFBZ25ELEVBQUFqeUIsRUFBQSxHQUFBMzNCLEVBQUEsR0FBQWdELEdBQUFBLEVBQUFKLEtBQUE1QyxFQUFBLEdBQUEyM0IsRUFBQTMzQixFQUFBLEdBQUFnRCxFQUFBa3dCLEVBQUFsd0IsRUFBQUosRUFBQWEsRUFBQSxPQUFBbW1ELEdBQUFqeUIsRUFBQSxTQUFBajBCLEVBQUEsTUFBQWswQixHQUFBLEVBQUE1MEIsQ0FBQSxpQkFBQTRtRCxFQUFBem1ELEVBQUFQLEdBQUEsR0FBQUosRUFBQSxRQUFBOCtDLFVBQUEsb0NBQUExcEIsR0FBQSxJQUFBejBCLEdBQUFVLEVBQUFWLEVBQUFQLEdBQUFhLEVBQUFOLEVBQUFrdEIsRUFBQXp0QixHQUFBc3RCLEVBQUF6c0IsRUFBQSxFQUFBSyxFQUFBdXNCLEtBQUF1SCxHQUFBLENBQUE1M0IsSUFBQXlELEVBQUFBLEVBQUEsR0FBQUEsRUFBQSxJQUFBeXZCLEVBQUFsd0IsR0FBQSxHQUFBYSxFQUFBSixFQUFBNHNCLElBQUE2QyxFQUFBbHdCLEVBQUFxdEIsRUFBQTZDLEVBQUFub0IsRUFBQXNsQixHQUFBLE9BQUE3dEIsRUFBQSxFQUFBeEMsRUFBQSxJQUFBeUQsSUFBQW1tRCxFQUFBLFFBQUExNUIsRUFBQWx3QixFQUFBNHBELEdBQUEsTUFBQTE1QixFQUFBQSxFQUFBbHNCLEtBQUFoRSxFQUFBcXdCLElBQUEsTUFBQWl4QixVQUFBLHdDQUFBcHhCLEVBQUE0SCxLQUFBLE9BQUE1SCxFQUFBRyxFQUFBSCxFQUFBaGdCLE1BQUF6TSxFQUFBLElBQUFBLEVBQUEsWUFBQUEsSUFBQXlzQixFQUFBbHdCLEVBQUEsU0FBQWt3QixFQUFBbHNCLEtBQUFoRSxHQUFBeUQsRUFBQSxJQUFBNHNCLEVBQUFpeEIsVUFBQSxvQ0FBQXNJLEVBQUEsWUFBQW5tRCxFQUFBLEdBQUF6RCxFQUFBOEQsQ0FBQSxVQUFBb3NCLEdBQUEwSCxFQUFBMUUsRUFBQWx3QixFQUFBLEdBQUFxdEIsRUFBQXNILEVBQUEzekIsS0FBQWhCLEVBQUFrd0IsTUFBQXh2QixFQUFBLFlBQUF3c0IsR0FBQWx3QixFQUFBOEQsRUFBQUwsRUFBQSxFQUFBNHNCLEVBQUFILENBQUEsU0FBQTF0QixFQUFBLFVBQUEwTixNQUFBZ2dCLEVBQUE0SCxLQUFBRixFQUFBLEdBQUFELEVBQUFpeUIsRUFBQTVwRCxJQUFBLEdBQUFxd0IsQ0FBQSxLQUFBM3NCLEVBQUEsWUFBQW83QyxJQUFBLFVBQUFZLElBQUEsVUFBQUMsSUFBQSxDQUFBenZCLEVBQUF2d0IsT0FBQW1nRCxlQUFBLElBQUFyOEMsRUFBQSxHQUFBVCxHQUFBa3RCLEVBQUFBLEVBQUEsR0FBQWx0QixRQUFBNm1ELEdBQUEzNUIsRUFBQSxHQUFBbHRCLEVBQUEseUJBQUFrdEIsR0FBQUcsRUFBQXN2QixFQUFBNzhDLFVBQUFnOEMsRUFBQWg4QyxVQUFBbkQsT0FBQSsrQixPQUFBajdCLEdBQUEsU0FBQWpCLEVBQUFzQixHQUFBLE9BQUFuRSxPQUFBZ2pELGVBQUFoakQsT0FBQWdqRCxlQUFBNytDLEVBQUE2N0MsSUFBQTc3QyxFQUFBOCtDLFVBQUFqRCxFQUFBa0ssR0FBQS9sRCxFQUFBOGxELEVBQUEsc0JBQUE5bEQsRUFBQWhCLFVBQUFuRCxPQUFBKytCLE9BQUFyTyxHQUFBdnNCLENBQUEsUUFBQTQ3QyxFQUFBNThDLFVBQUE2OEMsRUFBQWtLLEdBQUF4NUIsRUFBQSxjQUFBc3ZCLEdBQUFrSyxHQUFBbEssRUFBQSxjQUFBRCxHQUFBQSxFQUFBbnhDLFlBQUEsb0JBQUFzN0MsR0FBQWxLLEVBQUFpSyxFQUFBLHFCQUFBQyxHQUFBeDVCLEdBQUF3NUIsR0FBQXg1QixFQUFBdTVCLEVBQUEsYUFBQUMsR0FBQXg1QixFQUFBcnRCLEVBQUEseUJBQUE2bUQsR0FBQXg1QixFQUFBLG9EQUFBeTVCLEVBQUEsa0JBQUFwcEQsRUFBQVYsRUFBQTZDLEVBQUFMLEVBQUEsY0FBQXFuRCxHQUFBL2xELEVBQUE2ekIsRUFBQTMwQixFQUFBa3RCLEdBQUEsSUFBQWx3QixFQUFBTCxPQUFBd08sZUFBQSxJQUFBbk8sRUFBQSxnQkFBQThELEdBQUE5RCxFQUFBLEVBQUE2cEQsR0FBQSxTQUFBL2xELEVBQUE2ekIsRUFBQTMwQixFQUFBa3RCLEdBQUEsR0FBQXlILEVBQUEzM0IsRUFBQUEsRUFBQThELEVBQUE2ekIsRUFBQSxDQUFBem5CLE1BQUFsTixFQUFBMk0sWUFBQXVnQixFQUFBeGdCLGNBQUF3Z0IsRUFBQXF1QixVQUFBcnVCLElBQUFwc0IsRUFBQTZ6QixHQUFBMzBCLE1BQUEsS0FBQTRtRCxFQUFBLFNBQUFqeUIsRUFBQTMwQixHQUFBNm1ELEdBQUEvbEQsRUFBQTZ6QixFQUFBLFNBQUE3ekIsR0FBQSxZQUFBcThDLFFBQUF4b0IsRUFBQTMwQixFQUFBYyxFQUFBLElBQUE4bEQsRUFBQSxVQUFBQSxFQUFBLFdBQUFBLEVBQUEsY0FBQUMsR0FBQS9sRCxFQUFBNnpCLEVBQUEzMEIsRUFBQWt0QixFQUFBLFVBQUFtNkIsR0FBQXJuRCxFQUFBa3RCLEVBQUFwc0IsRUFBQTZ6QixFQUFBaXlCLEVBQUFsbUQsRUFBQUQsR0FBQSxRQUFBekQsRUFBQWdELEVBQUFVLEdBQUFELEdBQUE0c0IsRUFBQXJ3QixFQUFBa1EsS0FBQSxPQUFBbE4sR0FBQSxZQUFBYyxFQUFBZCxFQUFBLENBQUFoRCxFQUFBODNCLEtBQUE1SCxFQUFBRyxHQUFBandCLFFBQUFDLFFBQUFnd0IsR0FBQXptQixLQUFBK3RCLEVBQUFpeUIsRUFBQSxVQUFBdUUsR0FBQW5yRCxHQUFBLHNCQUFBa3RCLEVBQUEsS0FBQXBzQixFQUFBa0csVUFBQSxXQUFBNUosUUFBQSxTQUFBdTNCLEVBQUFpeUIsR0FBQSxJQUFBbG1ELEVBQUFWLEVBQUFwQyxNQUFBc3ZCLEVBQUFwc0IsR0FBQSxTQUFBOG9ELEVBQUE1cEQsR0FBQXFuRCxHQUFBM21ELEVBQUFpMEIsRUFBQWl5QixFQUFBZ0QsRUFBQUMsRUFBQSxPQUFBN3BELEVBQUEsVUFBQTZwRCxFQUFBN3BELEdBQUFxbkQsR0FBQTNtRCxFQUFBaTBCLEVBQUFpeUIsRUFBQWdELEVBQUFDLEVBQUEsUUFBQTdwRCxFQUFBLENBQUE0cEQsT0FBQSxlQUFBdEMsR0FBQTN5QixFQUFBN3pCLEdBQUEsZ0JBQUE2ekIsR0FBQSxHQUFBaHdCLE1BQUF5SixRQUFBdW1CLEdBQUEsT0FBQUEsQ0FBQSxDQUFBNHlCLENBQUE1eUIsSUFBQSxTQUFBQSxFQUFBLzBCLEdBQUEsSUFBQXN0QixFQUFBLE1BQUF5SCxFQUFBLHlCQUFBajFCLFFBQUFpMUIsRUFBQWoxQixPQUFBNkssV0FBQW9xQixFQUFBLHVCQUFBekgsRUFBQSxLQUFBcHNCLEVBQUFkLEVBQUFoRCxFQUFBcXdCLEVBQUEzc0IsRUFBQSxHQUFBbEIsR0FBQSxFQUFBb25ELEdBQUEsU0FBQTVwRCxHQUFBa3dCLEVBQUFBLEVBQUFsc0IsS0FBQTJ6QixJQUFBRSxLQUFBLElBQUFqMUIsRUFBQSxJQUFBakQsT0FBQXV3QixLQUFBQSxFQUFBLE9BQUExdEIsR0FBQSxjQUFBQSxHQUFBc0IsRUFBQTlELEVBQUFnRSxLQUFBa3NCLElBQUE0SCxRQUFBcDBCLEVBQUFsRCxLQUFBc0QsRUFBQW9NLE9BQUF4TSxFQUFBN0QsU0FBQStDLEdBQUFKLEdBQUEsVUFBQW0xQixHQUFBaXlCLEdBQUEsRUFBQTVtRCxFQUFBMjBCLENBQUEsaUJBQUFuMUIsR0FBQSxNQUFBMHRCLEVBQUEsU0FBQUcsRUFBQUgsRUFBQSxTQUFBdndCLE9BQUEwd0IsS0FBQUEsR0FBQSxrQkFBQXU1QixFQUFBLE1BQUE1bUQsQ0FBQSxTQUFBVSxDQUFBLEVBQUE4bUQsQ0FBQTd5QixFQUFBN3pCLElBQUFxbUQsR0FBQXh5QixFQUFBN3pCLElBQUEscUJBQUF3OUMsVUFBQSw2SUFBQW1KLEVBQUEsVUFBQU4sR0FBQXh5QixFQUFBajBCLEdBQUEsR0FBQWkwQixFQUFBLHFCQUFBQSxFQUFBLE9BQUFxeUIsR0FBQXJ5QixFQUFBajBCLEdBQUEsSUFBQXdzQixFQUFBLEdBQUFwckIsU0FBQWQsS0FBQTJ6QixHQUFBNXlCLE1BQUEsdUJBQUFtckIsR0FBQXlILEVBQUFub0IsY0FBQTBnQixFQUFBeUgsRUFBQW5vQixZQUFBZixNQUFBLFFBQUF5aEIsR0FBQSxRQUFBQSxFQUFBdm9CLE1BQUFDLEtBQUErdkIsR0FBQSxjQUFBekgsR0FBQSwyQ0FBQWprQixLQUFBaWtCLEdBQUE4NUIsR0FBQXJ5QixFQUFBajBCLFFBQUEsWUFBQXNtRCxHQUFBcnlCLEVBQUFqMEIsSUFBQSxNQUFBQSxHQUFBQSxFQUFBaTBCLEVBQUE5M0IsVUFBQTZELEVBQUFpMEIsRUFBQTkzQixRQUFBLFFBQUFpRSxFQUFBLEVBQUFkLEVBQUEyRSxNQUFBakUsR0FBQUksRUFBQUosRUFBQUksSUFBQWQsRUFBQWMsR0FBQTZ6QixFQUFBN3pCLEdBQUEsT0FBQWQsQ0FBQSxDQXE4QkEsU0FsN0JzRCxTQUFIMG5ELEdBQStCLElBQXpCQyxFQUFTRCxFQUFUQyxVQUFXQyxFQUFPRixFQUFQRSxRQUNiSSxFQUFBVixJQUFmM3BCLEVBQUFBLEVBQUFBLFdBQVMsR0FBTSxHQUE5Q2l5QixFQUFXNUgsRUFBQSxHQUFFNkgsRUFBYzdILEVBQUEsR0FDcUNJLEVBQUFkLElBQTdCM3BCLEVBQUFBLEVBQUFBLFVBQXdCLE1BQUssR0FBaEVteUIsRUFBYTFILEVBQUEsR0FBRTJILEVBQWdCM0gsRUFBQSxHQUNpQkcsRUFBQWpCLElBQWYzcEIsRUFBQUEsRUFBQUEsV0FBUyxHQUFNLEdBQWhEcXlCLEVBQVl6SCxFQUFBLEdBQUUwSCxFQUFlMUgsRUFBQSxHQUNvRUcsRUFBQXBCLElBQWhFM3BCLEVBQUFBLEVBQUFBLFVBQW9ELGFBQVksR0FBakd1eUIsRUFBWXhILEVBQUEsR0FBRXlILEVBQWV6SCxFQUFBLEdBQzRCRyxFQUFBdkIsSUFBMUIzcEIsRUFBQUEsRUFBQUEsVUFBdUIsSUFBRyxHQUF6RHl5QixFQUFXdkgsRUFBQSxHQUFFd0gsRUFBY3hILEVBQUEsR0FDZWtELEVBQUF6RSxJQUFmM3BCLEVBQUFBLEVBQUFBLFdBQVMsR0FBTSxHQUExQzJ5QixFQUFTdkUsRUFBQSxHQUFFd0UsRUFBWXhFLEVBQUEsR0FDcUR5RSxFQUFBbEosSUFBakMzcEIsRUFBQUEsRUFBQUEsVUFBNEIsTUFBSyxHQUE1RTh5QixFQUFpQkQsRUFBQSxHQUFFRSxFQUFvQkYsRUFBQSxHQUNlRyxFQUFBckosSUFBbkIzcEIsRUFBQUEsRUFBQUEsVUFBUyxXQUFVLEdBQXREaXpCLEVBQWFELEVBQUEsR0FBRUUsRUFBZ0JGLEVBQUEsR0FDV0csRUFBQXhKLElBQVgzcEIsRUFBQUEsRUFBQUEsVUFBUyxHQUFFLEdBQTFDaHJCLEVBQVdtK0MsRUFBQSxHQUFFQyxFQUFjRCxFQUFBLEdBQzJCRSxFQUFBMUosSUFBZjNwQixFQUFBQSxFQUFBQSxXQUFTLEdBQU0sR0FBdERxdUIsRUFBZWdGLEVBQUEsR0FBRS9FLEVBQWtCK0UsRUFBQSxHQUNJQyxFQUFBM0osSUFBWjNwQixFQUFBQSxFQUFBQSxVQUFTLElBQUcsR0FBdkN1ekIsRUFBU0QsRUFBQSxHQUFFRSxFQUFZRixFQUFBLEdBQzJCRyxFQUFBOUosSUFBZjNwQixFQUFBQSxFQUFBQSxXQUFTLEdBQU0sR0FBbEQwekIsRUFBYUQsRUFBQSxHQUFFRSxHQUFnQkYsRUFBQSxHQUMwQkcsR0FBQWpLLElBQXhCM3BCLEVBQUFBLEVBQUFBLFVBQVMsQ0FBRXZRLEVBQUcsRUFBR3dILEVBQUcsSUFBSSxHQUF6RDQ4QixHQUFZRCxHQUFBLEdBQUVFLEdBQWVGLEdBQUEsR0FDc0JHLEdBQUFwSyxJQUE1QjNwQixFQUFBQSxFQUFBQSxVQUF5QixJQUFHLEdBQW5EZzBCLEdBQU9ELEdBQUEsR0FBRUUsR0FBVUYsR0FBQSxHQUMwQkcsR0FBQXZLLElBQVozcEIsRUFBQUEsRUFBQUEsV0FBVSxHQUFFLEdBQTdDbTBCLEdBQVlELEdBQUEsR0FBRUUsR0FBZUYsR0FBQSxHQUU5QkcsSUFBWXQwQixFQUFBQSxFQUFBQSxRQUEwQixPQUN6QkEsRUFBQUEsRUFBQUEsUUFBdUIsT0FTMUNOLEVBQUFBLEVBQUFBLFdBQVUsV0FPUixPQUxFMzFCLFNBQVM0RixLQUFLMEYsTUFBTXU3QyxPQURsQnNCLEVBQzJCLFlBRUEsT0FHeEIsV0FDTG5vRCxTQUFTNEYsS0FBSzBGLE1BQU11N0MsT0FBUyxNQUMvQixDQUNGLEVBQUcsQ0FBQ3NCLElBRUosSUFBTXFDLEdBQWEsZUFBQTdJLEVBQUErQixHQUFBckUsSUFBQWpuRCxFQUFHLFNBQUF3cEQsSUFBQSxJQUFBNkksRUFBQUMsRUFBQTFJLEVBQUEsT0FBQTNDLElBQUFwcEQsRUFBQSxTQUFBb08sR0FBQSxjQUFBQSxFQUFBOUwsR0FBQSxPQUlsQixPQUprQjhMLEVBQUEzTCxFQUFBLEVBRWxCMHZELEdBQWUsR0FFZi9qRCxFQUFBOUwsRUFBQSxFQUNxQjIzQyxVQUFVeWEsYUFBYUMsZ0JBQWdCLENBQzFERixNQUFPLENBQUVHLFlBQWEsWUFDdEIsT0FGSUosRUFBTXBtRCxFQUFBL0QsR0FJTm9xRCxFQUFRMXFELFNBQVNDLGNBQWMsVUFDL0I2cUQsVUFBWUwsRUFDbEJDLEVBQU1LLE9BRU5MLEVBQU1yOEMsaUJBQWlCLGlCQUFrQixXQUN2QyxJQUFNMjhDLEVBQVNockQsU0FBU0MsY0FBYyxVQUN0QytxRCxFQUFPcHZDLE1BQVE4dUMsRUFBTU8sV0FDckJELEVBQU9udkMsT0FBUzZ1QyxFQUFNUSxZQUV0QixJQUFNQyxFQUFNSCxFQUFPSSxXQUFXLE1BQzlCRCxTQUFBQSxFQUFLRSxVQUFVWCxFQUFPLEVBQUcsR0FFekIsSUFBTVksRUFBVU4sRUFBT08sVUFBVSxhQUNqQ2pELEVBQWlCZ0QsR0FDakI5QyxHQUFnQixHQUNoQkosR0FBZSxHQUdmcUMsRUFBT2UsWUFBWTkwRCxRQUFRLFNBQUFnVyxHQUFLLE9BQUlBLEVBQU1rc0MsTUFBTSxFQUNsRCxHQUFHdjBDLEVBQUE5TCxFQUFBLGVBS0gsT0FMRzhMLEVBQUEzTCxFQUFBLEVBQUFzcEQsRUFBQTM5QyxFQUFBL0QsRUFFSHpJLFFBQVFDLE1BQU0sNEJBQTJCa3FELEdBQ3pDb0csR0FBZSxHQUVmL2pELEVBQUE5TCxFQUFBLEVBQ01rekQsS0FBaUIsY0FBQXBuRCxFQUFBcEwsRUFBQSxLQUFBMm9ELEVBQUEsaUJBRTFCLGtCQXBDa0IsT0FBQUQsRUFBQXhyRCxNQUFBLEtBQUFvSixVQUFBLEtBc0Nia3NELEdBQWUsZUFBQWhHLEVBQUEvQixHQUFBckUsSUFBQWpuRCxFQUFHLFNBQUFzdEQsSUFBQSxJQUFBc0YsRUFBQUcsRUFBQUcsRUFBQSxPQUFBak0sSUFBQXBwRCxFQUFBLFNBQUE4dkQsR0FBQSxjQUFBQSxFQUFBeHRELEdBQUEsT0FDdEIsSUFDUXl5RCxFQUFTaHJELFNBQVNDLGNBQWMsVUFDaENrckQsRUFBTUgsRUFBT0ksV0FBVyxNQUU5QkosRUFBT3B2QyxNQUFRN2dCLE9BQU8yd0QsV0FDdEJWLEVBQU9udkMsT0FBUzlnQixPQUFPNHdELFlBSW5CUixJQUNGQSxFQUFJUyxVQUFZLFVBQ2hCVCxFQUFJVSxTQUFTLEVBQUcsRUFBR2IsRUFBT3B2QyxNQUFPb3ZDLEVBQU9udkMsUUFDeENzdkMsRUFBSVMsVUFBWSxVQUNoQlQsRUFBSVcsS0FBTyxhQUNYWCxFQUFJWSxVQUFZLFNBQ2hCWixFQUFJYSxTQUFTLHVCQUF3QmhCLEVBQU9wdkMsTUFBUSxFQUFHb3ZDLEVBQU9udkMsT0FBUyxHQUN2RXN2QyxFQUFJYSxTQUFTLG9FQUFxRWhCLEVBQU9wdkMsTUFBUSxFQUFHb3ZDLEVBQU9udkMsT0FBUyxFQUFJLEtBR3BIeXZDLEVBQVVOLEVBQU9PLFVBQVUsYUFDakNqRCxFQUFpQmdELEdBQ2pCOUMsR0FBZ0IsR0FDaEJKLEdBQWUsRUFDakIsQ0FBRSxNQUFPdHdELEdBQ1BELFFBQVFDLE1BQU0sOEJBQStCQSxHQUM3Q3N3RCxHQUFlLEVBQ2pCLENBQUMsY0FBQXJDLEVBQUE5c0QsRUFBQSxLQUFBeXNELEVBQUEsSUFDRixrQkE1Qm9CLE9BQUFELEVBQUF0dkQsTUFBQSxLQUFBb0osVUFBQSxLQThCZjBzRCxJQUFrQngyQixFQUFBQSxFQUFBQSxhQUFZLFNBQUNwOEIsR0FDbkMsR0FBS2t2RCxHQUFpQmdDLEdBQVUxd0QsUUFBaEMsQ0FFQSxJQUFNcXlELEVBQU8zQixHQUFVMXdELFFBQVFzeUQsd0JBQ3pCeG1DLEVBQUl0c0IsRUFBRTZlLFFBQVVnMEMsRUFBS3hwQyxLQUNyQnlLLEVBQUk5ekIsRUFBRThlLFFBQVUrekMsRUFBS3RwQyxJQUUzQixHQUFxQixTQUFqQjZsQyxFQUdGLE9BRkF1QixHQUFnQixDQUFFcmtDLEVBQUFBLEVBQUd3SCxFQUFBQSxTQUNyQjA4QixJQUFpQixHQUluQixJQUFNdUMsRUFBNEIsQ0FDaEN2M0QsR0FBSTBpQixLQUFLQyxNQUFNbmQsV0FDZlgsS0FBTSt1RCxFQUNONEQsT0FBUTFtQyxFQUNSMm1DLE9BQVFuL0IsRUFDUm8vQixLQUFNNW1DLEVBQ042bUMsS0FBTXIvQixFQUNOcFAsTUFBT29yQyxFQUNQaitDLFlBQUFBLEdBR0YrOUMsRUFBcUJtRCxHQUNyQnRELEdBQWEsRUF4QmtDLENBeUJqRCxFQUFHLENBQUNQLEVBQWNFLEVBQWNVLEVBQWVqK0MsSUFFekN1aEQsSUFBbUJoM0IsRUFBQUEsRUFBQUEsYUFBWSxTQUFDcDhCLEdBQ3BDLEdBQUt3dkQsR0FBY0csR0FBc0J1QixHQUFVMXdELFFBQW5ELENBRUEsSUFBTXF5RCxFQUFPM0IsR0FBVTF3RCxRQUFRc3lELHdCQUN6QnhtQyxFQUFJdHNCLEVBQUU2ZSxRQUFVZzBDLEVBQUt4cEMsS0FDckJ5SyxFQUFJOXpCLEVBQUU4ZSxRQUFVK3pDLEVBQUt0cEMsSUFFM0JxbUMsRUFBb0IvQyxFQUFBQSxFQUFDLENBQUMsRUFDakI4QyxHQUFpQixJQUNwQnVELEtBQU01bUMsRUFDTjZtQyxLQUFNci9CLElBVDBELENBV3BFLEVBQUcsQ0FBQzA3QixFQUFXRyxJQUVUMEQsSUFBbUJqM0IsRUFBQUEsRUFBQUEsYUFBWSxXQUNuQyxHQUFLb3pCLEdBQWNHLEVBQW5CLENBRUEsSUFBTTJELEVBQWlCLEdBQUhqb0MsT0FBQTQ2QixFQUFPcUosR0FBVyxDQUFFSyxJQUN4Q0osRUFBZStELEdBR2YsSUFBTUMsRUFBYTFDLEdBQVE1dkQsTUFBTSxFQUFHK3ZELEdBQWUsR0FDbkR1QyxFQUFXNzJELEtBQUs0MkQsR0FDaEJ4QyxHQUFXeUMsR0FDWHRDLEdBQWdCc0MsRUFBV3gzRCxPQUFTLEdBRXBDNnpELEVBQXFCLE1BQ3JCSCxHQUFhLEVBWitCLENBYTlDLEVBQUcsQ0FBQ0QsRUFBV0csRUFBbUJMLEVBQWF1QixHQUFTRyxLQUVsRHdDLEdBQW9CLFdBQ3hCLEdBQUtwRCxFQUFVcG1ELE9BQWYsQ0FFQSxJQUFNeXBELEVBQTZCLENBQ2pDajRELEdBQUkwaUIsS0FBS0MsTUFBTW5kLFdBQ2ZYLEtBQU0sT0FDTjJ5RCxPQUFRdEMsR0FBYXBrQyxFQUNyQjJtQyxPQUFRdkMsR0FBYTU4QixFQUNyQm8vQixLQUFNeEMsR0FBYXBrQyxFQUNuQjZtQyxLQUFNekMsR0FBYTU4QixFQUNuQnp2QixLQUFNK3JELEVBQ04xckMsTUFBT29yQyxFQUNQaitDLFlBQUFBLEdBR0l5aEQsRUFBaUIsR0FBSGpvQyxPQUFBNDZCLEVBQU9xSixHQUFXLENBQUVtRSxJQUN4Q2xFLEVBQWUrRCxHQUdmLElBQU1DLEVBQWExQyxHQUFRNXZELE1BQU0sRUFBRyt2RCxHQUFlLEdBQ25EdUMsRUFBVzcyRCxLQUFLNDJELEdBQ2hCeEMsR0FBV3lDLEdBQ1h0QyxHQUFnQnNDLEVBQVd4M0QsT0FBUyxHQUVwQ3MwRCxFQUFhLElBQ2JHLElBQWlCLEVBeEJZLENBeUIvQixFQWlGTWtELEdBQWUsV0FDbkIsSUFBTS9CLEVBQVNULEdBQVUxd0QsUUFDekIsR0FBS214RCxHQUFXM0MsRUFBaEIsQ0FFQSxJQUFNOEMsRUFBTUgsRUFBT0ksV0FBVyxNQUM5QixHQUFLRCxFQUFMLENBRUEsSUFBTWgvQyxFQUFNLElBQUk2Z0QsTUFDaEI3Z0QsRUFBSWd3QyxPQUFTLFdBRVgsSUFBTTF6QyxFQUFjMEQsRUFBSXlQLE1BQVF6UCxFQUFJMFAsT0FDOUJveEMsRUFBb0JqQyxFQUFPcHZDLE1BQVFvdkMsRUFBT252QyxPQUU1Q3F4QyxFQUFZbEMsRUFBT3B2QyxNQUNuQnV4QyxFQUFhbkMsRUFBT252QyxPQUdwQnBULEVBQWN3a0QsRUFFaEJFLEVBQWFuQyxFQUFPcHZDLE1BQVFuVCxFQUc1QnlrRCxFQUFZbEMsRUFBT252QyxPQUFTcFQsRUFJOUIsSUFBTTJrRCxHQUFXcEMsRUFBT3B2QyxNQUFRc3hDLEdBQWEsRUFDdkNHLEdBQVdyQyxFQUFPbnZDLE9BQVNzeEMsR0FBYyxFQUcvQ2hDLEVBQUltQyxVQUFVLEVBQUcsRUFBR3RDLEVBQU9wdkMsTUFBT292QyxFQUFPbnZDLFFBR3pDc3ZDLEVBQUlvQyx1QkFBd0IsRUFDNUJwQyxFQUFJcUMsc0JBQXdCLE9BRzVCckMsRUFBSUUsVUFBVWwvQyxFQUFLaWhELEVBQVNDLEVBQVNILEVBQVdDLEdBR2hELEdBQUF6b0MsT0FBQTQ2QixFQUFJcUosR0FBVyxDQUFFSyxJQUFtQjNELE9BQU9vSSxTQUFTLzJELFFBQVEsU0FBQWczRCxJQXRHekMsU0FBQ3ZDLEVBQStCdUMsR0FLckQsT0FKQXZDLEVBQUl3QyxZQUFjRCxFQUFXM3ZDLE1BQzdCb3RDLEVBQUl5QyxVQUFZRixFQUFXeGlELFlBQzNCaWdELEVBQUkwQyxRQUFVLFFBRU5ILEVBQVdoMEQsTUFDakIsSUFBSyxZQUNIeXhELEVBQUkyQyxXQUNGSixFQUFXckIsT0FDWHFCLEVBQVdwQixPQUNYb0IsRUFBV25CLEtBQU9tQixFQUFXckIsT0FDN0JxQixFQUFXbEIsS0FBT2tCLEVBQVdwQixRQUUvQixNQUVGLElBQUssU0FDSCxJQUFNeUIsRUFBUzV6RCxLQUFLNnpELEtBQ2xCN3pELEtBQUs4ekQsSUFBSVAsRUFBV25CLEtBQU9tQixFQUFXckIsT0FBUSxHQUM5Q2x5RCxLQUFLOHpELElBQUlQLEVBQVdsQixLQUFPa0IsRUFBV3BCLE9BQVEsSUFFaERuQixFQUFJK0MsWUFDSi9DLEVBQUlnRCxJQUFJVCxFQUFXckIsT0FBUXFCLEVBQVdwQixPQUFReUIsRUFBUSxFQUFHLEVBQUk1ekQsS0FBS2kwRCxJQUNsRWpELEVBQUl6TixTQUNKLE1BRUYsSUFBSyxTQVlTLFNBQUN5TixFQUErQmtCLEVBQWdCQyxFQUFnQkMsRUFBY0MsR0FDOUYsSUFDTTZCLEVBQVFsMEQsS0FBS20wRCxNQUFNOUIsRUFBT0YsRUFBUUMsRUFBT0YsR0FHL0NsQixFQUFJK0MsWUFDSi9DLEVBQUlvRCxPQUFPbEMsRUFBUUMsR0FDbkJuQixFQUFJcUQsT0FBT2pDLEVBQU1DLEdBQ2pCckIsRUFBSXpOLFNBR0p5TixFQUFJK0MsWUFDSi9DLEVBQUlvRCxPQUFPaEMsRUFBTUMsR0FDakJyQixFQUFJcUQsT0FDRmpDLEVBYmlCLEdBYUdweUQsS0FBS3MwRCxJQUFJSixFQUFRbDBELEtBQUtpMEQsR0FBSyxHQUMvQzVCLEVBZGlCLEdBY0dyeUQsS0FBS3UwRCxJQUFJTCxFQUFRbDBELEtBQUtpMEQsR0FBSyxJQUVqRGpELEVBQUlvRCxPQUFPaEMsRUFBTUMsR0FDakJyQixFQUFJcUQsT0FDRmpDLEVBbEJpQixHQWtCR3B5RCxLQUFLczBELElBQUlKLEVBQVFsMEQsS0FBS2kwRCxHQUFLLEdBQy9DNUIsRUFuQmlCLEdBbUJHcnlELEtBQUt1MEQsSUFBSUwsRUFBUWwwRCxLQUFLaTBELEdBQUssSUFFakRqRCxFQUFJek4sUUFDTixDQWxDTWlSLENBQVV4RCxFQUFLdUMsRUFBV3JCLE9BQVFxQixFQUFXcEIsT0FBUW9CLEVBQVduQixLQUFNbUIsRUFBV2xCLE1BQ2pGLE1BRUYsSUFBSyxPQUNIckIsRUFBSVMsVUFBWThCLEVBQVczdkMsTUFDM0JvdEMsRUFBSVcsS0FBTyxHQUFIcG5DLE9BQStCLEVBQXpCZ3BDLEVBQVd4aUQsWUFBZSxZQUN4Q2lnRCxFQUFJYSxTQUFTMEIsRUFBV2h3RCxNQUFRLEdBQUlnd0QsRUFBV3JCLE9BQVFxQixFQUFXcEIsUUFHeEUsQ0FvRU1zQyxDQUFlekQsRUFBS3VDLEVBQ3RCLEVBQ0YsRUFDQXZoRCxFQUFJK3pCLElBQU1tb0IsQ0F2Q00sQ0FIcUIsQ0EyQ3ZDLEdBRUExeUIsRUFBQUEsRUFBQUEsV0FBVSxXQUNSbzNCLElBQ0YsRUFBRyxDQUFDMUUsRUFBZU0sRUFBYUssSUFFaEMsSUFVTTZGLEdBQVUsZUFBQUMsRUFBQXBMLEdBQUFyRSxJQUFBam5ELEVBQUcsU0FBQTIyRCxJQUFBLElBQUEvRCxFQUFBTSxFQUFBeEYsRUFBQSxPQUFBekcsSUFBQXBwRCxFQUFBLFNBQUErNEQsR0FBQSxjQUFBQSxFQUFBejJELEdBQUEsT0FDZSxHQUExQnl5RCxFQUFTVCxHQUFVMXdELFFBQ1osQ0FBRm0xRCxFQUFBejJELEVBQUEsZUFBQXkyRCxFQUFBLzFELEVBQUEsVUFLVCxPQUxTKzFELEVBQUF0MkQsRUFBQSxFQUdINHlELEVBQVVOLEVBQU9PLFlBRXZCeUQsRUFBQXoyRCxFQUFBLEVBQ00wc0QsT0FBT2hTLFFBQVFnYyxZQUFZLENBQy9CeDVELE9BQVEsaUJBQ1J5NUQsV0FBWTVELEVBQ1o1c0MsSUFBSzNqQixPQUFPQyxTQUFTQyxLQUNyQitELE1BQU9nQixTQUFTaEIsUUFDaEIsT0FFRm1oRCxJQUFVNk8sRUFBQXoyRCxFQUFBLGVBQUF5MkQsRUFBQXQyRCxFQUFBLEVBQUFvdEQsRUFBQWtKLEVBQUExdUQsRUFFVnpJLFFBQVFDLE1BQU0sNkJBQTRCZ3VELEdBQVMsY0FBQWtKLEVBQUEvMUQsRUFBQSxLQUFBODFELEVBQUEsaUJBRXRELGtCQW5CZSxPQUFBRCxFQUFBMzRELE1BQUEsS0FBQW9KLFVBQUEsS0FpQ2hCLE9BQUsyZ0QsR0FHSG9DLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUsdUJBQXNCLzJDLFNBQUEsQ0FDakNtaEQsR0FrQ0EvRixFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLHVCQUFzQi8yQyxTQUFBLEVBRW5DbzdDLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUscUJBQW9CLzJDLFNBQUEsRUFDakNvN0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxhQUFZLzJDLFNBQUEsRUFDekJxN0MsRUFBQUEsRUFBQUEsS0FBQSxVQUNFdEUsVUFBUyxZQUFBdjVCLE9BQStCLGNBQWpCK2pDLEVBQStCLFNBQVcsSUFDakV4ckIsUUFBUyxXQUFGLE9BQVF5ckIsRUFBZ0IsWUFBWSxFQUMzQzFwRCxNQUFNLFlBQVdrSSxVQUVqQnE3QyxFQUFBQSxFQUFBQSxLQUFDb0YsRUFBTSxDQUFDeHFCLEtBQU0sUUFFaEJvbEIsRUFBQUEsRUFBQUEsS0FBQSxVQUNFdEUsVUFBUyxZQUFBdjVCLE9BQStCLFdBQWpCK2pDLEVBQTRCLFNBQVcsSUFDOUR4ckIsUUFBUyxXQUFGLE9BQVF5ckIsRUFBZ0IsU0FBUyxFQUN4QzFwRCxNQUFNLFNBQVFrSSxVQUVkcTdDLEVBQUFBLEVBQUFBLEtBQUNxRixFQUFNLENBQUN6cUIsS0FBTSxRQUVoQm9sQixFQUFBQSxFQUFBQSxLQUFBLFVBQ0V0RSxVQUFTLFlBQUF2NUIsT0FBK0IsVUFBakIrakMsRUFBMkIsU0FBVyxJQUM3RHhyQixRQUFTLFdBQUYsT0FBUXlyQixFQUFnQixRQUFRLEVBQ3ZDMXBELE1BQU0sUUFBT2tJLFVBRWJxN0MsRUFBQUEsRUFBQUEsS0FBQ3NGLEVBQVUsQ0FBQzFxQixLQUFNLFFBRXBCb2xCLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVMsWUFBQXY1QixPQUErQixTQUFqQitqQyxFQUEwQixTQUFXLElBQzVEeHJCLFFBQVMsV0FBRixPQUFReXJCLEVBQWdCLE9BQU8sRUFDdEMxcEQsTUFBTSxPQUFNa0ksVUFFWnE3QyxFQUFBQSxFQUFBQSxLQUFDdUYsRUFBSSxDQUFDM3FCLEtBQU0sV0FJaEJtbEIsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxhQUFZLzJDLFNBQUEsRUFDekJvN0MsRUFBQUEsRUFBQUEsTUFBQSxVQUNFckUsVUFBVSxXQUNWaGhCLFFBQVMsV0FBRixPQUFRdW5CLEdBQW9CRCxFQUFnQixFQUNuRHZsRCxNQUFNLFFBQU9rSSxTQUFBLEVBRWJxN0MsRUFBQUEsRUFBQUEsS0FBQ2EsRUFBTyxDQUFDam1CLEtBQU0sTUFDZm9sQixFQUFBQSxFQUFBQSxLQUFBLE9BQ0V0RSxVQUFVLGtCQUNWM3lDLE1BQU8sQ0FBRTA3QyxnQkFBaUJtQyxRQUk3QjVFLElBQ0NqQyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLHdCQUF1Qi8yQyxTQUFBLEVBQ3BDcTdDLEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUsY0FBYS8yQyxTQWpiN0IsQ0FDYixVQUFXLFVBQVcsVUFBVyxVQUNqQyxVQUFXLFVBQVcsVUFBVyxXQWdiVGtxQyxJQUFJLFNBQUFyekIsR0FBSyxPQUNmd2tDLEVBQUFBLEVBQUFBLEtBQUEsVUFFRXRFLFVBQVMsZ0JBQUF2NUIsT0FBa0J5a0MsSUFBa0JwckMsRUFBUSxXQUFhLElBQ2xFelMsTUFBTyxDQUFFMDdDLGdCQUFpQmpwQyxHQUMxQmtmLFFBQVMsV0FDUG1zQixFQUFpQnJyQyxHQUNqQnltQyxHQUFtQixFQUNyQixFQUNBeGxELE1BQUssVUFBQTBsQixPQUFZM0csRUFBSyxVQUN0Qix1QkFBQTJHLE9BQXNCM0csRUFBSyxXQVJ0QkEsRUFTTCxNQUdOd2tDLEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUsZ0JBQWUvMkMsU0EzYnpCLENBQUMsRUFBRyxFQUFHLEVBQUcsRUFBRyxHQTRiRmtxQyxJQUFJLFNBQUF4MUIsR0FBSyxPQUNyQjJtQyxFQUFBQSxFQUFBQSxLQUFBLFVBRUV0RSxVQUFTLGlCQUFBdjVCLE9BQW1CeFosSUFBZ0IwUSxFQUFRLFdBQWEsSUFDakVxaEIsUUFBUyxXQUFGLE9BQVFxc0IsRUFBZTF0QyxFQUFNLEVBQ3BDNWMsTUFBSyxnQkFBQTBsQixPQUFrQjlJLEVBQUssTUFDNUIsNkJBQUE4SSxPQUE0QjlJLEVBQUssTUFBSzFVLFVBRXRDcTdDLEVBQUFBLEVBQUFBLEtBQUEsT0FDRXRFLFVBQVUsaUJBQ1YzeUMsTUFBTyxDQUNMc1EsTUFBTyxHQUFGOEksT0FBYSxFQUFSOUksRUFBUyxNQUNuQkMsT0FBUSxHQUFGNkksT0FBYSxFQUFSOUksRUFBUyxNQUNwQm9yQyxnQkFBaUJtQyxNQVhoQnZ0QyxFQWNFLFlBT25CMG1DLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUsYUFBWS8yQyxTQUFBLEVBQ3pCcTdDLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVUsV0FDVmhoQixRQTlTRCxXQUNQb3RCLEdBQWUsR0FDakJDLEdBQWdCRCxHQUFlLEdBQy9CekIsRUFBZXNCLEdBQVFHLEdBQWUsS0FDWixJQUFqQkEsS0FDVEMsSUFBaUIsR0FDakIxQixFQUFlLElBRW5CLEVBdVNjN2hELFNBQVVzakQsR0FBZSxFQUN6QnJyRCxNQUFNLE9BQU1rSSxVQUVacTdDLEVBQUFBLEVBQUFBLEtBQUN3RixFQUFJLENBQUM1cUIsS0FBTSxRQUVkb2xCLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVUsV0FDVmhoQixRQTVTRCxXQUNQb3RCLEdBQWVILEdBQVE5MEQsT0FBUyxJQUNsQ2sxRCxHQUFnQkQsR0FBZSxHQUMvQnpCLEVBQWVzQixHQUFRRyxHQUFlLElBRTFDLEVBd1NjdGpELFNBQVVzakQsSUFBZ0JILEdBQVE5MEQsT0FBUyxFQUMzQzRKLE1BQU0sT0FBTWtJLFVBRVpxN0MsRUFBQUEsRUFBQUEsS0FBQ3lGLEVBQUksQ0FBQzdxQixLQUFNLFdBSWhCbWxCLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUsYUFBWS8yQyxTQUFBLEVBQ3pCcTdDLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVUsbUJBQ1ZoaEIsUUFBUzR4QixHQUNUN3ZELE1BQU0sZUFBY2tJLFVBRXBCcTdDLEVBQUFBLEVBQUFBLEtBQUMwRixFQUFJLENBQUM5cUIsS0FBTSxRQUVkb2xCLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRFLFVBQVUsV0FDVmhoQixRQXRNYSxXQUN6QixJQUFNK3RCLEVBQVNULEdBQVUxd0QsUUFDekIsR0FBS214RCxFQUFMLENBRUEsSUFBTTErQyxFQUFPdE0sU0FBU0MsY0FBYyxLQUNwQ3FNLEVBQUs2aUQsU0FBVyxtQkFBSHpxQyxRQUFzQixJQUFJbk4sTUFBTzYzQyxjQUFjOTBELE1BQU0sRUFBRyxJQUFHLFFBQ3hFZ1MsRUFBS3JSLEtBQU8rdkQsRUFBT08sWUFDbkJqL0MsRUFBSytpRCxPQUxjLENBTXJCLEVBK0xjcndELE1BQU0sV0FBVWtJLFVBRWhCcTdDLEVBQUFBLEVBQUFBLEtBQUMyRixFQUFRLENBQUMvcUIsS0FBTSxRQUVsQm9sQixFQUFBQSxFQUFBQSxLQUFBLFVBQ0V0RSxVQUFVLFdBQ1ZoaEIsUUE5S0ksV0FDaEJxckIsRUFBaUIsTUFDakJFLEdBQWdCLEdBQ2hCSSxFQUFlLElBQ2Z1QixHQUFXLElBQ1hHLElBQWlCLEdBQ2pCckIsRUFBcUIsTUFDckJILEdBQWEsR0FDYmUsSUFBaUIsR0FDakJILEVBQWEsR0FDZixFQXFLYzFxRCxNQUFNLGlCQUFnQmtJLFVBRXRCcTdDLEVBQUFBLEVBQUFBLEtBQUNtRixFQUFNLENBQUN2cUIsS0FBTSxRQUVoQm9sQixFQUFBQSxFQUFBQSxLQUFBLFVBQ0V0RSxVQUFVLGtCQUNWaGhCLFFBQVNrakIsRUFDVG5oRCxNQUFNLFFBQU9rSSxVQUVicTdDLEVBQUFBLEVBQUFBLEtBQUN6akIsRUFBQyxDQUFDM0IsS0FBTSxjQU1mb2xCLEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUsbUJBQWtCLzJDLFVBQy9CcTdDLEVBQUFBLEVBQUFBLEtBQUEsVUFDRTNwRCxJQUFLMnhELEdBQ0wzdUMsTUFBTyxJQUNQQyxPQUFRLElBQ1JzckMsWUFBYThFLEdBQ2JxRCxZQUFhN0MsR0FDYjhDLFVBQVc3QyxHQUNYcGhELE1BQU8sQ0FBRXU3QyxPQUFRMEIsRUFBZSxZQUFjLGVBS2pEcUIsSUFDQ3JILEVBQUFBLEVBQUFBLEtBQUEsT0FBS3RFLFVBQVUsbUJBQWtCLzJDLFVBQy9CbzdDLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUscUJBQW9CLzJDLFNBQUEsRUFDakNxN0MsRUFBQUEsRUFBQUEsS0FBQSxNQUFBcjdDLFNBQUksY0FDSnE3QyxFQUFBQSxFQUFBQSxLQUFBLFNBQ0U3b0QsS0FBSyxPQUNMK0wsTUFBT2drRCxFQUNQekcsU0FBVSxTQUFDM3BELEdBQUMsT0FBS3F3RCxFQUFhcndELEVBQUU0VCxPQUFPeEgsTUFBTSxFQUM3Q3k5QyxZQUFZLGdCQUNaN2xCLFdBQVMsRUFDVDRsQixXQUFZLFNBQUM1cEQsR0FDRyxVQUFWQSxFQUFFVixJQUNKazBELEtBQ21CLFdBQVZ4ekQsRUFBRVYsTUFDWGt4RCxJQUFpQixHQUNqQkgsRUFBYSxJQUVqQixLQUVGcEgsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxxQkFBb0IvMkMsU0FBQSxFQUNqQ3E3QyxFQUFBQSxFQUFBQSxLQUFBLFVBQVF0bEIsUUFBUzR2QixHQUFtQjVPLFVBQVUsY0FBYS8yQyxTQUFDLGNBRzVEcTdDLEVBQUFBLEVBQUFBLEtBQUEsVUFDRXRsQixRQUFTLFdBQ1A0c0IsSUFBaUIsR0FDakJILEVBQWEsR0FDZixFQUNBekwsVUFBVSxnQkFBZS8yQyxTQUMxQix1QkF0TlhvN0MsRUFBQUEsRUFBQUEsTUFBQSxPQUFLckUsVUFBVSxvQkFBbUIvMkMsU0FBQSxFQUNoQ283QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGVBQWMvMkMsU0FBQSxFQUMzQm83QyxFQUFBQSxFQUFBQSxNQUFBLE9BQUtyRSxVQUFVLGlCQUFnQi8yQyxTQUFBLEVBQzdCcTdDLEVBQUFBLEVBQUFBLEtBQUNtRixFQUFNLENBQUN2cUIsS0FBTSxNQUNkb2xCLEVBQUFBLEVBQUFBLEtBQUEsTUFBQXI3QyxTQUFJLHFCQUNKcTdDLEVBQUFBLEVBQUFBLEtBQUEsS0FBQXI3QyxTQUFHLG1EQUVMbzdDLEVBQUFBLEVBQUFBLE1BQUEsT0FBS3JFLFVBQVUsa0JBQWlCLzJDLFNBQUEsRUFDOUJvN0MsRUFBQUEsRUFBQUEsTUFBQSxVQUNFckUsVUFBVSxzQkFDVmhoQixRQUFTdXRCLEdBQ1R6akQsU0FBVW9oRCxFQUFZamhELFNBQUEsRUFFdEJxN0MsRUFBQUEsRUFBQUEsS0FBQ21GLEVBQU0sQ0FBQ3ZxQixLQUFNLEtBQ2JnckIsRUFBYyxlQUFpQixxQkFFbEM3RixFQUFBQSxFQUFBQSxNQUFBLFVBQ0VyRSxVQUFVLHdCQUNWaGhCLFFBQVN3dUIsR0FDVDFrRCxTQUFVb2hELEVBQVlqaEQsU0FBQSxFQUV0QnE3QyxFQUFBQSxFQUFBQSxLQUFDb0YsRUFBTSxDQUFDeHFCLEtBQU0sS0FBTSw2QkFLMUJvbEIsRUFBQUEsRUFBQUEsS0FBQSxVQUFRdEUsVUFBVSxZQUFZaGhCLFFBQVNrakIsRUFBU25oRCxNQUFNLHdCQUF1QmtJLFVBQzNFcTdDLEVBQUFBLEVBQUFBLEtBQUN6akIsRUFBQyxDQUFDM0IsS0FBTSxXQXFNZm9sQixFQUFBQSxFQUFBQSxLQUFBLFNBQU94b0QsS0FBRyxFQUFBbU4sU0FBQSwyN1BBdE9TLElBa2tCekIsRSxzUUNuOEJBLElBQUE3TixFQUFBb3NCLEVBQUF5SCxFQUFBLG1CQUFBajFCLE9BQUFBLE9BQUEsR0FBQU0sRUFBQTIwQixFQUFBcHFCLFVBQUEsYUFBQXE4QyxFQUFBanlCLEVBQUEwbUIsYUFBQSx5QkFBQXIrQyxFQUFBMjNCLEVBQUEzMEIsRUFBQTRtRCxFQUFBNXBELEdBQUEsSUFBQXlELEVBQUFULEdBQUFBLEVBQUFGLHFCQUFBZzhDLEVBQUE5N0MsRUFBQTg3QyxFQUFBenVCLEVBQUExd0IsT0FBQSsrQixPQUFBajdCLEVBQUFYLFdBQUEsT0FBQSttRCxHQUFBeDVCLEVBQUEsbUJBQUFzSCxFQUFBMzBCLEVBQUE0bUQsR0FBQSxJQUFBNXBELEVBQUF5RCxFQUFBNHNCLEVBQUE3dEIsRUFBQSxFQUFBVyxFQUFBeW1ELEdBQUEsR0FBQWh5QixHQUFBLEVBQUExRSxFQUFBLENBQUEvdkIsRUFBQSxFQUFBSCxFQUFBLEVBQUErSCxFQUFBakgsRUFBQUosRUFBQUcsRUFBQXJCLEVBQUFxQixFQUFBa3NCLEtBQUFqc0IsRUFBQSxHQUFBRCxFQUFBLFNBQUFxc0IsRUFBQXlILEdBQUEsT0FBQTMzQixFQUFBa3dCLEVBQUF6c0IsRUFBQSxFQUFBNHNCLEVBQUF2c0IsRUFBQW92QixFQUFBbHdCLEVBQUEyMEIsRUFBQWowQixDQUFBLFlBQUFHLEVBQUE4ekIsRUFBQTMwQixHQUFBLElBQUFTLEVBQUFrMEIsRUFBQXRILEVBQUFydEIsRUFBQWt0QixFQUFBLEdBQUEwSCxHQUFBcDFCLElBQUFvbkQsR0FBQTE1QixFQUFBL3NCLEVBQUF0RCxPQUFBcXdCLElBQUEsS0FBQTA1QixFQUFBNXBELEVBQUFtRCxFQUFBK3NCLEdBQUFyc0IsRUFBQXF2QixFQUFBL3ZCLEVBQUFQLEVBQUE1QyxFQUFBLEdBQUEyM0IsRUFBQSxHQUFBaXlCLEVBQUFobkQsSUFBQUksS0FBQXF0QixFQUFBcndCLEdBQUF5RCxFQUFBekQsRUFBQSxPQUFBeUQsRUFBQSxNQUFBekQsRUFBQSxHQUFBQSxFQUFBLEdBQUE4RCxHQUFBOUQsRUFBQSxJQUFBNkQsS0FBQStsRCxFQUFBanlCLEVBQUEsR0FBQTl6QixFQUFBN0QsRUFBQSxLQUFBeUQsRUFBQSxFQUFBeXZCLEVBQUFub0IsRUFBQS9ILEVBQUFrd0IsRUFBQWx3QixFQUFBaEQsRUFBQSxJQUFBNkQsRUFBQWpCLElBQUFnbkQsRUFBQWp5QixFQUFBLEdBQUEzM0IsRUFBQSxHQUFBZ0QsR0FBQUEsRUFBQUosS0FBQTVDLEVBQUEsR0FBQTIzQixFQUFBMzNCLEVBQUEsR0FBQWdELEVBQUFrd0IsRUFBQWx3QixFQUFBSixFQUFBYSxFQUFBLE9BQUFtbUQsR0FBQWp5QixFQUFBLFNBQUFqMEIsRUFBQSxNQUFBazBCLEdBQUEsRUFBQTUwQixDQUFBLGlCQUFBNG1ELEVBQUF6bUQsRUFBQVAsR0FBQSxHQUFBSixFQUFBLFFBQUE4K0MsVUFBQSxvQ0FBQTFwQixHQUFBLElBQUF6MEIsR0FBQVUsRUFBQVYsRUFBQVAsR0FBQWEsRUFBQU4sRUFBQWt0QixFQUFBenRCLEdBQUFzdEIsRUFBQXpzQixFQUFBLEVBQUFLLEVBQUF1c0IsS0FBQXVILEdBQUEsQ0FBQTUzQixJQUFBeUQsRUFBQUEsRUFBQSxHQUFBQSxFQUFBLElBQUF5dkIsRUFBQWx3QixHQUFBLEdBQUFhLEVBQUFKLEVBQUE0c0IsSUFBQTZDLEVBQUFsd0IsRUFBQXF0QixFQUFBNkMsRUFBQW5vQixFQUFBc2xCLEdBQUEsT0FBQTd0QixFQUFBLEVBQUF4QyxFQUFBLElBQUF5RCxJQUFBbW1ELEVBQUEsUUFBQTE1QixFQUFBbHdCLEVBQUE0cEQsR0FBQSxNQUFBMTVCLEVBQUFBLEVBQUFsc0IsS0FBQWhFLEVBQUFxd0IsSUFBQSxNQUFBaXhCLFVBQUEsd0NBQUFweEIsRUFBQTRILEtBQUEsT0FBQTVILEVBQUFHLEVBQUFILEVBQUFoZ0IsTUFBQXpNLEVBQUEsSUFBQUEsRUFBQSxZQUFBQSxJQUFBeXNCLEVBQUFsd0IsRUFBQSxTQUFBa3dCLEVBQUFsc0IsS0FBQWhFLEdBQUF5RCxFQUFBLElBQUE0c0IsRUFBQWl4QixVQUFBLG9DQUFBc0ksRUFBQSxZQUFBbm1ELEVBQUEsR0FBQXpELEVBQUE4RCxDQUFBLFVBQUFvc0IsR0FBQTBILEVBQUExRSxFQUFBbHdCLEVBQUEsR0FBQXF0QixFQUFBc0gsRUFBQTN6QixLQUFBaEIsRUFBQWt3QixNQUFBeHZCLEVBQUEsWUFBQXdzQixHQUFBbHdCLEVBQUE4RCxFQUFBTCxFQUFBLEVBQUE0c0IsRUFBQUgsQ0FBQSxTQUFBMXRCLEVBQUEsVUFBQTBOLE1BQUFnZ0IsRUFBQTRILEtBQUFGLEVBQUEsR0FBQUQsRUFBQWl5QixFQUFBNXBELElBQUEsR0FBQXF3QixDQUFBLEtBQUEzc0IsRUFBQSxZQUFBbzdDLElBQUEsVUFBQVksSUFBQSxVQUFBQyxJQUFBLENBQUF6dkIsRUFBQXZ3QixPQUFBbWdELGVBQUEsSUFBQXI4QyxFQUFBLEdBQUFULEdBQUFrdEIsRUFBQUEsRUFBQSxHQUFBbHRCLFFBQUE2bUQsR0FBQTM1QixFQUFBLEdBQUFsdEIsRUFBQSx5QkFBQWt0QixHQUFBRyxFQUFBc3ZCLEVBQUE3OEMsVUFBQWc4QyxFQUFBaDhDLFVBQUFuRCxPQUFBKytCLE9BQUFqN0IsR0FBQSxTQUFBakIsRUFBQXNCLEdBQUEsT0FBQW5FLE9BQUFnakQsZUFBQWhqRCxPQUFBZ2pELGVBQUE3K0MsRUFBQTY3QyxJQUFBNzdDLEVBQUE4K0MsVUFBQWpELEVBQUFrSyxHQUFBL2xELEVBQUE4bEQsRUFBQSxzQkFBQTlsRCxFQUFBaEIsVUFBQW5ELE9BQUErK0IsT0FBQXJPLEdBQUF2c0IsQ0FBQSxRQUFBNDdDLEVBQUE1OEMsVUFBQTY4QyxFQUFBa0ssR0FBQXg1QixFQUFBLGNBQUFzdkIsR0FBQWtLLEdBQUFsSyxFQUFBLGNBQUFELEdBQUFBLEVBQUFueEMsWUFBQSxvQkFBQXM3QyxHQUFBbEssRUFBQWlLLEVBQUEscUJBQUFDLEdBQUF4NUIsR0FBQXc1QixHQUFBeDVCLEVBQUF1NUIsRUFBQSxhQUFBQyxHQUFBeDVCLEVBQUFydEIsRUFBQSx5QkFBQTZtRCxHQUFBeDVCLEVBQUEsb0RBQUF5NUIsR0FBQSxrQkFBQXBwRCxFQUFBVixFQUFBNkMsRUFBQUwsRUFBQSxjQUFBcW5ELEdBQUEvbEQsRUFBQTZ6QixFQUFBMzBCLEVBQUFrdEIsR0FBQSxJQUFBbHdCLEVBQUFMLE9BQUF3TyxlQUFBLElBQUFuTyxFQUFBLGdCQUFBOEQsR0FBQTlELEVBQUEsRUFBQTZwRCxHQUFBLFNBQUEvbEQsRUFBQTZ6QixFQUFBMzBCLEVBQUFrdEIsR0FBQSxHQUFBeUgsRUFBQTMzQixFQUFBQSxFQUFBOEQsRUFBQTZ6QixFQUFBLENBQUF6bkIsTUFBQWxOLEVBQUEyTSxZQUFBdWdCLEVBQUF4Z0IsY0FBQXdnQixFQUFBcXVCLFVBQUFydUIsSUFBQXBzQixFQUFBNnpCLEdBQUEzMEIsTUFBQSxLQUFBNG1ELEVBQUEsU0FBQWp5QixFQUFBMzBCLEdBQUE2bUQsR0FBQS9sRCxFQUFBNnpCLEVBQUEsU0FBQTd6QixHQUFBLFlBQUFxOEMsUUFBQXhvQixFQUFBMzBCLEVBQUFjLEVBQUEsSUFBQThsRCxFQUFBLFVBQUFBLEVBQUEsV0FBQUEsRUFBQSxjQUFBQyxHQUFBL2xELEVBQUE2ekIsRUFBQTMwQixFQUFBa3RCLEVBQUEsVUFBQW02QixHQUFBcm5ELEVBQUFrdEIsRUFBQXBzQixFQUFBNnpCLEVBQUFpeUIsRUFBQWxtRCxFQUFBRCxHQUFBLFFBQUF6RCxFQUFBZ0QsRUFBQVUsR0FBQUQsR0FBQTRzQixFQUFBcndCLEVBQUFrUSxLQUFBLE9BQUFsTixHQUFBLFlBQUFjLEVBQUFkLEVBQUEsQ0FBQWhELEVBQUE4M0IsS0FBQTVILEVBQUFHLEdBQUFqd0IsUUFBQUMsUUFBQWd3QixHQUFBem1CLEtBQUErdEIsRUFBQWl5QixFQUFBLFVBQUF1RSxHQUFBbnJELEdBQUEsc0JBQUFrdEIsRUFBQSxLQUFBcHNCLEVBQUFrRyxVQUFBLFdBQUE1SixRQUFBLFNBQUF1M0IsRUFBQWl5QixHQUFBLElBQUFsbUQsRUFBQVYsRUFBQXBDLE1BQUFzdkIsRUFBQXBzQixHQUFBLFNBQUE4b0QsRUFBQTVwRCxHQUFBcW5ELEdBQUEzbUQsRUFBQWkwQixFQUFBaXlCLEVBQUFnRCxFQUFBQyxFQUFBLE9BQUE3cEQsRUFBQSxVQUFBNnBELEVBQUE3cEQsR0FBQXFuRCxHQUFBM21ELEVBQUFpMEIsRUFBQWl5QixFQUFBZ0QsRUFBQUMsRUFBQSxRQUFBN3BELEVBQUEsQ0FBQTRwRCxPQUFBLGVBQUFxTixHQUFBbjJELEVBQUE2ekIsR0FBQSxRQUFBekgsRUFBQSxFQUFBQSxFQUFBeUgsRUFBQTkzQixPQUFBcXdCLElBQUEsS0FBQTA1QixFQUFBanlCLEVBQUF6SCxHQUFBMDVCLEVBQUFqNkMsV0FBQWk2QyxFQUFBajZDLGFBQUEsRUFBQWk2QyxFQUFBbDZDLGNBQUEsWUFBQWs2QyxJQUFBQSxFQUFBckwsVUFBQSxHQUFBNStDLE9BQUF3TyxlQUFBckssRUFBQW8yRCxHQUFBdFEsRUFBQXhtRCxLQUFBd21ELEVBQUEsV0FBQXVRLEdBQUFyMkQsRUFBQTZ6QixFQUFBekgsR0FBQSxPQUFBeUgsRUFBQXVpQyxHQUFBdmlDLE1BQUE3ekIsRUFBQW5FLE9BQUF3TyxlQUFBckssRUFBQTZ6QixFQUFBLENBQUF6bkIsTUFBQWdnQixFQUFBdmdCLFlBQUEsRUFBQUQsY0FBQSxFQUFBNnVDLFVBQUEsSUFBQXo2QyxFQUFBNnpCLEdBQUF6SCxFQUFBcHNCLENBQUEsVUFBQW8yRCxHQUFBaHFDLEdBQUEsSUFBQWx3QixFQUFBLFNBQUFrd0IsR0FBQSxhQUFBa3FDLEdBQUFscUMsS0FBQUEsRUFBQSxPQUFBQSxFQUFBLElBQUFwc0IsRUFBQW9zQixFQUFBeHRCLE9BQUEyM0QsYUFBQSxZQUFBdjJELEVBQUEsS0FBQTlELEVBQUE4RCxFQUFBRSxLQUFBa3NCLEVBQUF5SCxVQUFBLGFBQUF5aUMsR0FBQXA2RCxHQUFBLE9BQUFBLEVBQUEsVUFBQXNoRCxVQUFBLHVEQUFBejdCLE9BQUFxSyxFQUFBLENBQUFvcUMsQ0FBQXBxQyxHQUFBLGdCQUFBa3FDLEdBQUFwNkQsR0FBQUEsRUFBQUEsRUFBQSxHQU1PLElBbVpNdTZELEdBQWlCLElBblpILFdBUXpCLE9BZEZ6MkQsRUFVRSxTQUFBMDJELEtBVkYsU0FBQTkyRCxFQUFBVixHQUFBLEtBQUFVLGFBQUFWLEdBQUEsVUFBQXMrQyxVQUFBLHFDQVVnQm1aLENBQUEsS0FBQUQsR0FBQUwsR0FBQSxpQkFIVyxNQUFJQSxHQUFBLHlCQUNGLEdBR3pCdDVELEtBQUs2NUQsZUFDUCxFQVpGL2lDLEVBY0UsRUFBQXYwQixJQUFBLGdCQUFBOE0sT0FBQXlxRCxFQUFBeE0sR0FBQXJFLEtBQUFqbkQsRUFHQSxTQUFBd3BELElBQUEsSUFBQUksRUFBQSxPQUFBM0MsS0FBQXBwRCxFQUFBLFNBQUFvTyxHQUFBLGNBQUFBLEVBQUE5TCxHQUFBLGNBQUE4TCxFQUFBM0wsRUFBQSxFQUFBMkwsRUFBQTlMLEVBQUEsR0FFMkI4M0MsRUFBQUEsR0FBQUEsY0FBYSxPQUFNLE9BQTFDajZDLEtBQUsrNUQsVUFBUzlyRCxFQUFBL0QsRUFDZGxLLEtBQUtnNkQsa0JBQW1CLEVBQ3hCdjRELFFBQVFyRCxJQUFJLDBDQUEwQzZQLEVBQUE5TCxFQUFBLGVBQUE4TCxFQUFBM0wsRUFBQSxFQUFBc3BELEVBQUEzOUMsRUFBQS9ELEVBRXREekksUUFBUUMsTUFBTSxtREFBa0RrcUQsR0FBUyxjQUFBMzlDLEVBQUFwTCxFQUFBLEtBQUEyb0QsRUFBQSxpQkFFNUUsV0FSMEIsT0FBQXNPLEVBQUEvNUQsTUFBQyxLQUFEb0osVUFBQSxJQVUzQixDQUFBNUcsSUFBQSxvQkFBQThNLE9BQUE0cUQsRUFBQTNNLEdBQUFyRSxLQUFBam5ELEVBR0EsU0FBQXN0RCxFQUF3QjRLLEdBQWlCLElBQUFqVyxFQUFBa1csRUFBQUMsRUFBQTl5RCxFQUFBK3lELEVBQUFDLEVBQUE1SyxFQUFBLE9BQUF6RyxLQUFBcHBELEVBQUEsU0FBQTh2RCxHQUFBLGNBQUFBLEVBQUF4dEQsR0FBQSxPQUVYLEdBRDVCVixRQUFRckQsSUFBSSxrREFDTjZsRCxFQUFZOWlDLEtBQUtDLE1BQUt1dUMsRUFBQXJ0RCxFQUFBLEVBR3JCdEMsS0FBS2c2RCxpQkFBa0IsQ0FBRnJLLEVBQUF4dEQsRUFBQSxlQUFBd3RELEVBQUF4dEQsRUFBQSxFQUNsQm5DLEtBQUs2NUQsZ0JBQWUsT0FHTixHQUFsQk0sRUFBZ0IsSUFDaEJuNkQsS0FBSys1RCxVQUFXLENBQUZwSyxFQUFBeHRELEVBQUEsZUFBQXd0RCxFQUFBeHRELEVBQUEsRUFDaUJuQyxLQUFLKzVELFVBQVUzeEQsVUFBVTh4RCxHQUFVLE9BQUFFLEVBQUF6SyxFQUFBemxELEVBQXBENUMsRUFBSTh5RCxFQUFadnpELEtBQVFTLEtBQ2hCNnlELEVBQWdCN3lELEVBQUsyRixPQUFPLGNBQUEwaUQsRUFBQXh0RCxFQUFBLEVBSUxuQyxLQUFLdTZELG1CQUFtQkwsR0FBVSxPQUd1RCxPQUg1R0csRUFBVTFLLEVBQUF6bEQsRUFFVm93RCxFQUFpQm41QyxLQUFLQyxNQUFRNmlDLEVBQ3BDeGlELFFBQVFyRCxJQUFJLG9DQUFEa3dCLE9BQXFDZ3NDLEVBQWMsa0JBQUFoc0MsT0FBaUI2ckMsRUFBY243RCxPQUFNLGdCQUFlMndELEVBQUE5c0QsRUFBQSxFQUUzRyxDQUNMUyxLQUFNLFFBQ05rM0QsYUFBY04sRUFDZEMsY0FBQUEsRUFDQU0sU0FBVSxDQUNSQyxTQUFVLGNBQUZwc0MsT0FBZ0JuTixLQUFLQyxNQUFLLFFBQ2xDaTVDLFdBQUFBLEVBQ0FNLGlCQUFrQkwsRUFDbEJNLGNBQWVULEVBQWNuN0QsT0FBUyxFQUFJLEdBQU0sTUFFbkQsT0FFOEQsT0FGOUQyd0QsRUFBQXJ0RCxFQUFBLEVBQUFvdEQsRUFBQUMsRUFBQXpsRCxFQUVEekksUUFBUUMsTUFBTSx5Q0FBd0NndUQsR0FBU0MsRUFBQTlzRCxFQUFBLEVBQ3hELENBQ0xTLEtBQU0sUUFDTmszRCxhQUFjTixFQUNkQyxjQUFlLEdBQ2ZNLFNBQVUsQ0FDUkMsU0FBVSxjQUFGcHNDLE9BQWdCbk4sS0FBS0MsTUFBSyxRQUNsQzFmLE1BQU9ndUQsRUFBTXRwRCxXQUVoQixFQUFBa3BELEVBQUEsaUJBRUosU0E1Q3NCckQsR0FBQSxPQUFBZ08sRUFBQWw2RCxNQUFDLEtBQURvSixVQUFBLElBOEN2QixDQUFBNUcsSUFBQSxtQkFBQThNLE9BQUF3ckQsRUFBQXZOLEdBQUFyRSxLQUFBam5ELEVBR0EsU0FBQTIyRCxFQUF1Qm1DLEdBQWUsSUFBQTdXLEVBQUFrVyxFQUFBWSxFQUFBVCxFQUFBVSxFQUFBLE9BQUEvUixLQUFBcHBELEVBQUEsU0FBQSs0RCxHQUFBLGNBQUFBLEVBQUF6MkQsR0FBQSxPQU1aLEdBTHhCVixRQUFRckQsSUFBSSx5Q0FDTjZsRCxFQUFZOWlDLEtBQUtDLE1BQUt3M0MsRUFBQXQyRCxFQUFBLEVBSXRCNjNELEVBQWdCLEtBRWhCLDRCQUE2QngxRCxXQUFVLHNCQUF1QkEsUUFBTSxDQUFBaTBELEVBQUF6MkQsRUFBQSxlQUFBeTJELEVBQUF6MkQsRUFBQSxFQUNoRG5DLEtBQUtpN0Qsd0JBQXdCSCxHQUFVLE9BQTdEWCxFQUFhdkIsRUFBQTF1RCxFQUFBLFVBSVZpd0QsRUFBZSxDQUFGdkIsRUFBQXoyRCxFQUFBLGVBQUF5MkQsRUFBQXoyRCxFQUFBLEVBQ01uQyxLQUFLazdELHNCQUFzQkosR0FBVSxPQUEzRFgsRUFBYXZCLEVBQUExdUQsRUFBQSxjQUFBMHVELEVBQUF6MkQsRUFBRyxFQUdLbkMsS0FBS203RCxpQkFBaUJMLEdBQVUsT0FHNkIsT0FIOUVDLEVBQVFuQyxFQUFBMXVELEVBQ1Jvd0QsRUFBaUJuNUMsS0FBS0MsTUFBUTZpQyxFQUVwQ3hpRCxRQUFRckQsSUFBSSxvREFBRGt3QixPQUFxRGdzQyxFQUFjLE9BQU0xQixFQUFBLzFELEVBQUEsRUFFN0UsQ0FDTFMsS0FBTSxRQUNOazNELGFBQWNNLEVBQ2RYLGNBQUFBLEVBQ0FNLFNBQVUsQ0FDUkMsU0FBVSxjQUFGcHNDLE9BQWdCbk4sS0FBS0MsTUFBSyxTQUNsQzI1QyxTQUFBQSxFQUNBSyxTQUFVTixFQUFVeDNELEtBQ3BCeWpDLEtBQU0rekIsRUFBVS96QixLQUNoQjR6QixpQkFBa0JMLEtBRXJCLE9BRW1FLE9BRm5FMUIsRUFBQXQyRCxFQUFBLEVBQUEwNEQsRUFBQXBDLEVBQUExdUQsRUFFRHpJLFFBQVFDLE1BQU0sOENBQTZDczVELEdBQVNwQyxFQUFBLzFELEVBQUEsRUFDN0QsQ0FDTFMsS0FBTSxRQUNOazNELGFBQWNNLEVBQ2RYLGNBQWUsR0FDZk0sU0FBVSxDQUNSQyxTQUFVLGNBQUZwc0MsT0FBZ0JuTixLQUFLQyxNQUFLLFNBQ2xDMWYsTUFBT3M1RCxFQUFNNTBELFdBRWhCLEVBQUF1eUQsRUFBQSxpQkFFSixTQTlDcUIwQyxHQUFBLE9BQUFSLEVBQUE5NkQsTUFBQyxLQUFEb0osVUFBQSxJQWdEdEIsQ0FBQTVHLElBQUEsYUFBQThNLE9BQUFpc0QsRUFBQWhPLEdBQUFyRSxLQUFBam5ELEVBR0EsU0FBQXU1RCxFQUFpQkMsR0FBb0IsSUFBQUMsRUFBQSxPQUFBeFMsS0FBQXBwRCxFQUFBLFNBQUE2N0QsR0FBQSxjQUFBQSxFQUFBdjVELEdBQUEsT0FFUCxNQUQ1QlYsUUFBUXJELElBQUksa0NBQ00raUIsS0FBS0MsTUFBS3M2QyxFQUFBcDVELEVBQUEsRUFLcEIsSUFBSWxDLE1BQU0sdUdBQXNHLE9BZ0J2RCxPQWhCdURzN0QsRUFBQXA1RCxFQUFBLEVBQUFtNUQsRUFBQUMsRUFBQXh4RCxFQWdCdEh6SSxRQUFRQyxNQUFNLHlDQUF3Qys1RCxHQUFTQyxFQUFBNzRELEVBQUEsRUFDeEQsQ0FDTFMsS0FBTSxNQUNOazNELGFBQWNnQixFQUNkckIsY0FBZSxHQUNmTSxTQUFVLENBQ1JDLFNBQVUsWUFBRnBzQyxPQUFjbk4sS0FBS0MsTUFBSyxRQUNoQzJsQixLQUFNeTBCLEVBQVFHLFdBQ2RqNkQsTUFBTys1RCxFQUFNcjFELFdBRWhCLEVBQUFtMUQsRUFBQSxpQkFFSixTQW5DZUssR0FBQSxPQUFBTixFQUFBdjdELE1BQUMsS0FBRG9KLFVBQUEsSUFxQ2hCLENBQUE1RyxJQUFBLGVBQUE4TSxPQUFBd3NELEVBQUF2TyxHQUFBckUsS0FBQWpuRCxFQUdBLFNBQUE4NUQsRUFBbUJDLEVBQW1CQyxHQUFtQixJQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBakMsRUFBQWtDLEVBQUF0MUQsRUFBQTZnQixFQUFBMDBDLEVBQUEsT0FBQXJULEtBQUFwcEQsRUFBQSxTQUFBMDhELEdBQUEsY0FBQUEsRUFBQXA2RCxHQUFBLE9Ba0JQLE9BakJoRFYsUUFBUXJELElBQUksb0NBQW9DbStELEVBQUFqNkQsRUFBQSxFQUl4QzY1RCxFQUFTLElBQUlLLFdBQ2JKLEVBQU1ELEVBQU9NLGdCQUFnQlYsRUFBVyxjQUcxQnZzQixpQkFBaUIsaUJBQzdCbHZDLFFBQVEsU0FBQTh0QyxHQUFFLE9BQUlBLEVBQUdzdUIsUUFBUSxHQUUzQnZDLEdBQXdCLFFBQVI4QixFQUFBRyxFQUFJNXNELFlBQUksSUFBQXlzRCxHQUFhLFFBQWJBLEVBQVJBLEVBQVUvcUQsbUJBQVcsSUFBQStxRCxPQUFBLEVBQXJCQSxFQUF1Qmh2RCxTQUFVLEdBR2pEb3ZELEdBQW1ELFFBQXpDSCxFQUFBRSxFQUFJTyxjQUFjLCtCQUF1QixJQUFBVCxPQUFBLEVBQXpDQSxFQUEyQ1UsYUFBYSxjQUN6RFosYUFBYSxFQUFiQSxFQUFlSyxVQUFXLGtCQUNuQ3QxRCxHQUFPaTFELGFBQWEsRUFBYkEsRUFBZWoxRCxPQUFRLGlCQUM5QjZnQixHQUFPbzBDLGFBQWEsRUFBYkEsRUFBZXAwQyxPQUFRLElBQUl6RyxLQUFNbzdDLEVBQUExNUQsRUFBQSxFQUV2QyxDQUNMUyxLQUFNLFFBQ05rM0QsYUFBY3VCLEVBQ2Q1QixjQUFBQSxFQUNBTSxTQUFVLENBQ1I0QixRQUFBQSxFQUNBdDFELEtBQUFBLEVBQ0E4MUQsWUFBYWoxQyxFQUNiazFDLFVBQVczQyxFQUFjeHZELE1BQU0sT0FBTzNMLFVBRXpDLE9BRWdFLE9BRmhFdTlELEVBQUFqNkQsRUFBQSxFQUFBZzZELEVBQUFDLEVBQUFyeUQsRUFFRHpJLFFBQVFDLE1BQU0sMkNBQTBDNDZELEdBQVNDLEVBQUExNUQsRUFBQSxFQUMxRCxDQUNMUyxLQUFNLFFBQ05rM0QsYUFBY3VCLEVBQ2Q1QixjQUFlLEdBQ2ZNLFNBQVUsQ0FDUi80RCxNQUFPNDZELEVBQU1sMkQsV0FFaEIsRUFBQTAxRCxFQUFBLGlCQUVKLFNBMUNpQmlCLEVBQUFDLEdBQUEsT0FBQW5CLEVBQUE5N0QsTUFBQyxLQUFEb0osVUFBQSxJQTRDbEIsQ0FBQTVHLElBQUEsb0JBQUE4TSxPQUFBNHRELEVBQUEzUCxHQUFBckUsS0FBQWpuRCxFQUdBLFNBQUFrN0QsRUFBd0JDLEVBQWtCQyxFQUFrQkMsR0FBa0IsSUFBQUMsRUFBQW5CLEVBQUFDLEVBQUFqQyxFQUFBb0QsRUFBQVYsRUFBQVcsRUFBQUMsRUFBQSxPQUFBeFUsS0FBQXBwRCxFQUFBLFNBQUE2OUQsR0FBQSxjQUFBQSxFQUFBdjdELEdBQUEsT0FDNUVWLFFBQVFyRCxJQUFJLDhCQUFEa3dCLE9BQStCOHVDLEVBQVEsVUFBU00sRUFBQXA3RCxFQUFBLEVBR25ENjVELEVBQVMsSUFBSUssVUFDYkosRUFBTUQsRUFBT00sZ0JBQWdCVSxFQUFVLGFBR3pDaEQsRUFBZ0IsR0FDaEJvRCxFQUFTLEdBQUVDLEVBR1BKLEVBQVN4eUQsY0FBYTh5RCxFQUFBdjdELEVBQ3ZCLFlBRHVCcTdELEdBRXZCLE1BRFNBLEVBQUEsRUFNVCxhQUxHQSxFQUtPLEVBSVYsV0FKVUEsRUFJRixpQkFOZ0MsT0FGM0NyRCxFQUFnQm42RCxLQUFLMjlELHNCQUFzQnZCLEdBQzNDbUIsRUFBU3Y5RCxLQUFLNDlELHFCQUFxQnhCLEdBQ25DUyxFQUFjNzhELEtBQUs2OUQsbUJBQW1CekIsR0FBS3NCLEVBQUE3NkQsRUFBQSxZQUlGLE9BRHpDczNELEVBQWdCbjZELEtBQUs4OUQsdUJBQXVCMUIsR0FDNUNtQixFQUFTdjlELEtBQUsrOUQsc0JBQXNCM0IsR0FBS3NCLEVBQUE3NkQsRUFBQSxZQUlGLE9BRHZDczNELEVBQWdCbjZELEtBQUtnK0QscUJBQXFCNUIsR0FDMUNtQixFQUFTdjlELEtBQUtpK0Qsb0JBQW9CN0IsR0FBS3NCLEVBQUE3NkQsRUFBQSxZQUl2Q3MzRCxHQUF3QixRQUFSbUQsRUFBQWxCLEVBQUk1c0QsWUFBSSxJQUFBOHRELEdBQWEsUUFBYkEsRUFBUkEsRUFBVXBzRCxtQkFBVyxJQUFBb3NELE9BQUEsRUFBckJBLEVBQXVCcndELFNBQVUsR0FBRyxjQUFBeXdELEVBQUE3NkQsRUFBQSxFQUdqRCxDQUNMUyxLQUFNLFNBQ05rM0QsYUFBYzJDLEVBQ2RoRCxjQUFBQSxFQUNBTSxTQUFVLENBQ1IyQyxTQUFBQSxFQUNBRyxPQUFRQSxJQUFVRixhQUFZLEVBQVpBLEVBQWNFLFFBQ2hDVixZQUFhQSxJQUFlUSxhQUFZLEVBQVpBLEVBQWNSLGFBQzFDQyxVQUFXM0MsRUFBY3h2RCxNQUFNLE9BQU8zTCxVQUV6QyxPQUUyRSxPQUYzRTArRCxFQUFBcDdELEVBQUEsRUFBQW03RCxFQUFBQyxFQUFBeHpELEVBRUR6SSxRQUFRQyxNQUFNLG1CQUFENHNCLE9BQW9COHVDLEVBQVEsNEJBQUFLLEdBQW1DQyxFQUFBNzZELEVBQUEsRUFDckUsQ0FDTFMsS0FBTSxTQUNOazNELGFBQWMyQyxFQUNkaEQsY0FBZSxHQUNmTSxTQUFVLENBQ1IyQyxTQUFBQSxFQUNBMTdELE1BQU8rN0QsRUFBTXIzRCxXQUVoQixFQUFBODJELEVBQUEsaUJBRUosU0F2RHNCZ0IsRUFBQUMsRUFBQUMsR0FBQSxPQUFBbkIsRUFBQWw5RCxNQUFDLEtBQURvSixVQUFBLElBeUR2QixDQUFBNUcsSUFBQSxtQkFBQThNLE1BR0EsU0FBaUJ3OEMsRUFBdUJ3UyxHQUN0QyxJQUdJbkosRUFDQW9KLEVBSkU3L0QsRUFBSyxHQUFINnZCLE9BQU0rdkMsRUFBTSxLQUFBL3ZDLE9BQUl1OUIsRUFBUXZvRCxLQUFJLEtBQUFnckIsT0FBSW5OLEtBQUtDLE9Ba0I3QyxNQVpvQyxpQkFBekJ5cUMsRUFBUTJPLGFBQ2pCdEYsRUFBVXJKLEVBQVEyTyxhQUNUM08sRUFBUTJPLHdCQUF3QjlXLE9BR3JDbUksRUFBUTJPLGFBQWF6ekIsS0FBTyxRQUM5Qm11QixFQUFVeHdELElBQUltL0MsZ0JBQWdCZ0ksRUFBUTJPLGNBRXRDOEQsRUFBYSxlQUFIaHdDLE9BQWtCK3ZDLEVBQU0sS0FBQS92QyxPQUFJN3ZCLElBSW5DLENBQ0xBLEdBQUFBLEVBQ0E2RSxLQUFNdW9ELEVBQVF2b0QsS0FDZG8zRCxTQUFVN08sRUFBUTRPLFNBQVNDLFVBQVksR0FBSnBzQyxPQUFPdTlCLEVBQVF2b0QsS0FBSSxLQUFBZ3JCLE9BQUluTixLQUFLQyxPQUMvRGc2QyxTQUFVdlAsRUFBUTRPLFNBQVNXLFVBQVlwN0QsS0FBS3UrRCxZQUFZMVMsRUFBUXZvRCxNQUNoRXlqQyxLQUFNOGtCLEVBQVE0TyxTQUFTMXpCLE1BQVEsRUFDL0JtdUIsUUFBQUEsRUFDQW9KLFdBQUFBLEVBQ0FuRSxjQUFldE8sRUFBUXNPLGNBQ3ZCTSxTQUFVNU8sRUFBUTRPLFNBQ2xCakssVUFBVyxJQUFJcnZDLEtBRW5CLEdBRUEsQ0FBQTVlLElBQUEscUJBQUE4TSxPQUFBbXZELEVBQUFsUixHQUFBckUsS0FBQWpuRCxFQUNBLFNBQUF5OEQsRUFBaUN2RSxHQUFpQixPQUFBalIsS0FBQXBwRCxFQUFBLFNBQUE2K0QsR0FBQSxjQUFBQSxFQUFBdjhELEVBQUEsT0FBQXU4RCxFQUFBNzdELEVBQUEsRUFDekMsSUFBSXRELFFBQVEsU0FBQ0MsR0FDbEIsSUFBTXVXLEVBQU0sSUFBSTZnRCxNQUNoQjdnRCxFQUFJZ3dDLE9BQVMsa0JBQU12bUQsRUFBUSxDQUFFZ21CLE1BQU96UCxFQUFJeVAsTUFBT0MsT0FBUTFQLEVBQUkwUCxRQUFTLEVBQ3BFMVAsRUFBSTdQLFFBQVUsa0JBQU0xRyxFQUFRLENBQUVnbUIsTUFBTyxFQUFHQyxPQUFRLEdBQUksRUFDcEQxUCxFQUFJK3pCLElBQU1vd0IsQ0FDWixHQUFFLEVBQUF1RSxFQUFBLElBQ0gsU0FQK0JFLEdBQUEsT0FBQUgsRUFBQXorRCxNQUFDLEtBQURvSixVQUFBLEtBQUE1RyxJQUFBLG1CQUFBOE0sT0FBQXV2RCxFQUFBdFIsR0FBQXJFLEtBQUFqbkQsRUFTaEMsU0FBQTY4RCxFQUErQi9ELEdBQWUsT0FBQTdSLEtBQUFwcEQsRUFBQSxTQUFBaS9ELEdBQUEsY0FBQUEsRUFBQTM4RCxFQUFBLE9BQUEyOEQsRUFBQWo4RCxFQUFBLEVBQ3JDLElBQUl0RCxRQUFRLFNBQUNDLEdBQ2xCLElBQU11L0QsRUFBUSxJQUFJQyxNQUNsQkQsRUFBTUUsaUJBQW1CLGtCQUFNei9ELEVBQVF1L0QsRUFBTWhFLFNBQVMsRUFDdERnRSxFQUFNNzRELFFBQVUsa0JBQU0xRyxFQUFRLEVBQUUsRUFDaEN1L0QsRUFBTWoxQixJQUFNcGxDLElBQUltL0MsZ0JBQWdCaVgsRUFDbEMsR0FBRSxFQUFBK0QsRUFBQSxJQUNILFNBUDZCSyxHQUFBLE9BQUFOLEVBQUE3K0QsTUFBQyxLQUFEb0osVUFBQSxLQUFBNUcsSUFBQSwwQkFBQThNLE9BQUE4dkQsRUFBQTdSLEdBQUFyRSxLQUFBam5ELEVBUzlCLFNBQUFvOUQsRUFBc0N0RSxHQUFlLE9BQUE3UixLQUFBcHBELEVBQUEsU0FBQXcvRCxHQUFBLGNBQUFBLEVBQUFsOUQsRUFBQSxPQUFBazlELEVBQUF4OEQsRUFBQSxFQUc1QyxJQUFJdEQsUUFBUSxTQUFDQyxHQUVsQkEsRUFBUSxHQUNWLEdBQUUsRUFBQTQvRCxFQUFBLElBQ0gsU0FQb0NFLEdBQUEsT0FBQUgsRUFBQXAvRCxNQUFDLEtBQURvSixVQUFBLEtBQUE1RyxJQUFBLHdCQUFBOE0sT0FBQWt3RCxFQUFBalMsR0FBQXJFLEtBQUFqbkQsRUFTckMsU0FBQXc5RCxFQUFvQzFFLEdBQWUsT0FBQTdSLEtBQUFwcEQsRUFBQSxTQUFBNC9ELEdBQUEsY0FBQUEsRUFBQXQ5RCxFQUd3QixPQUF6RVYsUUFBUXJELElBQUksNkRBQTZEcWhFLEVBQUE1OEQsRUFBQSxFQUNsRSxHQUFFLEVBQUEyOEQsRUFBQSxJQUNWLFNBTGtDRSxHQUFBLE9BQUFILEVBQUF4L0QsTUFBQyxLQUFEb0osVUFBQSxLQUFBNUcsSUFBQSx3QkFBQThNLE1BT25DLFNBQThCK3NELEdBQXVCLElBQUF1RCxFQUU3Q0MsRUFBWXhELEVBQUlPLGNBQWMsNkJBQ3BDLE9BQU9pRCxTQUFzQixRQUFiRCxFQUFUQyxFQUFXMXVELG1CQUFXLElBQUF5dUQsT0FBQSxFQUF0QkEsRUFBd0IxeUQsU0FBVSxFQUMzQyxHQUFDLENBQUExSyxJQUFBLHVCQUFBOE0sTUFFRCxTQUE2QitzRCxHQUF1QixJQUFBeUQsRUFDNUNDLEVBQWdCMUQsRUFBSU8sY0FBYyw2QkFDeEMsT0FBT21ELFNBQTBCLFFBQWJELEVBQWJDLEVBQWU1dUQsbUJBQVcsSUFBQTJ1RCxPQUFBLEVBQTFCQSxFQUE0QjV5RCxTQUFVLEVBQy9DLEdBQUMsQ0FBQTFLLElBQUEscUJBQUE4TSxNQUVELFNBQTJCK3NELEdBQ3pCLElBQU0yRCxFQUFjM0QsRUFBSU8sY0FBYyxRQUNoQzkwQyxFQUFXazRDLGFBQVcsRUFBWEEsRUFBYW5ELGFBQWEsWUFDM0MsT0FBTy8wQyxFQUFXLElBQUkxRyxLQUFLMEcsUUFBWWkxQixDQUN6QyxHQUFDLENBQUF2NkMsSUFBQSx5QkFBQThNLE1BRUQsU0FBK0Irc0QsR0FBdUIsSUFBQTRELEVBRTlDQyxFQUFpQjdELEVBQUlPLGNBQWMsdUNBQ3pDLE9BQU9zRCxTQUEyQixRQUFiRCxFQUFkQyxFQUFnQi91RCxtQkFBVyxJQUFBOHVELE9BQUEsRUFBM0JBLEVBQTZCL3lELFNBQVUsRUFDaEQsR0FBQyxDQUFBMUssSUFBQSx3QkFBQThNLE1BRUQsU0FBOEIrc0QsR0FBdUIsSUFBQThELEVBQzdDSixFQUFnQjFELEVBQUlPLGNBQWMsNEJBQ3hDLE9BQU9tRCxTQUEwQixRQUFiSSxFQUFiSixFQUFlNXVELG1CQUFXLElBQUFndkQsT0FBQSxFQUExQkEsRUFBNEJqekQsU0FBVSxFQUMvQyxHQUFDLENBQUExSyxJQUFBLHVCQUFBOE0sTUFFRCxTQUE2QitzRCxHQUF1QixJQUFBK0QsRUFFNUNDLEVBQVVoRSxFQUFJTyxjQUFjLFdBQ2xDLE9BQU95RCxTQUFvQixRQUFiRCxFQUFQQyxFQUFTbHZELG1CQUFXLElBQUFpdkQsT0FBQSxFQUFwQkEsRUFBc0JsekQsU0FBVSxFQUN6QyxHQUFDLENBQUExSyxJQUFBLHNCQUFBOE0sTUFFRCxTQUE0QitzRCxHQUF1QixJQUFBaUUsRUFDM0NQLEVBQWdCMUQsRUFBSU8sY0FBYyxrQkFDeEMsT0FBT21ELFNBQTBCLFFBQWJPLEVBQWJQLEVBQWU1dUQsbUJBQVcsSUFBQW12RCxPQUFBLEVBQTFCQSxFQUE0QnB6RCxTQUFVLEVBQy9DLEdBQUMsQ0FBQTFLLElBQUEsY0FBQThNLE1BRUQsU0FBb0IvTCxHQVNsQixNQVJrQixDQUNoQixNQUFTLFlBQ1QsTUFBUyxhQUNULE1BQVMsYUFDVCxJQUFPLGtCQUNQLE1BQVMsWUFDVCxPQUFVLGFBRUtBLElBQVMsMEJBQzVCLEdBRUEsQ0FBQWYsSUFBQSxVQUFBOE0sT0FBQWl4RCxFQUFBaFQsR0FBQXJFLEtBQUFqbkQsRUFHQSxTQUFBdStELElBQUEsT0FBQXRYLEtBQUFwcEQsRUFBQSxTQUFBMmdFLEdBQUEsY0FBQUEsRUFBQXIrRCxHQUFBLFdBQ01uQyxLQUFLKzVELFVBQVcsQ0FBRnlHLEVBQUFyK0QsRUFBQSxlQUFBcStELEVBQUFyK0QsRUFBQSxFQUNWbkMsS0FBSys1RCxVQUFVMTVELFlBQVcsT0FDaENMLEtBQUsrNUQsVUFBWSxLQUNqQi81RCxLQUFLZzZELGtCQUFtQixFQUFNLGNBQUF3RyxFQUFBMzlELEVBQUEsS0FBQTA5RCxFQUFBLFNBRWpDLFdBTlksT0FBQUQsRUFBQXZnRSxNQUFDLEtBQURvSixVQUFBLEtBL1lmMnRCLEdBQUFzaUMsR0FBQW4yRCxFQUFBaEIsVUFBQTYwQixHQUFBaDRCLE9BQUF3TyxlQUFBckssRUFBQSxhQUFBeTZDLFVBQUEsSUFBQXo2QyxFQUFBLElBQUFBLEVBQUE2ekIsRUE0WUV3cEMsRUFuRXFDZixFQVRQSixFQVRFUCxFQURoQ0osRUFoR0F2QixFQS9DQXBCLEVBeENBUCxFQW5EQVQsRUFqREFaLEVBYkFILENBaVlhLENBellZLEksY0NOM0IsSUFBQTcyRCxFQUFBb3NCLEVBQUF5SCxFQUFBLG1CQUFBajFCLE9BQUFBLE9BQUEsR0FBQU0sRUFBQTIwQixFQUFBcHFCLFVBQUEsYUFBQXE4QyxFQUFBanlCLEVBQUEwbUIsYUFBQSx5QkFBQXIrQyxFQUFBMjNCLEVBQUEzMEIsRUFBQTRtRCxFQUFBNXBELEdBQUEsSUFBQXlELEVBQUFULEdBQUFBLEVBQUFGLHFCQUFBZzhDLEVBQUE5N0MsRUFBQTg3QyxFQUFBenVCLEVBQUExd0IsT0FBQSsrQixPQUFBajdCLEVBQUFYLFdBQUEsT0FBQSttRCxHQUFBeDVCLEVBQUEsbUJBQUFzSCxFQUFBMzBCLEVBQUE0bUQsR0FBQSxJQUFBNXBELEVBQUF5RCxFQUFBNHNCLEVBQUE3dEIsRUFBQSxFQUFBVyxFQUFBeW1ELEdBQUEsR0FBQWh5QixHQUFBLEVBQUExRSxFQUFBLENBQUEvdkIsRUFBQSxFQUFBSCxFQUFBLEVBQUErSCxFQUFBakgsRUFBQUosRUFBQUcsRUFBQXJCLEVBQUFxQixFQUFBa3NCLEtBQUFqc0IsRUFBQSxHQUFBRCxFQUFBLFNBQUFxc0IsRUFBQXlILEdBQUEsT0FBQTMzQixFQUFBa3dCLEVBQUF6c0IsRUFBQSxFQUFBNHNCLEVBQUF2c0IsRUFBQW92QixFQUFBbHdCLEVBQUEyMEIsRUFBQWowQixDQUFBLFlBQUFHLEVBQUE4ekIsRUFBQTMwQixHQUFBLElBQUFTLEVBQUFrMEIsRUFBQXRILEVBQUFydEIsRUFBQWt0QixFQUFBLEdBQUEwSCxHQUFBcDFCLElBQUFvbkQsR0FBQTE1QixFQUFBL3NCLEVBQUF0RCxPQUFBcXdCLElBQUEsS0FBQTA1QixFQUFBNXBELEVBQUFtRCxFQUFBK3NCLEdBQUFyc0IsRUFBQXF2QixFQUFBL3ZCLEVBQUFQLEVBQUE1QyxFQUFBLEdBQUEyM0IsRUFBQSxHQUFBaXlCLEVBQUFobkQsSUFBQUksS0FBQXF0QixFQUFBcndCLEdBQUF5RCxFQUFBekQsRUFBQSxPQUFBeUQsRUFBQSxNQUFBekQsRUFBQSxHQUFBQSxFQUFBLEdBQUE4RCxHQUFBOUQsRUFBQSxJQUFBNkQsS0FBQStsRCxFQUFBanlCLEVBQUEsR0FBQTl6QixFQUFBN0QsRUFBQSxLQUFBeUQsRUFBQSxFQUFBeXZCLEVBQUFub0IsRUFBQS9ILEVBQUFrd0IsRUFBQWx3QixFQUFBaEQsRUFBQSxJQUFBNkQsRUFBQWpCLElBQUFnbkQsRUFBQWp5QixFQUFBLEdBQUEzM0IsRUFBQSxHQUFBZ0QsR0FBQUEsRUFBQUosS0FBQTVDLEVBQUEsR0FBQTIzQixFQUFBMzNCLEVBQUEsR0FBQWdELEVBQUFrd0IsRUFBQWx3QixFQUFBSixFQUFBYSxFQUFBLE9BQUFtbUQsR0FBQWp5QixFQUFBLFNBQUFqMEIsRUFBQSxNQUFBazBCLEdBQUEsRUFBQTUwQixDQUFBLGlCQUFBNG1ELEVBQUF6bUQsRUFBQVAsR0FBQSxHQUFBSixFQUFBLFFBQUE4K0MsVUFBQSxvQ0FBQTFwQixHQUFBLElBQUF6MEIsR0FBQVUsRUFBQVYsRUFBQVAsR0FBQWEsRUFBQU4sRUFBQWt0QixFQUFBenRCLEdBQUFzdEIsRUFBQXpzQixFQUFBLEVBQUFLLEVBQUF1c0IsS0FBQXVILEdBQUEsQ0FBQTUzQixJQUFBeUQsRUFBQUEsRUFBQSxHQUFBQSxFQUFBLElBQUF5dkIsRUFBQWx3QixHQUFBLEdBQUFhLEVBQUFKLEVBQUE0c0IsSUFBQTZDLEVBQUFsd0IsRUFBQXF0QixFQUFBNkMsRUFBQW5vQixFQUFBc2xCLEdBQUEsT0FBQTd0QixFQUFBLEVBQUF4QyxFQUFBLElBQUF5RCxJQUFBbW1ELEVBQUEsUUFBQTE1QixFQUFBbHdCLEVBQUE0cEQsR0FBQSxNQUFBMTVCLEVBQUFBLEVBQUFsc0IsS0FBQWhFLEVBQUFxd0IsSUFBQSxNQUFBaXhCLFVBQUEsd0NBQUFweEIsRUFBQTRILEtBQUEsT0FBQTVILEVBQUFHLEVBQUFILEVBQUFoZ0IsTUFBQXpNLEVBQUEsSUFBQUEsRUFBQSxZQUFBQSxJQUFBeXNCLEVBQUFsd0IsRUFBQSxTQUFBa3dCLEVBQUFsc0IsS0FBQWhFLEdBQUF5RCxFQUFBLElBQUE0c0IsRUFBQWl4QixVQUFBLG9DQUFBc0ksRUFBQSxZQUFBbm1ELEVBQUEsR0FBQXpELEVBQUE4RCxDQUFBLFVBQUFvc0IsR0FBQTBILEVBQUExRSxFQUFBbHdCLEVBQUEsR0FBQXF0QixFQUFBc0gsRUFBQTN6QixLQUFBaEIsRUFBQWt3QixNQUFBeHZCLEVBQUEsWUFBQXdzQixHQUFBbHdCLEVBQUE4RCxFQUFBTCxFQUFBLEVBQUE0c0IsRUFBQUgsQ0FBQSxTQUFBMXRCLEVBQUEsVUFBQTBOLE1BQUFnZ0IsRUFBQTRILEtBQUFGLEVBQUEsR0FBQUQsRUFBQWl5QixFQUFBNXBELElBQUEsR0FBQXF3QixDQUFBLEtBQUEzc0IsRUFBQSxZQUFBbzdDLElBQUEsVUFBQVksSUFBQSxVQUFBQyxJQUFBLENBQUF6dkIsRUFBQXZ3QixPQUFBbWdELGVBQUEsSUFBQXI4QyxFQUFBLEdBQUFULEdBQUFrdEIsRUFBQUEsRUFBQSxHQUFBbHRCLFFBQUE2bUQsR0FBQTM1QixFQUFBLEdBQUFsdEIsRUFBQSx5QkFBQWt0QixHQUFBRyxFQUFBc3ZCLEVBQUE3OEMsVUFBQWc4QyxFQUFBaDhDLFVBQUFuRCxPQUFBKytCLE9BQUFqN0IsR0FBQSxTQUFBakIsRUFBQXNCLEdBQUEsT0FBQW5FLE9BQUFnakQsZUFBQWhqRCxPQUFBZ2pELGVBQUE3K0MsRUFBQTY3QyxJQUFBNzdDLEVBQUE4K0MsVUFBQWpELEVBQUFrSyxHQUFBL2xELEVBQUE4bEQsRUFBQSxzQkFBQTlsRCxFQUFBaEIsVUFBQW5ELE9BQUErK0IsT0FBQXJPLEdBQUF2c0IsQ0FBQSxRQUFBNDdDLEVBQUE1OEMsVUFBQTY4QyxFQUFBa0ssR0FBQXg1QixFQUFBLGNBQUFzdkIsR0FBQWtLLEdBQUFsSyxFQUFBLGNBQUFELEdBQUFBLEVBQUFueEMsWUFBQSxvQkFBQXM3QyxHQUFBbEssRUFBQWlLLEVBQUEscUJBQUFDLEdBQUF4NUIsR0FBQXc1QixHQUFBeDVCLEVBQUF1NUIsRUFBQSxhQUFBQyxHQUFBeDVCLEVBQUFydEIsRUFBQSx5QkFBQTZtRCxHQUFBeDVCLEVBQUEsb0RBQUF5NUIsR0FBQSxrQkFBQXBwRCxFQUFBVixFQUFBNkMsRUFBQUwsRUFBQSxjQUFBcW5ELEdBQUEvbEQsRUFBQTZ6QixFQUFBMzBCLEVBQUFrdEIsR0FBQSxJQUFBbHdCLEVBQUFMLE9BQUF3TyxlQUFBLElBQUFuTyxFQUFBLGdCQUFBOEQsR0FBQTlELEVBQUEsRUFBQTZwRCxHQUFBLFNBQUEvbEQsRUFBQTZ6QixFQUFBMzBCLEVBQUFrdEIsR0FBQSxHQUFBeUgsRUFBQTMzQixFQUFBQSxFQUFBOEQsRUFBQTZ6QixFQUFBLENBQUF6bkIsTUFBQWxOLEVBQUEyTSxZQUFBdWdCLEVBQUF4Z0IsY0FBQXdnQixFQUFBcXVCLFVBQUFydUIsSUFBQXBzQixFQUFBNnpCLEdBQUEzMEIsTUFBQSxLQUFBNG1ELEVBQUEsU0FBQWp5QixFQUFBMzBCLEdBQUE2bUQsR0FBQS9sRCxFQUFBNnpCLEVBQUEsU0FBQTd6QixHQUFBLFlBQUFxOEMsUUFBQXhvQixFQUFBMzBCLEVBQUFjLEVBQUEsSUFBQThsRCxFQUFBLFVBQUFBLEVBQUEsV0FBQUEsRUFBQSxjQUFBQyxHQUFBL2xELEVBQUE2ekIsRUFBQTMwQixFQUFBa3RCLEVBQUEsVUFBQW02QixHQUFBcm5ELEVBQUFrdEIsRUFBQXBzQixFQUFBNnpCLEVBQUFpeUIsRUFBQWxtRCxFQUFBRCxHQUFBLFFBQUF6RCxFQUFBZ0QsRUFBQVUsR0FBQUQsR0FBQTRzQixFQUFBcndCLEVBQUFrUSxLQUFBLE9BQUFsTixHQUFBLFlBQUFjLEVBQUFkLEVBQUEsQ0FBQWhELEVBQUE4M0IsS0FBQTVILEVBQUFHLEdBQUFqd0IsUUFBQUMsUUFBQWd3QixHQUFBem1CLEtBQUErdEIsRUFBQWl5QixFQUFBLFVBQUF1RSxHQUFBbnJELEdBQUEsc0JBQUFrdEIsRUFBQSxLQUFBcHNCLEVBQUFrRyxVQUFBLFdBQUE1SixRQUFBLFNBQUF1M0IsRUFBQWl5QixHQUFBLElBQUFsbUQsRUFBQVYsRUFBQXBDLE1BQUFzdkIsRUFBQXBzQixHQUFBLFNBQUE4b0QsRUFBQTVwRCxHQUFBcW5ELEdBQUEzbUQsRUFBQWkwQixFQUFBaXlCLEVBQUFnRCxFQUFBQyxFQUFBLE9BQUE3cEQsRUFBQSxVQUFBNnBELEVBQUE3cEQsR0FBQXFuRCxHQUFBM21ELEVBQUFpMEIsRUFBQWl5QixFQUFBZ0QsRUFBQUMsRUFBQSxRQUFBN3BELEVBQUEsQ0FBQTRwRCxPQUFBLE1BQUF0cUQsUUFBUXJELElBQUksOEJBY1p3TCxTQUFTcU8saUJBQWlCLFVBQVcsU0FBQzlSLEdBRXBDLElBQU0wUSxFQUFTMVEsRUFBTTBRLE9BQ3JCLElBQUlBLEdBQThCLFVBQW5CQSxFQUFPd2pCLFNBQTBDLGFBQW5CeGpCLEVBQU93akIsVUFBMEJ4akIsRUFBTzRwRCxrQkFBckYsQ0FJQSxJQUFNbCtELEVBQU00RCxFQUFNNUQsSUFBSXFJLGNBR3RCLE9BQUt6RSxFQUFNa2MsU0FBbUIsTUFBUjlmLEdBQWlCNEQsRUFBTWljLFFBQWtCLE1BQVI3ZixHQUNyRDRELEVBQU1vYSxzQkFDTm1nRCxPQUtHdjZELEVBQU1rYyxTQUFXbGMsRUFBTStiLFVBQVkvYixFQUFNZ2MsVUFBb0IsTUFBUjVmLEdBQ3hENEQsRUFBTW9hLHNCQUNOc3VDLE9BQU9oUyxRQUFRZ2MsWUFBWSxDQUFFeDVELE9BQVEsc0JBS2xDOEcsRUFBTWtjLFNBQVdsYyxFQUFNK2IsVUFBWS9iLEVBQU1nYyxVQUFvQixNQUFSNWYsR0FDeEQ0RCxFQUFNb2Esc0JBQ05zdUMsT0FBT2hTLFFBQVFnYyxZQUFZLENBQUV4NUQsT0FBUSxrQkFBbUJzaEUsU0FBUyxNQUs5RHg2RCxFQUFNa2MsVUFBV2xjLEVBQU0rYixTQUFhL2IsRUFBTWdjLFVBQW9CLE1BQVI1ZixPQUEzRCxHQUNFNEQsRUFBTW9hLHNCQUNOc3VDLE9BQU9oUyxRQUFRZ2MsWUFBWSxDQUFFeDVELE9BQVEsdUJBNUJ2QyxDQStCRixHQUVBLElBQUl1aEUsR0FBc0IsS0FDdEJDLElBQXNCLEVBR3RCQyxHQUF1QixLQUN2QkMsSUFBdUIsRUFHdkJDLEdBQTBCLEtBQzFCQyxJQUEwQixFQUcxQkMsR0FBeUUsS0FDekVDLEdBQXNDLEtBQ3RDQyxHQUEyQyxJQUFJbGtELElBQy9DbWtELElBQTZCLEVBRzdCQyxHQUE2QixDQUMvQixVQUNBLFVBQ0EsVUFDQSxjQUNBLHFCQUNBLGVBSUlDLEdBQXdCLENBQzVCQyxPQUFRLENBQUVDLFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFdBQzlEQyxLQUFNLENBQUVILFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFdBQzVERSxNQUFPLENBQUVKLFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFdBQzdERyxLQUFNLENBQUVMLFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFdBQzVESSxPQUFRLENBQUVOLFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFdBQzlESyxPQUFRLENBQUVQLFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFdBQzlETSxJQUFLLENBQUVSLFFBQVMsVUFBV0MsVUFBVyxVQUFXQyxTQUFVLFlBRzdELFNBQ2VPLEtBQW9CLE9BQUFDLEdBQUFwaUUsTUFBQyxLQUFEb0osVUFBQSxDQWNuQyxTQUFBZzVELEtBRkMsT0FFREEsR0FBQTdVLEdBQUFyRSxLQUFBam5ELEVBZEEsU0FBQXN0RCxJQUFBLElBQUEzUCxFQUFBeWlCLEVBQUEsT0FBQW5aLEtBQUFwcEQsRUFBQSxTQUFBOHZELEdBQUEsY0FBQUEsRUFBQXh0RCxHQUFBLGNBQUF3dEQsRUFBQXJ0RCxFQUFBLEVBQUFxdEQsRUFBQXh0RCxFQUFBLEVBRXlCMHNELE9BQU9DLFFBQVFDLE1BQU1uZ0QsSUFBSSxpQkFBZ0IsT0FDbkIsT0FEckMrd0MsRUFBTWdRLEVBQUF6bEQsRUFDTms0RCxFQUFXemlCLEVBQU8waUIsZUFBaUIsQ0FBQyxFQUFDMVMsRUFBQTlzRCxFQUFBLEVBQ3BDLENBQ0w4a0IsTUFBT3k2QyxFQUFTRSxnQkFBa0IsU0FDbENwdEQsTUFBT2t0RCxFQUFTRyxnQkFBa0IsYUFDbkMsT0FFdUUsT0FGdkU1UyxFQUFBcnRELEVBQUEsRUFBQXF0RCxFQUFBemxELEVBRUR6SSxRQUFRMEYsS0FBSywyREFBMkR3b0QsRUFBQTlzRCxFQUFBLEVBQ2pFLENBQUU4a0IsTUFBTyxTQUFVelMsTUFBTyxhQUFZLEVBQUFvNkMsRUFBQSxrQkFFaER2dkQsTUFBQSxLQUFBb0osVUFBQSxDQUdELFNBQVNxNUQsR0FBd0I3NkMsRUFBZXpTLEdBQzlDLElBQU11dEQsRUFBU2xCLEdBQXNCNTVDLElBQWdENDVDLEdBQXNCQyxPQUUzRyxPQUFRdHNELEdBQ04sSUFBSyxRQUNILE1BQU8seUJBQVBvWixPQUNnQm0wQyxFQUFPaEIsUUFBTyw0Q0FBQW56QyxPQUNSbTBDLEVBQU9mLFVBQVMsd0JBRXhDLElBQUssV0FrQkwsUUFDRSxNQUFPLGlEQUFQcHpDLE9BQ3dDbTBDLEVBQU9oQixRQUFPLFNBQUFuekMsT0FBUW0wQyxFQUFPZixVQUFTLGtEQUFBcHpDLE9BQ3hEbTBDLEVBQU9kLFNBQVEsd0JBaEJ2QyxJQUFLLFlBQ0gsTUFBTyxtRkFBUHJ6QyxPQUU2Qm0wQyxFQUFPZixVQUFTLG9GQUFBcHpDLE9BRXJCbTBDLEVBQU9oQixRQUFPLHdCQUV4QyxJQUFLLFVBQ0gsTUFBTyw0RUFBUG56QyxPQUVzQm0wQyxFQUFPZixVQUFTLGdEQUFBcHpDLE9BQ1ptMEMsRUFBT2hCLFFBQU8sd0JBUTlDLENBR0EsU0FBU2lCLEtBQ1AsSUFBTWpVLEVBQVc5cEQsT0FBT0MsU0FBUzZwRCxTQUFTN2pELGNBQzFDLE9BQU8wMkQsR0FBaUJxQixLQUFLLFNBQUFDLEdBQUksT0FBSW5VLEVBQVM5Z0QsU0FBU2kxRCxFQUFLLEVBQzlELENBK0VBLFNBQVNDLEtBQ1BwaEUsUUFBUXJELElBQUksb0NBR1o2eUIsV0FBVyxXQUNULElBQU02eEMsRUFBWW4rRCxPQUFPOG1CLGVBQ25CczNDLEVBQWVELGFBQVMsRUFBVEEsRUFBVzcrRCxXQUFXZ0osT0FHM0MsR0FGQXhMLFFBQVFyRCxJQUFJLHVCQUF3QjJrRSxFQUFjLFVBQVdBLGFBQVksRUFBWkEsRUFBYy9qRSxRQUV2RStqRSxHQUFnQkEsRUFBYS9qRSxPQUFTLEdBQUksQ0FDNUN5QyxRQUFRckQsSUFBSSx5REFDWixJQUFNOHBCLEVBQVE0NkMsYUFBUyxFQUFUQSxFQUFXRSxXQUFXLEdBQ3BDLEdBQUk5NkMsRUFBTyxDQUNUem1CLFFBQVFyRCxJQUFJLGdEQUVaLElBQU0rNUIsRUFtQmQsU0FBNkJqUSxHQUMzQixJQUNNaFgsRUFEWWdYLEVBQU0rNkMsd0JBQ00veEQsYUFBZSxHQUN2Q2d5RCxFQUFjaDdDLEVBQU1nN0MsWUFDcEJDLEVBQVlqN0MsRUFBTWk3QyxVQUdsQkMsRUFBZXIvRCxLQUFLcy9ELElBQUksRUFBR0gsRUFBYyxLQUN6Q0ksRUFBYXYvRCxLQUFLd25CLElBQUlyYSxFQUFZbFMsT0FBUW1rRSxFQUFZLEtBRTVELE9BQU9qeUQsRUFBWW9FLFVBQVU4dEQsRUFBY0UsRUFDN0MsQ0E5QndCQyxDQUFvQnI3QyxHQUdwQ2c1QyxHQUFnQixDQUNkNTVELEtBQU15N0QsRUFDTjVxQyxRQUFBQSxFQUNBZzRCLFNBQVVxVCxHQUFxQnQ3QyxJQW1DekMsU0FBNkJBLEdBQzNCem1CLFFBQVFyRCxJQUFJLG1DQUNacWxFLEtBRUEsSUFBTTNOLEVBQU81dEMsRUFBTTZ0Qyx3QkFJbkIsR0FIQXQwRCxRQUFRckQsSUFBSSx5QkFBMEIwM0QsR0FHbkIsSUFBZkEsRUFBS3R3QyxPQUErQixJQUFoQnN3QyxFQUFLcndDLE9BQWMsQ0FDekNoa0IsUUFBUXJELElBQUksNkRBR1osSUFBTTBrRSxFQUFZbitELE9BQU84bUIsZUFDekIsR0FBSXEzQyxHQUFhQSxFQUFVbjNDLFdBQWEsRUFBRyxDQUV6QyxJQUFNKzNDLEVBQWlCeDdDLEVBQU13N0MsZUFDekJDLEVBQWtDLEtBWXRDLEdBVklELEVBQWV6eEQsV0FBYTJ4RCxLQUFLQyxXQUFhSCxFQUFlSSxjQUUvREgsRUFBa0JELEVBQWVJLGNBQWMvTix3QkFDdEMyTixFQUFlenhELFdBQWEyeEQsS0FBS0csZUFFMUNKLEVBQW1CRCxFQUEyQjNOLHlCQUdoRHQwRCxRQUFRckQsSUFBSSxpQ0FBa0N1bEUsR0FFMUNBLEdBQW1CQSxFQUFnQm4rQyxNQUFRLEdBQUttK0MsRUFBZ0JsK0MsT0FBUyxFQUUzRSxZQURBdStDLEdBQWFMLEVBR2pCLENBYUEsT0FYQWxpRSxRQUFRckQsSUFBSSw2RUFVWjRsRSxHQVJxQixDQUNuQkMsT0FBUXQvRCxPQUFPNHdELFlBQWMsRUFDN0JqcEMsS0FBTTNuQixPQUFPMndELFdBQWEsRUFDMUI5b0MsSUFBSzduQixPQUFPNHdELFlBQWMsRUFDMUIyTyxNQUFPdi9ELE9BQU8yd0QsV0FBYSxFQUMzQjl2QyxNQUFPLEVBQ1BDLE9BQVEsR0FJWixDQUVBdStDLEdBQWFsTyxFQUNmLENBakZRcU8sQ0FBb0JqOEMsRUFDdEIsQ0FDRixNQUNFem1CLFFBQVFyRCxJQUFJLDBEQUNacWxFLEtBQ0F2QyxHQUFnQixJQUVwQixFQUFHLElBQ0wsQ0FlQSxTQUFTc0MsR0FBcUJ0N0MsR0FFNUIsTUFBTyxDQUNMZzdDLFlBQWFoN0MsRUFBTWc3QyxZQUNuQkMsVUFBV2o3QyxFQUFNaTdDLFVBR3JCLENBcURBLFNBQVNhLEdBQWFsTyxJQUNwQnFMLEdBQWtCdjNELFNBQVNDLGNBQWMsUUFDekJwTCxHQUFLLHdCQUNyQjBpRSxHQUFnQjN2RCxVQUFZLHFTQVE1QixJQUFNaWIsRUFBWTluQixPQUFPeS9ELFNBQVd4NkQsU0FBU3NoQixnQkFBZ0J1QixVQUN2REYsRUFBYTVuQixPQUFPMC9ELFNBQVd6NkQsU0FBU3NoQixnQkFBZ0JxQixXQUd4RCszQyxFQUFpQjMvRCxPQUFPNHdELFlBQ3hCZ1AsRUFBZ0I1L0QsT0FBTzJ3RCxXQUd6QmtQLEVBQVUxTyxFQUFLbU8sUUFBVW5PLEVBQUt0cEMsS0FBTyxFQUNyQ2k0QyxFQUFXM08sRUFBS3hwQyxNQUFRd3BDLEVBQUtvTyxPQUFTLEVBR3RDTSxFQUFTLElBQ1hBLEVBQVMvM0MsRUFBWSxLQUduQmc0QyxFQUFVLElBQ1pBLEVBQVUsSUFJWixJQUFNQyxFQUFZRixFQUFTLEdBQ3JCRyxFQUFhNWdFLEtBQUtzL0QsSUFBSSxHQUFJdC9ELEtBQUt3bkIsSUFBSWc1QyxFQUFnQixJQUFLRSxJQTBDOUQsR0F4Q0FoakUsUUFBUXJELElBQUksOEJBQStCLENBQ3pDMDNELEtBQUFBLEVBQ0FycEMsVUFBQUEsRUFDQUYsV0FBQUEsRUFDQWk0QyxPQUFBQSxFQUNBQyxRQUFBQSxFQUNBQyxVQUFBQSxFQUNBQyxXQUFBQSxFQUNBTCxlQUFBQSxFQUNBQyxjQUFBQSxJQUdGcEQsR0FBZ0Jqc0QsTUFBTTB2RCxRQUFVLHVDQUFIdDJDLE9BRXBCbzJDLEVBQVMsbUJBQUFwMkMsT0FDUnEyQyxFQUFVLHdyQkF5QmYvNkQsU0FBU2k3RCxlQUFlLHlCQUEwQixDQUNyRCxJQUFNM3ZELEVBQVF0TCxTQUFTQyxjQUFjLFNBQ3JDcUwsRUFBTXpXLEdBQUssd0JBQ1h5VyxFQUFNaEUsWUFBYyw2UkFVcEJ0SCxTQUFTazdELEtBQUtsekQsWUFBWXNELEVBQzVCLENBVUFpc0QsR0FBZ0JscEQsaUJBQWlCLFFBUFosU0FBQ2hWLEdBQ3BCQSxFQUFFc2QsaUJBQ0Z0ZCxFQUFFbWMsa0JBQ0YzZCxRQUFRckQsSUFBSSxtQ0EyQ2hCLFdBRUUsR0FEQXFELFFBQVFyRCxJQUFJLDhCQUErQjhpRSxJQUN0Q0EsR0FBTCxDQU1BLElBQU00QixFQUFZNUIsR0FDbEJ1QyxLQUdBLElBQU1zQixFQUFrQnBnRSxPQUFPOG1CLGVBQ3pCdkQsRUFBUTY4QyxhQUFlLEVBQWZBLEVBQWlCL0IsV0FBVyxHQUcxQyxHQUZBdmhFLFFBQVFyRCxJQUFJLGlDQUFrQzJtRSxFQUFpQixRQUFTNzhDLEdBRXBFQSxFQUFPLENBRVQsSUFBTTg4QyxFQUFrQixRQUFIMTJDLE9BQVduTixLQUFLQyxPQUdyQzZqRCxHQUFzQi84QyxFQUFPODhDLEdBQWlCajhELEtBQUssU0FBQW04RCxHQUM3Q0EsR0FDRnpqRSxRQUFRckQsSUFBSSxpRUFHWnl3RCxPQUFPaFMsUUFBUWdjLFlBQVksQ0FDekJ4NUQsT0FBUSxnQkFDUjBqRSxhQUFjRCxFQUFVeDdELEtBQ3hCNndCLFFBQVMycUMsRUFBVTNxQyxRQUNuQmc0QixTQUFVMlMsRUFBVTNTLFVBQ25CLFNBQUNnVixHQUNGMWpFLFFBQVFyRCxJQUFJLG1EQUFvRCttRSxHQUM1REEsR0FBWUEsRUFBU0MsU0FFbkJELEVBQVNFLGNBQ1hILEVBQWlCMzVELGFBQWEseUJBQTBCNDVELEVBQVNFLGFBQ2pFakUsR0FBYyxPQUFRNEQsR0FDdEI1RCxHQUFlN3pELElBQUk0M0QsRUFBU0UsWUFBYUgsSUFFM0NJLE9BR0FDLEdBQWdCUCxHQUNoQnZqRSxRQUFRQyxNQUFNLG1DQUFvQ3lqRSxhQUFRLEVBQVJBLEVBQVV6akUsT0FFaEUsS0FFQUQsUUFBUTBGLEtBQUssb0VBRWIwbkQsT0FBT2hTLFFBQVFnYyxZQUFZLENBQ3pCeDVELE9BQVEsZ0JBQ1IwakUsYUFBY0QsRUFBVXg3RCxLQUN4QjZ3QixRQUFTMnFDLEVBQVUzcUMsUUFDbkJnNEIsU0FBVTJTLEVBQVUzUyxVQUNuQixTQUFDZ1YsR0FDRjFqRSxRQUFRckQsSUFBSSxtREFBb0QrbUUsR0FDNURBLEdBQVlBLEVBQVNDLFFBQ3ZCRSxLQUVBN2pFLFFBQVFDLE1BQU0sbUNBQW9DeWpFLGFBQVEsRUFBUkEsRUFBVXpqRSxNQUVoRSxHQUVKLEVBQ0YsTUFDRUQsUUFBUTBGLEtBQUssc0RBRWIwbkQsT0FBT2hTLFFBQVFnYyxZQUFZLENBQ3pCeDVELE9BQVEsZ0JBQ1IwakUsYUFBY0QsRUFBVXg3RCxLQUN4QjZ3QixRQUFTMnFDLEVBQVUzcUMsUUFDbkJnNEIsU0FBVTJTLEVBQVUzUyxVQUNuQixTQUFDZ1YsR0FDRjFqRSxRQUFRckQsSUFBSSxtREFBb0QrbUUsR0FDNURBLEdBQVlBLEVBQVNDLFFBQ3ZCRSxLQUVBN2pFLFFBQVFDLE1BQU0sbUNBQW9DeWpFLGFBQVEsRUFBUkEsRUFBVXpqRSxNQUVoRSxHQUdGdy9ELEdBQWdCLElBOUVoQixNQUZFei9ELFFBQVFyRCxJQUFJLHFDQWlGaEIsQ0E5SElvbkUsRUFDRixHQUdBckUsR0FBZ0JscEQsaUJBQWlCLFlBQWEsU0FBQ2hWLEdBQzdDQSxFQUFFc2QsaUJBQ0Y5ZSxRQUFRckQsSUFBSSx5QkFDZCxHQUVBd0wsU0FBUzRGLEtBQUtvQyxZQUFZdXZELElBQzFCMS9ELFFBQVFyRCxJQUFJLG9EQUFxRHNtRSxFQUFXQyxHQUc1RXhELEdBQWdCc0UsYUFHaEIsSUFBTUMsRUFBYXZFLEdBQWdCcEwsd0JBQzdCak0sRUFBWTRiLEVBQVdsNUMsS0FBTyxHQUFLazVDLEVBQVdsNUMsS0FBTzgzQyxHQUMxQ29CLEVBQVdwNUMsTUFBUSxHQUFLbzVDLEVBQVdwNUMsTUFBUWk0QyxFQUM1RDlpRSxRQUFRckQsSUFBSSxpQ0FBa0MsQ0FBRXNuRSxXQUFBQSxFQUFZNWIsVUFBQUEsSUFFdkRBLElBQ0hyb0QsUUFBUXJELElBQUksaUVBQ1oraUUsR0FBZ0Jqc0QsTUFBTXNYLElBQU0sR0FBSDhCLE9BQU03QixFQUFZNjNDLEVBQWlCLEVBQUMsTUFDN0RuRCxHQUFnQmpzRCxNQUFNb1gsS0FBTyxHQUFIZ0MsT0FBTWkyQyxFQUFnQixFQUFJLEdBQUUsT0FJeER0ekMsV0FBVyxXQUNMa3dDLElBQ0ZzQyxJQUVKLEVBQUcsSUFDTCxDQUVBLFNBQVNBLEtBQ0h0QyxJQUFtQkEsR0FBZ0JucUQsYUFDckNtcUQsR0FBZ0JucUQsV0FBV3JGLFlBQVl3dkQsSUFDdkNBLEdBQWtCLEtBRXRCLENBZ0dBLFNBQVN3RSxLQUNQLE9BQU9DLElBQ1QsQ0FFQSxTQUdlQyxLQUEwQixPQUFBQyxHQUFBL2xFLE1BQUMsS0FBRG9KLFVBQUEsQ0F3RHpDLFNBQUEyOEQsS0FGQyxPQUVEQSxHQUFBeFksR0FBQXJFLEtBQUFqbkQsRUF4REEsU0FBQTIyRCxJQUFBLElBQUFyd0MsRUFBQTFmLEVBQUF1bUQsRUFBQTRXLEVBQUF0TCxFQUFBNU8sRUFBQW1hLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFuTCxFQUFBUyxFQUFBLE9BQUF4UyxLQUFBcHBELEVBQUEsU0FBQSs0RCxHQUFBLGNBQUFBLEVBQUF6MkQsR0FBQSxPQU1RbW1CLEVBQU0zakIsT0FBT0MsU0FBU0MsS0FDdEIrRCxFQUFRZ0IsU0FBU2hCLE1BQ2pCdW1ELEVBQVN4cUQsT0FBT0MsU0FBUzZwRCxTQUd6QnNYLEVBQWNLLEdBQWtCOTlDLEVBQUsxZixFQUFPdW1ELEdBRzVDc0wsRUFBVzRMLEdBQWdCTixFQUFhejlDLEVBQUs2bUMsR0FHL0N0RCxFQUFVLEdBQUUrTSxFQUFBdDJELEVBQUEsRUFBQTA0RCxFQUlOK0ssRUFBV25OLEVBQUF6MkQsRUFDWixRQURZNjRELEVBQ1AsRUFHTCxVQUhLQSxFQUdFLEVBS1AsV0FMT0EsRUFLQyxFQUtSLFVBTFFBLEVBS0QseUJBQUFwQyxFQUFBejJELEVBQUEsRUFaTW1rRSxLQUFtQixPQUE1QixPQUFQemEsRUFBTytNLEVBQUExdUQsRUFBQTB1RCxFQUFBLzFELEVBQUEsb0JBQUErMUQsRUFBQXoyRCxFQUFHLEVBR2Nva0UsS0FBcUIsT0FFUCxPQUZoQ04sRUFBU3JOLEVBQUExdUQsRUFDZjJoRCxFQUFVb2EsRUFBVXBhLFFBQ3BCbWEsRUFBZUMsRUFBVUQsYUFBYXBOLEVBQUEvMUQsRUFBQSxvQkFBQSsxRCxFQUFBejJELEVBQUEsRUFHYnFrRSxHQUFxQnJYLEdBQU8sT0FFZCxPQUZqQytXLEVBQVV0TixFQUFBMXVELEVBQ2hCMmhELEVBQVVxYSxFQUFXcmEsUUFDckJtYSxFQUFlRSxFQUFXRixhQUFhcE4sRUFBQS8xRCxFQUFBLG9CQUFBKzFELEVBQUF6MkQsRUFBQSxFQUdmc2tFLEtBQXFCLE9BRVAsT0FGaENOLEVBQVN2TixFQUFBMXVELEVBQ2YyaEQsRUFBVXNhLEVBQVV0YSxRQUNwQm1hLEVBQWVHLEVBQVVILGFBQWFwTixFQUFBLzFELEVBQUEsY0FHdENncEQsRUFBVStaLEtBQXdCLFFBQUFoTixFQUFBejJELEVBQUEsaUJBQUF5MkQsRUFBQXQyRCxFQUFBLEdBQUFtNUQsRUFBQTdDLEVBQUExdUQsRUFHdEN6SSxRQUFRQyxNQUFNLHNDQUFxQys1RCxHQUNuRDVQLEVBQVUrWixLQUF5QixlQUFBaE4sRUFBQS8xRCxFQUFBLEVBRzlCLENBQ0xncEQsUUFBQUEsRUFDQWthLFlBQUFBLEVBQ0F0TCxTQUFBQSxFQUNBdUwsYUFBQUEsSUFDRCxFQUFBck4sRUFBQSxtQkFDRjU0RCxNQUFBLEtBQUFvSixVQUFBLENBS0QsU0FBU2k5RCxHQUFrQjk5QyxFQUFhMWYsRUFBZXVtRCxHQUVyRCxPQUFJN21DLEVBQUkzYSxTQUFTLFNBQVcvRCxTQUFTK3lELGNBQWMsaUNBQzFDLE1BSUx4TixFQUFPeGhELFNBQVMsZ0JBQWtCd2hELEVBQU94aEQsU0FBUyxhQUNsRHdoRCxFQUFPeGhELFNBQVMsY0FBZ0J3aEQsRUFBT3hoRCxTQUFTLGFBQzNDLFFBSUx3aEQsRUFBT3hoRCxTQUFTLGdCQUFrQndoRCxFQUFPeGhELFNBQVMsVUFDbER3aEQsRUFBT3hoRCxTQUFTLGlCQUFtQndoRCxFQUFPeGhELFNBQVMsZUFDbkR3aEQsRUFBT3hoRCxTQUFTLGlCQUFtQndoRCxFQUFPeGhELFNBQVMsaUJBQzlDLFNBSUx3aEQsRUFBT3hoRCxTQUFTLGNBQWdCd2hELEVBQU94aEQsU0FBUyxhQUNoRHdoRCxFQUFPeGhELFNBQVMsVUFBWS9FLEVBQU1nQyxjQUFjK0MsU0FBUyxTQUNwRCxRQUdGLFNBQ1QsQ0FLQSxTQUFTMDRELEdBQWdCTixFQUFxQno5QyxFQUFhNm1DLEdBQXFDLElBQUF1WCxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUN4RnJNLEVBQWdDLENBQ3BDbnlDLElBQUFBLEVBQ0E2bUMsT0FBQUEsRUFDQTRYLGFBQWEsSUFBSTVsRCxNQUFPNjNDLGVBSXBCZ08sRUFBNkQsUUFBdEROLEVBQUc5OEQsU0FBUyt5RCxjQUFjLG9DQUE0QixJQUFBK0osT0FBQSxFQUFuREEsRUFBcUQ5SixhQUFhLFdBQzVFcUssRUFBeUUsUUFBNUROLEVBQUcvOEQsU0FBUyt5RCxjQUFjLDBDQUFrQyxJQUFBZ0ssT0FBQSxFQUF6REEsRUFBMkQvSixhQUFhLFdBQ3hGc0ssRUFBNkQsUUFBdEROLEVBQUdoOUQsU0FBUyt5RCxjQUFjLG9DQUE0QixJQUFBaUssT0FBQSxFQUFuREEsRUFBcURoSyxhQUFhLFdBQzVFdUssRUFBd0QsUUFBaEROLEVBQUdqOUQsU0FBUyt5RCxjQUFjLDhCQUFzQixJQUFBa0ssT0FBQSxFQUE3Q0EsRUFBK0NqSyxhQUFhLFdBQ3ZFd0ssRUFBK0UsUUFBcEVOLEVBQUdsOUQsU0FBUyt5RCxjQUFjLGtEQUEwQyxJQUFBbUssT0FBQSxFQUFqRUEsRUFBbUVsSyxhQUFhLFdBU3BHLE9BUElvSyxJQUFTdk0sRUFBU3VNLFFBQVVBLEdBQzVCQyxJQUFleE0sRUFBU3dNLGNBQWdCQSxHQUN4Q0MsSUFBU3pNLEVBQVN5TSxRQUFVQSxHQUM1QkMsSUFBVTFNLEVBQVM4QyxPQUFTNEosR0FDNUJDLElBQWEzTSxFQUFTb0MsWUFBY3VLLEdBR2hDckIsR0FDTixJQUFLLFFBQ0h0TCxFQUFTd0wsVUE0S2YsV0FDRSxJQUFNeEwsRUFBZ0MsQ0FBQyxFQUV2QyxHQUFJOTFELE9BQU9DLFNBQVM2cEQsU0FBUzlnRCxTQUFTLGVBQWdCLEtBQUEwNUQsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFFOUNDLEdBQXFELFFBQXZDTixFQUFBejlELFNBQVMreUQsY0FBYyx3QkFBZ0IsSUFBQTBLLE9BQUEsRUFBdkNBLEVBQXlDbjJELGVBQ1UsUUFEQ28yRCxFQUNyRDE5RCxTQUFTK3lELGNBQWMscUNBQTZCLElBQUEySyxPQUFBLEVBQXBEQSxFQUFzRHAyRCxhQUNuRTAyRCxHQUE0QyxRQUFoQ0wsRUFBQTM5RCxTQUFTK3lELGNBQWMsaUJBQVMsSUFBQTRLLE9BQUEsRUFBaENBLEVBQWtDcjJELGVBQ0UsUUFEU3MyRCxFQUM5QzU5RCxTQUFTK3lELGNBQWMsc0JBQWMsSUFBQTZLLE9BQUEsRUFBckNBLEVBQXVDdDJELGFBQ2xEMjJELEdBQTRDLFFBQS9CSixFQUFBNzlELFNBQVMreUQsY0FBYyxnQkFBUSxJQUFBOEssT0FBQSxFQUEvQkEsRUFBaUN2MkQsZUFDSSxRQURPdzJELEVBQzdDOTlELFNBQVMreUQsY0FBYyx1QkFBZSxJQUFBK0ssT0FBQSxFQUF0Q0EsRUFBd0N4MkQsYUFFdER5MkQsSUFBYWxOLEVBQVNxTixRQUFVSCxHQUNoQ0MsSUFBV25OLEVBQVNzTixNQUFRSCxHQUM1QkMsSUFBWXBOLEVBQVNvTixXQUFhQSxFQUN4QyxDQUVBLE9BQU9wTixDQUNULENBOUwyQnVOLEdBQ3JCLE1BQ0YsSUFBSyxTQUNIdk4sRUFBU3lMLFdBZ01mLFNBQStCL1csR0FDN0IsSUFBTXNMLEVBQWdDLENBQUUyQyxTQUFVak8sR0FFbEQsR0FBSUEsRUFBT3hoRCxTQUFTLGdCQUFrQndoRCxFQUFPeGhELFNBQVMsU0FBVSxLQUFBczZELEVBQUFDLEVBQ3hEM0ssRUFBNEQsUUFBdEQwSyxFQUFHcitELFNBQVMreUQsY0FBYyxvQ0FBNEIsSUFBQXNMLE9BQUEsRUFBbkRBLEVBQXFELzJELFlBQzlENDZDLEVBQTBDLFFBQWpDb2MsRUFBR3QrRCxTQUFTK3lELGNBQWMsZUFBTyxJQUFBdUwsT0FBQSxFQUE5QkEsRUFBZ0N0TCxhQUFhLFlBRTNEVyxJQUFROUMsRUFBUzhDLE9BQVNBLEdBQzFCelIsSUFBVzJPLEVBQVNvQyxZQUFjL1EsRUFDeEMsTUFBTyxHQUFJcUQsRUFBT3hoRCxTQUFTLGdCQUFpQixLQUFBdzZELEVBQUFDLEVBQ3BDN0ssRUFBMkQsUUFBckQ0SyxFQUFHditELFNBQVMreUQsY0FBYyxtQ0FBMkIsSUFBQXdMLE9BQUEsRUFBbERBLEVBQW9EajNELFlBQzdEbTNELEVBQW1FLFFBQTVERCxFQUFHeCtELFNBQVMreUQsY0FBYywwQ0FBa0MsSUFBQXlMLE9BQUEsRUFBekRBLEVBQTJEbDNELFlBRXZFcXNELElBQVE5QyxFQUFTOEMsT0FBU0EsR0FDMUI4SyxJQUFTNU4sRUFBUzROLFFBQVVBLEVBQ2xDLENBRUEsT0FBTzVOLENBQ1QsQ0FsTjRCNk4sQ0FBc0JuWixHQUM1QyxNQUNGLElBQUssUUFDSHNMLEVBQVMwTCxVQUFZb0MsS0FJekIsT0FBTzlOLENBQ1QsQ0FLQSxTQUFTbUwsS0FFUCxJQUFNNEMsRUFBbUI1K0QsU0FBUzRsQyxpQkFBaUIsMkRBQzdDaTVCLEVBQVk3K0QsU0FBUzgrRCxXQUFVLEdBRXJDRixFQUFpQmxvRSxRQUFRLFNBQUE4dEMsR0FDdkIsSUFBTXU2QixFQUFXRixFQUFVOUwsY0FBY3Z1QixFQUFHL1QsUUFBUXp2QixlQUNoRCs5RCxHQUNGQSxFQUFTak0sUUFFYixHQUdBLElBQUl1RCxFQUNGd0ksRUFBVTlMLGNBQWMsU0FDeEI4TCxFQUFVOUwsY0FBYyxZQUN4QjhMLEVBQVU5TCxjQUFjLGFBQ3hCOEwsRUFBVTlMLGNBQWMsYUFDeEI4TCxFQUFVOUwsY0FBYyxVQUN4QjhMLEVBQVU5TCxjQUFjLFdBQ3hCOEwsRUFBVWo1RCxLQUVQeXdELElBQ0hBLEVBQWlCd0ksRUFBVWo1RCxNQUk3QixJQUFJbEksRUFBTzI0RCxFQUFlL3VELGFBQWUrdUQsRUFBZTJJLFdBQWEsR0FjckUsT0FYQXRoRSxFQUFPQSxFQUNKbUUsUUFBUSxPQUFRLEtBQ2hCQSxRQUFRLFdBQVksTUFDcEJ3QixRQUlNak8sT0FEUyxNQUVoQnNJLEVBQU9BLEVBQUtnTyxVQUFVLEVBRk4sS0FFc0IsT0FHakNoTyxDQUNULENBRUEsU0FHZWcvRCxLQUFpQixPQUFBdUMsR0FBQTlvRSxNQUFDLEtBQURvSixVQUFBLENBaUJoQyxTQUFBMC9ELEtBRkMsT0FFREEsR0FBQXZiLEdBQUFyRSxLQUFBam5ELEVBakJBLFNBQUF1NUQsSUFBQSxJQUFBdU4sRUFBQUMsRUFBQTczRCxFQUFBb3JELEVBQUEsT0FBQXJULEtBQUFwcEQsRUFBQSxTQUFBNjdELEdBQUEsY0FBQUEsRUFBQXY1RCxHQUFBLE9BRzRFLEdBSDVFdTVELEVBQUFwNUQsRUFBQSxJQUdVeW1FLEVBQVduL0QsU0FBUyt5RCxjQUFjLG9DQUN4Qm9NLEVBQVNqL0IsSUFBRyxDQUFBNHhCLEVBQUF2NUQsRUFBQSxlQUFBdTVELEVBQUE3NEQsRUFBQSxtQkFBQXlyQixPQUNGeTZDLEVBQVNqL0IsSUFBRyxlQUFBeGIsT0FBYzFrQixTQUFTaEIsUUFBSyxPQUlkLE9BQTlDc0ksR0FBMkIsUUFBYjQzRCxFQUFBbC9ELFNBQVM0RixZQUFJLElBQUFzNUQsT0FBQSxFQUFiQSxFQUFlNTNELGNBQWUsR0FBRXdxRCxFQUFBNzRELEVBQUEsRUFDN0NxTyxFQUFZakUsUUFBVSxRQUFKcWhCLE9BQVkxa0IsU0FBU2hCLFFBQU8sT0FFTixPQUZNOHlELEVBQUFwNUQsRUFBQSxFQUFBZzZELEVBQUFaLEVBQUF4eEQsRUFFckR6SSxRQUFRQyxNQUFNLHlCQUF3QjQ2RCxHQUFTWixFQUFBNzRELEVBQUEsVUFBQXlyQixPQUNoQzFrQixTQUFTaEIsUUFBSyxFQUFBMnlELEVBQUEsa0JBRWhDeDdELE1BQUEsS0FBQW9KLFVBQUEsVUFLY285RCxLQUFtQixPQUFBeUMsR0FBQWpwRSxNQUFDLEtBQURvSixVQUFBLENBZ0RsQyxTQUFBNi9ELEtBRkMsT0FFREEsR0FBQTFiLEdBQUFyRSxLQUFBam5ELEVBaERBLFNBQUE4NUQsSUFBQSxJQUFBalEsRUFBQUMsRUFBQW1kLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUF4Z0UsRUFBQXdqRCxFQUFBaWQsRUFBQWg2QyxFQUFBbXVDLEVBQUEsT0FBQXZVLEtBQUFwcEQsRUFBQSxTQUFBMDhELEdBQUEsY0FBQUEsRUFBQXA2RCxHQUFBLE9BRW9CLEdBRnBCbzZELEVBQUFqNkQsRUFBQSxFQUVRdXBELEVBQVUsSUFJVmxuRCxPQUFPQyxTQUFTNnBELFNBQVM5Z0QsU0FBUyxlQUFnQixDQUFGNHVELEVBQUFwNkQsRUFBQSxRQWVYLE9BYmpDeUcsR0FBb0UsUUFBNURxZ0UsRUFBQXIvRCxTQUFTK3lELGNBQWMsNkNBQXFDLElBQUFzTSxPQUFBLEVBQTVEQSxFQUE4RC8zRCxlQUM1QixRQUR1Q2c0RCxFQUMxRXQvRCxTQUFTK3lELGNBQWMsb0JBQVksSUFBQXVNLE9BQUEsRUFBbkNBLEVBQXFDaDRELGNBQ3JDdEgsU0FBU2hCLE1BQ2hCd2pELEdBQXlELFFBQTNDK2MsRUFBQXYvRCxTQUFTK3lELGNBQWMsNEJBQW9CLElBQUF3TSxPQUFBLEVBQTNDQSxFQUE2Q2o0RCxlQUNPLFFBRElrNEQsRUFDekR4L0QsU0FBUyt5RCxjQUFjLHNDQUE4QixJQUFBeU0sT0FBQSxFQUFyREEsRUFBdURsNEQsY0FBZSxHQUduRm00RCxFQUFZLElBQUlDLGdCQUFnQjNrRSxPQUFPQyxTQUFTdWpCLFNBQ2hEa0gsRUFBSWc2QyxFQUFVejZELElBQUksUUFFdEJrOUMsRUFBWXlkLFNBQVNsNkMsSUFHdkJ3OEIsRUFBVSxHQUFIdjlCLE9BQU0xbEIsRUFBSyxRQUFBMGxCLE9BQU84OUIsR0FBY21RLEVBQUExNUQsRUFBQSxFQUVoQyxDQUNMZ3BELFFBQUFBLEVBQ0FtYSxhQUFjLENBQ1oxaUUsS0FBTSxRQUNOazNELGFBQWM3MUQsT0FBT0MsU0FBU0MsS0FDOUJzMUQsY0FBZXRPLEVBQ2Y0TyxTQUFVLENBQ1IyQyxTQUFVLFVBQ1Z0UixVQUFBQSxFQUNBbGpELE1BQUFBLEVBQ0F3akQsWUFBQUEsTUFHTCxPQUl5RCxPQUE1RFAsRUFBVWppRCxTQUFTaEIsTUFBUSxPQUFTZzlELEtBQXdCckosRUFBQTE1RCxFQUFBLEVBQ3JELENBQUVncEQsUUFBQUEsSUFBUyxPQUUrQixPQUYvQjBRLEVBQUFqNkQsRUFBQSxFQUFBazdELEVBQUFqQixFQUFBcnlELEVBRWxCekksUUFBUUMsTUFBTSwyQkFBMEI4N0QsR0FBU2pCLEVBQUExNUQsRUFBQSxFQUMxQyxDQUFFZ3BELFFBQVNqaUQsU0FBU2hCLE1BQVEsT0FBU2c5RCxPQUF5QixFQUFBOUosRUFBQSxrQkFFeEUvN0QsTUFBQSxLQUFBb0osVUFBQSxVQUtjcTlELEdBQW9CekosR0FBQSxPQUFBeU0sR0FBQXpwRSxNQUFDLEtBQURvSixVQUFBLENBZW5DLFNBQUFxZ0UsS0FGQyxPQUVEQSxHQUFBbGMsR0FBQXJFLEtBQUFqbkQsRUFmQSxTQUFBazdELEVBQW9DL04sR0FBYyxJQUFBc2EsRUFBQXpELEVBQUF2SSxFQUFBLE9BQUF4VSxLQUFBcHBELEVBQUEsU0FBQTY5RCxHQUFBLGNBQUFBLEVBQUF2N0QsR0FBQSxPQUVLLE9BRkx1N0QsRUFBQXA3RCxFQUFBLEVBRXhDbW5FLEVBQVc3L0QsU0FBU3NoQixnQkFBZ0J3K0MsVUFBU2hNLEVBQUF2N0QsRUFBQSxFQUN4QnUzRCxHQUFlaVEsa0JBQWtCRixFQUFVdGEsR0FBTyxPQUEzRCxPQUFaNlcsRUFBWXRJLEVBQUF4ekQsRUFBQXd6RCxFQUFBNzZELEVBQUEsRUFFWCxDQUNMZ3BELFFBQVNtYSxFQUFhN0wsZUFBaUJ5TCxLQUN2Q0ksYUFBQUEsSUFDRCxPQUV5RCxPQUZ6RHRJLEVBQUFwN0QsRUFBQSxFQUFBbTdELEVBQUFDLEVBQUF4ekQsRUFFRHpJLFFBQVFDLE1BQU0sb0NBQW1DKzdELEdBQVNDLEVBQUE3NkQsRUFBQSxFQUNuRCxDQUFFZ3BELFFBQVMrWixPQUF5QixFQUFBMUksRUFBQSxrQkFFOUNuOUQsTUFBQSxLQUFBb0osVUFBQSxVQUtjczlELEtBQW1CLE9BQUFtRCxHQUFBN3BFLE1BQUMsS0FBRG9KLFVBQUEsQ0FpQmxDLFNBQUF5Z0UsS0FGQyxPQUVEQSxHQUFBdGMsR0FBQXJFLEtBQUFqbkQsRUFqQkEsU0FBQXk4RCxJQUFBLElBQUExQyxFQUFBQyxFQUFBZ0ssRUFBQTZELEVBQUEsT0FBQTVnQixLQUFBcHBELEVBQUEsU0FBQTYrRCxHQUFBLGNBQUFBLEVBQUF2OEQsR0FBQSxPQUdnRCxPQUhoRHU4RCxFQUFBcDhELEVBQUEsRUFFVXk1RCxFQUFZbnlELFNBQVNzaEIsZ0JBQWdCdytDLFVBQ3JDMU4sRUFBZ0J1TSxLQUFzQjdKLEVBQUF2OEQsRUFBQSxFQUVqQnUzRCxHQUFlb1EsYUFBYS9OLEVBQVdDLEdBQWMsT0FBOUQsT0FBWmdLLEVBQVl0SCxFQUFBeDBELEVBQUF3MEQsRUFBQTc3RCxFQUFBLEVBRVgsQ0FDTGdwRCxRQUFTbWEsRUFBYTdMLGVBQWlCeUwsS0FDdkNJLGFBQUFBLElBQ0QsT0FFZ0QsT0FGaER0SCxFQUFBcDhELEVBQUEsRUFBQXVuRSxFQUFBbkwsRUFBQXgwRCxFQUVEekksUUFBUUMsTUFBTSwyQkFBMEJtb0UsR0FBU25MLEVBQUE3N0QsRUFBQSxFQUMxQyxDQUFFZ3BELFFBQVMrWixPQUF5QixFQUFBbkgsRUFBQSxrQkFFOUMxK0QsTUFBQSxLQUFBb0osVUFBQSxDQW1ERCxTQUFTby9ELEtBQ1AsSUFBTTlOLEVBQWdDLENBQUMsRUFHdkMsR0FBSTkxRCxPQUFPQyxTQUFTNnBELFNBQVM5Z0QsU0FBUyxhQUFjLEtBQUFvOEQsRUFBQUMsRUFBQUMsRUFBQUMsRUFDNUM3TixHQUFzRCxRQUE1QzBOLEVBQUFuZ0UsU0FBUyt5RCxjQUFjLDZCQUFxQixJQUFBb04sT0FBQSxFQUE1Q0EsRUFBOEM3NEQsZUFDbEIsUUFENkI4NEQsRUFDMURwZ0UsU0FBUyt5RCxjQUFjLGNBQU0sSUFBQXFOLE9BQUEsRUFBN0JBLEVBQStCOTRELGFBQ3hDbkssR0FBZ0QsUUFBekNrakUsRUFBQXJnRSxTQUFTK3lELGNBQWMsMEJBQWtCLElBQUFzTixPQUFBLEVBQXpDQSxFQUEyQ3JOLGFBQWEsWUFDNUIsUUFEb0NzTixFQUNqRXRnRSxTQUFTK3lELGNBQWMsY0FBTSxJQUFBdU4sT0FBQSxFQUE3QkEsRUFBK0J0TixhQUFhLFVBRXBEUCxJQUFTNUIsRUFBUzRCLFFBQVVBLEdBQzVCdDFELElBQU0wekQsRUFBUzF6RCxLQUFPQSxFQUM1QixDQUVBLE9BQU8wekQsQ0FDVCxDQUdBLFNBQVMwUCxLQUNQLElBQU1DLEVBQWV4Z0UsU0FBU0MsY0FBYyxPQUM1Q3VnRSxFQUFhbDFELE1BQU0wdkQsUUFBVSxnWkFnQjdCd0YsRUFBYWw1RCxZQUFjLGtCQUUzQm01RCxHQUFpQkQsRUFDbkIsQ0FHQSxTQUFTOUUsS0FDUCxJQUFNOEUsRUFBZXhnRSxTQUFTQyxjQUFjLE9BQ3RDeWdFLEVBQWdCNUgsS0FFdEIwSCxFQUFhbDFELE1BQU0wdkQsUUFBVSw2RUFBSHQyQyxPQUlWZzhDLEVBQWdCLFVBQVksVUFBUyx1VkFjbkRGLEVBQWE1NEQsVUFEWDg0RCxFQUN1QixnVUFVQSw0QkFHM0JELEdBQWlCRCxFQUNuQixDQUVBLFNBQVNDLEdBQWlCRCxHQUV4QixJQUFNbDFELEVBQVF0TCxTQUFTQyxjQUFjLFNBQ3JDcUwsRUFBTWhFLFlBQWMsdU1BWXBCdEgsU0FBU2s3RCxLQUFLbHpELFlBQVlzRCxHQUUxQnRMLFNBQVM0RixLQUFLb0MsWUFBWXc0RCxHQUcxQm41QyxXQUFXLFdBQ0xtNUMsRUFBYXB6RCxhQUNmb3pELEVBQWFsMUQsTUFBTXdZLFVBQVksZ0NBQy9CdUQsV0FBVyxXQUNMbTVDLEVBQWFwekQsWUFDZm96RCxFQUFhcHpELFdBQVdyRixZQUFZeTRELEVBRXhDLEVBQUcsS0FFUCxFQUFHLElBQ0wsQ0FHQSxTQUFTMUosS0FDUGovRCxRQUFRckQsSUFBSSxnREFBaUR5aUUsSUFFekRBLEdBQ0YwSixLQU1KLFdBR0UsR0FGQTlvRSxRQUFRckQsSUFBSSwrQkFFUndpRSxHQUlGLE9BSEFuL0QsUUFBUXJELElBQUksa0RBQ1p5aUUsSUFBc0IsT0FDdEIySixLQUtGLElBQU1DLEVBQVk3Z0UsU0FBU0MsY0FBYyxPQUN6QzRnRSxFQUFVaHNFLEdBQUssNkJBQ2ZtTCxTQUFTNEYsS0FBS29DLFlBQVk2NEQsR0FHMUI3SixHQUFpQjhKLEVBQUFBLFdBQW9CRCxHQUNyQzVKLElBQXNCLEVBRXRCMkosSUFDRixDQXhCSUcsRUFFSixDQXdCQSxTQUFTSixLQUNQOW9FLFFBQVFyRCxJQUFJLCtCQUNaeWlFLElBQXNCLEVBQ3RCMkosSUFDRixDQUVBLFNBQVNBLEtBQ1AsR0FBSzVKLEdBQUwsQ0FFQSxJQUFNM1csRUFBYzBiLEtBQ2R6YixFQUFZdGdELFNBQVNoQixNQUNyQndoRCxFQUFVemxELE9BQU9DLFNBQVNDLEtBRTFCd25CLEVBQVV1K0MsRUFBQUEsY0FBb0JDLEVBQVksQ0FDOUMvZ0IsVUFBVytXLEdBQ1g5VyxRQUFTd2dCLEdBQ1R0Z0IsWUFBQUEsRUFDQUMsVUFBQUEsRUFDQUUsUUFBQUEsSUFHRndXLEdBQWU3eUQsT0FBT3NlLEVBZEssQ0FlN0IsQ0FzQkEsU0FBU3krQyxLQUNQcnBFLFFBQVFyRCxJQUFJLGlEQUFrRDJpRSxJQUUxREEsSUE4Qkp0L0QsUUFBUXJELElBQUksZ0NBQ1oyaUUsSUFBdUIsRUFDdkJnSyxNQTdCRUMsSUFFSixDQUVBLFNBQVNBLEtBR1AsR0FGQXZwRSxRQUFRckQsSUFBSSxnQ0FFUjBpRSxHQUlGLE9BSEFyL0QsUUFBUXJELElBQUksbURBQ1oyaUUsSUFBdUIsT0FDdkJnSyxLQUtGLElBQU1OLEVBQVk3Z0UsU0FBU0MsY0FBYyxPQUN6QzRnRSxFQUFVaHNFLEdBQUssOEJBQ2ZtTCxTQUFTNEYsS0FBS29DLFlBQVk2NEQsR0FHMUIzSixHQUFrQjRKLEVBQUFBLFdBQW9CRCxHQUN0QzFKLElBQXVCLEVBRXZCZ0ssSUFDRixDQVFBLFNBQVNBLEtBQ1AsR0FBS2pLLEdBQUwsQ0FFQSxJQUFNejBDLEVBQVV1K0MsRUFBQUEsY0FBb0JLLEVBQWEsQ0FDL0NuaEIsVUFBV2lYLEdBQ1h4VCxTQUFVdWQsS0FHWmhLLEdBQWdCL3lELE9BQU9zZSxFQVBLLENBUTlCLENBUUEsU0FBUzYrQyxLQUNQenBFLFFBQVFyRCxJQUFJLG9EQUFxRDZpRSxJQUU3REEsR0FDRmtLLEtBTUosV0FHRSxHQUZBMXBFLFFBQVFyRCxJQUFJLG1DQUVSNGlFLEdBSUYsT0FIQXYvRCxRQUFRckQsSUFBSSxzREFDWjZpRSxJQUEwQixPQUMxQm1LLEtBS0YsSUFBTVgsRUFBWTdnRSxTQUFTQyxjQUFjLE9BQ3pDNGdFLEVBQVVoc0UsR0FBSyxpQ0FDZm1MLFNBQVM0RixLQUFLb0MsWUFBWTY0RCxHQUcxQnpKLEdBQXFCMEosRUFBQUEsV0FBb0JELEdBQ3pDeEosSUFBMEIsRUFFMUJtSyxJQUNGLENBeEJJQyxFQUVKLENBd0JBLFNBQVNGLEtBQ1AxcEUsUUFBUXJELElBQUksbUNBQ1o2aUUsSUFBMEIsRUFDMUJtSyxJQUNGLENBRUEsU0FBU0EsS0FDUCxHQUFLcEssR0FBTCxDQUVBLElBQU0zMEMsRUFBVXUrQyxFQUFBQSxjQUFvQlUsR0FBZ0IsQ0FDbER4aEIsVUFBV21YLEdBQ1hsWCxRQUFTb2hCLEtBR1huSyxHQUFtQmp6RCxPQUFPc2UsRUFQSyxDQVFqQyxDQUVBLFNBQ2U0NEMsR0FBcUJqSSxFQUFBa0IsR0FBQSxPQUFBcU4sR0FBQXhyRSxNQUFDLEtBQURvSixVQUFBLFVBQUFvaUUsS0E2Rm5DLE9BN0ZtQ0EsR0FBQWplLEdBQUFyRSxLQUFBam5ELEVBQXBDLFNBQUE2OEQsRUFBcUMzMkMsRUFBY205QyxHQUFtQixJQUFBbUcsRUFBQTdqRCxFQUFBelMsRUFBQXUyRCxFQUFBQyxFQUFBQyxFQUFBcmtFLEVBQUFza0UsRUFBQW43RCxFQUFBbzdELEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUEsT0FBQWxqQixLQUFBcHBELEVBQUEsU0FBQWkvRCxHQUFBLGNBQUFBLEVBQUEzOEQsR0FBQSxPQUVTLEdBRlQyOEQsRUFBQXg4RCxFQUFBLEVBRWxFYixRQUFRckQsSUFBSSxzQ0FBdUMsQ0FBRWluRSxZQUFBQSxFQUFhbjlDLE1BQUFBLElBQzdEbTVDLEdBQW1CLENBQUZ2QyxFQUFBMzhELEVBQUEsUUFDcUQsT0FBekVWLFFBQVFyRCxJQUFJLDZEQUE2RDBnRSxFQUFBajhELEVBQUEsRUFDbEUsTUFBSSxVQUVScWxCLEVBQU8sQ0FBRjQyQyxFQUFBMzhELEVBQUEsUUFDMEQsT0FBbEVWLFFBQVEwRixLQUFLLHFEQUFxRDIzRCxFQUFBajhELEVBQUEsRUFDM0QsTUFBSSxXQUlUNi9ELEtBQXFCLENBQUY1RCxFQUFBMzhELEVBQUEsUUFDc0UsT0FBM0ZWLFFBQVFyRCxJQUFJLCtFQUErRTBnRSxFQUFBajhELEVBQUEsRUFDcEYsTUFBSSxjQUFBaThELEVBQUEzOEQsRUFBQSxFQUlrQisvRCxLQUFzQixPQXNDbUMsT0F0Q25Dc0osRUFBQTFNLEVBQUE1MEQsRUFBN0N5ZCxFQUFLNmpELEVBQUw3akQsTUFBT3pTLEVBQUtzMkQsRUFBTHQyRCxNQUNUdTJELEVBQWVqSixHQUF3Qjc2QyxFQUFPelMsSUFFOUN3MkQsRUFBZ0I5aEUsU0FBU0MsY0FBYyxTQUMvQmcrQyxVQUFZLGlCQUMxQjZqQixFQUFjbmdFLGFBQWEseUJBQTBCODVELEdBR3JEcUcsRUFBY3gyRCxNQUFNMHZELFFBQVUsV0FBSHQyQyxPQUN2Qm05QyxFQUFZLGtuQkFtQmhCQyxFQUFjenpELGlCQUFpQixRQUFTLFNBQUNoVixHQUN2Q0EsRUFBRXNkLGlCQUNGdGQsRUFBRW1jLGtCQUNGZ3RELEdBQWtCL0csRUFDcEIsR0FFQXZHLEVBQUF4OEQsRUFBQSxFQUVFNGxCLEVBQU1ta0QsaUJBQWlCWCxHQUN2QnRLLEdBQWU3ekQsSUFBSTgzRCxFQUFhcUcsR0FDaENqcUUsUUFBUXJELElBQUksd0RBQXlELENBQUVpbkUsWUFBQUEsSUFBZXZHLEVBQUFqOEQsRUFBQSxFQUMvRTZvRSxHQUFhLE9BR3BCLEdBSG9CNU0sRUFBQXg4RCxFQUFBLEVBQUE0cEUsRUFBQXBOLEVBQUE1MEQsRUFFcEJ6SSxRQUFRMEYsS0FBSyxpQ0FBZ0Mra0UsR0FFekNoa0QsRUFBTXc3QyxpQkFBbUJ4N0MsRUFBTW9rRCxjQUFnQnBrRCxFQUFNdzdDLGVBQWV6eEQsV0FBYTJ4RCxLQUFLQyxVQUFTLENBQUEvRSxFQUFBMzhELEVBQUEsUUFNL0QsR0FMNUJ3cEUsRUFBV3pqRCxFQUFNdzdDLGVBQ2pCcDhELEVBQU9xa0UsRUFBU3o2RCxhQUFlLEdBQy9CMDZELEVBQVN0a0UsRUFBS3BELE1BQU0sRUFBR2drQixFQUFNZzdDLGFBQzdCenlELEVBQVduSixFQUFLcEQsTUFBTWdrQixFQUFNZzdDLFlBQWFoN0MsRUFBTWk3QyxXQUMvQzBJLEVBQVF2a0UsRUFBS3BELE1BQU1na0IsRUFBTWk3QyxXQUN6QjJJLEVBQVNILEVBQVMzMEQsV0FDWCxDQUFGOG5ELEVBQUEzOEQsRUFBQSxRQUMyQyxPQUFwRFYsUUFBUTBGLEtBQUssdUNBQXVDMjNELEVBQUFqOEQsRUFBQSxFQUM3QyxNQUFJLE9BVzBFLE9BVGpGa3BFLEVBQWFuaUUsU0FBU3M5QixlQUFlMGtDLEdBQ3JDSSxFQUFlcGlFLFNBQVNzOUIsZUFBZXoyQixHQUN2Q3c3RCxFQUFZcmlFLFNBQVNzOUIsZUFBZTJrQyxHQUMxQ0gsRUFBYzk1RCxZQUFZbzZELEdBQzFCRixFQUFPdmpDLGFBQWF3akMsRUFBWUosR0FDaENHLEVBQU92akMsYUFBYW1qQyxFQUFlQyxHQUNuQ0csRUFBT3ZqQyxhQUFhMGpDLEVBQVdOLEdBQy9CRyxFQUFPbjZELFlBQVlnNkQsR0FDbkJ2SyxHQUFlN3pELElBQUk4M0QsRUFBYXFHLEdBQ2hDanFFLFFBQVFyRCxJQUFJLHlEQUEwRCxDQUFFaW5FLFlBQUFBLElBQWV2RyxFQUFBajhELEVBQUEsRUFDaEY2b0UsR0FBYSxPQUVpRixPQUFyR2pxRSxRQUFRMEYsS0FBSyxzRUFBdUUsQ0FBRWsrRCxZQUFBQSxJQUFldkcsRUFBQWo4RCxFQUFBLEVBQzlGLE1BQUksT0FBQWk4RCxFQUFBMzhELEVBQUEsaUJBSW1ELE9BSm5EMjhELEVBQUF4OEQsRUFBQSxHQUFBNnBFLEVBQUFyTixFQUFBNTBELEVBSWZ6SSxRQUFRQyxNQUFNLDRDQUEyQ3lxRSxHQUFTck4sRUFBQWo4RCxFQUFBLEVBQzNELE1BQUksZUFBQWk4RCxFQUFBajhELEVBQUEsS0FBQWc4RCxFQUFBLHlCQUVkOStELE1BQUEsS0FBQW9KLFVBQUEsQ0FFRCxTQUFTbzhELEdBQWdCRixHQUN2QjVqRSxRQUFRckQsSUFBSSw0QkFBNkJpbkUsR0FFekMsSUFBTUgsRUFBbUI5RCxHQUFleHlELElBQUl5MkQsR0FDNUMsR0FBSUgsR0FBb0JBLEVBQWlCbHVELFdBQVksQ0FFbkQsSUFBTTlGLEVBQWNnMEQsRUFBaUJoMEQsYUFBZSxHQUM5Q3k2RCxFQUFXL2hFLFNBQVNzOUIsZUFBZWgyQixHQUN6Q2cwRCxFQUFpQmx1RCxXQUFXdTFELGFBQWFaLEVBQVV6RyxHQUduRDlELEdBQWMsT0FBUWlFLEdBRXRCNWpFLFFBQVFyRCxJQUFJLHVDQUNkLENBQ0YsQ0FFQSxTQUFTZ3VFLEdBQWtCL0csR0FDekI1akUsUUFBUXJELElBQUksb0NBQXFDaW5FLEdBR2pELElBQU1tSCxFQUFVNWlFLFNBQVNDLGNBQWMsT0FDdkMyaUUsRUFBUS90RSxHQUFLLHlCQUNiK3RFLEVBQVF0M0QsTUFBTTB2RCxRQUFVLDZXQWN4QjRILEVBQVFoN0QsVUFBWSxzb0JBcUJwQixJQUFNMHpELEVBQW1COUQsR0FBZXh5RCxJQUFJeTJELEdBQzVDLEdBQUlILEVBQWtCLENBQ3BCLElBQU1wUCxFQUFPb1AsRUFBaUJuUCx3QkFDOUJ5VyxFQUFRdDNELE1BQU1vWCxLQUFPLEdBQUhnQyxPQUFNd25DLEVBQUt4cEMsS0FBSSxNQUNqQ2tnRCxFQUFRdDNELE1BQU1zWCxJQUFNLEdBQUg4QixPQUFNd25DLEVBQUttTyxPQUFTLEdBQUUsS0FDekMsQ0FFQXI2RCxTQUFTNEYsS0FBS29DLFlBQVk0NkQsR0FHMUIsSUFBTUMsRUFBZUQsRUFBUTdQLGNBQWMsMEJBQ3ZDOFAsR0FDRkEsRUFBYXgwRCxpQkFBaUIsUUFBUyxXQUNyQ3N0RCxHQUFnQkYsR0FDaEJxSCxLQUdBN2QsT0FBT2hTLFFBQVFnYyxZQUFZLENBQ3pCeDVELE9BQVEsNkJBQ1JnbUUsWUFBQUEsRUFDQS84QyxJQUFLM2pCLE9BQU9DLFNBQVNDLE1BRXpCLEdBSUZvc0IsV0FBVyxXQUNUcm5CLFNBQVNxTyxpQkFBaUIsUUFBU3kwRCxHQUFzQixDQUFFQyxNQUFNLEdBQ25FLEVBQUcsSUFDTCxDQUVBLFNBQVNELEtBQ1AsSUFBTUYsRUFBVTVpRSxTQUFTaTdELGVBQWUsMEJBQ3BDMkgsR0FBV0EsRUFBUXgxRCxZQUNyQncxRCxFQUFReDFELFdBQVdyRixZQUFZNjZELEVBRW5DLENBRUEsU0FBU0ksS0FDUG5yRSxRQUFRckQsSUFBSSxrREFHWixJQUFNbXdELEVBQWE1cEQsT0FBT0MsU0FBU0MsS0FHbkNncUQsT0FBT2hTLFFBQVFnYyxZQUFZLENBQ3pCeDVELE9BQVEsdUJBQ1JpcEIsSUFBS2ltQyxHQUNKLFNBQUM0VyxHQUNFQSxHQUFZQSxFQUFTMEgsWUFBYzFILEVBQVMwSCxXQUFXN3RFLE9BQVMsR0FDbEV5QyxRQUFRckQsSUFBSSxjQUFlK21FLEVBQVMwSCxXQUFXN3RFLE9BQVEseUJBQ3ZEOHRFLEdBQWtCM0gsRUFBUzBILGFBRTNCcHJFLFFBQVFyRCxJQUFJLDBDQUVoQixFQUNGLENBRUEsU0FBUzB1RSxHQUFrQkQsR0FDekJwckUsUUFBUXJELElBQUksOEJBQStCeXVFLEdBRTNDQSxFQUFXdnNFLFFBQVEsU0FBQXlzRSxHQUNqQixHQUFJQSxFQUFVNWMsVUFBWTRjLEVBQVVoSyxhQUNsQyxJQUVFLElBQU1pSyxFQTJCZCxTQUF1QjNnRCxFQUFlNGdELEdBQ3BDLElBQU1ELEVBQW9CLEdBZ0IxQixPQWRBLFNBQVNFLEVBQVM5aUQsR0FDaEIsR0FBSUEsRUFBS25ZLFdBQWEyeEQsS0FBS0MsV0FDWno1QyxFQUFLbFosYUFBZSxJQUN4QnZELFNBQVNzL0QsSUFDaEJELEVBQVVydEUsS0FBS3lxQixRQUdqQixJQUFLLElBQUlqckIsRUFBSSxFQUFHQSxFQUFJaXJCLEVBQUsraUQsV0FBV251RSxPQUFRRyxJQUMxQyt0RSxFQUFTOWlELEVBQUsraUQsV0FBV2h1RSxHQUcvQixDQUVBK3RFLENBQVM3Z0QsR0FDRjJnRCxDQUNULENBN0MwQkksQ0FBY3hqRSxTQUFTNEYsS0FBTXU5RCxFQUFVaEssY0FFekQsR0FBSWlLLEVBQVVodUUsT0FBUyxFQUFHLEtBQUFxdUUsRUFFbEIxQixFQUFXcUIsRUFBVSxHQUNyQjlrRCxFQUFRdGUsU0FBU29pQixjQUdqQmszQyxHQUFrQyxRQUFwQm1LLEVBQUExQixFQUFTejZELG1CQUFXLElBQUFtOEQsT0FBQSxFQUFwQkEsRUFBc0JsNEQsUUFBUTQzRCxFQUFVaEssZ0JBQWlCLEVBQ3ZFSSxFQUFZRCxFQUFjNkosRUFBVWhLLGFBQWEvakUsT0FFdkRrcEIsRUFBTStELFNBQVMwL0MsRUFBVXpJLEdBQ3pCaDdDLEVBQU1rRSxPQUFPdS9DLEVBQVV4SSxHQUd2QjhCLEdBQXNCLzhDLEVBQU82a0QsRUFBVXR1RSxJQUN2Q2dELFFBQVFyRCxJQUFJLDRCQUE2QjJ1RSxFQUFVdHVFLEdBQ3JELE1BQ0VnRCxRQUFRckQsSUFBSSwyQ0FBNEMydUUsRUFBVXR1RSxHQUV0RSxDQUFFLE1BQU9pRCxHQUNQRCxRQUFRQyxNQUFNLHFDQUFzQ3FyRSxFQUFVdHVFLEdBQUlpRCxFQUNwRSxDQUVKLEVBQ0YsQ0FzQkEsU0FBUzRyRSxHQUFpQkMsR0FDeEJsTSxHQUFvQmtNLEVBRWhCQSxHQUVGbk0sR0FBZTlnRSxRQUFRLFNBQUMrckIsRUFBUzV0QixHQUMvQjR0QixFQUFRblgsTUFBTXMwQixRQUFVLFNBQ3hCbmQsRUFBUW5YLE1BQU1sQixRQUFVLEdBQzFCLEdBQ0F2UyxRQUFRckQsSUFBSSw4QkFHWmdqRSxHQUFlOWdFLFFBQVEsU0FBQytyQixFQUFTNXRCLEdBQy9CNHRCLEVBQVFuWCxNQUFNczBCLFFBQVUsT0FDeEJuZCxFQUFRblgsTUFBTWxCLFFBQVUsR0FDMUIsR0FDQXZTLFFBQVFyRCxJQUFJLDZCQUVoQixDQUdBLFNBQVNvdkUsS0FDUCxJQUFJNWpFLFNBQVNpN0QsZUFBZSx5QkFBNUIsQ0FJQSxJQUFNM3ZELEVBQVF0TCxTQUFTQyxjQUFjLFNBQ3JDcUwsRUFBTXpXLEdBQUssd0JBQ1h5VyxFQUFNaEUsWUFBYyx1K0NBNkNwQnRILFNBQVNrN0QsS0FBS2x6RCxZQUFZc0QsRUFqRDFCLENBa0RGLENBMTJDQTI1QyxPQUFPaFMsUUFBUXozQyxVQUFVcW9FLFlBQVcsZUFBQTVqQixFQUFBeUQsR0FBQXJFLEtBQUFqbkQsRUFBQyxTQUFBd3BELEVBQU9raUIsRUFBU0MsRUFBUUMsR0FBWSxJQUFBL2hCLEVBQUFnaUIsRUFBQUMsRUFBQWxpQixFQUFBLE9BQUEzQyxLQUFBcHBELEVBQUEsU0FBQW9PLEdBQUEsY0FBQUEsRUFBQTlMLEdBQUEsT0FDYixHQUExRFYsUUFBUXJELElBQUksb0NBQXFDc3ZFLEdBQzFCLG1CQUFuQkEsRUFBUXJ1RSxPQUEyQixDQUFBNE8sRUFBQTlMLEVBQUEsUUFDL0IwcEQsRUFBVThaLEtBQ2hCbGtFLFFBQVFyRCxJQUFJLGdEQUFpRHl0RCxFQUFRN3NELFFBQ3JFNHVFLEVBQWEsQ0FBRS9oQixRQUFBQSxJQUFXNTlDLEVBQUE5TCxFQUFBLGtCQUNFLDJCQUFuQnVyRSxFQUFRcnVFLE9BQW1DLENBQUE0TyxFQUFBOUwsRUFBQSxlQUFBOEwsRUFBQTNMLEVBQUEsRUFBQTJMLEVBQUE5TCxFQUFBLEVBRXBCMGpFLEtBQTRCLE9BQXBEZ0ksRUFBZTUvRCxFQUFBL0QsRUFDckJ6SSxRQUFRckQsSUFBSSxpREFBa0R5dkUsRUFBZ0I5SCxhQUM5RTZILEVBQWEsQ0FBRUMsZ0JBQUFBLElBQW1CNS9ELEVBQUE5TCxFQUFBLGVBQUE4TCxFQUFBM0wsRUFBQSxFQUFBc3BELEVBQUEzOUMsRUFBQS9ELEVBRWxDekksUUFBUUMsTUFBTSxzQ0FBcUNrcUQsR0FFN0NDLEVBQVU4WixLQUNoQmlJLEVBQWEsQ0FDWEMsZ0JBQWlCLENBQ2ZoaUIsUUFBQUEsRUFDQWthLFlBQWEsVUFDYnRMLFNBQVUsQ0FDUm55QyxJQUFLM2pCLE9BQU9DLFNBQVNDLEtBQ3JCc3FELE9BQVF4cUQsT0FBT0MsU0FBUzZwRCxTQUN4QnNZLGFBQWEsSUFBSTVsRCxNQUFPNjNDLGtCQUczQixPQUFBL3FELEVBQUE5TCxFQUFBLGVBRXVCLHlCQUFuQnVyRSxFQUFRcnVFLE9BQ2pCOHFFLEtBQzRCLDhCQUFuQnVELEVBQVFydUUsT0FDakJpbUUsS0FDNEIscUJBQW5Cb0ksRUFBUXJ1RSxRQUNqQm9DLFFBQVFyRCxJQUFJLDRCQUNac2lFLEtBQ0FrTixFQUFhLENBQUV4SSxTQUFTLEtBQ0ksc0JBQW5Cc0ksRUFBUXJ1RSxRQUNqQm9DLFFBQVFyRCxJQUFJLDZCQUNaMHNFLEtBQ0E4QyxFQUFhLENBQUV4SSxTQUFTLEtBQ0kseUJBQW5Cc0ksRUFBUXJ1RSxRQUNqQm9DLFFBQVFyRCxJQUFJLGdDQUNaOHNFLEtBQ0EwQyxFQUFhLENBQUV4SSxTQUFTLEtBQ0ksc0JBQW5Cc0ksRUFBUXJ1RSxRQUNqQm9DLFFBQVFyRCxJQUFJLDhCQUNaMHVFLEdBQWtCWSxFQUFRYixZQUMxQmUsRUFBYSxDQUFFeEksU0FBUyxLQUNJLG9CQUFuQnNJLEVBQVFydUUsUUFDakJvQyxRQUFRckQsSUFBSSw0QkFDWm1uRSxHQUFnQm1JLEVBQVFySSxhQUN4QnVJLEVBQWEsQ0FBRXhJLFNBQVMsS0FDSSxxQkFBbkJzSSxFQUFRcnVFLFNBQ2pCb0MsUUFBUXJELElBQUksNkJBQ1prdkUsR0FBaUJJLEVBQVFILFNBQ3pCSyxFQUFhLENBQUV4SSxTQUFTLEtBQ3pCLGNBQUFuM0QsRUFBQXBMLEVBQUEsR0FDTSxHQUFJLEVBQUEyb0QsRUFBQSxpQkFDWixnQkFBQVMsRUFBQW9QLEVBQUFPLEdBQUEsT0FBQS9SLEVBQUE5cEQsTUFBQSxLQUFBb0osVUFBQSxFQXpEbUMsSUE0RHBDUyxTQUFTcU8saUJBQWlCLG1CQUFvQixXQUM1Q3hXLFFBQVFyRCxJQUFJLHNEQUNad3VFLElBQ0YsR0FHQWpvRSxPQUFPc1QsaUJBQWlCLE9BQVEsV0FDOUJ4VyxRQUFRckQsSUFBSSx1REFDWnd1RSxJQUNGLEdBR0FoakUsU0FBU3FPLGlCQUFpQixVQUFXNHFELElBQ3JDajVELFNBQVNxTyxpQkFBaUIsUUFBUzRxRCxJQUNuQ3BoRSxRQUFRckQsSUFBSSw4Q0E4VVp3TCxTQUFTcU8saUJBQWlCLFFBQVMsU0FBQzlSLEdBQzlCZzdELEtBQW9CQSxHQUFnQjMyQyxTQUFTcmtCLEVBQU0wUSxTQUNyRDRzRCxJQUVKLEdBK2ZBNzVELFNBQVNxTyxpQkFBaUIsVUFBVyxTQUFDaFYsR0FFaENBLEVBQUVtZixRQUFvQixNQUFWbmYsRUFBRVYsTUFDaEJVLEVBQUVzZCxpQkFDRm1nRCxNQUdFejlELEVBQUVtZixRQUFvQixNQUFWbmYsRUFBRVYsTUFDaEJVLEVBQUVzZCxpQkFDRnVxRCxNQUdFN25FLEVBQUVtZixRQUFvQixNQUFWbmYsRUFBRVYsTUFDaEJVLEVBQUVzZCxpQkFDRjJxRCxLQUVKLEdBcURBajZDLFdBQVcsV0FDVCs1QyxJQUNGLEVBQUcsS0EyWUhwaEUsU0FBU3FPLGlCQUFpQixtQkFBb0IsV0FDNUN1MUQsSUFDRixHQUdBN29FLE9BQU9zVCxpQkFBaUIsT0FBUSxXQUM5QnUxRCxJQUNGLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy9jcmVhdGVTY2hlZHVsZXIuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvY29uc3RhbnRzL1BTTS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvdXRpbHMvZ2V0SWQuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvd29ya2VyL2Jyb3dzZXIvZGVmYXVsdE9wdGlvbnMuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvY3JlYXRlV29ya2VyLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy9jb25zdGFudHMvbGFuZ3VhZ2VzLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy90ZXNzZXJhY3QuanMvc3JjL3V0aWxzL2dldEVudmlyb25tZW50LmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy90ZXNzZXJhY3QuanMvc3JjL2NvbnN0YW50cy9kZWZhdWx0T3B0aW9ucy5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy91dGlscy9jaXJjdWxhcml6ZS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL2lzLWVsZWN0cm9uL2luZGV4LmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy90ZXNzZXJhY3QuanMvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy90ZXNzZXJhY3QuanMvc3JjL3dvcmtlci9icm93c2VyL3NlbmQuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy93b3JrZXIvYnJvd3Nlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy93b3JrZXIvYnJvd3Nlci9vbk1lc3NhZ2UuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvdXRpbHMvcmVzb2x2ZVBhdGhzLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvcmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy90ZXNzZXJhY3QuanMvc3JjL3dvcmtlci9icm93c2VyL3NwYXduV29ya2VyLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy9UZXNzZXJhY3QuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvY29uc3RhbnRzL2NvbmZpZy5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy91dGlscy9sb2cuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvY3JlYXRlSm9iLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy90ZXNzZXJhY3QuanMvc3JjL3dvcmtlci9icm93c2VyL3Rlcm1pbmF0ZVdvcmtlci5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvdGVzc2VyYWN0LmpzL3NyYy9jb25zdGFudHMvT0VNLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3Rlc3NlcmFjdC5qcy9zcmMvd29ya2VyL2Jyb3dzZXIvbG9hZEltYWdlLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2RlZmF1bHRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3NwYXJrbGVzLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvbWF4aW1pemUtMi5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21pbmltaXplLTIuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy94LmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcmVmcmVzaC1jdy5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NvcHkuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9zZW5kLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9jb250ZW50L0Zsb2F0aW5nQUkudHN4Iiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcGx1cy5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3BhbGV0dGUuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9wZW4tbGluZS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3RyYXNoLTIuanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9tb3ZlLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9jb250ZW50L1N0aWNreU5vdGVzLnRzeCIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NhbWVyYS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3NxdWFyZS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NpcmNsZS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2Fycm93LXJpZ2h0LmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvdHlwZS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3VuZG8uanMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9yZWRvLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvc2F2ZS5qcyIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2Rvd25sb2FkLmpzIiwid2VicGFjazovL25lc3QtY2hyb21lLWV4dGVuc2lvbi8uL3NyYy9jb250ZW50L1NjcmVlbnNob3RUb29sLnRzeCIsIndlYnBhY2s6Ly9uZXN0LWNocm9tZS1leHRlbnNpb24vLi9zcmMvdXRpbHMvbWVkaWFQcm9jZXNzb3IudHMiLCJ3ZWJwYWNrOi8vbmVzdC1jaHJvbWUtZXh0ZW5zaW9uLy4vc3JjL2NvbnRlbnQvY29udGVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcmVhdGVKb2IgPSByZXF1aXJlKCcuL2NyZWF0ZUpvYicpO1xuY29uc3QgeyBsb2cgfSA9IHJlcXVpcmUoJy4vdXRpbHMvbG9nJyk7XG5jb25zdCBnZXRJZCA9IHJlcXVpcmUoJy4vdXRpbHMvZ2V0SWQnKTtcblxubGV0IHNjaGVkdWxlckNvdW50ZXIgPSAwO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcbiAgY29uc3QgaWQgPSBnZXRJZCgnU2NoZWR1bGVyJywgc2NoZWR1bGVyQ291bnRlcik7XG4gIGNvbnN0IHdvcmtlcnMgPSB7fTtcbiAgY29uc3QgcnVubmluZ1dvcmtlcnMgPSB7fTtcbiAgbGV0IGpvYlF1ZXVlID0gW107XG5cbiAgc2NoZWR1bGVyQ291bnRlciArPSAxO1xuXG4gIGNvbnN0IGdldFF1ZXVlTGVuID0gKCkgPT4gam9iUXVldWUubGVuZ3RoO1xuICBjb25zdCBnZXROdW1Xb3JrZXJzID0gKCkgPT4gT2JqZWN0LmtleXMod29ya2VycykubGVuZ3RoO1xuXG4gIGNvbnN0IGRlcXVldWUgPSAoKSA9PiB7XG4gICAgaWYgKGpvYlF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgY29uc3Qgd0lkcyA9IE9iamVjdC5rZXlzKHdvcmtlcnMpO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB3SWRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcnVubmluZ1dvcmtlcnNbd0lkc1tpXV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgam9iUXVldWVbMF0od29ya2Vyc1t3SWRzW2ldXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgcXVldWUgPSAoYWN0aW9uLCBwYXlsb2FkKSA9PiAoXG4gICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgY29uc3Qgam9iID0gY3JlYXRlSm9iKHsgYWN0aW9uLCBwYXlsb2FkIH0pO1xuICAgICAgam9iUXVldWUucHVzaChhc3luYyAodykgPT4ge1xuICAgICAgICBqb2JRdWV1ZS5zaGlmdCgpO1xuICAgICAgICBydW5uaW5nV29ya2Vyc1t3LmlkXSA9IGpvYjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICByZXNvbHZlKGF3YWl0IHdbYWN0aW9uXS5hcHBseSh0aGlzLCBbLi4ucGF5bG9hZCwgam9iLmlkXSkpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBkZWxldGUgcnVubmluZ1dvcmtlcnNbdy5pZF07XG4gICAgICAgICAgZGVxdWV1ZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGxvZyhgWyR7aWR9XTogQWRkICR7am9iLmlkfSB0byBKb2JRdWV1ZWApO1xuICAgICAgbG9nKGBbJHtpZH1dOiBKb2JRdWV1ZSBsZW5ndGg9JHtqb2JRdWV1ZS5sZW5ndGh9YCk7XG4gICAgICBkZXF1ZXVlKCk7XG4gICAgfSlcbiAgKTtcblxuICBjb25zdCBhZGRXb3JrZXIgPSAodykgPT4ge1xuICAgIHdvcmtlcnNbdy5pZF0gPSB3O1xuICAgIGxvZyhgWyR7aWR9XTogQWRkICR7dy5pZH1gKTtcbiAgICBsb2coYFske2lkfV06IE51bWJlciBvZiB3b3JrZXJzPSR7Z2V0TnVtV29ya2VycygpfWApO1xuICAgIGRlcXVldWUoKTtcbiAgICByZXR1cm4gdy5pZDtcbiAgfTtcblxuICBjb25zdCBhZGRKb2IgPSBhc3luYyAoYWN0aW9uLCAuLi5wYXlsb2FkKSA9PiB7XG4gICAgaWYgKGdldE51bVdvcmtlcnMoKSA9PT0gMCkge1xuICAgICAgdGhyb3cgRXJyb3IoYFske2lkfV06IFlvdSBuZWVkIHRvIGhhdmUgYXQgbGVhc3Qgb25lIHdvcmtlciBiZWZvcmUgYWRkaW5nIGpvYnNgKTtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXVlKGFjdGlvbiwgcGF5bG9hZCk7XG4gIH07XG5cbiAgY29uc3QgdGVybWluYXRlID0gYXN5bmMgKCkgPT4ge1xuICAgIE9iamVjdC5rZXlzKHdvcmtlcnMpLmZvckVhY2goYXN5bmMgKHdpZCkgPT4ge1xuICAgICAgYXdhaXQgd29ya2Vyc1t3aWRdLnRlcm1pbmF0ZSgpO1xuICAgIH0pO1xuICAgIGpvYlF1ZXVlID0gW107XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBhZGRXb3JrZXIsXG4gICAgYWRkSm9iLFxuICAgIHRlcm1pbmF0ZSxcbiAgICBnZXRRdWV1ZUxlbixcbiAgICBnZXROdW1Xb3JrZXJzLFxuICB9O1xufTtcbiIsIi8qXG4gKiBQU00gPSBQYWdlIFNlZ21lbnRhdGlvbiBNb2RlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBPU0RfT05MWTogJzAnLFxuICBBVVRPX09TRDogJzEnLFxuICBBVVRPX09OTFk6ICcyJyxcbiAgQVVUTzogJzMnLFxuICBTSU5HTEVfQ09MVU1OOiAnNCcsXG4gIFNJTkdMRV9CTE9DS19WRVJUX1RFWFQ6ICc1JyxcbiAgU0lOR0xFX0JMT0NLOiAnNicsXG4gIFNJTkdMRV9MSU5FOiAnNycsXG4gIFNJTkdMRV9XT1JEOiAnOCcsXG4gIENJUkNMRV9XT1JEOiAnOScsXG4gIFNJTkdMRV9DSEFSOiAnMTAnLFxuICBTUEFSU0VfVEVYVDogJzExJyxcbiAgU1BBUlNFX1RFWFRfT1NEOiAnMTInLFxuICBSQVdfTElORTogJzEzJyxcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1qc3gtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGY9cmVxdWlyZShcInJlYWN0XCIpLGs9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksbD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksbT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG49Zi5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcixwPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBxKGMsYSxnKXt2YXIgYixkPXt9LGU9bnVsbCxoPW51bGw7dm9pZCAwIT09ZyYmKGU9XCJcIitnKTt2b2lkIDAhPT1hLmtleSYmKGU9XCJcIithLmtleSk7dm9pZCAwIT09YS5yZWYmJihoPWEucmVmKTtmb3IoYiBpbiBhKW0uY2FsbChhLGIpJiYhcC5oYXNPd25Qcm9wZXJ0eShiKSYmKGRbYl09YVtiXSk7aWYoYyYmYy5kZWZhdWx0UHJvcHMpZm9yKGIgaW4gYT1jLmRlZmF1bHRQcm9wcyxhKXZvaWQgMD09PWRbYl0mJihkW2JdPWFbYl0pO3JldHVybnskJHR5cGVvZjprLHR5cGU6YyxrZXk6ZSxyZWY6aCxwcm9wczpkLF9vd25lcjpuLmN1cnJlbnR9fWV4cG9ydHMuRnJhZ21lbnQ9bDtleHBvcnRzLmpzeD1xO2V4cG9ydHMuanN4cz1xO1xuIiwibW9kdWxlLmV4cG9ydHMgPSAocHJlZml4LCBjbnQpID0+IChcbiAgYCR7cHJlZml4fS0ke2NudH0tJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zbGljZSgzLCA4KX1gXG4pO1xuIiwiY29uc3QgcmVzb2x2ZVVSTCA9IChzKSA9PiAobmV3IFVSTChzLCB3aW5kb3cubG9jYXRpb24uaHJlZikpLmhyZWY7XG5jb25zdCB7IHZlcnNpb24gfSA9IHJlcXVpcmUoJy4uLy4uLy4uL3BhY2thZ2UuanNvbicpO1xuY29uc3QgZGVmYXVsdE9wdGlvbnMgPSByZXF1aXJlKCcuLi8uLi9jb25zdGFudHMvZGVmYXVsdE9wdGlvbnMnKTtcblxuLypcbiAqIERlZmF1bHQgb3B0aW9ucyBmb3IgYnJvd3NlciB3b3JrZXJcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC4uLmRlZmF1bHRPcHRpb25zLFxuICB3b3JrZXJQYXRoOiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MuZW52LlRFU1NfRU5WID09PSAnZGV2ZWxvcG1lbnQnKVxuICAgID8gcmVzb2x2ZVVSTChgL2Rpc3Qvd29ya2VyLmRldi5qcz9ub2NhY2hlPSR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMyl9YClcbiAgICA6IGBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3Rlc3NlcmFjdC5qc0B2JHt2ZXJzaW9ufS9kaXN0L3dvcmtlci5taW4uanNgLFxuICAvKlxuICAgKiBJZiBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBXZWJBc3NlbWJseSxcbiAgICogbG9hZCBBU00gdmVyc2lvbiBpbnN0ZWFkXG4gICAqL1xuICBjb3JlUGF0aDogbnVsbCxcbn07XG4iLCJjb25zdCByZXNvbHZlUGF0aHMgPSByZXF1aXJlKCcuL3V0aWxzL3Jlc29sdmVQYXRocycpO1xuY29uc3QgY2lyY3VsYXJpemUgPSByZXF1aXJlKCcuL3V0aWxzL2NpcmN1bGFyaXplJyk7XG5jb25zdCBjcmVhdGVKb2IgPSByZXF1aXJlKCcuL2NyZWF0ZUpvYicpO1xuY29uc3QgeyBsb2cgfSA9IHJlcXVpcmUoJy4vdXRpbHMvbG9nJyk7XG5jb25zdCBnZXRJZCA9IHJlcXVpcmUoJy4vdXRpbHMvZ2V0SWQnKTtcbmNvbnN0IHsgZGVmYXVsdE9FTSB9ID0gcmVxdWlyZSgnLi9jb25zdGFudHMvY29uZmlnJyk7XG5jb25zdCB7XG4gIGRlZmF1bHRPcHRpb25zLFxuICBzcGF3bldvcmtlcixcbiAgdGVybWluYXRlV29ya2VyLFxuICBvbk1lc3NhZ2UsXG4gIGxvYWRJbWFnZSxcbiAgc2VuZCxcbn0gPSByZXF1aXJlKCcuL3dvcmtlci9ub2RlJyk7XG5cbmxldCB3b3JrZXJDb3VudGVyID0gMDtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoX29wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBpZCA9IGdldElkKCdXb3JrZXInLCB3b3JrZXJDb3VudGVyKTtcbiAgY29uc3Qge1xuICAgIGxvZ2dlcixcbiAgICBlcnJvckhhbmRsZXIsXG4gICAgLi4ub3B0aW9uc1xuICB9ID0gcmVzb2x2ZVBhdGhzKHtcbiAgICAuLi5kZWZhdWx0T3B0aW9ucyxcbiAgICAuLi5fb3B0aW9ucyxcbiAgfSk7XG4gIGNvbnN0IHJlc29sdmVzID0ge307XG4gIGNvbnN0IHJlamVjdHMgPSB7fTtcblxuICBsZXQgd29ya2VyUmVzUmVqZWN0O1xuICBsZXQgd29ya2VyUmVzUmVzb2x2ZTtcbiAgY29uc3Qgd29ya2VyUmVzID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHdvcmtlclJlc1Jlc29sdmUgPSByZXNvbHZlO1xuICAgIHdvcmtlclJlc1JlamVjdCA9IHJlamVjdDtcbiAgfSk7XG4gIGNvbnN0IHdvcmtlckVycm9yID0gKGV2ZW50KSA9PiB7IHdvcmtlclJlc1JlamVjdChldmVudC5tZXNzYWdlKTsgfTtcblxuICBsZXQgd29ya2VyID0gc3Bhd25Xb3JrZXIob3B0aW9ucyk7XG4gIHdvcmtlci5vbmVycm9yID0gd29ya2VyRXJyb3I7XG5cbiAgd29ya2VyQ291bnRlciArPSAxO1xuXG4gIGNvbnN0IHNldFJlc29sdmUgPSAoYWN0aW9uLCByZXMpID0+IHtcbiAgICByZXNvbHZlc1thY3Rpb25dID0gcmVzO1xuICB9O1xuXG4gIGNvbnN0IHNldFJlamVjdCA9IChhY3Rpb24sIHJlaikgPT4ge1xuICAgIHJlamVjdHNbYWN0aW9uXSA9IHJlajtcbiAgfTtcblxuICBjb25zdCBzdGFydEpvYiA9ICh7IGlkOiBqb2JJZCwgYWN0aW9uLCBwYXlsb2FkIH0pID0+IChcbiAgICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsb2coYFske2lkfV06IFN0YXJ0ICR7am9iSWR9LCBhY3Rpb249JHthY3Rpb259YCk7XG4gICAgICBzZXRSZXNvbHZlKGFjdGlvbiwgcmVzb2x2ZSk7XG4gICAgICBzZXRSZWplY3QoYWN0aW9uLCByZWplY3QpO1xuICAgICAgc2VuZCh3b3JrZXIsIHtcbiAgICAgICAgd29ya2VySWQ6IGlkLFxuICAgICAgICBqb2JJZCxcbiAgICAgICAgYWN0aW9uLFxuICAgICAgICBwYXlsb2FkLFxuICAgICAgfSk7XG4gICAgfSlcbiAgKTtcblxuICBjb25zdCBsb2FkID0gKCkgPT4gKFxuICAgIGNvbnNvbGUud2FybignYGxvYWRgIGlzIGRlcHJlY2lhdGVkIGFuZCBzaG91bGQgYmUgcmVtb3ZlZCBmcm9tIGNvZGUgKHdvcmtlcnMgbm93IGNvbWUgcHJlLWxvYWRlZCknKVxuICApO1xuXG4gIGNvbnN0IGxvYWRJbnRlcm5hbCA9IChqb2JJZCkgPT4gKFxuICAgIHN0YXJ0Sm9iKGNyZWF0ZUpvYih7XG4gICAgICBpZDogam9iSWQsIGFjdGlvbjogJ2xvYWQnLCBwYXlsb2FkOiB7IG9wdGlvbnMgfSxcbiAgICB9KSlcbiAgKTtcblxuICBjb25zdCB3cml0ZVRleHQgPSAocGF0aCwgdGV4dCwgam9iSWQpID0+IChcbiAgICBzdGFydEpvYihjcmVhdGVKb2Ioe1xuICAgICAgaWQ6IGpvYklkLFxuICAgICAgYWN0aW9uOiAnRlMnLFxuICAgICAgcGF5bG9hZDogeyBtZXRob2Q6ICd3cml0ZUZpbGUnLCBhcmdzOiBbcGF0aCwgdGV4dF0gfSxcbiAgICB9KSlcbiAgKTtcblxuICBjb25zdCByZWFkVGV4dCA9IChwYXRoLCBqb2JJZCkgPT4gKFxuICAgIHN0YXJ0Sm9iKGNyZWF0ZUpvYih7XG4gICAgICBpZDogam9iSWQsXG4gICAgICBhY3Rpb246ICdGUycsXG4gICAgICBwYXlsb2FkOiB7IG1ldGhvZDogJ3JlYWRGaWxlJywgYXJnczogW3BhdGgsIHsgZW5jb2Rpbmc6ICd1dGY4JyB9XSB9LFxuICAgIH0pKVxuICApO1xuXG4gIGNvbnN0IHJlbW92ZUZpbGUgPSAocGF0aCwgam9iSWQpID0+IChcbiAgICBzdGFydEpvYihjcmVhdGVKb2Ioe1xuICAgICAgaWQ6IGpvYklkLFxuICAgICAgYWN0aW9uOiAnRlMnLFxuICAgICAgcGF5bG9hZDogeyBtZXRob2Q6ICd1bmxpbmsnLCBhcmdzOiBbcGF0aF0gfSxcbiAgICB9KSlcbiAgKTtcblxuICBjb25zdCBGUyA9IChtZXRob2QsIGFyZ3MsIGpvYklkKSA9PiAoXG4gICAgc3RhcnRKb2IoY3JlYXRlSm9iKHtcbiAgICAgIGlkOiBqb2JJZCxcbiAgICAgIGFjdGlvbjogJ0ZTJyxcbiAgICAgIHBheWxvYWQ6IHsgbWV0aG9kLCBhcmdzIH0sXG4gICAgfSkpXG4gICk7XG5cbiAgY29uc3QgbG9hZExhbmd1YWdlID0gKGxhbmdzID0gJ2VuZycsIGpvYklkKSA9PiAoXG4gICAgc3RhcnRKb2IoY3JlYXRlSm9iKHtcbiAgICAgIGlkOiBqb2JJZCxcbiAgICAgIGFjdGlvbjogJ2xvYWRMYW5ndWFnZScsXG4gICAgICBwYXlsb2FkOiB7IGxhbmdzLCBvcHRpb25zIH0sXG4gICAgfSkpXG4gICk7XG5cbiAgY29uc3QgaW5pdGlhbGl6ZSA9IChsYW5ncyA9ICdlbmcnLCBvZW0gPSBkZWZhdWx0T0VNLCBjb25maWcsIGpvYklkKSA9PiAoXG4gICAgc3RhcnRKb2IoY3JlYXRlSm9iKHtcbiAgICAgIGlkOiBqb2JJZCxcbiAgICAgIGFjdGlvbjogJ2luaXRpYWxpemUnLFxuICAgICAgcGF5bG9hZDogeyBsYW5ncywgb2VtLCBjb25maWcgfSxcbiAgICB9KSlcbiAgKTtcblxuICBjb25zdCBzZXRQYXJhbWV0ZXJzID0gKHBhcmFtcyA9IHt9LCBqb2JJZCkgPT4gKFxuICAgIHN0YXJ0Sm9iKGNyZWF0ZUpvYih7XG4gICAgICBpZDogam9iSWQsXG4gICAgICBhY3Rpb246ICdzZXRQYXJhbWV0ZXJzJyxcbiAgICAgIHBheWxvYWQ6IHsgcGFyYW1zIH0sXG4gICAgfSkpXG4gICk7XG5cbiAgY29uc3QgcmVjb2duaXplID0gYXN5bmMgKGltYWdlLCBvcHRzID0ge30sIG91dHB1dCA9IHtcbiAgICBibG9ja3M6IHRydWUsIHRleHQ6IHRydWUsIGhvY3I6IHRydWUsIHRzdjogdHJ1ZSxcbiAgfSwgam9iSWQpID0+IChcbiAgICBzdGFydEpvYihjcmVhdGVKb2Ioe1xuICAgICAgaWQ6IGpvYklkLFxuICAgICAgYWN0aW9uOiAncmVjb2duaXplJyxcbiAgICAgIHBheWxvYWQ6IHsgaW1hZ2U6IGF3YWl0IGxvYWRJbWFnZShpbWFnZSksIG9wdGlvbnM6IG9wdHMsIG91dHB1dCB9LFxuICAgIH0pKVxuICApO1xuXG4gIGNvbnN0IGdldFBERiA9ICh0aXRsZSA9ICdUZXNzZXJhY3QgT0NSIFJlc3VsdCcsIHRleHRvbmx5ID0gZmFsc2UsIGpvYklkKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2BnZXRQREZgIGZ1bmN0aW9uIGlzIGRlcHJlY2lhdGVkLiBgcmVjb2duaXplYCBvcHRpb24gYHNhdmVQREZgIHNob3VsZCBiZSB1c2VkIGluc3RlYWQuJyk7XG4gICAgcmV0dXJuIHN0YXJ0Sm9iKGNyZWF0ZUpvYih7XG4gICAgICBpZDogam9iSWQsXG4gICAgICBhY3Rpb246ICdnZXRQREYnLFxuICAgICAgcGF5bG9hZDogeyB0aXRsZSwgdGV4dG9ubHkgfSxcbiAgICB9KSk7XG4gIH07XG5cbiAgY29uc3QgZGV0ZWN0ID0gYXN5bmMgKGltYWdlLCBqb2JJZCkgPT4gKFxuICAgIHN0YXJ0Sm9iKGNyZWF0ZUpvYih7XG4gICAgICBpZDogam9iSWQsXG4gICAgICBhY3Rpb246ICdkZXRlY3QnLFxuICAgICAgcGF5bG9hZDogeyBpbWFnZTogYXdhaXQgbG9hZEltYWdlKGltYWdlKSB9LFxuICAgIH0pKVxuICApO1xuXG4gIGNvbnN0IHRlcm1pbmF0ZSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAod29ya2VyICE9PSBudWxsKSB7XG4gICAgICAvKlxuICAgICAgYXdhaXQgc3RhcnRKb2IoY3JlYXRlSm9iKHtcbiAgICAgICAgaWQ6IGpvYklkLFxuICAgICAgICBhY3Rpb246ICd0ZXJtaW5hdGUnLFxuICAgICAgfSkpO1xuICAgICAgKi9cbiAgICAgIHRlcm1pbmF0ZVdvcmtlcih3b3JrZXIpO1xuICAgICAgd29ya2VyID0gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9O1xuXG4gIG9uTWVzc2FnZSh3b3JrZXIsICh7XG4gICAgd29ya2VySWQsIGpvYklkLCBzdGF0dXMsIGFjdGlvbiwgZGF0YSxcbiAgfSkgPT4ge1xuICAgIGlmIChzdGF0dXMgPT09ICdyZXNvbHZlJykge1xuICAgICAgbG9nKGBbJHt3b3JrZXJJZH1dOiBDb21wbGV0ZSAke2pvYklkfWApO1xuICAgICAgbGV0IGQgPSBkYXRhO1xuICAgICAgaWYgKGFjdGlvbiA9PT0gJ3JlY29nbml6ZScpIHtcbiAgICAgICAgZCA9IGNpcmN1bGFyaXplKGRhdGEpO1xuICAgICAgfSBlbHNlIGlmIChhY3Rpb24gPT09ICdnZXRQREYnKSB7XG4gICAgICAgIGQgPSBBcnJheS5mcm9tKHsgLi4uZGF0YSwgbGVuZ3RoOiBPYmplY3Qua2V5cyhkYXRhKS5sZW5ndGggfSk7XG4gICAgICB9XG4gICAgICByZXNvbHZlc1thY3Rpb25dKHsgam9iSWQsIGRhdGE6IGQgfSk7XG4gICAgfSBlbHNlIGlmIChzdGF0dXMgPT09ICdyZWplY3QnKSB7XG4gICAgICByZWplY3RzW2FjdGlvbl0oZGF0YSk7XG4gICAgICBpZiAoYWN0aW9uID09PSAnbG9hZCcpIHdvcmtlclJlc1JlamVjdChkYXRhKTtcbiAgICAgIGlmIChlcnJvckhhbmRsZXIpIHtcbiAgICAgICAgZXJyb3JIYW5kbGVyKGRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoZGF0YSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzdGF0dXMgPT09ICdwcm9ncmVzcycpIHtcbiAgICAgIGxvZ2dlcih7IC4uLmRhdGEsIHVzZXJKb2JJZDogam9iSWQgfSk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCByZXNvbHZlT2JqID0ge1xuICAgIGlkLFxuICAgIHdvcmtlcixcbiAgICBzZXRSZXNvbHZlLFxuICAgIHNldFJlamVjdCxcbiAgICBsb2FkLFxuICAgIHdyaXRlVGV4dCxcbiAgICByZWFkVGV4dCxcbiAgICByZW1vdmVGaWxlLFxuICAgIEZTLFxuICAgIGxvYWRMYW5ndWFnZSxcbiAgICBpbml0aWFsaXplLFxuICAgIHNldFBhcmFtZXRlcnMsXG4gICAgcmVjb2duaXplLFxuICAgIGdldFBERixcbiAgICBkZXRlY3QsXG4gICAgdGVybWluYXRlLFxuICB9O1xuXG4gIGxvYWRJbnRlcm5hbCgpLnRoZW4oKCkgPT4gd29ya2VyUmVzUmVzb2x2ZShyZXNvbHZlT2JqKSkuY2F0Y2goKCkgPT4ge30pO1xuXG4gIHJldHVybiB3b3JrZXJSZXM7XG59O1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksY2E9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBwKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBkYT1uZXcgU2V0LGVhPXt9O2Z1bmN0aW9uIGZhKGEsYil7aGEoYSxiKTtoYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gaGEoYSxiKXtlYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspZGEuYWRkKGJbYV0pfVxudmFyIGlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxqYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGthPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYT1cbnt9LG1hPXt9O2Z1bmN0aW9uIG9hKGEpe2lmKGphLmNhbGwobWEsYSkpcmV0dXJuITA7aWYoamEuY2FsbChsYSxhKSlyZXR1cm4hMTtpZihrYS50ZXN0KGEpKXJldHVybiBtYVthXT0hMDtsYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIHo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07eltiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciByYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLFxuc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuei54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gdGEoYSxiLGMsZCl7dmFyIGU9ei5oYXNPd25Qcm9wZXJ0eShiKT96W2JdOm51bGw7aWYobnVsbCE9PWU/MCE9PWUudHlwZTpkfHwhKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0pcWEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29hKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKX1cbnZhciB1YT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCx2YT1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSx3YT1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHlhPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSx6YT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksQWE9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxDYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxEYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksRWE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLEhhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtcbnZhciBJYT1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5jYWNoZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QudHJhY2luZ19tYXJrZXJcIik7dmFyIEphPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBLYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SmEmJmFbSmFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIEE9T2JqZWN0LmFzc2lnbixMYTtmdW5jdGlvbiBNYShhKXtpZih2b2lkIDA9PT1MYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtMYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTGErYX12YXIgTmE9ITE7XG5mdW5jdGlvbiBPYShhLGIpe2lmKCFhfHxOYSlyZXR1cm5cIlwiO05hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChsKXt2YXIgZD1sfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2gobCl7ZD1sfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2gobCl7ZD1sfWEoKX19Y2F0Y2gobCl7aWYobCYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBsLnN0YWNrKXtmb3IodmFyIGU9bC5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXt2YXIgaz1cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO2EuZGlzcGxheU5hbWUmJmsuaW5jbHVkZXMoXCI8YW5vbnltb3VzPlwiKSYmKGs9ay5yZXBsYWNlKFwiPGFub255bW91cz5cIixhLmRpc3BsYXlOYW1lKSk7cmV0dXJuIGt9d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e05hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TWEoYSk6XCJcIn1cbmZ1bmN0aW9uIFBhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBNYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE1hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBNYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE1hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1PYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1PYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1PYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFFhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2Ugd2E6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIEFhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHphOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgRWE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgRmE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQ2E6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgQmE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgRGE6dmFyIGI9YS5yZW5kZXI7YT1hLmRpc3BsYXlOYW1lO2F8fChhPWIuZGlzcGxheU5hbWV8fFxuYi5uYW1lfHxcIlwiLGE9XCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO3JldHVybiBhO2Nhc2UgR2E6cmV0dXJuIGI9YS5kaXNwbGF5TmFtZXx8bnVsbCxudWxsIT09Yj9iOlFhKGEudHlwZSl8fFwiTWVtb1wiO2Nhc2UgSGE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFFhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSYShhKXt2YXIgYj1hLnR5cGU7c3dpdGNoKGEudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKGIuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKGIuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBhPWIucmVuZGVyLGE9YS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIlwiLGIuZGlzcGxheU5hbWV8fChcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDU6cmV0dXJuIGI7Y2FzZSA0OnJldHVyblwiUG9ydGFsXCI7Y2FzZSAzOnJldHVyblwiUm9vdFwiO2Nhc2UgNjpyZXR1cm5cIlRleHRcIjtjYXNlIDE2OnJldHVybiBRYShiKTtjYXNlIDg6cmV0dXJuIGI9PT16YT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7XG5jYXNlIDEyOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIDIxOnJldHVyblwiU2NvcGVcIjtjYXNlIDEzOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIDE5OnJldHVyblwiU3VzcGVuc2VMaXN0XCI7Y2FzZSAyNTpyZXR1cm5cIlRyYWNpbmdNYXJrZXJcIjtjYXNlIDE6Y2FzZSAwOmNhc2UgMTc6Y2FzZSAyOmNhc2UgMTQ6Y2FzZSAxNTppZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7Y2FzZSBcIm9iamVjdFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIEEoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gYWIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYmIoYSxiKXthYihhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2NiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmNiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gZGIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBlYj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IocCg5MSkpO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHAoOTIpKTtpZihlYihjKSl7aWYoMTxjLmxlbmd0aCl0aHJvdyBFcnJvcihwKDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX1mdW5jdGlvbiBrYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxuZnVuY3Rpb24gbGIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG1iLG5iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIhPT1hLm5hbWVzcGFjZVVSSXx8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21iPW1ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW1iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIG9iKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcGI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGFzcGVjdFJhdGlvOiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCxcbnpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGJbYl09cGJbYV19KX0pO2Z1bmN0aW9uIHJiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwYi5oYXNPd25Qcm9wZXJ0eShhKSYmcGJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gc2IoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9cmIoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdGI9QSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHViKGEsYil7aWYoYil7aWYodGJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcihwKDYwKSk7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfHwhKFwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcihwKDYyKSk7fX1cbmZ1bmN0aW9uIHZiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgd2I9bnVsbDtmdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHAoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKCl7fXZhciBJYj0hMTtmdW5jdGlvbiBKYihhLGIsYyl7aWYoSWIpcmV0dXJuIGEoYixjKTtJYj0hMDt0cnl7cmV0dXJuIEdiKGEsYixjKX1maW5hbGx5e2lmKEliPSExLG51bGwhPT16Ynx8bnVsbCE9PUFiKUhiKCksRmIoKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHAoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgTGI9ITE7aWYoaWEpdHJ5e3ZhciBNYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe0xiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLE1iLE1iKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYil9Y2F0Y2goYSl7TGI9ITF9ZnVuY3Rpb24gTmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIE9iPSExLFBiPW51bGwsUWI9ITEsUmI9bnVsbCxTYj17b25FcnJvcjpmdW5jdGlvbihhKXtPYj0hMDtQYj1hfX07ZnVuY3Rpb24gVGIoYSxiLGMsZCxlLGYsZyxoLGspe09iPSExO1BiPW51bGw7TmIuYXBwbHkoU2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFViKGEsYixjLGQsZSxmLGcsaCxrKXtUYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoT2Ipe2lmKE9iKXt2YXIgbD1QYjtPYj0hMTtQYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IocCgxOTgpKTtRYnx8KFFiPSEwLFJiPWwpfX1mdW5jdGlvbiBWYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmNDA5OCkmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIFdiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gWGIoYSl7aWYoVmIoYSkhPT1hKXRocm93IEVycm9yKHAoMTg4KSk7fVxuZnVuY3Rpb24gWWIoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9VmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gWGIoZSksYTtpZihmPT09ZClyZXR1cm4gWGIoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcihwKDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHAoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IocCgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBaYihhKXthPVliKGEpO3JldHVybiBudWxsIT09YT8kYihhKTpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhO2ZvcihhPWEuY2hpbGQ7bnVsbCE9PWE7KXt2YXIgYj0kYihhKTtpZihudWxsIT09YilyZXR1cm4gYjthPWEuc2libGluZ31yZXR1cm4gbnVsbH1cbnZhciBhYz1jYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLGJjPWNhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLGNjPWNhLnVuc3RhYmxlX3Nob3VsZFlpZWxkLGRjPWNhLnVuc3RhYmxlX3JlcXVlc3RQYWludCxCPWNhLnVuc3RhYmxlX25vdyxlYz1jYS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxmYz1jYS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxnYz1jYS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxoYz1jYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxpYz1jYS51bnN0YWJsZV9Mb3dQcmlvcml0eSxqYz1jYS51bnN0YWJsZV9JZGxlUHJpb3JpdHksa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclJvb3QpdHJ5e2xjLm9uQ29tbWl0RmliZXJSb290KGtjLGEsdm9pZCAwLDEyOD09PShhLmN1cnJlbnQuZmxhZ3MmMTI4KSl9Y2F0Y2goYil7fX1cbnZhciBvYz1NYXRoLmNsejMyP01hdGguY2x6MzI6bmMscGM9TWF0aC5sb2cscWM9TWF0aC5MTjI7ZnVuY3Rpb24gbmMoYSl7YT4+Pj0wO3JldHVybiAwPT09YT8zMjozMS0ocGMoYSkvcWN8MCl8MH12YXIgcmM9NjQsc2M9NDE5NDMwNDtcbmZ1bmN0aW9uIHRjKGEpe3N3aXRjaChhJi1hKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYSY0MTk0MjQwO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuIGEmMTMwMDIzNDI0O2Nhc2UgMTM0MjE3NzI4OnJldHVybiAxMzQyMTc3Mjg7Y2FzZSAyNjg0MzU0NTY6cmV0dXJuIDI2ODQzNTQ1NjtjYXNlIDUzNjg3MDkxMjpyZXR1cm4gNTM2ODcwOTEyO2Nhc2UgMTA3Mzc0MTgyNDpyZXR1cm4gMTA3Mzc0MTgyNDtcbmRlZmF1bHQ6cmV0dXJuIGF9fWZ1bmN0aW9uIHVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIDA7dmFyIGQ9MCxlPWEuc3VzcGVuZGVkTGFuZXMsZj1hLnBpbmdlZExhbmVzLGc9YyYyNjg0MzU0NTU7aWYoMCE9PWcpe3ZhciBoPWcmfmU7MCE9PWg/ZD10YyhoKTooZiY9ZywwIT09ZiYmKGQ9dGMoZikpKX1lbHNlIGc9YyZ+ZSwwIT09Zz9kPXRjKGcpOjAhPT1mJiYoZD10YyhmKSk7aWYoMD09PWQpcmV0dXJuIDA7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZSkmJihlPWQmLWQsZj1iJi1iLGU+PWZ8fDE2PT09ZSYmMCE9PShmJjQxOTQyNDApKSlyZXR1cm4gYjswIT09KGQmNCkmJihkfD1jJjE2KTtiPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLW9jKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gdmMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIGIrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYis1RTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19XG5mdW5jdGlvbiB3YyhhLGIpe2Zvcih2YXIgYz1hLnN1c3BlbmRlZExhbmVzLGQ9YS5waW5nZWRMYW5lcyxlPWEuZXhwaXJhdGlvblRpbWVzLGY9YS5wZW5kaW5nTGFuZXM7MDxmOyl7dmFyIGc9MzEtb2MoZiksaD0xPDxnLGs9ZVtnXTtpZigtMT09PWspe2lmKDA9PT0oaCZjKXx8MCE9PShoJmQpKWVbZ109dmMoaCxiKX1lbHNlIGs8PWImJihhLmV4cGlyZWRMYW5lc3w9aCk7ZiY9fmh9fWZ1bmN0aW9uIHhjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiB5Yygpe3ZhciBhPXJjO3JjPDw9MTswPT09KHJjJjQxOTQyNDApJiYocmM9NjQpO3JldHVybiBhfWZ1bmN0aW9uIHpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gQWMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iOzUzNjg3MDkxMiE9PWImJihhLnN1c3BlbmRlZExhbmVzPTAsYS5waW5nZWRMYW5lcz0wKTthPWEuZXZlbnRUaW1lcztiPTMxLW9jKGIpO2FbYl09Y31mdW5jdGlvbiBCYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzJn5iO2EucGVuZGluZ0xhbmVzPWI7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9YjthLm11dGFibGVSZWFkTGFuZXMmPWI7YS5lbnRhbmdsZWRMYW5lcyY9YjtiPWEuZW50YW5nbGVtZW50czt2YXIgZD1hLmV2ZW50VGltZXM7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxjOyl7dmFyIGU9MzEtb2MoYyksZj0xPDxlO2JbZV09MDtkW2VdPS0xO2FbZV09LTE7YyY9fmZ9fVxuZnVuY3Rpb24gQ2MoYSxiKXt2YXIgYz1hLmVudGFuZ2xlZExhbmVzfD1iO2ZvcihhPWEuZW50YW5nbGVtZW50cztjOyl7dmFyIGQ9MzEtb2MoYyksZT0xPDxkO2UmYnxhW2RdJmImJihhW2RdfD1iKTtjJj1+ZX19dmFyIEM9MDtmdW5jdGlvbiBEYyhhKXthJj0tYTtyZXR1cm4gMTxhPzQ8YT8wIT09KGEmMjY4NDM1NDU1KT8xNjo1MzY4NzA5MTI6NDoxfXZhciBFYyxGYyxHYyxIYyxJYyxKYz0hMSxLYz1bXSxMYz1udWxsLE1jPW51bGwsTmM9bnVsbCxPYz1uZXcgTWFwLFBjPW5ldyBNYXAsUWM9W10sUmM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gU2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpMYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6TWM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6TmM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOk9jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlBjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gVGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT17YmxvY2tlZE9uOmIsZG9tRXZlbnROYW1lOmMsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmYsdGFyZ2V0Q29udGFpbmVyczpbZV19LG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmRmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gVWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4gTGM9VGMoTGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIE1jPVRjKE1jLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBOYz1UYyhOYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO09jLnNldChmLFRjKE9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxQYy5zZXQoZixUYyhQYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBWYyhhKXt2YXIgYj1XYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVZiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPVdiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO0ljKGEucHJpb3JpdHksZnVuY3Rpb24oKXtHYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiBYYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9WWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbD09PWMpe2M9YS5uYXRpdmVFdmVudDt2YXIgZD1uZXcgYy5jb25zdHJ1Y3RvcihjLnR5cGUsYyk7d2I9ZDtjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpO3diPW51bGx9ZWxzZSByZXR1cm4gYj1DYihjKSxudWxsIT09YiYmRmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gWmMoYSxiLGMpe1hjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiAkYygpe0pjPSExO251bGwhPT1MYyYmWGMoTGMpJiYoTGM9bnVsbCk7bnVsbCE9PU1jJiZYYyhNYykmJihNYz1udWxsKTtudWxsIT09TmMmJlhjKE5jKSYmKE5jPW51bGwpO09jLmZvckVhY2goWmMpO1BjLmZvckVhY2goWmMpfVxuZnVuY3Rpb24gYWQoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLEpjfHwoSmM9ITAsY2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhjYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSwkYykpKX1cbmZ1bmN0aW9uIGJkKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIGFkKGIsYSl9aWYoMDxLYy5sZW5ndGgpe2FkKEtjWzBdLGEpO2Zvcih2YXIgYz0xO2M8S2MubGVuZ3RoO2MrKyl7dmFyIGQ9S2NbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1MYyYmYWQoTGMsYSk7bnVsbCE9PU1jJiZhZChNYyxhKTtudWxsIT09TmMmJmFkKE5jLGEpO09jLmZvckVhY2goYik7UGMuZm9yRWFjaChiKTtmb3IoYz0wO2M8UWMubGVuZ3RoO2MrKylkPVFjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxRYy5sZW5ndGgmJihjPVFjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmUWMuc2hpZnQoKX12YXIgY2Q9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsZGQ9ITA7XG5mdW5jdGlvbiBlZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9MSxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fWZ1bmN0aW9uIGdkKGEsYixjLGQpe3ZhciBlPUMsZj1jZC50cmFuc2l0aW9uO2NkLnRyYW5zaXRpb249bnVsbDt0cnl7Qz00LGZkKGEsYixjLGQpfWZpbmFsbHl7Qz1lLGNkLnRyYW5zaXRpb249Zn19XG5mdW5jdGlvbiBmZChhLGIsYyxkKXtpZihkZCl7dmFyIGU9WWMoYSxiLGMsZCk7aWYobnVsbD09PWUpaGQoYSxiLGQsaWQsYyksU2MoYSxkKTtlbHNlIGlmKFVjKGUsYSxiLGMsZCkpZC5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKFNjKGEsZCksYiY0JiYtMTxSYy5pbmRleE9mKGEpKXtmb3IoO251bGwhPT1lOyl7dmFyIGY9Q2IoZSk7bnVsbCE9PWYmJkVjKGYpO2Y9WWMoYSxiLGMsZCk7bnVsbD09PWYmJmhkKGEsYixkLGlkLGMpO2lmKGY9PT1lKWJyZWFrO2U9Zn1udWxsIT09ZSYmZC5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGhkKGEsYixkLG51bGwsYyl9fXZhciBpZD1udWxsO1xuZnVuY3Rpb24gWWMoYSxiLGMsZCl7aWQ9bnVsbDthPXhiKGQpO2E9V2MoYSk7aWYobnVsbCE9PWEpaWYoYj1WYihhKSxudWxsPT09YilhPW51bGw7ZWxzZSBpZihjPWIudGFnLDEzPT09Yyl7YT1XYihiKTtpZihudWxsIT09YSlyZXR1cm4gYTthPW51bGx9ZWxzZSBpZigzPT09Yyl7aWYoYi5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZClyZXR1cm4gMz09PWIudGFnP2Iuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDthPW51bGx9ZWxzZSBiIT09YSYmKGE9bnVsbCk7aWQ9YTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGpkKGEpe3N3aXRjaChhKXtjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsaWNrXCI6Y2FzZSBcImNsb3NlXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjpjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwia2V5dXBcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwicGFzdGVcIjpjYXNlIFwicGF1c2VcIjpjYXNlIFwicGxheVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmNhc2UgXCJyYXRlY2hhbmdlXCI6Y2FzZSBcInJlc2V0XCI6Y2FzZSBcInJlc2l6ZVwiOmNhc2UgXCJzZWVrZWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjpjYXNlIFwidm9sdW1lY2hhbmdlXCI6Y2FzZSBcImNoYW5nZVwiOmNhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjpjYXNlIFwidGV4dElucHV0XCI6Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjpjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjpjYXNlIFwiYmVmb3JlaW5wdXRcIjpjYXNlIFwiYmx1clwiOmNhc2UgXCJmdWxsc2NyZWVuY2hhbmdlXCI6Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImhhc2hjaGFuZ2VcIjpjYXNlIFwicG9wc3RhdGVcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInNlbGVjdHN0YXJ0XCI6cmV0dXJuIDE7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwic2Nyb2xsXCI6Y2FzZSBcInRvZ2dsZVwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwid2hlZWxcIjpjYXNlIFwibW91c2VlbnRlclwiOmNhc2UgXCJtb3VzZWxlYXZlXCI6Y2FzZSBcInBvaW50ZXJlbnRlclwiOmNhc2UgXCJwb2ludGVybGVhdmVcIjpyZXR1cm4gNDtcbmNhc2UgXCJtZXNzYWdlXCI6c3dpdGNoKGVjKCkpe2Nhc2UgZmM6cmV0dXJuIDE7Y2FzZSBnYzpyZXR1cm4gNDtjYXNlIGhjOmNhc2UgaWM6cmV0dXJuIDE2O2Nhc2UgamM6cmV0dXJuIDUzNjg3MDkxMjtkZWZhdWx0OnJldHVybiAxNn1kZWZhdWx0OnJldHVybiAxNn19dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO2Z1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1cbmZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9QShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9QSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPUEoe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPUEoe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPUEoe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1BKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9QSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1BKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9QSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1BKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1BKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9QSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9QSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9aWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9aWEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoaWEpe3ZhciB4ZTtpZihpYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO0piKHJlLGIpfX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlO1xuZnVuY3Rpb24gSWUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07aWYoIWphLmNhbGwoYixlKXx8IUhlKGFbZV0sYltlXSkpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gSmUoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gS2UoYSxiKXt2YXIgYz1KZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1KZShjKX19ZnVuY3Rpb24gTGUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9MZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBNZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBOZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gT2UoYSl7dmFyIGI9TWUoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJkxlKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZOZShjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1LZShjLGYpO3ZhciBnPUtlKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUGU9aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk5lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkllKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cbmZ1bmN0aW9uIFZlKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFdlPXthbmltYXRpb25lbmQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpWZShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFhlPXt9LFllPXt9O1xuaWEmJihZZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBXZS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBXZS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFplKGEpe2lmKFhlW2FdKXJldHVybiBYZVthXTtpZighV2VbYV0pcmV0dXJuIGE7dmFyIGI9V2VbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWWUpcmV0dXJuIFhlW2FdPWJbY107cmV0dXJuIGF9dmFyICRlPVplKFwiYW5pbWF0aW9uZW5kXCIpLGFmPVplKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGJmPVplKFwiYW5pbWF0aW9uc3RhcnRcIiksY2Y9WmUoXCJ0cmFuc2l0aW9uZW5kXCIpLGRmPW5ldyBNYXAsZWY9XCJhYm9ydCBhdXhDbGljayBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBnb3RQb2ludGVyQ2FwdHVyZSBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBsb3N0UG9pbnRlckNhcHR1cmUgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcG9pbnRlckNhbmNlbCBwb2ludGVyRG93biBwb2ludGVyTW92ZSBwb2ludGVyT3V0IHBvaW50ZXJPdmVyIHBvaW50ZXJVcCBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hTdGFydCB2b2x1bWVDaGFuZ2Ugc2Nyb2xsIHRvZ2dsZSB0b3VjaE1vdmUgd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIGZmKGEsYil7ZGYuc2V0KGEsYik7ZmEoYixbYV0pfWZvcih2YXIgZ2Y9MDtnZjxlZi5sZW5ndGg7Z2YrKyl7dmFyIGhmPWVmW2dmXSxqZj1oZi50b0xvd2VyQ2FzZSgpLGtmPWhmWzBdLnRvVXBwZXJDYXNlKCkraGYuc2xpY2UoMSk7ZmYoamYsXCJvblwiK2tmKX1mZigkZSxcIm9uQW5pbWF0aW9uRW5kXCIpO2ZmKGFmLFwib25BbmltYXRpb25JdGVyYXRpb25cIik7ZmYoYmYsXCJvbkFuaW1hdGlvblN0YXJ0XCIpO2ZmKFwiZGJsY2xpY2tcIixcIm9uRG91YmxlQ2xpY2tcIik7ZmYoXCJmb2N1c2luXCIsXCJvbkZvY3VzXCIpO2ZmKFwiZm9jdXNvdXRcIixcIm9uQmx1clwiKTtmZihjZixcIm9uVHJhbnNpdGlvbkVuZFwiKTtoYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7aGEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtcbmhhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZmEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtmYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5mYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgbGY9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxtZj1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChsZikpO1xuZnVuY3Rpb24gbmYoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7VWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtuZihlLGgsbCk7Zj1rfX19aWYoUWIpdGhyb3cgYT1SYixRYj0hMSxSYj1udWxsLGE7fVxuZnVuY3Rpb24gRChhLGIpe3ZhciBjPWJbb2ZdO3ZvaWQgMD09PWMmJihjPWJbb2ZdPW5ldyBTZXQpO3ZhciBkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwocGYoYixhLDIsITEpLGMuYWRkKGQpKX1mdW5jdGlvbiBxZihhLGIsYyl7dmFyIGQ9MDtiJiYoZHw9NCk7cGYoYyxhLGQsYil9dmFyIHJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gc2YoYSl7aWYoIWFbcmZdKXthW3JmXT0hMDtkYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1wic2VsZWN0aW9uY2hhbmdlXCIhPT1iJiYobWYuaGFzKGIpfHxxZihiLCExLGEpLHFmKGIsITAsYSkpfSk7dmFyIGI9OT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7bnVsbD09PWJ8fGJbcmZdfHwoYltyZl09ITAscWYoXCJzZWxlY3Rpb25jaGFuZ2VcIiwhMSxiKSl9fVxuZnVuY3Rpb24gcGYoYSxiLGMsZCl7c3dpdGNoKGpkKGIpKXtjYXNlIDE6dmFyIGU9ZWQ7YnJlYWs7Y2FzZSA0OmU9Z2Q7YnJlYWs7ZGVmYXVsdDplPWZkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFMYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPVdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1KYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9ZGYuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLG49YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6bj1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpuPVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSAkZTpjYXNlIGFmOmNhc2UgYmY6az1IZDticmVhaztjYXNlIGNmOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHQ9MCE9PShiJjQpLEo9IXQmJlwic2Nyb2xsXCI9PT1hLHg9dD9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt0PVtdO2Zvcih2YXIgdz1kLHU7bnVsbCE9PVxudzspe3U9dzt2YXIgRj11LnN0YXRlTm9kZTs1PT09dS50YWcmJm51bGwhPT1GJiYodT1GLG51bGwhPT14JiYoRj1LYih3LHgpLG51bGwhPUYmJnQucHVzaCh0Zih3LEYsdSkpKSk7aWYoSilicmVhazt3PXcucmV0dXJufTA8dC5sZW5ndGgmJihoPW5ldyBrKGgsbixudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp0fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmYyE9PXdiJiYobj1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYoV2Mobil8fG5bdWZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYobj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCxuPW4/V2Mobik6bnVsbCxudWxsIT09XG5uJiYoSj1WYihuKSxuIT09Snx8NSE9PW4udGFnJiY2IT09bi50YWcpKW49bnVsbH1lbHNlIGs9bnVsbCxuPWQ7aWYoayE9PW4pe3Q9QmQ7Rj1cIm9uTW91c2VMZWF2ZVwiO3g9XCJvbk1vdXNlRW50ZXJcIjt3PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdD1UZCxGPVwib25Qb2ludGVyTGVhdmVcIix4PVwib25Qb2ludGVyRW50ZXJcIix3PVwicG9pbnRlclwiO0o9bnVsbD09az9oOnVlKGspO3U9bnVsbD09bj9oOnVlKG4pO2g9bmV3IHQoRix3K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9SjtoLnJlbGF0ZWRUYXJnZXQ9dTtGPW51bGw7V2MoZSk9PT1kJiYodD1uZXcgdCh4LHcrXCJlbnRlclwiLG4sYyxlKSx0LnRhcmdldD11LHQucmVsYXRlZFRhcmdldD1KLEY9dCk7Sj1GO2lmKGsmJm4pYjp7dD1rO3g9bjt3PTA7Zm9yKHU9dDt1O3U9dmYodSkpdysrO3U9MDtmb3IoRj14O0Y7Rj12ZihGKSl1Kys7Zm9yKDswPHctdTspdD12Zih0KSx3LS07Zm9yKDswPHUtdzspeD1cbnZmKHgpLHUtLTtmb3IoO3ctLTspe2lmKHQ9PT14fHxudWxsIT09eCYmdD09PXguYWx0ZXJuYXRlKWJyZWFrIGI7dD12Zih0KTt4PXZmKHgpfXQ9bnVsbH1lbHNlIHQ9bnVsbDtudWxsIT09ayYmd2YoZyxoLGssdCwhMSk7bnVsbCE9PW4mJm51bGwhPT1KJiZ3ZihnLEosbix0LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBuYT12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKW5hPUZlO2Vsc2V7bmE9RGU7dmFyIHhhPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYobmE9RWUpO2lmKG5hJiYobmE9bmEoYSxkKSkpe25lKGcsbmEsYyxlKTticmVhayBhfXhhJiZ4YShhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKHhhPWguX3dyYXBwZXJTdGF0ZSkmJlxueGEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmY2IoaCxcIm51bWJlclwiLGgudmFsdWUpfXhhPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKHhhKXx8XCJ0cnVlXCI9PT14YS5jb250ZW50RWRpdGFibGUpUWU9eGEsUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciAkYTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmJhPVwib25Db21wb3NpdGlvbkVuZFwiO1xuYnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpiYT1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifWJhPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihiYT1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihiYT1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtiYSYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09YmE/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1iYSYmaWUmJigkYT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLHhhPW9lKGQsYmEpLDA8eGEubGVuZ3RoJiYoYmE9bmV3IExkKGJhLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6YmEsbGlzdGVuZXJzOnhhfSksJGE/YmEuZGF0YT0kYTooJGE9aGUoYyksbnVsbCE9PSRhJiYoYmEuZGF0YT0kYSkpKSk7aWYoJGE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksXG4wPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9JGEpfXNlKGcsYil9KX1mdW5jdGlvbiB0ZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9S2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQodGYoYSxmLGUpKSxmPUtiKGEsYiksbnVsbCE9ZiYmZC5wdXNoKHRmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gdmYoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHdmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9S2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQodGYoYyxrLGgpKSk6ZXx8KGs9S2IoYyxmKSxudWxsIT1rJiZnLnB1c2godGYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX12YXIgeGY9L1xcclxcbj8vZyx5Zj0vXFx1MDAwMHxcXHVGRkZEL2c7ZnVuY3Rpb24gemYoYSl7cmV0dXJuKFwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiXCIrYSkucmVwbGFjZSh4ZixcIlxcblwiKS5yZXBsYWNlKHlmLFwiXCIpfWZ1bmN0aW9uIEFmKGEsYixjKXtiPXpmKGIpO2lmKHpmKGEpIT09YiYmYyl0aHJvdyBFcnJvcihwKDQyNSkpO31mdW5jdGlvbiBCZigpe31cbnZhciBDZj1udWxsLERmPW51bGw7ZnVuY3Rpb24gRWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgRmY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsR2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEhmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBQcm9taXNlP1Byb21pc2U6dm9pZCAwLEpmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz9xdWV1ZU1pY3JvdGFzazpcInVuZGVmaW5lZFwiIT09dHlwZW9mIEhmP2Z1bmN0aW9uKGEpe3JldHVybiBIZi5yZXNvbHZlKG51bGwpLnRoZW4oYSkuY2F0Y2goSWYpfTpGZjtmdW5jdGlvbiBJZihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYTt9KX1cbmZ1bmN0aW9uIEtmKGEsYil7dmFyIGM9YixkPTA7ZG97dmFyIGU9Yy5uZXh0U2libGluZzthLnJlbW92ZUNoaWxkKGMpO2lmKGUmJjg9PT1lLm5vZGVUeXBlKWlmKGM9ZS5kYXRhLFwiLyRcIj09PWMpe2lmKDA9PT1kKXthLnJlbW92ZUNoaWxkKGUpO2JkKGIpO3JldHVybn1kLS19ZWxzZVwiJFwiIT09YyYmXCIkP1wiIT09YyYmXCIkIVwiIT09Y3x8ZCsrO2M9ZX13aGlsZShjKTtiZChiKX1mdW5jdGlvbiBMZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVhaztpZig4PT09Yil7Yj1hLmRhdGE7aWYoXCIkXCI9PT1ifHxcIiQhXCI9PT1ifHxcIiQ/XCI9PT1iKWJyZWFrO2lmKFwiLyRcIj09PWIpcmV0dXJuIG51bGx9fXJldHVybiBhfVxuZnVuY3Rpb24gTWYoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5mPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE9mPVwiX19yZWFjdEZpYmVyJFwiK05mLFBmPVwiX19yZWFjdFByb3BzJFwiK05mLHVmPVwiX19yZWFjdENvbnRhaW5lciRcIitOZixvZj1cIl9fcmVhY3RFdmVudHMkXCIrTmYsUWY9XCJfX3JlYWN0TGlzdGVuZXJzJFwiK05mLFJmPVwiX19yZWFjdEhhbmRsZXMkXCIrTmY7XG5mdW5jdGlvbiBXYyhhKXt2YXIgYj1hW09mXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1t1Zl18fGNbT2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9TWYoYSk7bnVsbCE9PWE7KXtpZihjPWFbT2ZdKXJldHVybiBjO2E9TWYoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVtPZl18fGFbdWZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IocCgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVtQZl18fG51bGx9dmFyIFNmPVtdLFRmPS0xO2Z1bmN0aW9uIFVmKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gRShhKXswPlRmfHwoYS5jdXJyZW50PVNmW1RmXSxTZltUZl09bnVsbCxUZi0tKX1mdW5jdGlvbiBHKGEsYil7VGYrKztTZltUZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBWZj17fSxIPVVmKFZmKSxXZj1VZighMSksWGY9VmY7ZnVuY3Rpb24gWWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBWZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFpmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gJGYoKXtFKFdmKTtFKEgpfWZ1bmN0aW9uIGFnKGEsYixjKXtpZihILmN1cnJlbnQhPT1WZil0aHJvdyBFcnJvcihwKDE2OCkpO0coSCxiKTtHKFdmLGMpfWZ1bmN0aW9uIGJnKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtiPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYikpdGhyb3cgRXJyb3IocCgxMDgsUmEoYSl8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gQSh7fSxjLGQpfVxuZnVuY3Rpb24gY2coYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fFZmO1hmPUguY3VycmVudDtHKEgsYSk7RyhXZixXZi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBkZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IocCgxNjkpKTtjPyhhPWJnKGEsYixYZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEUoV2YpLEUoSCksRyhILGEpKTpFKFdmKTtHKFdmLGMpfXZhciBlZz1udWxsLGZnPSExLGdnPSExO2Z1bmN0aW9uIGhnKGEpe251bGw9PT1lZz9lZz1bYV06ZWcucHVzaChhKX1mdW5jdGlvbiBpZyhhKXtmZz0hMDtoZyhhKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWdnJiZudWxsIT09ZWcpe2dnPSEwO3ZhciBhPTAsYj1DO3RyeXt2YXIgYz1lZztmb3IoQz0xO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdO2RvIGQ9ZCghMCk7d2hpbGUobnVsbCE9PWQpfWVnPW51bGw7Zmc9ITF9Y2F0Y2goZSl7dGhyb3cgbnVsbCE9PWVnJiYoZWc9ZWcuc2xpY2UoYSsxKSksYWMoZmMsamcpLGU7fWZpbmFsbHl7Qz1iLGdnPSExfX1yZXR1cm4gbnVsbH12YXIga2c9W10sbGc9MCxtZz1udWxsLG5nPTAsb2c9W10scGc9MCxxZz1udWxsLHJnPTEsc2c9XCJcIjtmdW5jdGlvbiB0ZyhhLGIpe2tnW2xnKytdPW5nO2tnW2xnKytdPW1nO21nPWE7bmc9Yn1cbmZ1bmN0aW9uIHVnKGEsYixjKXtvZ1twZysrXT1yZztvZ1twZysrXT1zZztvZ1twZysrXT1xZztxZz1hO3ZhciBkPXJnO2E9c2c7dmFyIGU9MzItb2MoZCktMTtkJj1+KDE8PGUpO2MrPTE7dmFyIGY9MzItb2MoYikrZTtpZigzMDxmKXt2YXIgZz1lLWUlNTtmPShkJigxPDxnKS0xKS50b1N0cmluZygzMik7ZD4+PWc7ZS09ZztyZz0xPDwzMi1vYyhiKStlfGM8PGV8ZDtzZz1mK2F9ZWxzZSByZz0xPDxmfGM8PGV8ZCxzZz1hfWZ1bmN0aW9uIHZnKGEpe251bGwhPT1hLnJldHVybiYmKHRnKGEsMSksdWcoYSwxLDApKX1mdW5jdGlvbiB3ZyhhKXtmb3IoO2E9PT1tZzspbWc9a2dbLS1sZ10sa2dbbGddPW51bGwsbmc9a2dbLS1sZ10sa2dbbGddPW51bGw7Zm9yKDthPT09cWc7KXFnPW9nWy0tcGddLG9nW3BnXT1udWxsLHNnPW9nWy0tcGddLG9nW3BnXT1udWxsLHJnPW9nWy0tcGddLG9nW3BnXT1udWxsfXZhciB4Zz1udWxsLHlnPW51bGwsST0hMSx6Zz1udWxsO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1CZyg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtiPWEuZGVsZXRpb25zO251bGw9PT1iPyhhLmRlbGV0aW9ucz1bY10sYS5mbGFnc3w9MTYpOmIucHVzaChjKX1cbmZ1bmN0aW9uIENnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9TGYoYi5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9bnVsbCwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4gYj04IT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGM9bnVsbCE9PXFnP3tpZDpyZyxvdmVyZmxvdzpzZ306bnVsbCxhLm1lbW9pemVkU3RhdGU9e2RlaHlkcmF0ZWQ6Yix0cmVlQ29udGV4dDpjLHJldHJ5TGFuZToxMDczNzQxODI0fSxjPUJnKDE4LG51bGwsbnVsbCwwKSxjLnN0YXRlTm9kZT1iLGMucmV0dXJuPWEsYS5jaGlsZD1jLHhnPWEseWc9XG5udWxsLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBEZyhhKXtyZXR1cm4gMCE9PShhLm1vZGUmMSkmJjA9PT0oYS5mbGFncyYxMjgpfWZ1bmN0aW9uIEVnKGEpe2lmKEkpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUNnKGEsYikpe2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7Yj1MZihjLm5leHRTaWJsaW5nKTt2YXIgZD14ZztiJiZDZyhhLGIpP0FnKGQsYyk6KGEuZmxhZ3M9YS5mbGFncyYtNDA5N3wyLEk9ITEseGc9YSl9fWVsc2V7aWYoRGcoYSkpdGhyb3cgRXJyb3IocCg0MTgpKTthLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MjtJPSExO3hnPWF9fX1mdW5jdGlvbiBGZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1cbmZ1bmN0aW9uIEdnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighSSlyZXR1cm4gRmcoYSksST0hMCwhMTt2YXIgYjsoYj0zIT09YS50YWcpJiYhKGI9NSE9PWEudGFnKSYmKGI9YS50eXBlLGI9XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFFZihhLnR5cGUsYS5tZW1vaXplZFByb3BzKSk7aWYoYiYmKGI9eWcpKXtpZihEZyhhKSl0aHJvdyBIZygpLEVycm9yKHAoNDE4KSk7Zm9yKDtiOylBZyhhLGIpLGI9TGYoYi5uZXh0U2libGluZyl9RmcoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcihwKDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXt5Zz1MZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfXlnPVxubnVsbH19ZWxzZSB5Zz14Zz9MZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBIZygpe2Zvcih2YXIgYT15ZzthOylhPUxmKGEubmV4dFNpYmxpbmcpfWZ1bmN0aW9uIElnKCl7eWc9eGc9bnVsbDtJPSExfWZ1bmN0aW9uIEpnKGEpe251bGw9PT16Zz96Zz1bYV06emcucHVzaChhKX12YXIgS2c9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7XG5mdW5jdGlvbiBMZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHAoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IocCgxNDcsYSkpO3ZhciBlPWQsZj1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZilyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1lLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZl06YltmXT1hfTtiLl9zdHJpbmdSZWY9ZjtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IocCgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IocCgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIE1nKGEsYil7YT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik7dGhyb3cgRXJyb3IocCgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09YT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjphKSk7fWZ1bmN0aW9uIE5nKGEpe3ZhciBiPWEuX2luaXQ7cmV0dXJuIGIoYS5fcGF5bG9hZCl9XG5mdW5jdGlvbiBPZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5kZWxldGlvbnM7bnVsbD09PWQ/KGIuZGVsZXRpb25zPVtjXSxiLmZsYWdzfD0xNik6ZC5wdXNoKGMpfX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1QZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGIuZmxhZ3N8PTEwNDg1NzYsYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzfD0yLGMpOmQ7Yi5mbGFnc3w9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJlxubnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5mbGFnc3w9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVFnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7dmFyIGY9Yy50eXBlO2lmKGY9PT15YSlyZXR1cm4gbShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGMua2V5KTtpZihudWxsIT09YiYmKGIuZWxlbWVudFR5cGU9PT1mfHxcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLiQkdHlwZW9mPT09SGEmJk5nKGYpPT09Yi50eXBlKSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9TGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVJnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPUxnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8XG5iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9U2coYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcShhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiJiZcIlwiIT09Ynx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVFnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBjPVJnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLFxuYy5yZWY9TGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIHdhOnJldHVybiBiPVNnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtjYXNlIEhhOnZhciBkPWIuX2luaXQ7cmV0dXJuIHEoYSxkKGIuX3BheWxvYWQpLGMpfWlmKGViKGIpfHxLYShiKSlyZXR1cm4gYj1UZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtNZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHIoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGMmJlwiXCIhPT1jfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBjLmtleT09PWU/ayhhLGIsYyxkKTpudWxsO2Nhc2Ugd2E6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGw7Y2FzZSBIYTpyZXR1cm4gZT1jLl9pbml0LHIoYSxcbmIsZShjLl9wYXlsb2FkKSxkKX1pZihlYihjKXx8S2EoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO01nKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZCYmXCJcIiE9PWR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgdmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGsoYixhLGQsZSk7Y2FzZSB3YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKTtjYXNlIEhhOnZhciBmPWQuX2luaXQ7cmV0dXJuIHkoYSxiLGMsZihkLl9wYXlsb2FkKSxlKX1pZihlYihkKXx8S2EoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO01nKGIsZCl9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBuKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCx1PWcsdz1nPTAseD1udWxsO251bGwhPT11JiZ3PGgubGVuZ3RoO3crKyl7dS5pbmRleD53Pyh4PXUsdT1udWxsKTp4PXUuc2libGluZzt2YXIgbj1yKGUsdSxoW3ddLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9eCk7YnJlYWt9YSYmdSYmbnVsbD09PW4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx3KTtudWxsPT09bT9sPW46bS5zaWJsaW5nPW47bT1uO3U9eH1pZih3PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxJJiZ0ZyhlLHcpLGw7aWYobnVsbD09PXUpe2Zvcig7dzxoLmxlbmd0aDt3KyspdT1xKGUsaFt3XSxrKSxudWxsIT09dSYmKGc9Zih1LGcsdyksbnVsbD09PW0/bD11Om0uc2libGluZz11LG09dSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mb3IodT1kKGUsdSk7dzxoLmxlbmd0aDt3KyspeD15KHUsZSx3LGhbd10sayksbnVsbCE9PXgmJihhJiZudWxsIT09eC5hbHRlcm5hdGUmJnUuZGVsZXRlKG51bGw9PT1cbngua2V5P3c6eC5rZXkpLGc9Zih4LGcsdyksbnVsbD09PW0/bD14Om0uc2libGluZz14LG09eCk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZ1bmN0aW9uIHQoZSxnLGgsayl7dmFyIGw9S2EoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IocCgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1oKXRocm93IEVycm9yKHAoMTUxKSk7Zm9yKHZhciB1PWw9bnVsbCxtPWcsdz1nPTAseD1udWxsLG49aC5uZXh0KCk7bnVsbCE9PW0mJiFuLmRvbmU7dysrLG49aC5uZXh0KCkpe20uaW5kZXg+dz8oeD1tLG09bnVsbCk6eD1tLnNpYmxpbmc7dmFyIHQ9cihlLG0sbi52YWx1ZSxrKTtpZihudWxsPT09dCl7bnVsbD09PW0mJihtPXgpO2JyZWFrfWEmJm0mJm51bGw9PT10LmFsdGVybmF0ZSYmYihlLG0pO2c9Zih0LGcsdyk7bnVsbD09PXU/bD10OnUuc2libGluZz10O3U9dDttPXh9aWYobi5kb25lKXJldHVybiBjKGUsXG5tKSxJJiZ0ZyhlLHcpLGw7aWYobnVsbD09PW0pe2Zvcig7IW4uZG9uZTt3Kyssbj1oLm5leHQoKSluPXEoZSxuLnZhbHVlLGspLG51bGwhPT1uJiYoZz1mKG4sZyx3KSxudWxsPT09dT9sPW46dS5zaWJsaW5nPW4sdT1uKTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZvcihtPWQoZSxtKTshbi5kb25lO3crKyxuPWgubmV4dCgpKW49eShtLGUsdyxuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09bi5rZXk/dzpuLmtleSksZz1mKG4sZyx3KSxudWxsPT09dT9sPW46dS5zaWJsaW5nPW4sdT1uKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO0kmJnRnKGUsdyk7cmV0dXJuIGx9ZnVuY3Rpb24gSihhLGQsZixoKXtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT15YSYmbnVsbD09PWYua2V5JiYoZj1mLnByb3BzLmNoaWxkcmVuKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mKXtzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSB2YTphOntmb3IodmFyIGs9XG5mLmtleSxsPWQ7bnVsbCE9PWw7KXtpZihsLmtleT09PWspe2s9Zi50eXBlO2lmKGs9PT15YSl7aWYoNz09PWwudGFnKXtjKGEsbC5zaWJsaW5nKTtkPWUobCxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1lbHNlIGlmKGwuZWxlbWVudFR5cGU9PT1rfHxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09SGEmJk5nKGspPT09bC50eXBlKXtjKGEsbC5zaWJsaW5nKTtkPWUobCxmLnByb3BzKTtkLnJlZj1MZyhhLGwsZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1jKGEsbCk7YnJlYWt9ZWxzZSBiKGEsbCk7bD1sLnNpYmxpbmd9Zi50eXBlPT09eWE/KGQ9VGcoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVJnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPUxnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB3YTphOntmb3IobD1mLmtleTtudWxsIT09XG5kOyl7aWYoZC5rZXk9PT1sKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVNnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgSGE6cmV0dXJuIGw9Zi5faW5pdCxKKGEsZCxsKGYuX3BheWxvYWQpLGgpfWlmKGViKGYpKXJldHVybiBuKGEsZCxmLGgpO2lmKEthKGYpKXJldHVybiB0KGEsZCxmLGgpO01nKGEsZil9cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBmJiZcIlwiIT09Znx8XCJudW1iZXJcIj09PXR5cGVvZiBmPyhmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6XG4oYyhhLGQpLGQ9UWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSkpOmMoYSxkKX1yZXR1cm4gSn12YXIgVWc9T2coITApLFZnPU9nKCExKSxXZz1VZihudWxsKSxYZz1udWxsLFlnPW51bGwsWmc9bnVsbDtmdW5jdGlvbiAkZygpe1pnPVlnPVhnPW51bGx9ZnVuY3Rpb24gYWgoYSl7dmFyIGI9V2cuY3VycmVudDtFKFdnKTthLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBiaChhLGIsYyl7Zm9yKDtudWxsIT09YTspe3ZhciBkPWEuYWx0ZXJuYXRlOyhhLmNoaWxkTGFuZXMmYikhPT1iPyhhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWQmJihkLmNoaWxkTGFuZXN8PWIpKTpudWxsIT09ZCYmKGQuY2hpbGRMYW5lcyZiKSE9PWImJihkLmNoaWxkTGFuZXN8PWIpO2lmKGE9PT1jKWJyZWFrO2E9YS5yZXR1cm59fVxuZnVuY3Rpb24gY2goYSxiKXtYZz1hO1pnPVlnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYoZGg9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfWZ1bmN0aW9uIGVoKGEpe3ZhciBiPWEuX2N1cnJlbnRWYWx1ZTtpZihaZyE9PWEpaWYoYT17Y29udGV4dDphLG1lbW9pemVkVmFsdWU6YixuZXh0Om51bGx9LG51bGw9PT1ZZyl7aWYobnVsbD09PVhnKXRocm93IEVycm9yKHAoMzA4KSk7WWc9YTtYZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmF9fWVsc2UgWWc9WWcubmV4dD1hO3JldHVybiBifXZhciBmaD1udWxsO2Z1bmN0aW9uIGdoKGEpe251bGw9PT1maD9maD1bYV06ZmgucHVzaChhKX1cbmZ1bmN0aW9uIGhoKGEsYixjLGQpe3ZhciBlPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWU/KGMubmV4dD1jLGdoKGIpKTooYy5uZXh0PWUubmV4dCxlLm5leHQ9Yyk7Yi5pbnRlcmxlYXZlZD1jO3JldHVybiBpaChhLGQpfWZ1bmN0aW9uIGloKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO2M9YTtmb3IoYT1hLnJldHVybjtudWxsIT09YTspYS5jaGlsZExhbmVzfD1iLGM9YS5hbHRlcm5hdGUsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpLGM9YSxhPWEucmV0dXJuO3JldHVybiAzPT09Yy50YWc/Yy5zdGF0ZU5vZGU6bnVsbH12YXIgamg9ITE7ZnVuY3Rpb24ga2goYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6bnVsbCxsYXN0QmFzZVVwZGF0ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIGxoKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIG1oKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fVxuZnVuY3Rpb24gbmgoYSxiLGMpe3ZhciBkPWEudXBkYXRlUXVldWU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZD1kLnNoYXJlZDtpZigwIT09KEsmMikpe3ZhciBlPWQucGVuZGluZztudWxsPT09ZT9iLm5leHQ9YjooYi5uZXh0PWUubmV4dCxlLm5leHQ9Yik7ZC5wZW5kaW5nPWI7cmV0dXJuIGloKGEsYyl9ZT1kLmludGVybGVhdmVkO251bGw9PT1lPyhiLm5leHQ9YixnaChkKSk6KGIubmV4dD1lLm5leHQsZS5uZXh0PWIpO2QuaW50ZXJsZWF2ZWQ9YjtyZXR1cm4gaWgoYSxjKX1mdW5jdGlvbiBvaChhLGIsYyl7Yj1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLnNoYXJlZCwwIT09KGMmNDE5NDI0MCkpKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO0NjKGEsYyl9fVxuZnVuY3Rpb24gcGgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIHFoKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7amg9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbT1hLmFsdGVybmF0ZTtudWxsIT09bSYmKG09bS51cGRhdGVRdWV1ZSxoPW0ubGFzdEJhc2VVcGRhdGUsaCE9PWcmJihudWxsPT09aD9tLmZpcnN0QmFzZVVwZGF0ZT1sOmgubmV4dD1sLG0ubGFzdEJhc2VVcGRhdGU9aykpfWlmKG51bGwhPT1mKXt2YXIgcT1lLmJhc2VTdGF0ZTtnPTA7bT1sPWs9bnVsbDtoPWY7ZG97dmFyIHI9aC5sYW5lLHk9aC5ldmVudFRpbWU7aWYoKGQmcik9PT1yKXtudWxsIT09bSYmKG09bS5uZXh0PXtldmVudFRpbWU6eSxsYW5lOjAsdGFnOmgudGFnLHBheWxvYWQ6aC5wYXlsb2FkLGNhbGxiYWNrOmguY2FsbGJhY2ssXG5uZXh0Om51bGx9KTthOnt2YXIgbj1hLHQ9aDtyPWI7eT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOm49dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBuKXtxPW4uY2FsbCh5LHEscik7YnJlYWsgYX1xPW47YnJlYWsgYTtjYXNlIDM6bi5mbGFncz1uLmZsYWdzJi02NTUzN3wxMjg7Y2FzZSAwOm49dC5wYXlsb2FkO3I9XCJmdW5jdGlvblwiPT09dHlwZW9mIG4/bi5jYWxsKHkscSxyKTpuO2lmKG51bGw9PT1yfHx2b2lkIDA9PT1yKWJyZWFrIGE7cT1BKHt9LHEscik7YnJlYWsgYTtjYXNlIDI6amg9ITB9fW51bGwhPT1oLmNhbGxiYWNrJiYwIT09aC5sYW5lJiYoYS5mbGFnc3w9NjQscj1lLmVmZmVjdHMsbnVsbD09PXI/ZS5lZmZlY3RzPVtoXTpyLnB1c2goaCkpfWVsc2UgeT17ZXZlbnRUaW1lOnksbGFuZTpyLHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW0/KGw9bT15LGs9cSk6bT1tLm5leHQ9eSxnfD1yO1xuaD1oLm5leHQ7aWYobnVsbD09PWgpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2Ugcj1oLGg9ci5uZXh0LHIubmV4dD1udWxsLGUubGFzdEJhc2VVcGRhdGU9cixlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSk7bnVsbD09PW0mJihrPXEpO2UuYmFzZVN0YXRlPWs7ZS5maXJzdEJhc2VVcGRhdGU9bDtlLmxhc3RCYXNlVXBkYXRlPW07Yj1lLnNoYXJlZC5pbnRlcmxlYXZlZDtpZihudWxsIT09Yil7ZT1iO2RvIGd8PWUubGFuZSxlPWUubmV4dDt3aGlsZShlIT09Yil9ZWxzZSBudWxsPT09ZiYmKGUuc2hhcmVkLmxhbmVzPTApO3JofD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9cX19XG5mdW5jdGlvbiBzaChhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGUpdGhyb3cgRXJyb3IocCgxOTEsZSkpO2UuY2FsbChkKX19fXZhciB0aD17fSx1aD1VZih0aCksdmg9VWYodGgpLHdoPVVmKHRoKTtmdW5jdGlvbiB4aChhKXtpZihhPT09dGgpdGhyb3cgRXJyb3IocCgxNzQpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHloKGEsYil7Ryh3aCxiKTtHKHZoLGEpO0codWgsdGgpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bGIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPWxiKGIsYSl9RSh1aCk7Ryh1aCxiKX1mdW5jdGlvbiB6aCgpe0UodWgpO0UodmgpO0Uod2gpfWZ1bmN0aW9uIEFoKGEpe3hoKHdoLmN1cnJlbnQpO3ZhciBiPXhoKHVoLmN1cnJlbnQpO3ZhciBjPWxiKGIsYS50eXBlKTtiIT09YyYmKEcodmgsYSksRyh1aCxjKSl9ZnVuY3Rpb24gQmgoYSl7dmguY3VycmVudD09PWEmJihFKHVoKSxFKHZoKSl9dmFyIEw9VWYoMCk7XG5mdW5jdGlvbiBDaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyYxMjgpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH12YXIgRGg9W107XG5mdW5jdGlvbiBFaCgpe2Zvcih2YXIgYT0wO2E8RGgubGVuZ3RoO2ErKylEaFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO0RoLmxlbmd0aD0wfXZhciBGaD11YS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEdoPXVhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEhoPTAsTT1udWxsLE49bnVsbCxPPW51bGwsSWg9ITEsSmg9ITEsS2g9MCxMaD0wO2Z1bmN0aW9uIFAoKXt0aHJvdyBFcnJvcihwKDMyMSkpO31mdW5jdGlvbiBNaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gTmgoYSxiLGMsZCxlLGYpe0hoPWY7TT1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7RmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9PaDpQaDthPWMoZCxlKTtpZihKaCl7Zj0wO2Rve0poPSExO0toPTA7aWYoMjU8PWYpdGhyb3cgRXJyb3IocCgzMDEpKTtmKz0xO089Tj1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtGaC5jdXJyZW50PVFoO2E9YyhkLGUpfXdoaWxlKEpoKX1GaC5jdXJyZW50PVJoO2I9bnVsbCE9PU4mJm51bGwhPT1OLm5leHQ7SGg9MDtPPU49TT1udWxsO0loPSExO2lmKGIpdGhyb3cgRXJyb3IocCgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBTaCgpe3ZhciBhPTAhPT1LaDtLaD0wO3JldHVybiBhfVxuZnVuY3Rpb24gVGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09Tz9NLm1lbW9pemVkU3RhdGU9Tz1hOk89Ty5uZXh0PWE7cmV0dXJuIE99ZnVuY3Rpb24gVWgoKXtpZihudWxsPT09Til7dmFyIGE9TS5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ti5uZXh0O3ZhciBiPW51bGw9PT1PP00ubWVtb2l6ZWRTdGF0ZTpPLm5leHQ7aWYobnVsbCE9PWIpTz1iLE49YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHAoMzEwKSk7Tj1hO2E9e21lbW9pemVkU3RhdGU6Ti5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpOLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ti5iYXNlUXVldWUscXVldWU6Ti5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1PP00ubWVtb2l6ZWRTdGF0ZT1PPWE6Tz1PLm5leHQ9YX1yZXR1cm4gT31cbmZ1bmN0aW9uIFZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gV2goYSl7dmFyIGI9VWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IocCgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1OLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2Y9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1udWxsLGs9bnVsbCxsPWY7ZG97dmFyIG09bC5sYW5lO2lmKChIaCZtKT09PW0pbnVsbCE9PWsmJihrPWsubmV4dD17bGFuZTowLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxlYWdlclN0YXRlOmwuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxkPWwuaGFzRWFnZXJTdGF0ZT9sLmVhZ2VyU3RhdGU6YShkLGwuYWN0aW9uKTtlbHNle3ZhciBxPXtsYW5lOm0sYWN0aW9uOmwuYWN0aW9uLGhhc0VhZ2VyU3RhdGU6bC5oYXNFYWdlclN0YXRlLFxuZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09az8oaD1rPXEsZz1kKTprPWsubmV4dD1xO00ubGFuZXN8PW07cmh8PW19bD1sLm5leHR9d2hpbGUobnVsbCE9PWwmJmwhPT1mKTtudWxsPT09az9nPWQ6ay5uZXh0PWg7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwoZGg9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWc7Yi5iYXNlUXVldWU9aztjLmxhc3RSZW5kZXJlZFN0YXRlPWR9YT1jLmludGVybGVhdmVkO2lmKG51bGwhPT1hKXtlPWE7ZG8gZj1lLmxhbmUsTS5sYW5lc3w9ZixyaHw9ZixlPWUubmV4dDt3aGlsZShlIT09YSl9ZWxzZSBudWxsPT09ZSYmKGMubGFuZXM9MCk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIFhoKGEpe3ZhciBiPVVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChkaD0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfWZ1bmN0aW9uIFloKCl7fVxuZnVuY3Rpb24gWmgoYSxiKXt2YXIgYz1NLGQ9VWgoKSxlPWIoKSxmPSFIZShkLm1lbW9pemVkU3RhdGUsZSk7ZiYmKGQubWVtb2l6ZWRTdGF0ZT1lLGRoPSEwKTtkPWQucXVldWU7JGgoYWkuYmluZChudWxsLGMsZCxhKSxbYV0pO2lmKGQuZ2V0U25hcHNob3QhPT1ifHxmfHxudWxsIT09TyYmTy5tZW1vaXplZFN0YXRlLnRhZyYxKXtjLmZsYWdzfD0yMDQ4O2JpKDksY2kuYmluZChudWxsLGMsZCxlLGIpLHZvaWQgMCxudWxsKTtpZihudWxsPT09USl0aHJvdyBFcnJvcihwKDM0OSkpOzAhPT0oSGgmMzApfHxkaShjLGIsZSl9cmV0dXJuIGV9ZnVuY3Rpb24gZGkoYSxiLGMpe2EuZmxhZ3N8PTE2Mzg0O2E9e2dldFNuYXBzaG90OmIsdmFsdWU6Y307Yj1NLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LE0udXBkYXRlUXVldWU9YixiLnN0b3Jlcz1bYV0pOihjPWIuc3RvcmVzLG51bGw9PT1jP2Iuc3RvcmVzPVthXTpjLnB1c2goYSkpfVxuZnVuY3Rpb24gY2koYSxiLGMsZCl7Yi52YWx1ZT1jO2IuZ2V0U25hcHNob3Q9ZDtlaShiKSYmZmkoYSl9ZnVuY3Rpb24gYWkoYSxiLGMpe3JldHVybiBjKGZ1bmN0aW9uKCl7ZWkoYikmJmZpKGEpfSl9ZnVuY3Rpb24gZWkoYSl7dmFyIGI9YS5nZXRTbmFwc2hvdDthPWEudmFsdWU7dHJ5e3ZhciBjPWIoKTtyZXR1cm4hSGUoYSxjKX1jYXRjaChkKXtyZXR1cm4hMH19ZnVuY3Rpb24gZmkoYSl7dmFyIGI9aWgoYSwxKTtudWxsIT09YiYmZ2koYixhLDEsLTEpfVxuZnVuY3Rpb24gaGkoYSl7dmFyIGI9VGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPXtwZW5kaW5nOm51bGwsaW50ZXJsZWF2ZWQ6bnVsbCxsYW5lczowLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpWaCxsYXN0UmVuZGVyZWRTdGF0ZTphfTtiLnF1ZXVlPWE7YT1hLmRpc3BhdGNoPWlpLmJpbmQobnVsbCxNLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBiaShhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1NLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGwsc3RvcmVzOm51bGx9LE0udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gamkoKXtyZXR1cm4gVWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIGtpKGEsYixjLGQpe3ZhciBlPVRoKCk7TS5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9YmkoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIGxpKGEsYixjLGQpe3ZhciBlPVVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU4pe3ZhciBnPU4ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmTWgoZCxnLmRlcHMpKXtlLm1lbW9pemVkU3RhdGU9YmkoYixjLGYsZCk7cmV0dXJufX1NLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1iaSgxfGIsYyxmLGQpfWZ1bmN0aW9uIG1pKGEsYil7cmV0dXJuIGtpKDgzOTA2NTYsOCxhLGIpfWZ1bmN0aW9uICRoKGEsYil7cmV0dXJuIGxpKDIwNDgsOCxhLGIpfWZ1bmN0aW9uIG5pKGEsYil7cmV0dXJuIGxpKDQsMixhLGIpfWZ1bmN0aW9uIG9pKGEsYil7cmV0dXJuIGxpKDQsNCxhLGIpfVxuZnVuY3Rpb24gcGkoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBxaShhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIGxpKDQsNCxwaS5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiByaSgpe31mdW5jdGlvbiBzaShhLGIpe3ZhciBjPVVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZNaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRpKGEsYil7dmFyIGM9VWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJk1oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIHVpKGEsYixjKXtpZigwPT09KEhoJjIxKSlyZXR1cm4gYS5iYXNlU3RhdGUmJihhLmJhc2VTdGF0ZT0hMSxkaD0hMCksYS5tZW1vaXplZFN0YXRlPWM7SGUoYyxiKXx8KGM9eWMoKSxNLmxhbmVzfD1jLHJofD1jLGEuYmFzZVN0YXRlPSEwKTtyZXR1cm4gYn1mdW5jdGlvbiB2aShhLGIpe3ZhciBjPUM7Qz0wIT09YyYmND5jP2M6NDthKCEwKTt2YXIgZD1HaC50cmFuc2l0aW9uO0doLnRyYW5zaXRpb249e307dHJ5e2EoITEpLGIoKX1maW5hbGx5e0M9YyxHaC50cmFuc2l0aW9uPWR9fWZ1bmN0aW9uIHdpKCl7cmV0dXJuIFVoKCkubWVtb2l6ZWRTdGF0ZX1cbmZ1bmN0aW9uIHhpKGEsYixjKXt2YXIgZD15aShhKTtjPXtsYW5lOmQsYWN0aW9uOmMsaGFzRWFnZXJTdGF0ZTohMSxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTtpZih6aShhKSlBaShiLGMpO2Vsc2UgaWYoYz1oaChhLGIsYyxkKSxudWxsIT09Yyl7dmFyIGU9UigpO2dpKGMsYSxkLGUpO0JpKGMsYixkKX19XG5mdW5jdGlvbiBpaShhLGIsYyl7dmFyIGQ9eWkoYSksZT17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYoemkoYSkpQWkoYixlKTtlbHNle3ZhciBmPWEuYWx0ZXJuYXRlO2lmKDA9PT1hLmxhbmVzJiYobnVsbD09PWZ8fDA9PT1mLmxhbmVzKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmhhc0VhZ2VyU3RhdGU9ITA7ZS5lYWdlclN0YXRlPWg7aWYoSGUoaCxnKSl7dmFyIGs9Yi5pbnRlcmxlYXZlZDtudWxsPT09az8oZS5uZXh0PWUsZ2goYikpOihlLm5leHQ9ay5uZXh0LGsubmV4dD1lKTtiLmludGVybGVhdmVkPWU7cmV0dXJufX1jYXRjaChsKXt9ZmluYWxseXt9Yz1oaChhLGIsZSxkKTtudWxsIT09YyYmKGU9UigpLGdpKGMsYSxkLGUpLEJpKGMsYixkKSl9fVxuZnVuY3Rpb24gemkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7cmV0dXJuIGE9PT1NfHxudWxsIT09YiYmYj09PU19ZnVuY3Rpb24gQWkoYSxiKXtKaD1JaD0hMDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifWZ1bmN0aW9uIEJpKGEsYixjKXtpZigwIT09KGMmNDE5NDI0MCkpe3ZhciBkPWIubGFuZXM7ZCY9YS5wZW5kaW5nTGFuZXM7Y3w9ZDtiLmxhbmVzPWM7Q2MoYSxjKX19XG52YXIgUmg9e3JlYWRDb250ZXh0OmVoLHVzZUNhbGxiYWNrOlAsdXNlQ29udGV4dDpQLHVzZUVmZmVjdDpQLHVzZUltcGVyYXRpdmVIYW5kbGU6UCx1c2VJbnNlcnRpb25FZmZlY3Q6UCx1c2VMYXlvdXRFZmZlY3Q6UCx1c2VNZW1vOlAsdXNlUmVkdWNlcjpQLHVzZVJlZjpQLHVzZVN0YXRlOlAsdXNlRGVidWdWYWx1ZTpQLHVzZURlZmVycmVkVmFsdWU6UCx1c2VUcmFuc2l0aW9uOlAsdXNlTXV0YWJsZVNvdXJjZTpQLHVzZVN5bmNFeHRlcm5hbFN0b3JlOlAsdXNlSWQ6UCx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LE9oPXtyZWFkQ29udGV4dDplaCx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe1RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6ZWgsdXNlRWZmZWN0Om1pLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBraSg0MTk0MzA4LFxuNCxwaS5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGtpKDQxOTQzMDgsNCxhLGIpfSx1c2VJbnNlcnRpb25FZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2koNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1UaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1UaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTtkLnF1ZXVlPWE7YT1hLmRpc3BhdGNoPXhpLmJpbmQobnVsbCxNLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1cblRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOmhpLHVzZURlYnVnVmFsdWU6cmksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXtyZXR1cm4gVGgoKS5tZW1vaXplZFN0YXRlPWF9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1oaSghMSksYj1hWzBdO2E9dmkuYmluZChudWxsLGFbMV0pO1RoKCkubWVtb2l6ZWRTdGF0ZT1hO3JldHVybltiLGFdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKCl7fSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9TSxlPVRoKCk7aWYoSSl7aWYodm9pZCAwPT09Yyl0aHJvdyBFcnJvcihwKDQwNykpO2M9YygpfWVsc2V7Yz1iKCk7aWYobnVsbD09PVEpdGhyb3cgRXJyb3IocCgzNDkpKTswIT09KEhoJjMwKXx8ZGkoZCxiLGMpfWUubWVtb2l6ZWRTdGF0ZT1jO3ZhciBmPXt2YWx1ZTpjLGdldFNuYXBzaG90OmJ9O2UucXVldWU9ZjttaShhaS5iaW5kKG51bGwsZCxcbmYsYSksW2FdKTtkLmZsYWdzfD0yMDQ4O2JpKDksY2kuYmluZChudWxsLGQsZixjLGIpLHZvaWQgMCxudWxsKTtyZXR1cm4gY30sdXNlSWQ6ZnVuY3Rpb24oKXt2YXIgYT1UaCgpLGI9US5pZGVudGlmaWVyUHJlZml4O2lmKEkpe3ZhciBjPXNnO3ZhciBkPXJnO2M9KGQmfigxPDwzMi1vYyhkKS0xKSkudG9TdHJpbmcoMzIpK2M7Yj1cIjpcIitiK1wiUlwiK2M7Yz1LaCsrOzA8YyYmKGIrPVwiSFwiK2MudG9TdHJpbmcoMzIpKTtiKz1cIjpcIn1lbHNlIGM9TGgrKyxiPVwiOlwiK2IrXCJyXCIrYy50b1N0cmluZygzMikrXCI6XCI7cmV0dXJuIGEubWVtb2l6ZWRTdGF0ZT1ifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LFBoPXtyZWFkQ29udGV4dDplaCx1c2VDYWxsYmFjazpzaSx1c2VDb250ZXh0OmVoLHVzZUVmZmVjdDokaCx1c2VJbXBlcmF0aXZlSGFuZGxlOnFpLHVzZUluc2VydGlvbkVmZmVjdDpuaSx1c2VMYXlvdXRFZmZlY3Q6b2ksdXNlTWVtbzp0aSx1c2VSZWR1Y2VyOldoLHVzZVJlZjpqaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBXaChWaCl9LFxudXNlRGVidWdWYWx1ZTpyaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVVoKCk7cmV0dXJuIHVpKGIsTi5tZW1vaXplZFN0YXRlLGEpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9V2goVmgpWzBdLGI9VWgoKS5tZW1vaXplZFN0YXRlO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOlloLHVzZVN5bmNFeHRlcm5hbFN0b3JlOlpoLHVzZUlkOndpLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sUWg9e3JlYWRDb250ZXh0OmVoLHVzZUNhbGxiYWNrOnNpLHVzZUNvbnRleHQ6ZWgsdXNlRWZmZWN0OiRoLHVzZUltcGVyYXRpdmVIYW5kbGU6cWksdXNlSW5zZXJ0aW9uRWZmZWN0Om5pLHVzZUxheW91dEVmZmVjdDpvaSx1c2VNZW1vOnRpLHVzZVJlZHVjZXI6WGgsdXNlUmVmOmppLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIFhoKFZoKX0sdXNlRGVidWdWYWx1ZTpyaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPVVoKCk7cmV0dXJuIG51bGw9PT1cbk4/Yi5tZW1vaXplZFN0YXRlPWE6dWkoYixOLm1lbW9pemVkU3RhdGUsYSl9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1YaChWaClbMF0sYj1VaCgpLm1lbW9pemVkU3RhdGU7cmV0dXJuW2EsYl19LHVzZU11dGFibGVTb3VyY2U6WWgsdXNlU3luY0V4dGVybmFsU3RvcmU6WmgsdXNlSWQ6d2ksdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfTtmdW5jdGlvbiBDaShhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPUEoe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn1mdW5jdGlvbiBEaShhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6QSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgRWk9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/VmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9UigpLGU9eWkoYSksZj1taChkLGUpO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtiPW5oKGEsZixlKTtudWxsIT09YiYmKGdpKGIsYSxlLGQpLG9oKGIsYSxlKSl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9UigpLGU9eWkoYSksZj1taChkLGUpO2YudGFnPTE7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO2I9bmgoYSxmLGUpO251bGwhPT1iJiYoZ2koYixhLGUsZCksb2goYixhLGUpKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1SKCksZD1cbnlpKGEpLGU9bWgoYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtiPW5oKGEsZSxkKTtudWxsIT09YiYmKGdpKGIsYSxkLGMpLG9oKGIsYSxkKSl9fTtmdW5jdGlvbiBGaShhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFJZShjLGQpfHwhSWUoZSxmKTohMH1cbmZ1bmN0aW9uIEdpKGEsYixjKXt2YXIgZD0hMSxlPVZmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPWVoKGYpOihlPVpmKGIpP1hmOkguY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP1lmKGEsZSk6VmYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1FaTthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEhpKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZFaS5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIElpKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9e307a2goYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1laChmKTooZj1aZihiKT9YZjpILmN1cnJlbnQsZS5jb250ZXh0PVlmKGEsZikpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihEaShhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZFaS5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxxaChhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00MTk0MzA4KX1mdW5jdGlvbiBKaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1QYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZSxkaWdlc3Q6bnVsbH19XG5mdW5jdGlvbiBLaShhLGIsYyl7cmV0dXJue3ZhbHVlOmEsc291cmNlOm51bGwsc3RhY2s6bnVsbCE9Yz9jOm51bGwsZGlnZXN0Om51bGwhPWI/YjpudWxsfX1mdW5jdGlvbiBMaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgTWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gTmkoYSxiLGMpe2M9bWgoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7T2l8fChPaT0hMCxQaT1kKTtMaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFFpKGEsYixjKXtjPW1oKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX07Yy5jYWxsYmFjaz1mdW5jdGlvbigpe0xpKGEsYil9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtMaShhLGIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVJpP1JpPW5ldyBTZXQoW3RoaXNdKTpSaS5hZGQodGhpcykpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gU2koYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO2lmKG51bGw9PT1kKXtkPWEucGluZ0NhY2hlPW5ldyBNaTt2YXIgZT1uZXcgU2V0O2Quc2V0KGIsZSl9ZWxzZSBlPWQuZ2V0KGIpLHZvaWQgMD09PWUmJihlPW5ldyBTZXQsZC5zZXQoYixlKSk7ZS5oYXMoYyl8fChlLmFkZChjKSxhPVRpLmJpbmQobnVsbCxhLGIsYyksYi50aGVuKGEsYSkpfWZ1bmN0aW9uIFVpKGEpe2Rve3ZhciBiO2lmKGI9MTM9PT1hLnRhZyliPWEubWVtb2l6ZWRTdGF0ZSxiPW51bGwhPT1iP251bGwhPT1iLmRlaHlkcmF0ZWQ/ITA6ITE6ITA7aWYoYilyZXR1cm4gYTthPWEucmV0dXJufXdoaWxlKG51bGwhPT1hKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZpKGEsYixjLGQsZSl7aWYoMD09PShhLm1vZGUmMSkpcmV0dXJuIGE9PT1iP2EuZmxhZ3N8PTY1NTM2OihhLmZsYWdzfD0xMjgsYy5mbGFnc3w9MTMxMDcyLGMuZmxhZ3MmPS01MjgwNSwxPT09Yy50YWcmJihudWxsPT09Yy5hbHRlcm5hdGU/Yy50YWc9MTc6KGI9bWgoLTEsMSksYi50YWc9MixuaChjLGIsMSkpKSxjLmxhbmVzfD0xKSxhO2EuZmxhZ3N8PTY1NTM2O2EubGFuZXM9ZTtyZXR1cm4gYX12YXIgV2k9dWEuUmVhY3RDdXJyZW50T3duZXIsZGg9ITE7ZnVuY3Rpb24gWGkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9WZyhiLG51bGwsYyxkKTpVZyhiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIFlpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtjaChiLGUpO2Q9TmgoYSxiLGMsZCxmLGUpO2M9U2goKTtpZihudWxsIT09YSYmIWRoKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTIwNTMsYS5sYW5lcyY9fmUsWmkoYSxiLGUpO0kmJmMmJnZnKGIpO2IuZmxhZ3N8PTE7WGkoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaShhLGIsYyxkLGUpe2lmKG51bGw9PT1hKXt2YXIgZj1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJiFhaihmKSYmdm9pZCAwPT09Zi5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZixiaihhLGIsZixkLGUpO2E9UmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxlKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zj1hLmNoaWxkO2lmKDA9PT0oYS5sYW5lcyZlKSl7dmFyIGc9Zi5tZW1vaXplZFByb3BzO2M9Yy5jb21wYXJlO2M9bnVsbCE9PWM/YzpJZTtpZihjKGcsZCkmJmEucmVmPT09Yi5yZWYpcmV0dXJuIFppKGEsYixlKX1iLmZsYWdzfD0xO2E9UGcoZixkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBiaihhLGIsYyxkLGUpe2lmKG51bGwhPT1hKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoSWUoZixkKSYmYS5yZWY9PT1iLnJlZilpZihkaD0hMSxiLnBlbmRpbmdQcm9wcz1kPWYsMCE9PShhLmxhbmVzJmUpKTAhPT0oYS5mbGFncyYxMzEwNzIpJiYoZGg9ITApO2Vsc2UgcmV0dXJuIGIubGFuZXM9YS5sYW5lcyxaaShhLGIsZSl9cmV0dXJuIGNqKGEsYixjLGQsZSl9XG5mdW5jdGlvbiBkaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLmNoaWxkcmVuLGY9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7aWYoXCJoaWRkZW5cIj09PWQubW9kZSlpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LEcoZWosZmopLGZqfD1jO2Vsc2V7aWYoMD09PShjJjEwNzM3NDE4MjQpKXJldHVybiBhPW51bGwhPT1mP2YuYmFzZUxhbmVzfGM6YyxiLmxhbmVzPWIuY2hpbGRMYW5lcz0xMDczNzQxODI0LGIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH0sYi51cGRhdGVRdWV1ZT1udWxsLEcoZWosZmopLGZqfD1hLG51bGw7Yi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfTtkPW51bGwhPT1mP2YuYmFzZUxhbmVzOmM7Ryhlaixmaik7Zmp8PWR9ZWxzZSBudWxsIT09XG5mPyhkPWYuYmFzZUxhbmVzfGMsYi5tZW1vaXplZFN0YXRlPW51bGwpOmQ9YyxHKGVqLGZqKSxmanw9ZDtYaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBnaihhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mn1mdW5jdGlvbiBjaihhLGIsYyxkLGUpe3ZhciBmPVpmKGMpP1hmOkguY3VycmVudDtmPVlmKGIsZik7Y2goYixlKTtjPU5oKGEsYixjLGQsZixlKTtkPVNoKCk7aWYobnVsbCE9PWEmJiFkaClyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLFppKGEsYixlKTtJJiZkJiZ2ZyhiKTtiLmZsYWdzfD0xO1hpKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaGooYSxiLGMsZCxlKXtpZihaZihjKSl7dmFyIGY9ITA7Y2coYil9ZWxzZSBmPSExO2NoKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKWlqKGEsYiksR2koYixjLGQpLElpKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPWVoKGwpOihsPVpmKGMpP1hmOkguY3VycmVudCxsPVlmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihoIT09ZHx8ayE9PWwpJiZIaShiLGcsZCxsKTtqaD0hMTt2YXIgcj1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1yO3FoKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxyIT09a3x8V2YuY3VycmVudHx8amg/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRGkoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPWpofHxGaShiLGMsaCxkLHIsayxsKSk/KHF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSk6XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQxOTQzMDgpLGQ9ITEpfWVsc2V7Zz1iLnN0YXRlTm9kZTtsaChhLGIpO2g9Yi5tZW1vaXplZFByb3BzO2w9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkNpKGIudHlwZSxoKTtnLnByb3BzPWw7cT1iLnBlbmRpbmdQcm9wcztyPWcuY29udGV4dDtrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPWVoKGspOihrPVpmKGMpP1hmOkguY3VycmVudCxrPVlmKGIsaykpO3ZhciB5PWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhtPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB5fHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09cXx8ciE9PWspJiZIaShiLGcsZCxrKTtqaD0hMTtyPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXI7cWgoYixkLGcsZSk7dmFyIG49Yi5tZW1vaXplZFN0YXRlO2ghPT1xfHxyIT09bnx8V2YuY3VycmVudHx8amg/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiB5JiYoRGkoYixjLHksZCksbj1iLm1lbW9pemVkU3RhdGUpLChsPWpofHxGaShiLGMsbCxkLHIsbixrKXx8ITEpPyhtfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLG4sayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLG4saykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MTAyNCkpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTEwMjQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1uKSxnLnByb3BzPWQsZy5zdGF0ZT1uLGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcj09PVxuYS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxkPSExKX1yZXR1cm4gamooYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gamooYSxiLGMsZCxlLGYpe2dqKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjEyOCk7aWYoIWQmJiFnKXJldHVybiBlJiZkZyhiLGMsITEpLFppKGEsYixmKTtkPWIuc3RhdGVOb2RlO1dpLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZmxhZ3N8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9VWcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1VZyhiLG51bGwsaCxmKSk6WGkoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmZGcoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBraihhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P2FnKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJmFnKGEsYi5jb250ZXh0LCExKTt5aChhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBsaihhLGIsYyxkLGUpe0lnKCk7SmcoZSk7Yi5mbGFnc3w9MjU2O1hpKGEsYixjLGQpO3JldHVybiBiLmNoaWxkfXZhciBtaj17ZGVoeWRyYXRlZDpudWxsLHRyZWVDb250ZXh0Om51bGwscmV0cnlMYW5lOjB9O2Z1bmN0aW9uIG5qKGEpe3JldHVybntiYXNlTGFuZXM6YSxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfX1cbmZ1bmN0aW9uIG9qKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPUwuY3VycmVudCxmPSExLGc9MCE9PShiLmZsYWdzJjEyOCksaDsoaD1nKXx8KGg9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtpZihoKWY9ITAsYi5mbGFncyY9LTEyOTtlbHNlIGlmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKWV8PTE7RyhMLGUmMSk7aWYobnVsbD09PWEpe0VnKGIpO2E9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiYoYT1hLmRlaHlkcmF0ZWQsbnVsbCE9PWEpKXJldHVybiAwPT09KGIubW9kZSYxKT9iLmxhbmVzPTE6XCIkIVwiPT09YS5kYXRhP2IubGFuZXM9ODpiLmxhbmVzPTEwNzM3NDE4MjQsbnVsbDtnPWQuY2hpbGRyZW47YT1kLmZhbGxiYWNrO3JldHVybiBmPyhkPWIubW9kZSxmPWIuY2hpbGQsZz17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmd9LDA9PT0oZCYxKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPVxuZyk6Zj1waihnLGQsMCxudWxsKSxhPVRnKGEsZCxjLG51bGwpLGYucmV0dXJuPWIsYS5yZXR1cm49YixmLnNpYmxpbmc9YSxiLmNoaWxkPWYsYi5jaGlsZC5tZW1vaXplZFN0YXRlPW5qKGMpLGIubWVtb2l6ZWRTdGF0ZT1taixhKTpxaihiLGcpfWU9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lJiYoaD1lLmRlaHlkcmF0ZWQsbnVsbCE9PWgpKXJldHVybiByaihhLGIsZyxkLGgsZSxjKTtpZihmKXtmPWQuZmFsbGJhY2s7Zz1iLm1vZGU7ZT1hLmNoaWxkO2g9ZS5zaWJsaW5nO3ZhciBrPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn07MD09PShnJjEpJiZiLmNoaWxkIT09ZT8oZD1iLmNoaWxkLGQuY2hpbGRMYW5lcz0wLGQucGVuZGluZ1Byb3BzPWssYi5kZWxldGlvbnM9bnVsbCk6KGQ9UGcoZSxrKSxkLnN1YnRyZWVGbGFncz1lLnN1YnRyZWVGbGFncyYxNDY4MDA2NCk7bnVsbCE9PWg/Zj1QZyhoLGYpOihmPVRnKGYsZyxjLG51bGwpLGYuZmxhZ3N8PTIpO2YucmV0dXJuPVxuYjtkLnJldHVybj1iO2Quc2libGluZz1mO2IuY2hpbGQ9ZDtkPWY7Zj1iLmNoaWxkO2c9YS5jaGlsZC5tZW1vaXplZFN0YXRlO2c9bnVsbD09PWc/bmooYyk6e2Jhc2VMYW5lczpnLmJhc2VMYW5lc3xjLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9O2YubWVtb2l6ZWRTdGF0ZT1nO2YuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmM7Yi5tZW1vaXplZFN0YXRlPW1qO3JldHVybiBkfWY9YS5jaGlsZDthPWYuc2libGluZztkPVBnKGYse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46ZC5jaGlsZHJlbn0pOzA9PT0oYi5tb2RlJjEpJiYoZC5sYW5lcz1jKTtkLnJldHVybj1iO2Quc2libGluZz1udWxsO251bGwhPT1hJiYoYz1iLmRlbGV0aW9ucyxudWxsPT09Yz8oYi5kZWxldGlvbnM9W2FdLGIuZmxhZ3N8PTE2KTpjLnB1c2goYSkpO2IuY2hpbGQ9ZDtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gZH1cbmZ1bmN0aW9uIHFqKGEsYil7Yj1waih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpifSxhLm1vZGUsMCxudWxsKTtiLnJldHVybj1hO3JldHVybiBhLmNoaWxkPWJ9ZnVuY3Rpb24gc2ooYSxiLGMsZCl7bnVsbCE9PWQmJkpnKGQpO1VnKGIsYS5jaGlsZCxudWxsLGMpO2E9cWooYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbik7YS5mbGFnc3w9MjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYX1cbmZ1bmN0aW9uIHJqKGEsYixjLGQsZSxmLGcpe2lmKGMpe2lmKGIuZmxhZ3MmMjU2KXJldHVybiBiLmZsYWdzJj0tMjU3LGQ9S2koRXJyb3IocCg0MjIpKSksc2ooYSxiLGcsZCk7aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSlyZXR1cm4gYi5jaGlsZD1hLmNoaWxkLGIuZmxhZ3N8PTEyOCxudWxsO2Y9ZC5mYWxsYmFjaztlPWIubW9kZTtkPXBqKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmQuY2hpbGRyZW59LGUsMCxudWxsKTtmPVRnKGYsZSxnLG51bGwpO2YuZmxhZ3N8PTI7ZC5yZXR1cm49YjtmLnJldHVybj1iO2Quc2libGluZz1mO2IuY2hpbGQ9ZDswIT09KGIubW9kZSYxKSYmVWcoYixhLmNoaWxkLG51bGwsZyk7Yi5jaGlsZC5tZW1vaXplZFN0YXRlPW5qKGcpO2IubWVtb2l6ZWRTdGF0ZT1tajtyZXR1cm4gZn1pZigwPT09KGIubW9kZSYxKSlyZXR1cm4gc2ooYSxiLGcsbnVsbCk7aWYoXCIkIVwiPT09ZS5kYXRhKXtkPWUubmV4dFNpYmxpbmcmJmUubmV4dFNpYmxpbmcuZGF0YXNldDtcbmlmKGQpdmFyIGg9ZC5kZ3N0O2Q9aDtmPUVycm9yKHAoNDE5KSk7ZD1LaShmLGQsdm9pZCAwKTtyZXR1cm4gc2ooYSxiLGcsZCl9aD0wIT09KGcmYS5jaGlsZExhbmVzKTtpZihkaHx8aCl7ZD1RO2lmKG51bGwhPT1kKXtzd2l0Y2goZyYtZyl7Y2FzZSA0OmU9MjticmVhaztjYXNlIDE2OmU9ODticmVhaztjYXNlIDY0OmNhc2UgMTI4OmNhc2UgMjU2OmNhc2UgNTEyOmNhc2UgMTAyNDpjYXNlIDIwNDg6Y2FzZSA0MDk2OmNhc2UgODE5MjpjYXNlIDE2Mzg0OmNhc2UgMzI3Njg6Y2FzZSA2NTUzNjpjYXNlIDEzMTA3MjpjYXNlIDI2MjE0NDpjYXNlIDUyNDI4ODpjYXNlIDEwNDg1NzY6Y2FzZSAyMDk3MTUyOmNhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6ZT0zMjticmVhaztjYXNlIDUzNjg3MDkxMjplPTI2ODQzNTQ1NjticmVhaztkZWZhdWx0OmU9MH1lPTAhPT0oZSYoZC5zdXNwZW5kZWRMYW5lc3xnKSk/MDplO1xuMCE9PWUmJmUhPT1mLnJldHJ5TGFuZSYmKGYucmV0cnlMYW5lPWUsaWgoYSxlKSxnaShkLGEsZSwtMSkpfXRqKCk7ZD1LaShFcnJvcihwKDQyMSkpKTtyZXR1cm4gc2ooYSxiLGcsZCl9aWYoXCIkP1wiPT09ZS5kYXRhKXJldHVybiBiLmZsYWdzfD0xMjgsYi5jaGlsZD1hLmNoaWxkLGI9dWouYmluZChudWxsLGEpLGUuX3JlYWN0UmV0cnk9YixudWxsO2E9Zi50cmVlQ29udGV4dDt5Zz1MZihlLm5leHRTaWJsaW5nKTt4Zz1iO0k9ITA7emc9bnVsbDtudWxsIT09YSYmKG9nW3BnKytdPXJnLG9nW3BnKytdPXNnLG9nW3BnKytdPXFnLHJnPWEuaWQsc2c9YS5vdmVyZmxvdyxxZz1iKTtiPXFqKGIsZC5jaGlsZHJlbik7Yi5mbGFnc3w9NDA5NjtyZXR1cm4gYn1mdW5jdGlvbiB2aihhLGIsYyl7YS5sYW5lc3w9Yjt2YXIgZD1hLmFsdGVybmF0ZTtudWxsIT09ZCYmKGQubGFuZXN8PWIpO2JoKGEucmV0dXJuLGIsYyl9XG5mdW5jdGlvbiB3aihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zj9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplfTooZi5pc0JhY2t3YXJkcz1iLGYucmVuZGVyaW5nPW51bGwsZi5yZW5kZXJpbmdTdGFydFRpbWU9MCxmLmxhc3Q9ZCxmLnRhaWw9YyxmLnRhaWxNb2RlPWUpfVxuZnVuY3Rpb24geGooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtYaShhLGIsZC5jaGlsZHJlbixjKTtkPUwuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD0xMjg7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZ2aihhLGMsYik7ZWxzZSBpZigxOT09PWEudGFnKXZqKGEsYyxiKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9RyhMLGQpO2lmKDA9PT0oYi5tb2RlJjEpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1DaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3dqKGIsITEsZSxjLGYpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09Q2goYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfXdqKGIsITAsYyxudWxsLGYpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOndqKGIsITEsbnVsbCxudWxsLHZvaWQgMCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlqKGEsYil7MD09PShiLm1vZGUmMSkmJm51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpfWZ1bmN0aW9uIFppKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtyaHw9Yi5sYW5lcztpZigwPT09KGMmYi5jaGlsZExhbmVzKSlyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IocCgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9UGcoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVBnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB5aihhLGIsYyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6a2ooYik7SWcoKTticmVhaztjYXNlIDU6QWgoYik7YnJlYWs7Y2FzZSAxOlpmKGIudHlwZSkmJmNnKGIpO2JyZWFrO2Nhc2UgNDp5aChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5tZW1vaXplZFByb3BzLnZhbHVlO0coV2csZC5fY3VycmVudFZhbHVlKTtkLl9jdXJyZW50VmFsdWU9ZTticmVhaztjYXNlIDEzOmQ9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kKXtpZihudWxsIT09ZC5kZWh5ZHJhdGVkKXJldHVybiBHKEwsTC5jdXJyZW50JjEpLGIuZmxhZ3N8PTEyOCxudWxsO2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiBvaihhLGIsYyk7RyhMLEwuY3VycmVudCYxKTthPVppKGEsYixjKTtyZXR1cm4gbnVsbCE9PWE/YS5zaWJsaW5nOm51bGx9RyhMLEwuY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9MCE9PShjJlxuYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmMTI4KSl7aWYoZClyZXR1cm4geGooYSxiLGMpO2IuZmxhZ3N8PTEyOH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0coTCxMLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIGIubGFuZXM9MCxkaihhLGIsYyl9cmV0dXJuIFppKGEsYixjKX12YXIgemosQWosQmosQ2o7XG56aj1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07QWo9ZnVuY3Rpb24oKXt9O1xuQmo9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO3hoKHVoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6ZT1BKHt9LGUse3ZhbHVlOnZvaWQgMH0pO2Q9QSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmU9Z2IoYSxlKTtkPWdiKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9QmYpfXViKGMsZCk7dmFyIGc7Yz1udWxsO2ZvcihsIGluIGUpaWYoIWQuaGFzT3duUHJvcGVydHkobCkmJmUuaGFzT3duUHJvcGVydHkobCkmJm51bGwhPWVbbF0paWYoXCJzdHlsZVwiPT09bCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJlxuKGN8fChjPXt9KSxjW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1sJiZcImNoaWxkcmVuXCIhPT1sJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYoZWEuaGFzT3duUHJvcGVydHkobCk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGwsbnVsbCkpO2ZvcihsIGluIGQpe3ZhciBrPWRbbF07aD1udWxsIT1lP2VbbF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkobCkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09bClpZihoKXtmb3IoZyBpbiBoKSFoLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoY3x8KGM9e30pLGNbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZoW2ddIT09a1tnXSYmKGN8fChjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxcbmMpKSxjPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2gobCxrKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2gobCxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmKGVhLmhhc093blByb3BlcnR5KGwpPyhudWxsIT1rJiZcIm9uU2Nyb2xsXCI9PT1sJiZEKFwic2Nyb2xsXCIsYSksZnx8aD09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtDaj1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtcbmZ1bmN0aW9uIERqKGEsYil7aWYoIUkpc3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIFMoYSl7dmFyIGI9bnVsbCE9PWEuYWx0ZXJuYXRlJiZhLmFsdGVybmF0ZS5jaGlsZD09PWEuY2hpbGQsYz0wLGQ9MDtpZihiKWZvcih2YXIgZT1hLmNoaWxkO251bGwhPT1lOyljfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxkfD1lLnN1YnRyZWVGbGFncyYxNDY4MDA2NCxkfD1lLmZsYWdzJjE0NjgwMDY0LGUucmV0dXJuPWEsZT1lLnNpYmxpbmc7ZWxzZSBmb3IoZT1hLmNoaWxkO251bGwhPT1lOyljfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxkfD1lLnN1YnRyZWVGbGFncyxkfD1lLmZsYWdzLGUucmV0dXJuPWEsZT1lLnNpYmxpbmc7YS5zdWJ0cmVlRmxhZ3N8PWQ7YS5jaGlsZExhbmVzPWM7cmV0dXJuIGJ9XG5mdW5jdGlvbiBFaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7d2coYik7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gUyhiKSxudWxsO2Nhc2UgMTpyZXR1cm4gWmYoYi50eXBlKSYmJGYoKSxTKGIpLG51bGw7Y2FzZSAzOmQ9Yi5zdGF0ZU5vZGU7emgoKTtFKFdmKTtFKEgpO0VoKCk7ZC5wZW5kaW5nQ29udGV4dCYmKGQuY29udGV4dD1kLnBlbmRpbmdDb250ZXh0LGQucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUdnKGIpP2IuZmxhZ3N8PTQ6bnVsbD09PWF8fGEubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQmJjA9PT0oYi5mbGFncyYyNTYpfHwoYi5mbGFnc3w9MTAyNCxudWxsIT09emcmJihGaih6Zyksemc9bnVsbCkpO0FqKGEsYik7UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDU6QmgoYik7dmFyIGU9eGgod2guY3VycmVudCk7XG5jPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpQmooYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTIpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2NikpO1MoYik7cmV0dXJuIG51bGx9YT14aCh1aC5jdXJyZW50KTtpZihHZyhiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtPZl09YjtkW1BmXT1mO2E9MCE9PShiLm1vZGUmMSk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpEKFwiY2FuY2VsXCIsZCk7RChcImNsb3NlXCIsZCk7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpEKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxsZi5sZW5ndGg7ZSsrKUQobGZbZV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkQoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkQoXCJlcnJvclwiLFxuZCk7RChcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkQoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0QoXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtEKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGQsZiksRChcImludmFsaWRcIixkKX11YihjLGYpO2U9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoITAhPT1mLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyYmQWYoZC50ZXh0Q29udGVudCxoLGEpLGU9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoITAhPT1mLnN1cHByZXNzSHlkcmF0aW9uV2FybmluZyYmQWYoZC50ZXh0Q29udGVudCxcbmgsYSksZT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOmVhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZcIm9uU2Nyb2xsXCI9PT1nJiZEKFwic2Nyb2xsXCIsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGQpO2RiKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoZCk7amIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihkLm9uY2xpY2s9QmYpfWQ9ZTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hJiYoYT1rYihjKSk7XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP1wic2NyaXB0XCI9PT1jPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcblwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW09mXT1iO2FbUGZdPWQ7emooYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2E6e2c9dmIoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkQoXCJjYW5jZWxcIixhKTtEKFwiY2xvc2VcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpEKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8bGYubGVuZ3RoO2UrKylEKGxmW2VdLGEpO2U9ZDticmVhaztjYXNlIFwic291cmNlXCI6RChcImVycm9yXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkQoXCJlcnJvclwiLFxuYSk7RChcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpEKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0QoXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZDticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9QSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1nYihhLGQpO0QoXCJpbnZhbGlkXCIsYSk7YnJlYWs7ZGVmYXVsdDplPWR9dWIoYyxlKTtoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/c2IoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm5iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1cbmN8fFwiXCIhPT1rKSYmb2IoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJm9iKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoZWEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRChcInNjcm9sbFwiLGEpOm51bGwhPWsmJnRhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7ZGIoYSxkLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsXG4hMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPUJmKX1zd2l0Y2goYyl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpkPSEhZC5hdXRvRm9jdXM7YnJlYWsgYTtjYXNlIFwiaW1nXCI6ZD0hMDticmVhayBhO2RlZmF1bHQ6ZD0hMX19ZCYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKX1TKGIpO3JldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlDaihhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtjPXhoKHdoLmN1cnJlbnQpO3hoKHVoLmN1cnJlbnQpO2lmKEdnKGIpKXtkPWIuc3RhdGVOb2RlO2M9Yi5tZW1vaXplZFByb3BzO2RbT2ZdPWI7aWYoZj1kLm5vZGVWYWx1ZSE9PWMpaWYoYT1cbnhnLG51bGwhPT1hKXN3aXRjaChhLnRhZyl7Y2FzZSAzOkFmKGQubm9kZVZhbHVlLGMsMCE9PShhLm1vZGUmMSkpO2JyZWFrO2Nhc2UgNTohMCE9PWEubWVtb2l6ZWRQcm9wcy5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQubm9kZVZhbHVlLGMsMCE9PShhLm1vZGUmMSkpfWYmJihiLmZsYWdzfD00KX1lbHNlIGQ9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxkW09mXT1iLGIuc3RhdGVOb2RlPWR9UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDEzOkUoTCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7aWYoSSYmbnVsbCE9PXlnJiYwIT09KGIubW9kZSYxKSYmMD09PShiLmZsYWdzJjEyOCkpSGcoKSxJZygpLGIuZmxhZ3N8PTk4NTYwLGY9ITE7ZWxzZSBpZihmPUdnKGIpLG51bGwhPT1kJiZudWxsIT09ZC5kZWh5ZHJhdGVkKXtpZihudWxsPT09XG5hKXtpZighZil0aHJvdyBFcnJvcihwKDMxOCkpO2Y9Yi5tZW1vaXplZFN0YXRlO2Y9bnVsbCE9PWY/Zi5kZWh5ZHJhdGVkOm51bGw7aWYoIWYpdGhyb3cgRXJyb3IocCgzMTcpKTtmW09mXT1ifWVsc2UgSWcoKSwwPT09KGIuZmxhZ3MmMTI4KSYmKGIubWVtb2l6ZWRTdGF0ZT1udWxsKSxiLmZsYWdzfD00O1MoYik7Zj0hMX1lbHNlIG51bGwhPT16ZyYmKEZqKHpnKSx6Zz1udWxsKSxmPSEwO2lmKCFmKXJldHVybiBiLmZsYWdzJjY1NTM2P2I6bnVsbH1pZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtkIT09KG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlKSYmZCYmKGIuY2hpbGQuZmxhZ3N8PTgxOTIsMCE9PShiLm1vZGUmMSkmJihudWxsPT09YXx8MCE9PShMLmN1cnJlbnQmMSk/MD09PVQmJihUPTMpOnRqKCkpKTtudWxsIT09Yi51cGRhdGVRdWV1ZSYmKGIuZmxhZ3N8PTQpO1MoYik7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiB6aCgpLFxuQWooYSxiKSxudWxsPT09YSYmc2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksUyhiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIGFoKGIudHlwZS5fY29udGV4dCksUyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksUyhiKSxudWxsO2Nhc2UgMTk6RShMKTtmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZilyZXR1cm4gUyhiKSxudWxsO2Q9MCE9PShiLmZsYWdzJjEyOCk7Zz1mLnJlbmRlcmluZztpZihudWxsPT09ZylpZihkKURqKGYsITEpO2Vsc2V7aWYoMCE9PVR8fG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmMTI4KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1DaChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9MTI4O0RqKGYsITEpO2Q9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZCYmKGIudXBkYXRlUXVldWU9ZCxiLmZsYWdzfD00KTtiLnN1YnRyZWVGbGFncz0wO2Q9Yztmb3IoYz1iLmNoaWxkO251bGwhPT1jOylmPWMsYT1kLGYuZmxhZ3MmPTE0NjgwMDY2LFxuZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLnN1YnRyZWVGbGFncz0wLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5zdWJ0cmVlRmxhZ3M9MCxmLmRlbGV0aW9ucz1udWxsLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLGYuZGVwZW5kZW5jaWVzPW51bGw9PT1hP251bGw6e2xhbmVzOmEubGFuZXMsZmlyc3RDb250ZXh0OmEuZmlyc3RDb250ZXh0fSksYz1jLnNpYmxpbmc7RyhMLEwuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9XG5hLnNpYmxpbmd9bnVsbCE9PWYudGFpbCYmQigpPkdqJiYoYi5mbGFnc3w9MTI4LGQ9ITAsRGooZiwhMSksYi5sYW5lcz00MTk0MzA0KX1lbHNle2lmKCFkKWlmKGE9Q2goZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTEyOCxkPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmZsYWdzfD00KSxEaihmLCEwKSxudWxsPT09Zi50YWlsJiZcImhpZGRlblwiPT09Zi50YWlsTW9kZSYmIWcuYWx0ZXJuYXRlJiYhSSlyZXR1cm4gUyhiKSxudWxsfWVsc2UgMipCKCktZi5yZW5kZXJpbmdTdGFydFRpbWU+R2omJjEwNzM3NDE4MjQhPT1jJiYoYi5mbGFnc3w9MTI4LGQ9ITAsRGooZiwhMSksYi5sYW5lcz00MTk0MzA0KTtmLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWYubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZi5sYXN0PWcpfWlmKG51bGwhPT1mLnRhaWwpcmV0dXJuIGI9Zi50YWlsLGYucmVuZGVyaW5nPVxuYixmLnRhaWw9Yi5zaWJsaW5nLGYucmVuZGVyaW5nU3RhcnRUaW1lPUIoKSxiLnNpYmxpbmc9bnVsbCxjPUwuY3VycmVudCxHKEwsZD9jJjF8MjpjJjEpLGI7UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIEhqKCksZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1hJiZudWxsIT09YS5tZW1vaXplZFN0YXRlIT09ZCYmKGIuZmxhZ3N8PTgxOTIpLGQmJjAhPT0oYi5tb2RlJjEpPzAhPT0oZmomMTA3Mzc0MTgyNCkmJihTKGIpLGIuc3VidHJlZUZsYWdzJjYmJihiLmZsYWdzfD04MTkyKSk6UyhiKSxudWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7Y2FzZSAyNTpyZXR1cm4gbnVsbH10aHJvdyBFcnJvcihwKDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIElqKGEsYil7d2coYik7c3dpdGNoKGIudGFnKXtjYXNlIDE6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksYT1iLmZsYWdzLGEmNjU1MzY/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSAzOnJldHVybiB6aCgpLEUoV2YpLEUoSCksRWgoKSxhPWIuZmxhZ3MsMCE9PShhJjY1NTM2KSYmMD09PShhJjEyOCk/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSA1OnJldHVybiBCaChiKSxudWxsO2Nhc2UgMTM6RShMKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7aWYobnVsbD09PWIuYWx0ZXJuYXRlKXRocm93IEVycm9yKHAoMzQwKSk7SWcoKX1hPWIuZmxhZ3M7cmV0dXJuIGEmNjU1MzY/KGIuZmxhZ3M9YSYtNjU1Mzd8MTI4LGIpOm51bGw7Y2FzZSAxOTpyZXR1cm4gRShMKSxudWxsO2Nhc2UgNDpyZXR1cm4gemgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIGFoKGIudHlwZS5fY29udGV4dCksbnVsbDtjYXNlIDIyOmNhc2UgMjM6cmV0dXJuIEhqKCksXG5udWxsO2Nhc2UgMjQ6cmV0dXJuIG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19dmFyIEpqPSExLFU9ITEsS2o9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQsVj1udWxsO2Z1bmN0aW9uIExqKGEsYil7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMpdHJ5e2MobnVsbCl9Y2F0Y2goZCl7VyhhLGIsZCl9ZWxzZSBjLmN1cnJlbnQ9bnVsbH1mdW5jdGlvbiBNaihhLGIsYyl7dHJ5e2MoKX1jYXRjaChkKXtXKGEsYixkKX19dmFyIE5qPSExO1xuZnVuY3Rpb24gT2ooYSxiKXtDZj1kZDthPU1lKCk7aWYoTmUoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGM9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2M9KGM9YS5vd25lckRvY3VtZW50KSYmYy5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBkPWMuZ2V0U2VsZWN0aW9uJiZjLmdldFNlbGVjdGlvbigpO2lmKGQmJjAhPT1kLnJhbmdlQ291bnQpe2M9ZC5hbmNob3JOb2RlO3ZhciBlPWQuYW5jaG9yT2Zmc2V0LGY9ZC5mb2N1c05vZGU7ZD1kLmZvY3VzT2Zmc2V0O3RyeXtjLm5vZGVUeXBlLGYubm9kZVR5cGV9Y2F0Y2goRil7Yz1udWxsO2JyZWFrIGF9dmFyIGc9MCxoPS0xLGs9LTEsbD0wLG09MCxxPWEscj1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHk7Oyl7cSE9PWN8fDAhPT1lJiYzIT09cS5ub2RlVHlwZXx8KGg9ZytlKTtxIT09Znx8MCE9PWQmJjMhPT1xLm5vZGVUeXBlfHwoaz1nK2QpOzM9PT1xLm5vZGVUeXBlJiYoZys9XG5xLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oeT1xLmZpcnN0Q2hpbGQpKWJyZWFrO3I9cTtxPXl9Zm9yKDs7KXtpZihxPT09YSlicmVhayBiO3I9PT1jJiYrK2w9PT1lJiYoaD1nKTtyPT09ZiYmKyttPT09ZCYmKGs9Zyk7aWYobnVsbCE9PSh5PXEubmV4dFNpYmxpbmcpKWJyZWFrO3E9cjtyPXEucGFyZW50Tm9kZX1xPXl9Yz0tMT09PWh8fC0xPT09az9udWxsOntzdGFydDpoLGVuZDprfX1lbHNlIGM9bnVsbH1jPWN8fHtzdGFydDowLGVuZDowfX1lbHNlIGM9bnVsbDtEZj17Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpjfTtkZD0hMTtmb3IoVj1iO251bGwhPT1WOylpZihiPVYsYT1iLmNoaWxkLDAhPT0oYi5zdWJ0cmVlRmxhZ3MmMTAyOCkmJm51bGwhPT1hKWEucmV0dXJuPWIsVj1hO2Vsc2UgZm9yKDtudWxsIT09Vjspe2I9Vjt0cnl7dmFyIG49Yi5hbHRlcm5hdGU7aWYoMCE9PShiLmZsYWdzJjEwMjQpKXN3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpicmVhaztcbmNhc2UgMTppZihudWxsIT09bil7dmFyIHQ9bi5tZW1vaXplZFByb3BzLEo9bi5tZW1vaXplZFN0YXRlLHg9Yi5zdGF0ZU5vZGUsdz14LmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/dDpDaShiLnR5cGUsdCksSik7eC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT13fWJyZWFrO2Nhc2UgMzp2YXIgdT1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOzE9PT11Lm5vZGVUeXBlP3UudGV4dENvbnRlbnQ9XCJcIjo5PT09dS5ub2RlVHlwZSYmdS5kb2N1bWVudEVsZW1lbnQmJnUucmVtb3ZlQ2hpbGQodS5kb2N1bWVudEVsZW1lbnQpO2JyZWFrO2Nhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDE2MykpO319Y2F0Y2goRil7VyhiLGIucmV0dXJuLEYpfWE9Yi5zaWJsaW5nO2lmKG51bGwhPT1hKXthLnJldHVybj1iLnJldHVybjtWPWE7YnJlYWt9Vj1iLnJldHVybn1uPU5qO05qPSExO3JldHVybiBufVxuZnVuY3Rpb24gUGooYSxiLGMpe3ZhciBkPWIudXBkYXRlUXVldWU7ZD1udWxsIT09ZD9kLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09ZCl7dmFyIGU9ZD1kLm5leHQ7ZG97aWYoKGUudGFnJmEpPT09YSl7dmFyIGY9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZiYmTWooYixjLGYpfWU9ZS5uZXh0fXdoaWxlKGUhPT1kKX19ZnVuY3Rpb24gUWooYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIFJqKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKXt2YXIgYz1hLnN0YXRlTm9kZTtzd2l0Y2goYS50YWcpe2Nhc2UgNTphPWM7YnJlYWs7ZGVmYXVsdDphPWN9XCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpiLmN1cnJlbnQ9YX19XG5mdW5jdGlvbiBTaihhKXt2YXIgYj1hLmFsdGVybmF0ZTtudWxsIT09YiYmKGEuYWx0ZXJuYXRlPW51bGwsU2ooYikpO2EuY2hpbGQ9bnVsbDthLmRlbGV0aW9ucz1udWxsO2Euc2libGluZz1udWxsOzU9PT1hLnRhZyYmKGI9YS5zdGF0ZU5vZGUsbnVsbCE9PWImJihkZWxldGUgYltPZl0sZGVsZXRlIGJbUGZdLGRlbGV0ZSBiW29mXSxkZWxldGUgYltRZl0sZGVsZXRlIGJbUmZdKSk7YS5zdGF0ZU5vZGU9bnVsbDthLnJldHVybj1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBUaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFVqKGEpe2E6Zm9yKDs7KXtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fFRqKGEucmV0dXJuKSlyZXR1cm4gbnVsbDthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47Zm9yKGE9YS5zaWJsaW5nOzUhPT1hLnRhZyYmNiE9PWEudGFnJiYxOCE9PWEudGFnOyl7aWYoYS5mbGFncyYyKWNvbnRpbnVlIGE7aWYobnVsbD09PWEuY2hpbGR8fDQ9PT1hLnRhZyljb250aW51ZSBhO2Vsc2UgYS5jaGlsZC5yZXR1cm49YSxhPWEuY2hpbGR9aWYoIShhLmZsYWdzJjIpKXJldHVybiBhLnN0YXRlTm9kZX19XG5mdW5jdGlvbiBWaihhLGIsYyl7dmFyIGQ9YS50YWc7aWYoNT09PWR8fDY9PT1kKWE9YS5zdGF0ZU5vZGUsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9QmYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoVmooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylWaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBXaihhLGIsYyl7dmFyIGQ9YS50YWc7aWYoNT09PWR8fDY9PT1kKWE9YS5zdGF0ZU5vZGUsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspV2ooYSxiLGMpLGE9YS5zaWJsaW5nfXZhciBYPW51bGwsWGo9ITE7ZnVuY3Rpb24gWWooYSxiLGMpe2ZvcihjPWMuY2hpbGQ7bnVsbCE9PWM7KVpqKGEsYixjKSxjPWMuc2libGluZ31cbmZ1bmN0aW9uIFpqKGEsYixjKXtpZihsYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGxjLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtsYy5vbkNvbW1pdEZpYmVyVW5tb3VudChrYyxjKX1jYXRjaChoKXt9c3dpdGNoKGMudGFnKXtjYXNlIDU6VXx8TGooYyxiKTtjYXNlIDY6dmFyIGQ9WCxlPVhqO1g9bnVsbDtZaihhLGIsYyk7WD1kO1hqPWU7bnVsbCE9PVgmJihYaj8oYT1YLGM9Yy5zdGF0ZU5vZGUsOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGMpOmEucmVtb3ZlQ2hpbGQoYykpOlgucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDE4Om51bGwhPT1YJiYoWGo/KGE9WCxjPWMuc3RhdGVOb2RlLDg9PT1hLm5vZGVUeXBlP0tmKGEucGFyZW50Tm9kZSxjKToxPT09YS5ub2RlVHlwZSYmS2YoYSxjKSxiZChhKSk6S2YoWCxjLnN0YXRlTm9kZSkpO2JyZWFrO2Nhc2UgNDpkPVg7ZT1YajtYPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WGo9ITA7XG5ZaihhLGIsYyk7WD1kO1hqPWU7YnJlYWs7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmlmKCFVJiYoZD1jLnVwZGF0ZVF1ZXVlLG51bGwhPT1kJiYoZD1kLmxhc3RFZmZlY3QsbnVsbCE9PWQpKSl7ZT1kPWQubmV4dDtkb3t2YXIgZj1lLGc9Zi5kZXN0cm95O2Y9Zi50YWc7dm9pZCAwIT09ZyYmKDAhPT0oZiYyKT9NaihjLGIsZyk6MCE9PShmJjQpJiZNaihjLGIsZykpO2U9ZS5uZXh0fXdoaWxlKGUhPT1kKX1ZaihhLGIsYyk7YnJlYWs7Y2FzZSAxOmlmKCFVJiYoTGooYyxiKSxkPWMuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVbm1vdW50KSl0cnl7ZC5wcm9wcz1jLm1lbW9pemVkUHJvcHMsZC5zdGF0ZT1jLm1lbW9pemVkU3RhdGUsZC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGgpe1coYyxiLGgpfVlqKGEsYixjKTticmVhaztjYXNlIDIxOllqKGEsYixjKTticmVhaztjYXNlIDIyOmMubW9kZSYxPyhVPShkPVUpfHxudWxsIT09XG5jLm1lbW9pemVkU3RhdGUsWWooYSxiLGMpLFU9ZCk6WWooYSxiLGMpO2JyZWFrO2RlZmF1bHQ6WWooYSxiLGMpfX1mdW5jdGlvbiBhayhhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBLaik7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWJrLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gY2soYSxiKXt2YXIgYz1iLmRlbGV0aW9ucztpZihudWxsIT09Yylmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXTt0cnl7dmFyIGY9YSxnPWIsaD1nO2E6Zm9yKDtudWxsIT09aDspe3N3aXRjaChoLnRhZyl7Y2FzZSA1Olg9aC5zdGF0ZU5vZGU7WGo9ITE7YnJlYWsgYTtjYXNlIDM6WD1oLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1hqPSEwO2JyZWFrIGE7Y2FzZSA0Olg9aC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztYaj0hMDticmVhayBhfWg9aC5yZXR1cm59aWYobnVsbD09PVgpdGhyb3cgRXJyb3IocCgxNjApKTtaaihmLGcsZSk7WD1udWxsO1hqPSExO3ZhciBrPWUuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5yZXR1cm49bnVsbCk7ZS5yZXR1cm49bnVsbH1jYXRjaChsKXtXKGUsYixsKX19aWYoYi5zdWJ0cmVlRmxhZ3MmMTI4NTQpZm9yKGI9Yi5jaGlsZDtudWxsIT09YjspZGsoYixhKSxiPWIuc2libGluZ31cbmZ1bmN0aW9uIGRrKGEsYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLmZsYWdzO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNrKGIsYSk7ZWsoYSk7aWYoZCY0KXt0cnl7UGooMyxhLGEucmV0dXJuKSxRaigzLGEpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX10cnl7UGooNSxhLGEucmV0dXJuKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWJyZWFrO2Nhc2UgMTpjayhiLGEpO2VrKGEpO2QmNTEyJiZudWxsIT09YyYmTGooYyxjLnJldHVybik7YnJlYWs7Y2FzZSA1OmNrKGIsYSk7ZWsoYSk7ZCY1MTImJm51bGwhPT1jJiZMaihjLGMucmV0dXJuKTtpZihhLmZsYWdzJjMyKXt2YXIgZT1hLnN0YXRlTm9kZTt0cnl7b2IoZSxcIlwiKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWlmKGQmNCYmKGU9YS5zdGF0ZU5vZGUsbnVsbCE9ZSkpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcyxnPW51bGwhPT1jP2MubWVtb2l6ZWRQcm9wczpmLGg9YS50eXBlLGs9YS51cGRhdGVRdWV1ZTtcbmEudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09ayl0cnl7XCJpbnB1dFwiPT09aCYmXCJyYWRpb1wiPT09Zi50eXBlJiZudWxsIT1mLm5hbWUmJmFiKGUsZik7dmIoaCxnKTt2YXIgbD12YihoLGYpO2ZvcihnPTA7ZzxrLmxlbmd0aDtnKz0yKXt2YXIgbT1rW2ddLHE9a1tnKzFdO1wic3R5bGVcIj09PW0/c2IoZSxxKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1tP25iKGUscSk6XCJjaGlsZHJlblwiPT09bT9vYihlLHEpOnRhKGUsbSxxLGwpfXN3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpiYihlLGYpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGUsZik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnZhciByPWUuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZTtlLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFmLm11bHRpcGxlO3ZhciB5PWYudmFsdWU7bnVsbCE9eT9mYihlLCEhZi5tdWx0aXBsZSx5LCExKTpyIT09ISFmLm11bHRpcGxlJiYobnVsbCE9Zi5kZWZhdWx0VmFsdWU/ZmIoZSwhIWYubXVsdGlwbGUsXG5mLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoZSwhIWYubXVsdGlwbGUsZi5tdWx0aXBsZT9bXTpcIlwiLCExKSl9ZVtQZl09Zn1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWJyZWFrO2Nhc2UgNjpjayhiLGEpO2VrKGEpO2lmKGQmNCl7aWYobnVsbD09PWEuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTYyKSk7ZT1hLnN0YXRlTm9kZTtmPWEubWVtb2l6ZWRQcm9wczt0cnl7ZS5ub2RlVmFsdWU9Zn1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWJyZWFrO2Nhc2UgMzpjayhiLGEpO2VrKGEpO2lmKGQmNCYmbnVsbCE9PWMmJmMubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpdHJ5e2JkKGIuY29udGFpbmVySW5mbyl9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfWJyZWFrO2Nhc2UgNDpjayhiLGEpO2VrKGEpO2JyZWFrO2Nhc2UgMTM6Y2soYixhKTtlayhhKTtlPWEuY2hpbGQ7ZS5mbGFncyY4MTkyJiYoZj1udWxsIT09ZS5tZW1vaXplZFN0YXRlLGUuc3RhdGVOb2RlLmlzSGlkZGVuPWYsIWZ8fFxubnVsbCE9PWUuYWx0ZXJuYXRlJiZudWxsIT09ZS5hbHRlcm5hdGUubWVtb2l6ZWRTdGF0ZXx8KGZrPUIoKSkpO2QmNCYmYWsoYSk7YnJlYWs7Y2FzZSAyMjptPW51bGwhPT1jJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlO2EubW9kZSYxPyhVPShsPVUpfHxtLGNrKGIsYSksVT1sKTpjayhiLGEpO2VrKGEpO2lmKGQmODE5Mil7bD1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKChhLnN0YXRlTm9kZS5pc0hpZGRlbj1sKSYmIW0mJjAhPT0oYS5tb2RlJjEpKWZvcihWPWEsbT1hLmNoaWxkO251bGwhPT1tOyl7Zm9yKHE9Vj1tO251bGwhPT1WOyl7cj1WO3k9ci5jaGlsZDtzd2l0Y2goci50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpQaig0LHIsci5yZXR1cm4pO2JyZWFrO2Nhc2UgMTpMaihyLHIucmV0dXJuKTt2YXIgbj1yLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbi5jb21wb25lbnRXaWxsVW5tb3VudCl7ZD1yO2M9ci5yZXR1cm47dHJ5e2I9ZCxuLnByb3BzPVxuYi5tZW1vaXplZFByb3BzLG4uc3RhdGU9Yi5tZW1vaXplZFN0YXRlLG4uY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaCh0KXtXKGQsYyx0KX19YnJlYWs7Y2FzZSA1OkxqKHIsci5yZXR1cm4pO2JyZWFrO2Nhc2UgMjI6aWYobnVsbCE9PXIubWVtb2l6ZWRTdGF0ZSl7Z2socSk7Y29udGludWV9fW51bGwhPT15Pyh5LnJldHVybj1yLFY9eSk6Z2socSl9bT1tLnNpYmxpbmd9YTpmb3IobT1udWxsLHE9YTs7KXtpZig1PT09cS50YWcpe2lmKG51bGw9PT1tKXttPXE7dHJ5e2U9cS5zdGF0ZU5vZGUsbD8oZj1lLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooaD1xLnN0YXRlTm9kZSxrPXEubWVtb2l6ZWRQcm9wcy5zdHlsZSxnPXZvaWQgMCE9PWsmJm51bGwhPT1rJiZrLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9rLmRpc3BsYXk6bnVsbCxoLnN0eWxlLmRpc3BsYXk9XG5yYihcImRpc3BsYXlcIixnKSl9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX19ZWxzZSBpZig2PT09cS50YWcpe2lmKG51bGw9PT1tKXRyeXtxLnN0YXRlTm9kZS5ub2RlVmFsdWU9bD9cIlwiOnEubWVtb2l6ZWRQcm9wc31jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9fWVsc2UgaWYoKDIyIT09cS50YWcmJjIzIT09cS50YWd8fG51bGw9PT1xLm1lbW9pemVkU3RhdGV8fHE9PT1hKSYmbnVsbCE9PXEuY2hpbGQpe3EuY2hpbGQucmV0dXJuPXE7cT1xLmNoaWxkO2NvbnRpbnVlfWlmKHE9PT1hKWJyZWFrIGE7Zm9yKDtudWxsPT09cS5zaWJsaW5nOyl7aWYobnVsbD09PXEucmV0dXJufHxxLnJldHVybj09PWEpYnJlYWsgYTttPT09cSYmKG09bnVsbCk7cT1xLnJldHVybn1tPT09cSYmKG09bnVsbCk7cS5zaWJsaW5nLnJldHVybj1xLnJldHVybjtxPXEuc2libGluZ319YnJlYWs7Y2FzZSAxOTpjayhiLGEpO2VrKGEpO2QmNCYmYWsoYSk7YnJlYWs7Y2FzZSAyMTpicmVhaztkZWZhdWx0OmNrKGIsXG5hKSxlayhhKX19ZnVuY3Rpb24gZWsoYSl7dmFyIGI9YS5mbGFncztpZihiJjIpe3RyeXthOntmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZihUaihjKSl7dmFyIGQ9YzticmVhayBhfWM9Yy5yZXR1cm59dGhyb3cgRXJyb3IocCgxNjApKTt9c3dpdGNoKGQudGFnKXtjYXNlIDU6dmFyIGU9ZC5zdGF0ZU5vZGU7ZC5mbGFncyYzMiYmKG9iKGUsXCJcIiksZC5mbGFncyY9LTMzKTt2YXIgZj1VaihhKTtXaihhLGYsZSk7YnJlYWs7Y2FzZSAzOmNhc2UgNDp2YXIgZz1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGg9VWooYSk7VmooYSxoLGcpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjEpKTt9fWNhdGNoKGspe1coYSxhLnJldHVybixrKX1hLmZsYWdzJj0tM31iJjQwOTYmJihhLmZsYWdzJj0tNDA5Nyl9ZnVuY3Rpb24gaGsoYSxiLGMpe1Y9YTtpayhhLGIsYyl9XG5mdW5jdGlvbiBpayhhLGIsYyl7Zm9yKHZhciBkPTAhPT0oYS5tb2RlJjEpO251bGwhPT1WOyl7dmFyIGU9VixmPWUuY2hpbGQ7aWYoMjI9PT1lLnRhZyYmZCl7dmFyIGc9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZXx8Smo7aWYoIWcpe3ZhciBoPWUuYWx0ZXJuYXRlLGs9bnVsbCE9PWgmJm51bGwhPT1oLm1lbW9pemVkU3RhdGV8fFU7aD1Kajt2YXIgbD1VO0pqPWc7aWYoKFU9aykmJiFsKWZvcihWPWU7bnVsbCE9PVY7KWc9VixrPWcuY2hpbGQsMjI9PT1nLnRhZyYmbnVsbCE9PWcubWVtb2l6ZWRTdGF0ZT9qayhlKTpudWxsIT09az8oay5yZXR1cm49ZyxWPWspOmprKGUpO2Zvcig7bnVsbCE9PWY7KVY9ZixpayhmLGIsYyksZj1mLnNpYmxpbmc7Vj1lO0pqPWg7VT1sfWtrKGEsYixjKX1lbHNlIDAhPT0oZS5zdWJ0cmVlRmxhZ3MmODc3MikmJm51bGwhPT1mPyhmLnJldHVybj1lLFY9Zik6a2soYSxiLGMpfX1cbmZ1bmN0aW9uIGtrKGEpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYj1WO2lmKDAhPT0oYi5mbGFncyY4NzcyKSl7dmFyIGM9Yi5hbHRlcm5hdGU7dHJ5e2lmKDAhPT0oYi5mbGFncyY4NzcyKSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6VXx8UWooNSxiKTticmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoYi5mbGFncyY0JiYhVSlpZihudWxsPT09YylkLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZT1iLmVsZW1lbnRUeXBlPT09Yi50eXBlP2MubWVtb2l6ZWRQcm9wczpDaShiLnR5cGUsYy5tZW1vaXplZFByb3BzKTtkLmNvbXBvbmVudERpZFVwZGF0ZShlLGMubWVtb2l6ZWRTdGF0ZSxkLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgZj1iLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiZzaChiLGYsZCk7YnJlYWs7Y2FzZSAzOnZhciBnPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWcpe2M9bnVsbDtpZihudWxsIT09Yi5jaGlsZClzd2l0Y2goYi5jaGlsZC50YWcpe2Nhc2UgNTpjPVxuYi5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmM9Yi5jaGlsZC5zdGF0ZU5vZGV9c2goYixnLGMpfWJyZWFrO2Nhc2UgNTp2YXIgaD1iLnN0YXRlTm9kZTtpZihudWxsPT09YyYmYi5mbGFncyY0KXtjPWg7dmFyIGs9Yi5tZW1vaXplZFByb3BzO3N3aXRjaChiLnR5cGUpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ay5hdXRvRm9jdXMmJmMuZm9jdXMoKTticmVhaztjYXNlIFwiaW1nXCI6ay5zcmMmJihjLnNyYz1rLnNyYyl9fWJyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmlmKG51bGw9PT1iLm1lbW9pemVkU3RhdGUpe3ZhciBsPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1sKXt2YXIgbT1sLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PW0pe3ZhciBxPW0uZGVoeWRyYXRlZDtudWxsIT09cSYmYmQocSl9fX1icmVhaztjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMTpjYXNlIDIyOmNhc2UgMjM6Y2FzZSAyNTpicmVhaztcbmRlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9VXx8Yi5mbGFncyY1MTImJlJqKGIpfWNhdGNoKHIpe1coYixiLnJldHVybixyKX19aWYoYj09PWEpe1Y9bnVsbDticmVha31jPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47Vj1jO2JyZWFrfVY9Yi5yZXR1cm59fWZ1bmN0aW9uIGdrKGEpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYj1WO2lmKGI9PT1hKXtWPW51bGw7YnJlYWt9dmFyIGM9Yi5zaWJsaW5nO2lmKG51bGwhPT1jKXtjLnJldHVybj1iLnJldHVybjtWPWM7YnJlYWt9Vj1iLnJldHVybn19XG5mdW5jdGlvbiBqayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9Vjt0cnl7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnZhciBjPWIucmV0dXJuO3RyeXtRaig0LGIpfWNhdGNoKGspe1coYixjLGspfWJyZWFrO2Nhc2UgMTp2YXIgZD1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCl7dmFyIGU9Yi5yZXR1cm47dHJ5e2QuY29tcG9uZW50RGlkTW91bnQoKX1jYXRjaChrKXtXKGIsZSxrKX19dmFyIGY9Yi5yZXR1cm47dHJ5e1JqKGIpfWNhdGNoKGspe1coYixmLGspfWJyZWFrO2Nhc2UgNTp2YXIgZz1iLnJldHVybjt0cnl7UmooYil9Y2F0Y2goayl7VyhiLGcsayl9fX1jYXRjaChrKXtXKGIsYi5yZXR1cm4sayl9aWYoYj09PWEpe1Y9bnVsbDticmVha312YXIgaD1iLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWIucmV0dXJuO1Y9aDticmVha31WPWIucmV0dXJufX1cbnZhciBsaz1NYXRoLmNlaWwsbWs9dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixuaz11YS5SZWFjdEN1cnJlbnRPd25lcixvaz11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxLPTAsUT1udWxsLFk9bnVsbCxaPTAsZmo9MCxlaj1VZigwKSxUPTAscGs9bnVsbCxyaD0wLHFrPTAscms9MCxzaz1udWxsLHRrPW51bGwsZms9MCxHaj1JbmZpbml0eSx1az1udWxsLE9pPSExLFBpPW51bGwsUmk9bnVsbCx2az0hMSx3az1udWxsLHhrPTAseWs9MCx6az1udWxsLEFrPS0xLEJrPTA7ZnVuY3Rpb24gUigpe3JldHVybiAwIT09KEsmNik/QigpOi0xIT09QWs/QWs6QWs9QigpfVxuZnVuY3Rpb24geWkoYSl7aWYoMD09PShhLm1vZGUmMSkpcmV0dXJuIDE7aWYoMCE9PShLJjIpJiYwIT09WilyZXR1cm4gWiYtWjtpZihudWxsIT09S2cudHJhbnNpdGlvbilyZXR1cm4gMD09PUJrJiYoQms9eWMoKSksQms7YT1DO2lmKDAhPT1hKXJldHVybiBhO2E9d2luZG93LmV2ZW50O2E9dm9pZCAwPT09YT8xNjpqZChhLnR5cGUpO3JldHVybiBhfWZ1bmN0aW9uIGdpKGEsYixjLGQpe2lmKDUwPHlrKXRocm93IHlrPTAsems9bnVsbCxFcnJvcihwKDE4NSkpO0FjKGEsYyxkKTtpZigwPT09KEsmMil8fGEhPT1RKWE9PT1RJiYoMD09PShLJjIpJiYocWt8PWMpLDQ9PT1UJiZDayhhLFopKSxEayhhLGQpLDE9PT1jJiYwPT09SyYmMD09PShiLm1vZGUmMSkmJihHaj1CKCkrNTAwLGZnJiZqZygpKX1cbmZ1bmN0aW9uIERrKGEsYil7dmFyIGM9YS5jYWxsYmFja05vZGU7d2MoYSxiKTt2YXIgZD11YyhhLGE9PT1RP1o6MCk7aWYoMD09PWQpbnVsbCE9PWMmJmJjKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTA7ZWxzZSBpZihiPWQmLWQsYS5jYWxsYmFja1ByaW9yaXR5IT09Yil7bnVsbCE9YyYmYmMoYyk7aWYoMT09PWIpMD09PWEudGFnP2lnKEVrLmJpbmQobnVsbCxhKSk6aGcoRWsuYmluZChudWxsLGEpKSxKZihmdW5jdGlvbigpezA9PT0oSyY2KSYmamcoKX0pLGM9bnVsbDtlbHNle3N3aXRjaChEYyhkKSl7Y2FzZSAxOmM9ZmM7YnJlYWs7Y2FzZSA0OmM9Z2M7YnJlYWs7Y2FzZSAxNjpjPWhjO2JyZWFrO2Nhc2UgNTM2ODcwOTEyOmM9amM7YnJlYWs7ZGVmYXVsdDpjPWhjfWM9RmsoYyxHay5iaW5kKG51bGwsYSkpfWEuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gR2soYSxiKXtBaz0tMTtCaz0wO2lmKDAhPT0oSyY2KSl0aHJvdyBFcnJvcihwKDMyNykpO3ZhciBjPWEuY2FsbGJhY2tOb2RlO2lmKEhrKCkmJmEuY2FsbGJhY2tOb2RlIT09YylyZXR1cm4gbnVsbDt2YXIgZD11YyhhLGE9PT1RP1o6MCk7aWYoMD09PWQpcmV0dXJuIG51bGw7aWYoMCE9PShkJjMwKXx8MCE9PShkJmEuZXhwaXJlZExhbmVzKXx8YiliPUlrKGEsZCk7ZWxzZXtiPWQ7dmFyIGU9SztLfD0yO3ZhciBmPUprKCk7aWYoUSE9PWF8fFohPT1iKXVrPW51bGwsR2o9QigpKzUwMCxLayhhLGIpO2RvIHRyeXtMaygpO2JyZWFrfWNhdGNoKGgpe01rKGEsaCl9d2hpbGUoMSk7JGcoKTttay5jdXJyZW50PWY7Sz1lO251bGwhPT1ZP2I9MDooUT1udWxsLFo9MCxiPVQpfWlmKDAhPT1iKXsyPT09YiYmKGU9eGMoYSksMCE9PWUmJihkPWUsYj1OayhhLGUpKSk7aWYoMT09PWIpdGhyb3cgYz1wayxLayhhLDApLENrKGEsZCksRGsoYSxCKCkpLGM7aWYoNj09PWIpQ2soYSxkKTtcbmVsc2V7ZT1hLmN1cnJlbnQuYWx0ZXJuYXRlO2lmKDA9PT0oZCYzMCkmJiFPayhlKSYmKGI9SWsoYSxkKSwyPT09YiYmKGY9eGMoYSksMCE9PWYmJihkPWYsYj1OayhhLGYpKSksMT09PWIpKXRocm93IGM9cGssS2soYSwwKSxDayhhLGQpLERrKGEsQigpKSxjO2EuZmluaXNoZWRXb3JrPWU7YS5maW5pc2hlZExhbmVzPWQ7c3dpdGNoKGIpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IocCgzNDUpKTtjYXNlIDI6UGsoYSx0ayx1ayk7YnJlYWs7Y2FzZSAzOkNrKGEsZCk7aWYoKGQmMTMwMDIzNDI0KT09PWQmJihiPWZrKzUwMC1CKCksMTA8Yikpe2lmKDAhPT11YyhhLDApKWJyZWFrO2U9YS5zdXNwZW5kZWRMYW5lcztpZigoZSZkKSE9PWQpe1IoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUZmKFBrLmJpbmQobnVsbCxhLHRrLHVrKSxiKTticmVha31QayhhLHRrLHVrKTticmVhaztjYXNlIDQ6Q2soYSxkKTtpZigoZCY0MTk0MjQwKT09PVxuZClicmVhaztiPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGQ7KXt2YXIgZz0zMS1vYyhkKTtmPTE8PGc7Zz1iW2ddO2c+ZSYmKGU9Zyk7ZCY9fmZ9ZD1lO2Q9QigpLWQ7ZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpsayhkLzE5NjApKS1kO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1GZihQay5iaW5kKG51bGwsYSx0ayx1ayksZCk7YnJlYWt9UGsoYSx0ayx1ayk7YnJlYWs7Y2FzZSA1OlBrKGEsdGssdWspO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgzMjkpKTt9fX1EayhhLEIoKSk7cmV0dXJuIGEuY2FsbGJhY2tOb2RlPT09Yz9Hay5iaW5kKG51bGwsYSk6bnVsbH1cbmZ1bmN0aW9uIE5rKGEsYil7dmFyIGM9c2s7YS5jdXJyZW50Lm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYoS2soYSxiKS5mbGFnc3w9MjU2KTthPUlrKGEsYik7MiE9PWEmJihiPXRrLHRrPWMsbnVsbCE9PWImJkZqKGIpKTtyZXR1cm4gYX1mdW5jdGlvbiBGaihhKXtudWxsPT09dGs/dGs9YTp0ay5wdXNoLmFwcGx5KHRrLGEpfVxuZnVuY3Rpb24gT2soYSl7Zm9yKHZhciBiPWE7Oyl7aWYoYi5mbGFncyYxNjM4NCl7dmFyIGM9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YyYmKGM9Yy5zdG9yZXMsbnVsbCE9PWMpKWZvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCsrKXt2YXIgZT1jW2RdLGY9ZS5nZXRTbmFwc2hvdDtlPWUudmFsdWU7dHJ5e2lmKCFIZShmKCksZSkpcmV0dXJuITF9Y2F0Y2goZyl7cmV0dXJuITF9fX1jPWIuY2hpbGQ7aWYoYi5zdWJ0cmVlRmxhZ3MmMTYzODQmJm51bGwhPT1jKWMucmV0dXJuPWIsYj1jO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuITA7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4hMH1cbmZ1bmN0aW9uIENrKGEsYil7YiY9fnJrO2ImPX5xazthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLW9jKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1mdW5jdGlvbiBFayhhKXtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTtIaygpO3ZhciBiPXVjKGEsMCk7aWYoMD09PShiJjEpKXJldHVybiBEayhhLEIoKSksbnVsbDt2YXIgYz1JayhhLGIpO2lmKDAhPT1hLnRhZyYmMj09PWMpe3ZhciBkPXhjKGEpOzAhPT1kJiYoYj1kLGM9TmsoYSxkKSl9aWYoMT09PWMpdGhyb3cgYz1wayxLayhhLDApLENrKGEsYiksRGsoYSxCKCkpLGM7aWYoNj09PWMpdGhyb3cgRXJyb3IocCgzNDUpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1BrKGEsdGssdWspO0RrKGEsQigpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFFrKGEsYil7dmFyIGM9SztLfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e0s9YywwPT09SyYmKEdqPUIoKSs1MDAsZmcmJmpnKCkpfX1mdW5jdGlvbiBSayhhKXtudWxsIT09d2smJjA9PT13ay50YWcmJjA9PT0oSyY2KSYmSGsoKTt2YXIgYj1LO0t8PTE7dmFyIGM9b2sudHJhbnNpdGlvbixkPUM7dHJ5e2lmKG9rLnRyYW5zaXRpb249bnVsbCxDPTEsYSlyZXR1cm4gYSgpfWZpbmFsbHl7Qz1kLG9rLnRyYW5zaXRpb249YyxLPWIsMD09PShLJjYpJiZqZygpfX1mdW5jdGlvbiBIaigpe2ZqPWVqLmN1cnJlbnQ7RShlail9XG5mdW5jdGlvbiBLayhhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxHZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3dnKGQpO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiYkZigpO2JyZWFrO2Nhc2UgMzp6aCgpO0UoV2YpO0UoSCk7RWgoKTticmVhaztjYXNlIDU6QmgoZCk7YnJlYWs7Y2FzZSA0OnpoKCk7YnJlYWs7Y2FzZSAxMzpFKEwpO2JyZWFrO2Nhc2UgMTk6RShMKTticmVhaztjYXNlIDEwOmFoKGQudHlwZS5fY29udGV4dCk7YnJlYWs7Y2FzZSAyMjpjYXNlIDIzOkhqKCl9Yz1jLnJldHVybn1RPWE7WT1hPVBnKGEuY3VycmVudCxudWxsKTtaPWZqPWI7VD0wO3BrPW51bGw7cms9cWs9cmg9MDt0az1zaz1udWxsO2lmKG51bGwhPT1maCl7Zm9yKGI9XG4wO2I8ZmgubGVuZ3RoO2IrKylpZihjPWZoW2JdLGQ9Yy5pbnRlcmxlYXZlZCxudWxsIT09ZCl7Yy5pbnRlcmxlYXZlZD1udWxsO3ZhciBlPWQubmV4dCxmPWMucGVuZGluZztpZihudWxsIT09Zil7dmFyIGc9Zi5uZXh0O2YubmV4dD1lO2QubmV4dD1nfWMucGVuZGluZz1kfWZoPW51bGx9cmV0dXJuIGF9XG5mdW5jdGlvbiBNayhhLGIpe2Rve3ZhciBjPVk7dHJ5eyRnKCk7RmguY3VycmVudD1SaDtpZihJaCl7Zm9yKHZhciBkPU0ubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9SWg9ITF9SGg9MDtPPU49TT1udWxsO0poPSExO0toPTA7bmsuY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Q9MTtwaz1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVo7aC5mbGFnc3w9MzI3Njg7aWYobnVsbCE9PWsmJlwib2JqZWN0XCI9PT10eXBlb2YgayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsudGhlbil7dmFyIGw9ayxtPWgscT1tLnRhZztpZigwPT09KG0ubW9kZSYxKSYmKDA9PT1xfHwxMT09PXF8fDE1PT09cSkpe3ZhciByPW0uYWx0ZXJuYXRlO3I/KG0udXBkYXRlUXVldWU9ci51cGRhdGVRdWV1ZSxtLm1lbW9pemVkU3RhdGU9ci5tZW1vaXplZFN0YXRlLFxubS5sYW5lcz1yLmxhbmVzKToobS51cGRhdGVRdWV1ZT1udWxsLG0ubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgeT1VaShnKTtpZihudWxsIT09eSl7eS5mbGFncyY9LTI1NztWaSh5LGcsaCxmLGIpO3kubW9kZSYxJiZTaShmLGwsYik7Yj15O2s9bDt2YXIgbj1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1uKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO2IudXBkYXRlUXVldWU9dH1lbHNlIG4uYWRkKGspO2JyZWFrIGF9ZWxzZXtpZigwPT09KGImMSkpe1NpKGYsbCxiKTt0aigpO2JyZWFrIGF9az1FcnJvcihwKDQyNikpfX1lbHNlIGlmKEkmJmgubW9kZSYxKXt2YXIgSj1VaShnKTtpZihudWxsIT09Sil7MD09PShKLmZsYWdzJjY1NTM2KSYmKEouZmxhZ3N8PTI1Nik7VmkoSixnLGgsZixiKTtKZyhKaShrLGgpKTticmVhayBhfX1mPWs9SmkoayxoKTs0IT09VCYmKFQ9Mik7bnVsbD09PXNrP3NrPVtmXTpzay5wdXNoKGYpO2Y9Zztkb3tzd2l0Y2goZi50YWcpe2Nhc2UgMzpmLmZsYWdzfD02NTUzNjtcbmImPS1iO2YubGFuZXN8PWI7dmFyIHg9TmkoZixrLGIpO3BoKGYseCk7YnJlYWsgYTtjYXNlIDE6aD1rO3ZhciB3PWYudHlwZSx1PWYuc3RhdGVOb2RlO2lmKDA9PT0oZi5mbGFncyYxMjgpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHUuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Uml8fCFSaS5oYXModSkpKSl7Zi5mbGFnc3w9NjU1MzY7YiY9LWI7Zi5sYW5lc3w9Yjt2YXIgRj1RaShmLGgsYik7cGgoZixGKTticmVhayBhfX1mPWYucmV0dXJufXdoaWxlKG51bGwhPT1mKX1TayhjKX1jYXRjaChuYSl7Yj1uYTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfWZ1bmN0aW9uIEprKCl7dmFyIGE9bWsuY3VycmVudDttay5jdXJyZW50PVJoO3JldHVybiBudWxsPT09YT9SaDphfVxuZnVuY3Rpb24gdGooKXtpZigwPT09VHx8Mz09PVR8fDI9PT1UKVQ9NDtudWxsPT09UXx8MD09PShyaCYyNjg0MzU0NTUpJiYwPT09KHFrJjI2ODQzNTQ1NSl8fENrKFEsWil9ZnVuY3Rpb24gSWsoYSxiKXt2YXIgYz1LO0t8PTI7dmFyIGQ9SmsoKTtpZihRIT09YXx8WiE9PWIpdWs9bnVsbCxLayhhLGIpO2RvIHRyeXtUaygpO2JyZWFrfWNhdGNoKGUpe01rKGEsZSl9d2hpbGUoMSk7JGcoKTtLPWM7bWsuY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHAoMjYxKSk7UT1udWxsO1o9MDtyZXR1cm4gVH1mdW5jdGlvbiBUaygpe2Zvcig7bnVsbCE9PVk7KVVrKFkpfWZ1bmN0aW9uIExrKCl7Zm9yKDtudWxsIT09WSYmIWNjKCk7KVVrKFkpfWZ1bmN0aW9uIFVrKGEpe3ZhciBiPVZrKGEuYWx0ZXJuYXRlLGEsZmopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9TayhhKTpZPWI7bmsuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gU2soYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYzMjc2OCkpe2lmKGM9RWooYyxiLGZqKSxudWxsIT09Yyl7WT1jO3JldHVybn19ZWxzZXtjPUlqKGMsYik7aWYobnVsbCE9PWMpe2MuZmxhZ3MmPTMyNzY3O1k9YztyZXR1cm59aWYobnVsbCE9PWEpYS5mbGFnc3w9MzI3NjgsYS5zdWJ0cmVlRmxhZ3M9MCxhLmRlbGV0aW9ucz1udWxsO2Vsc2V7VD02O1k9bnVsbDtyZXR1cm59fWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09VCYmKFQ9NSl9ZnVuY3Rpb24gUGsoYSxiLGMpe3ZhciBkPUMsZT1vay50cmFuc2l0aW9uO3RyeXtvay50cmFuc2l0aW9uPW51bGwsQz0xLFdrKGEsYixjLGQpfWZpbmFsbHl7b2sudHJhbnNpdGlvbj1lLEM9ZH1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFdrKGEsYixjLGQpe2RvIEhrKCk7d2hpbGUobnVsbCE9PXdrKTtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTtjPWEuZmluaXNoZWRXb3JrO3ZhciBlPWEuZmluaXNoZWRMYW5lcztpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IocCgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tQcmlvcml0eT0wO3ZhciBmPWMubGFuZXN8Yy5jaGlsZExhbmVzO0JjKGEsZik7YT09PVEmJihZPVE9bnVsbCxaPTApOzA9PT0oYy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJjA9PT0oYy5mbGFncyYyMDY0KXx8dmt8fCh2az0hMCxGayhoYyxmdW5jdGlvbigpe0hrKCk7cmV0dXJuIG51bGx9KSk7Zj0wIT09KGMuZmxhZ3MmMTU5OTApO2lmKDAhPT0oYy5zdWJ0cmVlRmxhZ3MmMTU5OTApfHxmKXtmPW9rLnRyYW5zaXRpb247b2sudHJhbnNpdGlvbj1udWxsO1xudmFyIGc9QztDPTE7dmFyIGg9SztLfD00O25rLmN1cnJlbnQ9bnVsbDtPaihhLGMpO2RrKGMsYSk7T2UoRGYpO2RkPSEhQ2Y7RGY9Q2Y9bnVsbDthLmN1cnJlbnQ9YztoayhjLGEsZSk7ZGMoKTtLPWg7Qz1nO29rLnRyYW5zaXRpb249Zn1lbHNlIGEuY3VycmVudD1jO3ZrJiYodms9ITEsd2s9YSx4az1lKTtmPWEucGVuZGluZ0xhbmVzOzA9PT1mJiYoUmk9bnVsbCk7bWMoYy5zdGF0ZU5vZGUsZCk7RGsoYSxCKCkpO2lmKG51bGwhPT1iKWZvcihkPWEub25SZWNvdmVyYWJsZUVycm9yLGM9MDtjPGIubGVuZ3RoO2MrKyllPWJbY10sZChlLnZhbHVlLHtjb21wb25lbnRTdGFjazplLnN0YWNrLGRpZ2VzdDplLmRpZ2VzdH0pO2lmKE9pKXRocm93IE9pPSExLGE9UGksUGk9bnVsbCxhOzAhPT0oeGsmMSkmJjAhPT1hLnRhZyYmSGsoKTtmPWEucGVuZGluZ0xhbmVzOzAhPT0oZiYxKT9hPT09ems/eWsrKzooeWs9MCx6az1hKTp5az0wO2pnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBIaygpe2lmKG51bGwhPT13ayl7dmFyIGE9RGMoeGspLGI9b2sudHJhbnNpdGlvbixjPUM7dHJ5e29rLnRyYW5zaXRpb249bnVsbDtDPTE2PmE/MTY6YTtpZihudWxsPT09d2spdmFyIGQ9ITE7ZWxzZXthPXdrO3drPW51bGw7eGs9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMzEpKTt2YXIgZT1LO0t8PTQ7Zm9yKFY9YS5jdXJyZW50O251bGwhPT1WOyl7dmFyIGY9VixnPWYuY2hpbGQ7aWYoMCE9PShWLmZsYWdzJjE2KSl7dmFyIGg9Zi5kZWxldGlvbnM7aWYobnVsbCE9PWgpe2Zvcih2YXIgaz0wO2s8aC5sZW5ndGg7aysrKXt2YXIgbD1oW2tdO2ZvcihWPWw7bnVsbCE9PVY7KXt2YXIgbT1WO3N3aXRjaChtLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpQaig4LG0sZil9dmFyIHE9bS5jaGlsZDtpZihudWxsIT09cSlxLnJldHVybj1tLFY9cTtlbHNlIGZvcig7bnVsbCE9PVY7KXttPVY7dmFyIHI9bS5zaWJsaW5nLHk9bS5yZXR1cm47U2oobSk7aWYobT09PVxubCl7Vj1udWxsO2JyZWFrfWlmKG51bGwhPT1yKXtyLnJldHVybj15O1Y9cjticmVha31WPXl9fX12YXIgbj1mLmFsdGVybmF0ZTtpZihudWxsIT09bil7dmFyIHQ9bi5jaGlsZDtpZihudWxsIT09dCl7bi5jaGlsZD1udWxsO2Rve3ZhciBKPXQuc2libGluZzt0LnNpYmxpbmc9bnVsbDt0PUp9d2hpbGUobnVsbCE9PXQpfX1WPWZ9fWlmKDAhPT0oZi5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1nKWcucmV0dXJuPWYsVj1nO2Vsc2UgYjpmb3IoO251bGwhPT1WOyl7Zj1WO2lmKDAhPT0oZi5mbGFncyYyMDQ4KSlzd2l0Y2goZi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UGooOSxmLGYucmV0dXJuKX12YXIgeD1mLnNpYmxpbmc7aWYobnVsbCE9PXgpe3gucmV0dXJuPWYucmV0dXJuO1Y9eDticmVhayBifVY9Zi5yZXR1cm59fXZhciB3PWEuY3VycmVudDtmb3IoVj13O251bGwhPT1WOyl7Zz1WO3ZhciB1PWcuY2hpbGQ7aWYoMCE9PShnLnN1YnRyZWVGbGFncyYyMDY0KSYmbnVsbCE9PVxudSl1LnJldHVybj1nLFY9dTtlbHNlIGI6Zm9yKGc9dztudWxsIT09Vjspe2g9VjtpZigwIT09KGguZmxhZ3MmMjA0OCkpdHJ5e3N3aXRjaChoLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpRaig5LGgpfX1jYXRjaChuYSl7VyhoLGgucmV0dXJuLG5hKX1pZihoPT09Zyl7Vj1udWxsO2JyZWFrIGJ9dmFyIEY9aC5zaWJsaW5nO2lmKG51bGwhPT1GKXtGLnJldHVybj1oLnJldHVybjtWPUY7YnJlYWsgYn1WPWgucmV0dXJufX1LPWU7amcoKTtpZihsYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGxjLm9uUG9zdENvbW1pdEZpYmVyUm9vdCl0cnl7bGMub25Qb3N0Q29tbWl0RmliZXJSb290KGtjLGEpfWNhdGNoKG5hKXt9ZD0hMH1yZXR1cm4gZH1maW5hbGx5e0M9Yyxvay50cmFuc2l0aW9uPWJ9fXJldHVybiExfWZ1bmN0aW9uIFhrKGEsYixjKXtiPUppKGMsYik7Yj1OaShhLGIsMSk7YT1uaChhLGIsMSk7Yj1SKCk7bnVsbCE9PWEmJihBYyhhLDEsYiksRGsoYSxiKSl9XG5mdW5jdGlvbiBXKGEsYixjKXtpZigzPT09YS50YWcpWGsoYSxhLGMpO2Vsc2UgZm9yKDtudWxsIT09Yjspe2lmKDM9PT1iLnRhZyl7WGsoYixhLGMpO2JyZWFrfWVsc2UgaWYoMT09PWIudGFnKXt2YXIgZD1iLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Uml8fCFSaS5oYXMoZCkpKXthPUppKGMsYSk7YT1RaShiLGEsMSk7Yj1uaChiLGEsMSk7YT1SKCk7bnVsbCE9PWImJihBYyhiLDEsYSksRGsoYixhKSk7YnJlYWt9fWI9Yi5yZXR1cm59fVxuZnVuY3Rpb24gVGkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPVIoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmM7UT09PWEmJihaJmMpPT09YyYmKDQ9PT1UfHwzPT09VCYmKFomMTMwMDIzNDI0KT09PVomJjUwMD5CKCktZms/S2soYSwwKTpya3w9Yyk7RGsoYSxiKX1mdW5jdGlvbiBZayhhLGIpezA9PT1iJiYoMD09PShhLm1vZGUmMSk/Yj0xOihiPXNjLHNjPDw9MSwwPT09KHNjJjEzMDAyMzQyNCkmJihzYz00MTk0MzA0KSkpO3ZhciBjPVIoKTthPWloKGEsYik7bnVsbCE9PWEmJihBYyhhLGIsYyksRGsoYSxjKSl9ZnVuY3Rpb24gdWooYSl7dmFyIGI9YS5tZW1vaXplZFN0YXRlLGM9MDtudWxsIT09YiYmKGM9Yi5yZXRyeUxhbmUpO1lrKGEsYyl9XG5mdW5jdGlvbiBiayhhLGIpe3ZhciBjPTA7c3dpdGNoKGEudGFnKXtjYXNlIDEzOnZhciBkPWEuc3RhdGVOb2RlO3ZhciBlPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGM9ZS5yZXRyeUxhbmUpO2JyZWFrO2Nhc2UgMTk6ZD1hLnN0YXRlTm9kZTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzE0KSk7fW51bGwhPT1kJiZkLmRlbGV0ZShiKTtZayhhLGMpfXZhciBWaztcblZrPWZ1bmN0aW9uKGEsYixjKXtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8V2YuY3VycmVudClkaD0hMDtlbHNle2lmKDA9PT0oYS5sYW5lcyZjKSYmMD09PShiLmZsYWdzJjEyOCkpcmV0dXJuIGRoPSExLHlqKGEsYixjKTtkaD0wIT09KGEuZmxhZ3MmMTMxMDcyKT8hMDohMX1lbHNlIGRoPSExLEkmJjAhPT0oYi5mbGFncyYxMDQ4NTc2KSYmdWcoYixuZyxiLmluZGV4KTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6dmFyIGQ9Yi50eXBlO2lqKGEsYik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1ZZihiLEguY3VycmVudCk7Y2goYixjKTtlPU5oKG51bGwsYixkLGEsZSxjKTt2YXIgZj1TaCgpO2IuZmxhZ3N8PTE7XCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mPyhiLnRhZz0xLGIubWVtb2l6ZWRTdGF0ZT1udWxsLGIudXBkYXRlUXVldWU9XG5udWxsLFpmKGQpPyhmPSEwLGNnKGIpKTpmPSExLGIubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGwsa2goYiksZS51cGRhdGVyPUVpLGIuc3RhdGVOb2RlPWUsZS5fcmVhY3RJbnRlcm5hbHM9YixJaShiLGQsYSxjKSxiPWpqKG51bGwsYixkLCEwLGYsYykpOihiLnRhZz0wLEkmJmYmJnZnKGIpLFhpKG51bGwsYixlLGMpLGI9Yi5jaGlsZCk7cmV0dXJuIGI7Y2FzZSAxNjpkPWIuZWxlbWVudFR5cGU7YTp7aWooYSxiKTthPWIucGVuZGluZ1Byb3BzO2U9ZC5faW5pdDtkPWUoZC5fcGF5bG9hZCk7Yi50eXBlPWQ7ZT1iLnRhZz1aayhkKTthPUNpKGQsYSk7c3dpdGNoKGUpe2Nhc2UgMDpiPWNqKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1oaihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVlpKG51bGwsYixkLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9JGkobnVsbCxiLGQsQ2koZC50eXBlLGEpLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IocCgzMDYsXG5kLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpDaShkLGUpLGNqKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpDaShkLGUpLGhqKGEsYixkLGUsYyk7Y2FzZSAzOmE6e2tqKGIpO2lmKG51bGw9PT1hKXRocm93IEVycm9yKHAoMzg3KSk7ZD1iLnBlbmRpbmdQcm9wcztmPWIubWVtb2l6ZWRTdGF0ZTtlPWYuZWxlbWVudDtsaChhLGIpO3FoKGIsZCxudWxsLGMpO3ZhciBnPWIubWVtb2l6ZWRTdGF0ZTtkPWcuZWxlbWVudDtpZihmLmlzRGVoeWRyYXRlZClpZihmPXtlbGVtZW50OmQsaXNEZWh5ZHJhdGVkOiExLGNhY2hlOmcuY2FjaGUscGVuZGluZ1N1c3BlbnNlQm91bmRhcmllczpnLnBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXMsdHJhbnNpdGlvbnM6Zy50cmFuc2l0aW9uc30sYi51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9XG5mLGIubWVtb2l6ZWRTdGF0ZT1mLGIuZmxhZ3MmMjU2KXtlPUppKEVycm9yKHAoNDIzKSksYik7Yj1saihhLGIsZCxjLGUpO2JyZWFrIGF9ZWxzZSBpZihkIT09ZSl7ZT1KaShFcnJvcihwKDQyNCkpLGIpO2I9bGooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgZm9yKHlnPUxmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCkseGc9YixJPSEwLHpnPW51bGwsYz1WZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5mbGFncz1jLmZsYWdzJi0zfDQwOTYsYz1jLnNpYmxpbmc7ZWxzZXtJZygpO2lmKGQ9PT1lKXtiPVppKGEsYixjKTticmVhayBhfVhpKGEsYixkLGMpfWI9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIEFoKGIpLG51bGw9PT1hJiZFZyhiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLEVmKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZFZihkLGYpJiYoYi5mbGFnc3w9MzIpLFxuZ2ooYSxiKSxYaShhLGIsZyxjKSxiLmNoaWxkO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJkVnKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gb2ooYSxiLGMpO2Nhc2UgNDpyZXR1cm4geWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9VWcoYixudWxsLGQsYyk6WGkoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpDaShkLGUpLFlpKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBYaShhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFhpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFhpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztmPWIubWVtb2l6ZWRQcm9wcztcbmc9ZS52YWx1ZTtHKFdnLGQuX2N1cnJlbnRWYWx1ZSk7ZC5fY3VycmVudFZhbHVlPWc7aWYobnVsbCE9PWYpaWYoSGUoZi52YWx1ZSxnKSl7aWYoZi5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFXZi5jdXJyZW50KXtiPVppKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihmPWIuY2hpbGQsbnVsbCE9PWYmJihmLnJldHVybj1iKTtudWxsIT09Zjspe3ZhciBoPWYuZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1oKXtnPWYuY2hpbGQ7Zm9yKHZhciBrPWguZmlyc3RDb250ZXh0O251bGwhPT1rOyl7aWYoay5jb250ZXh0PT09ZCl7aWYoMT09PWYudGFnKXtrPW1oKC0xLGMmLWMpO2sudGFnPTI7dmFyIGw9Zi51cGRhdGVRdWV1ZTtpZihudWxsIT09bCl7bD1sLnNoYXJlZDt2YXIgbT1sLnBlbmRpbmc7bnVsbD09PW0/ay5uZXh0PWs6KGsubmV4dD1tLm5leHQsbS5uZXh0PWspO2wucGVuZGluZz1rfX1mLmxhbmVzfD1jO2s9Zi5hbHRlcm5hdGU7bnVsbCE9PWsmJihrLmxhbmVzfD1jKTtiaChmLnJldHVybixcbmMsYik7aC5sYW5lc3w9YzticmVha31rPWsubmV4dH19ZWxzZSBpZigxMD09PWYudGFnKWc9Zi50eXBlPT09Yi50eXBlP251bGw6Zi5jaGlsZDtlbHNlIGlmKDE4PT09Zi50YWcpe2c9Zi5yZXR1cm47aWYobnVsbD09PWcpdGhyb3cgRXJyb3IocCgzNDEpKTtnLmxhbmVzfD1jO2g9Zy5hbHRlcm5hdGU7bnVsbCE9PWgmJihoLmxhbmVzfD1jKTtiaChnLGMsYik7Zz1mLnNpYmxpbmd9ZWxzZSBnPWYuY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49ZjtlbHNlIGZvcihnPWY7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWY9Zy5zaWJsaW5nO2lmKG51bGwhPT1mKXtmLnJldHVybj1nLnJldHVybjtnPWY7YnJlYWt9Zz1nLnJldHVybn1mPWd9WGkoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZD1iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjaChiLGMpLGU9ZWgoZSksZD1kKGUpLGIuZmxhZ3N8PTEsWGkoYSxiLGQsYyksXG5iLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGQ9Yi50eXBlLGU9Q2koZCxiLnBlbmRpbmdQcm9wcyksZT1DaShkLnR5cGUsZSksJGkoYSxiLGQsZSxjKTtjYXNlIDE1OnJldHVybiBiaihhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkNpKGQsZSksaWooYSxiKSxiLnRhZz0xLFpmKGQpPyhhPSEwLGNnKGIpKTphPSExLGNoKGIsYyksR2koYixkLGUpLElpKGIsZCxlLGMpLGpqKG51bGwsYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4geGooYSxiLGMpO2Nhc2UgMjI6cmV0dXJuIGRqKGEsYixjKX10aHJvdyBFcnJvcihwKDE1NixiLnRhZykpO307ZnVuY3Rpb24gRmsoYSxiKXtyZXR1cm4gYWMoYSxiKX1cbmZ1bmN0aW9uICRrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5zdWJ0cmVlRmxhZ3M9dGhpcy5mbGFncz0wO3RoaXMuZGVsZXRpb25zPW51bGw7dGhpcy5jaGlsZExhbmVzPXRoaXMubGFuZXM9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIEJnKGEsYixjLGQpe3JldHVybiBuZXcgJGsoYSxiLGMsZCl9ZnVuY3Rpb24gYWooYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIFprKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhaihhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09RGEpcmV0dXJuIDExO2lmKGE9PT1HYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBQZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPUJnKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMudHlwZT1hLnR5cGUsYy5mbGFncz0wLGMuc3VidHJlZUZsYWdzPTAsYy5kZWxldGlvbnM9bnVsbCk7Yy5mbGFncz1hLmZsYWdzJjE0NjgwMDY0O2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBSZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYWooYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuIFRnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgemE6Zz04O2V8PTg7YnJlYWs7Y2FzZSBBYTpyZXR1cm4gYT1CZygxMixjLGIsZXwyKSxhLmVsZW1lbnRUeXBlPUFhLGEubGFuZXM9ZixhO2Nhc2UgRWE6cmV0dXJuIGE9QmcoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9RWEsYS5sYW5lcz1mLGE7Y2FzZSBGYTpyZXR1cm4gYT1CZygxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1GYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiBwaihjLGUsZixiKTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQmE6Zz0xMDticmVhayBhO2Nhc2UgQ2E6Zz05O2JyZWFrIGE7Y2FzZSBEYTpnPTExO1xuYnJlYWsgYTtjYXNlIEdhOmc9MTQ7YnJlYWsgYTtjYXNlIEhhOmc9MTY7ZD1udWxsO2JyZWFrIGF9dGhyb3cgRXJyb3IocCgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1CZyhnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5sYW5lcz1mO3JldHVybiBifWZ1bmN0aW9uIFRnKGEsYixjLGQpe2E9QmcoNyxhLGQsYik7YS5sYW5lcz1jO3JldHVybiBhfWZ1bmN0aW9uIHBqKGEsYixjLGQpe2E9QmcoMjIsYSxkLGIpO2EuZWxlbWVudFR5cGU9SWE7YS5sYW5lcz1jO2Euc3RhdGVOb2RlPXtpc0hpZGRlbjohMX07cmV0dXJuIGF9ZnVuY3Rpb24gUWcoYSxiLGMpe2E9QmcoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gU2coYSxiLGMpe2I9QmcoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhbChhLGIsYyxkLGUpe3RoaXMudGFnPWI7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5maW5pc2hlZFdvcms9dGhpcy5waW5nQ2FjaGU9dGhpcy5jdXJyZW50PXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMuY2FsbGJhY2tOb2RlPXRoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPXpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPXpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPXpjKDApO3RoaXMuaWRlbnRpZmllclByZWZpeD1kO3RoaXMub25SZWNvdmVyYWJsZUVycm9yPWU7dGhpcy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVxubnVsbH1mdW5jdGlvbiBibChhLGIsYyxkLGUsZixnLGgsayl7YT1uZXcgYWwoYSxiLGMsaCxrKTsxPT09Yj8oYj0xLCEwPT09ZiYmKGJ8PTgpKTpiPTA7Zj1CZygzLG51bGwsbnVsbCxiKTthLmN1cnJlbnQ9ZjtmLnN0YXRlTm9kZT1hO2YubWVtb2l6ZWRTdGF0ZT17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDpjLGNhY2hlOm51bGwsdHJhbnNpdGlvbnM6bnVsbCxwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzOm51bGx9O2toKGYpO3JldHVybiBhfWZ1bmN0aW9uIGNsKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6d2Esa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBkbChhKXtpZighYSlyZXR1cm4gVmY7YT1hLl9yZWFjdEludGVybmFsczthOntpZihWYihhKSE9PWF8fDEhPT1hLnRhZyl0aHJvdyBFcnJvcihwKDE3MCkpO3ZhciBiPWE7ZG97c3dpdGNoKGIudGFnKXtjYXNlIDM6Yj1iLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGE7Y2FzZSAxOmlmKFpmKGIudHlwZSkpe2I9Yi5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYX19Yj1iLnJldHVybn13aGlsZShudWxsIT09Yik7dGhyb3cgRXJyb3IocCgxNzEpKTt9aWYoMT09PWEudGFnKXt2YXIgYz1hLnR5cGU7aWYoWmYoYykpcmV0dXJuIGJnKGEsYyxiKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGVsKGEsYixjLGQsZSxmLGcsaCxrKXthPWJsKGMsZCwhMCxhLGUsZixnLGgsayk7YS5jb250ZXh0PWRsKG51bGwpO2M9YS5jdXJyZW50O2Q9UigpO2U9eWkoYyk7Zj1taChkLGUpO2YuY2FsbGJhY2s9dm9pZCAwIT09YiYmbnVsbCE9PWI/YjpudWxsO25oKGMsZixlKTthLmN1cnJlbnQubGFuZXM9ZTtBYyhhLGUsZCk7RGsoYSxkKTtyZXR1cm4gYX1mdW5jdGlvbiBmbChhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1SKCksZz15aShlKTtjPWRsKGMpO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9bWgoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7YT1uaChlLGIsZyk7bnVsbCE9PWEmJihnaShhLGUsZyxmKSxvaChhLGUsZykpO3JldHVybiBnfVxuZnVuY3Rpb24gZ2woYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBobChhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gaWwoYSxiKXtobChhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmaGwoYSxiKX1mdW5jdGlvbiBqbCgpe3JldHVybiBudWxsfXZhciBrbD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVwb3J0RXJyb3I/cmVwb3J0RXJyb3I6ZnVuY3Rpb24oYSl7Y29uc29sZS5lcnJvcihhKX07ZnVuY3Rpb24gbGwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5tbC5wcm90b3R5cGUucmVuZGVyPWxsLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290O2lmKG51bGw9PT1iKXRocm93IEVycm9yKHAoNDA5KSk7ZmwoYSxiLG51bGwsbnVsbCl9O21sLnByb3RvdHlwZS51bm1vdW50PWxsLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290O2lmKG51bGwhPT1hKXt0aGlzLl9pbnRlcm5hbFJvb3Q9bnVsbDt2YXIgYj1hLmNvbnRhaW5lckluZm87UmsoZnVuY3Rpb24oKXtmbChudWxsLGEsbnVsbCxudWxsKX0pO2JbdWZdPW51bGx9fTtmdW5jdGlvbiBtbChhKXt0aGlzLl9pbnRlcm5hbFJvb3Q9YX1cbm1sLnByb3RvdHlwZS51bnN0YWJsZV9zY2hlZHVsZUh5ZHJhdGlvbj1mdW5jdGlvbihhKXtpZihhKXt2YXIgYj1IYygpO2E9e2Jsb2NrZWRPbjpudWxsLHRhcmdldDphLHByaW9yaXR5OmJ9O2Zvcih2YXIgYz0wO2M8UWMubGVuZ3RoJiYwIT09YiYmYjxRY1tjXS5wcmlvcml0eTtjKyspO1FjLnNwbGljZShjLDAsYSk7MD09PWMmJlZjKGEpfX07ZnVuY3Rpb24gbmwoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUpfWZ1bmN0aW9uIG9sKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBwbCgpe31cbmZ1bmN0aW9uIHFsKGEsYixjLGQsZSl7aWYoZSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBmPWQ7ZD1mdW5jdGlvbigpe3ZhciBhPWdsKGcpO2YuY2FsbChhKX19dmFyIGc9ZWwoYixkLGEsMCxudWxsLCExLCExLFwiXCIscGwpO2EuX3JlYWN0Um9vdENvbnRhaW5lcj1nO2FbdWZdPWcuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7UmsoKTtyZXR1cm4gZ31mb3IoO2U9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoZSk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBoPWQ7ZD1mdW5jdGlvbigpe3ZhciBhPWdsKGspO2guY2FsbChhKX19dmFyIGs9YmwoYSwwLCExLG51bGwsbnVsbCwhMSwhMSxcIlwiLHBsKTthLl9yZWFjdFJvb3RDb250YWluZXI9azthW3VmXT1rLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO1JrKGZ1bmN0aW9uKCl7ZmwoYixrLGMsZCl9KTtyZXR1cm4ga31cbmZ1bmN0aW9uIHJsKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWY7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWdsKGcpO2guY2FsbChhKX19ZmwoYixnLGEsZSl9ZWxzZSBnPXFsKGMsYixhLGUsZCk7cmV0dXJuIGdsKGcpfUVjPWZ1bmN0aW9uKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAzOnZhciBiPWEuc3RhdGVOb2RlO2lmKGIuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7dmFyIGM9dGMoYi5wZW5kaW5nTGFuZXMpOzAhPT1jJiYoQ2MoYixjfDEpLERrKGIsQigpKSwwPT09KEsmNikmJihHaj1CKCkrNTAwLGpnKCkpKX1icmVhaztjYXNlIDEzOlJrKGZ1bmN0aW9uKCl7dmFyIGI9aWgoYSwxKTtpZihudWxsIT09Yil7dmFyIGM9UigpO2dpKGIsYSwxLGMpfX0pLGlsKGEsMSl9fTtcbkZjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWloKGEsMTM0MjE3NzI4KTtpZihudWxsIT09Yil7dmFyIGM9UigpO2dpKGIsYSwxMzQyMTc3MjgsYyl9aWwoYSwxMzQyMTc3MjgpfX07R2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9eWkoYSksYz1paChhLGIpO2lmKG51bGwhPT1jKXt2YXIgZD1SKCk7Z2koYyxhLGIsZCl9aWwoYSxiKX19O0hjPWZ1bmN0aW9uKCl7cmV0dXJuIEN9O0ljPWZ1bmN0aW9uKGEsYil7dmFyIGM9Qzt0cnl7cmV0dXJuIEM9YSxiKCl9ZmluYWxseXtDPWN9fTtcbnliPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6YmIoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPURiKGQpO2lmKCFlKXRocm93IEVycm9yKHAoOTApKTtXYShkKTtiYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWIoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZiKGEsISFjLm11bHRpcGxlLGIsITEpfX07R2I9UWs7SGI9Ums7XG52YXIgc2w9e3VzaW5nQ2xpZW50RW50cnlQb2ludDohMSxFdmVudHM6W0NiLHVlLERiLEViLEZiLFFrXX0sdGw9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOldjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTguMy4xXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB1bD17YnVuZGxlVHlwZTp0bC5idW5kbGVUeXBlLHZlcnNpb246dGwudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOnRsLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6dGwucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldEVycm9ySGFuZGxlcjpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPVpiKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp0bC5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5qbCxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsLHJlY29uY2lsZXJWZXJzaW9uOlwiMTguMy4xLW5leHQtZjEzMzhmODA4MC0yMDI0MDQyNlwifTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHZsPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighdmwuaXNEaXNhYmxlZCYmdmwuc3VwcG9ydHNGaWJlcil0cnl7a2M9dmwuaW5qZWN0KHVsKSxsYz12bH1jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9c2w7XG5leHBvcnRzLmNyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFubChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBjbChhLGIsbnVsbCxjKX07ZXhwb3J0cy5jcmVhdGVSb290PWZ1bmN0aW9uKGEsYil7aWYoIW5sKGEpKXRocm93IEVycm9yKHAoMjk5KSk7dmFyIGM9ITEsZD1cIlwiLGU9a2w7bnVsbCE9PWImJnZvaWQgMCE9PWImJighMD09PWIudW5zdGFibGVfc3RyaWN0TW9kZSYmKGM9ITApLHZvaWQgMCE9PWIuaWRlbnRpZmllclByZWZpeCYmKGQ9Yi5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1iLm9uUmVjb3ZlcmFibGVFcnJvciYmKGU9Yi5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWJsKGEsMSwhMSxudWxsLG51bGwsYywhMSxkLGUpO2FbdWZdPWIuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7cmV0dXJuIG5ldyBsbChiKX07XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHAoMTg4KSk7YT1PYmplY3Qua2V5cyhhKS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihwKDI2OCxhKSk7fWE9WmIoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhKXtyZXR1cm4gUmsoYSl9O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIW9sKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHJsKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMuaHlkcmF0ZVJvb3Q9ZnVuY3Rpb24oYSxiLGMpe2lmKCFubChhKSl0aHJvdyBFcnJvcihwKDQwNSkpO3ZhciBkPW51bGwhPWMmJmMuaHlkcmF0ZWRTb3VyY2VzfHxudWxsLGU9ITEsZj1cIlwiLGc9a2w7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJighMD09PWMudW5zdGFibGVfc3RyaWN0TW9kZSYmKGU9ITApLHZvaWQgMCE9PWMuaWRlbnRpZmllclByZWZpeCYmKGY9Yy5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1jLm9uUmVjb3ZlcmFibGVFcnJvciYmKGc9Yy5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWVsKGIsbnVsbCxhLDEsbnVsbCE9Yz9jOm51bGwsZSwhMSxmLGcpO2FbdWZdPWIuY3VycmVudDtzZihhKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspYz1kW2FdLGU9Yy5fZ2V0VmVyc2lvbixlPWUoYy5fc291cmNlKSxudWxsPT1iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtjLGVdOmIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGMsXG5lKTtyZXR1cm4gbmV3IG1sKGIpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIW9sKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHJsKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIW9sKGEpKXRocm93IEVycm9yKHAoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhSayhmdW5jdGlvbigpe3JsKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt1Zl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVFrO1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighb2woYykpdGhyb3cgRXJyb3IocCgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcihwKDM4KSk7cmV0dXJuIHJsKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxOC4zLjEtbmV4dC1mMTMzOGY4MDgwLTIwMjQwNDI2XCI7XG4iLCIvKlxuICogbGFuZ3VhZ2VzIHdpdGggZXhpc3RpbmcgdGVzc2VyYWN0IHRyYWluZWRkYXRhXG4gKiBodHRwczovL3Rlc3NlcmFjdC1vY3IuZ2l0aHViLmlvL3Rlc3Nkb2MvRGF0YS1GaWxlcyNkYXRhLWZpbGVzLWZvci12ZXJzaW9uLTQwMC1ub3ZlbWJlci0yOS0yMDE2XG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBMYW5ndWFnZXNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBBRlIgQWZyaWthYW5zXG4gKiBAcHJvcGVydHkge3N0cmluZ30gQU1IIEFtaGFyaWNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBBUkEgQXJhYmljXG4gKiBAcHJvcGVydHkge3N0cmluZ30gQVNNIEFzc2FtZXNlXG4gKiBAcHJvcGVydHkge3N0cmluZ30gQVpFIEF6ZXJiYWlqYW5pXG4gKiBAcHJvcGVydHkge3N0cmluZ30gQVpFX0NZUkwgQXplcmJhaWphbmkgLSBDeXJpbGxpY1xuICogQHByb3BlcnR5IHtzdHJpbmd9IEJFTCBCZWxhcnVzaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gQkVOIEJlbmdhbGlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBCT0QgVGliZXRhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IEJPUyBCb3NuaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gQlVMIEJ1bGdhcmlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IENBVCBDYXRhbGFuOyBWYWxlbmNpYW5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBDRUIgQ2VidWFub1xuICogQHByb3BlcnR5IHtzdHJpbmd9IENFUyBDemVjaFxuICogQHByb3BlcnR5IHtzdHJpbmd9IENISV9TSU0gQ2hpbmVzZSAtIFNpbXBsaWZpZWRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBDSElfVFJBIENoaW5lc2UgLSBUcmFkaXRpb25hbFxuICogQHByb3BlcnR5IHtzdHJpbmd9IENIUiBDaGVyb2tlZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IENZTSBXZWxzaFxuICogQHByb3BlcnR5IHtzdHJpbmd9IERBTiBEYW5pc2hcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBERVUgR2VybWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gRFpPIER6b25na2hhXG4gKiBAcHJvcGVydHkge3N0cmluZ30gRUxMIEdyZWVrLCBNb2Rlcm4gKDE0NTMtKVxuICogQHByb3BlcnR5IHtzdHJpbmd9IEVORyBFbmdsaXNoXG4gKiBAcHJvcGVydHkge3N0cmluZ30gRU5NIEVuZ2xpc2gsIE1pZGRsZSAoMTEwMC0xNTAwKVxuICogQHByb3BlcnR5IHtzdHJpbmd9IEVQTyBFc3BlcmFudG9cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBFU1QgRXN0b25pYW5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBFVVMgQmFzcXVlXG4gKiBAcHJvcGVydHkge3N0cmluZ30gRkFTIFBlcnNpYW5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBGSU4gRmlubmlzaFxuICogQHByb3BlcnR5IHtzdHJpbmd9IEZSQSBGcmVuY2hcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBGUksgR2VybWFuIEZyYWt0dXJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBGUk0gRnJlbmNoLCBNaWRkbGUgKGNhLiAxNDAwLTE2MDApXG4gKiBAcHJvcGVydHkge3N0cmluZ30gR0xFIElyaXNoXG4gKiBAcHJvcGVydHkge3N0cmluZ30gR0xHIEdhbGljaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gR1JDIEdyZWVrLCBBbmNpZW50ICgtMTQ1MylcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBHVUogR3VqYXJhdGlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBIQVQgSGFpdGlhbjsgSGFpdGlhbiBDcmVvbGVcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBIRUIgSGVicmV3XG4gKiBAcHJvcGVydHkge3N0cmluZ30gSElOIEhpbmRpXG4gKiBAcHJvcGVydHkge3N0cmluZ30gSFJWIENyb2F0aWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gSFVOIEh1bmdhcmlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IElLVSBJbnVrdGl0dXRcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBJTkQgSW5kb25lc2lhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IElTTCBJY2VsYW5kaWNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBJVEEgSXRhbGlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IElUQV9PTEQgSXRhbGlhbiAtIE9sZFxuICogQHByb3BlcnR5IHtzdHJpbmd9IEpBViBKYXZhbmVzZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IEpQTiBKYXBhbmVzZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IEtBTiBLYW5uYWRhXG4gKiBAcHJvcGVydHkge3N0cmluZ30gS0FUIEdlb3JnaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gS0FUX09MRCBHZW9yZ2lhbiAtIE9sZFxuICogQHByb3BlcnR5IHtzdHJpbmd9IEtBWiBLYXpha2hcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBLSE0gQ2VudHJhbCBLaG1lclxuICogQHByb3BlcnR5IHtzdHJpbmd9IEtJUiBLaXJnaGl6OyBLeXJneXpcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBLT1IgS29yZWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gS1VSIEt1cmRpc2hcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBMQU8gTGFvXG4gKiBAcHJvcGVydHkge3N0cmluZ30gTEFUIExhdGluXG4gKiBAcHJvcGVydHkge3N0cmluZ30gTEFWIExhdHZpYW5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBMSVQgTGl0aHVhbmlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IE1BTCBNYWxheWFsYW1cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBNQVIgTWFyYXRoaVxuICogQHByb3BlcnR5IHtzdHJpbmd9IE1LRCBNYWNlZG9uaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gTUxUIE1hbHRlc2VcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBNU0EgTWFsYXlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBNWUEgQnVybWVzZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IE5FUCBOZXBhbGlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBOTEQgRHV0Y2g7IEZsZW1pc2hcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBOT1IgTm9yd2VnaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gT1JJIE9yaXlhXG4gKiBAcHJvcGVydHkge3N0cmluZ30gUEFOIFBhbmphYmk7IFB1bmphYmlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBQT0wgUG9saXNoXG4gKiBAcHJvcGVydHkge3N0cmluZ30gUE9SIFBvcnR1Z3Vlc2VcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBQVVMgUHVzaHRvOyBQYXNodG9cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBST04gUm9tYW5pYW47IE1vbGRhdmlhbjsgTW9sZG92YW5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBSVVMgUnVzc2lhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IFNBTiBTYW5za3JpdFxuICogQHByb3BlcnR5IHtzdHJpbmd9IFNJTiBTaW5oYWxhOyBTaW5oYWxlc2VcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBTTEsgU2xvdmFrXG4gKiBAcHJvcGVydHkge3N0cmluZ30gU0xWIFNsb3ZlbmlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IFNQQSBTcGFuaXNoOyBDYXN0aWxpYW5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBTUEFfT0xEIFNwYW5pc2g7IENhc3RpbGlhbiAtIE9sZFxuICogQHByb3BlcnR5IHtzdHJpbmd9IFNRSSBBbGJhbmlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IFNSUCBTZXJiaWFuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gU1JQX0xBVE4gU2VyYmlhbiAtIExhdGluXG4gKiBAcHJvcGVydHkge3N0cmluZ30gU1dBIFN3YWhpbGlcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBTV0UgU3dlZGlzaFxuICogQHByb3BlcnR5IHtzdHJpbmd9IFNZUiBTeXJpYWNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBUQU0gVGFtaWxcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBURUwgVGVsdWd1XG4gKiBAcHJvcGVydHkge3N0cmluZ30gVEdLIFRhamlrXG4gKiBAcHJvcGVydHkge3N0cmluZ30gVEdMIFRhZ2Fsb2dcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBUSEEgVGhhaVxuICogQHByb3BlcnR5IHtzdHJpbmd9IFRJUiBUaWdyaW55YVxuICogQHByb3BlcnR5IHtzdHJpbmd9IFRVUiBUdXJraXNoXG4gKiBAcHJvcGVydHkge3N0cmluZ30gVUlHIFVpZ2h1cjsgVXlnaHVyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gVUtSIFVrcmFpbmlhblxuICogQHByb3BlcnR5IHtzdHJpbmd9IFVSRCBVcmR1XG4gKiBAcHJvcGVydHkge3N0cmluZ30gVVpCIFV6YmVrXG4gKiBAcHJvcGVydHkge3N0cmluZ30gVVpCX0NZUkwgVXpiZWsgLSBDeXJpbGxpY1xuICogQHByb3BlcnR5IHtzdHJpbmd9IFZJRSBWaWV0bmFtZXNlXG4gKiBAcHJvcGVydHkge3N0cmluZ30gWUlEIFlpZGRpc2hcbiAqL1xuXG4vKipcbiAgKiBAdHlwZSB7TGFuZ3VhZ2VzfVxuICAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFGUjogJ2FmcicsXG4gIEFNSDogJ2FtaCcsXG4gIEFSQTogJ2FyYScsXG4gIEFTTTogJ2FzbScsXG4gIEFaRTogJ2F6ZScsXG4gIEFaRV9DWVJMOiAnYXplX2N5cmwnLFxuICBCRUw6ICdiZWwnLFxuICBCRU46ICdiZW4nLFxuICBCT0Q6ICdib2QnLFxuICBCT1M6ICdib3MnLFxuICBCVUw6ICdidWwnLFxuICBDQVQ6ICdjYXQnLFxuICBDRUI6ICdjZWInLFxuICBDRVM6ICdjZXMnLFxuICBDSElfU0lNOiAnY2hpX3NpbScsXG4gIENISV9UUkE6ICdjaGlfdHJhJyxcbiAgQ0hSOiAnY2hyJyxcbiAgQ1lNOiAnY3ltJyxcbiAgREFOOiAnZGFuJyxcbiAgREVVOiAnZGV1JyxcbiAgRFpPOiAnZHpvJyxcbiAgRUxMOiAnZWxsJyxcbiAgRU5HOiAnZW5nJyxcbiAgRU5NOiAnZW5tJyxcbiAgRVBPOiAnZXBvJyxcbiAgRVNUOiAnZXN0JyxcbiAgRVVTOiAnZXVzJyxcbiAgRkFTOiAnZmFzJyxcbiAgRklOOiAnZmluJyxcbiAgRlJBOiAnZnJhJyxcbiAgRlJLOiAnZnJrJyxcbiAgRlJNOiAnZnJtJyxcbiAgR0xFOiAnZ2xlJyxcbiAgR0xHOiAnZ2xnJyxcbiAgR1JDOiAnZ3JjJyxcbiAgR1VKOiAnZ3VqJyxcbiAgSEFUOiAnaGF0JyxcbiAgSEVCOiAnaGViJyxcbiAgSElOOiAnaGluJyxcbiAgSFJWOiAnaHJ2JyxcbiAgSFVOOiAnaHVuJyxcbiAgSUtVOiAnaWt1JyxcbiAgSU5EOiAnaW5kJyxcbiAgSVNMOiAnaXNsJyxcbiAgSVRBOiAnaXRhJyxcbiAgSVRBX09MRDogJ2l0YV9vbGQnLFxuICBKQVY6ICdqYXYnLFxuICBKUE46ICdqcG4nLFxuICBLQU46ICdrYW4nLFxuICBLQVQ6ICdrYXQnLFxuICBLQVRfT0xEOiAna2F0X29sZCcsXG4gIEtBWjogJ2theicsXG4gIEtITTogJ2tobScsXG4gIEtJUjogJ2tpcicsXG4gIEtPUjogJ2tvcicsXG4gIEtVUjogJ2t1cicsXG4gIExBTzogJ2xhbycsXG4gIExBVDogJ2xhdCcsXG4gIExBVjogJ2xhdicsXG4gIExJVDogJ2xpdCcsXG4gIE1BTDogJ21hbCcsXG4gIE1BUjogJ21hcicsXG4gIE1LRDogJ21rZCcsXG4gIE1MVDogJ21sdCcsXG4gIE1TQTogJ21zYScsXG4gIE1ZQTogJ215YScsXG4gIE5FUDogJ25lcCcsXG4gIE5MRDogJ25sZCcsXG4gIE5PUjogJ25vcicsXG4gIE9SSTogJ29yaScsXG4gIFBBTjogJ3BhbicsXG4gIFBPTDogJ3BvbCcsXG4gIFBPUjogJ3BvcicsXG4gIFBVUzogJ3B1cycsXG4gIFJPTjogJ3JvbicsXG4gIFJVUzogJ3J1cycsXG4gIFNBTjogJ3NhbicsXG4gIFNJTjogJ3NpbicsXG4gIFNMSzogJ3NsaycsXG4gIFNMVjogJ3NsdicsXG4gIFNQQTogJ3NwYScsXG4gIFNQQV9PTEQ6ICdzcGFfb2xkJyxcbiAgU1FJOiAnc3FpJyxcbiAgU1JQOiAnc3JwJyxcbiAgU1JQX0xBVE46ICdzcnBfbGF0bicsXG4gIFNXQTogJ3N3YScsXG4gIFNXRTogJ3N3ZScsXG4gIFNZUjogJ3N5cicsXG4gIFRBTTogJ3RhbScsXG4gIFRFTDogJ3RlbCcsXG4gIFRHSzogJ3RnaycsXG4gIFRHTDogJ3RnbCcsXG4gIFRIQTogJ3RoYScsXG4gIFRJUjogJ3RpcicsXG4gIFRVUjogJ3R1cicsXG4gIFVJRzogJ3VpZycsXG4gIFVLUjogJ3VrcicsXG4gIFVSRDogJ3VyZCcsXG4gIFVaQjogJ3V6YicsXG4gIFVaQl9DWVJMOiAndXpiX2N5cmwnLFxuICBWSUU6ICd2aWUnLFxuICBZSUQ6ICd5aWQnLFxufTtcbiIsImNvbnN0IGlzRWxlY3Ryb24gPSByZXF1aXJlKCdpcy1lbGVjdHJvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChrZXkpID0+IHtcbiAgY29uc3QgZW52ID0ge307XG5cbiAgaWYgKHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbnYudHlwZSA9ICd3ZWJ3b3JrZXInO1xuICB9IGVsc2UgaWYgKGlzRWxlY3Ryb24oKSkge1xuICAgIGVudi50eXBlID0gJ2VsZWN0cm9uJztcbiAgfSBlbHNlIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICdvYmplY3QnKSB7XG4gICAgZW52LnR5cGUgPSAnYnJvd3Nlcic7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgPT09ICdvYmplY3QnICYmIHR5cGVvZiByZXF1aXJlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZW52LnR5cGUgPSAnbm9kZSc7XG4gIH1cblxuICBpZiAodHlwZW9mIGtleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZW52O1xuICB9XG5cbiAgcmV0dXJuIGVudltrZXldO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAvKlxuICAgKiBkZWZhdWx0IHBhdGggZm9yIGRvd25sb2FkaW5nICoudHJhaW5lZGRhdGFcbiAgICovXG4gIGxhbmdQYXRoOiAnaHR0cHM6Ly90ZXNzZGF0YS5wcm9qZWN0bmFwdGhhLmNvbS80LjAuMCcsXG4gIC8qXG4gICAqIFVzZSBCbG9iVVJMIGZvciB3b3JrZXIgc2NyaXB0IGJ5IGRlZmF1bHRcbiAgICogVE9ETzogcmVtb3ZlIHRoaXMgb3B0aW9uXG4gICAqXG4gICAqL1xuICB3b3JrZXJCbG9iVVJMOiB0cnVlLFxuICBsb2dnZXI6ICgpID0+IHt9LFxufTtcbiIsIi8qKlxuICogSW4gdGhlIHJlY29nbml0aW9uIHJlc3VsdCBvZiB0ZXNzZXJhY3QsIHRoZXJlXG4gKiBpcyBhIGRlZXAgSlNPTiBvYmplY3QgZm9yIGRldGFpbHMsIGl0IGhhcyBhcm91bmRcbiAqXG4gKiBUaGUgcmVzdWx0IG9mIGR1bXAuanMgaXMgYSBiaWcgSlNPTiB0cmVlXG4gKiB3aGljaCBjYW4gYmUgZWFzaWx5IHNlcmlhbGl6ZWQgKGZvciBpbnN0YW5jZVxuICogdG8gYmUgc2VudCBmcm9tIGEgd2Vid29ya2VyIHRvIHRoZSBtYWluIGFwcFxuICogb3IgdGhyb3VnaCBOb2RlJ3MgSVBDKSwgYnV0IHdlIHdhbnRcbiAqIGEgKGNpcmN1bGFyKSBET00tbGlrZSBpbnRlcmZhY2UgZm9yIHdhbGtpbmdcbiAqIHRocm91Z2ggdGhlIGRhdGEuXG4gKlxuICogQGZpbGVvdmVydmlldyBET00tbGlrZSBpbnRlcmZhY2UgZm9yIHdhbGtpbmcgdGhyb3VnaCBkYXRhXG4gKiBAYXV0aG9yIEtldmluIEt3b2sgPGFudGltYXR0ZXIxNUBnbWFpbC5jb20+XG4gKiBAYXV0aG9yIEd1aWxsZXJtbyBXZWJzdGVyIDxndWlAbWl0LmVkdT5cbiAqIEBhdXRob3IgSmVyb21lIFd1IDxqZXJvbWV3dXNAZ21haWwuY29tPlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gKHBhZ2UpID0+IHtcbiAgY29uc3QgYmxvY2tzID0gW107XG4gIGNvbnN0IHBhcmFncmFwaHMgPSBbXTtcbiAgY29uc3QgbGluZXMgPSBbXTtcbiAgY29uc3Qgd29yZHMgPSBbXTtcbiAgY29uc3Qgc3ltYm9scyA9IFtdO1xuXG4gIGlmIChwYWdlLmJsb2Nrcykge1xuICAgIHBhZ2UuYmxvY2tzLmZvckVhY2goKGJsb2NrKSA9PiB7XG4gICAgICBibG9jay5wYXJhZ3JhcGhzLmZvckVhY2goKHBhcmFncmFwaCkgPT4ge1xuICAgICAgICBwYXJhZ3JhcGgubGluZXMuZm9yRWFjaCgobGluZSkgPT4ge1xuICAgICAgICAgIGxpbmUud29yZHMuZm9yRWFjaCgod29yZCkgPT4ge1xuICAgICAgICAgICAgd29yZC5zeW1ib2xzLmZvckVhY2goKHN5bSkgPT4ge1xuICAgICAgICAgICAgICBzeW1ib2xzLnB1c2goe1xuICAgICAgICAgICAgICAgIC4uLnN5bSwgcGFnZSwgYmxvY2ssIHBhcmFncmFwaCwgbGluZSwgd29yZCxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHdvcmRzLnB1c2goe1xuICAgICAgICAgICAgICAuLi53b3JkLCBwYWdlLCBibG9jaywgcGFyYWdyYXBoLCBsaW5lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgbGluZXMucHVzaCh7XG4gICAgICAgICAgICAuLi5saW5lLCBwYWdlLCBibG9jaywgcGFyYWdyYXBoLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcGFyYWdyYXBocy5wdXNoKHtcbiAgICAgICAgICAuLi5wYXJhZ3JhcGgsIHBhZ2UsIGJsb2NrLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgYmxvY2tzLnB1c2goe1xuICAgICAgICAuLi5ibG9jaywgcGFnZSxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5wYWdlLCBibG9ja3MsIHBhcmFncmFwaHMsIGxpbmVzLCB3b3Jkcywgc3ltYm9scyxcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVjdHJvbi9lbGVjdHJvbi9pc3N1ZXMvMjI4OFxuZnVuY3Rpb24gaXNFbGVjdHJvbigpIHtcbiAgICAvLyBSZW5kZXJlciBwcm9jZXNzXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cucHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgd2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBNYWluIHByb2Nlc3NcbiAgICBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwcm9jZXNzLnZlcnNpb25zID09PSAnb2JqZWN0JyAmJiAhIXByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24pIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLy8gRGV0ZWN0IHRoZSB1c2VyIGFnZW50IHdoZW4gdGhlIGBub2RlSW50ZWdyYXRpb25gIG9wdGlvbiBpcyBzZXQgdG8gZmFsc2VcbiAgICBpZiAodHlwZW9mIG5hdmlnYXRvciA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG5hdmlnYXRvci51c2VyQWdlbnQgPT09ICdzdHJpbmcnICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRWxlY3Ryb24nKSA+PSAwKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0VsZWN0cm9uO1xuIiwiLyoqXG4gKlxuICogRW50cnkgcG9pbnQgZm9yIHRlc3NlcmFjdC5qcywgc2hvdWxkIGJlIHRoZSBlbnRyeSB3aGVuIGJ1bmRsaW5nLlxuICpcbiAqIEBmaWxlb3ZlcnZpZXcgZW50cnkgcG9pbnQgZm9yIHRlc3NlcmFjdC5qc1xuICogQGF1dGhvciBLZXZpbiBLd29rIDxhbnRpbWF0dGVyMTVAZ21haWwuY29tPlxuICogQGF1dGhvciBHdWlsbGVybW8gV2Vic3RlciA8Z3VpQG1pdC5lZHU+XG4gKiBAYXV0aG9yIEplcm9tZSBXdSA8amVyb21ld3VzQGdtYWlsLmNvbT5cbiAqL1xucmVxdWlyZSgncmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lJyk7XG5jb25zdCBjcmVhdGVTY2hlZHVsZXIgPSByZXF1aXJlKCcuL2NyZWF0ZVNjaGVkdWxlcicpO1xuY29uc3QgY3JlYXRlV29ya2VyID0gcmVxdWlyZSgnLi9jcmVhdGVXb3JrZXInKTtcbmNvbnN0IFRlc3NlcmFjdCA9IHJlcXVpcmUoJy4vVGVzc2VyYWN0Jyk7XG5jb25zdCBsYW5ndWFnZXMgPSByZXF1aXJlKCcuL2NvbnN0YW50cy9sYW5ndWFnZXMnKTtcbmNvbnN0IE9FTSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzL09FTScpO1xuY29uc3QgUFNNID0gcmVxdWlyZSgnLi9jb25zdGFudHMvUFNNJyk7XG5jb25zdCB7IHNldExvZ2dpbmcgfSA9IHJlcXVpcmUoJy4vdXRpbHMvbG9nJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsYW5ndWFnZXMsXG4gIE9FTSxcbiAgUFNNLFxuICBjcmVhdGVTY2hlZHVsZXIsXG4gIGNyZWF0ZVdvcmtlcixcbiAgc2V0TG9nZ2luZyxcbiAgLi4uVGVzc2VyYWN0LFxufTtcbiIsIi8qKlxuICogc2VuZFxuICpcbiAqIEBuYW1lIHNlbmRcbiAqIEBmdW5jdGlvbiBzZW5kIHBhY2tldCB0byB3b3JrZXIgYW5kIGNyZWF0ZSBhIGpvYlxuICogQGFjY2VzcyBwdWJsaWNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAod29ya2VyLCBwYWNrZXQpID0+IHtcbiAgd29ya2VyLnBvc3RNZXNzYWdlKHBhY2tldCk7XG59O1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLG49U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSxwPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSxxPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxyPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSx0PVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSx1PVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLHY9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLHc9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLHg9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIikseT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSx6PVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBBKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT16JiZhW3pdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG52YXIgQj17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQz1PYmplY3QuYXNzaWduLEQ9e307ZnVuY3Rpb24gRShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307XG5FLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoXCJzZXRTdGF0ZSguLi4pOiB0YWtlcyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzIHRvIHVwZGF0ZSBvciBhIGZ1bmN0aW9uIHdoaWNoIHJldHVybnMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcy5cIik7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZXx8Qn12YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RztDKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9QXJyYXkuaXNBcnJheSxKPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksSz17Y3VycmVudDpudWxsfSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixlKXt2YXIgZCxjPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZCBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUouY2FsbChiLGQpJiYhTC5oYXNPd25Qcm9wZXJ0eShkKSYmKGNbZF09YltkXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWMuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07Yy5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihkIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1jW2RdJiYoY1tkXT1nW2RdKTtyZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6Yyxfb3duZXI6Sy5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWx9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2c7ZnVuY3Rpb24gUShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIFIoYSxiLGUsZCxjKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbDpjYXNlIG46aD0hMH19aWYoaClyZXR1cm4gaD1hLGM9YyhoKSxhPVwiXCI9PT1kP1wiLlwiK1EoaCwwKTpkLEkoYyk/KGU9XCJcIixudWxsIT1hJiYoZT1hLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIiksUihjLGIsZSxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWMmJihPKGMpJiYoYz1OKGMsZSsoIWMua2V5fHxoJiZoLmtleT09PWMua2V5P1wiXCI6KFwiXCIrYy5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChjKSksMTtoPTA7ZD1cIlwiPT09ZD9cIi5cIjpkK1wiOlwiO2lmKEkoYSkpZm9yKHZhciBnPTA7ZzxhLmxlbmd0aDtnKyspe2s9XG5hW2ddO3ZhciBmPWQrUShrLGcpO2grPVIoayxiLGUsZixjKX1lbHNlIGlmKGY9QShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZCtRKGssZysrKSxoKz1SKGssYixlLGYsYyk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVN0cmluZyhhKSxFcnJvcihcIk9iamVjdHMgYXJlIG5vdCB2YWxpZCBhcyBhIFJlYWN0IGNoaWxkIChmb3VuZDogXCIrKFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpK1wiKS4gSWYgeW91IG1lYW50IHRvIHJlbmRlciBhIGNvbGxlY3Rpb24gb2YgY2hpbGRyZW4sIHVzZSBhbiBhcnJheSBpbnN0ZWFkLlwiKTtyZXR1cm4gaH1cbmZ1bmN0aW9uIFMoYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGQ9W10sYz0wO1IoYSxkLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGUsYSxjKyspfSk7cmV0dXJuIGR9ZnVuY3Rpb24gVChhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2IudGhlbihmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yn0sZnVuY3Rpb24oYil7aWYoMD09PWEuX3N0YXR1c3x8LTE9PT1hLl9zdGF0dXMpYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWJ9KTstMT09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0wLGEuX3Jlc3VsdD1iKX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQuZGVmYXVsdDt0aHJvdyBhLl9yZXN1bHQ7fVxudmFyIFU9e2N1cnJlbnQ6bnVsbH0sVj17dHJhbnNpdGlvbjpudWxsfSxXPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlUsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6VixSZWFjdEN1cnJlbnRPd25lcjpLfTtmdW5jdGlvbiBYKCl7dGhyb3cgRXJyb3IoXCJhY3QoLi4uKSBpcyBub3Qgc3VwcG9ydGVkIGluIHByb2R1Y3Rpb24gYnVpbGRzIG9mIFJlYWN0LlwiKTt9XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6Uyxmb3JFYWNoOmZ1bmN0aW9uKGEsYixlKXtTKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZSl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UyhhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFMoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihcIlJlYWN0LkNoaWxkcmVuLm9ubHkgZXhwZWN0ZWQgdG8gcmVjZWl2ZSBhIHNpbmdsZSBSZWFjdCBlbGVtZW50IGNoaWxkLlwiKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUU7ZXhwb3J0cy5GcmFnbWVudD1wO2V4cG9ydHMuUHJvZmlsZXI9cjtleHBvcnRzLlB1cmVDb21wb25lbnQ9RztleHBvcnRzLlN0cmljdE1vZGU9cTtleHBvcnRzLlN1c3BlbnNlPXc7XG5leHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVc7ZXhwb3J0cy5hY3Q9WDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihcIlJlYWN0LmNsb25lRWxlbWVudCguLi4pOiBUaGUgYXJndW1lbnQgbXVzdCBiZSBhIFJlYWN0IGVsZW1lbnQsIGJ1dCB5b3UgcGFzc2VkIFwiK2ErXCIuXCIpO3ZhciBkPUMoe30sYS5wcm9wcyksYz1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGM9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilKLmNhbGwoYixmKSYmIUwuaGFzT3duUHJvcGVydHkoZikmJihkW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO1xuZm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YyxyZWY6ayxwcm9wczpkLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEpe2E9eyQkdHlwZW9mOnUsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLF9kZWZhdWx0VmFsdWU6bnVsbCxfZ2xvYmFsTmFtZTpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp0LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07XG5leHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87ZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6VH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp4LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy5zdGFydFRyYW5zaXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9Vi50cmFuc2l0aW9uO1YudHJhbnNpdGlvbj17fTt0cnl7YSgpfWZpbmFsbHl7Vi50cmFuc2l0aW9uPWJ9fTtleHBvcnRzLnVuc3RhYmxlX2FjdD1YO2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNvbnRleHQoYSl9O1xuZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZURlZmVycmVkVmFsdWU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VEZWZlcnJlZFZhbHVlKGEpfTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gVS5jdXJyZW50LnVzZUlkKCl9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixlKX07ZXhwb3J0cy51c2VJbnNlcnRpb25FZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUluc2VydGlvbkVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTGF5b3V0RWZmZWN0KGEsYil9O1xuZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWR1Y2VyKGEsYixlKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VTdGF0ZShhKX07ZXhwb3J0cy51c2VTeW5jRXh0ZXJuYWxTdG9yZT1mdW5jdGlvbihhLGIsZSl7cmV0dXJuIFUuY3VycmVudC51c2VTeW5jRXh0ZXJuYWxTdG9yZShhLGIsZSl9O2V4cG9ydHMudXNlVHJhbnNpdGlvbj1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlVHJhbnNpdGlvbigpfTtleHBvcnRzLnZlcnNpb249XCIxOC4zLjFcIjtcbiIsIi8qKlxuICpcbiAqIFRlc3NlcmFjdCBXb3JrZXIgYWRhcHRlciBmb3IgYnJvd3NlclxuICpcbiAqIEBmaWxlb3ZlcnZpZXcgVGVzc2VyYWN0IFdvcmtlciBhZGFwdGVyIGZvciBicm93c2VyXG4gKiBAYXV0aG9yIEtldmluIEt3b2sgPGFudGltYXR0ZXIxNUBnbWFpbC5jb20+XG4gKiBAYXV0aG9yIEd1aWxsZXJtbyBXZWJzdGVyIDxndWlAbWl0LmVkdT5cbiAqIEBhdXRob3IgSmVyb21lIFd1IDxqZXJvbWV3dXNAZ21haWwuY29tPlxuICovXG5jb25zdCBkZWZhdWx0T3B0aW9ucyA9IHJlcXVpcmUoJy4vZGVmYXVsdE9wdGlvbnMnKTtcbmNvbnN0IHNwYXduV29ya2VyID0gcmVxdWlyZSgnLi9zcGF3bldvcmtlcicpO1xuY29uc3QgdGVybWluYXRlV29ya2VyID0gcmVxdWlyZSgnLi90ZXJtaW5hdGVXb3JrZXInKTtcbmNvbnN0IG9uTWVzc2FnZSA9IHJlcXVpcmUoJy4vb25NZXNzYWdlJyk7XG5jb25zdCBzZW5kID0gcmVxdWlyZSgnLi9zZW5kJyk7XG5jb25zdCBsb2FkSW1hZ2UgPSByZXF1aXJlKCcuL2xvYWRJbWFnZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVmYXVsdE9wdGlvbnMsXG4gIHNwYXduV29ya2VyLFxuICB0ZXJtaW5hdGVXb3JrZXIsXG4gIG9uTWVzc2FnZSxcbiAgc2VuZCxcbiAgbG9hZEltYWdlLFxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSAod29ya2VyLCBoYW5kbGVyKSA9PiB7XG4gIHdvcmtlci5vbm1lc3NhZ2UgPSAoeyBkYXRhIH0pID0+IHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGhhbmRsZXIoZGF0YSk7XG4gIH07XG59O1xuIiwiY29uc3QgaXNCcm93c2VyID0gcmVxdWlyZSgnLi9nZXRFbnZpcm9ubWVudCcpKCd0eXBlJykgPT09ICdicm93c2VyJztcblxuY29uc3QgcmVzb2x2ZVVSTCA9IGlzQnJvd3NlciA/IHMgPT4gKG5ldyBVUkwocywgd2luZG93LmxvY2F0aW9uLmhyZWYpKS5ocmVmIDogcyA9PiBzOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbm1vZHVsZS5leHBvcnRzID0gKG9wdGlvbnMpID0+IHtcbiAgY29uc3Qgb3B0cyA9IHsgLi4ub3B0aW9ucyB9O1xuICBbJ2NvcmVQYXRoJywgJ3dvcmtlclBhdGgnLCAnbGFuZ1BhdGgnXS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICBpZiAob3B0aW9uc1trZXldKSB7XG4gICAgICBvcHRzW2tleV0gPSByZXNvbHZlVVJMKG9wdHNba2V5XSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG9wdHM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBydW50aW1lID0gKGZ1bmN0aW9uIChleHBvcnRzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5IHx8IGZ1bmN0aW9uIChvYmosIGtleSwgZGVzYykgeyBvYmpba2V5XSA9IGRlc2MudmFsdWU7IH07XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIGZ1bmN0aW9uIGRlZmluZShvYmosIGtleSwgdmFsdWUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBvYmpba2V5XTtcbiAgfVxuICB0cnkge1xuICAgIC8vIElFIDggaGFzIGEgYnJva2VuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSB0aGF0IG9ubHkgd29ya3Mgb24gRE9NIG9iamVjdHMuXG4gICAgZGVmaW5lKHt9LCBcIlwiKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZGVmaW5lID0gZnVuY3Rpb24ob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgICByZXR1cm4gb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGRlZmluZVByb3BlcnR5KGdlbmVyYXRvciwgXCJfaW52b2tlXCIsIHsgdmFsdWU6IG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkgfSk7XG5cbiAgICByZXR1cm4gZ2VuZXJhdG9yO1xuICB9XG4gIGV4cG9ydHMud3JhcCA9IHdyYXA7XG5cbiAgLy8gVHJ5L2NhdGNoIGhlbHBlciB0byBtaW5pbWl6ZSBkZW9wdGltaXphdGlvbnMuIFJldHVybnMgYSBjb21wbGV0aW9uXG4gIC8vIHJlY29yZCBsaWtlIGNvbnRleHQudHJ5RW50cmllc1tpXS5jb21wbGV0aW9uLiBUaGlzIGludGVyZmFjZSBjb3VsZFxuICAvLyBoYXZlIGJlZW4gKGFuZCB3YXMgcHJldmlvdXNseSkgZGVzaWduZWQgdG8gdGFrZSBhIGNsb3N1cmUgdG8gYmVcbiAgLy8gaW52b2tlZCB3aXRob3V0IGFyZ3VtZW50cywgYnV0IGluIGFsbCB0aGUgY2FzZXMgd2UgY2FyZSBhYm91dCB3ZVxuICAvLyBhbHJlYWR5IGhhdmUgYW4gZXhpc3RpbmcgbWV0aG9kIHdlIHdhbnQgdG8gY2FsbCwgc28gdGhlcmUncyBubyBuZWVkXG4gIC8vIHRvIGNyZWF0ZSBhIG5ldyBmdW5jdGlvbiBvYmplY3QuIFdlIGNhbiBldmVuIGdldCBhd2F5IHdpdGggYXNzdW1pbmdcbiAgLy8gdGhlIG1ldGhvZCB0YWtlcyBleGFjdGx5IG9uZSBhcmd1bWVudCwgc2luY2UgdGhhdCBoYXBwZW5zIHRvIGJlIHRydWVcbiAgLy8gaW4gZXZlcnkgY2FzZSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB0b3VjaCB0aGUgYXJndW1lbnRzIG9iamVjdC4gVGhlXG4gIC8vIG9ubHkgYWRkaXRpb25hbCBhbGxvY2F0aW9uIHJlcXVpcmVkIGlzIHRoZSBjb21wbGV0aW9uIHJlY29yZCwgd2hpY2hcbiAgLy8gaGFzIGEgc3RhYmxlIHNoYXBlIGFuZCBzbyBob3BlZnVsbHkgc2hvdWxkIGJlIGNoZWFwIHRvIGFsbG9jYXRlLlxuICBmdW5jdGlvbiB0cnlDYXRjaChmbiwgb2JqLCBhcmcpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJub3JtYWxcIiwgYXJnOiBmbi5jYWxsKG9iaiwgYXJnKSB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHsgdHlwZTogXCJ0aHJvd1wiLCBhcmc6IGVyciB9O1xuICAgIH1cbiAgfVxuXG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0ID0gXCJzdXNwZW5kZWRTdGFydFwiO1xuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRZaWVsZCA9IFwic3VzcGVuZGVkWWllbGRcIjtcbiAgdmFyIEdlblN0YXRlRXhlY3V0aW5nID0gXCJleGVjdXRpbmdcIjtcbiAgdmFyIEdlblN0YXRlQ29tcGxldGVkID0gXCJjb21wbGV0ZWRcIjtcblxuICAvLyBSZXR1cm5pbmcgdGhpcyBvYmplY3QgZnJvbSB0aGUgaW5uZXJGbiBoYXMgdGhlIHNhbWUgZWZmZWN0IGFzXG4gIC8vIGJyZWFraW5nIG91dCBvZiB0aGUgZGlzcGF0Y2ggc3dpdGNoIHN0YXRlbWVudC5cbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcblxuICAvLyBEdW1teSBjb25zdHJ1Y3RvciBmdW5jdGlvbnMgdGhhdCB3ZSB1c2UgYXMgdGhlIC5jb25zdHJ1Y3RvciBhbmRcbiAgLy8gLmNvbnN0cnVjdG9yLnByb3RvdHlwZSBwcm9wZXJ0aWVzIGZvciBmdW5jdGlvbnMgdGhhdCByZXR1cm4gR2VuZXJhdG9yXG4gIC8vIG9iamVjdHMuIEZvciBmdWxsIHNwZWMgY29tcGxpYW5jZSwgeW91IG1heSB3aXNoIHRvIGNvbmZpZ3VyZSB5b3VyXG4gIC8vIG1pbmlmaWVyIG5vdCB0byBtYW5nbGUgdGhlIG5hbWVzIG9mIHRoZXNlIHR3byBmdW5jdGlvbnMuXG4gIGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fVxuXG4gIC8vIFRoaXMgaXMgYSBwb2x5ZmlsbCBmb3IgJUl0ZXJhdG9yUHJvdG90eXBlJSBmb3IgZW52aXJvbm1lbnRzIHRoYXRcbiAgLy8gZG9uJ3QgbmF0aXZlbHkgc3VwcG9ydCBpdC5cbiAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG4gIGRlZmluZShJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgZGVmaW5lUHJvcGVydHkoR3AsIFwiY29uc3RydWN0b3JcIiwgeyB2YWx1ZTogR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbiAgZGVmaW5lUHJvcGVydHkoXG4gICAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsXG4gICAgXCJjb25zdHJ1Y3RvclwiLFxuICAgIHsgdmFsdWU6IEdlbmVyYXRvckZ1bmN0aW9uLCBjb25maWd1cmFibGU6IHRydWUgfVxuICApO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IGRlZmluZShcbiAgICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSxcbiAgICB0b1N0cmluZ1RhZ1N5bWJvbCxcbiAgICBcIkdlbmVyYXRvckZ1bmN0aW9uXCJcbiAgKTtcblxuICAvLyBIZWxwZXIgZm9yIGRlZmluaW5nIHRoZSAubmV4dCwgLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzIG9mIHRoZVxuICAvLyBJdGVyYXRvciBpbnRlcmZhY2UgaW4gdGVybXMgb2YgYSBzaW5nbGUgLl9pbnZva2UgbWV0aG9kLlxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICBkZWZpbmUocHJvdG90eXBlLCBtZXRob2QsIGZ1bmN0aW9uKGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5faW52b2tlKG1ldGhvZCwgYXJnKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZXhwb3J0cy5pc0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24oZ2VuRnVuKSB7XG4gICAgdmFyIGN0b3IgPSB0eXBlb2YgZ2VuRnVuID09PSBcImZ1bmN0aW9uXCIgJiYgZ2VuRnVuLmNvbnN0cnVjdG9yO1xuICAgIHJldHVybiBjdG9yXG4gICAgICA/IGN0b3IgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8XG4gICAgICAgIC8vIEZvciB0aGUgbmF0aXZlIEdlbmVyYXRvckZ1bmN0aW9uIGNvbnN0cnVjdG9yLCB0aGUgYmVzdCB3ZSBjYW5cbiAgICAgICAgLy8gZG8gaXMgdG8gY2hlY2sgaXRzIC5uYW1lIHByb3BlcnR5LlxuICAgICAgICAoY3Rvci5kaXNwbGF5TmFtZSB8fCBjdG9yLm5hbWUpID09PSBcIkdlbmVyYXRvckZ1bmN0aW9uXCJcbiAgICAgIDogZmFsc2U7XG4gIH07XG5cbiAgZXhwb3J0cy5tYXJrID0gZnVuY3Rpb24oZ2VuRnVuKSB7XG4gICAgaWYgKE9iamVjdC5zZXRQcm90b3R5cGVPZikge1xuICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGdlbkZ1biwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGU7XG4gICAgICBkZWZpbmUoZ2VuRnVuLCB0b1N0cmluZ1RhZ1N5bWJvbCwgXCJHZW5lcmF0b3JGdW5jdGlvblwiKTtcbiAgICB9XG4gICAgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApO1xuICAgIHJldHVybiBnZW5GdW47XG4gIH07XG5cbiAgLy8gV2l0aGluIHRoZSBib2R5IG9mIGFueSBhc3luYyBmdW5jdGlvbiwgYGF3YWl0IHhgIGlzIHRyYW5zZm9ybWVkIHRvXG4gIC8vIGB5aWVsZCByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoeClgLCBzbyB0aGF0IHRoZSBydW50aW1lIGNhbiB0ZXN0XG4gIC8vIGBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpYCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXNcbiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC5cbiAgZXhwb3J0cy5hd3JhcCA9IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yLCBQcm9taXNlSW1wbCkge1xuICAgIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goZ2VuZXJhdG9yW21ldGhvZF0sIGdlbmVyYXRvciwgYXJnKTtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHJlamVjdChyZWNvcmQuYXJnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWNvcmQuYXJnO1xuICAgICAgICB2YXIgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIGlmICh2YWx1ZSAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpKSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2VJbXBsLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkge1xuICAgICAgICAgIC8vIFdoZW4gYSB5aWVsZGVkIFByb21pc2UgaXMgcmVzb2x2ZWQsIGl0cyBmaW5hbCB2YWx1ZSBiZWNvbWVzXG4gICAgICAgICAgLy8gdGhlIC52YWx1ZSBvZiB0aGUgUHJvbWlzZTx7dmFsdWUsZG9uZX0+IHJlc3VsdCBmb3IgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uXG4gICAgICAgICAgcmVzdWx0LnZhbHVlID0gdW53cmFwcGVkO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAvLyBJZiBhIHJlamVjdGVkIFByb21pc2Ugd2FzIHlpZWxkZWQsIHRocm93IHRoZSByZWplY3Rpb24gYmFja1xuICAgICAgICAgIC8vIGludG8gdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgaGFuZGxlZCB0aGVyZS5cbiAgICAgICAgICByZXR1cm4gaW52b2tlKFwidGhyb3dcIiwgZXJyb3IsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICBmdW5jdGlvbiBlbnF1ZXVlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlSW1wbChmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgZGVmaW5lUHJvcGVydHkodGhpcywgXCJfaW52b2tlXCIsIHsgdmFsdWU6IGVucXVldWUgfSk7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBkZWZpbmUoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUsIGFzeW5jSXRlcmF0b3JTeW1ib2wsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG4gIGV4cG9ydHMuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3I7XG5cbiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZlxuICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2ZcbiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuXG4gIGV4cG9ydHMuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCwgUHJvbWlzZUltcGwpIHtcbiAgICBpZiAoUHJvbWlzZUltcGwgPT09IHZvaWQgMCkgUHJvbWlzZUltcGwgPSBQcm9taXNlO1xuXG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpLFxuICAgICAgUHJvbWlzZUltcGxcbiAgICApO1xuXG4gICAgcmV0dXJuIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kTmFtZSA9IGNvbnRleHQubWV0aG9kO1xuICAgIHZhciBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvclttZXRob2ROYW1lXTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIEEgLnRocm93IG9yIC5yZXR1cm4gd2hlbiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIG5vIC50aHJvd1xuICAgICAgLy8gbWV0aG9kLCBvciBhIG1pc3NpbmcgLm5leHQgbWVodG9kLCBhbHdheXMgdGVybWluYXRlIHRoZVxuICAgICAgLy8geWllbGQqIGxvb3AuXG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgLy8gTm90ZTogW1wicmV0dXJuXCJdIG11c3QgYmUgdXNlZCBmb3IgRVMzIHBhcnNpbmcgY29tcGF0aWJpbGl0eS5cbiAgICAgIGlmIChtZXRob2ROYW1lID09PSBcInRocm93XCIgJiYgZGVsZWdhdGUuaXRlcmF0b3JbXCJyZXR1cm5cIl0pIHtcbiAgICAgICAgLy8gSWYgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBhIHJldHVybiBtZXRob2QsIGdpdmUgaXQgYVxuICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgLy8gSWYgbWF5YmVJbnZva2VEZWxlZ2F0ZShjb250ZXh0KSBjaGFuZ2VkIGNvbnRleHQubWV0aG9kIGZyb21cbiAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1ldGhvZE5hbWUgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBcIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJ1wiICsgbWV0aG9kTmFtZSArIFwiJyBtZXRob2RcIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChtZXRob2QsIGRlbGVnYXRlLml0ZXJhdG9yLCBjb250ZXh0LmFyZyk7XG5cbiAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcblxuICAgIGlmICghIGluZm8pIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIik7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgIC8vIEFzc2lnbiB0aGUgcmVzdWx0IG9mIHRoZSBmaW5pc2hlZCBkZWxlZ2F0ZSB0byB0aGUgdGVtcG9yYXJ5XG4gICAgICAvLyB2YXJpYWJsZSBzcGVjaWZpZWQgYnkgZGVsZWdhdGUucmVzdWx0TmFtZSAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dFtkZWxlZ2F0ZS5yZXN1bHROYW1lXSA9IGluZm8udmFsdWU7XG5cbiAgICAgIC8vIFJlc3VtZSBleGVjdXRpb24gYXQgdGhlIGRlc2lyZWQgbG9jYXRpb24gKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHQubmV4dCA9IGRlbGVnYXRlLm5leHRMb2M7XG5cbiAgICAgIC8vIElmIGNvbnRleHQubWV0aG9kIHdhcyBcInRocm93XCIgYnV0IHRoZSBkZWxlZ2F0ZSBoYW5kbGVkIHRoZVxuICAgICAgLy8gZXhjZXB0aW9uLCBsZXQgdGhlIG91dGVyIGdlbmVyYXRvciBwcm9jZWVkIG5vcm1hbGx5LiBJZlxuICAgICAgLy8gY29udGV4dC5tZXRob2Qgd2FzIFwibmV4dFwiLCBmb3JnZXQgY29udGV4dC5hcmcgc2luY2UgaXQgaGFzIGJlZW5cbiAgICAgIC8vIFwiY29uc3VtZWRcIiBieSB0aGUgZGVsZWdhdGUgaXRlcmF0b3IuIElmIGNvbnRleHQubWV0aG9kIHdhc1xuICAgICAgLy8gXCJyZXR1cm5cIiwgYWxsb3cgdGhlIG9yaWdpbmFsIC5yZXR1cm4gY2FsbCB0byBjb250aW51ZSBpbiB0aGVcbiAgICAgIC8vIG91dGVyIGdlbmVyYXRvci5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCAhPT0gXCJyZXR1cm5cIikge1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZS15aWVsZCB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBkZWxlZ2F0ZSBtZXRob2QuXG4gICAgICByZXR1cm4gaW5mbztcbiAgICB9XG5cbiAgICAvLyBUaGUgZGVsZWdhdGUgaXRlcmF0b3IgaXMgZmluaXNoZWQsIHNvIGZvcmdldCBpdCBhbmQgY29udGludWUgd2l0aFxuICAgIC8vIHRoZSBvdXRlciBnZW5lcmF0b3IuXG4gICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gIH1cblxuICAvLyBEZWZpbmUgR2VuZXJhdG9yLnByb3RvdHlwZS57bmV4dCx0aHJvdyxyZXR1cm59IGluIHRlcm1zIG9mIHRoZVxuICAvLyB1bmlmaWVkIC5faW52b2tlIGhlbHBlciBtZXRob2QuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCk7XG5cbiAgZGVmaW5lKEdwLCB0b1N0cmluZ1RhZ1N5bWJvbCwgXCJHZW5lcmF0b3JcIik7XG5cbiAgLy8gQSBHZW5lcmF0b3Igc2hvdWxkIGFsd2F5cyByZXR1cm4gaXRzZWxmIGFzIHRoZSBpdGVyYXRvciBvYmplY3Qgd2hlbiB0aGVcbiAgLy8gQEBpdGVyYXRvciBmdW5jdGlvbiBpcyBjYWxsZWQgb24gaXQuIFNvbWUgYnJvd3NlcnMnIGltcGxlbWVudGF0aW9ucyBvZiB0aGVcbiAgLy8gaXRlcmF0b3IgcHJvdG90eXBlIGNoYWluIGluY29ycmVjdGx5IGltcGxlbWVudCB0aGlzLCBjYXVzaW5nIHRoZSBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0IHRvIG5vdCBiZSByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbC4gVGhpcyBlbnN1cmVzIHRoYXQgZG9lc24ndCBoYXBwZW4uXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvaXNzdWVzLzI3NCBmb3IgbW9yZSBkZXRhaWxzLlxuICBkZWZpbmUoR3AsIGl0ZXJhdG9yU3ltYm9sLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfSk7XG5cbiAgZGVmaW5lKEdwLCBcInRvU3RyaW5nXCIsIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9KTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIGV4cG9ydHMua2V5cyA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHZhciBvYmplY3QgPSBPYmplY3QodmFsKTtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH1cbiAgICBrZXlzLnJldmVyc2UoKTtcblxuICAgIC8vIFJhdGhlciB0aGFuIHJldHVybmluZyBhbiBvYmplY3Qgd2l0aCBhIG5leHQgbWV0aG9kLCB3ZSBrZWVwXG4gICAgLy8gdGhpbmdzIHNpbXBsZSBhbmQgcmV0dXJuIHRoZSBuZXh0IGZ1bmN0aW9uIGl0c2VsZi5cbiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHdoaWxlIChrZXlzLmxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICBuZXh0LnZhbHVlID0ga2V5O1xuICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRvIGF2b2lkIGNyZWF0aW5nIGFuIGFkZGl0aW9uYWwgb2JqZWN0LCB3ZSBqdXN0IGhhbmcgdGhlIC52YWx1ZVxuICAgICAgLy8gYW5kIC5kb25lIHByb3BlcnRpZXMgb2ZmIHRoZSBuZXh0IGZ1bmN0aW9uIG9iamVjdCBpdHNlbGYuIFRoaXNcbiAgICAgIC8vIGFsc28gZW5zdXJlcyB0aGF0IHRoZSBtaW5pZmllciB3aWxsIG5vdCBhbm9ueW1pemUgdGhlIGZ1bmN0aW9uLlxuICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcbiAgICAgIHJldHVybiBuZXh0O1xuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07XG4gICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGl0ZXJhYmxlLm5leHQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gaXRlcmFibGU7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuZXh0ID0gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgaXRlcmFibGUubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSB7XG4gICAgICAgICAgICAgIG5leHQudmFsdWUgPSBpdGVyYWJsZVtpXTtcbiAgICAgICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5leHQudmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBuZXh0Lm5leHQgPSBuZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJldHVybiBhbiBpdGVyYXRvciB3aXRoIG5vIHZhbHVlcy5cbiAgICByZXR1cm4geyBuZXh0OiBkb25lUmVzdWx0IH07XG4gIH1cbiAgZXhwb3J0cy52YWx1ZXMgPSB2YWx1ZXM7XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH1cblxuICBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcblxuICAgIHJlc2V0OiBmdW5jdGlvbihza2lwVGVtcFJlc2V0KSB7XG4gICAgICB0aGlzLnByZXYgPSAwO1xuICAgICAgdGhpcy5uZXh0ID0gMDtcbiAgICAgIC8vIFJlc2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuZG9uZSA9IGZhbHNlO1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcblxuICAgICAgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSk7XG5cbiAgICAgIGlmICghc2tpcFRlbXBSZXNldCkge1xuICAgICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgICAvLyBOb3Qgc3VyZSBhYm91dCB0aGUgb3B0aW1hbCBvcmRlciBvZiB0aGVzZSBjb25kaXRpb25zOlxuICAgICAgICAgIGlmIChuYW1lLmNoYXJBdCgwKSA9PT0gXCJ0XCIgJiZcbiAgICAgICAgICAgICAgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiZcbiAgICAgICAgICAgICAgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSkge1xuICAgICAgICAgICAgdGhpc1tuYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuXG4gICAgICB2YXIgcm9vdEVudHJ5ID0gdGhpcy50cnlFbnRyaWVzWzBdO1xuICAgICAgdmFyIHJvb3RSZWNvcmQgPSByb290RW50cnkuY29tcGxldGlvbjtcbiAgICAgIGlmIChyb290UmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByb290UmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuXG4gICAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uKGV4Y2VwdGlvbikge1xuICAgICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgICB0aHJvdyBleGNlcHRpb247XG4gICAgICB9XG5cbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcbiAgICAgIGZ1bmN0aW9uIGhhbmRsZShsb2MsIGNhdWdodCkge1xuICAgICAgICByZWNvcmQudHlwZSA9IFwidGhyb3dcIjtcbiAgICAgICAgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbjtcbiAgICAgICAgY29udGV4dC5uZXh0ID0gbG9jO1xuXG4gICAgICAgIGlmIChjYXVnaHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGlzcGF0Y2hlZCBleGNlcHRpb24gd2FzIGNhdWdodCBieSBhIGNhdGNoIGJsb2NrLFxuICAgICAgICAgIC8vIHRoZW4gbGV0IHRoYXQgY2F0Y2ggYmxvY2sgaGFuZGxlIHRoZSBleGNlcHRpb24gbm9ybWFsbHkuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAhISBjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSBcInJvb3RcIikge1xuICAgICAgICAgIC8vIEV4Y2VwdGlvbiB0aHJvd24gb3V0c2lkZSBvZiBhbnkgdHJ5IGJsb2NrIHRoYXQgY291bGQgaGFuZGxlXG4gICAgICAgICAgLy8gaXQsIHNvIHNldCB0aGUgY29tcGxldGlvbiB2YWx1ZSBvZiB0aGUgZW50aXJlIGZ1bmN0aW9uIHRvXG4gICAgICAgICAgLy8gdGhyb3cgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXR1cm4gaGFuZGxlKFwiZW5kXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKTtcbiAgICAgICAgICB2YXIgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFicnVwdDogZnVuY3Rpb24odHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiZcbiAgICAgICAgICAgIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSAmJlxuICAgICAgICAgICh0eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICAgdHlwZSA9PT0gXCJjb250aW51ZVwiKSAmJlxuICAgICAgICAgIGZpbmFsbHlFbnRyeS50cnlMb2MgPD0gYXJnICYmXG4gICAgICAgICAgYXJnIDw9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgIC8vIElnbm9yZSB0aGUgZmluYWxseSBlbnRyeSBpZiBjb250cm9sIGlzIG5vdCBqdW1waW5nIHRvIGFcbiAgICAgICAgLy8gbG9jYXRpb24gb3V0c2lkZSB0aGUgdHJ5L2NhdGNoIGJsb2NrLlxuICAgICAgICBmaW5hbGx5RW50cnkgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTtcbiAgICAgIHJlY29yZC50eXBlID0gdHlwZTtcbiAgICAgIHJlY29yZC5hcmcgPSBhcmc7XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkpIHtcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2M7XG4gICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG5cbiAgICBjb21wbGV0ZTogZnVuY3Rpb24ocmVjb3JkLCBhZnRlckxvYykge1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICByZWNvcmQudHlwZSA9PT0gXCJjb250aW51ZVwiKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IHJlY29yZC5hcmc7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInJldHVyblwiKSB7XG4gICAgICAgIHRoaXMucnZhbCA9IHRoaXMuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICB0aGlzLm5leHQgPSBcImVuZFwiO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIiAmJiBhZnRlckxvYykge1xuICAgICAgICB0aGlzLm5leHQgPSBhZnRlckxvYztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfSxcblxuICAgIGZpbmlzaDogZnVuY3Rpb24oZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSB7XG4gICAgICAgICAgdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyk7XG4gICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbih0cnlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgdmFyIHRocm93biA9IHJlY29yZC5hcmc7XG4gICAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRocm93bjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUaGUgY29udGV4dC5jYXRjaCBtZXRob2QgbXVzdCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgbG9jYXRpb25cbiAgICAgIC8vIGFyZ3VtZW50IHRoYXQgY29ycmVzcG9uZHMgdG8gYSBrbm93biBjYXRjaCBibG9jay5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTtcbiAgICB9LFxuXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24oaXRlcmFibGUsIHJlc3VsdE5hbWUsIG5leHRMb2MpIHtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgIC8vIERlbGliZXJhdGVseSBmb3JnZXQgdGhlIGxhc3Qgc2VudCB2YWx1ZSBzbyB0aGF0IHdlIGRvbid0XG4gICAgICAgIC8vIGFjY2lkZW50YWxseSBwYXNzIGl0IG9uIHRvIHRoZSBkZWxlZ2F0ZS5cbiAgICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cbiAgfTtcblxuICAvLyBSZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhpcyBzY3JpcHQgaXMgZXhlY3V0aW5nIGFzIGEgQ29tbW9uSlMgbW9kdWxlXG4gIC8vIG9yIG5vdCwgcmV0dXJuIHRoZSBydW50aW1lIG9iamVjdCBzbyB0aGF0IHdlIGNhbiBkZWNsYXJlIHRoZSB2YXJpYWJsZVxuICAvLyByZWdlbmVyYXRvclJ1bnRpbWUgaW4gdGhlIG91dGVyIHNjb3BlLCB3aGljaCBhbGxvd3MgdGhpcyBtb2R1bGUgdG8gYmVcbiAgLy8gaW5qZWN0ZWQgZWFzaWx5IGJ5IGBiaW4vcmVnZW5lcmF0b3IgLS1pbmNsdWRlLXJ1bnRpbWUgc2NyaXB0LmpzYC5cbiAgcmV0dXJuIGV4cG9ydHM7XG5cbn0oXG4gIC8vIElmIHRoaXMgc2NyaXB0IGlzIGV4ZWN1dGluZyBhcyBhIENvbW1vbkpTIG1vZHVsZSwgdXNlIG1vZHVsZS5leHBvcnRzXG4gIC8vIGFzIHRoZSByZWdlbmVyYXRvclJ1bnRpbWUgbmFtZXNwYWNlLiBPdGhlcndpc2UgY3JlYXRlIGEgbmV3IGVtcHR5XG4gIC8vIG9iamVjdC4gRWl0aGVyIHdheSwgdGhlIHJlc3VsdGluZyBvYmplY3Qgd2lsbCBiZSB1c2VkIHRvIGluaXRpYWxpemVcbiAgLy8gdGhlIHJlZ2VuZXJhdG9yUnVudGltZSB2YXJpYWJsZSBhdCB0aGUgdG9wIG9mIHRoaXMgZmlsZS5cbiAgdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiA/IG1vZHVsZS5leHBvcnRzIDoge31cbikpO1xuXG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgLy8gVGhpcyBtb2R1bGUgc2hvdWxkIG5vdCBiZSBydW5uaW5nIGluIHN0cmljdCBtb2RlLCBzbyB0aGUgYWJvdmVcbiAgLy8gYXNzaWdubWVudCBzaG91bGQgYWx3YXlzIHdvcmsgdW5sZXNzIHNvbWV0aGluZyBpcyBtaXNjb25maWd1cmVkLiBKdXN0XG4gIC8vIGluIGNhc2UgcnVudGltZS5qcyBhY2NpZGVudGFsbHkgcnVucyBpbiBzdHJpY3QgbW9kZSwgaW4gbW9kZXJuIGVuZ2luZXNcbiAgLy8gd2UgY2FuIGV4cGxpY2l0bHkgYWNjZXNzIGdsb2JhbFRoaXMuIEluIG9sZGVyIGVuZ2luZXMgd2UgY2FuIGVzY2FwZVxuICAvLyBzdHJpY3QgbW9kZSB1c2luZyBhIGdsb2JhbCBGdW5jdGlvbiBjYWxsLiBUaGlzIGNvdWxkIGNvbmNlaXZhYmx5IGZhaWxcbiAgLy8gaWYgYSBDb250ZW50IFNlY3VyaXR5IFBvbGljeSBmb3JiaWRzIHVzaW5nIEZ1bmN0aW9uLCBidXQgaW4gdGhhdCBjYXNlXG4gIC8vIHRoZSBwcm9wZXIgc29sdXRpb24gaXMgdG8gZml4IHRoZSBhY2NpZGVudGFsIHN0cmljdCBtb2RlIHByb2JsZW0uIElmXG4gIC8vIHlvdSd2ZSBtaXNjb25maWd1cmVkIHlvdXIgYnVuZGxlciB0byBmb3JjZSBzdHJpY3QgbW9kZSBhbmQgYXBwbGllZCBhXG4gIC8vIENTUCB0byBmb3JiaWQgRnVuY3Rpb24sIGFuZCB5b3UncmUgbm90IHdpbGxpbmcgdG8gZml4IGVpdGhlciBvZiB0aG9zZVxuICAvLyBwcm9ibGVtcywgcGxlYXNlIGRldGFpbCB5b3VyIHVuaXF1ZSBwcmVkaWNhbWVudCBpbiBhIEdpdEh1YiBpc3N1ZS5cbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiIsIi8qKlxuICogc3Bhd25Xb3JrZXJcbiAqXG4gKiBAbmFtZSBzcGF3bldvcmtlclxuICogQGZ1bmN0aW9uIGNyZWF0ZSBhIG5ldyBXb3JrZXIgaW4gYnJvd3NlclxuICogQGFjY2VzcyBwdWJsaWNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSAoeyB3b3JrZXJQYXRoLCB3b3JrZXJCbG9iVVJMIH0pID0+IHtcbiAgbGV0IHdvcmtlcjtcbiAgaWYgKEJsb2IgJiYgVVJMICYmIHdvcmtlckJsb2JVUkwpIHtcbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2BpbXBvcnRTY3JpcHRzKFwiJHt3b3JrZXJQYXRofVwiKTtgXSwge1xuICAgICAgdHlwZTogJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnLFxuICAgIH0pO1xuICAgIHdvcmtlciA9IG5ldyBXb3JrZXIoVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKSk7XG4gIH0gZWxzZSB7XG4gICAgd29ya2VyID0gbmV3IFdvcmtlcih3b3JrZXJQYXRoKTtcbiAgfVxuXG4gIHJldHVybiB3b3JrZXI7XG59O1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztmdW5jdGlvbiBmKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDswPGM7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZigwPGcoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIGgoYSl7cmV0dXJuIDA9PT1hLmxlbmd0aD9udWxsOmFbMF19ZnVuY3Rpb24gayhhKXtpZigwPT09YS5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGI9YVswXSxjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGgsdz1lPj4+MTtkPHc7KXt2YXIgbT0yKihkKzEpLTEsQz1hW21dLG49bSsxLHg9YVtuXTtpZigwPmcoQyxjKSluPGUmJjA+Zyh4LEMpPyhhW2RdPXgsYVtuXT1jLGQ9bik6KGFbZF09QyxhW21dPWMsZD1tKTtlbHNlIGlmKG48ZSYmMD5nKHgsYykpYVtkXT14LGFbbl09YyxkPW47ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fXZhciByPVtdLHQ9W10sdT0xLHY9bnVsbCx5PTMsej0hMSxBPSExLEI9ITEsRD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Om51bGwsRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpudWxsLEY9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBzZXRJbW1lZGlhdGU/c2V0SW1tZWRpYXRlOm51bGw7XG5cInVuZGVmaW5lZFwiIT09dHlwZW9mIG5hdmlnYXRvciYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcmJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZy5iaW5kKG5hdmlnYXRvci5zY2hlZHVsaW5nKTtmdW5jdGlvbiBHKGEpe2Zvcih2YXIgYj1oKHQpO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spayh0KTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKWsodCksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxmKHIsYik7ZWxzZSBicmVhaztiPWgodCl9fWZ1bmN0aW9uIEgoYSl7Qj0hMTtHKGEpO2lmKCFBKWlmKG51bGwhPT1oKHIpKUE9ITAsSShKKTtlbHNle3ZhciBiPWgodCk7bnVsbCE9PWImJksoSCxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBKKGEsYil7QT0hMTtCJiYoQj0hMSxFKEwpLEw9LTEpO3o9ITA7dmFyIGM9eTt0cnl7RyhiKTtmb3Iodj1oKHIpO251bGwhPT12JiYoISh2LmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhTSgpKTspe3ZhciBkPXYuY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3YuY2FsbGJhY2s9bnVsbDt5PXYucHJpb3JpdHlMZXZlbDt2YXIgZT1kKHYuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT92LmNhbGxiYWNrPWU6dj09PWgocikmJmsocik7RyhiKX1lbHNlIGsocik7dj1oKHIpfWlmKG51bGwhPT12KXZhciB3PSEwO2Vsc2V7dmFyIG09aCh0KTtudWxsIT09bSYmSyhILG0uc3RhcnRUaW1lLWIpO3c9ITF9cmV0dXJuIHd9ZmluYWxseXt2PW51bGwseT1jLHo9ITF9fXZhciBOPSExLE89bnVsbCxMPS0xLFA9NSxRPS0xO1xuZnVuY3Rpb24gTSgpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpLVE8UD8hMTohMH1mdW5jdGlvbiBSKCl7aWYobnVsbCE9PU8pe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7UT1hO3ZhciBiPSEwO3RyeXtiPU8oITAsYSl9ZmluYWxseXtiP1MoKTooTj0hMSxPPW51bGwpfX1lbHNlIE49ITF9dmFyIFM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEYpUz1mdW5jdGlvbigpe0YoUil9O2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1SO1M9ZnVuY3Rpb24oKXtVLnBvc3RNZXNzYWdlKG51bGwpfX1lbHNlIFM9ZnVuY3Rpb24oKXtEKFIsMCl9O2Z1bmN0aW9uIEkoYSl7Tz1hO058fChOPSEwLFMoKSl9ZnVuY3Rpb24gSyhhLGIpe0w9RChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfVxuZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe0F8fHp8fChBPSEwLEkoSikpfTtcbmV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOlA9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4geX07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBoKHIpfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKHkpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPXl9dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXt5PWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtcbmV4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPXk7eT1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7eT1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOnUrKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLGYodCxhKSxudWxsPT09aChyKSYmYT09PWgodCkmJihCPyhFKEwpLEw9LTEpOkI9ITAsSyhILGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxmKHIsYSksQXx8enx8KEE9ITAsSShKKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9TTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj15O3JldHVybiBmdW5jdGlvbigpe3ZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXt5PWN9fX07XG4iLCJjb25zdCBjcmVhdGVXb3JrZXIgPSByZXF1aXJlKCcuL2NyZWF0ZVdvcmtlcicpO1xuXG5jb25zdCByZWNvZ25pemUgPSBhc3luYyAoaW1hZ2UsIGxhbmdzLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHdvcmtlciA9IGF3YWl0IGNyZWF0ZVdvcmtlcihvcHRpb25zKTtcbiAgYXdhaXQgd29ya2VyLmxvYWRMYW5ndWFnZShsYW5ncyk7XG4gIGF3YWl0IHdvcmtlci5pbml0aWFsaXplKGxhbmdzKTtcbiAgcmV0dXJuIHdvcmtlci5yZWNvZ25pemUoaW1hZ2UpXG4gICAgLmZpbmFsbHkoYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgd29ya2VyLnRlcm1pbmF0ZSgpO1xuICAgIH0pO1xufTtcblxuY29uc3QgZGV0ZWN0ID0gYXN5bmMgKGltYWdlLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHdvcmtlciA9IGF3YWl0IGNyZWF0ZVdvcmtlcihvcHRpb25zKTtcbiAgYXdhaXQgd29ya2VyLmxvYWRMYW5ndWFnZSgnb3NkJyk7XG4gIGF3YWl0IHdvcmtlci5pbml0aWFsaXplKCdvc2QnKTtcbiAgcmV0dXJuIHdvcmtlci5kZXRlY3QoaW1hZ2UpXG4gICAgLmZpbmFsbHkoYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgd29ya2VyLnRlcm1pbmF0ZSgpO1xuICAgIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlY29nbml6ZSxcbiAgZGV0ZWN0LFxufTtcbiIsImNvbnN0IE9FTSA9IHJlcXVpcmUoJy4vT0VNJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZWZhdWx0T0VNOiBPRU0uREVGQVVMVCxcbn07XG4iLCJsZXQgbG9nZ2luZyA9IGZhbHNlO1xuXG5leHBvcnRzLmxvZ2dpbmcgPSBsb2dnaW5nO1xuXG5leHBvcnRzLnNldExvZ2dpbmcgPSAoX2xvZ2dpbmcpID0+IHtcbiAgbG9nZ2luZyA9IF9sb2dnaW5nO1xufTtcblxuZXhwb3J0cy5sb2cgPSAoLi4uYXJncykgPT4gKGxvZ2dpbmcgPyBjb25zb2xlLmxvZy5hcHBseSh0aGlzLCBhcmdzKSA6IG51bGwpO1xuIiwiY29uc3QgZ2V0SWQgPSByZXF1aXJlKCcuL3V0aWxzL2dldElkJyk7XG5cbmxldCBqb2JDb3VudGVyID0gMDtcblxubW9kdWxlLmV4cG9ydHMgPSAoe1xuICBpZDogX2lkLFxuICBhY3Rpb24sXG4gIHBheWxvYWQgPSB7fSxcbn0pID0+IHtcbiAgbGV0IGlkID0gX2lkO1xuICBpZiAodHlwZW9mIGlkID09PSAndW5kZWZpbmVkJykge1xuICAgIGlkID0gZ2V0SWQoJ0pvYicsIGpvYkNvdW50ZXIpO1xuICAgIGpvYkNvdW50ZXIgKz0gMTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgYWN0aW9uLFxuICAgIHBheWxvYWQsXG4gIH07XG59O1xuIiwiLyoqXG4gKiB0ZXJtaW5hdGVXb3JrZXJcbiAqXG4gKiBAbmFtZSB0ZXJtaW5hdGVXb3JrZXJcbiAqIEBmdW5jdGlvbiB0ZXJtaW5hdGUgd29ya2VyXG4gKiBAYWNjZXNzIHB1YmxpY1xuICovXG5tb2R1bGUuZXhwb3J0cyA9ICh3b3JrZXIpID0+IHtcbiAgd29ya2VyLnRlcm1pbmF0ZSgpO1xufTtcbiIsIi8qXG4gKiBPRU0gPSBPQ1IgRW5naW5lIE1vZGUsIGFuZCB0aGVyZSBhcmUgNCBwb3NzaWJsZSBtb2Rlcy5cbiAqXG4gKiBCeSBkZWZhdWx0IHRlc3NlcmFjdC5qcyB1c2VzIExTVE1fT05MWSBtb2RlLlxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFRFU1NFUkFDVF9PTkxZOiAwLFxuICBMU1RNX09OTFk6IDEsXG4gIFRFU1NFUkFDVF9MU1RNX0NPTUJJTkVEOiAyLFxuICBERUZBVUxUOiAzLFxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIHJlYWRGcm9tQmxvYk9yRmlsZVxuICpcbiAqIEBuYW1lIHJlYWRGcm9tQmxvYk9yRmlsZVxuICogQGZ1bmN0aW9uXG4gKiBAYWNjZXNzIHByaXZhdGVcbiAqL1xuY29uc3QgcmVhZEZyb21CbG9iT3JGaWxlID0gKGJsb2IpID0+IChcbiAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIGZpbGVSZWFkZXIub25sb2FkID0gKCkgPT4ge1xuICAgICAgcmVzb2x2ZShmaWxlUmVhZGVyLnJlc3VsdCk7XG4gICAgfTtcbiAgICBmaWxlUmVhZGVyLm9uZXJyb3IgPSAoeyB0YXJnZXQ6IHsgZXJyb3I6IHsgY29kZSB9IH0gfSkgPT4ge1xuICAgICAgcmVqZWN0KEVycm9yKGBGaWxlIGNvdWxkIG5vdCBiZSByZWFkISBDb2RlPSR7Y29kZX1gKSk7XG4gICAgfTtcbiAgICBmaWxlUmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGJsb2IpO1xuICB9KVxuKTtcblxuLyoqXG4gKiBsb2FkSW1hZ2VcbiAqXG4gKiBAbmFtZSBsb2FkSW1hZ2VcbiAqIEBmdW5jdGlvbiBsb2FkIGltYWdlIGZyb20gZGlmZmVyZW50IHNvdXJjZVxuICogQGFjY2VzcyBwcml2YXRlXG4gKi9cbmNvbnN0IGxvYWRJbWFnZSA9IGFzeW5jIChpbWFnZSkgPT4ge1xuICBsZXQgZGF0YSA9IGltYWdlO1xuICBpZiAodHlwZW9mIGltYWdlID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiAndW5kZWZpbmVkJztcbiAgfVxuXG4gIGlmICh0eXBlb2YgaW1hZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gQmFzZTY0IEltYWdlXG4gICAgaWYgKC9kYXRhOmltYWdlXFwvKFthLXpBLVpdKik7YmFzZTY0LChbXlwiXSopLy50ZXN0KGltYWdlKSkge1xuICAgICAgZGF0YSA9IGF0b2IoaW1hZ2Uuc3BsaXQoJywnKVsxXSlcbiAgICAgICAgLnNwbGl0KCcnKVxuICAgICAgICAubWFwKChjKSA9PiBjLmNoYXJDb2RlQXQoMCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCByZXNwID0gYXdhaXQgZmV0Y2goaW1hZ2UpO1xuICAgICAgZGF0YSA9IGF3YWl0IHJlc3AuYXJyYXlCdWZmZXIoKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZW9mIEhUTUxFbGVtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBpbWFnZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgaWYgKGltYWdlLnRhZ05hbWUgPT09ICdJTUcnKSB7XG4gICAgICBkYXRhID0gYXdhaXQgbG9hZEltYWdlKGltYWdlLnNyYyk7XG4gICAgfVxuICAgIGlmIChpbWFnZS50YWdOYW1lID09PSAnVklERU8nKSB7XG4gICAgICBkYXRhID0gYXdhaXQgbG9hZEltYWdlKGltYWdlLnBvc3Rlcik7XG4gICAgfVxuICAgIGlmIChpbWFnZS50YWdOYW1lID09PSAnQ0FOVkFTJykge1xuICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgaW1hZ2UudG9CbG9iKGFzeW5jIChibG9iKSA9PiB7XG4gICAgICAgICAgZGF0YSA9IGF3YWl0IHJlYWRGcm9tQmxvYk9yRmlsZShibG9iKTtcbiAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiBPZmZzY3JlZW5DYW52YXMgIT09ICd1bmRlZmluZWQnICYmIGltYWdlIGluc3RhbmNlb2YgT2Zmc2NyZWVuQ2FudmFzKSB7XG4gICAgY29uc3QgYmxvYiA9IGF3YWl0IGltYWdlLmNvbnZlcnRUb0Jsb2IoKTtcbiAgICBkYXRhID0gYXdhaXQgcmVhZEZyb21CbG9iT3JGaWxlKGJsb2IpO1xuICB9IGVsc2UgaWYgKGltYWdlIGluc3RhbmNlb2YgRmlsZSB8fCBpbWFnZSBpbnN0YW5jZW9mIEJsb2IpIHtcbiAgICBkYXRhID0gYXdhaXQgcmVhZEZyb21CbG9iT3JGaWxlKGltYWdlKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVWludDhBcnJheShkYXRhKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gbG9hZEltYWdlO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgZGVmYXVsdEF0dHJpYnV0ZXMgPSB7XG4gIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gIHdpZHRoOiAyNCxcbiAgaGVpZ2h0OiAyNCxcbiAgdmlld0JveDogXCIwIDAgMjQgMjRcIixcbiAgZmlsbDogXCJub25lXCIsXG4gIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcbiAgc3Ryb2tlV2lkdGg6IDIsXG4gIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcbiAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIlxufTtcblxuZXhwb3J0IHsgZGVmYXVsdEF0dHJpYnV0ZXMgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdEF0dHJpYnV0ZXMuanMubWFwXG4iLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IHsgZm9yd2FyZFJlZiwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWZhdWx0QXR0cmlidXRlcyBmcm9tICcuL2RlZmF1bHRBdHRyaWJ1dGVzLmpzJztcblxuY29uc3QgdG9LZWJhYkNhc2UgPSAoc3RyaW5nKSA9PiBzdHJpbmcucmVwbGFjZSgvKFthLXowLTldKShbQS1aXSkvZywgXCIkMS0kMlwiKS50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbmNvbnN0IGNyZWF0ZUx1Y2lkZUljb24gPSAoaWNvbk5hbWUsIGljb25Ob2RlKSA9PiB7XG4gIGNvbnN0IENvbXBvbmVudCA9IGZvcndhcmRSZWYoXG4gICAgKHsgY29sb3IgPSBcImN1cnJlbnRDb2xvclwiLCBzaXplID0gMjQsIHN0cm9rZVdpZHRoID0gMiwgYWJzb2x1dGVTdHJva2VXaWR0aCwgY2xhc3NOYW1lID0gXCJcIiwgY2hpbGRyZW4sIC4uLnJlc3QgfSwgcmVmKSA9PiBjcmVhdGVFbGVtZW50KFxuICAgICAgXCJzdmdcIixcbiAgICAgIHtcbiAgICAgICAgcmVmLFxuICAgICAgICAuLi5kZWZhdWx0QXR0cmlidXRlcyxcbiAgICAgICAgd2lkdGg6IHNpemUsXG4gICAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgICAgc3Ryb2tlOiBjb2xvcixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IGFic29sdXRlU3Ryb2tlV2lkdGggPyBOdW1iZXIoc3Ryb2tlV2lkdGgpICogMjQgLyBOdW1iZXIoc2l6ZSkgOiBzdHJva2VXaWR0aCxcbiAgICAgICAgY2xhc3NOYW1lOiBbXCJsdWNpZGVcIiwgYGx1Y2lkZS0ke3RvS2ViYWJDYXNlKGljb25OYW1lKX1gLCBjbGFzc05hbWVdLmpvaW4oXCIgXCIpLFxuICAgICAgICAuLi5yZXN0XG4gICAgICB9LFxuICAgICAgW1xuICAgICAgICAuLi5pY29uTm9kZS5tYXAoKFt0YWcsIGF0dHJzXSkgPT4gY3JlYXRlRWxlbWVudCh0YWcsIGF0dHJzKSksXG4gICAgICAgIC4uLkFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgICBdXG4gICAgKVxuICApO1xuICBDb21wb25lbnQuZGlzcGxheU5hbWUgPSBgJHtpY29uTmFtZX1gO1xuICByZXR1cm4gQ29tcG9uZW50O1xufTtcblxuZXhwb3J0IHsgY3JlYXRlTHVjaWRlSWNvbiBhcyBkZWZhdWx0LCB0b0tlYmFiQ2FzZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlTHVjaWRlSWNvbi5qcy5tYXBcbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgU3BhcmtsZXMgPSBjcmVhdGVMdWNpZGVJY29uKFwiU3BhcmtsZXNcIiwgW1xuICBbXG4gICAgXCJwYXRoXCIsXG4gICAge1xuICAgICAgZDogXCJtMTIgMy0xLjkxMiA1LjgxM2EyIDIgMCAwIDEtMS4yNzUgMS4yNzVMMyAxMmw1LjgxMyAxLjkxMmEyIDIgMCAwIDEgMS4yNzUgMS4yNzVMMTIgMjFsMS45MTItNS44MTNhMiAyIDAgMCAxIDEuMjc1LTEuMjc1TDIxIDEybC01LjgxMy0xLjkxMmEyIDIgMCAwIDEtMS4yNzUtMS4yNzVMMTIgM1pcIixcbiAgICAgIGtleTogXCIxN3U0em5cIlxuICAgIH1cbiAgXSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTUgM3Y0XCIsIGtleTogXCJia2xtbm5cIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTE5IDE3djRcIiwga2V5OiBcImlpbWwxN1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMyA1aDRcIiwga2V5OiBcIm5lbTRqMVwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTcgMTloNFwiLCBrZXk6IFwibGJleDdwXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBTcGFya2xlcyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFya2xlcy5qcy5tYXBcbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgTWF4aW1pemUyID0gY3JlYXRlTHVjaWRlSWNvbihcIk1heGltaXplMlwiLCBbXG4gIFtcInBvbHlsaW5lXCIsIHsgcG9pbnRzOiBcIjE1IDMgMjEgMyAyMSA5XCIsIGtleTogXCJtem55YWRcIiB9XSxcbiAgW1wicG9seWxpbmVcIiwgeyBwb2ludHM6IFwiOSAyMSAzIDIxIDMgMTVcIiwga2V5OiBcIjFhdm4xaVwiIH1dLFxuICBbXCJsaW5lXCIsIHsgeDE6IFwiMjFcIiwgeDI6IFwiMTRcIiwgeTE6IFwiM1wiLCB5MjogXCIxMFwiLCBrZXk6IFwib3RhN21uXCIgfV0sXG4gIFtcImxpbmVcIiwgeyB4MTogXCIzXCIsIHgyOiBcIjEwXCIsIHkxOiBcIjIxXCIsIHkyOiBcIjE0XCIsIGtleTogXCIxYXRsMHJcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IE1heGltaXplMiBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXhpbWl6ZS0yLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBNaW5pbWl6ZTIgPSBjcmVhdGVMdWNpZGVJY29uKFwiTWluaW1pemUyXCIsIFtcbiAgW1wicG9seWxpbmVcIiwgeyBwb2ludHM6IFwiNCAxNCAxMCAxNCAxMCAyMFwiLCBrZXk6IFwiMTFrZm5yXCIgfV0sXG4gIFtcInBvbHlsaW5lXCIsIHsgcG9pbnRzOiBcIjIwIDEwIDE0IDEwIDE0IDRcIiwga2V5OiBcInJsbXNjZVwiIH1dLFxuICBbXCJsaW5lXCIsIHsgeDE6IFwiMTRcIiwgeDI6IFwiMjFcIiwgeTE6IFwiMTBcIiwgeTI6IFwiM1wiLCBrZXk6IFwibzVsYWZ6XCIgfV0sXG4gIFtcImxpbmVcIiwgeyB4MTogXCIzXCIsIHgyOiBcIjEwXCIsIHkxOiBcIjIxXCIsIHkyOiBcIjE0XCIsIGtleTogXCIxYXRsMHJcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IE1pbmltaXplMiBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1taW5pbWl6ZS0yLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBYID0gY3JlYXRlTHVjaWRlSWNvbihcIlhcIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMTggNiA2IDE4XCIsIGtleTogXCIxYmw1ZjhcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwibTYgNiAxMiAxMlwiLCBrZXk6IFwiZDhiazZ2XCIgfV1cbl0pO1xuXG5leHBvcnQgeyBYIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXguanMubWFwXG4iLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFJlZnJlc2hDdyA9IGNyZWF0ZUx1Y2lkZUljb24oXCJSZWZyZXNoQ3dcIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMyAxMmE5IDkgMCAwIDEgOS05IDkuNzUgOS43NSAwIDAgMSA2Ljc0IDIuNzRMMjEgOFwiLCBrZXk6IFwidjloNXZjXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMSAzdjVoLTVcIiwga2V5OiBcIjFxN3RvMFwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMjEgMTJhOSA5IDAgMCAxLTkgOSA5Ljc1IDkuNzUgMCAwIDEtNi43NC0yLjc0TDMgMTZcIiwga2V5OiBcIjN1aWZsM1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNOCAxNkgzdjVcIiwga2V5OiBcIjFjdjY3OFwiIH1dXG5dKTtcblxuZXhwb3J0IHsgUmVmcmVzaEN3IGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZnJlc2gtY3cuanMubWFwXG4iLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IENvcHkgPSBjcmVhdGVMdWNpZGVJY29uKFwiQ29weVwiLCBbXG4gIFtcInJlY3RcIiwgeyB3aWR0aDogXCIxNFwiLCBoZWlnaHQ6IFwiMTRcIiwgeDogXCI4XCIsIHk6IFwiOFwiLCByeDogXCIyXCIsIHJ5OiBcIjJcIiwga2V5OiBcIjE3anllYVwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNNCAxNmMtMS4xIDAtMi0uOS0yLTJWNGMwLTEuMS45LTIgMi0yaDEwYzEuMSAwIDIgLjkgMiAyXCIsIGtleTogXCJ6aXg5dWZcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IENvcHkgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29weS5qcy5tYXBcbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgU2VuZCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJTZW5kXCIsIFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwibTIyIDItNyAyMC00LTktOS00WlwiLCBrZXk6IFwiMXEzdmdnXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMiAyIDExIDEzXCIsIGtleTogXCJuemJxZWZcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IFNlbmQgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZC5qcy5tYXBcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBNZXNzYWdlQ2lyY2xlLCBYLCBNaW5pbWl6ZTIsIE1heGltaXplMiwgU3BhcmtsZXMsIFNlbmQsIENvcHksIERvd25sb2FkLCBSZWZyZXNoQ3cgfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG5pbnRlcmZhY2UgRmxvYXRpbmdBSVByb3BzIHtcbiAgaXNWaXNpYmxlOiBib29sZWFuO1xuICBvbkNsb3NlOiAoKSA9PiB2b2lkO1xuICBwYWdlQ29udGVudD86IHN0cmluZztcbiAgcGFnZVRpdGxlPzogc3RyaW5nO1xuICBwYWdlVXJsPzogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgTWVzc2FnZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHR5cGU6ICd1c2VyJyB8ICdhaSc7XG4gIGNvbnRlbnQ6IHN0cmluZztcbiAgdGltZXN0YW1wOiBEYXRlO1xufVxuXG5jb25zdCBGbG9hdGluZ0FJOiBSZWFjdC5GQzxGbG9hdGluZ0FJUHJvcHM+ID0gKHsgXG4gIGlzVmlzaWJsZSwgXG4gIG9uQ2xvc2UsIFxuICBwYWdlQ29udGVudCA9ICcnLCBcbiAgcGFnZVRpdGxlID0gJycsIFxuICBwYWdlVXJsID0gJycgXG59KSA9PiB7XG4gIGNvbnN0IFtpc01pbmltaXplZCwgc2V0SXNNaW5pbWl6ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbbWVzc2FnZXMsIHNldE1lc3NhZ2VzXSA9IHVzZVN0YXRlPE1lc3NhZ2VbXT4oW10pO1xuICBjb25zdCBbaW5wdXRWYWx1ZSwgc2V0SW5wdXRWYWx1ZV0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZWxlY3RlZFByb21wdCwgc2V0U2VsZWN0ZWRQcm9tcHRdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IG1lc3NhZ2VzRW5kUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBxdWlja1Byb21wdHMgPSBbXG4gICAge1xuICAgICAgaWQ6ICdzdW1tYXJpemUnLFxuICAgICAgdGl0bGU6ICdTdW1tYXJpemUgUGFnZScsXG4gICAgICBkZXNjcmlwdGlvbjogJ0dldCBhIHF1aWNrIHN1bW1hcnkgb2YgdGhpcyB3ZWJwYWdlJyxcbiAgICAgIHByb21wdDogJ1BsZWFzZSBwcm92aWRlIGEgY29uY2lzZSBzdW1tYXJ5IG9mIHRoaXMgd2VicGFnZSBpbiAyLTMgc2VudGVuY2VzLicsXG4gICAgICBpY29uOiAn8J+ThCdcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAnZXhwbGFpbicsXG4gICAgICB0aXRsZTogJ0V4cGxhaW4gU2ltcGx5JyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnRXhwbGFpbiBjb21wbGV4IGNvbmNlcHRzIGluIHNpbXBsZSB0ZXJtcycsXG4gICAgICBwcm9tcHQ6ICdQbGVhc2UgZXhwbGFpbiB0aGUgbWFpbiBjb25jZXB0cyBvbiB0aGlzIHBhZ2UgaW4gc2ltcGxlLCBlYXN5LXRvLXVuZGVyc3RhbmQgbGFuZ3VhZ2UuJyxcbiAgICAgIGljb246ICfwn5KhJ1xuICAgIH0sXG4gICAge1xuICAgICAgaWQ6ICdrZXlwb2ludHMnLFxuICAgICAgdGl0bGU6ICdLZXkgUG9pbnRzJyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnRXh0cmFjdCB0aGUgbW9zdCBpbXBvcnRhbnQgcG9pbnRzJyxcbiAgICAgIHByb21wdDogJ1doYXQgYXJlIHRoZSBrZXkgdGFrZWF3YXlzIGFuZCBtYWluIHBvaW50cyBmcm9tIHRoaXMgY29udGVudD8nLFxuICAgICAgaWNvbjogJ/Cfjq8nXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogJ3F1ZXN0aW9ucycsXG4gICAgICB0aXRsZTogJ0dlbmVyYXRlIFF1ZXN0aW9ucycsXG4gICAgICBkZXNjcmlwdGlvbjogJ0NyZWF0ZSBxdWVzdGlvbnMgZm9yIGRlZXBlciB1bmRlcnN0YW5kaW5nJyxcbiAgICAgIHByb21wdDogJ0dlbmVyYXRlIDMtNSB0aG91Z2h0ZnVsIHF1ZXN0aW9ucyBhYm91dCB0aGlzIGNvbnRlbnQgdGhhdCB3b3VsZCBoZWxwIHNvbWVvbmUgdW5kZXJzdGFuZCBpdCBiZXR0ZXIuJyxcbiAgICAgIGljb246ICfinZMnXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogJ2FjdGlvbmFibGUnLFxuICAgICAgdGl0bGU6ICdBY3Rpb24gSXRlbXMnLFxuICAgICAgZGVzY3JpcHRpb246ICdFeHRyYWN0IGFjdGlvbmFibGUgaW5zaWdodHMnLFxuICAgICAgcHJvbXB0OiAnV2hhdCBhY3Rpb25hYmxlIHN0ZXBzIG9yIHJlY29tbWVuZGF0aW9ucyBjYW4gYmUgZGVyaXZlZCBmcm9tIHRoaXMgY29udGVudD8nLFxuICAgICAgaWNvbjogJ+KchSdcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAncmVzZWFyY2gnLFxuICAgICAgdGl0bGU6ICdSZXNlYXJjaCBUb3BpY3MnLFxuICAgICAgZGVzY3JpcHRpb246ICdTdWdnZXN0IHJlbGF0ZWQgcmVzZWFyY2ggdG9waWNzJyxcbiAgICAgIHByb21wdDogJ0Jhc2VkIG9uIHRoaXMgY29udGVudCwgd2hhdCBhcmUgc29tZSByZWxhdGVkIHRvcGljcyBJIHNob3VsZCByZXNlYXJjaCBmdXJ0aGVyPycsXG4gICAgICBpY29uOiAn8J+UjSdcbiAgICB9XG4gIF07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAobWVzc2FnZXNFbmRSZWYuY3VycmVudCkge1xuICAgICAgbWVzc2FnZXNFbmRSZWYuY3VycmVudC5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJyB9KTtcbiAgICB9XG4gIH0sIFttZXNzYWdlc10pO1xuXG4gIGNvbnN0IGhhbmRsZVNlbmRNZXNzYWdlID0gYXN5bmMgKG1lc3NhZ2U6IHN0cmluZykgPT4ge1xuICAgIGlmICghbWVzc2FnZS50cmltKCkpIHJldHVybjtcblxuICAgIGNvbnN0IHVzZXJNZXNzYWdlOiBNZXNzYWdlID0ge1xuICAgICAgaWQ6IERhdGUubm93KCkudG9TdHJpbmcoKSxcbiAgICAgIHR5cGU6ICd1c2VyJyxcbiAgICAgIGNvbnRlbnQ6IG1lc3NhZ2UsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKClcbiAgICB9O1xuXG4gICAgc2V0TWVzc2FnZXMocHJldiA9PiBbLi4ucHJldiwgdXNlck1lc3NhZ2VdKTtcbiAgICBzZXRJbnB1dFZhbHVlKCcnKTtcbiAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gU2ltdWxhdGUgQUkgcmVzcG9uc2UgKHJlcGxhY2Ugd2l0aCBhY3R1YWwgQUkgQVBJIGNhbGwpXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCkpO1xuICAgICAgXG4gICAgICBjb25zdCBhaVJlc3BvbnNlOiBNZXNzYWdlID0ge1xuICAgICAgICBpZDogKERhdGUubm93KCkgKyAxKS50b1N0cmluZygpLFxuICAgICAgICB0eXBlOiAnYWknLFxuICAgICAgICBjb250ZW50OiBgSSB1bmRlcnN0YW5kIHlvdSdyZSBhc2tpbmcgYWJvdXQ6IFwiJHttZXNzYWdlfVwiLiBUaGlzIGlzIGEgc2ltdWxhdGVkIEFJIHJlc3BvbnNlLiBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgY29ubmVjdCB0byBhbiBBSSBzZXJ2aWNlIGxpa2UgT3BlbkFJJ3MgR1BUIHRvIHByb3ZpZGUgaW50ZWxsaWdlbnQgcmVzcG9uc2VzIGFib3V0IHRoZSBjdXJyZW50IHdlYnBhZ2UgY29udGVudC5gLFxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKClcbiAgICAgIH07XG5cbiAgICAgIHNldE1lc3NhZ2VzKHByZXYgPT4gWy4uLnByZXYsIGFpUmVzcG9uc2VdKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignQUkgcmVzcG9uc2UgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgY29uc3QgZXJyb3JNZXNzYWdlOiBNZXNzYWdlID0ge1xuICAgICAgICBpZDogKERhdGUubm93KCkgKyAxKS50b1N0cmluZygpLFxuICAgICAgICB0eXBlOiAnYWknLFxuICAgICAgICBjb250ZW50OiAnU29ycnksIEkgZW5jb3VudGVyZWQgYW4gZXJyb3IuIFBsZWFzZSB0cnkgYWdhaW4uJyxcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpXG4gICAgICB9O1xuICAgICAgc2V0TWVzc2FnZXMocHJldiA9PiBbLi4ucHJldiwgZXJyb3JNZXNzYWdlXSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVF1aWNrUHJvbXB0ID0gKHByb21wdDogdHlwZW9mIHF1aWNrUHJvbXB0c1swXSkgPT4ge1xuICAgIHNldFNlbGVjdGVkUHJvbXB0KHByb21wdC5pZCk7XG4gICAgaGFuZGxlU2VuZE1lc3NhZ2UocHJvbXB0LnByb21wdCk7XG4gIH07XG5cbiAgY29uc3QgY29weU1lc3NhZ2UgPSAoY29udGVudDogc3RyaW5nKSA9PiB7XG4gICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoY29udGVudCk7XG4gIH07XG5cbiAgY29uc3QgY2xlYXJDaGF0ID0gKCkgPT4ge1xuICAgIHNldE1lc3NhZ2VzKFtdKTtcbiAgfTtcblxuICBpZiAoIWlzVmlzaWJsZSkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm5lc3QtZmxvYXRpbmctYWlcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtgZmxvYXRpbmctYWktY29udGFpbmVyICR7aXNNaW5pbWl6ZWQgPyAnbWluaW1pemVkJyA6ICcnfWB9PlxuICAgICAgICB7LyogSGVhZGVyICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWFpLWhlYWRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyLWxlZnRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWktaWNvblwiPlxuICAgICAgICAgICAgICA8U3BhcmtsZXMgc2l6ZT17MTZ9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImFpLXRpdGxlXCI+QUkgQXNzaXN0YW50PC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyLWFjdGlvbnNcIj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaGVhZGVyLWJ0blwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldElzTWluaW1pemVkKCFpc01pbmltaXplZCl9XG4gICAgICAgICAgICAgIHRpdGxlPXtpc01pbmltaXplZCA/ICdFeHBhbmQnIDogJ01pbmltaXplJ31cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2lzTWluaW1pemVkID8gPE1heGltaXplMiBzaXplPXsxNH0gLz4gOiA8TWluaW1pemUyIHNpemU9ezE0fSAvPn1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoZWFkZXItYnRuXCJcbiAgICAgICAgICAgICAgb25DbGljaz17b25DbG9zZX1cbiAgICAgICAgICAgICAgdGl0bGU9XCJDbG9zZVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxYIHNpemU9ezE0fSAvPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBDb250ZW50ICovfVxuICAgICAgICB7IWlzTWluaW1pemVkICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsb2F0aW5nLWFpLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIHsvKiBRdWljayBQcm9tcHRzICovfVxuICAgICAgICAgICAge21lc3NhZ2VzLmxlbmd0aCA9PT0gMCAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXVpY2stcHJvbXB0c1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvbXB0cy1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxoND5RdWljayBBY3Rpb25zPC9oND5cbiAgICAgICAgICAgICAgICAgIDxwPkNob29zZSBhIHF1aWNrIGFjdGlvbiB0byBnZXQgc3RhcnRlZDwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb21wdHMtZ3JpZFwiPlxuICAgICAgICAgICAgICAgICAge3F1aWNrUHJvbXB0cy5tYXAoKHByb21wdCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgIGtleT17cHJvbXB0LmlkfVxuICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Bwcm9tcHQtY2FyZCAke3NlbGVjdGVkUHJvbXB0ID09PSBwcm9tcHQuaWQgPyAnc2VsZWN0ZWQnIDogJyd9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlUXVpY2tQcm9tcHQocHJvbXB0KX1cbiAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzTG9hZGluZ31cbiAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9e3Byb21wdC5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb21wdC1pY29uXCI+e3Byb21wdC5pY29ufTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvbXB0LWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvbXB0LXRpdGxlXCI+e3Byb21wdC50aXRsZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvbXB0LWRlc2NyaXB0aW9uXCI+e3Byb21wdC5kZXNjcmlwdGlvbn08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICB7LyogTWVzc2FnZXMgKi99XG4gICAgICAgICAgICB7bWVzc2FnZXMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZXMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXNzYWdlcy1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInBhZ2UtY29udGV4dFwiPlxuICAgICAgICAgICAgICAgICAgICDwn5KsIENoYXR0aW5nIGFib3V0OiB7cGFnZVRpdGxlIHx8ICdDdXJyZW50IFBhZ2UnfVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbGVhci1jaGF0LWJ0blwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2NsZWFyQ2hhdH1cbiAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJDbGVhciBjaGF0XCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPFJlZnJlc2hDdyBzaXplPXsxMn0gLz5cbiAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZXMtbGlzdFwiPlxuICAgICAgICAgICAgICAgICAge21lc3NhZ2VzLm1hcCgobWVzc2FnZSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAga2V5PXttZXNzYWdlLmlkfVxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YG1lc3NhZ2UgJHttZXNzYWdlLnR5cGV9YH1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZS1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bWVzc2FnZS5jb250ZW50fVxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZS1hY3Rpb25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1lc3NhZ2UtYWN0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gY29weU1lc3NhZ2UobWVzc2FnZS5jb250ZW50KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJDb3B5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPENvcHkgc2l6ZT17MTJ9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1lc3NhZ2UtdGltZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7bWVzc2FnZS50aW1lc3RhbXAudG9Mb2NhbGVUaW1lU3RyaW5nKFtdLCB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWludXRlOiAnMi1kaWdpdCcgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAge2lzTG9hZGluZyAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWVzc2FnZSBhaSBsb2FkaW5nXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXNzYWdlLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHlwaW5nLWluZGljYXRvclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIDxkaXYgcmVmPXttZXNzYWdlc0VuZFJlZn0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICB7LyogSW5wdXQgKi99XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFpLWlucHV0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0LXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXtpbnB1dFZhbHVlfVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRJbnB1dFZhbHVlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIG9uS2V5UHJlc3M9eyhlKSA9PiBlLmtleSA9PT0gJ0VudGVyJyAmJiBoYW5kbGVTZW5kTWVzc2FnZShpbnB1dFZhbHVlKX1cbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQXNrIGFueXRoaW5nIGFib3V0IHRoaXMgcGFnZS4uLlwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJhaS1pbnB1dFwiXG4gICAgICAgICAgICAgICAgICBkaXNhYmxlZD17aXNMb2FkaW5nfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic2VuZC1idG5cIlxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlU2VuZE1lc3NhZ2UoaW5wdXRWYWx1ZSl9XG4gICAgICAgICAgICAgICAgICBkaXNhYmxlZD17aXNMb2FkaW5nIHx8ICFpbnB1dFZhbHVlLnRyaW0oKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8U2VuZCBzaXplPXsxNn0gLz5cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5uZXN0LWZsb2F0aW5nLWFpIHtcbiAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgYm90dG9tOiAyMHB4O1xuICAgICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICAgIHotaW5kZXg6IDk5OTk5OTtcbiAgICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XG4gICAgICAgIH1cblxuICAgICAgICAuZmxvYXRpbmctYWktY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogMzgwcHg7XG4gICAgICAgICAgbWF4LWhlaWdodDogNjAwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDAgMjBweCA0MHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U1ZTdlYjtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgICAgIH1cblxuICAgICAgICAuZmxvYXRpbmctYWktY29udGFpbmVyLm1pbmltaXplZCB7XG4gICAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgICAgIG1heC1oZWlnaHQ6IDYwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAuZmxvYXRpbmctYWktaGVhZGVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzY2N2VlYSAwJSwgIzc2NGJhMiAxMDAlKTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVhZGVyLWxlZnQge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBnYXA6IDhweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5haS1pY29uIHtcbiAgICAgICAgICB3aWR0aDogMjRweDtcbiAgICAgICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAuYWktdGl0bGUge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlYWRlci1hY3Rpb25zIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGdhcDogNHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmhlYWRlci1idG4ge1xuICAgICAgICAgIHdpZHRoOiAyOHB4O1xuICAgICAgICAgIGhlaWdodDogMjhweDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnM7XG4gICAgICAgIH1cblxuICAgICAgICAuaGVhZGVyLWJ0bjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xuICAgICAgICB9XG5cbiAgICAgICAgLmZsb2F0aW5nLWFpLWNvbnRlbnQge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgbWF4LWhlaWdodDogNTQwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAucXVpY2stcHJvbXB0cyB7XG4gICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9tcHRzLWhlYWRlciB7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvbXB0cy1oZWFkZXIgaDQge1xuICAgICAgICAgIG1hcmdpbjogMCAwIDRweCAwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIGNvbG9yOiAjMWYyOTM3O1xuICAgICAgICB9XG5cbiAgICAgICAgLnByb21wdHMtaGVhZGVyIHAge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvbXB0cy1ncmlkIHtcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgICAgICAgZ2FwOiA4cHg7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvbXB0LWNhcmQge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBnYXA6IDhweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMnB4O1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNWU3ZWI7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG5cbiAgICAgICAgLnByb21wdC1jYXJkOmhvdmVyIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICM2NjdlZWE7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2Y4ZmFmZjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9tcHQtY2FyZC5zZWxlY3RlZCB7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAjNjY3ZWVhO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNmMGY0ZmY7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvbXB0LWljb24ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9tcHQtY29udGVudCB7XG4gICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICBtaW4td2lkdGg6IDA7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvbXB0LXRpdGxlIHtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBjb2xvcjogIzFmMjkzNztcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvbXB0LWRlc2NyaXB0aW9uIHtcbiAgICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMztcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXNzYWdlcy1jb250YWluZXIge1xuICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZXMtaGVhZGVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTdlYjtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjlmYWZiO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBhZ2UtY29udGV4dCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIGNvbG9yOiAjNmI3MjgwO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIH1cblxuICAgICAgICAuY2xlYXItY2hhdC1idG4ge1xuICAgICAgICAgIHBhZGRpbmc6IDRweDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgICBjb2xvcjogIzZiNzI4MDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XG4gICAgICAgIH1cblxuICAgICAgICAuY2xlYXItY2hhdC1idG46aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjMzc0MTUxO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lc3NhZ2VzLWxpc3Qge1xuICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lc3NhZ2Uge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZS51c2VyIC5tZXNzYWdlLWNvbnRlbnQge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICM2NjdlZWE7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE2cHggMTZweCA0cHggMTZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXNzYWdlLmFpIC5tZXNzYWdlLWNvbnRlbnQge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNmM2Y0ZjY7XG4gICAgICAgICAgY29sb3I6ICMxZjI5Mzc7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE2cHggMTZweCAxNnB4IDRweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXNzYWdlLWNvbnRlbnQge1xuICAgICAgICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZS1hY3Rpb25zIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgICAgICBwYWRkaW5nOiAwIDhweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXNzYWdlLnVzZXIgLm1lc3NhZ2UtYWN0aW9ucyB7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXNzYWdlLWFjdGlvbiB7XG4gICAgICAgICAgcGFkZGluZzogNHB4O1xuICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAjOWNhM2FmO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4ycztcbiAgICAgICAgfVxuXG4gICAgICAgIC5tZXNzYWdlLWFjdGlvbjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZS10aW1lIHtcbiAgICAgICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICAgICAgY29sb3I6ICM5Y2EzYWY7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZS5sb2FkaW5nIC5tZXNzYWdlLWNvbnRlbnQge1xuICAgICAgICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAudHlwaW5nLWluZGljYXRvciB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBnYXA6IDRweDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgLnR5cGluZy1pbmRpY2F0b3Igc3BhbiB7XG4gICAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgICBoZWlnaHQ6IDZweDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzljYTNhZjtcbiAgICAgICAgICBhbmltYXRpb246IHR5cGluZyAxLjRzIGluZmluaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnR5cGluZy1pbmRpY2F0b3Igc3BhbjpudGgtY2hpbGQoMikge1xuICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogMC4ycztcbiAgICAgICAgfVxuXG4gICAgICAgIC50eXBpbmctaW5kaWNhdG9yIHNwYW46bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IDAuNHM7XG4gICAgICAgIH1cblxuICAgICAgICBAa2V5ZnJhbWVzIHR5cGluZyB7XG4gICAgICAgICAgMCUsIDYwJSwgMTAwJSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjU7XG4gICAgICAgICAgfVxuICAgICAgICAgIDMwJSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwcHgpO1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuYWktaW5wdXQtY29udGFpbmVyIHtcbiAgICAgICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlN2ViO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmlucHV0LXdyYXBwZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZ2FwOiA4cHg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5haS1pbnB1dCB7XG4gICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U1ZTdlYjtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAyNHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjJzO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFpLWlucHV0OmZvY3VzIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICM2NjdlZWE7XG4gICAgICAgIH1cblxuICAgICAgICAuc2VuZC1idG4ge1xuICAgICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzY2N2VlYTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzO1xuICAgICAgICB9XG5cbiAgICAgICAgLnNlbmQtYnRuOmhvdmVyOm5vdCg6ZGlzYWJsZWQpIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjNWE2N2Q4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnNlbmQtYnRuOmRpc2FibGVkIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZDFkNWRiO1xuICAgICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZXMtbGlzdDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgICAgIHdpZHRoOiA2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZXMtbGlzdDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNmMWY1Zjk7XG4gICAgICAgIH1cblxuICAgICAgICAubWVzc2FnZXMtbGlzdDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNjYmQ1ZTE7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lc3NhZ2VzLWxpc3Q6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjOTRhM2I4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGbG9hdGluZ0FJOyAiLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFBsdXMgPSBjcmVhdGVMdWNpZGVJY29uKFwiUGx1c1wiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk01IDEyaDE0XCIsIGtleTogXCIxYXlzMGhcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTEyIDV2MTRcIiwga2V5OiBcInM2OTlsZVwiIH1dXG5dKTtcblxuZXhwb3J0IHsgUGx1cyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wbHVzLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBQYWxldHRlID0gY3JlYXRlTHVjaWRlSWNvbihcIlBhbGV0dGVcIiwgW1xuICBbXCJjaXJjbGVcIiwgeyBjeDogXCIxMy41XCIsIGN5OiBcIjYuNVwiLCByOiBcIi41XCIsIGtleTogXCIxeGN1NVwiIH1dLFxuICBbXCJjaXJjbGVcIiwgeyBjeDogXCIxNy41XCIsIGN5OiBcIjEwLjVcIiwgcjogXCIuNVwiLCBrZXk6IFwiNzM2ZTR1XCIgfV0sXG4gIFtcImNpcmNsZVwiLCB7IGN4OiBcIjguNVwiLCBjeTogXCI3LjVcIiwgcjogXCIuNVwiLCBrZXk6IFwiY2xydHlcIiB9XSxcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiNi41XCIsIGN5OiBcIjEyLjVcIiwgcjogXCIuNVwiLCBrZXk6IFwiMXM0eHo5XCIgfV0sXG4gIFtcbiAgICBcInBhdGhcIixcbiAgICB7XG4gICAgICBkOiBcIk0xMiAyQzYuNSAyIDIgNi41IDIgMTJzNC41IDEwIDEwIDEwYy45MjYgMCAxLjY0OC0uNzQ2IDEuNjQ4LTEuNjg4IDAtLjQzNy0uMTgtLjgzNS0uNDM3LTEuMTI1LS4yOS0uMjg5LS40MzgtLjY1Mi0uNDM4LTEuMTI1YTEuNjQgMS42NCAwIDAgMSAxLjY2OC0xLjY2OGgxLjk5NmMzLjA1MSAwIDUuNTU1LTIuNTAzIDUuNTU1LTUuNTU0QzIxLjk2NSA2LjAxMiAxNy40NjEgMiAxMiAyelwiLFxuICAgICAga2V5OiBcIjEycnpmOFwiXG4gICAgfVxuICBdXG5dKTtcblxuZXhwb3J0IHsgUGFsZXR0ZSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWxldHRlLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBQZW5MaW5lID0gY3JlYXRlTHVjaWRlSWNvbihcIlBlbkxpbmVcIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMTIgMjBoOVwiLCBrZXk6IFwidDJkdTdiXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xNi41IDMuNWEyLjEyIDIuMTIgMCAwIDEgMyAzTDcgMTlsLTQgMSAxLTRaXCIsIGtleTogXCJ5bWNteWVcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IFBlbkxpbmUgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVuLWxpbmUuanMubWFwXG4iLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFRyYXNoMiA9IGNyZWF0ZUx1Y2lkZUljb24oXCJUcmFzaDJcIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMyA2aDE4XCIsIGtleTogXCJkMHdtMGpcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTE5IDZ2MTRjMCAxLTEgMi0yIDJIN2MtMSAwLTItMS0yLTJWNlwiLCBrZXk6IFwiNGFscnQ0XCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk04IDZWNGMwLTEgMS0yIDItMmg0YzEgMCAyIDEgMiAydjJcIiwga2V5OiBcInYwN3MwZVwiIH1dLFxuICBbXCJsaW5lXCIsIHsgeDE6IFwiMTBcIiwgeDI6IFwiMTBcIiwgeTE6IFwiMTFcIiwgeTI6IFwiMTdcIiwga2V5OiBcIjF1dWZyNVwiIH1dLFxuICBbXCJsaW5lXCIsIHsgeDE6IFwiMTRcIiwgeDI6IFwiMTRcIiwgeTE6IFwiMTFcIiwgeTI6IFwiMTdcIiwga2V5OiBcInh0eGtkXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBUcmFzaDIgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhc2gtMi5qcy5tYXBcbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgTW92ZSA9IGNyZWF0ZUx1Y2lkZUljb24oXCJNb3ZlXCIsIFtcbiAgW1wicG9seWxpbmVcIiwgeyBwb2ludHM6IFwiNSA5IDIgMTIgNSAxNVwiLCBrZXk6IFwiMXI1dWo1XCIgfV0sXG4gIFtcInBvbHlsaW5lXCIsIHsgcG9pbnRzOiBcIjkgNSAxMiAyIDE1IDVcIiwga2V5OiBcIjV2Mzgzb1wiIH1dLFxuICBbXCJwb2x5bGluZVwiLCB7IHBvaW50czogXCIxNSAxOSAxMiAyMiA5IDE5XCIsIGtleTogXCJnN3FpOG1cIiB9XSxcbiAgW1wicG9seWxpbmVcIiwgeyBwb2ludHM6IFwiMTkgOSAyMiAxMiAxOSAxNVwiLCBrZXk6IFwidHBwNzNxXCIgfV0sXG4gIFtcImxpbmVcIiwgeyB4MTogXCIyXCIsIHgyOiBcIjIyXCIsIHkxOiBcIjEyXCIsIHkyOiBcIjEyXCIsIGtleTogXCIxZG5xb3RcIiB9XSxcbiAgW1wibGluZVwiLCB7IHgxOiBcIjEyXCIsIHgyOiBcIjEyXCIsIHkxOiBcIjJcIiwgeTI6IFwiMjJcIiwga2V5OiBcIjdlcXlxaFwiIH1dXG5dKTtcblxuZXhwb3J0IHsgTW92ZSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb3ZlLmpzLm1hcFxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFBsdXMsIFgsIEVkaXQzLCBUcmFzaDIsIFBhbGV0dGUsIFBpbiwgTW92ZSB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5cbmludGVyZmFjZSBTdGlja3lOb3RlIHtcbiAgaWQ6IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nO1xuICBjb2xvcjogc3RyaW5nO1xuICBwb3NpdGlvbjogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xuICBzaXplOiB7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyIH07XG4gIHVybDogc3RyaW5nO1xuICBkb21haW46IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG59XG5cbmludGVyZmFjZSBTdGlja3lOb3Rlc1Byb3BzIHtcbiAgaXNWaXNpYmxlOiBib29sZWFuO1xuICBvblRvZ2dsZTogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgU3RpY2t5Tm90ZXM6IFJlYWN0LkZDPFN0aWNreU5vdGVzUHJvcHM+ID0gKHsgaXNWaXNpYmxlLCBvblRvZ2dsZSB9KSA9PiB7XG4gIGNvbnN0IFtub3Rlcywgc2V0Tm90ZXNdID0gdXNlU3RhdGU8U3RpY2t5Tm90ZVtdPihbXSk7XG4gIGNvbnN0IFtpc0NyZWF0aW5nLCBzZXRJc0NyZWF0aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2VkaXRpbmdOb3RlLCBzZXRFZGl0aW5nTm90ZV0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2RyYWdnZWROb3RlLCBzZXREcmFnZ2VkTm90ZV0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2RyYWdPZmZzZXQsIHNldERyYWdPZmZzZXRdID0gdXNlU3RhdGUoeyB4OiAwLCB5OiAwIH0pO1xuICBjb25zdCBbc2hvd0NvbG9yUGlja2VyLCBzZXRTaG93Q29sb3JQaWNrZXJdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgY29uc3Qgbm90ZUNvbG9ycyA9IFtcbiAgICB7IG5hbWU6ICdZZWxsb3cnLCB2YWx1ZTogJyNmZWYwOGEnLCBib3JkZXI6ICcjZWFiMzA4JyB9LFxuICAgIHsgbmFtZTogJ1BpbmsnLCB2YWx1ZTogJyNmZGE0YWYnLCBib3JkZXI6ICcjZWM0ODk5JyB9LFxuICAgIHsgbmFtZTogJ0JsdWUnLCB2YWx1ZTogJyM5M2M1ZmQnLCBib3JkZXI6ICcjM2I4MmY2JyB9LFxuICAgIHsgbmFtZTogJ0dyZWVuJywgdmFsdWU6ICcjODZlZmFjJywgYm9yZGVyOiAnIzEwYjk4MScgfSxcbiAgICB7IG5hbWU6ICdQdXJwbGUnLCB2YWx1ZTogJyNjNGI1ZmQnLCBib3JkZXI6ICcjOGI1Y2Y2JyB9LFxuICAgIHsgbmFtZTogJ09yYW5nZScsIHZhbHVlOiAnI2ZlZDdhYScsIGJvcmRlcjogJyNmOTczMTYnIH0sXG4gICAgeyBuYW1lOiAnR3JheScsIHZhbHVlOiAnI2QxZDVkYicsIGJvcmRlcjogJyM2YjcyODAnIH0sXG4gICAgeyBuYW1lOiAnUmVkJywgdmFsdWU6ICcjZmNhNWE1JywgYm9yZGVyOiAnI2VmNDQ0NCcgfVxuICBdO1xuXG4gIGNvbnN0IGN1cnJlbnRVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgY29uc3QgY3VycmVudERvbWFpbiA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxvYWROb3RlcygpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgbG9hZE5vdGVzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoJ25lc3Rfc3RpY2t5X25vdGVzJyk7XG4gICAgICBjb25zdCBhbGxOb3RlcyA9IHJlc3VsdC5uZXN0X3N0aWNreV9ub3RlcyB8fCBbXTtcbiAgICAgIFxuICAgICAgLy8gRmlsdGVyIG5vdGVzIGZvciBjdXJyZW50IFVSTFxuICAgICAgY29uc3QgdXJsTm90ZXMgPSBhbGxOb3Rlcy5maWx0ZXIoKG5vdGU6IFN0aWNreU5vdGUpID0+IFxuICAgICAgICBub3RlLnVybCA9PT0gY3VycmVudFVybCB8fCBub3RlLmRvbWFpbiA9PT0gY3VycmVudERvbWFpblxuICAgICAgKTtcbiAgICAgIFxuICAgICAgc2V0Tm90ZXModXJsTm90ZXMpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCBzdGlja3kgbm90ZXM6JywgZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBzYXZlTm90ZXMgPSBhc3luYyAodXBkYXRlZE5vdGVzOiBTdGlja3lOb3RlW10pID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KCduZXN0X3N0aWNreV9ub3RlcycpO1xuICAgICAgY29uc3QgYWxsTm90ZXMgPSByZXN1bHQubmVzdF9zdGlja3lfbm90ZXMgfHwgW107XG4gICAgICBcbiAgICAgIC8vIFJlbW92ZSBvbGQgbm90ZXMgZm9yIHRoaXMgVVJML2RvbWFpblxuICAgICAgY29uc3Qgb3RoZXJOb3RlcyA9IGFsbE5vdGVzLmZpbHRlcigobm90ZTogU3RpY2t5Tm90ZSkgPT4gXG4gICAgICAgIG5vdGUudXJsICE9PSBjdXJyZW50VXJsICYmIG5vdGUuZG9tYWluICE9PSBjdXJyZW50RG9tYWluXG4gICAgICApO1xuICAgICAgXG4gICAgICAvLyBBZGQgdXBkYXRlZCBub3Rlc1xuICAgICAgY29uc3QgbmV3QWxsTm90ZXMgPSBbLi4ub3RoZXJOb3RlcywgLi4udXBkYXRlZE5vdGVzXTtcbiAgICAgIFxuICAgICAgYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHsgbmVzdF9zdGlja3lfbm90ZXM6IG5ld0FsbE5vdGVzIH0pO1xuICAgICAgc2V0Tm90ZXModXBkYXRlZE5vdGVzKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHNhdmUgc3RpY2t5IG5vdGVzOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgY3JlYXRlTm90ZSA9ICh4OiBudW1iZXIsIHk6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IG5ld05vdGU6IFN0aWNreU5vdGUgPSB7XG4gICAgICBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLFxuICAgICAgY29udGVudDogJycsXG4gICAgICBjb2xvcjogbm90ZUNvbG9yc1swXS52YWx1ZSxcbiAgICAgIHBvc2l0aW9uOiB7IHgsIHkgfSxcbiAgICAgIHNpemU6IHsgd2lkdGg6IDIwMCwgaGVpZ2h0OiAxNTAgfSxcbiAgICAgIHVybDogY3VycmVudFVybCxcbiAgICAgIGRvbWFpbjogY3VycmVudERvbWFpbixcbiAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcbiAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKVxuICAgIH07XG5cbiAgICBjb25zdCB1cGRhdGVkTm90ZXMgPSBbLi4ubm90ZXMsIG5ld05vdGVdO1xuICAgIHNhdmVOb3Rlcyh1cGRhdGVkTm90ZXMpO1xuICAgIHNldEVkaXRpbmdOb3RlKG5ld05vdGUuaWQpO1xuICAgIHNldElzQ3JlYXRpbmcoZmFsc2UpO1xuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZU5vdGUgPSAoaWQ6IHN0cmluZywgdXBkYXRlczogUGFydGlhbDxTdGlja3lOb3RlPikgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZWROb3RlcyA9IG5vdGVzLm1hcChub3RlID0+XG4gICAgICBub3RlLmlkID09PSBpZCBcbiAgICAgICAgPyB7IC4uLm5vdGUsIC4uLnVwZGF0ZXMsIHVwZGF0ZWRBdDogbmV3IERhdGUoKSB9XG4gICAgICAgIDogbm90ZVxuICAgICk7XG4gICAgc2F2ZU5vdGVzKHVwZGF0ZWROb3Rlcyk7XG4gIH07XG5cbiAgY29uc3QgZGVsZXRlTm90ZSA9IChpZDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlZE5vdGVzID0gbm90ZXMuZmlsdGVyKG5vdGUgPT4gbm90ZS5pZCAhPT0gaWQpO1xuICAgIHNhdmVOb3Rlcyh1cGRhdGVkTm90ZXMpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU1vdXNlRG93biA9IChlOiBSZWFjdC5Nb3VzZUV2ZW50LCBub3RlSWQ6IHN0cmluZykgPT4ge1xuICAgIGlmIChlLnRhcmdldCA9PT0gZS5jdXJyZW50VGFyZ2V0IHx8IChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdCgnLm5vdGUtZHJhZy1oYW5kbGUnKSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgc2V0RHJhZ2dlZE5vdGUobm90ZUlkKTtcbiAgICAgIFxuICAgICAgY29uc3Qgbm90ZSA9IG5vdGVzLmZpbmQobiA9PiBuLmlkID09PSBub3RlSWQpO1xuICAgICAgaWYgKG5vdGUpIHtcbiAgICAgICAgc2V0RHJhZ09mZnNldCh7XG4gICAgICAgICAgeDogZS5jbGllbnRYIC0gbm90ZS5wb3NpdGlvbi54LFxuICAgICAgICAgIHk6IGUuY2xpZW50WSAtIG5vdGUucG9zaXRpb24ueVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlTW91c2VNb3ZlID0gKGU6IE1vdXNlRXZlbnQpID0+IHtcbiAgICBpZiAoZHJhZ2dlZE5vdGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGNvbnN0IG5ld1ggPSBlLmNsaWVudFggLSBkcmFnT2Zmc2V0Lng7XG4gICAgICBjb25zdCBuZXdZID0gZS5jbGllbnRZIC0gZHJhZ09mZnNldC55O1xuICAgICAgXG4gICAgICB1cGRhdGVOb3RlKGRyYWdnZWROb3RlLCB7XG4gICAgICAgIHBvc2l0aW9uOiB7IHg6IG5ld1gsIHk6IG5ld1kgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU1vdXNlVXAgPSAoKSA9PiB7XG4gICAgc2V0RHJhZ2dlZE5vdGUobnVsbCk7XG4gICAgc2V0RHJhZ09mZnNldCh7IHg6IDAsIHk6IDAgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlUGFnZUNsaWNrID0gKGU6IE1vdXNlRXZlbnQpID0+IHtcbiAgICBpZiAoaXNDcmVhdGluZyAmJiBlLnRhcmdldCAmJiAhKGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5jbG9zZXN0KCcubmVzdC1zdGlja3ktbm90ZScpKSB7XG4gICAgICBjb25zdCB4ID0gZS5jbGllbnRYO1xuICAgICAgY29uc3QgeSA9IGUuY2xpZW50WTtcbiAgICAgIGNyZWF0ZU5vdGUoeCwgeSk7XG4gICAgfVxuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGRyYWdnZWROb3RlKSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpO1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXApO1xuICAgICAgXG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlTW91c2VVcCk7XG4gICAgICB9O1xuICAgIH1cbiAgfSwgW2RyYWdnZWROb3RlLCBkcmFnT2Zmc2V0XSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNDcmVhdGluZykge1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVQYWdlQ2xpY2spO1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAnY3Jvc3NoYWlyJztcbiAgICAgIFxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVQYWdlQ2xpY2spO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmN1cnNvciA9ICdhdXRvJztcbiAgICAgIH07XG4gICAgfVxuICB9LCBbaXNDcmVhdGluZ10pO1xuXG4gIGlmICghaXNWaXNpYmxlKSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LyogRmxvYXRpbmcgQWN0aW9uIEJ1dHRvbiAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmVzdC1zdGlja3ktZmFiXCI+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9e2BzdGlja3ktZmFiLWJ1dHRvbiAke2lzQ3JlYXRpbmcgPyAnY3JlYXRpbmcnIDogJyd9YH1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRJc0NyZWF0aW5nKCFpc0NyZWF0aW5nKX1cbiAgICAgICAgICB0aXRsZT17aXNDcmVhdGluZyA/ICdDbGljayBhbnl3aGVyZSB0byBhZGQgbm90ZScgOiAnQWRkIHN0aWNreSBub3RlJ31cbiAgICAgICAgPlxuICAgICAgICAgIDxQbHVzIHNpemU9ezIwfSAvPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAge2lzQ3JlYXRpbmcgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3JlYXRpbmctaGludFwiPlxuICAgICAgICAgICAgQ2xpY2sgYW55d2hlcmUgb24gdGhlIHBhZ2UgdG8gYWRkIGEgc3RpY2t5IG5vdGVcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogU3RpY2t5IE5vdGVzICovfVxuICAgICAge25vdGVzLm1hcChub3RlID0+IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGtleT17bm90ZS5pZH1cbiAgICAgICAgICBjbGFzc05hbWU9e2BuZXN0LXN0aWNreS1ub3RlICR7ZHJhZ2dlZE5vdGUgPT09IG5vdGUuaWQgPyAnZHJhZ2dpbmcnIDogJyd9YH1cbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgbGVmdDogbm90ZS5wb3NpdGlvbi54LFxuICAgICAgICAgICAgdG9wOiBub3RlLnBvc2l0aW9uLnksXG4gICAgICAgICAgICB3aWR0aDogbm90ZS5zaXplLndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBub3RlLnNpemUuaGVpZ2h0LFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBub3RlLmNvbG9yLFxuICAgICAgICAgICAgYm9yZGVyQ29sb3I6IG5vdGVDb2xvcnMuZmluZChjID0+IGMudmFsdWUgPT09IG5vdGUuY29sb3IpPy5ib3JkZXIgfHwgJyNlYWIzMDgnXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbk1vdXNlRG93bj17KGUpID0+IGhhbmRsZU1vdXNlRG93bihlLCBub3RlLmlkKX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiBOb3RlIEhlYWRlciAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vdGUtaGVhZGVyIG5vdGUtZHJhZy1oYW5kbGVcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibm90ZS1hY3Rpb25zXCI+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJub3RlLWFjdGlvbi1idG5cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dDb2xvclBpY2tlcihzaG93Q29sb3JQaWNrZXIgPT09IG5vdGUuaWQgPyBudWxsIDogbm90ZS5pZCl9XG4gICAgICAgICAgICAgICAgdGl0bGU9XCJDaGFuZ2UgY29sb3JcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFBhbGV0dGUgc2l6ZT17MTJ9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibm90ZS1hY3Rpb24tYnRuXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRFZGl0aW5nTm90ZShlZGl0aW5nTm90ZSA9PT0gbm90ZS5pZCA/IG51bGwgOiBub3RlLmlkKX1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIkVkaXQgbm90ZVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8RWRpdDMgc2l6ZT17MTJ9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibm90ZS1hY3Rpb24tYnRuIGRlbGV0ZVwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gZGVsZXRlTm90ZShub3RlLmlkKX1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIkRlbGV0ZSBub3RlXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxUcmFzaDIgc2l6ZT17MTJ9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRyYWctaGFuZGxlXCIgdGl0bGU9XCJEcmFnIHRvIG1vdmVcIj5cbiAgICAgICAgICAgICAgPE1vdmUgc2l6ZT17MTJ9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBDb2xvciBQaWNrZXIgKi99XG4gICAgICAgICAge3Nob3dDb2xvclBpY2tlciA9PT0gbm90ZS5pZCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbG9yLXBpY2tlclwiPlxuICAgICAgICAgICAgICB7bm90ZUNvbG9ycy5tYXAoY29sb3IgPT4gKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIGtleT17Y29sb3IudmFsdWV9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Bjb2xvci1vcHRpb24gJHtub3RlLmNvbG9yID09PSBjb2xvci52YWx1ZSA/ICdzZWxlY3RlZCcgOiAnJ31gfVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiBjb2xvci52YWx1ZSwgYm9yZGVyQ29sb3I6IGNvbG9yLmJvcmRlciB9fVxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVOb3RlKG5vdGUuaWQsIHsgY29sb3I6IGNvbG9yLnZhbHVlIH0pO1xuICAgICAgICAgICAgICAgICAgICBzZXRTaG93Q29sb3JQaWNrZXIobnVsbCk7XG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgdGl0bGU9e2NvbG9yLm5hbWV9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAgey8qIE5vdGUgQ29udGVudCAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vdGUtY29udGVudFwiPlxuICAgICAgICAgICAge2VkaXRpbmdOb3RlID09PSBub3RlLmlkID8gKFxuICAgICAgICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICAgICAgICB2YWx1ZT17bm90ZS5jb250ZW50fVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gdXBkYXRlTm90ZShub3RlLmlkLCB7IGNvbnRlbnQ6IGUudGFyZ2V0LnZhbHVlIH0pfVxuICAgICAgICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0RWRpdGluZ05vdGUobnVsbCl9XG4gICAgICAgICAgICAgICAgb25LZXlEb3duPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKGUua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICAgICAgICAgICAgICBzZXRFZGl0aW5nTm90ZShudWxsKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiVHlwZSB5b3VyIG5vdGUgaGVyZS4uLlwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibm90ZS10ZXh0YXJlYVwiXG4gICAgICAgICAgICAgICAgYXV0b0ZvY3VzXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibm90ZS10ZXh0XCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRFZGl0aW5nTm90ZShub3RlLmlkKX1cbiAgICAgICAgICAgICAgICBzdHlsZT17eyBjdXJzb3I6IG5vdGUuY29udGVudCA/ICd0ZXh0JyA6ICdwb2ludGVyJyB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge25vdGUuY29udGVudCB8fCAnQ2xpY2sgdG8gYWRkIHRleHQuLi4nfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7LyogTm90ZSBGb290ZXIgKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJub3RlLWZvb3RlclwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibm90ZS10aW1lc3RhbXBcIj5cbiAgICAgICAgICAgICAge25vdGUudXBkYXRlZEF0LnRvTG9jYWxlRGF0ZVN0cmluZygpfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICkpfVxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5uZXN0LXN0aWNreS1mYWIge1xuICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICBib3R0b206IDgwcHg7XG4gICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgei1pbmRleDogOTk5OTk4O1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIHN5c3RlbS11aSwgc2Fucy1zZXJpZjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zdGlja3ktZmFiLWJ1dHRvbiB7XG4gICAgICAgICAgd2lkdGg6IDU2cHg7XG4gICAgICAgICAgaGVpZ2h0OiA1NnB4O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjU5ZTBiO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zdGlja3ktZmFiLWJ1dHRvbjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2Q5NzcwNjtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgICAgIH1cblxuICAgICAgICAuc3RpY2t5LWZhYi1idXR0b24uY3JlYXRpbmcge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMxMGI5ODE7XG4gICAgICAgICAgYW5pbWF0aW9uOiBwdWxzZSAycyBpbmZpbml0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBrZXlmcmFtZXMgcHVsc2Uge1xuICAgICAgICAgIDAlLCAxMDAlIHsgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuICAgICAgICAgIDUwJSB7IHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7IH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5jcmVhdGluZy1oaW50IHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYm90dG9tOiA3MHB4O1xuICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMxZjI5Mzc7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHBhZGRpbmc6IDhweCAxMnB4O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgYW5pbWF0aW9uOiBmYWRlSW4gMC4zcyBlYXNlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNyZWF0aW5nLWhpbnQ6OmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAxMDAlO1xuICAgICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICBib3JkZXItbGVmdDogOHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlci1yaWdodDogOHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlci10b3A6IDhweCBzb2xpZCAjMWYyOTM3O1xuICAgICAgICB9XG5cbiAgICAgICAgLm5lc3Qtc3RpY2t5LW5vdGUge1xuICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICB6LWluZGV4OiA5OTk5OTc7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2U7XG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAubmVzdC1zdGlja3ktbm90ZTpob3ZlciB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xuICAgICAgICAgIGJveC1zaGFkb3c6IDAgNnB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLm5lc3Qtc3RpY2t5LW5vdGUuZHJhZ2dpbmcge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDVkZWcpO1xuICAgICAgICAgIHotaW5kZXg6IDk5OTk5OTtcbiAgICAgICAgICBjdXJzb3I6IGdyYWJiaW5nO1xuICAgICAgICB9XG5cbiAgICAgICAgLm5vdGUtaGVhZGVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIHBhZGRpbmc6IDhweDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgICAgIGN1cnNvcjogZ3JhYjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ub3RlLWhlYWRlcjphY3RpdmUge1xuICAgICAgICAgIGN1cnNvcjogZ3JhYmJpbmc7XG4gICAgICAgIH1cblxuICAgICAgICAubm90ZS1hY3Rpb25zIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGdhcDogNHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLm5vdGUtYWN0aW9uLWJ0biB7XG4gICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgICAgICAgICBjb2xvcjogIzM3NDE1MTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ub3RlLWFjdGlvbi1idG46aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgICAgICB9XG5cbiAgICAgICAgLm5vdGUtYWN0aW9uLWJ0bi5kZWxldGU6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNlZjQ0NDQ7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmRyYWctaGFuZGxlIHtcbiAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgICAgICAgIGN1cnNvcjogZ3JhYjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1waWNrZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDQwcHg7XG4gICAgICAgICAgbGVmdDogOHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICBwYWRkaW5nOiA4cHg7XG4gICAgICAgICAgYm94LXNoYWRvdzogMCA0cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcbiAgICAgICAgICBnYXA6IDRweDtcbiAgICAgICAgICB6LWluZGV4OiAxMDAwMDAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNvbG9yLW9wdGlvbiB7XG4gICAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1vcHRpb246aG92ZXIge1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1vcHRpb24uc2VsZWN0ZWQge1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAycHggIzM3NDE1MTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ub3RlLWNvbnRlbnQge1xuICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB9XG5cbiAgICAgICAgLm5vdGUtdGV4dGFyZWEge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgcmVzaXplOiBub25lO1xuICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgICAgY29sb3I6ICMzNzQxNTE7XG4gICAgICAgIH1cblxuICAgICAgICAubm90ZS10ZXh0IHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICAgICAgY29sb3I6ICMzNzQxNTE7XG4gICAgICAgICAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gICAgICAgIH1cblxuICAgICAgICAubm90ZS10ZXh0OmVtcHR5OjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICdDbGljayB0byBhZGQgdGV4dC4uLic7XG4gICAgICAgICAgY29sb3I6ICM5Y2EzYWY7XG4gICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgICB9XG5cbiAgICAgICAgLm5vdGUtZm9vdGVyIHtcbiAgICAgICAgICBwYWRkaW5nOiA2cHggMTJweDtcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ub3RlLXRpbWVzdGFtcCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICAgIGNvbG9yOiAjNmI3MjgwO1xuICAgICAgICB9XG5cbiAgICAgICAgQGtleWZyYW1lcyBmYWRlSW4ge1xuICAgICAgICAgIGZyb20geyBvcGFjaXR5OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCk7IH1cbiAgICAgICAgICB0byB7IG9wYWNpdHk6IDE7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdGlja3lOb3RlczsgIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBDYW1lcmEgPSBjcmVhdGVMdWNpZGVJY29uKFwiQ2FtZXJhXCIsIFtcbiAgW1xuICAgIFwicGF0aFwiLFxuICAgIHtcbiAgICAgIGQ6IFwiTTE0LjUgNGgtNUw3IDdINGEyIDIgMCAwIDAtMiAydjlhMiAyIDAgMCAwIDIgMmgxNmEyIDIgMCAwIDAgMi0yVjlhMiAyIDAgMCAwLTItMmgtM2wtMi41LTN6XCIsXG4gICAgICBrZXk6IFwiMXRjOXFnXCJcbiAgICB9XG4gIF0sXG4gIFtcImNpcmNsZVwiLCB7IGN4OiBcIjEyXCIsIGN5OiBcIjEzXCIsIHI6IFwiM1wiLCBrZXk6IFwiMXZnM2V1XCIgfV1cbl0pO1xuXG5leHBvcnQgeyBDYW1lcmEgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FtZXJhLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBTcXVhcmUgPSBjcmVhdGVMdWNpZGVJY29uKFwiU3F1YXJlXCIsIFtcbiAgW1wicmVjdFwiLCB7IHdpZHRoOiBcIjE4XCIsIGhlaWdodDogXCIxOFwiLCB4OiBcIjNcIiwgeTogXCIzXCIsIHJ4OiBcIjJcIiwga2V5OiBcImFmaXR2N1wiIH1dXG5dKTtcblxuZXhwb3J0IHsgU3F1YXJlIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNxdWFyZS5qcy5tYXBcbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgQ2lyY2xlID0gY3JlYXRlTHVjaWRlSWNvbihcIkNpcmNsZVwiLCBbXG4gIFtcImNpcmNsZVwiLCB7IGN4OiBcIjEyXCIsIGN5OiBcIjEyXCIsIHI6IFwiMTBcIiwga2V5OiBcIjFtZ2xheVwiIH1dXG5dKTtcblxuZXhwb3J0IHsgQ2lyY2xlIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNpcmNsZS5qcy5tYXBcbiIsIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjI5NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgQXJyb3dSaWdodCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJBcnJvd1JpZ2h0XCIsIFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTUgMTJoMTRcIiwga2V5OiBcIjFheXMwaFwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtMTIgNSA3IDctNyA3XCIsIGtleTogXCJ4cXV6NGNcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IEFycm93UmlnaHQgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyb3ctcmlnaHQuanMubWFwXG4iLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFR5cGUgPSBjcmVhdGVMdWNpZGVJY29uKFwiVHlwZVwiLCBbXG4gIFtcInBvbHlsaW5lXCIsIHsgcG9pbnRzOiBcIjQgNyA0IDQgMjAgNCAyMCA3XCIsIGtleTogXCIxbm9zYW5cIiB9XSxcbiAgW1wibGluZVwiLCB7IHgxOiBcIjlcIiwgeDI6IFwiMTVcIiwgeTE6IFwiMjBcIiwgeTI6IFwiMjBcIiwga2V5OiBcInN3aW45eVwiIH1dLFxuICBbXCJsaW5lXCIsIHsgeDE6IFwiMTJcIiwgeDI6IFwiMTJcIiwgeTE6IFwiNFwiLCB5MjogXCIyMFwiLCBrZXk6IFwiMXR4MXJyXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBUeXBlIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGUuanMubWFwXG4iLCIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4yOTQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFVuZG8gPSBjcmVhdGVMdWNpZGVJY29uKFwiVW5kb1wiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0zIDd2Nmg2XCIsIGtleTogXCIxdjJoOTBcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTIxIDE3YTkgOSAwIDAgMC05LTkgOSA5IDAgMCAwLTYgMi4zTDMgMTNcIiwga2V5OiBcIjFyNnV1NlwiIH1dXG5dKTtcblxuZXhwb3J0IHsgVW5kbyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bmRvLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBSZWRvID0gY3JlYXRlTHVjaWRlSWNvbihcIlJlZG9cIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMjEgN3Y2aC02XCIsIGtleTogXCIzcHR1cjRcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTMgMTdhOSA5IDAgMCAxIDktOSA5IDkgMCAwIDEgNiAyLjNsMyAyLjdcIiwga2V5OiBcIjFrZ2F3clwiIH1dXG5dKTtcblxuZXhwb3J0IHsgUmVkbyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWRvLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBTYXZlID0gY3JlYXRlTHVjaWRlSWNvbihcIlNhdmVcIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMTkgMjFINWEyIDIgMCAwIDEtMi0yVjVhMiAyIDAgMCAxIDItMmgxMWw1IDV2MTFhMiAyIDAgMCAxLTIgMnpcIiwga2V5OiBcIjFvd29xaFwiIH1dLFxuICBbXCJwb2x5bGluZVwiLCB7IHBvaW50czogXCIxNyAyMSAxNyAxMyA3IDEzIDcgMjFcIiwga2V5OiBcIjFtZDM1Y1wiIH1dLFxuICBbXCJwb2x5bGluZVwiLCB7IHBvaW50czogXCI3IDMgNyA4IDE1IDhcIiwga2V5OiBcIjhuejhhblwiIH1dXG5dKTtcblxuZXhwb3J0IHsgU2F2ZSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zYXZlLmpzLm1hcFxuIiwiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMjk0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBEb3dubG9hZCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJEb3dubG9hZFwiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMSAxNXY0YTIgMiAwIDAgMS0yIDJINWEyIDIgMCAwIDEtMi0ydi00XCIsIGtleTogXCJpaDduM2hcIiB9XSxcbiAgW1wicG9seWxpbmVcIiwgeyBwb2ludHM6IFwiNyAxMCAxMiAxNSAxNyAxMFwiLCBrZXk6IFwiMmdncXZ5XCIgfV0sXG4gIFtcImxpbmVcIiwgeyB4MTogXCIxMlwiLCB4MjogXCIxMlwiLCB5MTogXCIxNVwiLCB5MjogXCIzXCIsIGtleTogXCIxdmsyamVcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IERvd25sb2FkIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvd25sb2FkLmpzLm1hcFxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDYW1lcmEsIFNxdWFyZSwgQ2lyY2xlLCBBcnJvd1JpZ2h0LCBUeXBlLCBQYWxldHRlLCBEb3dubG9hZCwgWCwgVW5kbywgUmVkbywgU2F2ZSB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5cbmludGVyZmFjZSBTY3JlZW5zaG90VG9vbFByb3BzIHtcbiAgaXNWaXNpYmxlOiBib29sZWFuO1xuICBvbkNsb3NlOiAoKSA9PiB2b2lkO1xufVxuXG5pbnRlcmZhY2UgQW5ub3RhdGlvbiB7XG4gIGlkOiBzdHJpbmc7XG4gIHR5cGU6ICdyZWN0YW5nbGUnIHwgJ2NpcmNsZScgfCAnYXJyb3cnIHwgJ3RleHQnO1xuICBzdGFydFg6IG51bWJlcjtcbiAgc3RhcnRZOiBudW1iZXI7XG4gIGVuZFg6IG51bWJlcjtcbiAgZW5kWTogbnVtYmVyO1xuICB0ZXh0Pzogc3RyaW5nO1xuICBjb2xvcjogc3RyaW5nO1xuICBzdHJva2VXaWR0aDogbnVtYmVyO1xufVxuXG5jb25zdCBTY3JlZW5zaG90VG9vbDogUmVhY3QuRkM8U2NyZWVuc2hvdFRvb2xQcm9wcz4gPSAoeyBpc1Zpc2libGUsIG9uQ2xvc2UgfSkgPT4ge1xuICBjb25zdCBbaXNDYXB0dXJpbmcsIHNldElzQ2FwdHVyaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2NhcHR1cmVkSW1hZ2UsIHNldENhcHR1cmVkSW1hZ2VdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc0Fubm90YXRpbmcsIHNldElzQW5ub3RhdGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZWxlY3RlZFRvb2wsIHNldFNlbGVjdGVkVG9vbF0gPSB1c2VTdGF0ZTwncmVjdGFuZ2xlJyB8ICdjaXJjbGUnIHwgJ2Fycm93JyB8ICd0ZXh0Jz4oJ3JlY3RhbmdsZScpO1xuICBjb25zdCBbYW5ub3RhdGlvbnMsIHNldEFubm90YXRpb25zXSA9IHVzZVN0YXRlPEFubm90YXRpb25bXT4oW10pO1xuICBjb25zdCBbaXNEcmF3aW5nLCBzZXRJc0RyYXdpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbY3VycmVudEFubm90YXRpb24sIHNldEN1cnJlbnRBbm5vdGF0aW9uXSA9IHVzZVN0YXRlPEFubm90YXRpb24gfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3NlbGVjdGVkQ29sb3IsIHNldFNlbGVjdGVkQ29sb3JdID0gdXNlU3RhdGUoJyNlZjQ0NDQnKTtcbiAgY29uc3QgW3N0cm9rZVdpZHRoLCBzZXRTdHJva2VXaWR0aF0gPSB1c2VTdGF0ZSgzKTtcbiAgY29uc3QgW3Nob3dDb2xvclBpY2tlciwgc2V0U2hvd0NvbG9yUGlja2VyXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3RleHRJbnB1dCwgc2V0VGV4dElucHV0XSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3Nob3dUZXh0SW5wdXQsIHNldFNob3dUZXh0SW5wdXRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdGV4dFBvc2l0aW9uLCBzZXRUZXh0UG9zaXRpb25dID0gdXNlU3RhdGUoeyB4OiAwLCB5OiAwIH0pO1xuICBjb25zdCBbaGlzdG9yeSwgc2V0SGlzdG9yeV0gPSB1c2VTdGF0ZTxBbm5vdGF0aW9uW11bXT4oW10pO1xuICBjb25zdCBbaGlzdG9yeUluZGV4LCBzZXRIaXN0b3J5SW5kZXhdID0gdXNlU3RhdGUoLTEpO1xuXG4gIGNvbnN0IGNhbnZhc1JlZiA9IHVzZVJlZjxIVE1MQ2FudmFzRWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IG92ZXJsYXlSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gIGNvbnN0IGNvbG9ycyA9IFtcbiAgICAnI2VmNDQ0NCcsICcjZjk3MzE2JywgJyNmNTllMGInLCAnIzEwYjk4MScsIFxuICAgICcjM2I4MmY2JywgJyM4YjVjZjYnLCAnI2VjNDg5OScsICcjMWYyOTM3J1xuICBdO1xuXG4gIGNvbnN0IHN0cm9rZVdpZHRocyA9IFsxLCAyLCAzLCA1LCA4XTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0NhcHR1cmluZykge1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAnY3Jvc3NoYWlyJztcbiAgICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAnYXV0byc7XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUuY3Vyc29yID0gJ2F1dG8nO1xuICAgIH07XG4gIH0sIFtpc0NhcHR1cmluZ10pO1xuXG4gIGNvbnN0IGNhcHR1cmVTY3JlZW4gPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldElzQ2FwdHVyaW5nKHRydWUpO1xuICAgICAgXG4gICAgICAvLyBVc2UgQ2hyb21lJ3MgYnVpbHQtaW4gc2NyZWVuc2hvdCBBUElcbiAgICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0RGlzcGxheU1lZGlhKHtcbiAgICAgICAgdmlkZW86IHsgbWVkaWFTb3VyY2U6ICdzY3JlZW4nIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBjb25zdCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJyk7XG4gICAgICB2aWRlby5zcmNPYmplY3QgPSBzdHJlYW07XG4gICAgICB2aWRlby5wbGF5KCk7XG4gICAgICBcbiAgICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRlZG1ldGFkYXRhJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbiAgICAgICAgY2FudmFzLndpZHRoID0gdmlkZW8udmlkZW9XaWR0aDtcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IHZpZGVvLnZpZGVvSGVpZ2h0O1xuICAgICAgICBcbiAgICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgIGN0eD8uZHJhd0ltYWdlKHZpZGVvLCAwLCAwKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGRhdGFVUkwgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9wbmcnKTtcbiAgICAgICAgc2V0Q2FwdHVyZWRJbWFnZShkYXRhVVJMKTtcbiAgICAgICAgc2V0SXNBbm5vdGF0aW5nKHRydWUpO1xuICAgICAgICBzZXRJc0NhcHR1cmluZyhmYWxzZSk7XG4gICAgICAgIFxuICAgICAgICAvLyBTdG9wIHRoZSBzdHJlYW1cbiAgICAgICAgc3RyZWFtLmdldFRyYWNrcygpLmZvckVhY2godHJhY2sgPT4gdHJhY2suc3RvcCgpKTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY2FwdHVyZSBzY3JlZW46JywgZXJyb3IpO1xuICAgICAgc2V0SXNDYXB0dXJpbmcoZmFsc2UpO1xuICAgICAgXG4gICAgICAvLyBGYWxsYmFjazogY2FwdHVyZSBjdXJyZW50IHZpZXdwb3J0XG4gICAgICBhd2FpdCBjYXB0dXJlVmlld3BvcnQoKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgY2FwdHVyZVZpZXdwb3J0ID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbiAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgXG4gICAgICBjYW52YXMud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgIGNhbnZhcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBhIHNpbXBsZSBzY3JlZW5zaG90IGJ5IGNvbnZlcnRpbmcgdGhlIHBhZ2UgdG8gY2FudmFzXG4gICAgICAvLyBUaGlzIGlzIGEgc2ltcGxpZmllZCB2ZXJzaW9uIC0gaW4gYSByZWFsIGltcGxlbWVudGF0aW9uIHlvdSdkIHVzZSBodG1sMmNhbnZhc1xuICAgICAgaWYgKGN0eCkge1xuICAgICAgICBjdHguZmlsbFN0eWxlID0gJyNmZmZmZmYnO1xuICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICcjMzc0MTUxJztcbiAgICAgICAgY3R4LmZvbnQgPSAnMjRweCBBcmlhbCc7XG4gICAgICAgIGN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICAgICAgY3R4LmZpbGxUZXh0KCdTY3JlZW5zaG90IGNhcHR1cmVkIScsIGNhbnZhcy53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLyAyKTtcbiAgICAgICAgY3R4LmZpbGxUZXh0KCcoRGVtbyBzY3JlZW5zaG90IC0gcmVhbCBpbXBsZW1lbnRhdGlvbiB3b3VsZCBjYXB0dXJlIGFjdHVhbCBwYWdlKScsIGNhbnZhcy53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLyAyICsgNDApO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBkYXRhVVJMID0gY2FudmFzLnRvRGF0YVVSTCgnaW1hZ2UvcG5nJyk7XG4gICAgICBzZXRDYXB0dXJlZEltYWdlKGRhdGFVUkwpO1xuICAgICAgc2V0SXNBbm5vdGF0aW5nKHRydWUpO1xuICAgICAgc2V0SXNDYXB0dXJpbmcoZmFsc2UpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY2FwdHVyZSB2aWV3cG9ydDonLCBlcnJvcik7XG4gICAgICBzZXRJc0NhcHR1cmluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHN0YXJ0QW5ub3RhdGlvbiA9IHVzZUNhbGxiYWNrKChlOiBSZWFjdC5Nb3VzZUV2ZW50KSA9PiB7XG4gICAgaWYgKCFpc0Fubm90YXRpbmcgfHwgIWNhbnZhc1JlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgY29uc3QgcmVjdCA9IGNhbnZhc1JlZi5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHggPSBlLmNsaWVudFggLSByZWN0LmxlZnQ7XG4gICAgY29uc3QgeSA9IGUuY2xpZW50WSAtIHJlY3QudG9wO1xuICAgIFxuICAgIGlmIChzZWxlY3RlZFRvb2wgPT09ICd0ZXh0Jykge1xuICAgICAgc2V0VGV4dFBvc2l0aW9uKHsgeCwgeSB9KTtcbiAgICAgIHNldFNob3dUZXh0SW5wdXQodHJ1ZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IG5ld0Fubm90YXRpb246IEFubm90YXRpb24gPSB7XG4gICAgICBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLFxuICAgICAgdHlwZTogc2VsZWN0ZWRUb29sLFxuICAgICAgc3RhcnRYOiB4LFxuICAgICAgc3RhcnRZOiB5LFxuICAgICAgZW5kWDogeCxcbiAgICAgIGVuZFk6IHksXG4gICAgICBjb2xvcjogc2VsZWN0ZWRDb2xvcixcbiAgICAgIHN0cm9rZVdpZHRoXG4gICAgfTtcbiAgICBcbiAgICBzZXRDdXJyZW50QW5ub3RhdGlvbihuZXdBbm5vdGF0aW9uKTtcbiAgICBzZXRJc0RyYXdpbmcodHJ1ZSk7XG4gIH0sIFtpc0Fubm90YXRpbmcsIHNlbGVjdGVkVG9vbCwgc2VsZWN0ZWRDb2xvciwgc3Ryb2tlV2lkdGhdKTtcblxuICBjb25zdCB1cGRhdGVBbm5vdGF0aW9uID0gdXNlQ2FsbGJhY2soKGU6IFJlYWN0Lk1vdXNlRXZlbnQpID0+IHtcbiAgICBpZiAoIWlzRHJhd2luZyB8fCAhY3VycmVudEFubm90YXRpb24gfHwgIWNhbnZhc1JlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgY29uc3QgcmVjdCA9IGNhbnZhc1JlZi5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHggPSBlLmNsaWVudFggLSByZWN0LmxlZnQ7XG4gICAgY29uc3QgeSA9IGUuY2xpZW50WSAtIHJlY3QudG9wO1xuICAgIFxuICAgIHNldEN1cnJlbnRBbm5vdGF0aW9uKHtcbiAgICAgIC4uLmN1cnJlbnRBbm5vdGF0aW9uLFxuICAgICAgZW5kWDogeCxcbiAgICAgIGVuZFk6IHlcbiAgICB9KTtcbiAgfSwgW2lzRHJhd2luZywgY3VycmVudEFubm90YXRpb25dKTtcblxuICBjb25zdCBmaW5pc2hBbm5vdGF0aW9uID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmICghaXNEcmF3aW5nIHx8ICFjdXJyZW50QW5ub3RhdGlvbikgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IG5ld0Fubm90YXRpb25zID0gWy4uLmFubm90YXRpb25zLCBjdXJyZW50QW5ub3RhdGlvbl07XG4gICAgc2V0QW5ub3RhdGlvbnMobmV3QW5ub3RhdGlvbnMpO1xuICAgIFxuICAgIC8vIEFkZCB0byBoaXN0b3J5XG4gICAgY29uc3QgbmV3SGlzdG9yeSA9IGhpc3Rvcnkuc2xpY2UoMCwgaGlzdG9yeUluZGV4ICsgMSk7XG4gICAgbmV3SGlzdG9yeS5wdXNoKG5ld0Fubm90YXRpb25zKTtcbiAgICBzZXRIaXN0b3J5KG5ld0hpc3RvcnkpO1xuICAgIHNldEhpc3RvcnlJbmRleChuZXdIaXN0b3J5Lmxlbmd0aCAtIDEpO1xuICAgIFxuICAgIHNldEN1cnJlbnRBbm5vdGF0aW9uKG51bGwpO1xuICAgIHNldElzRHJhd2luZyhmYWxzZSk7XG4gIH0sIFtpc0RyYXdpbmcsIGN1cnJlbnRBbm5vdGF0aW9uLCBhbm5vdGF0aW9ucywgaGlzdG9yeSwgaGlzdG9yeUluZGV4XSk7XG5cbiAgY29uc3QgYWRkVGV4dEFubm90YXRpb24gPSAoKSA9PiB7XG4gICAgaWYgKCF0ZXh0SW5wdXQudHJpbSgpKSByZXR1cm47XG4gICAgXG4gICAgY29uc3QgdGV4dEFubm90YXRpb246IEFubm90YXRpb24gPSB7XG4gICAgICBpZDogRGF0ZS5ub3coKS50b1N0cmluZygpLFxuICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgc3RhcnRYOiB0ZXh0UG9zaXRpb24ueCxcbiAgICAgIHN0YXJ0WTogdGV4dFBvc2l0aW9uLnksXG4gICAgICBlbmRYOiB0ZXh0UG9zaXRpb24ueCxcbiAgICAgIGVuZFk6IHRleHRQb3NpdGlvbi55LFxuICAgICAgdGV4dDogdGV4dElucHV0LFxuICAgICAgY29sb3I6IHNlbGVjdGVkQ29sb3IsXG4gICAgICBzdHJva2VXaWR0aFxuICAgIH07XG4gICAgXG4gICAgY29uc3QgbmV3QW5ub3RhdGlvbnMgPSBbLi4uYW5ub3RhdGlvbnMsIHRleHRBbm5vdGF0aW9uXTtcbiAgICBzZXRBbm5vdGF0aW9ucyhuZXdBbm5vdGF0aW9ucyk7XG4gICAgXG4gICAgLy8gQWRkIHRvIGhpc3RvcnlcbiAgICBjb25zdCBuZXdIaXN0b3J5ID0gaGlzdG9yeS5zbGljZSgwLCBoaXN0b3J5SW5kZXggKyAxKTtcbiAgICBuZXdIaXN0b3J5LnB1c2gobmV3QW5ub3RhdGlvbnMpO1xuICAgIHNldEhpc3RvcnkobmV3SGlzdG9yeSk7XG4gICAgc2V0SGlzdG9yeUluZGV4KG5ld0hpc3RvcnkubGVuZ3RoIC0gMSk7XG4gICAgXG4gICAgc2V0VGV4dElucHV0KCcnKTtcbiAgICBzZXRTaG93VGV4dElucHV0KGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCB1bmRvID0gKCkgPT4ge1xuICAgIGlmIChoaXN0b3J5SW5kZXggPiAwKSB7XG4gICAgICBzZXRIaXN0b3J5SW5kZXgoaGlzdG9yeUluZGV4IC0gMSk7XG4gICAgICBzZXRBbm5vdGF0aW9ucyhoaXN0b3J5W2hpc3RvcnlJbmRleCAtIDFdKTtcbiAgICB9IGVsc2UgaWYgKGhpc3RvcnlJbmRleCA9PT0gMCkge1xuICAgICAgc2V0SGlzdG9yeUluZGV4KC0xKTtcbiAgICAgIHNldEFubm90YXRpb25zKFtdKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgcmVkbyA9ICgpID0+IHtcbiAgICBpZiAoaGlzdG9yeUluZGV4IDwgaGlzdG9yeS5sZW5ndGggLSAxKSB7XG4gICAgICBzZXRIaXN0b3J5SW5kZXgoaGlzdG9yeUluZGV4ICsgMSk7XG4gICAgICBzZXRBbm5vdGF0aW9ucyhoaXN0b3J5W2hpc3RvcnlJbmRleCArIDFdKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgZHJhd0Fubm90YXRpb24gPSAoY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsIGFubm90YXRpb246IEFubm90YXRpb24pID0+IHtcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSBhbm5vdGF0aW9uLmNvbG9yO1xuICAgIGN0eC5saW5lV2lkdGggPSBhbm5vdGF0aW9uLnN0cm9rZVdpZHRoO1xuICAgIGN0eC5saW5lQ2FwID0gJ3JvdW5kJztcbiAgICBcbiAgICBzd2l0Y2ggKGFubm90YXRpb24udHlwZSkge1xuICAgICAgY2FzZSAncmVjdGFuZ2xlJzpcbiAgICAgICAgY3R4LnN0cm9rZVJlY3QoXG4gICAgICAgICAgYW5ub3RhdGlvbi5zdGFydFgsXG4gICAgICAgICAgYW5ub3RhdGlvbi5zdGFydFksXG4gICAgICAgICAgYW5ub3RhdGlvbi5lbmRYIC0gYW5ub3RhdGlvbi5zdGFydFgsXG4gICAgICAgICAgYW5ub3RhdGlvbi5lbmRZIC0gYW5ub3RhdGlvbi5zdGFydFlcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnY2lyY2xlJzpcbiAgICAgICAgY29uc3QgcmFkaXVzID0gTWF0aC5zcXJ0KFxuICAgICAgICAgIE1hdGgucG93KGFubm90YXRpb24uZW5kWCAtIGFubm90YXRpb24uc3RhcnRYLCAyKSArXG4gICAgICAgICAgTWF0aC5wb3coYW5ub3RhdGlvbi5lbmRZIC0gYW5ub3RhdGlvbi5zdGFydFksIDIpXG4gICAgICAgICk7XG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgY3R4LmFyYyhhbm5vdGF0aW9uLnN0YXJ0WCwgYW5ub3RhdGlvbi5zdGFydFksIHJhZGl1cywgMCwgMiAqIE1hdGguUEkpO1xuICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ2Fycm93JzpcbiAgICAgICAgZHJhd0Fycm93KGN0eCwgYW5ub3RhdGlvbi5zdGFydFgsIGFubm90YXRpb24uc3RhcnRZLCBhbm5vdGF0aW9uLmVuZFgsIGFubm90YXRpb24uZW5kWSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICBjdHguZmlsbFN0eWxlID0gYW5ub3RhdGlvbi5jb2xvcjtcbiAgICAgICAgY3R4LmZvbnQgPSBgJHthbm5vdGF0aW9uLnN0cm9rZVdpZHRoICogNn1weCBBcmlhbGA7XG4gICAgICAgIGN0eC5maWxsVGV4dChhbm5vdGF0aW9uLnRleHQgfHwgJycsIGFubm90YXRpb24uc3RhcnRYLCBhbm5vdGF0aW9uLnN0YXJ0WSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBkcmF3QXJyb3cgPSAoY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsIHN0YXJ0WDogbnVtYmVyLCBzdGFydFk6IG51bWJlciwgZW5kWDogbnVtYmVyLCBlbmRZOiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBoZWFkTGVuZ3RoID0gMTU7XG4gICAgY29uc3QgYW5nbGUgPSBNYXRoLmF0YW4yKGVuZFkgLSBzdGFydFksIGVuZFggLSBzdGFydFgpO1xuICAgIFxuICAgIC8vIERyYXcgbGluZVxuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjdHgubW92ZVRvKHN0YXJ0WCwgc3RhcnRZKTtcbiAgICBjdHgubGluZVRvKGVuZFgsIGVuZFkpO1xuICAgIGN0eC5zdHJva2UoKTtcbiAgICBcbiAgICAvLyBEcmF3IGFycm93aGVhZFxuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjdHgubW92ZVRvKGVuZFgsIGVuZFkpO1xuICAgIGN0eC5saW5lVG8oXG4gICAgICBlbmRYIC0gaGVhZExlbmd0aCAqIE1hdGguY29zKGFuZ2xlIC0gTWF0aC5QSSAvIDYpLFxuICAgICAgZW5kWSAtIGhlYWRMZW5ndGggKiBNYXRoLnNpbihhbmdsZSAtIE1hdGguUEkgLyA2KVxuICAgICk7XG4gICAgY3R4Lm1vdmVUbyhlbmRYLCBlbmRZKTtcbiAgICBjdHgubGluZVRvKFxuICAgICAgZW5kWCAtIGhlYWRMZW5ndGggKiBNYXRoLmNvcyhhbmdsZSArIE1hdGguUEkgLyA2KSxcbiAgICAgIGVuZFkgLSBoZWFkTGVuZ3RoICogTWF0aC5zaW4oYW5nbGUgKyBNYXRoLlBJIC8gNilcbiAgICApO1xuICAgIGN0eC5zdHJva2UoKTtcbiAgfTtcblxuICBjb25zdCByZWRyYXdDYW52YXMgPSAoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnQ7XG4gICAgaWYgKCFjYW52YXMgfHwgIWNhcHR1cmVkSW1hZ2UpIHJldHVybjtcbiAgICBcbiAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICBpZiAoIWN0eCkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAvLyBDYWxjdWxhdGUgcHJvcGVyIHNjYWxpbmcgdG8gbWFpbnRhaW4gYXNwZWN0IHJhdGlvXG4gICAgICBjb25zdCBhc3BlY3RSYXRpbyA9IGltZy53aWR0aCAvIGltZy5oZWlnaHQ7XG4gICAgICBjb25zdCBjYW52YXNBc3BlY3RSYXRpbyA9IGNhbnZhcy53aWR0aCAvIGNhbnZhcy5oZWlnaHQ7XG4gICAgICBcbiAgICAgIGxldCBkcmF3V2lkdGggPSBjYW52YXMud2lkdGg7XG4gICAgICBsZXQgZHJhd0hlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSBkaW1lbnNpb25zIHRvIGZpdCBpbWFnZSBpbnNpZGUgY2FudmFzIHdoaWxlIG1haW50YWluaW5nIGFzcGVjdCByYXRpb1xuICAgICAgaWYgKGFzcGVjdFJhdGlvID4gY2FudmFzQXNwZWN0UmF0aW8pIHtcbiAgICAgICAgLy8gSW1hZ2UgaXMgd2lkZXIgcmVsYXRpdmUgdG8gY2FudmFzXG4gICAgICAgIGRyYXdIZWlnaHQgPSBjYW52YXMud2lkdGggLyBhc3BlY3RSYXRpbztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEltYWdlIGlzIHRhbGxlciByZWxhdGl2ZSB0byBjYW52YXNcbiAgICAgICAgZHJhd1dpZHRoID0gY2FudmFzLmhlaWdodCAqIGFzcGVjdFJhdGlvO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDZW50ZXIgdGhlIGltYWdlXG4gICAgICBjb25zdCBvZmZzZXRYID0gKGNhbnZhcy53aWR0aCAtIGRyYXdXaWR0aCkgLyAyO1xuICAgICAgY29uc3Qgb2Zmc2V0WSA9IChjYW52YXMuaGVpZ2h0IC0gZHJhd0hlaWdodCkgLyAyO1xuICAgICAgXG4gICAgICAvLyBDbGVhciBjYW52YXNcbiAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgIFxuICAgICAgLy8gU2V0IGltYWdlIHNtb290aGluZyBmb3IgYmV0dGVyIHF1YWxpdHlcbiAgICAgIGN0eC5pbWFnZVNtb290aGluZ0VuYWJsZWQgPSB0cnVlO1xuICAgICAgY3R4LmltYWdlU21vb3RoaW5nUXVhbGl0eSA9ICdoaWdoJztcbiAgICAgIFxuICAgICAgLy8gRHJhdyB0aGUgaW1hZ2Ugd2l0aCBwcm9wZXIgYXNwZWN0IHJhdGlvIHByZXNlcnZhdGlvblxuICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIG9mZnNldFgsIG9mZnNldFksIGRyYXdXaWR0aCwgZHJhd0hlaWdodCk7XG4gICAgICBcbiAgICAgIC8vIERyYXcgYWxsIGFubm90YXRpb25zXG4gICAgICBbLi4uYW5ub3RhdGlvbnMsIGN1cnJlbnRBbm5vdGF0aW9uXS5maWx0ZXIoQm9vbGVhbikuZm9yRWFjaChhbm5vdGF0aW9uID0+IHtcbiAgICAgICAgZHJhd0Fubm90YXRpb24oY3R4LCBhbm5vdGF0aW9uISk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGltZy5zcmMgPSBjYXB0dXJlZEltYWdlO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmVkcmF3Q2FudmFzKCk7XG4gIH0sIFtjYXB0dXJlZEltYWdlLCBhbm5vdGF0aW9ucywgY3VycmVudEFubm90YXRpb25dKTtcblxuICBjb25zdCBkb3dubG9hZFNjcmVlbnNob3QgPSAoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnQ7XG4gICAgaWYgKCFjYW52YXMpIHJldHVybjtcbiAgICBcbiAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIGxpbmsuZG93bmxvYWQgPSBgbmVzdC1zY3JlZW5zaG90LSR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDE5KX0ucG5nYDtcbiAgICBsaW5rLmhyZWYgPSBjYW52YXMudG9EYXRhVVJMKCk7XG4gICAgbGluay5jbGljaygpO1xuICB9O1xuXG4gIGNvbnN0IHNhdmVUb05lc3QgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnQ7XG4gICAgaWYgKCFjYW52YXMpIHJldHVybjtcbiAgICBcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF0YVVSTCA9IGNhbnZhcy50b0RhdGFVUkwoKTtcbiAgICAgIFxuICAgICAgLy8gU2VuZCB0byBiYWNrZ3JvdW5kIHNjcmlwdCB0byBzYXZlXG4gICAgICBhd2FpdCBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICAgIGFjdGlvbjogJ3NhdmVTY3JlZW5zaG90JyxcbiAgICAgICAgc2NyZWVuc2hvdDogZGF0YVVSTCxcbiAgICAgICAgdXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZixcbiAgICAgICAgdGl0bGU6IGRvY3VtZW50LnRpdGxlXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgb25DbG9zZSgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc2F2ZSBzY3JlZW5zaG90OicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgcmVzZXRUb29sID0gKCkgPT4ge1xuICAgIHNldENhcHR1cmVkSW1hZ2UobnVsbCk7XG4gICAgc2V0SXNBbm5vdGF0aW5nKGZhbHNlKTtcbiAgICBzZXRBbm5vdGF0aW9ucyhbXSk7XG4gICAgc2V0SGlzdG9yeShbXSk7XG4gICAgc2V0SGlzdG9yeUluZGV4KC0xKTtcbiAgICBzZXRDdXJyZW50QW5ub3RhdGlvbihudWxsKTtcbiAgICBzZXRJc0RyYXdpbmcoZmFsc2UpO1xuICAgIHNldFNob3dUZXh0SW5wdXQoZmFsc2UpO1xuICAgIHNldFRleHRJbnB1dCgnJyk7XG4gIH07XG5cbiAgaWYgKCFpc1Zpc2libGUpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJuZXN0LXNjcmVlbnNob3QtdG9vbFwiPlxuICAgICAgeyFjYXB0dXJlZEltYWdlID8gKFxuICAgICAgICAvKiBDYXB0dXJlIFNjcmVlbiBJbnRlcmZhY2UgKi9cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXB0dXJlLWludGVyZmFjZVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FwdHVyZS1jYXJkXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcHR1cmUtaGVhZGVyXCI+XG4gICAgICAgICAgICAgIDxDYW1lcmEgc2l6ZT17MzJ9IC8+XG4gICAgICAgICAgICAgIDxoMz5TY3JlZW5zaG90IFRvb2w8L2gzPlxuICAgICAgICAgICAgICA8cD5DYXB0dXJlIGFuZCBhbm5vdGF0ZSBzY3JlZW5zaG90cyBpbnN0YW50bHk8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FwdHVyZS1hY3Rpb25zXCI+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYXB0dXJlLWJ0biBwcmltYXJ5XCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtjYXB0dXJlU2NyZWVufVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc0NhcHR1cmluZ31cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxDYW1lcmEgc2l6ZT17MjB9IC8+XG4gICAgICAgICAgICAgICAge2lzQ2FwdHVyaW5nID8gJ0NhcHR1cmluZy4uLicgOiAnQ2FwdHVyZSBTY3JlZW4nfVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNhcHR1cmUtYnRuIHNlY29uZGFyeVwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17Y2FwdHVyZVZpZXdwb3J0fVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc0NhcHR1cmluZ31cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxTcXVhcmUgc2l6ZT17MjB9IC8+XG4gICAgICAgICAgICAgICAgQ2FwdHVyZSBWaWV3cG9ydFxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiY2xvc2UtYnRuXCIgb25DbGljaz17b25DbG9zZX0gdGl0bGU9XCJDbG9zZSBzY3JlZW5zaG90IHRvb2xcIj5cbiAgICAgICAgICAgIDxYIHNpemU9ezIwfSAvPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICkgOiAoXG4gICAgICAgIC8qIEFubm90YXRpb24gSW50ZXJmYWNlICovXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYW5ub3RhdGlvbi1pbnRlcmZhY2VcIj5cbiAgICAgICAgICB7LyogVG9vbGJhciAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFubm90YXRpb24tdG9vbGJhclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b29sLWdyb3VwXCI+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B0b29sLWJ0biAke3NlbGVjdGVkVG9vbCA9PT0gJ3JlY3RhbmdsZScgPyAnYWN0aXZlJyA6ICcnfWB9XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2VsZWN0ZWRUb29sKCdyZWN0YW5nbGUnKX1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIlJlY3RhbmdsZVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8U3F1YXJlIHNpemU9ezE4fSAvPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHRvb2wtYnRuICR7c2VsZWN0ZWRUb29sID09PSAnY2lyY2xlJyA/ICdhY3RpdmUnIDogJyd9YH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTZWxlY3RlZFRvb2woJ2NpcmNsZScpfVxuICAgICAgICAgICAgICAgIHRpdGxlPVwiQ2lyY2xlXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxDaXJjbGUgc2l6ZT17MTh9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdG9vbC1idG4gJHtzZWxlY3RlZFRvb2wgPT09ICdhcnJvdycgPyAnYWN0aXZlJyA6ICcnfWB9XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2VsZWN0ZWRUb29sKCdhcnJvdycpfVxuICAgICAgICAgICAgICAgIHRpdGxlPVwiQXJyb3dcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPEFycm93UmlnaHQgc2l6ZT17MTh9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdG9vbC1idG4gJHtzZWxlY3RlZFRvb2wgPT09ICd0ZXh0JyA/ICdhY3RpdmUnIDogJyd9YH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTZWxlY3RlZFRvb2woJ3RleHQnKX1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIlRleHRcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFR5cGUgc2l6ZT17MTh9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidG9vbC1ncm91cFwiPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidG9vbC1idG5cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNob3dDb2xvclBpY2tlcighc2hvd0NvbG9yUGlja2VyKX1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIkNvbG9yXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxQYWxldHRlIHNpemU9ezE4fSAvPlxuICAgICAgICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjb2xvci1pbmRpY2F0b3JcIiBcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGJhY2tncm91bmRDb2xvcjogc2VsZWN0ZWRDb2xvciB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAge3Nob3dDb2xvclBpY2tlciAmJiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2xvci1waWNrZXItZHJvcGRvd25cIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sb3JzLWdyaWRcIj5cbiAgICAgICAgICAgICAgICAgICAge2NvbG9ycy5tYXAoY29sb3IgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17Y29sb3J9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Bjb2xvci1vcHRpb24gJHtzZWxlY3RlZENvbG9yID09PSBjb2xvciA/ICdzZWxlY3RlZCcgOiAnJ31gfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiBjb2xvciB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZENvbG9yKGNvbG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2hvd0NvbG9yUGlja2VyKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17YFNlbGVjdCAke2NvbG9yfSBjb2xvcmB9XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXtgU2VsZWN0ICR7Y29sb3J9IGNvbG9yYH1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdHJva2Utd2lkdGhzXCI+XG4gICAgICAgICAgICAgICAgICAgIHtzdHJva2VXaWR0aHMubWFwKHdpZHRoID0+IChcbiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e3dpZHRofVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgc3Ryb2tlLW9wdGlvbiAke3N0cm9rZVdpZHRoID09PSB3aWR0aCA/ICdzZWxlY3RlZCcgOiAnJ31gfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U3Ryb2tlV2lkdGgod2lkdGgpfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9e2BTdHJva2Ugd2lkdGggJHt3aWR0aH1weGB9XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXtgU3Ryb2tlIHdpZHRoICR7d2lkdGh9cHhgfVxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInN0cm9rZS1wcmV2aWV3XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGAke3dpZHRoICogMn1weGAsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogYCR7d2lkdGggKiAyfXB4YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHNlbGVjdGVkQ29sb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b29sLWdyb3VwXCI+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0b29sLWJ0blwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17dW5kb31cbiAgICAgICAgICAgICAgICBkaXNhYmxlZD17aGlzdG9yeUluZGV4IDwgMH1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIlVuZG9cIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFVuZG8gc2l6ZT17MTh9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidG9vbC1idG5cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3JlZG99XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2hpc3RvcnlJbmRleCA+PSBoaXN0b3J5Lmxlbmd0aCAtIDF9XG4gICAgICAgICAgICAgICAgdGl0bGU9XCJSZWRvXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxSZWRvIHNpemU9ezE4fSAvPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRvb2wtZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRvb2wtYnRuIHN1Y2Nlc3NcIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3NhdmVUb05lc3R9XG4gICAgICAgICAgICAgICAgdGl0bGU9XCJTYXZlIHRvIE5lc3RcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFNhdmUgc2l6ZT17MTh9IC8+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidG9vbC1idG5cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2Rvd25sb2FkU2NyZWVuc2hvdH1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIkRvd25sb2FkXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxEb3dubG9hZCBzaXplPXsxOH0gLz5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0b29sLWJ0blwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17cmVzZXRUb29sfVxuICAgICAgICAgICAgICAgIHRpdGxlPVwiTmV3IFNjcmVlbnNob3RcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPENhbWVyYSBzaXplPXsxOH0gLz5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0b29sLWJ0biBkYW5nZXJcIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xvc2V9XG4gICAgICAgICAgICAgICAgdGl0bGU9XCJDbG9zZVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8WCBzaXplPXsxOH0gLz5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBDYW52YXMgKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYW52YXMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8Y2FudmFzXG4gICAgICAgICAgICAgIHJlZj17Y2FudmFzUmVmfVxuICAgICAgICAgICAgICB3aWR0aD17ODAwfVxuICAgICAgICAgICAgICBoZWlnaHQ9ezYwMH1cbiAgICAgICAgICAgICAgb25Nb3VzZURvd249e3N0YXJ0QW5ub3RhdGlvbn1cbiAgICAgICAgICAgICAgb25Nb3VzZU1vdmU9e3VwZGF0ZUFubm90YXRpb259XG4gICAgICAgICAgICAgIG9uTW91c2VVcD17ZmluaXNoQW5ub3RhdGlvbn1cbiAgICAgICAgICAgICAgc3R5bGU9e3sgY3Vyc29yOiBpc0Fubm90YXRpbmcgPyAnY3Jvc3NoYWlyJyA6ICdkZWZhdWx0JyB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBUZXh0IElucHV0IE1vZGFsICovfVxuICAgICAgICAgIHtzaG93VGV4dElucHV0ICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1pbnB1dC1tb2RhbFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtaW5wdXQtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxoND5BZGQgVGV4dDwvaDQ+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICB2YWx1ZT17dGV4dElucHV0fVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRUZXh0SW5wdXQoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB0ZXh0Li4uXCJcbiAgICAgICAgICAgICAgICAgIGF1dG9Gb2N1c1xuICAgICAgICAgICAgICAgICAgb25LZXlQcmVzcz17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgYWRkVGV4dEFubm90YXRpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICBzZXRTaG93VGV4dElucHV0KGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICBzZXRUZXh0SW5wdXQoJycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWlucHV0LWFjdGlvbnNcIj5cbiAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17YWRkVGV4dEFubm90YXRpb259IGNsYXNzTmFtZT1cImJ0biBwcmltYXJ5XCI+XG4gICAgICAgICAgICAgICAgICAgIEFkZCBUZXh0XG4gICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBzZXRTaG93VGV4dElucHV0KGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICBzZXRUZXh0SW5wdXQoJycpO1xuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gc2Vjb25kYXJ5XCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLm5lc3Qtc2NyZWVuc2hvdC10b29sIHtcbiAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgIHotaW5kZXg6IDk5OTk5OTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOSk7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIHN5c3RlbS11aSwgc2Fucy1zZXJpZjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXB0dXJlLWludGVyZmFjZSB7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhcHR1cmUtY2FyZCB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgICAgICAgICBwYWRkaW5nOiA0MHB4O1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDIwcHggNDBweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXB0dXJlLWhlYWRlciBoMyB7XG4gICAgICAgICAgbWFyZ2luOiAxNnB4IDAgOHB4IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgY29sb3I6ICMxZjI5Mzc7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FwdHVyZS1oZWFkZXIgcCB7XG4gICAgICAgICAgbWFyZ2luOiAwIDAgMzJweCAwO1xuICAgICAgICAgIGNvbG9yOiAjNmI3MjgwO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXB0dXJlLWFjdGlvbnMge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBnYXA6IDEycHg7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FwdHVyZS1idG4ge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBnYXA6IDhweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMnB4IDI0cHg7XG4gICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FwdHVyZS1idG4ucHJpbWFyeSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzNiODJmNjtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FwdHVyZS1idG4ucHJpbWFyeTpob3Zlcjpub3QoOmRpc2FibGVkKSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzI1NjNlYjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYXB0dXJlLWJ0bi5zZWNvbmRhcnkge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNmM2Y0ZjY7XG4gICAgICAgICAgY29sb3I6ICMzNzQxNTE7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FwdHVyZS1idG4uc2Vjb25kYXJ5OmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTVlN2ViO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNhcHR1cmUtYnRuOmRpc2FibGVkIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjU7XG4gICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jbG9zZS1idG4ge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IC01MHB4O1xuICAgICAgICAgIHJpZ2h0OiAtNTBweDtcbiAgICAgICAgICB3aWR0aDogNDBweDtcbiAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNsb3NlLWJ0bjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFubm90YXRpb24taW50ZXJmYWNlIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFubm90YXRpb24tdG9vbGJhciB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGdhcDogMTZweDtcbiAgICAgICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45NSk7XG4gICAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDhweCk7XG4gICAgICAgIH1cblxuICAgICAgICAudG9vbC1ncm91cCB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBnYXA6IDRweDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cblxuICAgICAgICAudG9vbC1idG4ge1xuICAgICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgY29sb3I6ICMzNzQxNTE7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRvb2wtYnRuOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjNmNGY2O1xuICAgICAgICB9XG5cbiAgICAgICAgLnRvb2wtYnRuLmFjdGl2ZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzNiODJmNjtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAudG9vbC1idG4uc3VjY2VzcyB7XG4gICAgICAgICAgY29sb3I6ICMxMGI5ODE7XG4gICAgICAgIH1cblxuICAgICAgICAudG9vbC1idG4uc3VjY2Vzczpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzEwYjk4MTtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAudG9vbC1idG4uZGFuZ2VyIHtcbiAgICAgICAgICBjb2xvcjogI2VmNDQ0NDtcbiAgICAgICAgfVxuXG4gICAgICAgIC50b29sLWJ0bi5kYW5nZXI6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNlZjQ0NDQ7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRvb2wtYnRuOmRpc2FibGVkIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjU7XG4gICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1pbmRpY2F0b3Ige1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBib3R0b206IDJweDtcbiAgICAgICAgICByaWdodDogMnB4O1xuICAgICAgICAgIHdpZHRoOiA4cHg7XG4gICAgICAgICAgaGVpZ2h0OiA4cHg7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1waWNrZXItZHJvcGRvd24ge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDEwMCU7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgICBib3gtc2hhZG93OiAwIDhweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgei1pbmRleDogMTAwMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvcnMtZ3JpZCB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xuICAgICAgICAgIGdhcDogNHB4O1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgICAgIH1cblxuICAgICAgICAuY29sb3Itb3B0aW9uIHtcbiAgICAgICAgICB3aWR0aDogMjRweDtcbiAgICAgICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycztcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1vcHRpb246aG92ZXIge1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb2xvci1vcHRpb24uc2VsZWN0ZWQge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogIzM3NDE1MTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgICAgIH1cblxuICAgICAgICAuc3Ryb2tlLXdpZHRocyB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBnYXA6IDhweDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5zdHJva2Utb3B0aW9uIHtcbiAgICAgICAgICB3aWR0aDogMzJweDtcbiAgICAgICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNmM2Y0ZjY7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgfVxuXG4gICAgICAgIC5zdHJva2Utb3B0aW9uOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTVlN2ViO1xuICAgICAgICB9XG5cbiAgICAgICAgLnN0cm9rZS1vcHRpb24uc2VsZWN0ZWQge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogIzNiODJmNjtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZGJlYWZlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnN0cm9rZS1wcmV2aWV3IHtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIH1cblxuICAgICAgICAuY2FudmFzLWNvbnRhaW5lciB7XG4gICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jYW52YXMtY29udGFpbmVyIGNhbnZhcyB7XG4gICAgICAgICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRleHQtaW5wdXQtbW9kYWwge1xuICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICB6LWluZGV4OiAxMDAxO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRleHQtaW5wdXQtY29udGVudCB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICAgICAgICBwYWRkaW5nOiAyNHB4O1xuICAgICAgICAgIG1pbi13aWR0aDogMzAwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAudGV4dC1pbnB1dC1jb250ZW50IGg0IHtcbiAgICAgICAgICBtYXJnaW46IDAgMCAxNnB4IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgY29sb3I6ICMxZjI5Mzc7XG4gICAgICAgIH1cblxuICAgICAgICAudGV4dC1pbnB1dC1jb250ZW50IGlucHV0IHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBwYWRkaW5nOiAxMnB4O1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkMWQ1ZGI7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAudGV4dC1pbnB1dC1jb250ZW50IGlucHV0OmZvY3VzIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICMzYjgyZjY7XG4gICAgICAgIH1cblxuICAgICAgICAudGV4dC1pbnB1dC1hY3Rpb25zIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGdhcDogOHB4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIH1cblxuICAgICAgICAuYnRuIHtcbiAgICAgICAgICBwYWRkaW5nOiA4cHggMTZweDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgfVxuXG4gICAgICAgIC5idG4ucHJpbWFyeSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzNiODJmNjtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAuYnRuLnByaW1hcnk6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMyNTYzZWI7XG4gICAgICAgIH1cblxuICAgICAgICAuYnRuLnNlY29uZGFyeSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2YzZjRmNjtcbiAgICAgICAgICBjb2xvcjogIzM3NDE1MTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5idG4uc2Vjb25kYXJ5OmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTVlN2ViO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTY3JlZW5zaG90VG9vbDsgIiwiaW1wb3J0IHsgTWVkaWFDb250ZW50LCBNZWRpYUF0dGFjaG1lbnQgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBjcmVhdGVXb3JrZXIgfSBmcm9tICd0ZXNzZXJhY3QuanMnO1xuXG4vKipcbiAqIE1lZGlhUHJvY2Vzc29yIC0gSGFuZGxlcyBleHRyYWN0aW9uIGFuZCBwcm9jZXNzaW5nIG9mIHZhcmlvdXMgbWVkaWEgdHlwZXNcbiAqIFN1cHBvcnRzIE9DUiBmb3IgaW1hZ2VzLCB0cmFuc2NyaXB0aW9uIGZvciBhdWRpbywgUERGIHRleHQgZXh0cmFjdGlvbiwgZXRjLlxuICovXG5leHBvcnQgY2xhc3MgTWVkaWFQcm9jZXNzb3Ige1xuICBwcml2YXRlIG9jcldvcmtlcjogYW55ID0gbnVsbDtcbiAgcHJpdmF0ZSBpc09jckluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5pbml0aWFsaXplT0NSKCk7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSBUZXNzZXJhY3QuanMgd29ya2VyIGZvciBPQ1IgcHJvY2Vzc2luZ1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBpbml0aWFsaXplT0NSKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLm9jcldvcmtlciA9IGF3YWl0IGNyZWF0ZVdvcmtlcignZW5nJyk7XG4gICAgICB0aGlzLmlzT2NySW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgY29uc29sZS5sb2coJ01lZGlhUHJvY2Vzc29yOiBPQ1Igd29ya2VyIGluaXRpYWxpemVkJyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01lZGlhUHJvY2Vzc29yOiBGYWlsZWQgdG8gaW5pdGlhbGl6ZSBPQ1Igd29ya2VyOicsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJvY2VzcyBzY3JlZW5zaG90IGltYWdlIHdpdGggT0NSXG4gICAqL1xuICBhc3luYyBwcm9jZXNzU2NyZWVuc2hvdChpbWFnZURhdGE6IHN0cmluZyk6IFByb21pc2U8TWVkaWFDb250ZW50PiB7XG4gICAgY29uc29sZS5sb2coJ01lZGlhUHJvY2Vzc29yOiBQcm9jZXNzaW5nIHNjcmVlbnNob3Qgd2l0aCBPQ1InKTtcbiAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGlmICghdGhpcy5pc09jckluaXRpYWxpemVkKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZU9DUigpO1xuICAgICAgfVxuXG4gICAgICBsZXQgZXh0cmFjdGVkVGV4dCA9ICcnO1xuICAgICAgaWYgKHRoaXMub2NyV29ya2VyKSB7XG4gICAgICAgIGNvbnN0IHsgZGF0YTogeyB0ZXh0IH0gfSA9IGF3YWl0IHRoaXMub2NyV29ya2VyLnJlY29nbml6ZShpbWFnZURhdGEpO1xuICAgICAgICBleHRyYWN0ZWRUZXh0ID0gdGV4dC50cmltKCk7XG4gICAgICB9XG5cbiAgICAgIC8vIEdldCBpbWFnZSBkaW1lbnNpb25zXG4gICAgICBjb25zdCBkaW1lbnNpb25zID0gYXdhaXQgdGhpcy5nZXRJbWFnZURpbWVuc2lvbnMoaW1hZ2VEYXRhKTtcblxuICAgICAgY29uc3QgcHJvY2Vzc2luZ1RpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgICAgY29uc29sZS5sb2coYE1lZGlhUHJvY2Vzc29yOiBPQ1IgY29tcGxldGVkIGluICR7cHJvY2Vzc2luZ1RpbWV9bXMsIGV4dHJhY3RlZCAke2V4dHJhY3RlZFRleHQubGVuZ3RofSBjaGFyYWN0ZXJzYCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdpbWFnZScsXG4gICAgICAgIG9yaWdpbmFsRGF0YTogaW1hZ2VEYXRhLFxuICAgICAgICBleHRyYWN0ZWRUZXh0LFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIGZpbGVuYW1lOiBgc2NyZWVuc2hvdF8ke0RhdGUubm93KCl9LnBuZ2AsXG4gICAgICAgICAgZGltZW5zaW9ucyxcbiAgICAgICAgICBwcm9jZXNzaW5nVGltZU1zOiBwcm9jZXNzaW5nVGltZSxcbiAgICAgICAgICBvY3JDb25maWRlbmNlOiBleHRyYWN0ZWRUZXh0Lmxlbmd0aCA+IDAgPyAwLjggOiAwLjEsIC8vIFJvdWdoIGNvbmZpZGVuY2UgZXN0aW1hdGVcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignTWVkaWFQcm9jZXNzb3I6IFNjcmVlbnNob3QgT0NSIGZhaWxlZDonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnaW1hZ2UnLFxuICAgICAgICBvcmlnaW5hbERhdGE6IGltYWdlRGF0YSxcbiAgICAgICAgZXh0cmFjdGVkVGV4dDogJycsXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgZmlsZW5hbWU6IGBzY3JlZW5zaG90XyR7RGF0ZS5ub3coKX0ucG5nYCxcbiAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJvY2VzcyB2b2ljZSBtZW1vIHdpdGggdHJhbnNjcmlwdGlvblxuICAgKi9cbiAgYXN5bmMgcHJvY2Vzc1ZvaWNlTWVtbyhhdWRpb0Jsb2I6IEJsb2IpOiBQcm9taXNlPE1lZGlhQ29udGVudD4ge1xuICAgIGNvbnNvbGUubG9nKCdNZWRpYVByb2Nlc3NvcjogUHJvY2Vzc2luZyB2b2ljZSBtZW1vJyk7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBUcnkgV2ViIFNwZWVjaCBBUEkgZmlyc3QgKGlmIGF2YWlsYWJsZSlcbiAgICAgIGxldCBleHRyYWN0ZWRUZXh0ID0gJyc7XG4gICAgICBcbiAgICAgIGlmICgnd2Via2l0U3BlZWNoUmVjb2duaXRpb24nIGluIHdpbmRvdyB8fCAnU3BlZWNoUmVjb2duaXRpb24nIGluIHdpbmRvdykge1xuICAgICAgICBleHRyYWN0ZWRUZXh0ID0gYXdhaXQgdGhpcy50cmFuc2NyaWJlV2l0aFdlYlNwZWVjaChhdWRpb0Jsb2IpO1xuICAgICAgfVxuXG4gICAgICAvLyBJZiBXZWIgU3BlZWNoIEFQSSBmYWlsZWQgb3IgdW5hdmFpbGFibGUsIGNvdWxkIGludGVncmF0ZSB3aXRoIE9wZW5BSSBXaGlzcGVyIGhlcmVcbiAgICAgIGlmICghZXh0cmFjdGVkVGV4dCkge1xuICAgICAgICBleHRyYWN0ZWRUZXh0ID0gYXdhaXQgdGhpcy50cmFuc2NyaWJlV2l0aFdoaXNwZXIoYXVkaW9CbG9iKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZHVyYXRpb24gPSBhd2FpdCB0aGlzLmdldEF1ZGlvRHVyYXRpb24oYXVkaW9CbG9iKTtcbiAgICAgIGNvbnN0IHByb2Nlc3NpbmdUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcblxuICAgICAgY29uc29sZS5sb2coYE1lZGlhUHJvY2Vzc29yOiBWb2ljZSB0cmFuc2NyaXB0aW9uIGNvbXBsZXRlZCBpbiAke3Byb2Nlc3NpbmdUaW1lfW1zYCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdhdWRpbycsXG4gICAgICAgIG9yaWdpbmFsRGF0YTogYXVkaW9CbG9iLFxuICAgICAgICBleHRyYWN0ZWRUZXh0LFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIGZpbGVuYW1lOiBgdm9pY2VfbWVtb18ke0RhdGUubm93KCl9LndlYm1gLFxuICAgICAgICAgIGR1cmF0aW9uLFxuICAgICAgICAgIG1pbWVUeXBlOiBhdWRpb0Jsb2IudHlwZSxcbiAgICAgICAgICBzaXplOiBhdWRpb0Jsb2Iuc2l6ZSxcbiAgICAgICAgICBwcm9jZXNzaW5nVGltZU1zOiBwcm9jZXNzaW5nVGltZSxcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignTWVkaWFQcm9jZXNzb3I6IFZvaWNlIHRyYW5zY3JpcHRpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdhdWRpbycsXG4gICAgICAgIG9yaWdpbmFsRGF0YTogYXVkaW9CbG9iLFxuICAgICAgICBleHRyYWN0ZWRUZXh0OiAnJyxcbiAgICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgICBmaWxlbmFtZTogYHZvaWNlX21lbW9fJHtEYXRlLm5vdygpfS53ZWJtYCxcbiAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJvY2VzcyBQREYgZmlsZSBhbmQgZXh0cmFjdCB0ZXh0XG4gICAqL1xuICBhc3luYyBwcm9jZXNzUERGKHBkZkRhdGE6IEFycmF5QnVmZmVyKTogUHJvbWlzZTxNZWRpYUNvbnRlbnQ+IHtcbiAgICBjb25zb2xlLmxvZygnTWVkaWFQcm9jZXNzb3I6IFByb2Nlc3NpbmcgUERGJyk7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBQREYgcHJvY2Vzc2luZyBpcyBub3QgYXZhaWxhYmxlIGluIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAgICAgIC8vIEZvciBub3csIHdlJ2xsIHJldHVybiBiYXNpYyBpbmZvIGFib3V0IHRoZSBQREZcbiAgICAgIHRocm93IG5ldyBFcnJvcignUERGIHRleHQgZXh0cmFjdGlvbiBpcyBub3QgYXZhaWxhYmxlIGluIGJyb3dzZXIgZW52aXJvbm1lbnQuIENvbnNpZGVyIHVzaW5nIGEgc2VydmVyLXNpZGUgc29sdXRpb24uJyk7XG5cbiAgICAgICAgICAgICAgLy8gVGhpcyBjb2RlIHdvbid0IGV4ZWN1dGUgZHVlIHRvIHRoZSB0aHJvdyBhYm92ZSwgYnV0IGtlZXBpbmcgZm9yIHJlZmVyZW5jZVxuICAgICAgICBjb25zdCBwcm9jZXNzaW5nVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR5cGU6ICdwZGYnLFxuICAgICAgICAgIG9yaWdpbmFsRGF0YTogcGRmRGF0YSxcbiAgICAgICAgICBleHRyYWN0ZWRUZXh0OiAnJyxcbiAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgZmlsZW5hbWU6IGBkb2N1bWVudF8ke0RhdGUubm93KCl9LnBkZmAsXG4gICAgICAgICAgICBzaXplOiBwZGZEYXRhLmJ5dGVMZW5ndGgsXG4gICAgICAgICAgICBwcm9jZXNzaW5nVGltZU1zOiBwcm9jZXNzaW5nVGltZSxcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01lZGlhUHJvY2Vzc29yOiBQREYgcHJvY2Vzc2luZyBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ3BkZicsXG4gICAgICAgIG9yaWdpbmFsRGF0YTogcGRmRGF0YSxcbiAgICAgICAgZXh0cmFjdGVkVGV4dDogJycsXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgZmlsZW5hbWU6IGBkb2N1bWVudF8ke0RhdGUubm93KCl9LnBkZmAsXG4gICAgICAgICAgc2l6ZTogcGRmRGF0YS5ieXRlTGVuZ3RoLFxuICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9jZXNzIGVtYWlsIGNvbnRlbnQgYW5kIGV4dHJhY3Qgc3RydWN0dXJlZCBkYXRhXG4gICAqL1xuICBhc3luYyBwcm9jZXNzRW1haWwoZW1haWxIVE1MOiBzdHJpbmcsIGVtYWlsTWV0YWRhdGE/OiBhbnkpOiBQcm9taXNlPE1lZGlhQ29udGVudD4ge1xuICAgIGNvbnNvbGUubG9nKCdNZWRpYVByb2Nlc3NvcjogUHJvY2Vzc2luZyBlbWFpbCcpO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBQYXJzZSBIVE1MIGFuZCBleHRyYWN0IHRleHQgY29udGVudFxuICAgICAgY29uc3QgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICAgICAgY29uc3QgZG9jID0gcGFyc2VyLnBhcnNlRnJvbVN0cmluZyhlbWFpbEhUTUwsICd0ZXh0L2h0bWwnKTtcbiAgICAgIFxuICAgICAgLy8gRXh0cmFjdCB0ZXh0IGNvbnRlbnQsIHJlbW92aW5nIHNjcmlwdCBhbmQgc3R5bGUgZWxlbWVudHNcbiAgICAgIGNvbnN0IHNjcmlwdHMgPSBkb2MucXVlcnlTZWxlY3RvckFsbCgnc2NyaXB0LCBzdHlsZScpO1xuICAgICAgc2NyaXB0cy5mb3JFYWNoKGVsID0+IGVsLnJlbW92ZSgpKTtcbiAgICAgIFxuICAgICAgY29uc3QgZXh0cmFjdGVkVGV4dCA9IGRvYy5ib2R5Py50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnO1xuICAgICAgXG4gICAgICAvLyBFeHRyYWN0IGVtYWlsLXNwZWNpZmljIG1ldGFkYXRhXG4gICAgICBjb25zdCBzdWJqZWN0ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT1cInN1YmplY3RcIl0nKT8uZ2V0QXR0cmlidXRlKCdjb250ZW50JykgfHwgXG4gICAgICAgICAgICAgICAgICAgICBlbWFpbE1ldGFkYXRhPy5zdWJqZWN0IHx8ICdVbmtub3duIFN1YmplY3QnO1xuICAgICAgY29uc3QgZnJvbSA9IGVtYWlsTWV0YWRhdGE/LmZyb20gfHwgJ1Vua25vd24gU2VuZGVyJztcbiAgICAgIGNvbnN0IGRhdGUgPSBlbWFpbE1ldGFkYXRhPy5kYXRlIHx8IG5ldyBEYXRlKCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdlbWFpbCcsXG4gICAgICAgIG9yaWdpbmFsRGF0YTogZW1haWxIVE1MLFxuICAgICAgICBleHRyYWN0ZWRUZXh0LFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIHN1YmplY3QsXG4gICAgICAgICAgZnJvbSxcbiAgICAgICAgICBwdWJsaXNoRGF0ZTogZGF0ZSxcbiAgICAgICAgICB3b3JkQ291bnQ6IGV4dHJhY3RlZFRleHQuc3BsaXQoL1xccysvKS5sZW5ndGgsXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01lZGlhUHJvY2Vzc29yOiBFbWFpbCBwcm9jZXNzaW5nIGZhaWxlZDonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnZW1haWwnLFxuICAgICAgICBvcmlnaW5hbERhdGE6IGVtYWlsSFRNTCxcbiAgICAgICAgZXh0cmFjdGVkVGV4dDogJycsXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3Mgc29jaWFsIG1lZGlhIHBvc3QgYW5kIGV4dHJhY3Qgc3RydWN0dXJlZCBkYXRhXG4gICAqL1xuICBhc3luYyBwcm9jZXNzU29jaWFsUG9zdChwb3N0SFRNTDogc3RyaW5nLCBwbGF0Zm9ybTogc3RyaW5nLCBwb3N0TWV0YWRhdGE/OiBhbnkpOiBQcm9taXNlPE1lZGlhQ29udGVudD4ge1xuICAgIGNvbnNvbGUubG9nKGBNZWRpYVByb2Nlc3NvcjogUHJvY2Vzc2luZyAke3BsYXRmb3JtfSBwb3N0YCk7XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgIGNvbnN0IGRvYyA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcocG9zdEhUTUwsICd0ZXh0L2h0bWwnKTtcbiAgICAgIFxuICAgICAgLy8gUGxhdGZvcm0tc3BlY2lmaWMgZXh0cmFjdGlvbiBsb2dpY1xuICAgICAgbGV0IGV4dHJhY3RlZFRleHQgPSAnJztcbiAgICAgIGxldCBhdXRob3IgPSAnJztcbiAgICAgIGxldCBwdWJsaXNoRGF0ZTogRGF0ZSB8IHVuZGVmaW5lZDtcbiAgICAgIFxuICAgICAgc3dpdGNoIChwbGF0Zm9ybS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgIGNhc2UgJ3R3aXR0ZXInOlxuICAgICAgICBjYXNlICd4JzpcbiAgICAgICAgICBleHRyYWN0ZWRUZXh0ID0gdGhpcy5leHRyYWN0VHdpdHRlckNvbnRlbnQoZG9jKTtcbiAgICAgICAgICBhdXRob3IgPSB0aGlzLmV4dHJhY3RUd2l0dGVyQXV0aG9yKGRvYyk7XG4gICAgICAgICAgcHVibGlzaERhdGUgPSB0aGlzLmV4dHJhY3RUd2l0dGVyRGF0ZShkb2MpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdsaW5rZWRpbic6XG4gICAgICAgICAgZXh0cmFjdGVkVGV4dCA9IHRoaXMuZXh0cmFjdExpbmtlZEluQ29udGVudChkb2MpO1xuICAgICAgICAgIGF1dGhvciA9IHRoaXMuZXh0cmFjdExpbmtlZEluQXV0aG9yKGRvYyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ21lZGl1bSc6XG4gICAgICAgICAgZXh0cmFjdGVkVGV4dCA9IHRoaXMuZXh0cmFjdE1lZGl1bUNvbnRlbnQoZG9jKTtcbiAgICAgICAgICBhdXRob3IgPSB0aGlzLmV4dHJhY3RNZWRpdW1BdXRob3IoZG9jKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAvLyBHZW5lcmljIGV4dHJhY3Rpb25cbiAgICAgICAgICBleHRyYWN0ZWRUZXh0ID0gZG9jLmJvZHk/LnRleHRDb250ZW50Py50cmltKCkgfHwgJyc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdzb2NpYWwnLFxuICAgICAgICBvcmlnaW5hbERhdGE6IHBvc3RIVE1MLFxuICAgICAgICBleHRyYWN0ZWRUZXh0LFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIHBsYXRmb3JtLFxuICAgICAgICAgIGF1dGhvcjogYXV0aG9yIHx8IHBvc3RNZXRhZGF0YT8uYXV0aG9yLFxuICAgICAgICAgIHB1Ymxpc2hEYXRlOiBwdWJsaXNoRGF0ZSB8fCBwb3N0TWV0YWRhdGE/LnB1Ymxpc2hEYXRlLFxuICAgICAgICAgIHdvcmRDb3VudDogZXh0cmFjdGVkVGV4dC5zcGxpdCgvXFxzKy8pLmxlbmd0aCxcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgTWVkaWFQcm9jZXNzb3I6ICR7cGxhdGZvcm19IHBvc3QgcHJvY2Vzc2luZyBmYWlsZWQ6YCwgZXJyb3IpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ3NvY2lhbCcsXG4gICAgICAgIG9yaWdpbmFsRGF0YTogcG9zdEhUTUwsXG4gICAgICAgIGV4dHJhY3RlZFRleHQ6ICcnLFxuICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgIHBsYXRmb3JtLFxuICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgTWVkaWFBdHRhY2htZW50IGZyb20gTWVkaWFDb250ZW50XG4gICAqL1xuICBjcmVhdGVBdHRhY2htZW50KGNvbnRlbnQ6IE1lZGlhQ29udGVudCwgbGlua0lkOiBzdHJpbmcpOiBNZWRpYUF0dGFjaG1lbnQge1xuICAgIGNvbnN0IGlkID0gYCR7bGlua0lkfV8ke2NvbnRlbnQudHlwZX1fJHtEYXRlLm5vdygpfWA7XG4gICAgXG4gICAgLy8gQ29udmVydCBkYXRhIHRvIGFwcHJvcHJpYXRlIHN0b3JhZ2UgZm9ybWF0XG4gICAgbGV0IGRhdGFVUkw6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICBsZXQgc3RvcmFnZUtleTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIFxuICAgIGlmICh0eXBlb2YgY29udGVudC5vcmlnaW5hbERhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICBkYXRhVVJMID0gY29udGVudC5vcmlnaW5hbERhdGE7XG4gICAgfSBlbHNlIGlmIChjb250ZW50Lm9yaWdpbmFsRGF0YSBpbnN0YW5jZW9mIEJsb2IpIHtcbiAgICAgIC8vIEZvciBsYXJnZXIgZmlsZXMsIHdlJ2Qgc3RvcmUgaW4gY2xvdWQgc3RvcmFnZSBhbmQga2VlcCBhIGtleVxuICAgICAgLy8gRm9yIG5vdywgY29udmVydCBzbWFsbCBibG9icyB0byBkYXRhIFVSTHNcbiAgICAgIGlmIChjb250ZW50Lm9yaWdpbmFsRGF0YS5zaXplIDwgMTAyNCAqIDEwMjQpIHsgLy8gPCAxTUJcbiAgICAgICAgZGF0YVVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoY29udGVudC5vcmlnaW5hbERhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RvcmFnZUtleSA9IGBhdHRhY2htZW50cy8ke2xpbmtJZH0vJHtpZH1gO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBpZCxcbiAgICAgIHR5cGU6IGNvbnRlbnQudHlwZSBhcyBhbnksXG4gICAgICBmaWxlbmFtZTogY29udGVudC5tZXRhZGF0YS5maWxlbmFtZSB8fCBgJHtjb250ZW50LnR5cGV9XyR7RGF0ZS5ub3coKX1gLFxuICAgICAgbWltZVR5cGU6IGNvbnRlbnQubWV0YWRhdGEubWltZVR5cGUgfHwgdGhpcy5nZXRNaW1lVHlwZShjb250ZW50LnR5cGUpLFxuICAgICAgc2l6ZTogY29udGVudC5tZXRhZGF0YS5zaXplIHx8IDAsXG4gICAgICBkYXRhVVJMLFxuICAgICAgc3RvcmFnZUtleSxcbiAgICAgIGV4dHJhY3RlZFRleHQ6IGNvbnRlbnQuZXh0cmFjdGVkVGV4dCxcbiAgICAgIG1ldGFkYXRhOiBjb250ZW50Lm1ldGFkYXRhLFxuICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgIH07XG4gIH1cblxuICAvLyBIZWxwZXIgbWV0aG9kc1xuICBwcml2YXRlIGFzeW5jIGdldEltYWdlRGltZW5zaW9ucyhpbWFnZURhdGE6IHN0cmluZyk6IFByb21pc2U8eyB3aWR0aDogbnVtYmVyOyBoZWlnaHQ6IG51bWJlciB9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiByZXNvbHZlKHsgd2lkdGg6IGltZy53aWR0aCwgaGVpZ2h0OiBpbWcuaGVpZ2h0IH0pO1xuICAgICAgaW1nLm9uZXJyb3IgPSAoKSA9PiByZXNvbHZlKHsgd2lkdGg6IDAsIGhlaWdodDogMCB9KTtcbiAgICAgIGltZy5zcmMgPSBpbWFnZURhdGE7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGdldEF1ZGlvRHVyYXRpb24oYXVkaW9CbG9iOiBCbG9iKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKCk7XG4gICAgICBhdWRpby5vbmxvYWRlZG1ldGFkYXRhID0gKCkgPT4gcmVzb2x2ZShhdWRpby5kdXJhdGlvbik7XG4gICAgICBhdWRpby5vbmVycm9yID0gKCkgPT4gcmVzb2x2ZSgwKTtcbiAgICAgIGF1ZGlvLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYXVkaW9CbG9iKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgdHJhbnNjcmliZVdpdGhXZWJTcGVlY2goYXVkaW9CbG9iOiBCbG9iKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAvLyBXZWIgU3BlZWNoIEFQSSB0cmFuc2NyaXB0aW9uIGltcGxlbWVudGF0aW9uXG4gICAgLy8gTm90ZTogVGhpcyBpcyBhIHNpbXBsaWZpZWQgdmVyc2lvbiAtIHJlYWwgaW1wbGVtZW50YXRpb24gd291bGQgYmUgbW9yZSBjb21wbGV4XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAvLyBQbGFjZWhvbGRlciBpbXBsZW1lbnRhdGlvblxuICAgICAgcmVzb2x2ZSgnJyk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHRyYW5zY3JpYmVXaXRoV2hpc3BlcihhdWRpb0Jsb2I6IEJsb2IpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIC8vIE9wZW5BSSBXaGlzcGVyIEFQSSBpbnRlZ3JhdGlvbiB3b3VsZCBnbyBoZXJlXG4gICAgLy8gRm9yIG5vdywgcmV0dXJuIGVtcHR5IHN0cmluZyBhcyBmYWxsYmFja1xuICAgIGNvbnNvbGUubG9nKCdNZWRpYVByb2Nlc3NvcjogV2hpc3BlciB0cmFuc2NyaXB0aW9uIG5vdCBpbXBsZW1lbnRlZCB5ZXQnKTtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBwcml2YXRlIGV4dHJhY3RUd2l0dGVyQ29udGVudChkb2M6IERvY3VtZW50KTogc3RyaW5nIHtcbiAgICAvLyBUd2l0dGVyLXNwZWNpZmljIGNvbnRlbnQgZXh0cmFjdGlvblxuICAgIGNvbnN0IHR3ZWV0VGV4dCA9IGRvYy5xdWVyeVNlbGVjdG9yKCdbZGF0YS10ZXN0aWQ9XCJ0d2VldFRleHRcIl0nKTtcbiAgICByZXR1cm4gdHdlZXRUZXh0Py50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBleHRyYWN0VHdpdHRlckF1dGhvcihkb2M6IERvY3VtZW50KTogc3RyaW5nIHtcbiAgICBjb25zdCBhdXRob3JFbGVtZW50ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXRlc3RpZD1cIlVzZXItTmFtZVwiXScpO1xuICAgIHJldHVybiBhdXRob3JFbGVtZW50Py50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBleHRyYWN0VHdpdHRlckRhdGUoZG9jOiBEb2N1bWVudCk6IERhdGUgfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IHRpbWVFbGVtZW50ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoJ3RpbWUnKTtcbiAgICBjb25zdCBkYXRldGltZSA9IHRpbWVFbGVtZW50Py5nZXRBdHRyaWJ1dGUoJ2RhdGV0aW1lJyk7XG4gICAgcmV0dXJuIGRhdGV0aW1lID8gbmV3IERhdGUoZGF0ZXRpbWUpIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcHJpdmF0ZSBleHRyYWN0TGlua2VkSW5Db250ZW50KGRvYzogRG9jdW1lbnQpOiBzdHJpbmcge1xuICAgIC8vIExpbmtlZEluLXNwZWNpZmljIGNvbnRlbnQgZXh0cmFjdGlvblxuICAgIGNvbnN0IGNvbnRlbnRFbGVtZW50ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoJy5mZWVkLXNoYXJlZC11cGRhdGUtdjJfX2Rlc2NyaXB0aW9uJyk7XG4gICAgcmV0dXJuIGNvbnRlbnRFbGVtZW50Py50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBleHRyYWN0TGlua2VkSW5BdXRob3IoZG9jOiBEb2N1bWVudCk6IHN0cmluZyB7XG4gICAgY29uc3QgYXV0aG9yRWxlbWVudCA9IGRvYy5xdWVyeVNlbGVjdG9yKCcuZmVlZC1zaGFyZWQtYWN0b3JfX25hbWUnKTtcbiAgICByZXR1cm4gYXV0aG9yRWxlbWVudD8udGV4dENvbnRlbnQ/LnRyaW0oKSB8fCAnJztcbiAgfVxuXG4gIHByaXZhdGUgZXh0cmFjdE1lZGl1bUNvbnRlbnQoZG9jOiBEb2N1bWVudCk6IHN0cmluZyB7XG4gICAgLy8gTWVkaXVtLXNwZWNpZmljIGNvbnRlbnQgZXh0cmFjdGlvblxuICAgIGNvbnN0IGFydGljbGUgPSBkb2MucXVlcnlTZWxlY3RvcignYXJ0aWNsZScpO1xuICAgIHJldHVybiBhcnRpY2xlPy50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBleHRyYWN0TWVkaXVtQXV0aG9yKGRvYzogRG9jdW1lbnQpOiBzdHJpbmcge1xuICAgIGNvbnN0IGF1dGhvckVsZW1lbnQgPSBkb2MucXVlcnlTZWxlY3RvcignW3JlbD1cImF1dGhvclwiXScpO1xuICAgIHJldHVybiBhdXRob3JFbGVtZW50Py50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRNaW1lVHlwZSh0eXBlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IG1pbWVUeXBlcyA9IHtcbiAgICAgICdpbWFnZSc6ICdpbWFnZS9wbmcnLFxuICAgICAgJ2F1ZGlvJzogJ2F1ZGlvL3dlYm0nLFxuICAgICAgJ3ZpZGVvJzogJ3ZpZGVvL3dlYm0nLFxuICAgICAgJ3BkZic6ICdhcHBsaWNhdGlvbi9wZGYnLFxuICAgICAgJ2VtYWlsJzogJ3RleHQvaHRtbCcsXG4gICAgICAnc29jaWFsJzogJ3RleHQvaHRtbCcsXG4gICAgfTtcbiAgICByZXR1cm4gbWltZVR5cGVzW3R5cGVdIHx8ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFudXAgcmVzb3VyY2VzXG4gICAqL1xuICBhc3luYyBjbGVhbnVwKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICh0aGlzLm9jcldvcmtlcikge1xuICAgICAgYXdhaXQgdGhpcy5vY3JXb3JrZXIudGVybWluYXRlKCk7XG4gICAgICB0aGlzLm9jcldvcmtlciA9IG51bGw7XG4gICAgICB0aGlzLmlzT2NySW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbn1cblxuLy8gRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxuZXhwb3J0IGNvbnN0IG1lZGlhUHJvY2Vzc29yID0gbmV3IE1lZGlhUHJvY2Vzc29yKCk7ICIsIi8vIENvbnRlbnQgc2NyaXB0IGZvciBleHRyYWN0aW5nIHBhZ2UgY29udGVudCBhbmQgaGFuZGxpbmcgaGlnaGxpZ2h0c1xuY29uc29sZS5sb2coJ05lc3QgY29udGVudCBzY3JpcHQgbG9hZGVkJyk7XG5cbi8vIEltcG9ydCBSZWFjdCBhbmQgUmVhY3RET00gZm9yIGZsb2F0aW5nIEFJLCBzdGlja3kgbm90ZXMsIGFuZCBzY3JlZW5zaG90IHRvb2xcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tL2NsaWVudCc7XG5pbXBvcnQgRmxvYXRpbmdBSSBmcm9tICcuL0Zsb2F0aW5nQUknO1xuaW1wb3J0IFN0aWNreU5vdGVzIGZyb20gJy4vU3RpY2t5Tm90ZXMnO1xuaW1wb3J0IFNjcmVlbnNob3RUb29sIGZyb20gJy4vU2NyZWVuc2hvdFRvb2wnO1xuaW1wb3J0IHsgbWVkaWFQcm9jZXNzb3IgfSBmcm9tICcuLi91dGlscy9tZWRpYVByb2Nlc3Nvcic7XG5pbXBvcnQgeyBNZWRpYUNvbnRlbnQgfSBmcm9tICcuLi90eXBlcyc7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBHbG9iYWwgS2V5Ym9hcmQgU2hvcnRjdXRzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4ge1xuICAvLyBJZ25vcmUgaWYgdXNlciBpcyB0eXBpbmcgaW4gYW4gaW5wdXQsIHRleHRhcmVhLCBvciBlZGl0YWJsZSBlbGVtZW50XG4gIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiAgaWYgKHRhcmdldCAmJiAodGFyZ2V0LnRhZ05hbWUgPT09ICdJTlBVVCcgfHwgdGFyZ2V0LnRhZ05hbWUgPT09ICdURVhUQVJFQScgfHwgdGFyZ2V0LmlzQ29udGVudEVkaXRhYmxlKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGtleSA9IGV2ZW50LmtleS50b0xvd2VyQ2FzZSgpO1xuXG4gIC8vIFRvZ2dsZSBGbG9hdGluZyBBSSBBc3Npc3RhbnQgKENtZCtBIG9uIE1hYywgQWx0K0Egb24gYWxsIHBsYXRmb3JtcylcbiAgaWYgKChldmVudC5tZXRhS2V5ICYmIGtleSA9PT0gJ2EnKSB8fCAoZXZlbnQuYWx0S2V5ICYmIGtleSA9PT0gJ2EnKSkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdG9nZ2xlRmxvYXRpbmdBSSgpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFNhdmUgY3VycmVudCBwYWdlIChDbWQvQ3RybCtTaGlmdCtTKVxuICBpZiAoKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuY3RybEtleSkgJiYgZXZlbnQuc2hpZnRLZXkgJiYga2V5ID09PSAncycpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHsgYWN0aW9uOiAnc2F2ZUN1cnJlbnRQYWdlJyB9KTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBTYXZlIHRvIGluYm94IChDbWQvQ3RybCtTaGlmdCtJKVxuICBpZiAoKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuY3RybEtleSkgJiYgZXZlbnQuc2hpZnRLZXkgJiYga2V5ID09PSAnaScpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHsgYWN0aW9uOiAnc2F2ZUN1cnJlbnRQYWdlJywgdG9JbmJveDogdHJ1ZSB9KTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBPcGVuIGNvbW1hbmQgcGFsZXR0ZSAoQ21kL0N0cmwrSylcbiAgaWYgKChldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXkpICYmICFldmVudC5zaGlmdEtleSAmJiBrZXkgPT09ICdrJykge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoeyBhY3Rpb246ICdvcGVuQ29tbWFuZFBhbGV0dGUnIH0pO1xuICAgIHJldHVybjtcbiAgfVxufSk7XG4vLyBTdGF0ZSBmb3IgZmxvYXRpbmcgQUlcbmxldCBmbG9hdGluZ0FJUm9vdDogYW55ID0gbnVsbDtcbmxldCBpc0Zsb2F0aW5nQUlWaXNpYmxlID0gZmFsc2U7XG5cbi8vIFN0YXRlIGZvciBzdGlja3kgbm90ZXNcbmxldCBzdGlja3lOb3Rlc1Jvb3Q6IGFueSA9IG51bGw7XG5sZXQgaXNTdGlja3lOb3Rlc1Zpc2libGUgPSBmYWxzZTtcblxuLy8gU3RhdGUgZm9yIHNjcmVlbnNob3QgdG9vbFxubGV0IHNjcmVlbnNob3RUb29sUm9vdDogYW55ID0gbnVsbDtcbmxldCBpc1NjcmVlbnNob3RUb29sVmlzaWJsZSA9IGZhbHNlO1xuXG4vLyBHbG9iYWwgdmFyaWFibGVzXG5sZXQgbGFzdFNlbGVjdGlvbjogeyB0ZXh0OiBzdHJpbmc7IGNvbnRleHQ6IHN0cmluZzsgcG9zaXRpb246IGFueSB9IHwgbnVsbCA9IG51bGw7XG5sZXQgaGlnaGxpZ2h0QnV0dG9uOiBIVE1MRWxlbWVudCB8IG51bGwgPSBudWxsO1xubGV0IHBhZ2VIaWdobGlnaHRzOiBNYXA8c3RyaW5nLCBIVE1MRWxlbWVudD4gPSBuZXcgTWFwKCk7IC8vIFN0b3JlIGhpZ2hsaWdodCBlbGVtZW50cyBieSBJRFxubGV0IGhpZ2hsaWdodHNFbmFibGVkOiBib29sZWFuID0gdHJ1ZTsgLy8gR2xvYmFsIHRvZ2dsZSBmb3IgaGlnaGxpZ2h0c1xuXG4vLyBBZGQgYXQgdGhlIHRvcCB3aXRoIG90aGVyIHZhcmlhYmxlc1xubGV0IHByb2JsZW1hdGljU2l0ZXM6IHN0cmluZ1tdID0gW1xuICAnbXNuLmNvbScsXG4gICdjbm4uY29tJywgXG4gICdiYmMuY29tJyxcbiAgJ2ZveG5ld3MuY29tJyxcbiAgJ3dhc2hpbmd0b25wb3N0LmNvbScsXG4gICdueXRpbWVzLmNvbSdcbl07XG5cbi8vIEFkZCBjb2xvciBhbmQgc3R5bGUgb3B0aW9uc1xuY29uc3QgaGlnaGxpZ2h0Q29sb3JPcHRpb25zID0ge1xuICB5ZWxsb3c6IHsgcHJpbWFyeTogJyNmZWYwOGEnLCBzZWNvbmRhcnk6ICcjZmRlMDQ3JywgdGVydGlhcnk6ICcjZmFjYzE1JyB9LFxuICBibHVlOiB7IHByaW1hcnk6ICcjYmZkYmZlJywgc2Vjb25kYXJ5OiAnIzkzYzVmZCcsIHRlcnRpYXJ5OiAnIzYwYTVmYScgfSxcbiAgZ3JlZW46IHsgcHJpbWFyeTogJyNiYmY3ZDAnLCBzZWNvbmRhcnk6ICcjODZlZmFjJywgdGVydGlhcnk6ICcjNGFkZTgwJyB9LFxuICBwaW5rOiB7IHByaW1hcnk6ICcjZmNlN2YzJywgc2Vjb25kYXJ5OiAnI2Y5YThkNCcsIHRlcnRpYXJ5OiAnI2VjNDg5OScgfSxcbiAgcHVycGxlOiB7IHByaW1hcnk6ICcjZTlkNWZmJywgc2Vjb25kYXJ5OiAnI2MwODRmYycsIHRlcnRpYXJ5OiAnI2E4NTVmNycgfSxcbiAgb3JhbmdlOiB7IHByaW1hcnk6ICcjZmVkN2FhJywgc2Vjb25kYXJ5OiAnI2ZkYmE3NCcsIHRlcnRpYXJ5OiAnI2ZiOTIzYycgfSxcbiAgcmVkOiB7IHByaW1hcnk6ICcjZmVjYWNhJywgc2Vjb25kYXJ5OiAnI2ZjYTVhNScsIHRlcnRpYXJ5OiAnI2VmNDQ0NCcgfVxufTtcblxuLy8gR2V0IHVzZXIgaGlnaGxpZ2h0IHNldHRpbmdzXG5hc3luYyBmdW5jdGlvbiBnZXRIaWdobGlnaHRTZXR0aW5ncygpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoJ25lc3Rfc2V0dGluZ3MnKTtcbiAgICBjb25zdCBzZXR0aW5ncyA9IHJlc3VsdC5uZXN0X3NldHRpbmdzIHx8IHt9O1xuICAgIHJldHVybiB7XG4gICAgICBjb2xvcjogc2V0dGluZ3MuaGlnaGxpZ2h0Q29sb3IgfHwgJ3llbGxvdycsXG4gICAgICBzdHlsZTogc2V0dGluZ3MuaGlnaGxpZ2h0U3R5bGUgfHwgJ2dyYWRpZW50J1xuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS53YXJuKCdbTmVzdF0gQ291bGQgbm90IGdldCBoaWdobGlnaHQgc2V0dGluZ3MsIHVzaW5nIGRlZmF1bHRzJyk7XG4gICAgcmV0dXJuIHsgY29sb3I6ICd5ZWxsb3cnLCBzdHlsZTogJ2dyYWRpZW50JyB9O1xuICB9XG59XG5cbi8vIEdlbmVyYXRlIGhpZ2hsaWdodCBzdHlsZXMgYmFzZWQgb24gdXNlciBwcmVmZXJlbmNlc1xuZnVuY3Rpb24gZ2VuZXJhdGVIaWdobGlnaHRTdHlsZXMoY29sb3I6IHN0cmluZywgc3R5bGU6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGNvbG9ycyA9IGhpZ2hsaWdodENvbG9yT3B0aW9uc1tjb2xvciBhcyBrZXlvZiB0eXBlb2YgaGlnaGxpZ2h0Q29sb3JPcHRpb25zXSB8fCBoaWdobGlnaHRDb2xvck9wdGlvbnMueWVsbG93O1xuICBcbiAgc3dpdGNoIChzdHlsZSkge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIHJldHVybiBgXG4gICAgICAgIGJhY2tncm91bmQ6ICR7Y29sb3JzLnByaW1hcnl9ICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR7Y29sb3JzLnNlY29uZGFyeX0gIWltcG9ydGFudDtcbiAgICAgIGA7XG4gICAgY2FzZSAnZ3JhZGllbnQnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgJHtjb2xvcnMucHJpbWFyeX0gMCUsICR7Y29sb3JzLnNlY29uZGFyeX0gMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtjb2xvcnMudGVydGlhcnl9ICFpbXBvcnRhbnQ7XG4gICAgICBgO1xuICAgIGNhc2UgJ3VuZGVybGluZSc6XG4gICAgICByZXR1cm4gYFxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgJHtjb2xvcnMuc2Vjb25kYXJ5fSAhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDAgJHtjb2xvcnMucHJpbWFyeX0gIWltcG9ydGFudDtcbiAgICAgIGA7XG4gICAgY2FzZSAnb3V0bGluZSc6XG4gICAgICByZXR1cm4gYFxuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAke2NvbG9ycy5zZWNvbmRhcnl9ICFpbXBvcnRhbnQ7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAke2NvbG9ycy5wcmltYXJ5fSAhaW1wb3J0YW50O1xuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgJHtjb2xvcnMucHJpbWFyeX0gMCUsICR7Y29sb3JzLnNlY29uZGFyeX0gMTAwJSkgIWltcG9ydGFudDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtjb2xvcnMudGVydGlhcnl9ICFpbXBvcnRhbnQ7XG4gICAgICBgO1xuICB9XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBjaGVjayBpZiBjdXJyZW50IHNpdGUgaXMgcHJvYmxlbWF0aWNcbmZ1bmN0aW9uIGlzUHJvYmxlbWF0aWNTaXRlKCk6IGJvb2xlYW4ge1xuICBjb25zdCBob3N0bmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZS50b0xvd2VyQ2FzZSgpO1xuICByZXR1cm4gcHJvYmxlbWF0aWNTaXRlcy5zb21lKHNpdGUgPT4gaG9zdG5hbWUuaW5jbHVkZXMoc2l0ZSkpO1xufVxuXG4vLyBMaXN0ZW4gZm9yIG1lc3NhZ2VzIGZyb20gYmFja2dyb3VuZCBzY3JpcHRcbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihhc3luYyAocmVxdWVzdCwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpID0+IHtcbiAgY29uc29sZS5sb2coJ0NvbnRlbnQgU2NyaXB0OiBNZXNzYWdlIHJlY2VpdmVkOicsIHJlcXVlc3QpO1xuICBpZiAocmVxdWVzdC5hY3Rpb24gPT09ICdnZXRQYWdlQ29udGVudCcpIHtcbiAgICBjb25zdCBjb250ZW50ID0gZXh0cmFjdFBhZ2VDb250ZW50KCk7XG4gICAgY29uc29sZS5sb2coJ0NvbnRlbnQgU2NyaXB0OiBTZW5kaW5nIHBhZ2UgY29udGVudCwgbGVuZ3RoOicsIGNvbnRlbnQubGVuZ3RoKTtcbiAgICBzZW5kUmVzcG9uc2UoeyBjb250ZW50IH0pO1xuICB9IGVsc2UgaWYgKHJlcXVlc3QuYWN0aW9uID09PSAnZ2V0RW5oYW5jZWRQYWdlQ29udGVudCcpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZW5oYW5jZWRDb250ZW50ID0gYXdhaXQgZXh0cmFjdEVuaGFuY2VkUGFnZUNvbnRlbnQoKTtcbiAgICAgIGNvbnNvbGUubG9nKCdDb250ZW50IFNjcmlwdDogU2VuZGluZyBlbmhhbmNlZCBwYWdlIGNvbnRlbnQ6JywgZW5oYW5jZWRDb250ZW50LmNvbnRlbnRUeXBlKTtcbiAgICAgIHNlbmRSZXNwb25zZSh7IGVuaGFuY2VkQ29udGVudCB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRW5oYW5jZWQgY29udGVudCBleHRyYWN0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgICAvLyBGYWxsYmFjayB0byBiYXNpYyBjb250ZW50XG4gICAgICBjb25zdCBjb250ZW50ID0gZXh0cmFjdFBhZ2VDb250ZW50KCk7XG4gICAgICBzZW5kUmVzcG9uc2UoeyBcbiAgICAgICAgZW5oYW5jZWRDb250ZW50OiB7XG4gICAgICAgICAgY29udGVudCxcbiAgICAgICAgICBjb250ZW50VHlwZTogJ3dlYnBhZ2UnLFxuICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICB1cmw6IHdpbmRvdy5sb2NhdGlvbi5ocmVmLFxuICAgICAgICAgICAgZG9tYWluOiB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUsXG4gICAgICAgICAgICBleHRyYWN0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0gZWxzZSBpZiAocmVxdWVzdC5hY3Rpb24gPT09ICdzaG93U2F2ZUNvbmZpcm1hdGlvbicpIHtcbiAgICBzaG93U2F2ZUNvbmZpcm1hdGlvbigpO1xuICB9IGVsc2UgaWYgKHJlcXVlc3QuYWN0aW9uID09PSAnc2hvd0hpZ2hsaWdodENvbmZpcm1hdGlvbicpIHtcbiAgICBzaG93SGlnaGxpZ2h0Q29uZmlybWF0aW9uKCk7XG4gIH0gZWxzZSBpZiAocmVxdWVzdC5hY3Rpb24gPT09ICd0b2dnbGVGbG9hdGluZ0FJJykge1xuICAgIGNvbnNvbGUubG9nKCdOZXN0OiBUb2dnbGUgZmxvYXRpbmcgQUknKTtcbiAgICB0b2dnbGVGbG9hdGluZ0FJKCk7XG4gICAgc2VuZFJlc3BvbnNlKHsgc3VjY2VzczogdHJ1ZSB9KTtcbiAgfSBlbHNlIGlmIChyZXF1ZXN0LmFjdGlvbiA9PT0gJ3RvZ2dsZVN0aWNreU5vdGVzJykge1xuICAgIGNvbnNvbGUubG9nKCdOZXN0OiBUb2dnbGUgc3RpY2t5IG5vdGVzJyk7XG4gICAgdG9nZ2xlU3RpY2t5Tm90ZXMoKTtcbiAgICBzZW5kUmVzcG9uc2UoeyBzdWNjZXNzOiB0cnVlIH0pO1xuICB9IGVsc2UgaWYgKHJlcXVlc3QuYWN0aW9uID09PSAndG9nZ2xlU2NyZWVuc2hvdFRvb2wnKSB7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IFRvZ2dsZSBzY3JlZW5zaG90IHRvb2wnKTtcbiAgICB0b2dnbGVTY3JlZW5zaG90VG9vbCgpO1xuICAgIHNlbmRSZXNwb25zZSh7IHN1Y2Nlc3M6IHRydWUgfSk7XG4gIH0gZWxzZSBpZiAocmVxdWVzdC5hY3Rpb24gPT09ICdyZXN0b3JlSGlnaGxpZ2h0cycpIHtcbiAgICBjb25zb2xlLmxvZygnTmVzdDogUmVzdG9yaW5nIGhpZ2hsaWdodHMnKTtcbiAgICByZXN0b3JlSGlnaGxpZ2h0cyhyZXF1ZXN0LmhpZ2hsaWdodHMpO1xuICAgIHNlbmRSZXNwb25zZSh7IHN1Y2Nlc3M6IHRydWUgfSk7XG4gIH0gZWxzZSBpZiAocmVxdWVzdC5hY3Rpb24gPT09ICdyZW1vdmVIaWdobGlnaHQnKSB7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IFJlbW92aW5nIGhpZ2hsaWdodCcpO1xuICAgIHJlbW92ZUhpZ2hsaWdodChyZXF1ZXN0LmhpZ2hsaWdodElkKTtcbiAgICBzZW5kUmVzcG9uc2UoeyBzdWNjZXNzOiB0cnVlIH0pO1xuICB9IGVsc2UgaWYgKHJlcXVlc3QuYWN0aW9uID09PSAndG9nZ2xlSGlnaGxpZ2h0cycpIHtcbiAgICBjb25zb2xlLmxvZygnTmVzdDogVG9nZ2xpbmcgaGlnaGxpZ2h0cycpO1xuICAgIHRvZ2dsZUhpZ2hsaWdodHMocmVxdWVzdC5lbmFibGVkKTtcbiAgICBzZW5kUmVzcG9uc2UoeyBzdWNjZXNzOiB0cnVlIH0pO1xuICB9XG4gIHJldHVybiB0cnVlO1xufSk7XG5cbi8vIEluaXRpYWxpemUgaGlnaGxpZ2h0cyB3aGVuIHBhZ2UgbG9hZHNcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBET00gbG9hZGVkLCBjaGVja2luZyBmb3IgZXhpc3RpbmcgaGlnaGxpZ2h0cycpO1xuICBjaGVja0ZvckV4aXN0aW5nSGlnaGxpZ2h0cygpO1xufSk7XG5cbi8vIEFsc28gY2hlY2sgd2hlbiBwYWdlIGlzIGZ1bGx5IGxvYWRlZFxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBQYWdlIGxvYWRlZCwgY2hlY2tpbmcgZm9yIGV4aXN0aW5nIGhpZ2hsaWdodHMnKTtcbiAgY2hlY2tGb3JFeGlzdGluZ0hpZ2hsaWdodHMoKTtcbn0pO1xuXG4vLyBIYW5kbGUgdGV4dCBzZWxlY3Rpb24gZm9yIGhpZ2hsaWdodHNcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVUZXh0U2VsZWN0aW9uKTtcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgaGFuZGxlVGV4dFNlbGVjdGlvbik7XG5jb25zb2xlLmxvZygnTmVzdDogVGV4dCBzZWxlY3Rpb24gZXZlbnQgbGlzdGVuZXJzIGFkZGVkJyk7XG5cbmZ1bmN0aW9uIGhhbmRsZVRleHRTZWxlY3Rpb24oKSB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBUZXh0IHNlbGVjdGlvbiBldmVudCBmaXJlZCcpO1xuICBcbiAgLy8gQWRkIGEgc21hbGwgZGVsYXkgdG8gZW5zdXJlIHNlbGVjdGlvbiBpcyBzdGFibGVcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICAgIGNvbnN0IHNlbGVjdGVkVGV4dCA9IHNlbGVjdGlvbj8udG9TdHJpbmcoKS50cmltKCk7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IFNlbGVjdGVkIHRleHQ6Jywgc2VsZWN0ZWRUZXh0LCAnTGVuZ3RoOicsIHNlbGVjdGVkVGV4dD8ubGVuZ3RoKTtcbiAgICBcbiAgICBpZiAoc2VsZWN0ZWRUZXh0ICYmIHNlbGVjdGVkVGV4dC5sZW5ndGggPiAxMCkgeyAvLyBNaW5pbXVtIGxlbmd0aCBmb3IgbWVhbmluZ2Z1bCBoaWdobGlnaHRzXG4gICAgICBjb25zb2xlLmxvZygnTmVzdDogVGV4dCBzZWxlY3Rpb24gbWVldHMgbWluaW11bSBsZW5ndGggcmVxdWlyZW1lbnQnKTtcbiAgICAgIGNvbnN0IHJhbmdlID0gc2VsZWN0aW9uPy5nZXRSYW5nZUF0KDApO1xuICAgICAgaWYgKHJhbmdlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdOZXN0OiBSYW5nZSBmb3VuZCwgY3JlYXRpbmcgaGlnaGxpZ2h0IGJ1dHRvbicpO1xuICAgICAgICAvLyBHZXQgY29udGV4dCBhcm91bmQgdGhlIHNlbGVjdGlvblxuICAgICAgICBjb25zdCBjb250ZXh0ID0gZ2V0U2VsZWN0aW9uQ29udGV4dChyYW5nZSk7XG4gICAgICAgIFxuICAgICAgICAvLyBTdG9yZSBzZWxlY3Rpb24gZGF0YVxuICAgICAgICBsYXN0U2VsZWN0aW9uID0ge1xuICAgICAgICAgIHRleHQ6IHNlbGVjdGVkVGV4dCxcbiAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgIHBvc2l0aW9uOiBnZXRTZWxlY3Rpb25Qb3NpdGlvbihyYW5nZSlcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIHNob3dIaWdobGlnaHRCdXR0b24ocmFuZ2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygnTmVzdDogVGV4dCBzZWxlY3Rpb24gdG9vIHNob3J0IG9yIGVtcHR5LCBoaWRpbmcgYnV0dG9uJyk7XG4gICAgICBoaWRlSGlnaGxpZ2h0QnV0dG9uKCk7XG4gICAgICBsYXN0U2VsZWN0aW9uID0gbnVsbDtcbiAgICB9XG4gIH0sIDEwMCk7IC8vIDEwMG1zIGRlbGF5XG59XG5cbmZ1bmN0aW9uIGdldFNlbGVjdGlvbkNvbnRleHQocmFuZ2U6IFJhbmdlKTogc3RyaW5nIHtcbiAgY29uc3QgY29udGFpbmVyID0gcmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG4gIGNvbnN0IHRleHRDb250ZW50ID0gY29udGFpbmVyLnRleHRDb250ZW50IHx8ICcnO1xuICBjb25zdCBzdGFydE9mZnNldCA9IHJhbmdlLnN0YXJ0T2Zmc2V0O1xuICBjb25zdCBlbmRPZmZzZXQgPSByYW5nZS5lbmRPZmZzZXQ7XG4gIFxuICAvLyBHZXQgc3Vycm91bmRpbmcgY29udGV4dCAodXAgdG8gMTAwIGNoYXJhY3RlcnMgYmVmb3JlIGFuZCBhZnRlcilcbiAgY29uc3QgY29udGV4dFN0YXJ0ID0gTWF0aC5tYXgoMCwgc3RhcnRPZmZzZXQgLSAxMDApO1xuICBjb25zdCBjb250ZXh0RW5kID0gTWF0aC5taW4odGV4dENvbnRlbnQubGVuZ3RoLCBlbmRPZmZzZXQgKyAxMDApO1xuICBcbiAgcmV0dXJuIHRleHRDb250ZW50LnN1YnN0cmluZyhjb250ZXh0U3RhcnQsIGNvbnRleHRFbmQpO1xufVxuXG5mdW5jdGlvbiBnZXRTZWxlY3Rpb25Qb3NpdGlvbihyYW5nZTogUmFuZ2UpOiBhbnkge1xuICAvLyBTaW1wbGUgcG9zaXRpb24gdHJhY2tpbmcgLSBjb3VsZCBiZSBlbmhhbmNlZCB3aXRoIFhQYXRoIGZvciBtb3JlIHByZWNpc2lvblxuICByZXR1cm4ge1xuICAgIHN0YXJ0T2Zmc2V0OiByYW5nZS5zdGFydE9mZnNldCxcbiAgICBlbmRPZmZzZXQ6IHJhbmdlLmVuZE9mZnNldCxcbiAgICAvLyBDb3VsZCBhZGQgWFBhdGggaGVyZSBmb3IgbW9yZSByb2J1c3QgcG9zaXRpb25pbmdcbiAgfTtcbn1cblxuZnVuY3Rpb24gc2hvd0hpZ2hsaWdodEJ1dHRvbihyYW5nZTogUmFuZ2UpIHtcbiAgY29uc29sZS5sb2coJ05lc3Q6IENyZWF0aW5nIGhpZ2hsaWdodCBidXR0b24nKTtcbiAgaGlkZUhpZ2hsaWdodEJ1dHRvbigpOyAvLyBSZW1vdmUgYW55IGV4aXN0aW5nIGJ1dHRvblxuICBcbiAgY29uc3QgcmVjdCA9IHJhbmdlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zb2xlLmxvZygnTmVzdDogQnV0dG9uIHBvc2l0aW9uOicsIHJlY3QpO1xuICBcbiAgLy8gQ2hlY2sgaWYgcmVjdCBpcyB2YWxpZCAoaGFzIGRpbWVuc2lvbnMpXG4gIGlmIChyZWN0LndpZHRoID09PSAwICYmIHJlY3QuaGVpZ2h0ID09PSAwKSB7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IFJhbmdlIHJlY3QgaXMgZW1wdHksIHRyeWluZyBhbHRlcm5hdGl2ZSBwb3NpdGlvbmluZycpO1xuICAgIFxuICAgIC8vIFRyeSB0byBnZXQgcG9zaXRpb24gZnJvbSB0aGUgc2VsZWN0aW9uIGl0c2VsZiB3aXRob3V0IG1vZGlmeWluZyBET01cbiAgICBjb25zdCBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG4gICAgaWYgKHNlbGVjdGlvbiAmJiBzZWxlY3Rpb24ucmFuZ2VDb3VudCA+IDApIHtcbiAgICAgIC8vIFRyeSB0byBnZXQgcG9zaXRpb24gZnJvbSB0aGUgc3RhcnQgY29udGFpbmVyXG4gICAgICBjb25zdCBzdGFydENvbnRhaW5lciA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgbGV0IGFsdGVybmF0aXZlUmVjdDogRE9NUmVjdCB8IG51bGwgPSBudWxsO1xuICAgICAgXG4gICAgICBpZiAoc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFICYmIHN0YXJ0Q29udGFpbmVyLnBhcmVudEVsZW1lbnQpIHtcbiAgICAgICAgLy8gSWYgaXQncyBhIHRleHQgbm9kZSwgZ2V0IHRoZSBwYXJlbnQgZWxlbWVudCdzIHBvc2l0aW9uXG4gICAgICAgIGFsdGVybmF0aXZlUmVjdCA9IHN0YXJ0Q29udGFpbmVyLnBhcmVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB9IGVsc2UgaWYgKHN0YXJ0Q29udGFpbmVyLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICAvLyBJZiBpdCdzIGFuIGVsZW1lbnQgbm9kZSwgZ2V0IGl0cyBwb3NpdGlvblxuICAgICAgICBhbHRlcm5hdGl2ZVJlY3QgPSAoc3RhcnRDb250YWluZXIgYXMgRWxlbWVudCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCdOZXN0OiBBbHRlcm5hdGl2ZSBwb3NpdGlvbmluZzonLCBhbHRlcm5hdGl2ZVJlY3QpO1xuICAgICAgXG4gICAgICBpZiAoYWx0ZXJuYXRpdmVSZWN0ICYmIGFsdGVybmF0aXZlUmVjdC53aWR0aCA+IDAgJiYgYWx0ZXJuYXRpdmVSZWN0LmhlaWdodCA+IDApIHtcbiAgICAgICAgY3JlYXRlQnV0dG9uKGFsdGVybmF0aXZlUmVjdCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY29uc29sZS5sb2coJ05lc3Q6IEFsbCBwb3NpdGlvbmluZyBtZXRob2RzIGZhaWxlZCwgdXNpbmcgdmlld3BvcnQgY2VudGVyIGZhbGxiYWNrJyk7XG4gICAgLy8gVXNlIGEgZGVmYXVsdCBwb3NpdGlvbiBuZWFyIHRoZSBjZW50ZXIgb2YgdGhlIHZpZXdwb3J0XG4gICAgY29uc3QgZmFsbGJhY2tSZWN0ID0ge1xuICAgICAgYm90dG9tOiB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyLFxuICAgICAgbGVmdDogd2luZG93LmlubmVyV2lkdGggLyAyLFxuICAgICAgdG9wOiB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyLFxuICAgICAgcmlnaHQ6IHdpbmRvdy5pbm5lcldpZHRoIC8gMixcbiAgICAgIHdpZHRoOiAwLFxuICAgICAgaGVpZ2h0OiAwXG4gICAgfTtcbiAgICBjcmVhdGVCdXR0b24oZmFsbGJhY2tSZWN0KTtcbiAgICByZXR1cm47XG4gIH1cbiAgXG4gIGNyZWF0ZUJ1dHRvbihyZWN0KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQnV0dG9uKHJlY3Q6IGFueSkge1xuICBoaWdobGlnaHRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgaGlnaGxpZ2h0QnV0dG9uLmlkID0gJ25lc3QtaGlnaGxpZ2h0LWJ1dHRvbic7XG4gIGhpZ2hsaWdodEJ1dHRvbi5pbm5lckhUTUwgPSBgXG4gICAgPHN2ZyB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICA8cGF0aCBkPVwiTTEyIDJMMTMuMDkgOC4yNkwyMCA5TDEzLjA5IDkuNzRMMTIgMTZMMTAuOTEgOS43NEw0IDlMMTAuOTEgOC4yNkwxMiAyWlwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHN0cm9rZS13aWR0aD1cIjJcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiLz5cbiAgICA8L3N2Zz5cbiAgICBTYXZlIGhpZ2hsaWdodFxuICBgO1xuICBcbiAgLy8gQ2FsY3VsYXRlIHBvc2l0aW9uIHdpdGggYmV0dGVyIGhhbmRsaW5nIG9mIG5lZ2F0aXZlIGNvb3JkaW5hdGVzXG4gIGNvbnN0IHNjcm9sbFRvcCA9IHdpbmRvdy5zY3JvbGxZIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3A7XG4gIGNvbnN0IHNjcm9sbExlZnQgPSB3aW5kb3cuc2Nyb2xsWCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdDtcbiAgXG4gIC8vIEdldCB2aWV3cG9ydCBkaW1lbnNpb25zXG4gIGNvbnN0IHZpZXdwb3J0SGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xuICBjb25zdCB2aWV3cG9ydFdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gIFxuICAvLyBDYWxjdWxhdGUgcmF3IHBvc2l0aW9uXG4gIGxldCByYXdUb3AgPSAocmVjdC5ib3R0b20gfHwgcmVjdC50b3AgfHwgMCk7XG4gIGxldCByYXdMZWZ0ID0gKHJlY3QubGVmdCB8fCByZWN0LnJpZ2h0IHx8IDApO1xuICBcbiAgLy8gSGFuZGxlIG5lZ2F0aXZlIGNvb3JkaW5hdGVzIGJ5IHVzaW5nIGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uIGFzIHJlZmVyZW5jZVxuICBpZiAocmF3VG9wIDwgMCkge1xuICAgIHJhd1RvcCA9IHNjcm9sbFRvcCArIDEwMDsgLy8gUG9zaXRpb24gMTAwcHggZnJvbSBjdXJyZW50IHNjcm9sbCBwb3NpdGlvblxuICB9XG4gIFxuICBpZiAocmF3TGVmdCA8IDApIHtcbiAgICByYXdMZWZ0ID0gNTA7IC8vIFBvc2l0aW9uIDUwcHggZnJvbSBsZWZ0IGVkZ2VcbiAgfVxuICBcbiAgLy8gRmluYWwgcG9zaXRpb24gY2FsY3VsYXRpb25cbiAgY29uc3QgYnV0dG9uVG9wID0gcmF3VG9wICsgMTA7IC8vIEFkZCBzbWFsbCBvZmZzZXQgYmVsb3cgc2VsZWN0aW9uXG4gIGNvbnN0IGJ1dHRvbkxlZnQgPSBNYXRoLm1heCgxMCwgTWF0aC5taW4odmlld3BvcnRXaWR0aCAtIDIwMCwgcmF3TGVmdCkpO1xuICBcbiAgY29uc29sZS5sb2coJ05lc3Q6IFBvc2l0aW9uIGNhbGN1bGF0aW9uOicsIHtcbiAgICByZWN0LFxuICAgIHNjcm9sbFRvcCxcbiAgICBzY3JvbGxMZWZ0LFxuICAgIHJhd1RvcCxcbiAgICByYXdMZWZ0LFxuICAgIGJ1dHRvblRvcCxcbiAgICBidXR0b25MZWZ0LFxuICAgIHZpZXdwb3J0SGVpZ2h0LFxuICAgIHZpZXdwb3J0V2lkdGhcbiAgfSk7XG4gIFxuICBoaWdobGlnaHRCdXR0b24uc3R5bGUuY3NzVGV4dCA9IGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAke2J1dHRvblRvcH1weDtcbiAgICBsZWZ0OiAke2J1dHRvbkxlZnR9cHg7XG4gICAgYmFja2dyb3VuZDogIzEwYjk4MSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDhweCAxMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgei1pbmRleDogOTk5OTk5ICFpbXBvcnRhbnQ7XG4gICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDZweDtcbiAgICBhbmltYXRpb246IGZhZGVJbiAwLjJzIGVhc2Utb3V0O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwNTk2NjkgIWltcG9ydGFudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgcG9pbnRlci1ldmVudHM6IGF1dG8gIWltcG9ydGFudDtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICBtaW4td2lkdGg6IDE0MHB4O1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG4gIGA7XG4gIFxuICAvLyBBZGQgYW5pbWF0aW9uIGtleWZyYW1lc1xuICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZXN0LWhpZ2hsaWdodC1zdHlsZXMnKSkge1xuICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICBzdHlsZS5pZCA9ICduZXN0LWhpZ2hsaWdodC1zdHlsZXMnO1xuICAgIHN0eWxlLnRleHRDb250ZW50ID0gYFxuICAgICAgQGtleWZyYW1lcyBmYWRlSW4ge1xuICAgICAgICBmcm9tIHsgb3BhY2l0eTogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KTsgfVxuICAgICAgICB0byB7IG9wYWNpdHk6IDE7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAgICAgfVxuICAgICAgI25lc3QtaGlnaGxpZ2h0LWJ1dHRvbjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwNTk2NjkgIWltcG9ydGFudDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xuICAgICAgfVxuICAgIGA7XG4gICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cbiAgXG4gIC8vIEFkZCBjbGljayBoYW5kbGVyIHdpdGggZGVidWcgbG9nZ2luZ1xuICBjb25zdCBjbGlja0hhbmRsZXIgPSAoZTogRXZlbnQpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBjb25zb2xlLmxvZygnTmVzdDogSGlnaGxpZ2h0IGJ1dHRvbiBjbGlja2VkIScpO1xuICAgIHNhdmVIaWdobGlnaHQoKTtcbiAgfTtcbiAgXG4gIGhpZ2hsaWdodEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrSGFuZGxlcik7XG4gIGhpZ2hsaWdodEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zb2xlLmxvZygnTmVzdDogQnV0dG9uIG1vdXNlZG93bicpO1xuICB9KTtcbiAgXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaGlnaGxpZ2h0QnV0dG9uKTtcbiAgY29uc29sZS5sb2coJ05lc3Q6IEhpZ2hsaWdodCBidXR0b24gYWRkZWQgdG8gcGFnZSBhdCBwb3NpdGlvbjonLCBidXR0b25Ub3AsIGJ1dHRvbkxlZnQpO1xuICBcbiAgLy8gRm9yY2UgYSByZWZsb3cgdG8gZW5zdXJlIHRoZSBidXR0b24gaXMgcmVuZGVyZWRcbiAgaGlnaGxpZ2h0QnV0dG9uLm9mZnNldEhlaWdodDtcbiAgXG4gIC8vIENoZWNrIGlmIGJ1dHRvbiBpcyBhY3R1YWxseSB2aXNpYmxlXG4gIGNvbnN0IGJ1dHRvblJlY3QgPSBoaWdobGlnaHRCdXR0b24uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IGlzVmlzaWJsZSA9IGJ1dHRvblJlY3QudG9wID49IDAgJiYgYnV0dG9uUmVjdC50b3AgPD0gdmlld3BvcnRIZWlnaHQgJiYgXG4gICAgICAgICAgICAgICAgICAgYnV0dG9uUmVjdC5sZWZ0ID49IDAgJiYgYnV0dG9uUmVjdC5sZWZ0IDw9IHZpZXdwb3J0V2lkdGg7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBCdXR0b24gdmlzaWJpbGl0eSBjaGVjazonLCB7IGJ1dHRvblJlY3QsIGlzVmlzaWJsZSB9KTtcbiAgXG4gIGlmICghaXNWaXNpYmxlKSB7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IEJ1dHRvbiBpcyBub3QgdmlzaWJsZSwgcmVwb3NpdGlvbmluZyB0byB2aWV3cG9ydCBjZW50ZXInKTtcbiAgICBoaWdobGlnaHRCdXR0b24uc3R5bGUudG9wID0gYCR7c2Nyb2xsVG9wICsgdmlld3BvcnRIZWlnaHQgLyAyfXB4YDtcbiAgICBoaWdobGlnaHRCdXR0b24uc3R5bGUubGVmdCA9IGAke3ZpZXdwb3J0V2lkdGggLyAyIC0gNzB9cHhgO1xuICB9XG4gIFxuICAvLyBBdXRvLWhpZGUgYWZ0ZXIgOCBzZWNvbmRzIChpbmNyZWFzZWQgZnJvbSA1KVxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBpZiAoaGlnaGxpZ2h0QnV0dG9uKSB7XG4gICAgICBoaWRlSGlnaGxpZ2h0QnV0dG9uKCk7XG4gICAgfVxuICB9LCA4MDAwKTtcbn1cblxuZnVuY3Rpb24gaGlkZUhpZ2hsaWdodEJ1dHRvbigpIHtcbiAgaWYgKGhpZ2hsaWdodEJ1dHRvbiAmJiBoaWdobGlnaHRCdXR0b24ucGFyZW50Tm9kZSkge1xuICAgIGhpZ2hsaWdodEJ1dHRvbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGhpZ2hsaWdodEJ1dHRvbik7XG4gICAgaGlnaGxpZ2h0QnV0dG9uID0gbnVsbDtcbiAgfVxufVxuXG5mdW5jdGlvbiBzYXZlSGlnaGxpZ2h0KCkge1xuICBjb25zb2xlLmxvZygnW05lc3RdIHNhdmVIaWdobGlnaHQgY2FsbGVkJywgbGFzdFNlbGVjdGlvbik7XG4gIGlmICghbGFzdFNlbGVjdGlvbikge1xuICAgIGNvbnNvbGUubG9nKCdbTmVzdF0gTm8gc2VsZWN0aW9uIGRhdGEgYXZhaWxhYmxlJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIFxuICAvLyBTdG9yZSBzZWxlY3Rpb24gcmVmZXJlbmNlIHRvIGF2b2lkIG51bGwgaXNzdWVzXG4gIGNvbnN0IHNlbGVjdGlvbiA9IGxhc3RTZWxlY3Rpb247XG4gIGhpZGVIaWdobGlnaHRCdXR0b24oKTtcbiAgXG4gIC8vIEdldCB0aGUgY3VycmVudCBzZWxlY3Rpb24gcmFuZ2VcbiAgY29uc3Qgd2luZG93U2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICBjb25zdCByYW5nZSA9IHdpbmRvd1NlbGVjdGlvbj8uZ2V0UmFuZ2VBdCgwKTtcbiAgY29uc29sZS5sb2coJ1tOZXN0XSBzYXZlSGlnaGxpZ2h0IHNlbGVjdGlvbicsIHdpbmRvd1NlbGVjdGlvbiwgJ3JhbmdlJywgcmFuZ2UpO1xuICBcbiAgaWYgKHJhbmdlKSB7XG4gICAgLy8gQ3JlYXRlIGEgdGVtcG9yYXJ5IElEIGZvciB0aGUgaGlnaGxpZ2h0XG4gICAgY29uc3QgdGVtcEhpZ2hsaWdodElkID0gYHRlbXBfJHtEYXRlLm5vdygpfWA7XG4gICAgXG4gICAgLy8gQ3JlYXRlIHRoZSB2aXN1YWwgaGlnaGxpZ2h0IGltbWVkaWF0ZWx5XG4gICAgY3JlYXRlVmlzdWFsSGlnaGxpZ2h0KHJhbmdlLCB0ZW1wSGlnaGxpZ2h0SWQpLnRoZW4oaGlnaGxpZ2h0RWxlbWVudCA9PiB7XG4gICAgICBpZiAoaGlnaGxpZ2h0RWxlbWVudCkge1xuICAgICAgICBjb25zb2xlLmxvZygnW05lc3RdIFZpc3VhbCBoaWdobGlnaHQgY3JlYXRlZCwgc2VuZGluZyB0byBiYWNrZ3JvdW5kIHNjcmlwdCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gU2VuZCBtZXNzYWdlIHRvIGJhY2tncm91bmQgc2NyaXB0IHRvIHNhdmUgaGlnaGxpZ2h0XG4gICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICBhY3Rpb246ICdzYXZlSGlnaGxpZ2h0JyxcbiAgICAgICAgICBzZWxlY3RlZFRleHQ6IHNlbGVjdGlvbi50ZXh0LFxuICAgICAgICAgIGNvbnRleHQ6IHNlbGVjdGlvbi5jb250ZXh0LFxuICAgICAgICAgIHBvc2l0aW9uOiBzZWxlY3Rpb24ucG9zaXRpb25cbiAgICAgICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tOZXN0XSBSZWNlaXZlZCByZXNwb25zZSBmcm9tIGJhY2tncm91bmQgc2NyaXB0OicsIHJlc3BvbnNlKTtcbiAgICAgICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBoaWdobGlnaHQgZWxlbWVudCB3aXRoIHRoZSByZWFsIElEXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UuaGlnaGxpZ2h0SWQpIHtcbiAgICAgICAgICAgICAgaGlnaGxpZ2h0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmVzdC1oaWdobGlnaHQtaWQnLCByZXNwb25zZS5oaWdobGlnaHRJZCk7XG4gICAgICAgICAgICAgIHBhZ2VIaWdobGlnaHRzLmRlbGV0ZSh0ZW1wSGlnaGxpZ2h0SWQpO1xuICAgICAgICAgICAgICBwYWdlSGlnaGxpZ2h0cy5zZXQocmVzcG9uc2UuaGlnaGxpZ2h0SWQsIGhpZ2hsaWdodEVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2hvd0hpZ2hsaWdodENvbmZpcm1hdGlvbigpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJZiBzYXZlIGZhaWxlZCwgcmVtb3ZlIHRoZSB2aXN1YWwgaGlnaGxpZ2h0XG4gICAgICAgICAgICByZW1vdmVIaWdobGlnaHQodGVtcEhpZ2hsaWdodElkKTtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tOZXN0XSBGYWlsZWQgdG8gc2F2ZSBoaWdobGlnaHQ6JywgcmVzcG9uc2U/LmVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdbTmVzdF0gVmlzdWFsIGhpZ2hsaWdodCBjcmVhdGlvbiBmYWlsZWQsIHN0aWxsIHNhdmluZyB0byBzdG9yYWdlJyk7XG4gICAgICAgIC8vIElmIHZpc3VhbCBoaWdobGlnaHQgY3JlYXRpb24gZmFpbGVkLCBzdGlsbCB0cnkgdG8gc2F2ZSB0byBzdG9yYWdlXG4gICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICBhY3Rpb246ICdzYXZlSGlnaGxpZ2h0JyxcbiAgICAgICAgICBzZWxlY3RlZFRleHQ6IHNlbGVjdGlvbi50ZXh0LFxuICAgICAgICAgIGNvbnRleHQ6IHNlbGVjdGlvbi5jb250ZXh0LFxuICAgICAgICAgIHBvc2l0aW9uOiBzZWxlY3Rpb24ucG9zaXRpb25cbiAgICAgICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tOZXN0XSBSZWNlaXZlZCByZXNwb25zZSBmcm9tIGJhY2tncm91bmQgc2NyaXB0OicsIHJlc3BvbnNlKTtcbiAgICAgICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICAgICAgc2hvd0hpZ2hsaWdodENvbmZpcm1hdGlvbigpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdbTmVzdF0gRmFpbGVkIHRvIHNhdmUgaGlnaGxpZ2h0OicsIHJlc3BvbnNlPy5lcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLndhcm4oJ1tOZXN0XSBObyByYW5nZSBhdmFpbGFibGUsIHN0aWxsIHNhdmluZyB0byBzdG9yYWdlJyk7XG4gICAgLy8gSWYgbm8gcmFuZ2UgYXZhaWxhYmxlLCBzdGlsbCB0cnkgdG8gc2F2ZSB0byBzdG9yYWdlXG4gICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgYWN0aW9uOiAnc2F2ZUhpZ2hsaWdodCcsXG4gICAgICBzZWxlY3RlZFRleHQ6IHNlbGVjdGlvbi50ZXh0LFxuICAgICAgY29udGV4dDogc2VsZWN0aW9uLmNvbnRleHQsXG4gICAgICBwb3NpdGlvbjogc2VsZWN0aW9uLnBvc2l0aW9uXG4gICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnW05lc3RdIFJlY2VpdmVkIHJlc3BvbnNlIGZyb20gYmFja2dyb3VuZCBzY3JpcHQ6JywgcmVzcG9uc2UpO1xuICAgICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgICAgc2hvd0hpZ2hsaWdodENvbmZpcm1hdGlvbigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignW05lc3RdIEZhaWxlZCB0byBzYXZlIGhpZ2hsaWdodDonLCByZXNwb25zZT8uZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIFxuICBsYXN0U2VsZWN0aW9uID0gbnVsbDtcbn1cblxuLy8gSGlkZSBoaWdobGlnaHQgYnV0dG9uIHdoZW4gdXNlciBjbGlja3MgZWxzZXdoZXJlXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICBpZiAoaGlnaGxpZ2h0QnV0dG9uICYmICFoaWdobGlnaHRCdXR0b24uY29udGFpbnMoZXZlbnQudGFyZ2V0IGFzIE5vZGUpKSB7XG4gICAgaGlkZUhpZ2hsaWdodEJ1dHRvbigpO1xuICB9XG59KTtcblxuLy8gTGVnYWN5IGZ1bmN0aW9uIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBleHRyYWN0UGFnZUNvbnRlbnQoKTogc3RyaW5nIHtcbiAgcmV0dXJuIGV4dHJhY3RXZWJwYWdlQ29udGVudCgpO1xufVxuXG4vKipcbiAqIEVuaGFuY2VkIGNvbnRlbnQgZXh0cmFjdGlvbiB3aXRoIG11bHRpbW9kYWwgc3VwcG9ydFxuICovXG5hc3luYyBmdW5jdGlvbiBleHRyYWN0RW5oYW5jZWRQYWdlQ29udGVudCgpOiBQcm9taXNlPHtcbiAgY29udGVudDogc3RyaW5nO1xuICBjb250ZW50VHlwZTogc3RyaW5nO1xuICBtZXRhZGF0YTogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgbWVkaWFDb250ZW50PzogTWVkaWFDb250ZW50O1xufT4ge1xuICBjb25zdCB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC50aXRsZTtcbiAgY29uc3QgZG9tYWluID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lO1xuXG4gIC8vIERldGVjdCBjb250ZW50IHR5cGVcbiAgY29uc3QgY29udGVudFR5cGUgPSBkZXRlY3RDb250ZW50VHlwZSh1cmwsIHRpdGxlLCBkb21haW4pO1xuICBcbiAgLy8gRXh0cmFjdCBtZXRhZGF0YVxuICBjb25zdCBtZXRhZGF0YSA9IGV4dHJhY3RNZXRhZGF0YShjb250ZW50VHlwZSwgdXJsLCBkb21haW4pO1xuICBcbiAgLy8gSGFuZGxlIGRpZmZlcmVudCBjb250ZW50IHR5cGVzXG4gIGxldCBjb250ZW50ID0gJyc7XG4gIGxldCBtZWRpYUNvbnRlbnQ6IE1lZGlhQ29udGVudCB8IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIHN3aXRjaCAoY29udGVudFR5cGUpIHtcbiAgICAgIGNhc2UgJ3BkZic6XG4gICAgICAgIGNvbnRlbnQgPSBhd2FpdCBleHRyYWN0UERGQ29udGVudCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3ZpZGVvJzpcbiAgICAgICAgY29uc3QgdmlkZW9EYXRhID0gYXdhaXQgZXh0cmFjdFZpZGVvQ29udGVudCgpO1xuICAgICAgICBjb250ZW50ID0gdmlkZW9EYXRhLmNvbnRlbnQ7XG4gICAgICAgIG1lZGlhQ29udGVudCA9IHZpZGVvRGF0YS5tZWRpYUNvbnRlbnQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc29jaWFsJzpcbiAgICAgICAgY29uc3Qgc29jaWFsRGF0YSA9IGF3YWl0IGV4dHJhY3RTb2NpYWxDb250ZW50KGRvbWFpbik7XG4gICAgICAgIGNvbnRlbnQgPSBzb2NpYWxEYXRhLmNvbnRlbnQ7XG4gICAgICAgIG1lZGlhQ29udGVudCA9IHNvY2lhbERhdGEubWVkaWFDb250ZW50O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2VtYWlsJzpcbiAgICAgICAgY29uc3QgZW1haWxEYXRhID0gYXdhaXQgZXh0cmFjdEVtYWlsQ29udGVudCgpO1xuICAgICAgICBjb250ZW50ID0gZW1haWxEYXRhLmNvbnRlbnQ7XG4gICAgICAgIG1lZGlhQ29udGVudCA9IGVtYWlsRGF0YS5tZWRpYUNvbnRlbnQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29udGVudCA9IGV4dHJhY3RXZWJwYWdlQ29udGVudCgpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFbmhhbmNlZCBjb250ZW50IGV4dHJhY3Rpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICBjb250ZW50ID0gZXh0cmFjdFdlYnBhZ2VDb250ZW50KCk7IC8vIEZhbGxiYWNrIHRvIGJhc2ljIGV4dHJhY3Rpb25cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgY29udGVudCxcbiAgICBjb250ZW50VHlwZSxcbiAgICBtZXRhZGF0YSxcbiAgICBtZWRpYUNvbnRlbnQsXG4gIH07XG59XG5cbi8qKlxuICogRGV0ZWN0IGNvbnRlbnQgdHlwZSBiYXNlZCBvbiBVUkwgYW5kIHBhZ2UgY2hhcmFjdGVyaXN0aWNzXG4gKi9cbmZ1bmN0aW9uIGRldGVjdENvbnRlbnRUeXBlKHVybDogc3RyaW5nLCB0aXRsZTogc3RyaW5nLCBkb21haW46IHN0cmluZyk6IHN0cmluZyB7XG4gIC8vIFBERiBkZXRlY3Rpb25cbiAgaWYgKHVybC5pbmNsdWRlcygnLnBkZicpIHx8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2VtYmVkW3R5cGU9XCJhcHBsaWNhdGlvbi9wZGZcIl0nKSkge1xuICAgIHJldHVybiAncGRmJztcbiAgfVxuXG4gIC8vIFZpZGVvIHBsYXRmb3Jtc1xuICBpZiAoZG9tYWluLmluY2x1ZGVzKCd5b3V0dWJlLmNvbScpIHx8IGRvbWFpbi5pbmNsdWRlcygneW91dHUuYmUnKSB8fCBcbiAgICAgIGRvbWFpbi5pbmNsdWRlcygndmltZW8uY29tJykgfHwgZG9tYWluLmluY2x1ZGVzKCd0d2l0Y2gudHYnKSkge1xuICAgIHJldHVybiAndmlkZW8nO1xuICB9XG5cbiAgLy8gU29jaWFsIG1lZGlhIHBsYXRmb3Jtc1xuICBpZiAoZG9tYWluLmluY2x1ZGVzKCd0d2l0dGVyLmNvbScpIHx8IGRvbWFpbi5pbmNsdWRlcygneC5jb20nKSB8fFxuICAgICAgZG9tYWluLmluY2x1ZGVzKCdsaW5rZWRpbi5jb20nKSB8fCBkb21haW4uaW5jbHVkZXMoJ21lZGl1bS5jb20nKSB8fFxuICAgICAgZG9tYWluLmluY2x1ZGVzKCdmYWNlYm9vay5jb20nKSB8fCBkb21haW4uaW5jbHVkZXMoJ2luc3RhZ3JhbS5jb20nKSkge1xuICAgIHJldHVybiAnc29jaWFsJztcbiAgfVxuXG4gIC8vIEVtYWlsIGludGVyZmFjZXNcbiAgaWYgKGRvbWFpbi5pbmNsdWRlcygnZ21haWwuY29tJykgfHwgZG9tYWluLmluY2x1ZGVzKCdvdXRsb29rLicpIHx8XG4gICAgICBkb21haW4uaW5jbHVkZXMoJ21haWwuJykgfHwgdGl0bGUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygnZW1haWwnKSkge1xuICAgIHJldHVybiAnZW1haWwnO1xuICB9XG5cbiAgcmV0dXJuICd3ZWJwYWdlJztcbn1cblxuLyoqXG4gKiBFeHRyYWN0IG1ldGFkYXRhIHNwZWNpZmljIHRvIGNvbnRlbnQgdHlwZVxuICovXG5mdW5jdGlvbiBleHRyYWN0TWV0YWRhdGEoY29udGVudFR5cGU6IHN0cmluZywgdXJsOiBzdHJpbmcsIGRvbWFpbjogc3RyaW5nKTogUmVjb3JkPHN0cmluZywgYW55PiB7XG4gIGNvbnN0IG1ldGFkYXRhOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge1xuICAgIHVybCxcbiAgICBkb21haW4sXG4gICAgZXh0cmFjdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgfTtcblxuICAvLyBFeHRyYWN0IE9wZW4gR3JhcGggbWV0YWRhdGFcbiAgY29uc3Qgb2dUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbcHJvcGVydHk9XCJvZzp0aXRsZVwiXScpPy5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKTtcbiAgY29uc3Qgb2dEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbcHJvcGVydHk9XCJvZzpkZXNjcmlwdGlvblwiXScpPy5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKTtcbiAgY29uc3Qgb2dJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbcHJvcGVydHk9XCJvZzppbWFnZVwiXScpPy5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKTtcbiAgY29uc3Qgb2dBdXRob3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJhdXRob3JcIl0nKT8uZ2V0QXR0cmlidXRlKCdjb250ZW50Jyk7XG4gIGNvbnN0IG9nUHVibGlzaGVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWV0YVtwcm9wZXJ0eT1cImFydGljbGU6cHVibGlzaGVkX3RpbWVcIl0nKT8uZ2V0QXR0cmlidXRlKCdjb250ZW50Jyk7XG5cbiAgaWYgKG9nVGl0bGUpIG1ldGFkYXRhLm9nVGl0bGUgPSBvZ1RpdGxlO1xuICBpZiAob2dEZXNjcmlwdGlvbikgbWV0YWRhdGEub2dEZXNjcmlwdGlvbiA9IG9nRGVzY3JpcHRpb247XG4gIGlmIChvZ0ltYWdlKSBtZXRhZGF0YS5vZ0ltYWdlID0gb2dJbWFnZTtcbiAgaWYgKG9nQXV0aG9yKSBtZXRhZGF0YS5hdXRob3IgPSBvZ0F1dGhvcjtcbiAgaWYgKG9nUHVibGlzaGVkKSBtZXRhZGF0YS5wdWJsaXNoRGF0ZSA9IG9nUHVibGlzaGVkO1xuXG4gIC8vIENvbnRlbnQtc3BlY2lmaWMgbWV0YWRhdGFcbiAgc3dpdGNoIChjb250ZW50VHlwZSkge1xuICAgIGNhc2UgJ3ZpZGVvJzpcbiAgICAgIG1ldGFkYXRhLnZpZGVvRGF0YSA9IGV4dHJhY3RWaWRlb01ldGFkYXRhKCk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdzb2NpYWwnOlxuICAgICAgbWV0YWRhdGEuc29jaWFsRGF0YSA9IGV4dHJhY3RTb2NpYWxNZXRhZGF0YShkb21haW4pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZW1haWwnOlxuICAgICAgbWV0YWRhdGEuZW1haWxEYXRhID0gZXh0cmFjdEVtYWlsTWV0YWRhdGEoKTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIG1ldGFkYXRhO1xufVxuXG4vKipcbiAqIFRyYWRpdGlvbmFsIHdlYnBhZ2UgY29udGVudCBleHRyYWN0aW9uXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RXZWJwYWdlQ29udGVudCgpOiBzdHJpbmcge1xuICAvLyBSZW1vdmUgc2NyaXB0IGFuZCBzdHlsZSBlbGVtZW50c1xuICBjb25zdCBlbGVtZW50c1RvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc2NyaXB0LCBzdHlsZSwgbmF2LCBoZWFkZXIsIGZvb3RlciwgLmFkLCAuYWR2ZXJ0aXNlbWVudCcpO1xuICBjb25zdCBjbG9uZWREb2MgPSBkb2N1bWVudC5jbG9uZU5vZGUodHJ1ZSkgYXMgRG9jdW1lbnQ7XG4gIFxuICBlbGVtZW50c1RvUmVtb3ZlLmZvckVhY2goZWwgPT4ge1xuICAgIGNvbnN0IGNsb25lZEVsID0gY2xvbmVkRG9jLnF1ZXJ5U2VsZWN0b3IoZWwudGFnTmFtZS50b0xvd2VyQ2FzZSgpKTtcbiAgICBpZiAoY2xvbmVkRWwpIHtcbiAgICAgIGNsb25lZEVsLnJlbW92ZSgpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gVHJ5IHRvIGZpbmQgbWFpbiBjb250ZW50IGFyZWFcbiAgbGV0IGNvbnRlbnRFbGVtZW50ID0gXG4gICAgY2xvbmVkRG9jLnF1ZXJ5U2VsZWN0b3IoJ21haW4nKSB8fFxuICAgIGNsb25lZERvYy5xdWVyeVNlbGVjdG9yKCdhcnRpY2xlJykgfHxcbiAgICBjbG9uZWREb2MucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKSB8fFxuICAgIGNsb25lZERvYy5xdWVyeVNlbGVjdG9yKCcjY29udGVudCcpIHx8XG4gICAgY2xvbmVkRG9jLnF1ZXJ5U2VsZWN0b3IoJy5wb3N0JykgfHxcbiAgICBjbG9uZWREb2MucXVlcnlTZWxlY3RvcignLmVudHJ5JykgfHxcbiAgICBjbG9uZWREb2MuYm9keTtcblxuICBpZiAoIWNvbnRlbnRFbGVtZW50KSB7XG4gICAgY29udGVudEVsZW1lbnQgPSBjbG9uZWREb2MuYm9keTtcbiAgfVxuXG4gIC8vIEV4dHJhY3QgdGV4dCBjb250ZW50XG4gIGxldCB0ZXh0ID0gY29udGVudEVsZW1lbnQudGV4dENvbnRlbnQgfHwgY29udGVudEVsZW1lbnQuaW5uZXJUZXh0IHx8ICcnO1xuICBcbiAgLy8gQ2xlYW4gdXAgdGhlIHRleHRcbiAgdGV4dCA9IHRleHRcbiAgICAucmVwbGFjZSgvXFxzKy9nLCAnICcpIC8vIFJlcGxhY2UgbXVsdGlwbGUgd2hpdGVzcGFjZSB3aXRoIHNpbmdsZSBzcGFjZVxuICAgIC5yZXBsYWNlKC9cXG5cXHMqXFxuL2csICdcXG4nKSAvLyBSZW1vdmUgZW1wdHkgbGluZXNcbiAgICAudHJpbSgpO1xuXG4gIC8vIExpbWl0IGxlbmd0aCB0byBhdm9pZCBleGNlc3NpdmUgY29udGVudFxuICBjb25zdCBtYXhMZW5ndGggPSAzMDAwO1xuICBpZiAodGV4dC5sZW5ndGggPiBtYXhMZW5ndGgpIHtcbiAgICB0ZXh0ID0gdGV4dC5zdWJzdHJpbmcoMCwgbWF4TGVuZ3RoKSArICcuLi4nO1xuICB9XG5cbiAgcmV0dXJuIHRleHQ7XG59XG5cbi8qKlxuICogRXh0cmFjdCBQREYgY29udGVudCAoaWYgZW1iZWRkZWQpXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RQREZDb250ZW50KCk6IFByb21pc2U8c3RyaW5nPiB7XG4gIHRyeSB7XG4gICAgLy8gTG9vayBmb3IgZW1iZWRkZWQgUERGXG4gICAgY29uc3QgcGRmRW1iZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdlbWJlZFt0eXBlPVwiYXBwbGljYXRpb24vcGRmXCJdJykgYXMgSFRNTEVtYmVkRWxlbWVudDtcbiAgICBpZiAocGRmRW1iZWQgJiYgcGRmRW1iZWQuc3JjKSB7XG4gICAgICByZXR1cm4gYFBERiBEb2N1bWVudDogJHtwZGZFbWJlZC5zcmN9XFxuXFxuVGl0bGU6ICR7ZG9jdW1lbnQudGl0bGV9YDtcbiAgICB9XG4gICAgXG4gICAgLy8gSWYgdGhpcyBpcyBhIGRpcmVjdCBQREYgVVJMLCB0aGUgYnJvd3NlciBtaWdodCBoYXZlIHJlbmRlcmVkIGl0XG4gICAgY29uc3QgdGV4dENvbnRlbnQgPSBkb2N1bWVudC5ib2R5Py50ZXh0Q29udGVudCB8fCAnJztcbiAgICByZXR1cm4gdGV4dENvbnRlbnQudHJpbSgpIHx8IGBQREY6ICR7ZG9jdW1lbnQudGl0bGV9YDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdQREYgZXh0cmFjdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHJldHVybiBgUERGOiAke2RvY3VtZW50LnRpdGxlfWA7XG4gIH1cbn1cblxuLyoqXG4gKiBFeHRyYWN0IHZpZGVvIGNvbnRlbnQgYW5kIG1ldGFkYXRhXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RWaWRlb0NvbnRlbnQoKTogUHJvbWlzZTx7Y29udGVudDogc3RyaW5nOyBtZWRpYUNvbnRlbnQ/OiBNZWRpYUNvbnRlbnR9PiB7XG4gIHRyeSB7XG4gICAgbGV0IGNvbnRlbnQgPSAnJztcbiAgICBsZXQgdGltZXN0YW1wOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gICAgXG4gICAgLy8gWW91VHViZS1zcGVjaWZpYyBleHRyYWN0aW9uXG4gICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZS5pbmNsdWRlcygneW91dHViZS5jb20nKSkge1xuICAgICAgLy8gR2V0IHZpZGVvIHRpdGxlIGFuZCBkZXNjcmlwdGlvblxuICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoMS55dGQtdmlkZW8tcHJpbWFyeS1pbmZvLXJlbmRlcmVyJyk/LnRleHRDb250ZW50IHx8IFxuICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aXRsZSBoMScpPy50ZXh0Q29udGVudCB8fFxuICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlO1xuICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGVzY3JpcHRpb24tdGV4dCcpPy50ZXh0Q29udGVudCB8fCBcbiAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWV0YS1jb250ZW50cyAjZGVzY3JpcHRpb24nKT8udGV4dENvbnRlbnQgfHwgJyc7XG4gICAgICBcbiAgICAgIC8vIEV4dHJhY3QgdGltZXN0YW1wIGZyb20gVVJMXG4gICAgICBjb25zdCB1cmxQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xuICAgICAgY29uc3QgdCA9IHVybFBhcmFtcy5nZXQoJ3QnKTtcbiAgICAgIGlmICh0KSB7XG4gICAgICAgIHRpbWVzdGFtcCA9IHBhcnNlSW50KHQpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb250ZW50ID0gYCR7dGl0bGV9XFxuXFxuJHtkZXNjcmlwdGlvbn1gO1xuICAgICAgXG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb250ZW50LFxuICAgICAgICBtZWRpYUNvbnRlbnQ6IHtcbiAgICAgICAgICB0eXBlOiAndmlkZW8nLFxuICAgICAgICAgIG9yaWdpbmFsRGF0YTogd2luZG93LmxvY2F0aW9uLmhyZWYsXG4gICAgICAgICAgZXh0cmFjdGVkVGV4dDogY29udGVudCxcbiAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgcGxhdGZvcm06ICd5b3V0dWJlJyxcbiAgICAgICAgICAgIHRpbWVzdGFtcCxcbiAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICAvLyBHZW5lcmljIHZpZGVvIGV4dHJhY3Rpb25cbiAgICBjb250ZW50ID0gZG9jdW1lbnQudGl0bGUgKyAnXFxuXFxuJyArIGV4dHJhY3RXZWJwYWdlQ29udGVudCgpO1xuICAgIHJldHVybiB7IGNvbnRlbnQgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdWaWRlbyBleHRyYWN0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHsgY29udGVudDogZG9jdW1lbnQudGl0bGUgKyAnXFxuXFxuJyArIGV4dHJhY3RXZWJwYWdlQ29udGVudCgpIH07XG4gIH1cbn1cblxuLyoqXG4gKiBFeHRyYWN0IHNvY2lhbCBtZWRpYSBjb250ZW50XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RTb2NpYWxDb250ZW50KGRvbWFpbjogc3RyaW5nKTogUHJvbWlzZTx7Y29udGVudDogc3RyaW5nOyBtZWRpYUNvbnRlbnQ/OiBNZWRpYUNvbnRlbnR9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcGFnZUhUTUwgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQub3V0ZXJIVE1MO1xuICAgIGNvbnN0IG1lZGlhQ29udGVudCA9IGF3YWl0IG1lZGlhUHJvY2Vzc29yLnByb2Nlc3NTb2NpYWxQb3N0KHBhZ2VIVE1MLCBkb21haW4pO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBjb250ZW50OiBtZWRpYUNvbnRlbnQuZXh0cmFjdGVkVGV4dCB8fCBleHRyYWN0V2VicGFnZUNvbnRlbnQoKSxcbiAgICAgIG1lZGlhQ29udGVudCxcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1NvY2lhbCBjb250ZW50IGV4dHJhY3Rpb24gZmFpbGVkOicsIGVycm9yKTtcbiAgICByZXR1cm4geyBjb250ZW50OiBleHRyYWN0V2VicGFnZUNvbnRlbnQoKSB9O1xuICB9XG59XG5cbi8qKlxuICogRXh0cmFjdCBlbWFpbCBjb250ZW50XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RFbWFpbENvbnRlbnQoKTogUHJvbWlzZTx7Y29udGVudDogc3RyaW5nOyBtZWRpYUNvbnRlbnQ/OiBNZWRpYUNvbnRlbnR9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZW1haWxIVE1MID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm91dGVySFRNTDtcbiAgICBjb25zdCBlbWFpbE1ldGFkYXRhID0gZXh0cmFjdEVtYWlsTWV0YWRhdGEoKTtcbiAgICBcbiAgICBjb25zdCBtZWRpYUNvbnRlbnQgPSBhd2FpdCBtZWRpYVByb2Nlc3Nvci5wcm9jZXNzRW1haWwoZW1haWxIVE1MLCBlbWFpbE1ldGFkYXRhKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgY29udGVudDogbWVkaWFDb250ZW50LmV4dHJhY3RlZFRleHQgfHwgZXh0cmFjdFdlYnBhZ2VDb250ZW50KCksXG4gICAgICBtZWRpYUNvbnRlbnQsXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFbWFpbCBleHRyYWN0aW9uIGZhaWxlZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIHsgY29udGVudDogZXh0cmFjdFdlYnBhZ2VDb250ZW50KCkgfTtcbiAgfVxufVxuXG4vKipcbiAqIEV4dHJhY3QgdmlkZW8tc3BlY2lmaWMgbWV0YWRhdGFcbiAqL1xuZnVuY3Rpb24gZXh0cmFjdFZpZGVvTWV0YWRhdGEoKTogUmVjb3JkPHN0cmluZywgYW55PiB7XG4gIGNvbnN0IG1ldGFkYXRhOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge307XG4gIFxuICBpZiAod2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLmluY2x1ZGVzKCd5b3V0dWJlLmNvbScpKSB7XG4gICAgLy8gWW91VHViZSBzcGVjaWZpYyBtZXRhZGF0YVxuICAgIGNvbnN0IGNoYW5uZWxOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI293bmVyLW5hbWUgYScpPy50ZXh0Q29udGVudCB8fFxuICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdXBsb2FkLWluZm8gI2NoYW5uZWwtbmFtZScpPy50ZXh0Q29udGVudDtcbiAgICBjb25zdCB2aWV3Q291bnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY291bnQnKT8udGV4dENvbnRlbnQgfHxcbiAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52aWV3LWNvdW50Jyk/LnRleHRDb250ZW50O1xuICAgIGNvbnN0IHVwbG9hZERhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGF0ZScpPy50ZXh0Q29udGVudCB8fFxuICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1cGxvYWQtZGF0ZScpPy50ZXh0Q29udGVudDtcbiAgICBcbiAgICBpZiAoY2hhbm5lbE5hbWUpIG1ldGFkYXRhLmNoYW5uZWwgPSBjaGFubmVsTmFtZTtcbiAgICBpZiAodmlld0NvdW50KSBtZXRhZGF0YS52aWV3cyA9IHZpZXdDb3VudDtcbiAgICBpZiAodXBsb2FkRGF0ZSkgbWV0YWRhdGEudXBsb2FkRGF0ZSA9IHVwbG9hZERhdGU7XG4gIH1cbiAgXG4gIHJldHVybiBtZXRhZGF0YTtcbn1cblxuLyoqXG4gKiBFeHRyYWN0IHNvY2lhbCBtZWRpYSBtZXRhZGF0YVxuICovXG5mdW5jdGlvbiBleHRyYWN0U29jaWFsTWV0YWRhdGEoZG9tYWluOiBzdHJpbmcpOiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHtcbiAgY29uc3QgbWV0YWRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7IHBsYXRmb3JtOiBkb21haW4gfTtcbiAgXG4gIGlmIChkb21haW4uaW5jbHVkZXMoJ3R3aXR0ZXIuY29tJykgfHwgZG9tYWluLmluY2x1ZGVzKCd4LmNvbScpKSB7XG4gICAgY29uc3QgYXV0aG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtdGVzdGlkPVwiVXNlci1OYW1lXCJdJyk/LnRleHRDb250ZW50O1xuICAgIGNvbnN0IHRpbWVzdGFtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RpbWUnKT8uZ2V0QXR0cmlidXRlKCdkYXRldGltZScpO1xuICAgIFxuICAgIGlmIChhdXRob3IpIG1ldGFkYXRhLmF1dGhvciA9IGF1dGhvcjtcbiAgICBpZiAodGltZXN0YW1wKSBtZXRhZGF0YS5wdWJsaXNoRGF0ZSA9IHRpbWVzdGFtcDtcbiAgfSBlbHNlIGlmIChkb21haW4uaW5jbHVkZXMoJ2xpbmtlZGluLmNvbScpKSB7XG4gICAgY29uc3QgYXV0aG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZlZWQtc2hhcmVkLWFjdG9yX19uYW1lJyk/LnRleHRDb250ZW50O1xuICAgIGNvbnN0IGNvbXBhbnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmVlZC1zaGFyZWQtYWN0b3JfX2Rlc2NyaXB0aW9uJyk/LnRleHRDb250ZW50O1xuICAgIFxuICAgIGlmIChhdXRob3IpIG1ldGFkYXRhLmF1dGhvciA9IGF1dGhvcjtcbiAgICBpZiAoY29tcGFueSkgbWV0YWRhdGEuY29tcGFueSA9IGNvbXBhbnk7XG4gIH1cbiAgXG4gIHJldHVybiBtZXRhZGF0YTtcbn1cblxuLyoqXG4gKiBFeHRyYWN0IGVtYWlsIG1ldGFkYXRhXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RFbWFpbE1ldGFkYXRhKCk6IFJlY29yZDxzdHJpbmcsIGFueT4ge1xuICBjb25zdCBtZXRhZGF0YTogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9O1xuICBcbiAgLy8gR21haWwgc3BlY2lmaWNcbiAgaWYgKHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZS5pbmNsdWRlcygnZ21haWwuY29tJykpIHtcbiAgICBjb25zdCBzdWJqZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaDJbZGF0YS10aHJlYWQtaWRdJyk/LnRleHRDb250ZW50IHx8XG4gICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhQJyk/LnRleHRDb250ZW50O1xuICAgIGNvbnN0IGZyb20gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ28gc3BhbltlbWFpbF0nKT8uZ2V0QXR0cmlidXRlKCdlbWFpbCcpIHx8XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmdEJyk/LmdldEF0dHJpYnV0ZSgnZW1haWwnKTtcbiAgICBcbiAgICBpZiAoc3ViamVjdCkgbWV0YWRhdGEuc3ViamVjdCA9IHN1YmplY3Q7XG4gICAgaWYgKGZyb20pIG1ldGFkYXRhLmZyb20gPSBmcm9tO1xuICB9XG4gIFxuICByZXR1cm4gbWV0YWRhdGE7XG59XG5cbi8vIEFkZCB2aXN1YWwgZmVlZGJhY2sgd2hlbiBwYWdlIGlzIHNhdmVkXG5mdW5jdGlvbiBzaG93U2F2ZUNvbmZpcm1hdGlvbigpIHtcbiAgY29uc3Qgbm90aWZpY2F0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG5vdGlmaWNhdGlvbi5zdHlsZS5jc3NUZXh0ID0gYFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDIwcHg7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogIzEwYjk4MTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMTJweCAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgei1pbmRleDogMTAwMDA7XG4gICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGFuaW1hdGlvbjogc2xpZGVJbiAwLjNzIGVhc2Utb3V0O1xuICBgO1xuICBcbiAgbm90aWZpY2F0aW9uLnRleHRDb250ZW50ID0gJ+KckyBTYXZlZCB0byBOZXN0JztcbiAgXG4gIHNob3dOb3RpZmljYXRpb24obm90aWZpY2F0aW9uKTtcbn1cblxuLy8gTW9kaWZpZWQgc2hvd0hpZ2hsaWdodENvbmZpcm1hdGlvbiBmb3IgcHJvYmxlbWF0aWMgc2l0ZXNcbmZ1bmN0aW9uIHNob3dIaWdobGlnaHRDb25maXJtYXRpb24oKSB7XG4gIGNvbnN0IG5vdGlmaWNhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBpc1Byb2JsZW1hdGljID0gaXNQcm9ibGVtYXRpY1NpdGUoKTtcbiAgXG4gIG5vdGlmaWNhdGlvbi5zdHlsZS5jc3NUZXh0ID0gYFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDIwcHg7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogJHtpc1Byb2JsZW1hdGljID8gJyNmNTllMGInIDogJyM4YjVjZjYnfTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMTJweCAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBib3gtc2hhZG93OiAwIDRweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgei1pbmRleDogMTAwMDA7XG4gICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgc3lzdGVtLXVpLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGFuaW1hdGlvbjogc2xpZGVJbiAwLjNzIGVhc2Utb3V0O1xuICAgIG1heC13aWR0aDogMzAwcHg7XG4gIGA7XG4gIFxuICBpZiAoaXNQcm9ibGVtYXRpYykge1xuICAgIG5vdGlmaWNhdGlvbi5pbm5lckhUTUwgPSBgXG4gICAgICA8ZGl2IHN0eWxlPVwiZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZ2FwOiA4cHg7IG1hcmdpbi1ib3R0b206IDRweDtcIj5cbiAgICAgICAgPHNwYW4+4pqg77iPPC9zcGFuPlxuICAgICAgICA8c3Ryb25nPkhpZ2hsaWdodCBTYXZlZDwvc3Ryb25nPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IHN0eWxlPVwiZm9udC1zaXplOiAxMnB4OyBvcGFjaXR5OiAwLjk7XCI+XG4gICAgICAgIFRleHQgc2F2ZWQgdG8gTmVzdC4gVmlzdWFsIGhpZ2hsaWdodGluZyBub3Qgc3VwcG9ydGVkIG9uIHRoaXMgc2l0ZS5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH0gZWxzZSB7XG4gICAgbm90aWZpY2F0aW9uLmlubmVySFRNTCA9ICfinKggSGlnaGxpZ2h0IHNhdmVkIHRvIE5lc3QnO1xuICB9XG4gIFxuICBzaG93Tm90aWZpY2F0aW9uKG5vdGlmaWNhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHNob3dOb3RpZmljYXRpb24obm90aWZpY2F0aW9uOiBIVE1MRWxlbWVudCkge1xuICAvLyBBZGQgYW5pbWF0aW9uIGtleWZyYW1lc1xuICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHN0eWxlLnRleHRDb250ZW50ID0gYFxuICAgIEBrZXlmcmFtZXMgc2xpZGVJbiB7XG4gICAgICBmcm9tIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgfVxuICAgICAgdG8ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB9XG4gICAgfVxuICBgO1xuICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobm90aWZpY2F0aW9uKTtcbiAgXG4gIC8vIFJlbW92ZSBhZnRlciAzIHNlY29uZHNcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgaWYgKG5vdGlmaWNhdGlvbi5wYXJlbnROb2RlKSB7XG4gICAgICBub3RpZmljYXRpb24uc3R5bGUuYW5pbWF0aW9uID0gJ3NsaWRlSW4gMC4zcyBlYXNlLW91dCByZXZlcnNlJztcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBpZiAobm90aWZpY2F0aW9uLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICBub3RpZmljYXRpb24ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub3RpZmljYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LCAzMDApO1xuICAgIH1cbiAgfSwgMzAwMCk7XG59XG5cbi8vIEZsb2F0aW5nIEFJIGZ1bmN0aW9uYWxpdHlcbmZ1bmN0aW9uIHRvZ2dsZUZsb2F0aW5nQUkoKSB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiB0b2dnbGVGbG9hdGluZ0FJIGNhbGxlZCwgY3VycmVudCBzdGF0ZTonLCBpc0Zsb2F0aW5nQUlWaXNpYmxlKTtcbiAgXG4gIGlmIChpc0Zsb2F0aW5nQUlWaXNpYmxlKSB7XG4gICAgaGlkZUZsb2F0aW5nQUkoKTtcbiAgfSBlbHNlIHtcbiAgICBzaG93RmxvYXRpbmdBSSgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNob3dGbG9hdGluZ0FJKCkge1xuICBjb25zb2xlLmxvZygnTmVzdDogc2hvd0Zsb2F0aW5nQUkgY2FsbGVkJyk7XG4gIFxuICBpZiAoZmxvYXRpbmdBSVJvb3QpIHtcbiAgICBjb25zb2xlLmxvZygnTmVzdDogRmxvYXRpbmcgQUkgYWxyZWFkeSBleGlzdHMsIGp1c3Qgc2hvd2luZycpO1xuICAgIGlzRmxvYXRpbmdBSVZpc2libGUgPSB0cnVlO1xuICAgIHJlbmRlckZsb2F0aW5nQUkoKTtcbiAgICByZXR1cm47XG4gIH1cbiAgXG4gIC8vIENyZWF0ZSBjb250YWluZXIgZm9yIGZsb2F0aW5nIEFJXG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb250YWluZXIuaWQgPSAnbmVzdC1mbG9hdGluZy1haS1jb250YWluZXInO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gIFxuICAvLyBDcmVhdGUgUmVhY3Qgcm9vdFxuICBmbG9hdGluZ0FJUm9vdCA9IFJlYWN0RE9NLmNyZWF0ZVJvb3QoY29udGFpbmVyKTtcbiAgaXNGbG9hdGluZ0FJVmlzaWJsZSA9IHRydWU7XG4gIFxuICByZW5kZXJGbG9hdGluZ0FJKCk7XG59XG5cbmZ1bmN0aW9uIGhpZGVGbG9hdGluZ0FJKCkge1xuICBjb25zb2xlLmxvZygnTmVzdDogaGlkZUZsb2F0aW5nQUkgY2FsbGVkJyk7XG4gIGlzRmxvYXRpbmdBSVZpc2libGUgPSBmYWxzZTtcbiAgcmVuZGVyRmxvYXRpbmdBSSgpO1xufVxuXG5mdW5jdGlvbiByZW5kZXJGbG9hdGluZ0FJKCkge1xuICBpZiAoIWZsb2F0aW5nQUlSb290KSByZXR1cm47XG4gIFxuICBjb25zdCBwYWdlQ29udGVudCA9IGV4dHJhY3RQYWdlQ29udGVudCgpO1xuICBjb25zdCBwYWdlVGl0bGUgPSBkb2N1bWVudC50aXRsZTtcbiAgY29uc3QgcGFnZVVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICBcbiAgY29uc3QgZWxlbWVudCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoRmxvYXRpbmdBSSwge1xuICAgIGlzVmlzaWJsZTogaXNGbG9hdGluZ0FJVmlzaWJsZSxcbiAgICBvbkNsb3NlOiBoaWRlRmxvYXRpbmdBSSxcbiAgICBwYWdlQ29udGVudCxcbiAgICBwYWdlVGl0bGUsXG4gICAgcGFnZVVybFxuICB9KTtcbiAgXG4gIGZsb2F0aW5nQUlSb290LnJlbmRlcihlbGVtZW50KTtcbn1cblxuLy8gQWRkIGtleWJvYXJkIHNob3J0Y3V0c1xuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gIC8vIEZsb2F0aW5nIEFJIChBbHQgKyBBKVxuICBpZiAoZS5hbHRLZXkgJiYgZS5rZXkgPT09ICdhJykge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB0b2dnbGVGbG9hdGluZ0FJKCk7XG4gIH1cbiAgLy8gU3RpY2t5IE5vdGVzIChBbHQgKyBTKVxuICBpZiAoZS5hbHRLZXkgJiYgZS5rZXkgPT09ICdzJykge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB0b2dnbGVTdGlja3lOb3RlcygpO1xuICB9XG4gIC8vIFNjcmVlbnNob3QgVG9vbCAoQWx0ICsgQylcbiAgaWYgKGUuYWx0S2V5ICYmIGUua2V5ID09PSAnYycpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdG9nZ2xlU2NyZWVuc2hvdFRvb2woKTtcbiAgfVxufSk7XG5cbi8vIFN0aWNreSBOb3RlcyBmdW5jdGlvbmFsaXR5XG5mdW5jdGlvbiB0b2dnbGVTdGlja3lOb3RlcygpIHtcbiAgY29uc29sZS5sb2coJ05lc3Q6IHRvZ2dsZVN0aWNreU5vdGVzIGNhbGxlZCwgY3VycmVudCBzdGF0ZTonLCBpc1N0aWNreU5vdGVzVmlzaWJsZSk7XG4gIFxuICBpZiAoaXNTdGlja3lOb3Rlc1Zpc2libGUpIHtcbiAgICBoaWRlU3RpY2t5Tm90ZXMoKTtcbiAgfSBlbHNlIHtcbiAgICBzaG93U3RpY2t5Tm90ZXMoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG93U3RpY2t5Tm90ZXMoKSB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBzaG93U3RpY2t5Tm90ZXMgY2FsbGVkJyk7XG4gIFxuICBpZiAoc3RpY2t5Tm90ZXNSb290KSB7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IFN0aWNreSBub3RlcyBhbHJlYWR5IGV4aXN0cywganVzdCBzaG93aW5nJyk7XG4gICAgaXNTdGlja3lOb3Rlc1Zpc2libGUgPSB0cnVlO1xuICAgIHJlbmRlclN0aWNreU5vdGVzKCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIFxuICAvLyBDcmVhdGUgY29udGFpbmVyIGZvciBzdGlja3kgbm90ZXNcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnRhaW5lci5pZCA9ICduZXN0LXN0aWNreS1ub3Rlcy1jb250YWluZXInO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gIFxuICAvLyBDcmVhdGUgUmVhY3Qgcm9vdFxuICBzdGlja3lOb3Rlc1Jvb3QgPSBSZWFjdERPTS5jcmVhdGVSb290KGNvbnRhaW5lcik7XG4gIGlzU3RpY2t5Tm90ZXNWaXNpYmxlID0gdHJ1ZTtcbiAgXG4gIHJlbmRlclN0aWNreU5vdGVzKCk7XG59XG5cbmZ1bmN0aW9uIGhpZGVTdGlja3lOb3RlcygpIHtcbiAgY29uc29sZS5sb2coJ05lc3Q6IGhpZGVTdGlja3lOb3RlcyBjYWxsZWQnKTtcbiAgaXNTdGlja3lOb3Rlc1Zpc2libGUgPSBmYWxzZTtcbiAgcmVuZGVyU3RpY2t5Tm90ZXMoKTtcbn1cblxuZnVuY3Rpb24gcmVuZGVyU3RpY2t5Tm90ZXMoKSB7XG4gIGlmICghc3RpY2t5Tm90ZXNSb290KSByZXR1cm47XG4gIFxuICBjb25zdCBlbGVtZW50ID0gUmVhY3QuY3JlYXRlRWxlbWVudChTdGlja3lOb3Rlcywge1xuICAgIGlzVmlzaWJsZTogaXNTdGlja3lOb3Rlc1Zpc2libGUsXG4gICAgb25Ub2dnbGU6IHRvZ2dsZVN0aWNreU5vdGVzXG4gIH0pO1xuICBcbiAgc3RpY2t5Tm90ZXNSb290LnJlbmRlcihlbGVtZW50KTtcbn1cblxuLy8gSW5pdGlhbGl6ZSBzdGlja3kgbm90ZXMgb24gcGFnZSBsb2FkXG5zZXRUaW1lb3V0KCgpID0+IHtcbiAgc2hvd1N0aWNreU5vdGVzKCk7XG59LCAxMDAwKTsgLy8gRGVsYXkgdG8gZW5zdXJlIHBhZ2UgaXMgZnVsbHkgbG9hZGVkXG5cbi8vIFNjcmVlbnNob3QgVG9vbCBmdW5jdGlvbmFsaXR5XG5mdW5jdGlvbiB0b2dnbGVTY3JlZW5zaG90VG9vbCgpIHtcbiAgY29uc29sZS5sb2coJ05lc3Q6IHRvZ2dsZVNjcmVlbnNob3RUb29sIGNhbGxlZCwgY3VycmVudCBzdGF0ZTonLCBpc1NjcmVlbnNob3RUb29sVmlzaWJsZSk7XG4gIFxuICBpZiAoaXNTY3JlZW5zaG90VG9vbFZpc2libGUpIHtcbiAgICBoaWRlU2NyZWVuc2hvdFRvb2woKTtcbiAgfSBlbHNlIHtcbiAgICBzaG93U2NyZWVuc2hvdFRvb2woKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG93U2NyZWVuc2hvdFRvb2woKSB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBzaG93U2NyZWVuc2hvdFRvb2wgY2FsbGVkJyk7XG4gIFxuICBpZiAoc2NyZWVuc2hvdFRvb2xSb290KSB7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IFNjcmVlbnNob3QgdG9vbCBhbHJlYWR5IGV4aXN0cywganVzdCBzaG93aW5nJyk7XG4gICAgaXNTY3JlZW5zaG90VG9vbFZpc2libGUgPSB0cnVlO1xuICAgIHJlbmRlclNjcmVlbnNob3RUb29sKCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIFxuICAvLyBDcmVhdGUgY29udGFpbmVyIGZvciBzY3JlZW5zaG90IHRvb2xcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGNvbnRhaW5lci5pZCA9ICduZXN0LXNjcmVlbnNob3QtdG9vbC1jb250YWluZXInO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gIFxuICAvLyBDcmVhdGUgUmVhY3Qgcm9vdFxuICBzY3JlZW5zaG90VG9vbFJvb3QgPSBSZWFjdERPTS5jcmVhdGVSb290KGNvbnRhaW5lcik7XG4gIGlzU2NyZWVuc2hvdFRvb2xWaXNpYmxlID0gdHJ1ZTtcbiAgXG4gIHJlbmRlclNjcmVlbnNob3RUb29sKCk7XG59XG5cbmZ1bmN0aW9uIGhpZGVTY3JlZW5zaG90VG9vbCgpIHtcbiAgY29uc29sZS5sb2coJ05lc3Q6IGhpZGVTY3JlZW5zaG90VG9vbCBjYWxsZWQnKTtcbiAgaXNTY3JlZW5zaG90VG9vbFZpc2libGUgPSBmYWxzZTtcbiAgcmVuZGVyU2NyZWVuc2hvdFRvb2woKTtcbn1cblxuZnVuY3Rpb24gcmVuZGVyU2NyZWVuc2hvdFRvb2woKSB7XG4gIGlmICghc2NyZWVuc2hvdFRvb2xSb290KSByZXR1cm47XG4gIFxuICBjb25zdCBlbGVtZW50ID0gUmVhY3QuY3JlYXRlRWxlbWVudChTY3JlZW5zaG90VG9vbCwge1xuICAgIGlzVmlzaWJsZTogaXNTY3JlZW5zaG90VG9vbFZpc2libGUsXG4gICAgb25DbG9zZTogaGlkZVNjcmVlbnNob3RUb29sXG4gIH0pO1xuICBcbiAgc2NyZWVuc2hvdFRvb2xSb290LnJlbmRlcihlbGVtZW50KTtcbn0gXG5cbi8vIFZpc3VhbCBoaWdobGlnaHRpbmcgZnVuY3Rpb25hbGl0eVxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVmlzdWFsSGlnaGxpZ2h0KHJhbmdlOiBSYW5nZSwgaGlnaGxpZ2h0SWQ6IHN0cmluZyk6IFByb21pc2U8SFRNTEVsZW1lbnQgfCBudWxsPiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ1tOZXN0XSBjcmVhdGVWaXN1YWxIaWdobGlnaHQgY2FsbGVkJywgeyBoaWdobGlnaHRJZCwgcmFuZ2UgfSk7XG4gICAgaWYgKCFoaWdobGlnaHRzRW5hYmxlZCkge1xuICAgICAgY29uc29sZS5sb2coJ1tOZXN0XSBIaWdobGlnaHRzIGFyZSBkaXNhYmxlZCwgc2tpcHBpbmcgdmlzdWFsIGhpZ2hsaWdodCcpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGlmICghcmFuZ2UpIHtcbiAgICAgIGNvbnNvbGUud2FybignW05lc3RdIE5vIHJhbmdlIHByb3ZpZGVkIHRvIGNyZWF0ZVZpc3VhbEhpZ2hsaWdodCcpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIFxuICAgIC8vIENoZWNrIGlmIHRoaXMgaXMgYSBwcm9ibGVtYXRpYyBzaXRlXG4gICAgaWYgKGlzUHJvYmxlbWF0aWNTaXRlKCkpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbTmVzdF0gUHJvYmxlbWF0aWMgc2l0ZSBkZXRlY3RlZCwgc2tpcHBpbmcgdmlzdWFsIGhpZ2hsaWdodCBidXQgc2F2aW5nIHRleHQnKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBcbiAgICAvLyBHZXQgdXNlcidzIGhpZ2hsaWdodCBwcmVmZXJlbmNlc1xuICAgIGNvbnN0IHsgY29sb3IsIHN0eWxlIH0gPSBhd2FpdCBnZXRIaWdobGlnaHRTZXR0aW5ncygpO1xuICAgIGNvbnN0IGN1c3RvbVN0eWxlcyA9IGdlbmVyYXRlSGlnaGxpZ2h0U3R5bGVzKGNvbG9yLCBzdHlsZSk7XG4gICAgXG4gICAgY29uc3QgaGlnaGxpZ2h0U3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICBoaWdobGlnaHRTcGFuLmNsYXNzTmFtZSA9ICduZXN0LWhpZ2hsaWdodCc7XG4gICAgaGlnaGxpZ2h0U3Bhbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmVzdC1oaWdobGlnaHQtaWQnLCBoaWdobGlnaHRJZCk7XG5cbiAgICAvLyBBcHBseSB1c2VyJ3MgcHJlZmVycmVkIHN0eWxlc1xuICAgIGhpZ2hsaWdodFNwYW4uc3R5bGUuY3NzVGV4dCA9IGBcbiAgICAgICR7Y3VzdG9tU3R5bGVzfVxuICAgICAgY29sb3I6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgICAgIHBhZGRpbmc6IDJweCA0cHggIWltcG9ydGFudDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweCAhaW1wb3J0YW50O1xuICAgICAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4zKSAhaW1wb3J0YW50O1xuICAgICAgY3Vyc29yOiBwb2ludGVyICFpbXBvcnRhbnQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbiAgICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICB6LWluZGV4OiAyMTQ3NDgzNjQ3ICFpbXBvcnRhbnQ7XG4gICAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG4gICAgICBmb250LXdlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gICAgICBsaW5lLWhlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmUgIWltcG9ydGFudDtcbiAgICBgO1xuXG4gICAgaGlnaGxpZ2h0U3Bhbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgc2hvd0hpZ2hsaWdodEluZm8oaGlnaGxpZ2h0SWQpO1xuICAgIH0pO1xuICAgIFxuICAgIC8vIFRyeSBzdXJyb3VuZENvbnRlbnRzICh3b3JrcyBvbmx5IGlmIHJhbmdlIGlzIHZhbGlkIGFuZCBkb2Vzbid0IGNyb3NzIGVsZW1lbnRzKVxuICAgIHRyeSB7XG4gICAgICByYW5nZS5zdXJyb3VuZENvbnRlbnRzKGhpZ2hsaWdodFNwYW4pO1xuICAgICAgcGFnZUhpZ2hsaWdodHMuc2V0KGhpZ2hsaWdodElkLCBoaWdobGlnaHRTcGFuKTtcbiAgICAgIGNvbnNvbGUubG9nKCdbTmVzdF0gVmlzdWFsIGhpZ2hsaWdodCBjcmVhdGVkIHdpdGggc3Vycm91bmRDb250ZW50cycsIHsgaGlnaGxpZ2h0SWQgfSk7XG4gICAgICByZXR1cm4gaGlnaGxpZ2h0U3BhbjtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUud2FybignW05lc3RdIHN1cnJvdW5kQ29udGVudHMgZmFpbGVkJywgZXJyKTtcbiAgICAgIC8vIEZhbGxiYWNrOiBvbmx5IGhpZ2hsaWdodCBpZiBzZWxlY3Rpb24gaXMgd2l0aGluIGEgc2luZ2xlIHRleHQgbm9kZVxuICAgICAgaWYgKHJhbmdlLnN0YXJ0Q29udGFpbmVyID09PSByYW5nZS5lbmRDb250YWluZXIgJiYgcmFuZ2Uuc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgIGNvbnN0IHRleHROb2RlID0gcmFuZ2Uuc3RhcnRDb250YWluZXIgYXMgVGV4dDtcbiAgICAgICAgY29uc3QgdGV4dCA9IHRleHROb2RlLnRleHRDb250ZW50IHx8ICcnO1xuICAgICAgICBjb25zdCBiZWZvcmUgPSB0ZXh0LnNsaWNlKDAsIHJhbmdlLnN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSB0ZXh0LnNsaWNlKHJhbmdlLnN0YXJ0T2Zmc2V0LCByYW5nZS5lbmRPZmZzZXQpO1xuICAgICAgICBjb25zdCBhZnRlciA9IHRleHQuc2xpY2UocmFuZ2UuZW5kT2Zmc2V0KTtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdGV4dE5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgaWYgKCFwYXJlbnQpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1tOZXN0XSBObyBwYXJlbnQgbm9kZSBmb3IgdGV4dCBub2RlJyk7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYmVmb3JlTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGJlZm9yZSk7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHNlbGVjdGVkKTtcbiAgICAgICAgY29uc3QgYWZ0ZXJOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYWZ0ZXIpO1xuICAgICAgICBoaWdobGlnaHRTcGFuLmFwcGVuZENoaWxkKHNlbGVjdGVkTm9kZSk7XG4gICAgICAgIHBhcmVudC5pbnNlcnRCZWZvcmUoYmVmb3JlTm9kZSwgdGV4dE5vZGUpO1xuICAgICAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGhpZ2hsaWdodFNwYW4sIHRleHROb2RlKTtcbiAgICAgICAgcGFyZW50Lmluc2VydEJlZm9yZShhZnRlck5vZGUsIHRleHROb2RlKTtcbiAgICAgICAgcGFyZW50LnJlbW92ZUNoaWxkKHRleHROb2RlKTtcbiAgICAgICAgcGFnZUhpZ2hsaWdodHMuc2V0KGhpZ2hsaWdodElkLCBoaWdobGlnaHRTcGFuKTtcbiAgICAgICAgY29uc29sZS5sb2coJ1tOZXN0XSBWaXN1YWwgaGlnaGxpZ2h0IGNyZWF0ZWQgYnkgc3BsaXR0aW5nIHRleHQgbm9kZScsIHsgaGlnaGxpZ2h0SWQgfSk7XG4gICAgICAgIHJldHVybiBoaWdobGlnaHRTcGFuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdbTmVzdF0gQ291bGQgbm90IGhpZ2hsaWdodCBzZWxlY3Rpb24gKGNvbXBsZXgvbXVsdGktbm9kZSBzZWxlY3Rpb24pJywgeyBoaWdobGlnaHRJZCB9KTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tOZXN0XSBGYWlsZWQgdG8gY3JlYXRlIHZpc3VhbCBoaWdobGlnaHQ6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUhpZ2hsaWdodChoaWdobGlnaHRJZDogc3RyaW5nKSB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBSZW1vdmluZyBoaWdobGlnaHQ6JywgaGlnaGxpZ2h0SWQpO1xuICBcbiAgY29uc3QgaGlnaGxpZ2h0RWxlbWVudCA9IHBhZ2VIaWdobGlnaHRzLmdldChoaWdobGlnaHRJZCk7XG4gIGlmIChoaWdobGlnaHRFbGVtZW50ICYmIGhpZ2hsaWdodEVsZW1lbnQucGFyZW50Tm9kZSkge1xuICAgIC8vIFJlcGxhY2UgdGhlIGhpZ2hsaWdodCBzcGFuIHdpdGggaXRzIHRleHQgY29udGVudFxuICAgIGNvbnN0IHRleHRDb250ZW50ID0gaGlnaGxpZ2h0RWxlbWVudC50ZXh0Q29udGVudCB8fCAnJztcbiAgICBjb25zdCB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHRDb250ZW50KTtcbiAgICBoaWdobGlnaHRFbGVtZW50LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHRleHROb2RlLCBoaWdobGlnaHRFbGVtZW50KTtcbiAgICBcbiAgICAvLyBSZW1vdmUgZnJvbSBvdXIgdHJhY2tpbmdcbiAgICBwYWdlSGlnaGxpZ2h0cy5kZWxldGUoaGlnaGxpZ2h0SWQpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdOZXN0OiBIaWdobGlnaHQgcmVtb3ZlZCBzdWNjZXNzZnVsbHknKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG93SGlnaGxpZ2h0SW5mbyhoaWdobGlnaHRJZDogc3RyaW5nKSB7XG4gIGNvbnNvbGUubG9nKCdOZXN0OiBTaG93aW5nIGhpZ2hsaWdodCBpbmZvIGZvcjonLCBoaWdobGlnaHRJZCk7XG4gIFxuICAvLyBDcmVhdGUgYSB0b29sdGlwIHRvIHNob3cgaGlnaGxpZ2h0IGluZm9ybWF0aW9uXG4gIGNvbnN0IHRvb2x0aXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdG9vbHRpcC5pZCA9ICduZXN0LWhpZ2hsaWdodC10b29sdGlwJztcbiAgdG9vbHRpcC5zdHlsZS5jc3NUZXh0ID0gYFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kOiAjMWYyOTM3O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICB6LWluZGV4OiAxMDAwMTtcbiAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBzeXN0ZW0tdWksIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIG1heC13aWR0aDogMzAwcHg7XG4gICAgYW5pbWF0aW9uOiBmYWRlSW4gMC4ycyBlYXNlLW91dDtcbiAgYDtcbiAgXG4gIHRvb2x0aXAuaW5uZXJIVE1MID0gYFxuICAgIDxkaXYgc3R5bGU9XCJkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBnYXA6IDhweDsgbWFyZ2luLWJvdHRvbTogOHB4O1wiPlxuICAgICAgPHN2ZyB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cImN1cnJlbnRDb2xvclwiPlxuICAgICAgICA8cGF0aCBkPVwiTTEyIDJMMTMuMDkgOC4yNkwyMCA5TDEzLjA5IDkuNzRMMTIgMTZMMTAuOTEgOS43NEw0IDlMMTAuOTEgOC4yNkwxMiAyWlwiLz5cbiAgICAgIDwvc3ZnPlxuICAgICAgPHN0cm9uZz5OZXN0IEhpZ2hsaWdodDwvc3Ryb25nPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiA4cHg7XCI+XG4gICAgICA8YnV0dG9uIGlkPVwibmVzdC1yZW1vdmUtaGlnaGxpZ2h0XCIgc3R5bGU9XCJcbiAgICAgICAgYmFja2dyb3VuZDogI2VmNDQ0NDtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDZweCAxMnB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgXCI+UmVtb3ZlIEhpZ2hsaWdodDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICBgO1xuICBcbiAgLy8gUG9zaXRpb24gdGhlIHRvb2x0aXAgbmVhciB0aGUgaGlnaGxpZ2h0XG4gIGNvbnN0IGhpZ2hsaWdodEVsZW1lbnQgPSBwYWdlSGlnaGxpZ2h0cy5nZXQoaGlnaGxpZ2h0SWQpO1xuICBpZiAoaGlnaGxpZ2h0RWxlbWVudCkge1xuICAgIGNvbnN0IHJlY3QgPSBoaWdobGlnaHRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHRvb2x0aXAuc3R5bGUubGVmdCA9IGAke3JlY3QubGVmdH1weGA7XG4gICAgdG9vbHRpcC5zdHlsZS50b3AgPSBgJHtyZWN0LmJvdHRvbSArIDEwfXB4YDtcbiAgfVxuICBcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b29sdGlwKTtcbiAgXG4gIC8vIEFkZCByZW1vdmUgZnVuY3Rpb25hbGl0eVxuICBjb25zdCByZW1vdmVCdXR0b24gPSB0b29sdGlwLnF1ZXJ5U2VsZWN0b3IoJyNuZXN0LXJlbW92ZS1oaWdobGlnaHQnKTtcbiAgaWYgKHJlbW92ZUJ1dHRvbikge1xuICAgIHJlbW92ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHJlbW92ZUhpZ2hsaWdodChoaWdobGlnaHRJZCk7XG4gICAgICBoaWRlSGlnaGxpZ2h0VG9vbHRpcCgpO1xuICAgICAgXG4gICAgICAvLyBOb3RpZnkgYmFja2dyb3VuZCBzY3JpcHQgdG8gcmVtb3ZlIGZyb20gc3RvcmFnZVxuICAgICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgICBhY3Rpb246ICdyZW1vdmVIaWdobGlnaHRGcm9tU3RvcmFnZScsXG4gICAgICAgIGhpZ2hsaWdodElkLFxuICAgICAgICB1cmw6IHdpbmRvdy5sb2NhdGlvbi5ocmVmXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBcbiAgLy8gSGlkZSB0b29sdGlwIHdoZW4gY2xpY2tpbmcgb3V0c2lkZVxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhpZGVIaWdobGlnaHRUb29sdGlwLCB7IG9uY2U6IHRydWUgfSk7XG4gIH0sIDEwMCk7XG59XG5cbmZ1bmN0aW9uIGhpZGVIaWdobGlnaHRUb29sdGlwKCkge1xuICBjb25zdCB0b29sdGlwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25lc3QtaGlnaGxpZ2h0LXRvb2x0aXAnKTtcbiAgaWYgKHRvb2x0aXAgJiYgdG9vbHRpcC5wYXJlbnROb2RlKSB7XG4gICAgdG9vbHRpcC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRvb2x0aXApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrRm9yRXhpc3RpbmdIaWdobGlnaHRzKCkge1xuICBjb25zb2xlLmxvZygnTmVzdDogQ2hlY2tpbmcgZm9yIGV4aXN0aW5nIGhpZ2hsaWdodHMgb24gcGFnZScpO1xuICBcbiAgLy8gR2V0IHRoZSBjdXJyZW50IHBhZ2UgVVJMXG4gIGNvbnN0IGN1cnJlbnRVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgXG4gIC8vIFJlcXVlc3QgaGlnaGxpZ2h0cyBmb3IgdGhpcyBwYWdlIGZyb20gdGhlIGJhY2tncm91bmQgc2NyaXB0XG4gIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICBhY3Rpb246ICdnZXRIaWdobGlnaHRzRm9yUGFnZScsXG4gICAgdXJsOiBjdXJyZW50VXJsXG4gIH0sIChyZXNwb25zZSkgPT4ge1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5oaWdobGlnaHRzICYmIHJlc3BvbnNlLmhpZ2hsaWdodHMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc29sZS5sb2coJ05lc3Q6IEZvdW5kJywgcmVzcG9uc2UuaGlnaGxpZ2h0cy5sZW5ndGgsICdoaWdobGlnaHRzIHRvIHJlc3RvcmUnKTtcbiAgICAgIHJlc3RvcmVIaWdobGlnaHRzKHJlc3BvbnNlLmhpZ2hsaWdodHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygnTmVzdDogTm8gaGlnaGxpZ2h0cyBmb3VuZCBmb3IgdGhpcyBwYWdlJyk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gcmVzdG9yZUhpZ2hsaWdodHMoaGlnaGxpZ2h0czogYW55W10pIHtcbiAgY29uc29sZS5sb2coJ05lc3Q6IFJlc3RvcmluZyBoaWdobGlnaHRzOicsIGhpZ2hsaWdodHMpO1xuICBcbiAgaGlnaGxpZ2h0cy5mb3JFYWNoKGhpZ2hsaWdodCA9PiB7XG4gICAgaWYgKGhpZ2hsaWdodC5wb3NpdGlvbiAmJiBoaWdobGlnaHQuc2VsZWN0ZWRUZXh0KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUcnkgdG8gZmluZCB0aGUgdGV4dCBpbiB0aGUgcGFnZVxuICAgICAgICBjb25zdCB0ZXh0Tm9kZXMgPSBmaW5kVGV4dE5vZGVzKGRvY3VtZW50LmJvZHksIGhpZ2hsaWdodC5zZWxlY3RlZFRleHQpO1xuICAgICAgICBcbiAgICAgICAgaWYgKHRleHROb2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgLy8gVXNlIHRoZSBmaXJzdCBvY2N1cnJlbmNlIGZvdW5kXG4gICAgICAgICAgY29uc3QgdGV4dE5vZGUgPSB0ZXh0Tm9kZXNbMF07XG4gICAgICAgICAgY29uc3QgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEZpbmQgdGhlIGV4YWN0IHBvc2l0aW9uIHdpdGhpbiB0aGUgdGV4dCBub2RlXG4gICAgICAgICAgY29uc3Qgc3RhcnRPZmZzZXQgPSB0ZXh0Tm9kZS50ZXh0Q29udGVudD8uaW5kZXhPZihoaWdobGlnaHQuc2VsZWN0ZWRUZXh0KSB8fCAwO1xuICAgICAgICAgIGNvbnN0IGVuZE9mZnNldCA9IHN0YXJ0T2Zmc2V0ICsgaGlnaGxpZ2h0LnNlbGVjdGVkVGV4dC5sZW5ndGg7XG4gICAgICAgICAgXG4gICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQodGV4dE5vZGUsIHN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICByYW5nZS5zZXRFbmQodGV4dE5vZGUsIGVuZE9mZnNldCk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQ3JlYXRlIHRoZSB2aXN1YWwgaGlnaGxpZ2h0XG4gICAgICAgICAgY3JlYXRlVmlzdWFsSGlnaGxpZ2h0KHJhbmdlLCBoaWdobGlnaHQuaWQpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdOZXN0OiBSZXN0b3JlZCBoaWdobGlnaHQ6JywgaGlnaGxpZ2h0LmlkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnTmVzdDogQ291bGQgbm90IGZpbmQgdGV4dCBmb3IgaGlnaGxpZ2h0OicsIGhpZ2hsaWdodC5pZCk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ05lc3Q6IEZhaWxlZCB0byByZXN0b3JlIGhpZ2hsaWdodDonLCBoaWdobGlnaHQuaWQsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBmaW5kVGV4dE5vZGVzKGVsZW1lbnQ6IE5vZGUsIHNlYXJjaFRleHQ6IHN0cmluZyk6IFRleHRbXSB7XG4gIGNvbnN0IHRleHROb2RlczogVGV4dFtdID0gW107XG4gIFxuICBmdW5jdGlvbiB0cmF2ZXJzZShub2RlOiBOb2RlKSB7XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICBjb25zdCB0ZXh0ID0gbm9kZS50ZXh0Q29udGVudCB8fCAnJztcbiAgICAgIGlmICh0ZXh0LmluY2x1ZGVzKHNlYXJjaFRleHQpKSB7XG4gICAgICAgIHRleHROb2Rlcy5wdXNoKG5vZGUgYXMgVGV4dCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZS5jaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRyYXZlcnNlKG5vZGUuY2hpbGROb2Rlc1tpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIFxuICB0cmF2ZXJzZShlbGVtZW50KTtcbiAgcmV0dXJuIHRleHROb2Rlcztcbn1cblxuZnVuY3Rpb24gdG9nZ2xlSGlnaGxpZ2h0cyhlbmFibGVkOiBib29sZWFuKSB7XG4gIGhpZ2hsaWdodHNFbmFibGVkID0gZW5hYmxlZDtcbiAgXG4gIGlmIChlbmFibGVkKSB7XG4gICAgLy8gU2hvdyBhbGwgaGlnaGxpZ2h0c1xuICAgIHBhZ2VIaWdobGlnaHRzLmZvckVhY2goKGVsZW1lbnQsIGlkKSA9PiB7XG4gICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lJztcbiAgICAgIGVsZW1lbnQuc3R5bGUub3BhY2l0eSA9ICcxJztcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZygnTmVzdDogSGlnaGxpZ2h0cyBlbmFibGVkJyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gSGlkZSBhbGwgaGlnaGxpZ2h0c1xuICAgIHBhZ2VIaWdobGlnaHRzLmZvckVhY2goKGVsZW1lbnQsIGlkKSA9PiB7XG4gICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICBlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAnMCc7XG4gICAgfSk7XG4gICAgY29uc29sZS5sb2coJ05lc3Q6IEhpZ2hsaWdodHMgZGlzYWJsZWQnKTtcbiAgfVxufVxuXG4vLyBBZGQgZ2xvYmFsIHN0eWxlcyBmb3IgaGlnaGxpZ2h0c1xuZnVuY3Rpb24gYWRkSGlnaGxpZ2h0U3R5bGVzKCkge1xuICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25lc3QtaGlnaGxpZ2h0LXN0eWxlcycpKSB7XG4gICAgcmV0dXJuOyAvLyBTdHlsZXMgYWxyZWFkeSBhZGRlZFxuICB9XG4gIFxuICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHN0eWxlLmlkID0gJ25lc3QtaGlnaGxpZ2h0LXN0eWxlcyc7XG4gIHN0eWxlLnRleHRDb250ZW50ID0gYFxuICAgIHNwYW4ubmVzdC1oaWdobGlnaHRbZGF0YS1uZXN0LWhpZ2hsaWdodC1pZF0ge1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgI2ZlZjA4YSAwJSwgI2ZkZTA0NyAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgY29sb3I6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgICAgIHBhZGRpbmc6IDJweCAwICFpbXBvcnRhbnQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAzcHggIWltcG9ydGFudDtcbiAgICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMSkgIWltcG9ydGFudDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UgIWltcG9ydGFudDtcbiAgICAgIGN1cnNvcjogcG9pbnRlciAhaW1wb3J0YW50O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUgIWltcG9ydGFudDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICB6LWluZGV4OiAyMTQ3NDgzNjQ3ICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIHNwYW4ubmVzdC1oaWdobGlnaHRbZGF0YS1uZXN0LWhpZ2hsaWdodC1pZF06aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEyMGRlZywgI2ZkZTA0NyAwJSwgI2ZhY2MxNSAxMDAlKSAhaW1wb3J0YW50O1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNSkgIWltcG9ydGFudDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICBzcGFuLm5lc3QtaGlnaGxpZ2h0W2RhdGEtbmVzdC1oaWdobGlnaHQtaWRdOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2U7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB9XG4gICAgc3Bhbi5uZXN0LWhpZ2hsaWdodFtkYXRhLW5lc3QtaGlnaGxpZ2h0LWlkXTpob3Zlcjo6YmVmb3JlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICAgICNuZXN0LWhpZ2hsaWdodC10b29sdGlwIHtcbiAgICAgIGFuaW1hdGlvbjogZmFkZUluIDAuMnMgZWFzZS1vdXQ7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgZmFkZUluIHtcbiAgICAgIGZyb20geyBvcGFjaXR5OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwcHgpOyB9XG4gICAgICB0byB7IG9wYWNpdHk6IDE7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuICAgIH1cbiAgYDtcbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbi8vIEluaXRpYWxpemUgaGlnaGxpZ2h0IHN0eWxlcyB3aGVuIHBhZ2UgbG9hZHNcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gIGFkZEhpZ2hsaWdodFN0eWxlcygpO1xufSk7XG5cbi8vIEFsc28gYWRkIHN0eWxlcyB3aGVuIHBhZ2UgaXMgZnVsbHkgbG9hZGVkXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgYWRkSGlnaGxpZ2h0U3R5bGVzKCk7XG59KTsgIl0sIm5hbWVzIjpbImNyZWF0ZUpvYiIsImxvZyIsImdldElkIiwic2NoZWR1bGVyQ291bnRlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJpZCIsIndvcmtlcnMiLCJydW5uaW5nV29ya2VycyIsImpvYlF1ZXVlIiwiZ2V0TnVtV29ya2VycyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJkZXF1ZXVlIiwid0lkcyIsImkiLCJxdWV1ZSIsImFjdGlvbiIsInBheWxvYWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImpvYiIsInB1c2giLCJhc3luYyIsInciLCJzaGlmdCIsImFwcGx5IiwidGhpcyIsImVyciIsImFkZFdvcmtlciIsImFkZEpvYiIsIkVycm9yIiwidGVybWluYXRlIiwiZm9yRWFjaCIsIndpZCIsImdldFF1ZXVlTGVuIiwiT1NEX09OTFkiLCJBVVRPX09TRCIsIkFVVE9fT05MWSIsIkFVVE8iLCJTSU5HTEVfQ09MVU1OIiwiU0lOR0xFX0JMT0NLX1ZFUlRfVEVYVCIsIlNJTkdMRV9CTE9DSyIsIlNJTkdMRV9MSU5FIiwiU0lOR0xFX1dPUkQiLCJDSVJDTEVfV09SRCIsIlNJTkdMRV9DSEFSIiwiU1BBUlNFX1RFWFQiLCJTUEFSU0VfVEVYVF9PU0QiLCJSQVdfTElORSIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImVycm9yIiwiZiIsImsiLCJTeW1ib2wiLCJmb3IiLCJsIiwibSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwibiIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50T3duZXIiLCJwIiwia2V5IiwicmVmIiwiX19zZWxmIiwiX19zb3VyY2UiLCJxIiwiYyIsImEiLCJnIiwiYiIsImQiLCJlIiwiaCIsImNhbGwiLCJkZWZhdWx0UHJvcHMiLCIkJHR5cGVvZiIsInR5cGUiLCJwcm9wcyIsIl9vd25lciIsImN1cnJlbnQiLCJGcmFnbWVudCIsImpzeCIsImpzeHMiLCJwcmVmaXgiLCJjbnQiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzbGljZSIsInZlcnNpb24iLCJkZWZhdWx0T3B0aW9ucyIsInMiLCJ3b3JrZXJQYXRoIiwicHJvY2VzcyIsImVudiIsIlRFU1NfRU5WIiwiVVJMIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiY29yZVBhdGgiLCJyZXNvbHZlUGF0aHMiLCJjaXJjdWxhcml6ZSIsImRlZmF1bHRPRU0iLCJzcGF3bldvcmtlciIsInRlcm1pbmF0ZVdvcmtlciIsIm9uTWVzc2FnZSIsImxvYWRJbWFnZSIsInNlbmQiLCJ3b3JrZXJDb3VudGVyIiwiX29wdGlvbnMiLCJsb2dnZXIiLCJlcnJvckhhbmRsZXIiLCJvcHRpb25zIiwicmVzb2x2ZXMiLCJyZWplY3RzIiwid29ya2VyUmVzUmVqZWN0Iiwid29ya2VyUmVzUmVzb2x2ZSIsIndvcmtlclJlcyIsIndvcmtlciIsIm9uZXJyb3IiLCJldmVudCIsIm1lc3NhZ2UiLCJzZXRSZXNvbHZlIiwicmVzIiwic2V0UmVqZWN0IiwicmVqIiwic3RhcnRKb2IiLCJqb2JJZCIsIndvcmtlcklkIiwic3RhdHVzIiwiZGF0YSIsIkFycmF5IiwiZnJvbSIsInVzZXJKb2JJZCIsInJlc29sdmVPYmoiLCJsb2FkIiwid2FybiIsIndyaXRlVGV4dCIsInBhdGgiLCJ0ZXh0IiwibWV0aG9kIiwiYXJncyIsInJlYWRUZXh0IiwiZW5jb2RpbmciLCJyZW1vdmVGaWxlIiwiRlMiLCJsb2FkTGFuZ3VhZ2UiLCJsYW5ncyIsImluaXRpYWxpemUiLCJvZW0iLCJjb25maWciLCJzZXRQYXJhbWV0ZXJzIiwicGFyYW1zIiwicmVjb2duaXplIiwiaW1hZ2UiLCJvcHRzIiwib3V0cHV0IiwiYmxvY2tzIiwiaG9jciIsInRzdiIsImdldFBERiIsInRpdGxlIiwidGV4dG9ubHkiLCJkZXRlY3QiLCJ0aGVuIiwiY2F0Y2giLCJhYSIsImNhIiwiYXJndW1lbnRzIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZGEiLCJTZXQiLCJlYSIsImZhIiwiaGEiLCJhZGQiLCJpYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImphIiwia2EiLCJsYSIsIm1hIiwidiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwieiIsInNwbGl0IiwidG9Mb3dlckNhc2UiLCJyYSIsInNhIiwidG9VcHBlckNhc2UiLCJ0YSIsInBhIiwiaXNOYU4iLCJxYSIsInRlc3QiLCJvYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwicmVwbGFjZSIsInhsaW5rSHJlZiIsInVhIiwidmEiLCJ3YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIml0ZXJhdG9yIiwiS2EiLCJMYSIsIkEiLCJhc3NpZ24iLCJNYSIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwiTmEiLCJPYSIsInByZXBhcmVTdGFja1RyYWNlIiwiZGVmaW5lUHJvcGVydHkiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiZGlzcGxheU5hbWUiLCJpbmNsdWRlcyIsIm5hbWUiLCJQYSIsInRhZyIsInJlbmRlciIsIlFhIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiUmEiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJjb25zdHJ1Y3RvciIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJ2YWx1ZSIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJvd25lckRvY3VtZW50IiwiZWIiLCJpc0FycmF5IiwiZmIiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZ2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNoaWxkcmVuIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJvYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicGIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImFzcGVjdFJhdGlvIiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicWIiLCJyYiIsInNiIiwic3R5bGUiLCJpbmRleE9mIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ0YiIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJzb3VyY2UiLCJ0cmFjayIsIndiciIsInViIiwidmIiLCJpcyIsIndiIiwieGIiLCJ0YXJnZXQiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJOYiIsIm9uRXJyb3IiLCJPYiIsIlBiIiwiUWIiLCJSYiIsIlNiIiwiVGIiLCJWYiIsImFsdGVybmF0ZSIsInJldHVybiIsImZsYWdzIiwiV2IiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsIlhiIiwiWmIiLCJjaGlsZCIsInNpYmxpbmciLCJZYiIsIiRiIiwiYWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiYmMiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsImNjIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJkYyIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIkIiLCJ1bnN0YWJsZV9ub3ciLCJlYyIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiZmMiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsImdjIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJoYyIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiaWMiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsImpjIiwidW5zdGFibGVfSWRsZVByaW9yaXR5Iiwia2MiLCJsYyIsIm9jIiwiY2x6MzIiLCJwYyIsInFjIiwiTE4yIiwicmMiLCJzYyIsInRjIiwidWMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwidmMiLCJ4YyIsInljIiwiemMiLCJBYyIsImV2ZW50VGltZXMiLCJDYyIsIkMiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJNYXAiLCJQYyIsIlFjIiwiUmMiLCJTYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIlRjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlZjIiwiV2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJYYyIsIlljIiwiZGlzcGF0Y2hFdmVudCIsIlpjIiwiJGMiLCJhZCIsImJkIiwiY2QiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImRkIiwiZWQiLCJ0cmFuc2l0aW9uIiwiZmQiLCJnZCIsImhkIiwiVWMiLCJzdG9wUHJvcGFnYXRpb24iLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSWQiLCJjbGlwYm9hcmREYXRhIiwiSmQiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJRZCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNvZGUiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIllkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsInVybCIsIndlZWsiLCJtZSIsIm5lIiwib2UiLCJsaXN0ZW5lcnMiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIm5vZGUiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIkxlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk1lIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiTmUiLCJjb250ZW50RWRpdGFibGUiLCJPZSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJkb2N1bWVudEVsZW1lbnQiLCJzdGFydCIsImVuZCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwibWluIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJleHRlbmQiLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwiZWxlbWVudCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZm9jdXMiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsIldlIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiWGUiLCJZZSIsIlplIiwiYW5pbWF0aW9uIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsImVmIiwiZmYiLCJnZiIsImhmIiwibGYiLCJtZiIsImNvbmNhdCIsIm5mIiwiVWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRCIsIm9mIiwiaGFzIiwicGYiLCJxZiIsInJmIiwic2YiLCJiaW5kIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJ0IiwiSiIsIngiLCJ1IiwiRiIsInRmIiwidWYiLCJwYXJlbnRXaW5kb3ciLCJ2ZiIsIndmIiwibmEiLCJ4YSIsIiRhIiwiYmEiLCJqZSIsImNoYXIiLCJrZSIsInVuc2hpZnQiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJEZiIsIkVmIiwiX19odG1sIiwiRmYiLCJzZXRUaW1lb3V0IiwiR2YiLCJjbGVhclRpbWVvdXQiLCJIZiIsIkpmIiwicXVldWVNaWNyb3Rhc2siLCJJZiIsIktmIiwiTGYiLCJNZiIsInByZXZpb3VzU2libGluZyIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJFIiwiRyIsIlZmIiwiSCIsIldmIiwiWGYiLCJZZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIlpmIiwiY2hpbGRDb250ZXh0VHlwZXMiLCIkZiIsImFnIiwiYmciLCJnZXRDaGlsZENvbnRleHQiLCJjZyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJ4ZyIsInlnIiwiSSIsInpnIiwiQWciLCJCZyIsImVsZW1lbnRUeXBlIiwiZGVsZXRpb25zIiwiQ2ciLCJwZW5kaW5nUHJvcHMiLCJvdmVyZmxvdyIsInRyZWVDb250ZXh0IiwicmV0cnlMYW5lIiwiRGciLCJtb2RlIiwiRWciLCJGZyIsIkdnIiwibWVtb2l6ZWRQcm9wcyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJfc3RyaW5nUmVmIiwicmVmcyIsIk1nIiwiam9pbiIsIk5nIiwiT2ciLCJpbmRleCIsIlBnIiwiUWciLCJSZyIsImltcGxlbWVudGF0aW9uIiwiU2ciLCJUZyIsInIiLCJ5IiwibmV4dCIsImRvbmUiLCJVZyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiX2N1cnJlbnRWYWx1ZSIsImJoIiwiY2hpbGRMYW5lcyIsImNoIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJkaCIsImVoIiwiY29udGV4dCIsIm1lbW9pemVkVmFsdWUiLCJmaCIsImdoIiwiaGgiLCJpbnRlcmxlYXZlZCIsImloIiwiamgiLCJraCIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsImxoIiwibWgiLCJldmVudFRpbWUiLCJsYW5lIiwiY2FsbGJhY2siLCJuaCIsIksiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJ4aCIsInloIiwidGFnTmFtZSIsInpoIiwiQWgiLCJCaCIsIkwiLCJDaCIsInJldmVhbE9yZGVyIiwiRGgiLCJFaCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwiRmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiR2giLCJIaCIsIk0iLCJOIiwiTyIsIkloIiwiSmgiLCJLaCIsIkxoIiwiUCIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJiYXNlUXVldWUiLCJVaCIsIlZoIiwiV2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiaGFzRWFnZXJTdGF0ZSIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImdldFNuYXBzaG90IiwiYmkiLCJjaSIsIlEiLCJkaSIsImxhc3RFZmZlY3QiLCJzdG9yZXMiLCJlaSIsImZpIiwiZ2kiLCJoaSIsImlpIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJqaSIsImtpIiwibGkiLCJtaSIsIm5pIiwib2kiLCJwaSIsInFpIiwicmkiLCJzaSIsInRpIiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiQWkiLCJSIiwiQmkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VJbnNlcnRpb25FZmZlY3QiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZVN5bmNFeHRlcm5hbFN0b3JlIiwidXNlSWQiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJpZGVudGlmaWVyUHJlZml4IiwiQ2kiLCJEaSIsIkVpIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkZpIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJHaSIsImNvbnRleHRUeXBlIiwic3RhdGUiLCJ1cGRhdGVyIiwiSGkiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJJaSIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiSmkiLCJkaWdlc3QiLCJLaSIsIkxpIiwiTWkiLCJXZWFrTWFwIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJjb21wb25lbnREaWRDYXRjaCIsIlJpIiwiY29tcG9uZW50U3RhY2siLCJTaSIsInBpbmdDYWNoZSIsIlRpIiwiVWkiLCJWaSIsIldpIiwiWGkiLCJZaSIsIlppIiwiJGkiLCJhaiIsImNvbXBhcmUiLCJiaiIsImNqIiwiZGoiLCJiYXNlTGFuZXMiLCJjYWNoZVBvb2wiLCJ0cmFuc2l0aW9ucyIsImVqIiwiZmoiLCJnaiIsImhqIiwiaWoiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJqaiIsImtqIiwicGVuZGluZ0NvbnRleHQiLCJsaiIsInpqIiwiQWoiLCJCaiIsIkNqIiwibWoiLCJuaiIsIm9qIiwiZmFsbGJhY2siLCJwaiIsInFqIiwic2oiLCJkYXRhc2V0IiwiZGdzdCIsInRqIiwidWoiLCJfcmVhY3RSZXRyeSIsInJqIiwic3VidHJlZUZsYWdzIiwidmoiLCJ3aiIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsInhqIiwiRGoiLCJTIiwiRWoiLCJGaiIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJhdXRvRm9jdXMiLCJjcmVhdGVUZXh0Tm9kZSIsIlQiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIlUiLCJLaiIsIldlYWtTZXQiLCJWIiwiTGoiLCJXIiwiTWoiLCJOaiIsIlBqIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJVaiIsIlZqIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIldqIiwiWCIsIlhqIiwiWWoiLCJaaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJhayIsImJrIiwiY2siLCJkayIsImVrIiwiaXNIaWRkZW4iLCJmayIsImdrIiwiZGlzcGxheSIsImhrIiwiaWsiLCJqayIsImtrIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJzcmMiLCJWayIsImxrIiwiY2VpbCIsIm1rIiwibmsiLCJvayIsIlkiLCJaIiwicGsiLCJxayIsInJrIiwic2siLCJ0ayIsIkluZmluaXR5IiwidWsiLCJ2ayIsIndrIiwieGsiLCJ5ayIsInprIiwiQWsiLCJCayIsIkNrIiwiRGsiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJleHBpcmVkTGFuZXMiLCJ3YyIsImNhbGxiYWNrUHJpb3JpdHkiLCJpZyIsIkVrIiwiRmsiLCJHayIsIkhrIiwiSWsiLCJKayIsIktrIiwiTGsiLCJNayIsIk5rIiwiT2siLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiUGsiLCJ0aW1lb3V0SGFuZGxlIiwiUWsiLCJSayIsIlNrIiwiVGsiLCJVayIsIm11dGFibGVSZWFkTGFuZXMiLCJCYyIsIk9qIiwib25Db21taXRGaWJlclJvb3QiLCJtYyIsIm9uUmVjb3ZlcmFibGVFcnJvciIsIldrIiwib25Qb3N0Q29tbWl0RmliZXJSb290IiwiWGsiLCJZayIsIiRrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImFsIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImJsIiwiY2FjaGUiLCJwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzIiwiZGwiLCJlbCIsImZsIiwiZ2wiLCJobCIsImlsIiwieWoiLCJaayIsImtsIiwicmVwb3J0RXJyb3IiLCJsbCIsIl9pbnRlcm5hbFJvb3QiLCJtbCIsIm5sIiwib2wiLCJwbCIsInJsIiwicWwiLCJ1bm1vdW50IiwidW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb24iLCJzcGxpY2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJzbCIsInVzaW5nQ2xpZW50RW50cnlQb2ludCIsIkV2ZW50cyIsInRsIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInVsIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0RXJyb3JIYW5kbGVyIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJyZWNvbmNpbGVyVmVyc2lvbiIsInZsIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJjbCIsImNyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9zdHJpY3RNb2RlIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJoeWRyYXRlIiwiaHlkcmF0ZVJvb3QiLCJoeWRyYXRlZFNvdXJjZXMiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsIkFGUiIsIkFNSCIsIkFSQSIsIkFTTSIsIkFaRSIsIkFaRV9DWVJMIiwiQkVMIiwiQkVOIiwiQk9EIiwiQk9TIiwiQlVMIiwiQ0FUIiwiQ0VCIiwiQ0VTIiwiQ0hJX1NJTSIsIkNISV9UUkEiLCJDSFIiLCJDWU0iLCJEQU4iLCJERVUiLCJEWk8iLCJFTEwiLCJFTkciLCJFTk0iLCJFUE8iLCJFU1QiLCJFVVMiLCJGQVMiLCJGSU4iLCJGUkEiLCJGUksiLCJGUk0iLCJHTEUiLCJHTEciLCJHUkMiLCJHVUoiLCJIQVQiLCJIRUIiLCJISU4iLCJIUlYiLCJIVU4iLCJJS1UiLCJJTkQiLCJJU0wiLCJJVEEiLCJJVEFfT0xEIiwiSkFWIiwiSlBOIiwiS0FOIiwiS0FUIiwiS0FUX09MRCIsIktBWiIsIktITSIsIktJUiIsIktPUiIsIktVUiIsIkxBTyIsIkxBVCIsIkxBViIsIkxJVCIsIk1BTCIsIk1BUiIsIk1LRCIsIk1MVCIsIk1TQSIsIk1ZQSIsIk5FUCIsIk5MRCIsIk5PUiIsIk9SSSIsIlBBTiIsIlBPTCIsIlBPUiIsIlBVUyIsIlJPTiIsIlJVUyIsIlNBTiIsIlNJTiIsIlNMSyIsIlNMViIsIlNQQSIsIlNQQV9PTEQiLCJTUUkiLCJTUlAiLCJTUlBfTEFUTiIsIlNXQSIsIlNXRSIsIlNZUiIsIlRBTSIsIlRFTCIsIlRHSyIsIlRHTCIsIlRIQSIsIlRJUiIsIlRVUiIsIlVJRyIsIlVLUiIsIlVSRCIsIlVaQiIsIlVaQl9DWVJMIiwiVklFIiwiWUlEIiwiaXNFbGVjdHJvbiIsIldvcmtlckdsb2JhbFNjb3BlIiwibGFuZ1BhdGgiLCJ3b3JrZXJCbG9iVVJMIiwicGFnZSIsInBhcmFncmFwaHMiLCJsaW5lcyIsIndvcmRzIiwic3ltYm9scyIsImJsb2NrIiwicGFyYWdyYXBoIiwibGluZSIsIndvcmQiLCJzeW0iLCJ2ZXJzaW9ucyIsImVsZWN0cm9uIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiY3JlYXRlU2NoZWR1bGVyIiwiY3JlYXRlV29ya2VyIiwiVGVzc2VyYWN0IiwibGFuZ3VhZ2VzIiwiT0VNIiwiUFNNIiwic2V0TG9nZ2luZyIsInBhY2tldCIsInBvc3RNZXNzYWdlIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsImVzY2FwZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiZGVmYXVsdCIsIkNoaWxkcmVuIiwibWFwIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIkNvbXBvbmVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImFjdCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfZGVmYXVsdFZhbHVlIiwiX2dsb2JhbE5hbWUiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIm1lbW8iLCJzdGFydFRyYW5zaXRpb24iLCJ1bnN0YWJsZV9hY3QiLCJoYW5kbGVyIiwib25tZXNzYWdlIiwicmVzb2x2ZVVSTCIsInJ1bnRpbWUiLCJ1bmRlZmluZWQiLCJPcCIsImhhc093biIsIm9iaiIsImRlc2MiLCIkU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJ3cml0YWJsZSIsIndyYXAiLCJpbm5lckZuIiwib3V0ZXJGbiIsInNlbGYiLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsImZuIiwiYXJnIiwiR2VuU3RhdGVTdXNwZW5kZWRTdGFydCIsIkdlblN0YXRlU3VzcGVuZGVkWWllbGQiLCJHZW5TdGF0ZUV4ZWN1dGluZyIsIkdlblN0YXRlQ29tcGxldGVkIiwiQ29udGludWVTZW50aW5lbCIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJJdGVyYXRvclByb3RvdHlwZSIsImdldFByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJOYXRpdmVJdGVyYXRvclByb3RvdHlwZSIsInZhbHVlcyIsIkdwIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiX2ludm9rZSIsIkFzeW5jSXRlcmF0b3IiLCJQcm9taXNlSW1wbCIsImludm9rZSIsInJlY29yZCIsInJlc3VsdCIsIl9fYXdhaXQiLCJ1bndyYXBwZWQiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsImRvbmVSZXN1bHQiLCJkZWxlZ2F0ZSIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwibWV0aG9kTmFtZSIsIlR5cGVFcnJvciIsImluZm8iLCJyZXN1bHROYW1lIiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJlbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpdGVyYWJsZSIsIml0ZXJhdG9yTWV0aG9kIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsIml0ZXIiLCJ2YWwiLCJvYmplY3QiLCJyZXZlcnNlIiwicG9wIiwic2tpcFRlbXBSZXNldCIsInByZXYiLCJzdG9wIiwicm9vdFJlY29yZCIsInJ2YWwiLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImZpbmlzaCIsInRocm93biIsImRlbGVnYXRlWWllbGQiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJhY2NpZGVudGFsU3RyaWN0TW9kZSIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsIkJsb2IiLCJibG9iIiwiV29ya2VyIiwiY3JlYXRlT2JqZWN0VVJMIiwic29ydEluZGV4IiwicGVyZm9ybWFuY2UiLCJzZXRJbW1lZGlhdGUiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJzY2hlZHVsaW5nIiwiaXNJbnB1dFBlbmRpbmciLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiZmxvb3IiLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiZmluYWxseSIsIkRFRkFVTFQiLCJsb2dnaW5nIiwiX2xvZ2dpbmciLCJqb2JDb3VudGVyIiwiX2lkIiwiVEVTU0VSQUNUX09OTFkiLCJMU1RNX09OTFkiLCJURVNTRVJBQ1RfTFNUTV9DT01CSU5FRCIsInJlYWRGcm9tQmxvYk9yRmlsZSIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkIiwicmVhZEFzQXJyYXlCdWZmZXIiLCJhdG9iIiwiY2hhckNvZGVBdCIsInJlc3AiLCJmZXRjaCIsImFycmF5QnVmZmVyIiwiSFRNTEVsZW1lbnQiLCJwb3N0ZXIiLCJ0b0Jsb2IiLCJPZmZzY3JlZW5DYW52YXMiLCJjb252ZXJ0VG9CbG9iIiwiRmlsZSIsIlVpbnQ4QXJyYXkiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZGVmYXVsdEF0dHJpYnV0ZXMiLCJ4bWxucyIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwiY3JlYXRlTHVjaWRlSWNvbiIsImljb25OYW1lIiwiaWNvbk5vZGUiLCJhYnNvbHV0ZVN0cm9rZVdpZHRoIiwiY2xhc3NOYW1lIiwicmVzdCIsIk51bWJlciIsInN0cmluZyIsImF0dHJzIiwiU3BhcmtsZXMiLCJNYXhpbWl6ZTIiLCJwb2ludHMiLCJ4MSIsIngyIiwieTEiLCJ5MiIsIk1pbmltaXplMiIsIlJlZnJlc2hDdyIsIkNvcHkiLCJyeCIsInJ5IiwiU2VuZCIsIm8iLCJfcmVnZW5lcmF0b3JEZWZpbmUyIiwiX3JlZ2VuZXJhdG9yIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJfaXRlcmFibGVUb0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlU3ByZWFkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiX3NsaWNlZFRvQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfbm9uSXRlcmFibGVSZXN0IiwiX3JlZiIsImlzVmlzaWJsZSIsIm9uQ2xvc2UiLCJfcmVmJHBhZ2VUaXRsZSIsInBhZ2VDb250ZW50IiwicGFnZVRpdGxlIiwiX3VzZVN0YXRlMiIsInBhZ2VVcmwiLCJpc01pbmltaXplZCIsInNldElzTWluaW1pemVkIiwiX3VzZVN0YXRlNCIsIm1lc3NhZ2VzIiwic2V0TWVzc2FnZXMiLCJfdXNlU3RhdGU2IiwiaW5wdXRWYWx1ZSIsInNldElucHV0VmFsdWUiLCJfdXNlU3RhdGU4IiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwiX3VzZVN0YXRlMCIsInNlbGVjdGVkUHJvbXB0Iiwic2V0U2VsZWN0ZWRQcm9tcHQiLCJtZXNzYWdlc0VuZFJlZiIsInNjcm9sbEludG9WaWV3IiwiYmVoYXZpb3IiLCJoYW5kbGVTZW5kTWVzc2FnZSIsIl9yZWYyIiwiX2NhbGxlZSIsInVzZXJNZXNzYWdlIiwiYWlSZXNwb25zZSIsImVycm9yTWVzc2FnZSIsIl90IiwiY29udGVudCIsInRpbWVzdGFtcCIsIl9uZXh0IiwiX3Rocm93IiwiX3giLCJfanN4cyIsIl9qc3giLCJkZXNjcmlwdGlvbiIsInByb21wdCIsImljb24iLCJoYW5kbGVRdWlja1Byb21wdCIsImNsaXBib2FyZCIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJvbkNoYW5nZSIsIm9uS2V5UHJlc3MiLCJwbGFjZWhvbGRlciIsIlBsdXMiLCJQYWxldHRlIiwiY3giLCJjeSIsIlBlbkxpbmUiLCJUcmFzaDIiLCJNb3ZlIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJvblRvZ2dsZSIsIm5vdGVzIiwic2V0Tm90ZXMiLCJpc0NyZWF0aW5nIiwic2V0SXNDcmVhdGluZyIsImVkaXRpbmdOb3RlIiwic2V0RWRpdGluZ05vdGUiLCJkcmFnZ2VkTm90ZSIsInNldERyYWdnZWROb3RlIiwiZHJhZ09mZnNldCIsInNldERyYWdPZmZzZXQiLCJfdXNlU3RhdGUxMCIsInNob3dDb2xvclBpY2tlciIsInNldFNob3dDb2xvclBpY2tlciIsIm5vdGVDb2xvcnMiLCJib3JkZXIiLCJjdXJyZW50VXJsIiwiY3VycmVudERvbWFpbiIsImhvc3RuYW1lIiwibG9hZE5vdGVzIiwiYWxsTm90ZXMiLCJ1cmxOb3RlcyIsImNocm9tZSIsInN0b3JhZ2UiLCJsb2NhbCIsIm5lc3Rfc3RpY2t5X25vdGVzIiwiZmlsdGVyIiwibm90ZSIsImRvbWFpbiIsInNhdmVOb3RlcyIsIl9yZWYzIiwiX2NhbGxlZTIiLCJ1cGRhdGVkTm90ZXMiLCJvdGhlck5vdGVzIiwibmV3QWxsTm90ZXMiLCJfdDIiLCJfY29udGV4dDIiLCJ1cGRhdGVOb3RlIiwidXBkYXRlcyIsIl9vYmplY3RTcHJlYWQiLCJ1cGRhdGVkQXQiLCJoYW5kbGVNb3VzZU1vdmUiLCJuZXdYIiwibmV3WSIsInBvc2l0aW9uIiwiaGFuZGxlTW91c2VVcCIsImhhbmRsZVBhZ2VDbGljayIsIm5ld05vdGUiLCJjbG9zZXN0IiwiY3JlYXRlZEF0IiwiY3Vyc29yIiwiX0ZyYWdtZW50IiwiX25vdGVDb2xvcnMkZmluZCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiZmluZCIsIm9uTW91c2VEb3duIiwibm90ZUlkIiwiaGFuZGxlTW91c2VEb3duIiwiRWRpdDMiLCJvbkJsdXIiLCJvbktleURvd24iLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJDYW1lcmEiLCJTcXVhcmUiLCJDaXJjbGUiLCJBcnJvd1JpZ2h0IiwiVHlwZSIsIlVuZG8iLCJSZWRvIiwiU2F2ZSIsIkRvd25sb2FkIiwiaXNDYXB0dXJpbmciLCJzZXRJc0NhcHR1cmluZyIsImNhcHR1cmVkSW1hZ2UiLCJzZXRDYXB0dXJlZEltYWdlIiwiaXNBbm5vdGF0aW5nIiwic2V0SXNBbm5vdGF0aW5nIiwic2VsZWN0ZWRUb29sIiwic2V0U2VsZWN0ZWRUb29sIiwiYW5ub3RhdGlvbnMiLCJzZXRBbm5vdGF0aW9ucyIsImlzRHJhd2luZyIsInNldElzRHJhd2luZyIsIl91c2VTdGF0ZTEyIiwiY3VycmVudEFubm90YXRpb24iLCJzZXRDdXJyZW50QW5ub3RhdGlvbiIsIl91c2VTdGF0ZTE0Iiwic2VsZWN0ZWRDb2xvciIsInNldFNlbGVjdGVkQ29sb3IiLCJfdXNlU3RhdGUxNiIsInNldFN0cm9rZVdpZHRoIiwiX3VzZVN0YXRlMTgiLCJfdXNlU3RhdGUyMCIsInRleHRJbnB1dCIsInNldFRleHRJbnB1dCIsIl91c2VTdGF0ZTIyIiwic2hvd1RleHRJbnB1dCIsInNldFNob3dUZXh0SW5wdXQiLCJfdXNlU3RhdGUyNCIsInRleHRQb3NpdGlvbiIsInNldFRleHRQb3NpdGlvbiIsIl91c2VTdGF0ZTI2IiwiaGlzdG9yeSIsInNldEhpc3RvcnkiLCJfdXNlU3RhdGUyOCIsImhpc3RvcnlJbmRleCIsInNldEhpc3RvcnlJbmRleCIsImNhbnZhc1JlZiIsImNhcHR1cmVTY3JlZW4iLCJzdHJlYW0iLCJ2aWRlbyIsIm1lZGlhRGV2aWNlcyIsImdldERpc3BsYXlNZWRpYSIsIm1lZGlhU291cmNlIiwic3JjT2JqZWN0IiwicGxheSIsImNhbnZhcyIsInZpZGVvV2lkdGgiLCJ2aWRlb0hlaWdodCIsImN0eCIsImdldENvbnRleHQiLCJkcmF3SW1hZ2UiLCJkYXRhVVJMIiwidG9EYXRhVVJMIiwiZ2V0VHJhY2tzIiwiY2FwdHVyZVZpZXdwb3J0IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJmb250IiwidGV4dEFsaWduIiwiZmlsbFRleHQiLCJzdGFydEFubm90YXRpb24iLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibmV3QW5ub3RhdGlvbiIsInN0YXJ0WCIsInN0YXJ0WSIsImVuZFgiLCJlbmRZIiwidXBkYXRlQW5ub3RhdGlvbiIsImZpbmlzaEFubm90YXRpb24iLCJuZXdBbm5vdGF0aW9ucyIsIm5ld0hpc3RvcnkiLCJhZGRUZXh0QW5ub3RhdGlvbiIsInRleHRBbm5vdGF0aW9uIiwicmVkcmF3Q2FudmFzIiwiSW1hZ2UiLCJjYW52YXNBc3BlY3RSYXRpbyIsImRyYXdXaWR0aCIsImRyYXdIZWlnaHQiLCJvZmZzZXRYIiwib2Zmc2V0WSIsImNsZWFyUmVjdCIsImltYWdlU21vb3RoaW5nRW5hYmxlZCIsImltYWdlU21vb3RoaW5nUXVhbGl0eSIsIkJvb2xlYW4iLCJhbm5vdGF0aW9uIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJsaW5lQ2FwIiwic3Ryb2tlUmVjdCIsInJhZGl1cyIsInNxcnQiLCJwb3ciLCJiZWdpblBhdGgiLCJhcmMiLCJQSSIsImFuZ2xlIiwiYXRhbjIiLCJtb3ZlVG8iLCJsaW5lVG8iLCJjb3MiLCJzaW4iLCJkcmF3QXJyb3ciLCJkcmF3QW5ub3RhdGlvbiIsInNhdmVUb05lc3QiLCJfcmVmNCIsIl9jYWxsZWUzIiwiX2NvbnRleHQzIiwic2VuZE1lc3NhZ2UiLCJzY3JlZW5zaG90IiwiZG93bmxvYWQiLCJ0b0lTT1N0cmluZyIsImNsaWNrIiwib25Nb3VzZU1vdmUiLCJvbk1vdXNlVXAiLCJfZGVmaW5lUHJvcGVydGllcyIsIl90b1Byb3BlcnR5S2V5IiwiX2RlZmluZVByb3BlcnR5IiwiX3R5cGVvZiIsInRvUHJpbWl0aXZlIiwiX3RvUHJpbWl0aXZlIiwibWVkaWFQcm9jZXNzb3IiLCJNZWRpYVByb2Nlc3NvciIsIl9jbGFzc0NhbGxDaGVjayIsImluaXRpYWxpemVPQ1IiLCJfaW5pdGlhbGl6ZU9DUiIsIm9jcldvcmtlciIsImlzT2NySW5pdGlhbGl6ZWQiLCJfcHJvY2Vzc1NjcmVlbnNob3QiLCJpbWFnZURhdGEiLCJleHRyYWN0ZWRUZXh0IiwiX3lpZWxkJHRoaXMkb2NyV29ya2VyIiwiZGltZW5zaW9ucyIsInByb2Nlc3NpbmdUaW1lIiwiZ2V0SW1hZ2VEaW1lbnNpb25zIiwib3JpZ2luYWxEYXRhIiwibWV0YWRhdGEiLCJmaWxlbmFtZSIsInByb2Nlc3NpbmdUaW1lTXMiLCJvY3JDb25maWRlbmNlIiwiX3Byb2Nlc3NWb2ljZU1lbW8iLCJhdWRpb0Jsb2IiLCJkdXJhdGlvbiIsIl90MyIsInRyYW5zY3JpYmVXaXRoV2ViU3BlZWNoIiwidHJhbnNjcmliZVdpdGhXaGlzcGVyIiwiZ2V0QXVkaW9EdXJhdGlvbiIsIm1pbWVUeXBlIiwiX3gyIiwiX3Byb2Nlc3NQREYiLCJfY2FsbGVlNCIsInBkZkRhdGEiLCJfdDQiLCJfY29udGV4dDQiLCJieXRlTGVuZ3RoIiwiX3gzIiwiX3Byb2Nlc3NFbWFpbCIsIl9jYWxsZWU1IiwiZW1haWxIVE1MIiwiZW1haWxNZXRhZGF0YSIsIl9kb2MkYm9keSIsIl9kb2MkcXVlcnlTZWxlY3RvciIsInBhcnNlciIsImRvYyIsInN1YmplY3QiLCJfdDUiLCJfY29udGV4dDUiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJyZW1vdmUiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0QXR0cmlidXRlIiwicHVibGlzaERhdGUiLCJ3b3JkQ291bnQiLCJfeDQiLCJfeDUiLCJfcHJvY2Vzc1NvY2lhbFBvc3QiLCJfY2FsbGVlNiIsInBvc3RIVE1MIiwicGxhdGZvcm0iLCJwb3N0TWV0YWRhdGEiLCJfZG9jJGJvZHkyIiwiYXV0aG9yIiwiX3Q2IiwiX3Q3IiwiX2NvbnRleHQ2IiwiZXh0cmFjdFR3aXR0ZXJDb250ZW50IiwiZXh0cmFjdFR3aXR0ZXJBdXRob3IiLCJleHRyYWN0VHdpdHRlckRhdGUiLCJleHRyYWN0TGlua2VkSW5Db250ZW50IiwiZXh0cmFjdExpbmtlZEluQXV0aG9yIiwiZXh0cmFjdE1lZGl1bUNvbnRlbnQiLCJleHRyYWN0TWVkaXVtQXV0aG9yIiwiX3g2IiwiX3g3IiwiX3g4IiwibGlua0lkIiwic3RvcmFnZUtleSIsImdldE1pbWVUeXBlIiwiX2dldEltYWdlRGltZW5zaW9ucyIsIl9jYWxsZWU3IiwiX2NvbnRleHQ3IiwiX3g5IiwiX2dldEF1ZGlvRHVyYXRpb24iLCJfY2FsbGVlOCIsIl9jb250ZXh0OCIsImF1ZGlvIiwiQXVkaW8iLCJvbmxvYWRlZG1ldGFkYXRhIiwiX3gwIiwiX3RyYW5zY3JpYmVXaXRoV2ViU3BlZWNoIiwiX2NhbGxlZTkiLCJfY29udGV4dDkiLCJfeDEiLCJfdHJhbnNjcmliZVdpdGhXaGlzcGVyIiwiX2NhbGxlZTAiLCJfY29udGV4dDAiLCJfeDEwIiwiX3R3ZWV0VGV4dCR0ZXh0Q29udGVuIiwidHdlZXRUZXh0IiwiX2F1dGhvckVsZW1lbnQkdGV4dENvIiwiYXV0aG9yRWxlbWVudCIsInRpbWVFbGVtZW50IiwiX2NvbnRlbnRFbGVtZW50JHRleHRDIiwiY29udGVudEVsZW1lbnQiLCJfYXV0aG9yRWxlbWVudCR0ZXh0Q28yIiwiX2FydGljbGUkdGV4dENvbnRlbnQiLCJhcnRpY2xlIiwiX2F1dGhvckVsZW1lbnQkdGV4dENvMyIsIl9jbGVhbnVwIiwiX2NhbGxlZTEiLCJfY29udGV4dDEiLCJpc0NvbnRlbnRFZGl0YWJsZSIsInRvZ2dsZUZsb2F0aW5nQUkiLCJ0b0luYm94IiwiZmxvYXRpbmdBSVJvb3QiLCJpc0Zsb2F0aW5nQUlWaXNpYmxlIiwic3RpY2t5Tm90ZXNSb290IiwiaXNTdGlja3lOb3Rlc1Zpc2libGUiLCJzY3JlZW5zaG90VG9vbFJvb3QiLCJpc1NjcmVlbnNob3RUb29sVmlzaWJsZSIsImxhc3RTZWxlY3Rpb24iLCJoaWdobGlnaHRCdXR0b24iLCJwYWdlSGlnaGxpZ2h0cyIsImhpZ2hsaWdodHNFbmFibGVkIiwicHJvYmxlbWF0aWNTaXRlcyIsImhpZ2hsaWdodENvbG9yT3B0aW9ucyIsInllbGxvdyIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJ0ZXJ0aWFyeSIsImJsdWUiLCJncmVlbiIsInBpbmsiLCJwdXJwbGUiLCJvcmFuZ2UiLCJyZWQiLCJnZXRIaWdobGlnaHRTZXR0aW5ncyIsIl9nZXRIaWdobGlnaHRTZXR0aW5ncyIsInNldHRpbmdzIiwibmVzdF9zZXR0aW5ncyIsImhpZ2hsaWdodENvbG9yIiwiaGlnaGxpZ2h0U3R5bGUiLCJnZW5lcmF0ZUhpZ2hsaWdodFN0eWxlcyIsImNvbG9ycyIsImlzUHJvYmxlbWF0aWNTaXRlIiwic29tZSIsInNpdGUiLCJoYW5kbGVUZXh0U2VsZWN0aW9uIiwic2VsZWN0aW9uIiwic2VsZWN0ZWRUZXh0IiwiZ2V0UmFuZ2VBdCIsImNvbW1vbkFuY2VzdG9yQ29udGFpbmVyIiwic3RhcnRPZmZzZXQiLCJlbmRPZmZzZXQiLCJjb250ZXh0U3RhcnQiLCJtYXgiLCJjb250ZXh0RW5kIiwiZ2V0U2VsZWN0aW9uQ29udGV4dCIsImdldFNlbGVjdGlvblBvc2l0aW9uIiwiaGlkZUhpZ2hsaWdodEJ1dHRvbiIsInN0YXJ0Q29udGFpbmVyIiwiYWx0ZXJuYXRpdmVSZWN0IiwiTm9kZSIsIlRFWFRfTk9ERSIsInBhcmVudEVsZW1lbnQiLCJFTEVNRU5UX05PREUiLCJjcmVhdGVCdXR0b24iLCJib3R0b20iLCJyaWdodCIsInNob3dIaWdobGlnaHRCdXR0b24iLCJzY3JvbGxZIiwic2Nyb2xsWCIsInZpZXdwb3J0SGVpZ2h0Iiwidmlld3BvcnRXaWR0aCIsInJhd1RvcCIsInJhd0xlZnQiLCJidXR0b25Ub3AiLCJidXR0b25MZWZ0IiwiY3NzVGV4dCIsImdldEVsZW1lbnRCeUlkIiwiaGVhZCIsIndpbmRvd1NlbGVjdGlvbiIsInRlbXBIaWdobGlnaHRJZCIsImNyZWF0ZVZpc3VhbEhpZ2hsaWdodCIsImhpZ2hsaWdodEVsZW1lbnQiLCJyZXNwb25zZSIsInN1Y2Nlc3MiLCJoaWdobGlnaHRJZCIsInNob3dIaWdobGlnaHRDb25maXJtYXRpb24iLCJyZW1vdmVIaWdobGlnaHQiLCJzYXZlSGlnaGxpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiYnV0dG9uUmVjdCIsImV4dHJhY3RQYWdlQ29udGVudCIsImV4dHJhY3RXZWJwYWdlQ29udGVudCIsImV4dHJhY3RFbmhhbmNlZFBhZ2VDb250ZW50IiwiX2V4dHJhY3RFbmhhbmNlZFBhZ2VDb250ZW50IiwiY29udGVudFR5cGUiLCJtZWRpYUNvbnRlbnQiLCJ2aWRlb0RhdGEiLCJzb2NpYWxEYXRhIiwiZW1haWxEYXRhIiwiZGV0ZWN0Q29udGVudFR5cGUiLCJleHRyYWN0TWV0YWRhdGEiLCJleHRyYWN0UERGQ29udGVudCIsImV4dHJhY3RWaWRlb0NvbnRlbnQiLCJleHRyYWN0U29jaWFsQ29udGVudCIsImV4dHJhY3RFbWFpbENvbnRlbnQiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QyIiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0MyIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDQiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3Q1IiwiZXh0cmFjdGVkQXQiLCJvZ1RpdGxlIiwib2dEZXNjcmlwdGlvbiIsIm9nSW1hZ2UiLCJvZ0F1dGhvciIsIm9nUHVibGlzaGVkIiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0NiIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDciLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3Q4IiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0OSIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDAiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QxIiwiY2hhbm5lbE5hbWUiLCJ2aWV3Q291bnQiLCJ1cGxvYWREYXRlIiwiY2hhbm5lbCIsInZpZXdzIiwiZXh0cmFjdFZpZGVvTWV0YWRhdGEiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QxMCIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDExIiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0MTIiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QxMyIsImNvbXBhbnkiLCJleHRyYWN0U29jaWFsTWV0YWRhdGEiLCJleHRyYWN0RW1haWxNZXRhZGF0YSIsImVsZW1lbnRzVG9SZW1vdmUiLCJjbG9uZWREb2MiLCJjbG9uZU5vZGUiLCJjbG9uZWRFbCIsImlubmVyVGV4dCIsIl9leHRyYWN0UERGQ29udGVudCIsIl9kb2N1bWVudCRib2R5IiwicGRmRW1iZWQiLCJfZXh0cmFjdFZpZGVvQ29udGVudCIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDE4IiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0MTkiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QyMCIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDIxIiwidXJsUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwicGFyc2VJbnQiLCJfZXh0cmFjdFNvY2lhbENvbnRlbnQiLCJwYWdlSFRNTCIsIm91dGVySFRNTCIsInByb2Nlc3NTb2NpYWxQb3N0IiwiX2V4dHJhY3RFbWFpbENvbnRlbnQiLCJfdDgiLCJwcm9jZXNzRW1haWwiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QxNCIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDE1IiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0MTYiLCJfZG9jdW1lbnQkcXVlcnlTZWxlY3QxNyIsInNob3dTYXZlQ29uZmlybWF0aW9uIiwibm90aWZpY2F0aW9uIiwic2hvd05vdGlmaWNhdGlvbiIsImlzUHJvYmxlbWF0aWMiLCJoaWRlRmxvYXRpbmdBSSIsInJlbmRlckZsb2F0aW5nQUkiLCJjb250YWluZXIiLCJSZWFjdERPTSIsInNob3dGbG9hdGluZ0FJIiwiUmVhY3QiLCJGbG9hdGluZ0FJIiwidG9nZ2xlU3RpY2t5Tm90ZXMiLCJyZW5kZXJTdGlja3lOb3RlcyIsInNob3dTdGlja3lOb3RlcyIsIlN0aWNreU5vdGVzIiwidG9nZ2xlU2NyZWVuc2hvdFRvb2wiLCJoaWRlU2NyZWVuc2hvdFRvb2wiLCJyZW5kZXJTY3JlZW5zaG90VG9vbCIsInNob3dTY3JlZW5zaG90VG9vbCIsIlNjcmVlbnNob3RUb29sIiwiX2NyZWF0ZVZpc3VhbEhpZ2hsaWdodCIsIl95aWVsZCRnZXRIaWdobGlnaHRTZSIsImN1c3RvbVN0eWxlcyIsImhpZ2hsaWdodFNwYW4iLCJ0ZXh0Tm9kZSIsImJlZm9yZSIsImFmdGVyIiwicGFyZW50IiwiYmVmb3JlTm9kZSIsInNlbGVjdGVkTm9kZSIsImFmdGVyTm9kZSIsIl90OSIsIl90MCIsInNob3dIaWdobGlnaHRJbmZvIiwic3Vycm91bmRDb250ZW50cyIsImVuZENvbnRhaW5lciIsInJlcGxhY2VDaGlsZCIsInRvb2x0aXAiLCJyZW1vdmVCdXR0b24iLCJoaWRlSGlnaGxpZ2h0VG9vbHRpcCIsIm9uY2UiLCJjaGVja0ZvckV4aXN0aW5nSGlnaGxpZ2h0cyIsImhpZ2hsaWdodHMiLCJyZXN0b3JlSGlnaGxpZ2h0cyIsImhpZ2hsaWdodCIsInRleHROb2RlcyIsInNlYXJjaFRleHQiLCJ0cmF2ZXJzZSIsImNoaWxkTm9kZXMiLCJmaW5kVGV4dE5vZGVzIiwiX3RleHROb2RlJHRleHRDb250ZW50IiwidG9nZ2xlSGlnaGxpZ2h0cyIsImVuYWJsZWQiLCJhZGRIaWdobGlnaHRTdHlsZXMiLCJhZGRMaXN0ZW5lciIsInJlcXVlc3QiLCJzZW5kZXIiLCJzZW5kUmVzcG9uc2UiLCJlbmhhbmNlZENvbnRlbnQiLCJfY29udGVudCJdLCJzb3VyY2VSb290IjoiIn0=