/*! For license information please see sidepanel.js.LICENSE.txt */
(()=>{"use strict";var n,e,t={20:(n,e,t)=>{var r=t(540),a=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(n,e,t){var r,o={},l=null,u=null;for(r in void 0!==t&&(l=""+t),void 0!==e.key&&(l=""+e.key),void 0!==e.ref&&(u=e.ref),e)i.call(e,r)&&!c.hasOwnProperty(r)&&(o[r]=e[r]);if(n&&n.defaultProps)for(r in e=n.defaultProps)void 0===o[r]&&(o[r]=e[r]);return{$$typeof:a,type:n,key:l,ref:u,props:o,_owner:s.current}}e.Fragment=o,e.jsx=l,e.jsxs=l},45:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(825));e.default=class{constructor(n,{headers:e={},schema:t,fetch:r}){this.url=n,this.headers=e,this.schema=t,this.fetch=r}select(n,{head:e=!1,count:t}={}){const r=e?"HEAD":"GET";let o=!1;const i=(null!=n?n:"*").split("").map(n=>/\s/.test(n)&&!o?"":('"'===n&&(o=!o),n)).join("");return this.url.searchParams.set("select",i),t&&(this.headers.Prefer=`count=${t}`),new a.default({method:r,url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}insert(n,{count:e,defaultToNull:t=!0}={}){const r=[];if(this.headers.Prefer&&r.push(this.headers.Prefer),e&&r.push(`count=${e}`),t||r.push("missing=default"),this.headers.Prefer=r.join(","),Array.isArray(n)){const e=n.reduce((n,e)=>n.concat(Object.keys(e)),[]);if(e.length>0){const n=[...new Set(e)].map(n=>`"${n}"`);this.url.searchParams.set("columns",n.join(","))}}return new a.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:n,fetch:this.fetch,allowEmpty:!1})}upsert(n,{onConflict:e,ignoreDuplicates:t=!1,count:r,defaultToNull:o=!0}={}){const i=[`resolution=${t?"ignore":"merge"}-duplicates`];if(void 0!==e&&this.url.searchParams.set("on_conflict",e),this.headers.Prefer&&i.push(this.headers.Prefer),r&&i.push(`count=${r}`),o||i.push("missing=default"),this.headers.Prefer=i.join(","),Array.isArray(n)){const e=n.reduce((n,e)=>n.concat(Object.keys(e)),[]);if(e.length>0){const n=[...new Set(e)].map(n=>`"${n}"`);this.url.searchParams.set("columns",n.join(","))}}return new a.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:n,fetch:this.fetch,allowEmpty:!1})}update(n,{count:e}={}){const t=[];return this.headers.Prefer&&t.push(this.headers.Prefer),e&&t.push(`count=${e}`),this.headers.Prefer=t.join(","),new a.default({method:"PATCH",url:this.url,headers:this.headers,schema:this.schema,body:n,fetch:this.fetch,allowEmpty:!1})}delete({count:n}={}){const e=[];return n&&e.push(`count=${n}`),this.headers.Prefer&&e.unshift(this.headers.Prefer),this.headers.Prefer=e.join(","),new a.default({method:"DELETE",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],u=o[l]||0,d="".concat(l," ").concat(u);o[l]=u+1;var A=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var f=a(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var c=r(n,a),l=0;l<o.length;l++){var u=t(o[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=c}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},159:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},182:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),a=t.n(r),o=t(314),i=t.n(o),s=t(417),c=t.n(s),l=new URL(t(691),t.b),u=i()(a()),d=c()(l);u.push([n.id,`/* Modern Reset and Base Styles */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  /* Brand Colors */\n  --brand-hue: 244;\n  --color-primary: hsl(var(--brand-hue), 81%, 59%); /* #4f46e5 */\n  --color-primary-light: hsl(var(--brand-hue), 85%, 66%); /* #6366f1 */\n  --color-primary-dark: hsl(var(--brand-hue), 79%, 53%); /* #4338ca */\n\n  /* Semantic Colors */\n  --color-success: #10b981;\n  --color-warning: #f59e0b;\n  --color-danger: #ef4444;\n  --color-danger-hover: #d92d20;\n\n  /* Neutral Colors (Cool Gray) */\n  --color-white: #ffffff;\n  --color-gray-50: #f8fafc;\n  --color-gray-100: #f1f5f9;\n  --color-gray-200: #e2e8f0;\n  --color-gray-300: #cbd5e1;\n  --color-gray-400: #94a3b8;\n  --color-gray-500: #64748b;\n  --color-gray-600: #475569;\n  --color-gray-700: #334155;\n  --color-gray-800: #1e293b;\n  --color-gray-900: #0f172a;\n\n  /* UI Colors */\n  --ui-background: var(--color-gray-50);\n  --ui-element-background: var(--color-white);\n  --ui-border: var(--color-gray-200);\n  --ui-border-hover: var(--color-gray-300);\n  --ui-text-primary: var(--color-gray-800);\n  --ui-text-secondary: var(--color-gray-500);\n  --ui-text-tertiary: var(--color-gray-400);\n  --ui-text-interactive: var(--color-primary);\n  --ui-text-interactive-hover: var(--color-primary-dark);\n  \n  /* Spacing System (slightly tweaked) */\n  --space-1: 0.25rem; /* 4px */\n  --space-2: 0.5rem;  /* 8px */\n  --space-3: 0.75rem; /* 12px */\n  --space-4: 1rem;    /* 16px */\n  --space-5: 1.5rem;  /* 24px */\n  --space-6: 2rem;    /* 32px */\n  --space-8: 3rem;    /* 48px */\n  --space-10: 4rem;   /* 64px */\n  --space-12: 5rem;   /* 80px */\n  \n  /* Typography */\n  --font-family: Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-base: 0.9375rem; /* 15px */\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-size-2xl: 1.5rem;\n  --font-size-3xl: 2rem;\n  \n  /* Border Radius */\n  --radius-sm: 0.25rem;\n  --radius-md: 0.5rem;\n  --radius-lg: 0.75rem;\n  --radius-xl: 1rem;\n  --radius-full: 9999px;\n  \n  /* Shadows (more subtle) */\n  --shadow-sm: 0 1px 2px 0 rgba(15, 23, 42, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.1), 0 2px 4px -2px rgba(15, 23, 42, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -4px rgba(15, 23, 42, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.1), 0 8px 10px -6px rgba(15, 23, 42, 0.1);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.05);\n\n  /* Transitions */\n  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Z-index */\n  --z-base: 1;\n  --z-sticky: 10;\n  --z-dropdown: 50;\n  --z-modal: 100;\n  --z-overlay: 90;\n}\n\nbody {\n  font-family: var(--font-family);\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background-color: var(--ui-background);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Main Sidepanel Layout */\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: var(--ui-background);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family);\n  overflow: hidden;\n  position: relative;\n}\n\n/* Modern Header Design */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-sticky);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.header-title h1 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  letter-spacing: -0.025em;\n}\n\n.header-icon {\n  color: var(--color-primary);\n  width: 22px;\n  height: 22px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.save-button,\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.save-button {\n  background: var(--color-primary);\n  color: var(--color-white);\n  box-shadow: var(--shadow-sm);\n}\n\n.save-button:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  background: transparent;\n  color: var(--ui-text-secondary);\n}\n\n.tab-sync-button:hover,\n.logout-button:hover,\n.floating-ai-button:hover,\n.sticky-notes-button:hover,\n.screenshot-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n  transform: none;\n}\n\n.floating-ai-button {\n  color: var(--color-primary);\n}\n\n.floating-ai-button:hover {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.sticky-notes-button {\n  color: var(--color-warning);\n}\n\n.sticky-notes-button:hover {\n  background: var(--color-warning);\n  color: var(--color-white);\n}\n\n.screenshot-button {\n  color: #8b5cf6;\n}\n\n.screenshot-button:hover {\n  background: #8b5cf6;\n  color: var(--color-white);\n}\n\n/* Enhanced Search Design */\n.search-container {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-icon {\n  position: absolute;\n  left: var(--space-2);\n  color: var(--ui-text-tertiary);\n  pointer-events: none;\n  z-index: 1;\n  width: 16px;\n  height: 16px;\n}\n\n.search-input {\n  width: 100%;\n  height: 36px;\n  padding: 0 var(--space-3) 0 36px;\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-base);\n  outline: none;\n}\n\n.search-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.search-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.search-clear,\n.search-power-mode {\n  position: absolute;\n  right: var(--space-2);\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.search-clear:hover,\n.search-power-mode:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.search-spinner {\n  position: absolute;\n  right: var(--space-3);\n  color: var(--color-primary);\n  animation: spin 1s linear infinite;\n}\n\n.command-hint-button {\n  position: absolute;\n  right: var(--space-2);\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background-color: transparent;\n  color: var(--ui-text-tertiary);\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-xs);\n  cursor: pointer;\n  border: none;\n  transition: all var(--transition-fast);\n}\n\n.command-hint-button:hover {\n    background-color: var(--color-gray-100);\n    color: var(--ui-text-secondary);\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* ==========================================================================\n   MODAL STYLES\n   ========================================================================== */\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(15, 23, 42, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-overlay);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: var(--ui-element-background);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n  padding: var(--space-6);\n  animation: modal-fade-in 0.2s var(--transition-base);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n@keyframes modal-fade-in {\n  from { opacity: 0; transform: scale(0.95); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--space-4);\n  padding-bottom: var(--space-3);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.modal-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n}\n\n.modal-close-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.modal-close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.modal-body {\n  /* No specific styles needed for the body wrapper itself */\n}\n\n.modal-footer {\n  margin-top: var(--space-5);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n}\n\n/* Modal form elements */\n.form-group {\n    margin-bottom: var(--space-4);\n}\n.form-group label {\n    display: block;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-2);\n}\n.form-group input[type="text"],\n.form-group textarea {\n    width: 100%;\n    padding: var(--space-2) var(--space-3);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    transition: all var(--transition-fast);\n}\n.form-group input[type="text"]:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n}\n\n.button {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-2) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.button:hover {\n    background: var(--color-gray-300);\n}\n.button.primary {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n.button.primary:hover {\n    background: var(--color-primary-dark);\n}\n\n/* ==========================================================================\n   SETTINGS STYLES\n   ========================================================================== */\n\n.settings-modal .modal-content {\n    max-width: 800px; /* Wider for settings */\n    padding: 0;\n    display: flex;\n    overflow: hidden;\n}\n\n.settings-content {\n    display: flex;\n    width: 100%;\n}\n\n.settings-tabs {\n    width: 200px;\n    flex-shrink: 0;\n    padding: var(--space-4);\n    border-right: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n}\n\n.settings-tab {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.settings-tab:hover {\n    color: var(--ui-text-primary);\n    background: var(--color-gray-200);\n}\n.settings-tab.active {\n    color: var(--ui-text-primary);\n    background: var(--color-white);\n    box-shadow: var(--shadow-sm);\n}\n\n.settings-panel {\n    flex: 1;\n    padding: var(--space-5) var(--space-6);\n    overflow-y: auto;\n    max-height: 80vh;\n}\n\n.settings-panel h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.settings-panel p {\n    color: var(--ui-text-secondary);\n    margin-bottom: var(--space-4);\n}\n\n.setting-group {\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--space-5);\n    overflow: hidden;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--space-3) var(--space-4);\n}\n.setting-item:not(:last-child) {\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.setting-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n}\n.setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.setting-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-4);\n    margin-top: var(--space-4);\n}\n.stat-card {\n    background: var(--color-gray-100);\n    padding: var(--space-4);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--ui-border);\n}\n.stat-number {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n.stat-label {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.settings-message {\n    margin-top: var(--space-4);\n    padding: var(--space-3) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}\n.settings-message.success {\n    background-color: hsl(142.1 76.2% 36.3% / 15%);\n    color: hsl(142.1 70.2% 30.3%);\n}\n.settings-message.error {\n    background-color: hsl(0 72.2% 50.6% / 15%);\n    color: hsl(0 62.2% 45.6%);\n}\n\n.settings-button {\n    /* uses .button styles */\n}\n.settings-button.danger {\n    background-color: var(--color-danger);\n    color: var(--color-white);\n}\n.settings-button.danger:hover {\n    background-color: var(--color-danger-hover);\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n}\n.toggle-switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--color-gray-300);\n  transition: .4s;\n  border-radius: var(--radius-full);\n}\n.toggle-slider:before {\n  position: absolute;\n  content: "";\n  height: 14px;\n  width: 14px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\ninput:checked + .toggle-slider {\n  background-color: var(--color-primary);\n}\ninput:checked + .toggle-slider:before {\n  transform: translateX(16px);\n}\n\n/* ==========================================================================\n   SIDEBAR SETTINGS STYLES\n   ========================================================================== */\n\n.settings-sidebar {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--ui-element-background);\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n}\n\n.settings-header {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3) var(--space-4);\n    background: var(--ui-element-background);\n    border-bottom: 1px solid var(--ui-border);\n    flex-shrink: 0;\n}\n\n.settings-back-button {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.settings-back-button:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n}\n\n.settings-header h2 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin: 0;\n}\n\n.settings-tabs-horizontal {\n    display: flex;\n    padding: var(--space-2) var(--space-4);\n    background: var(--color-gray-50);\n    border-bottom: 1px solid var(--ui-border);\n    gap: var(--space-1);\n    overflow-x: auto;\n    flex-shrink: 0;\n}\n\n.settings-tab-horizontal {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 40px;\n    height: 40px;\n}\n\n.settings-tab-horizontal:hover {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n}\n\n.settings-tab-horizontal.active {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n\n.settings-content-sidebar {\n    flex: 1;\n    overflow-y: auto;\n    padding: var(--space-4);\n}\n\n.settings-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--space-8);\n    color: var(--ui-text-secondary);\n}\n\n.settings-section {\n    margin-bottom: var(--space-6);\n}\n\n.settings-section h3 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-2);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.account-info {\n    margin-bottom: var(--space-5);\n}\n\n.account-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n}\n\n.account-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n}\n\n.account-value {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid-sidebar {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n    margin-bottom: var(--space-5);\n}\n\n.stat-card-sidebar {\n    background: var(--color-gray-50);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    text-align: center;\n    border: 1px solid var(--ui-border);\n}\n\n.stat-card-sidebar .stat-number {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n\n.stat-card-sidebar .stat-label {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.setting-list {\n    space-y: var(--space-1);\n}\n\n.setting-item-sidebar {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-2);\n    gap: var(--space-3);\n}\n\n.setting-item-sidebar .setting-info {\n    flex: 1;\n    min-width: 0;\n}\n\n.setting-item-sidebar .setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n    margin-bottom: var(--space-1);\n}\n\n.setting-item-sidebar .setting-description {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    line-height: 1.4;\n}\n\n.form-control-sidebar {\n    width: 100%;\n    max-width: 200px;\n    padding: var(--space-2);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    background: var(--ui-element-background);\n    color: var(--ui-text-primary);\n}\n\n.form-control-sidebar:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.button-small {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-1) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-xs);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n    flex-shrink: 0;\n}\n\n.button-small:hover {\n    background: var(--color-gray-300);\n}\n\n.button-small.danger {\n    background: var(--color-danger);\n    color: var(--color-white);\n}\n\n.button-small.danger:hover {\n    background: var(--color-danger-hover);\n}\n\n.setting-actions {\n    margin-top: var(--space-5);\n}\n\n.about-info-sidebar {\n    margin-bottom: var(--space-5);\n}\n\n.app-info-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    margin-bottom: var(--space-3);\n}\n\n.app-logo-sidebar {\n    width: 32px;\n    height: 32px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    border-radius: var(--radius-md);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: var(--font-size-lg);\n}\n\n.app-name {\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-base);\n}\n\n.app-version {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n\n.app-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    line-height: 1.5;\n}\n\n.support-links-sidebar h4 {\n    font-size: var(--font-size-sm);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-3);\n}\n\n.support-link-list {\n    display: flex;\n    flex-direction: column;\n    gap: var(--space-2);\n}\n\n.support-link-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-2);\n    padding: var(--space-2) var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    color: var(--ui-text-secondary);\n    text-decoration: none;\n    font-size: var(--font-size-sm);\n    transition: all var(--transition-fast);\n}\n\n.support-link-sidebar:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n}\n\n/* Mobile responsive adjustments */\n@media (max-width: 480px) {\n    .settings-tabs-horizontal {\n        padding: var(--space-2);\n        gap: var(--space-1);\n    }\n    \n    .settings-tab-horizontal {\n        min-width: 36px;\n        height: 36px;\n        padding: var(--space-1);\n    }\n    \n    .settings-content-sidebar {\n        padding: var(--space-3);\n    }\n    \n    .stats-grid-sidebar {\n        grid-template-columns: 1fr;\n    }\n    \n    .setting-item-sidebar {\n        flex-direction: column;\n        align-items: stretch;\n        gap: var(--space-2);\n    }\n    \n    .form-control-sidebar {\n        max-width: none;\n    }\n}\n\n/* TAG EDITOR */\n.tag-editor {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.tag-editor-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.tag-editor-loading {\n  padding: var(--space-3);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n}\n\n/* COLLECTIONS MENU */\n.collections-menu {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.collections-header {\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  transition: background-color var(--transition-fast);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.collection-option:last-child {\n  border-bottom: none;\n}\n\n.collection-option:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* Inbox Actions */\n.inbox-section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping on small screens */\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-section-title .section-header {\n  padding: 0;\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 20px;\n  text-align: center;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button,\n.inbox-actions select {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button:hover,\n.inbox-actions select:hover {\n  background: var(--color-gray-100);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n}\n\n.inbox-actions select {\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url(${d});\n  background-repeat: no-repeat;\n  background-position: right var(--space-2) center;\n  padding-right: var(--space-6);\n}\n\n/* Footer */\n.footer {\n  padding: var(--space-2) var(--space-4);\n  background: var(--ui-element-background);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.footer-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .search-container {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .content {\n    padding: var(--space-2);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-3);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* Content Area */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--space-2) var(--space-3);\n  scroll-behavior: smooth;\n}\n\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n/* Section Headers */\n.section {\n  margin-bottom: var(--space-3);\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-2) 0;\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: color var(--transition-fast);\n  position: relative;\n}\n\n.section-header:hover {\n  color: var(--ui-text-interactive);\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 24px;\n  text-align: center;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.add-collection-button:hover {\n  color: var(--ui-text-interactive);\n  background: var(--color-gray-100);\n  transform: scale(1.1);\n}\n\n.section-content {\n  margin-top: var(--space-2);\n}\n\n/* Modern Card Design Foundation */\n.card-base {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-3);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n}\n\n.card-base:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.card-base::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  opacity: 0;\n  transition: opacity var(--transition-base);\n}\n\n.card-base:hover::before {\n  opacity: 1;\n}\n\n/* Enhanced Favicon System */\n.favicon-container {\n  position: relative;\n  width: 36px;\n  height: 36px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n}\n\n.favicon-container img {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n  transition: transform var(--transition-fast);\n}\n\n.favicon-container:hover img {\n  transform: scale(1.05);\n}\n\n.favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--color-white);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n/* Domain Color System */\n.domain-github { background: linear-gradient(135deg, #24292e, #586069); }\n.domain-stackoverflow { background: linear-gradient(135deg, #f48024, #fe7a15); }\n.domain-medium { background: linear-gradient(135deg, #00ab6c, #00d084); }\n.domain-youtube { background: linear-gradient(135deg, #ff0000, #cc0000); }\n.domain-twitter { background: linear-gradient(135deg, #1da1f2, #0d8bd9); }\n.domain-linkedin { background: linear-gradient(135deg, #0077b5, #005885); }\n.domain-reddit { background: linear-gradient(135deg, #ff4500, #ff6500); }\n.domain-dev { background: linear-gradient(135deg, #0a0a0a, #2d2d2d); }\n\n/* Typography Improvements */\n.link-title,\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  line-height: 1.4;\n  margin-bottom: var(--space-1);\n  cursor: pointer;\n  transition: color var(--transition-fast);\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.link-title:hover,\n.inbox-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-meta,\n.inbox-card-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-bottom: var(--space-2);\n}\n\n.link-domain {\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n}\n\n.link-date::before {\n  content: '•';\n  margin: 0 var(--space-2);\n  color: var(--ui-text-tertiary);\n}\n\n/* Action Buttons */\n.action-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Enhanced Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: fixed;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: 1000;\n  min-width: 180px;\n  padding: var(--space-1);\n  margin-top: 0;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu button.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-10);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner {\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-primary);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n/* Empty States */\n.empty-state {\n  text-align: center;\n  padding: var(--space-10) var(--space-4);\n  color: var(--ui-text-secondary);\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--color-gray-300);\n  margin-bottom: var(--space-4);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  max-width: 300px;\n  margin: 0 auto var(--space-4);\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n/* ==========================================================================\n   MODERN CARD SYSTEM - COMPLETE REDESIGN\n   ========================================================================== */\n\n/* ===== INBOX CARD STYLES ===== */\n.inbox-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.inbox-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.inbox-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-md);\n}\n\n.inbox-card-content {\n  padding: var(--space-3);\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-checkbox {\n  padding-top: 5px; /* Align with text */\n}\n\n.inbox-card-checkbox input[type="checkbox"] {\n  width: 18px;\n  height: 18px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:hover {\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: 0px;\n  left: 3px;\n  color: var(--color-white);\n  font-size: 12px;\n  font-weight: 700;\n}\n\n.inbox-card-main-content { /* New wrapper */\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.inbox-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.inbox-card-body {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n}\n\n.inbox-card-domain {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 400;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.inbox-card-link,\n.inbox-card-menu-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--ui-text-secondary);\n  background: transparent;\n}\n\n.inbox-card-link:hover,\n.inbox-card-menu-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n/* Let dropdowns be handled by the global dropdown styles */\n.inbox-card-menu,\n.inbox-card-submenu {\n  /* Styles are now handled by .dropdown-menu */\n  display: none; /* Hide if not actively shown by JS */\n}\n\n.inbox-card-summary,\n.inbox-card-note {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  border-left: 3px solid var(--color-gray-300);\n}\n\n.inbox-card-summary p,\n.inbox-card-note p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.inbox-card-highlights {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.highlights-toggle {\n  background: none;\n  border: none;\n  color: var(--ui-text-interactive);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n  padding: var(--space-1) 0;\n}\n\n.highlights-toggle:hover {\n  color: var(--ui-text-interactive-hover);\n}\n\n.highlights-chevron {\n  transition: transform var(--transition-fast);\n  font-size: 10px;\n}\n\n.highlights-chevron.expanded {\n  transform: rotate(180deg);\n}\n\n/* ===== LINK CARD STYLES ===== */\n.link-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.link-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.link-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n}\n\n.link-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.link-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.link-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.link-card-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-card-info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.link-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.link-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-meta {\n  margin-bottom: var(--space-3);\n}\n\n.link-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n/* TAG STYLES */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-top: var(--space-3);\n}\n\n.link-tag {\n  background: hsl(var(--brand-hue) 81% 59% / 10%);\n  color: var(--ui-text-interactive);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 3px var(--space-2);\n  border-radius: var(--radius-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: none;\n}\n\n.link-tag:hover {\n  background: hsl(var(--brand-hue) 81% 59% / 20%);\n}\n\n/* CATEGORY BADGE */\n.link-category {\n  margin-top: var(--space-3);\n}\n\n.category-badge {\n  background: var(--color-gray-600);\n  color: var(--color-white);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n/* NOTES AND SUMMARIES */\n.link-note,\n.link-summary {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n}\n\n.link-note strong,\n.link-summary strong {\n  color: var(--ui-text-primary);\n  font-weight: 600;\n}\n\n/* HIGHLIGHTS SECTION */\n.link-highlights-section {\n  margin-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-3);\n}\n\n.highlights-header {\n  margin-bottom: var(--space-3);\n}\n\n/* ===== COLLECTION CARD STYLES ===== */\n.collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3) var(--space-4);\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: background-color var(--transition-fast);\n}\n\n.collection-card.expanded .collection-header {\n   border-bottom: 1px solid var(--ui-border);\n}\n\n\n.collection-header:hover {\n  background-color: var(--color-gray-50);\n}\n\n.collection-icon {\n  color: var(--ui-text-tertiary);\n}\n\n.collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-weight: 600;\n}\n\n.public-indicator {\n    color: var(--ui-text-tertiary);\n}\n\n.collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-top: 2px;\n  display: block;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.collection-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n}\n\n.collection-content {\n  padding: var(--space-4);\n}\n\n.empty-collection {\n  padding: var(--space-4);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* ===== SEARCH RESULT CARD STYLES ===== */\n.search-result-card {\n  position: relative;\n  margin-bottom: var(--space-4);\n  border: 1px dashed var(--ui-border-hover);\n  border-radius: var(--radius-xl);\n  padding-top: var(--space-5);\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: var(--space-2);\n  right: var(--space-4);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  color: var(--ui-text-tertiary);\n  background-color: var(--color-gray-100);\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.search-headline {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  padding: 0 var(--space-4) var(--space-3);\n  border-bottom: 1px dashed var(--ui-border);\n  margin-bottom: var(--space-3);\n}\n\n.search-headline em {\n  font-style: normal;\n  background-color: hsl(var(--brand-hue) 81% 59% / 15%);\n  color: var(--ui-text-interactive-hover);\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.search-result-card .link-card {\n    border: none;\n    margin-bottom: 0;\n    box-shadow: none;\n}\n.search-result-card .link-card:hover {\n    transform: none;\n    box-shadow: none;\n}\n\n.about-info {\n    margin-bottom: var(--space-5);\n}\n.app-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-4);\n    margin-bottom: var(--space-4);\n}\n.app-logo {\n    width: 48px;\n    height: 48px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n}\n.app-name {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n}\n.app-version {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.support-links h4 {\n    font-size: var(--font-size-base);\n    font-weight: 600;\n    margin-bottom: var(--space-3);\n}\n.link-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n}\n.support-link {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    background: var(--color-gray-50);\n    border: 1px solid var(--ui-border);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n    transition: all var(--transition-fast);\n}\n.support-link:hover {\n    background: var(--color-gray-100);\n    border-color: var(--ui-border-hover);\n}\n\n/* ==========================================================================\n   COMMAND PALETTE STYLES\n   ========================================================================== */\n.command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.6);\n    display: flex;\n    align-items: flex-start; /* Align to top */\n    justify-content: center;\n    padding-top: 15vh; /* Push it down a bit */\n    z-index: var(--z-overlay);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n}\n.command-palette {\n    background: var(--ui-element-background);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-xl);\n    width: 90%;\n    max-width: 600px;\n    overflow: hidden;\n    animation: command-palette-fade-in 0.2s var(--transition-base);\n}\n@keyframes command-palette-fade-in {\n  from { opacity: 0; transform: translateY(-10px) scale(0.98); }\n  to { opacity: 1; transform: translateY(0) scale(1); }\n}\n\n.command-palette-header {\n    padding: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n.command-palette-search-icon {\n    position: absolute;\n    left: var(--space-3);\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-input {\n    width: 100%;\n    height: 40px;\n    padding: 0 var(--space-3) 0 var(--space-6);\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: var(--font-size-lg);\n    color: var(--ui-text-primary);\n}\n\n.command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: var(--space-2);\n}\n\n.command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background-color var(--transition-fast);\n}\n.command-palette-item.selected {\n    background-color: var(--color-gray-100);\n}\n.command-palette-item-icon {\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n}\n.command-palette-item-title {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.command-palette-item-subtitle {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-action {\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-empty {\n    text-align: center;\n    padding: var(--space-6);\n    color: var(--ui-text-secondary);\n}\n\n.command-palette-footer {\n    padding: var(--space-2) var(--space-3);\n    border-top: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n.command-palette-tips {\n    display: flex;\n    gap: var(--space-4);\n}\n.command-palette-tips kbd {\n    background: var(--color-white);\n    border: 1px solid var(--ui-border);\n    padding: 2px 4px;\n    border-radius: var(--radius-sm);\n    box-shadow: var(--shadow-sm);\n}\n\n@keyframes card-fade-in {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* ==========================================================================\n   TAG FILTERS COMPONENT\n   ========================================================================== */\n\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n  margin-bottom: var(--space-2);\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n.tag-filter {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.tag-filter.active {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.tag-filter.active:hover {\n  background: var(--color-primary-dark);\n  border-color: var(--color-primary-dark);\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: var(--color-white);\n  color: var(--ui-text-secondary);\n  font-size: 10px;\n  font-weight: 600;\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  min-width: 16px;\n  text-align: center;\n  margin-left: var(--space-1);\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--color-primary);\n}\n\n.tag-filter-more {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n  font-style: italic;\n  padding: var(--space-1) var(--space-2);\n}\n\n.tag-filter-skeleton {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-sm);\n  font-style: italic;\n  padding: var(--space-2);\n}\n\n/* ==========================================================================\n   TAG INPUT COMPONENT\n   ========================================================================== */\n\n.tag-input-container {\n  position: relative;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-2);\n  min-height: 40px;\n  transition: all var(--transition-fast);\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  padding: 2px var(--space-2);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  animation: tag-chip-appear 0.2s ease-out;\n}\n\n@keyframes tag-chip-appear {\n  from { opacity: 0; transform: scale(0.8); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.tag-name {\n  white-space: nowrap;\n}\n\n.tag-remove {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: 1px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n  margin-left: 2px;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.tag-input {\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  flex: 1;\n  min-width: 100px;\n  padding: 2px 0;\n}\n\n.tag-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.tag-input:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tag-input-icon {\n  color: var(--ui-text-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  left: 0;\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  max-height: 200px;\n  overflow-y: auto;\n  padding: var(--space-1);\n}\n\n.tag-suggestion {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background: var(--color-gray-100);\n}\n\n.tag-suggestion-color {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.tag-suggestion-count {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS COMPONENT\n   ========================================================================== */\n\n.ai-suggestions {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  overflow: hidden;\n  box-shadow: var(--shadow-sm);\n  animation: ai-suggestions-appear 0.3s ease-out;\n}\n\n@keyframes ai-suggestions-appear {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.ai-suggestions.loading {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-suggestions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.ai-suggestions.loading .ai-suggestions-header {\n  background: var(--color-gray-50);\n  -webkit-backdrop-filter: none;\n  backdrop-filter: none;\n}\n\n.ai-loading-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--ui-text-primary);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n}\n\n.ai-suggestions.loading .ai-loading-content {\n  color: var(--ui-text-secondary);\n}\n\n.ai-icon {\n  width: 14px;\n  height: 14px;\n}\n\n.ai-icon.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.ai-suggestions-close {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions.loading .ai-suggestions-close {\n  color: var(--ui-text-tertiary);\n}\n\n.ai-suggestions-close:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions.loading .ai-suggestions-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions-toggle {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  margin-right: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-toggle:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions-content {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n}\n\n.ai-suggestion-section {\n  margin-bottom: var(--space-4);\n}\n\n.ai-suggestion-section:last-child {\n  margin-bottom: 0;\n}\n\n.suggestion-section-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-category-suggestions,\n.ai-tag-suggestions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.ai-category-chip,\n.ai-tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.ai-category-chip:hover,\n.ai-tag-chip:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.ai-category-chip.selected,\n.ai-tag-chip.selected {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.suggestion-name {\n  font-weight: 500;\n}\n\n.confidence-indicator {\n  font-size: 9px;\n  font-weight: 700;\n  color: var(--color-white);\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  min-width: 20px;\n  text-align: center;\n}\n\n.selected-icon {\n  margin-left: var(--space-1);\n}\n\n.ai-topics-section {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.ai-topics-label {\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-detected-topics {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n}\n\n.ai-topic-pill {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.ai-suggestions-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n  margin-top: var(--space-4);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.ai-action-btn {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.ai-action-btn:hover {\n  background: var(--color-gray-300);\n}\n\n.ai-action-btn.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.ai-action-btn.primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-action-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ai-action-btn.secondary {\n  background: transparent;\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-action-btn.secondary:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   ENHANCED DROPDOWN MENU STYLES\n   ========================================================================== */\n\n.dropdown-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu-item:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu-item:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.dropdown-menu-item.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu-item.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* ==========================================================================\n   INBOX CARD TAG STYLES\n   ========================================================================== */\n\n.inbox-card-tags {\n  margin-top: var(--space-3);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n/* ==========================================================================\n   ENHANCED BUTTON STYLES\n   ========================================================================== */\n\n.action-button {\n  background: none;\n  border: 1px solid transparent;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.action-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--color-gray-100);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n  border-radius: inherit;\n}\n\n.action-button:hover {\n  color: var(--ui-text-primary);\n  border-color: var(--ui-border);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.action-button:hover::before {\n  opacity: 1;\n}\n\n.action-button:active {\n  transform: translateY(0);\n  box-shadow: var(--shadow-inner);\n}\n\n.action-button > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Primary action button variant */\n.action-button.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n}\n\n.action-button.primary::before {\n  background: var(--color-primary-dark);\n}\n\n.action-button.primary:hover {\n  border-color: var(--color-primary-dark);\n  color: var(--color-white);\n}\n\n/* Danger action button variant */\n.action-button.danger {\n  color: var(--color-danger);\n}\n\n.action-button.danger::before {\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.action-button.danger:hover {\n  color: var(--color-danger-hover);\n  border-color: var(--color-danger);\n}\n\n/* ==========================================================================\n   SHARE MODAL STYLES\n   ========================================================================== */\n\n.share-link-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--color-gray-50);\n  color: var(--ui-text-primary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.share-link-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.share-link-input:read-only {\n  cursor: pointer;\n}\n\n.share-link-input:read-only:hover {\n  background: var(--color-gray-100);\n}\n\n/* ==========================================================================\n   TAB SYNC STYLES\n   ========================================================================== */\n\n.tab-sync-filters {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.tab-sync-filter-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.tab-sync-filter-row:last-child {\n  margin-bottom: 0;\n}\n\n.tab-sync-filter-checkbox {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"] {\n  width: 16px;\n  height: 16px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:hover {\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: -1px;\n  left: 2px;\n  color: var(--color-white);\n  font-size: 10px;\n  font-weight: 700;\n}\n\n.tab-sync-domain-filter {\n  flex: 1;\n  min-width: 200px;\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.tab-sync-domain-filter:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tab-sync-domain-filter::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n/* ==========================================================================\n   AUTH INPUT STYLES\n   ========================================================================== */\n\n.auth-input {\n  width: 100%;\n  padding: var(--space-3) var(--space-4);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.auth-input:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.auth-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.auth-input:invalid {\n  border-color: var(--color-danger);\n}\n\n.auth-input:invalid:focus {\n  border-color: var(--color-danger);\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS META STYLES\n   ========================================================================== */\n\n.ai-suggestions-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  color: rgba(255, 255, 255, 0.9);\n  font-size: var(--font-size-xs);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  display: none;\n}\n\n/* ==========================================================================\n   SMART COLLECTIONS STYLES\n   ========================================================================== */\n\n.smart-collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-fast);\n  position: relative;\n  overflow: hidden;\n}\n\n.smart-collection-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, #8b5cf6, #3b82f6, #10b981);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n}\n\n.smart-collection-card:hover::before {\n  opacity: 1;\n}\n\n.smart-collection-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  width: 100%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.smart-collection-header:hover {\n  background: var(--color-gray-50);\n}\n\n.smart-collection-icon {\n  font-size: var(--font-size-lg);\n  min-width: 24px;\n  text-align: center;\n}\n\n.smart-collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.smart-collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-1);\n}\n\n.smart-collection-name {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.smart-collection-badges {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.ai-badge {\n  color: var(--color-primary);\n  opacity: 0.8;\n}\n\n.auto-update-badge {\n  font-size: 10px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  background: var(--color-success);\n  color: white;\n  padding: 2px 6px;\n  border-radius: var(--radius-full);\n  line-height: 1;\n}\n\n.smart-collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin: 0;\n  line-height: 1.4;\n}\n\n.smart-collection-updated {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  margin-top: var(--space-1);\n  display: block;\n}\n\n.smart-collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.smart-collection-count {\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 32px;\n  text-align: center;\n}\n\n.refresh-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.refresh-button:hover:not(:disabled) {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.refresh-button .spinning {\n  animation: spin 1s linear infinite;\n}\n\n.smart-collection-content {\n  border-top: 1px solid var(--ui-border);\n  background: var(--color-gray-50);\n}\n\n.smart-collection-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.smart-collection-loading .loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid var(--color-gray-200);\n  border-top: 2px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.empty-smart-collection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n.empty-smart-collection .empty-icon {\n  color: var(--color-primary);\n  opacity: 0.6;\n  margin-bottom: var(--space-3);\n}\n\n.empty-smart-collection p {\n  font-weight: 500;\n  margin-bottom: var(--space-2);\n  color: var(--ui-text-primary);\n}\n\n.empty-subtitle {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.smart-collection-links {\n  padding: var(--space-3);\n}\n\n.smart-collection-links .link-card {\n  margin-bottom: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.smart-collection-links .link-card:last-child {\n  margin-bottom: 0;\n}\n\n/* Smart Collections Section Header */\n.smart-collections-section .section-header {\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  color: white;\n  border: none;\n}\n\n.smart-collections-section .section-header:hover {\n  background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));\n}\n\n.smart-collections-section .section-header .count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n/* Animation for smart collection expansion */\n.smart-collection-card.expanded {\n  box-shadow: var(--shadow-md);\n}\n\n.smart-collection-card.expanded .smart-collection-header {\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n/* Responsive adjustments for smart collections */\n@media (max-width: 480px) {\n  .smart-collection-header {\n    padding: var(--space-3);\n  }\n  \n  .smart-collection-name {\n    font-size: var(--font-size-sm);\n  }\n  \n  .smart-collection-description {\n    font-size: var(--font-size-xs);\n  }\n  \n  .smart-collection-actions {\n    gap: var(--space-1);\n  }\n  \n  .auto-update-badge {\n    font-size: 8px;\n    padding: 1px 4px;\n  }\n}\n\n/* ==========================================================================\n   SAVE PROMPT MODAL STYLES\n   ========================================================================== */\n\n.save-prompt-modal {\n  max-width: 600px;\n  width: 95%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.save-prompt-modal .modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: var(--space-2);\n}\n\n.save-prompt-modal .modal-footer {\n  flex-shrink: 0;\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-4);\n  margin-top: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n/* Custom scrollbar for save prompt modal */\n.save-prompt-modal .modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-track {\n  background: var(--color-gray-100);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n.save-prompt-link-preview {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-3);\n  margin-bottom: var(--space-4);\n}\n\n.link-preview-title {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n  line-height: 1.4;\n}\n\n.link-preview-url {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-reasons-section {\n  margin-bottom: var(--space-5);\n}\n\n.save-reasons-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.save-reasons-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: var(--space-3);\n}\n\n.save-reason-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-align: left;\n  width: 100%;\n}\n\n.save-reason-card:hover {\n  border-color: var(--color-primary);\n  background: var(--color-gray-50);\n}\n\n.save-reason-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 8%);\n  box-shadow: 0 0 0 1px var(--color-primary);\n}\n\n.save-reason-icon {\n  color: var(--color-primary);\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.save-reason-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.save-reason-label {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.save-reason-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.4;\n}\n\n.custom-reason-section {\n  margin-bottom: var(--space-5);\n}\n\n.custom-reason-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.custom-reason-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  resize: vertical;\n  min-height: 80px;\n  font-family: inherit;\n}\n\n.custom-reason-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.custom-reason-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.suggested-tags-section {\n  margin-bottom: var(--space-5);\n}\n\n.suggested-tags-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.suggested-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.suggested-tag {\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  background: var(--ui-element-background);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.suggested-tag:hover {\n  border-color: var(--color-primary);\n  color: var(--ui-text-primary);\n}\n\n.suggested-tag.selected {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n  color: white;\n}\n\n.save-prompt-tip {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-prompt-tip svg {\n  color: var(--color-warning);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for save prompt modal */\n@media (max-width: 480px) {\n  .save-prompt-modal {\n    max-width: 95%;\n    margin: var(--space-2);\n    max-height: 95vh;\n  }\n  \n  .save-reasons-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .save-reason-card {\n    padding: var(--space-2);\n  }\n  \n  .suggested-tags {\n    justify-content: center;\n  }\n  \n  .save-prompt-modal .modal-body {\n    padding-right: var(--space-1);\n  }\n}\n\n/* ==========================================================================\n   ACTIVITY TRACKER STYLES\n   ========================================================================== */\n\n.activity-tracker-modal {\n  max-width: 650px;\n  width: 95%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.activity-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.activity-loading .loading-spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.streak-section {\n  margin-bottom: var(--space-6);\n}\n\n.streak-card {\n  display: flex;\n  align-items: center;\n  gap: var(--space-4);\n  padding: var(--space-5);\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  border-radius: var(--radius-xl);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.streak-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n  pointer-events: none;\n}\n\n.streak-icon {\n  flex-shrink: 0;\n}\n\n.flame-active {\n  color: #ffd700;\n  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.5));\n}\n\n.flame-inactive {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.streak-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.streak-number {\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: var(--space-1);\n}\n\n.streak-label {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n  opacity: 0.9;\n}\n\n.streak-message {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.4;\n}\n\n.best-streak {\n  position: absolute;\n  top: var(--space-3);\n  right: var(--space-3);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: var(--space-3);\n  margin-bottom: var(--space-6);\n}\n\n.stat-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  transition: all var(--transition-fast);\n}\n\n.stat-card:hover {\n  border-color: var(--color-primary);\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n}\n\n.stat-icon {\n  color: var(--color-primary);\n  margin-bottom: var(--space-2);\n}\n\n.stat-number {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 500;\n}\n\n.weekly-activity {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-6);\n  text-align: center;\n}\n\n.weekly-activity h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.weekly-stat {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: var(--space-2);\n}\n\n.weekly-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.weekly-label {\n  font-size: var(--font-size-base);\n  color: var(--ui-text-secondary);\n}\n\n.recent-activities {\n  margin-bottom: var(--space-6);\n}\n\n.recent-activities h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.no-activities {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n}\n\n.no-activities p {\n  font-weight: 500;\n  margin: var(--space-2) 0;\n  color: var(--ui-text-primary);\n}\n\n.no-activities span {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n}\n\n.activities-list {\n  space-y: var(--space-2);\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n}\n\n.activity-item:hover {\n  background: var(--color-gray-50);\n}\n\n.activity-icon {\n  flex-shrink: 0;\n}\n\n.activity-icon.save { color: var(--color-success); }\n.activity-icon.read { color: var(--color-primary); }\n.activity-icon.highlight { color: var(--color-warning); }\n.activity-icon.organize { color: #8b5cf6; }\n.activity-icon.search { color: var(--ui-text-secondary); }\n.activity-icon.default { color: var(--ui-text-tertiary); }\n\n.activity-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.activity-description {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.activity-time {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n}\n\n.motivation-section {\n  margin-top: var(--space-4);\n}\n\n.motivation-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  color: white;\n}\n\n.motivation-content h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n}\n\n.motivation-content p {\n  font-size: var(--font-size-sm);\n  line-height: 1.5;\n  opacity: 0.9;\n}\n\n.activity-error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* Responsive adjustments for activity tracker */\n@media (max-width: 480px) {\n  .activity-tracker-modal {\n    max-width: 95%;\n    margin: var(--space-4);\n  }\n  \n  .streak-card {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--space-3);\n  }\n  \n  .best-streak {\n    position: static;\n    margin-top: var(--space-2);\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .stat-card {\n    padding: var(--space-3);\n  }\n  \n  .stat-number {\n    font-size: var(--font-size-xl);\n  }\n  \n  .weekly-number {\n    font-size: var(--font-size-2xl);\n  }\n}\n\n/* ==========================================================================\n   DIGEST SETTINGS COMPONENT\n   ========================================================================== */\n\n.digest-settings {\n  padding: 1rem 0;\n}\n\n.digest-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  margin-bottom: 2rem;\n}\n\n.digest-header-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.digest-icon {\n  opacity: 0.9;\n}\n\n.digest-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.digest-header p {\n  margin: 0.25rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.digest-config {\n  space-y: 2rem;\n}\n\n.digest-config .setting-group {\n  margin-bottom: 2rem;\n}\n\n.digest-config h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 0.5rem;\n}\n\n.digest-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.digest-actions .button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.digest-preview {\n  background: #f8fafc;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.digest-preview h4 {\n  margin: 0 0 1rem;\n  color: #1f2937;\n  font-size: 1.125rem;\n}\n\n.preview-content {\n  space-y: 1rem;\n}\n\n.preview-header {\n  text-align: center;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.preview-header h5 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.preview-header p {\n  margin: 0.5rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.preview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.preview-stat {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-stat .stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #667eea;\n  line-height: 1;\n}\n\n.preview-stat .stat-label {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n}\n\n.preview-sections {\n  space-y: 1rem;\n}\n\n.preview-section {\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-section h6 {\n  margin: 0 0 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.preview-section p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.preview-ai-summary {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #0ea5e9;\n}\n\n.preview-ai-summary em {\n  font-size: 0.875rem;\n  color: #0369a1;\n}\n\n.preview-insights {\n  padding: 1rem;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border-radius: 8px;\n  border: 1px solid #bae6fd;\n  margin-top: 1rem;\n}\n\n.preview-insights h6 {\n  margin: 0 0 0.5rem;\n  color: #0369a1;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.preview-insights p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #075985;\n}\n\n.digest-message {\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.digest-message.success {\n  background: #dcfce7;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.digest-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n} \n\n/* Analytics Dashboard Styles */\n.analytics-dashboard {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.dashboard-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.dashboard-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.timeframe-selector {\n  display: flex;\n  gap: 4px;\n  background: #f3f4f6;\n  border-radius: 6px;\n  padding: 2px;\n}\n\n.timeframe-selector button {\n  padding: 6px 12px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.timeframe-selector button.active {\n  background: white;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.dashboard-content {\n  padding: 16px;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.stat-icon {\n  color: #6366f1;\n  margin-bottom: 8px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #111827;\n  margin-bottom: 4px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insights-section,\n.recommendations-section {\n  margin-bottom: 24px;\n}\n\n.insights-section h3,\n.recommendations-section h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.insight-cards,\n.recommendation-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.insight-card,\n.recommendation-card {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 6px;\n  border-left: 3px solid #6366f1;\n}\n\n.recommendation-card {\n  border-left-color: #10b981;\n}\n\n.dashboard-loading,\n.dashboard-empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.empty-icon {\n  color: #9ca3af;\n  margin-bottom: 16px;\n}\n\n/* AI Insights Styles */\n.ai-insights {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.insights-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.insights-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.refresh-button {\n  padding: 8px;\n  border: 1px solid #e5e7eb;\n  background: white;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.refresh-button:hover {\n  background: #f9fafb;\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.spinning {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.insights-tabs {\n  display: flex;\n  border-bottom: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n  position: sticky;\n  top: 73px;\n  z-index: 99;\n}\n\n.insights-tabs .tab {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  padding: 12px 8px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 14px;\n  color: var(--ui-text-primary);\n  border-bottom: 2px solid transparent;\n}\n\n.insights-tabs .tab:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.insights-tabs .tab.active {\n  color: var(--color-primary);\n  border-bottom-color: var(--color-primary);\n  background: var(--color-primary-light);\n}\n\n.insights-tabs .count {\n  background: var(--color-primary);\n  color: var(--color-white);\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 10px;\n  min-width: 18px;\n  text-align: center;\n}\n\n.insights-content {\n  padding: 16px;\n}\n\n.quick-insights {\n  margin-bottom: 24px;\n}\n\n.quick-insights h3 {\n  margin-bottom: 12px;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n}\n\n.recent-items {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.recent-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  font-size: 14px;\n  color: var(--ui-text-primary);\n}\n\n.recent-item:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n}\n\n.recent-item:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.insights-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.insight-card,\n.flashcard,\n.connection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.insight-header,\n.flashcard-header,\n.connection-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.insight-type {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insight-rating {\n  display: flex;\n  gap: 2px;\n}\n\n.star {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--color-gray-300);\n  transition: color 0.2s;\n}\n\n.star.filled {\n  color: var(--color-warning);\n}\n\n.insight-content {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background: var(--ui-element-background);\n  padding: var(--space-3);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n  margin-top: var(--space-2);\n}\n\n.insight-meta {\n  margin-top: var(--space-2);\n  display: flex;\n  gap: var(--space-2);\n  align-items: center;\n}\n\n.difficulty {\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  color: var(--ui-text-primary);\n  background: var(--color-gray-100);\n}\n\n.difficulty.easy {\n  background: var(--color-success);\n  color: var(--color-white);\n}\n\n.difficulty.medium {\n  background: var(--color-warning);\n  color: var(--color-white);\n}\n\n.difficulty.hard {\n  background: var(--color-danger);\n  color: var(--color-white);\n}\n\n.confidence {\n  padding: var(--space-1) var(--space-2);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n}\n\n.flashcard-content .question {\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.flashcard-content .answer {\n  color: var(--ui-text-secondary);\n}\n\n.relationship {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: capitalize;\n}\n\n.relationship.related {\n  background: #dbeafe;\n  color: #1e40af;\n}\n\n.relationship.supports {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.relationship.contradicts {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.relationship.cites {\n  background: #e0e7ff;\n  color: #3730a3;\n}\n\n.relationship.builds-on {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.strength {\n  font-size: 12px;\n  color: var(--ui-text-secondary);\n}\n\n.connection-target {\n  font-size: 14px;\n  margin-bottom: 4px;\n}\n\n.connection-note {\n  font-size: 12px;\n  color: var(--ui-text-secondary);\n  font-style: italic;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: var(--ui-text-secondary);\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: var(--ui-text-primary);\n}\n\n/* Action buttons styling */\n.analytics-button,\n.ai-insights-button {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.analytics-button:hover,\n.ai-insights-button:hover {\n  background: #e5e7eb;\n}\n\n.ai-insights-button {\n  background: #f0f0ff;\n  border-color: #c7d2fe;\n  color: #4338ca;\n}\n\n.ai-insights-button:hover {\n  background: #e0e7ff;\n}\n\n/* ==========================================================================\n   COMPACT VIEW STYLES\n   ========================================================================== */\n\n/* View Toggle Controls */\n.view-toggle-container {\n  padding: var(--space-2) var(--space-4);\n  border-bottom: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n}\n\n.view-toggle {\n  display: flex;\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  padding: var(--space-1);\n  gap: var(--space-1);\n}\n\n.view-toggle-btn {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--space-2);\n  padding: var(--space-2) var(--space-3);\n  border: none;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n  background: transparent;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.view-toggle-btn.active {\n  background: var(--color-white);\n  color: var(--ui-text-primary);\n  box-shadow: var(--shadow-sm);\n}\n\n.view-toggle-btn:hover:not(.active) {\n  color: var(--ui-text-primary);\n  background: var(--color-gray-200);\n}\n\n/* Link Card Compact View */\n.link-card.compact {\n  padding: 0;\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  box-shadow: none;\n  border: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n  transition: all var(--transition-fast);\n}\n\n.link-card.compact:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-sm);\n  transform: none;\n}\n\n.link-card-compact {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  cursor: pointer;\n}\n\n.link-card-compact-main {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-1);\n}\n\n.link-card-compact-title {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.3;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  cursor: pointer;\n  transition: color var(--transition-fast);\n}\n\n.link-card-compact-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-compact-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  flex-wrap: wrap;\n}\n\n.link-card-compact-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  flex-shrink: 0;\n}\n\n.action-button-compact {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n}\n\n.action-button-compact:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.category-badge-compact {\n  display: inline-flex;\n  align-items: center;\n  padding: var(--space-1) var(--space-2);\n  background: var(--color-gray-200);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  text-transform: capitalize;\n  white-space: nowrap;\n}\n\n.link-tags-compact {\n  display: flex;\n  gap: var(--space-1);\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.link-tag-compact {\n  display: inline-flex;\n  align-items: center;\n  padding: var(--space-1) var(--space-2);\n  background: var(--color-gray-200);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  white-space: nowrap;\n}\n\n.tag-count {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  font-weight: 500;\n}\n\n/* Inbox Card Compact View */\n.inbox-card.compact {\n  padding: 0;\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  box-shadow: none;\n  border: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n  transition: all var(--transition-fast);\n}\n\n.inbox-card.compact:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-sm);\n  transform: none;\n}\n\n.inbox-card.compact.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-sm);\n}\n\n.inbox-card-compact {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n}\n\n.inbox-card-compact .inbox-card-checkbox {\n  padding-top: 0;\n}\n\n.inbox-card-compact .inbox-card-checkbox input[type="checkbox"] {\n  width: 16px;\n  height: 16px;\n}\n\n.inbox-card-compact-main {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-1);\n  cursor: pointer;\n}\n\n.inbox-card-compact-title {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.3;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  transition: color var(--transition-fast);\n}\n\n.inbox-card-compact-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.inbox-card-compact-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  flex-wrap: wrap;\n}\n\n.inbox-card-compact-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for compact view */\n@media (max-width: 480px) {\n  .link-card-compact,\n  .inbox-card-compact {\n    padding: var(--space-2);\n    gap: var(--space-2);\n  }\n  \n  .link-card-compact-meta,\n  .inbox-card-compact-meta {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--space-1);\n  }\n  \n  .link-tags-compact {\n    width: 100%;\n  }\n}\n\n/* ==========================================================================\n   IMPROVED LOADING AND ERROR STATES\n   ========================================================================== */\n\n/* Enhanced Loading Spinner */\n.loading-spinner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.loading-spinner.small::before {\n  width: 20px;\n  height: 20px;\n  border-width: 2px;\n}\n\n.loading-spinner.large::before {\n  width: 48px;\n  height: 48px;\n  border-width: 4px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Error States */\n.error-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n  text-align: center;\n}\n\n.error-state-icon {\n  width: 48px;\n  height: 48px;\n  color: var(--color-danger);\n  background: rgba(239, 68, 68, 0.1);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.error-state-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.error-state-message {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n}\n\n.error-state-retry {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.error-state-retry:hover {\n  background: var(--color-primary-dark);\n}\n\n/* Empty States */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n  text-align: center;\n}\n\n.empty-state-icon {\n  width: 64px;\n  height: 64px;\n  color: var(--ui-text-tertiary);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  max-width: 300px;\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  margin-top: var(--space-2);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n}\n\n/* Skeleton Loading States */\n.skeleton {\n  background: linear-gradient(90deg, var(--color-gray-200) 25%, var(--color-gray-100) 50%, var(--color-gray-200) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n}\n\n@keyframes skeleton-loading {\n  0% {\n    background-position: 200% 0;\n  }\n  100% {\n    background-position: -200% 0;\n  }\n}\n\n.skeleton-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.skeleton-title {\n  height: 20px;\n  border-radius: var(--radius-sm);\n  margin-bottom: var(--space-2);\n  width: 75%;\n}\n\n.skeleton-line {\n  height: 14px;\n  border-radius: var(--radius-sm);\n  margin-bottom: var(--space-2);\n}\n\n.skeleton-line.short {\n  width: 60%;\n}\n\n.skeleton-line.medium {\n  width: 80%;\n}\n\n.skeleton-line.long {\n  width: 100%;\n}\n\n/* ===== GENERAL IMPROVEMENTS ===== */\n\n/* Enhanced Accessibility */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n/* Better focus states for keyboard navigation */\n*:focus {\n  outline: 2px solid var(--color-primary);\n  outline-offset: 2px;\n}\n\nbutton:focus,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  outline: 2px solid var(--color-primary);\n  outline-offset: 2px;\n  box-shadow: 0 0 0 4px rgba(79, 70, 229, 0.1);\n}\n\n/* Enhanced button animations */\nbutton,\n.action-button,\n.button {\n  transition: all var(--transition-fast);\n  transform-origin: center;\n}\n\nbutton:active,\n.action-button:active,\n.button:active {\n  transform: scale(0.98);\n}\n\n/* Improved card hover animations */\n.card-base,\n.inbox-card,\n.link-card,\n.collection-card,\n.smart-collection-card {\n  transition: all var(--transition-base);\n}\n\n.card-base:hover,\n.inbox-card:hover,\n.link-card:hover,\n.collection-card:hover,\n.smart-collection-card:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-lg);\n}\n\n/* Enhanced loading states with subtle pulse */\n.loading-pulse {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n}\n\n/* Better scroll behavior */\n.content,\n.modal-body {\n  scroll-behavior: smooth;\n}\n\n/* Enhanced empty states */\n.empty-state {\n  transition: opacity var(--transition-base);\n}\n\n.empty-state:hover {\n  opacity: 0.9;\n}\n\n/* Improved mobile touch targets */\n@media (max-width: 768px) {\n  button,\n  .action-button,\n  .dropdown-menu button {\n    min-height: 44px;\n    min-width: 44px;\n  }\n  \n  .link-card,\n  .inbox-card {\n    padding: var(--space-4);\n  }\n  \n  .search-input {\n    height: 44px;\n  }\n}\n\n/* Dark mode preparations (CSS variables ready) */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --ui-background: var(--color-gray-900);\n    --ui-element-background: var(--color-gray-800);\n    --ui-border: var(--color-gray-700);\n    --ui-border-hover: var(--color-gray-600);\n    --ui-text-primary: var(--color-gray-100);\n    --ui-text-secondary: var(--color-gray-400);\n    --ui-text-tertiary: var(--color-gray-500);\n  }\n}\n\n/* Class-based dark mode for manual toggle */\n.dark-mode {\n  --ui-background: var(--color-gray-900);\n  --ui-element-background: var(--color-gray-800);\n  --ui-border: var(--color-gray-700);\n  --ui-border-hover: var(--color-gray-600);\n  --ui-text-primary: var(--color-gray-100);\n  --ui-text-secondary: var(--color-gray-400);\n  --ui-text-tertiary: var(--color-gray-500);\n  \n  /* Shadows for dark mode */\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.2);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -2px rgba(0, 0, 0, 0.3);\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -4px rgba(0, 0, 0, 0.3);\n  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.3), 0 8px 10px -6px rgba(0, 0, 0, 0.3);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.15);\n  \n  /* Modal overlay for dark mode */\n  .modal-overlay {\n    background: rgba(0, 0, 0, 0.8);\n  }\n  \n  /* Command palette overlay for dark mode */\n  .command-palette-overlay {\n    background: rgba(0, 0, 0, 0.8);\n  }\n  \n  /* Input and form elements in dark mode */\n  .search-input,\n  .form-group input[type="text"],\n  .form-group textarea,\n  .custom-reason-input,\n  .form-control-sidebar {\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    border-color: var(--ui-border);\n  }\n  \n  .search-input:focus,\n  .form-group input[type="text"]:focus,\n  .form-group textarea:focus,\n  .custom-reason-input:focus,\n  .form-control-sidebar:focus {\n    background: var(--ui-element-background);\n  }\n  \n  /* Placeholder text in dark mode */\n  .search-input::placeholder,\n  .custom-reason-input::placeholder {\n    color: var(--ui-text-tertiary);\n  }\n  \n  /* Specific adjustments for dark mode */\n  .toggle-slider {\n    background-color: var(--color-gray-600);\n  }\n  \n  .toggle-slider:before {\n    background-color: var(--color-gray-300);\n  }\n  \n  /* Card backgrounds in dark mode */\n  .inbox-card,\n  .link-card,\n  .collection-card,\n  .smart-collection-card {\n    background: var(--ui-element-background);\n    border-color: var(--ui-border);\n  }\n  \n  /* Favicon placeholders in dark mode */\n  .favicon-placeholder {\n    background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  }\n  \n  /* Settings specific dark mode adjustments */\n  .settings-tabs {\n    background: var(--ui-background);\n  }\n  \n  .settings-tab.active {\n    background: var(--ui-element-background);\n  }\n  \n  .stat-card,\n  .stat-card-sidebar {\n    background: var(--ui-background);\n  }\n  \n  /* Digest preview adjustments */\n  .digest-preview {\n    background: var(--ui-background);\n    border-color: var(--ui-border);\n  }\n  \n  .preview-stat,\n  .preview-section {\n    background: var(--ui-element-background);\n    border-color: var(--ui-border);\n  }\n  \n  /* Activity tracker dark mode */\n  .activity-loading {\n    color: var(--ui-text-secondary);\n  }\n  \n  .activity-loading .loading-spinner {\n    border-color: var(--ui-border);\n    border-top-color: var(--color-primary);\n  }\n}\n\n/* Ensure dark mode applies to body when class is present */\nbody.dark-mode {\n  background-color: var(--ui-background);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   FLOATING WINDOW STYLES\n   ========================================================================== */\n\n.floating-window {\n  border-radius: var(--radius-lg);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n  border: 1px solid var(--ui-border);\n  overflow: hidden;\n}\n\n.floating-window .sidepanel {\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n}\n\n.floating-window .header {\n  border-top-left-radius: var(--radius-lg);\n  border-top-right-radius: var(--radius-lg);\n  background: var(--ui-element-background);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n}\n\n.floating-indicator {\n  color: var(--color-primary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  opacity: 0.8;\n}\n\n.header-button.close-button {\n  color: var(--ui-text-secondary);\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.header-button.close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--color-red-500);\n}\n\n.floating-window .content {\n  max-height: calc(100vh - 160px);\n  overflow-y: auto;\n}\n\n.floating-window .search-container {\n  margin: var(--space-3) var(--space-4);\n}\n\n.floating-window .view-toggle-container {\n  margin: 0 var(--space-4) var(--space-3);\n}\n\n/* Dark mode floating window adjustments */\n.dark-mode.floating-window .header-button.close-button:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--color-red-400);\n}`,"",{version:3,sources:["webpack://./src/sidepanel/sidepanel.css"],names:[],mappings:"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",sourcesContent:["/* Modern Reset and Base Styles */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  /* Brand Colors */\n  --brand-hue: 244;\n  --color-primary: hsl(var(--brand-hue), 81%, 59%); /* #4f46e5 */\n  --color-primary-light: hsl(var(--brand-hue), 85%, 66%); /* #6366f1 */\n  --color-primary-dark: hsl(var(--brand-hue), 79%, 53%); /* #4338ca */\n\n  /* Semantic Colors */\n  --color-success: #10b981;\n  --color-warning: #f59e0b;\n  --color-danger: #ef4444;\n  --color-danger-hover: #d92d20;\n\n  /* Neutral Colors (Cool Gray) */\n  --color-white: #ffffff;\n  --color-gray-50: #f8fafc;\n  --color-gray-100: #f1f5f9;\n  --color-gray-200: #e2e8f0;\n  --color-gray-300: #cbd5e1;\n  --color-gray-400: #94a3b8;\n  --color-gray-500: #64748b;\n  --color-gray-600: #475569;\n  --color-gray-700: #334155;\n  --color-gray-800: #1e293b;\n  --color-gray-900: #0f172a;\n\n  /* UI Colors */\n  --ui-background: var(--color-gray-50);\n  --ui-element-background: var(--color-white);\n  --ui-border: var(--color-gray-200);\n  --ui-border-hover: var(--color-gray-300);\n  --ui-text-primary: var(--color-gray-800);\n  --ui-text-secondary: var(--color-gray-500);\n  --ui-text-tertiary: var(--color-gray-400);\n  --ui-text-interactive: var(--color-primary);\n  --ui-text-interactive-hover: var(--color-primary-dark);\n  \n  /* Spacing System (slightly tweaked) */\n  --space-1: 0.25rem; /* 4px */\n  --space-2: 0.5rem;  /* 8px */\n  --space-3: 0.75rem; /* 12px */\n  --space-4: 1rem;    /* 16px */\n  --space-5: 1.5rem;  /* 24px */\n  --space-6: 2rem;    /* 32px */\n  --space-8: 3rem;    /* 48px */\n  --space-10: 4rem;   /* 64px */\n  --space-12: 5rem;   /* 80px */\n  \n  /* Typography */\n  --font-family: Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-base: 0.9375rem; /* 15px */\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-size-2xl: 1.5rem;\n  --font-size-3xl: 2rem;\n  \n  /* Border Radius */\n  --radius-sm: 0.25rem;\n  --radius-md: 0.5rem;\n  --radius-lg: 0.75rem;\n  --radius-xl: 1rem;\n  --radius-full: 9999px;\n  \n  /* Shadows (more subtle) */\n  --shadow-sm: 0 1px 2px 0 rgba(15, 23, 42, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.1), 0 2px 4px -2px rgba(15, 23, 42, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -4px rgba(15, 23, 42, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.1), 0 8px 10px -6px rgba(15, 23, 42, 0.1);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.05);\n\n  /* Transitions */\n  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Z-index */\n  --z-base: 1;\n  --z-sticky: 10;\n  --z-dropdown: 50;\n  --z-modal: 100;\n  --z-overlay: 90;\n}\n\nbody {\n  font-family: var(--font-family);\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background-color: var(--ui-background);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Main Sidepanel Layout */\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: var(--ui-background);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family);\n  overflow: hidden;\n  position: relative;\n}\n\n/* Modern Header Design */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-sticky);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.header-title h1 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  letter-spacing: -0.025em;\n}\n\n.header-icon {\n  color: var(--color-primary);\n  width: 22px;\n  height: 22px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.save-button,\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.save-button {\n  background: var(--color-primary);\n  color: var(--color-white);\n  box-shadow: var(--shadow-sm);\n}\n\n.save-button:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  background: transparent;\n  color: var(--ui-text-secondary);\n}\n\n.tab-sync-button:hover,\n.logout-button:hover,\n.floating-ai-button:hover,\n.sticky-notes-button:hover,\n.screenshot-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n  transform: none;\n}\n\n.floating-ai-button {\n  color: var(--color-primary);\n}\n\n.floating-ai-button:hover {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.sticky-notes-button {\n  color: var(--color-warning);\n}\n\n.sticky-notes-button:hover {\n  background: var(--color-warning);\n  color: var(--color-white);\n}\n\n.screenshot-button {\n  color: #8b5cf6;\n}\n\n.screenshot-button:hover {\n  background: #8b5cf6;\n  color: var(--color-white);\n}\n\n/* Enhanced Search Design */\n.search-container {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-icon {\n  position: absolute;\n  left: var(--space-2);\n  color: var(--ui-text-tertiary);\n  pointer-events: none;\n  z-index: 1;\n  width: 16px;\n  height: 16px;\n}\n\n.search-input {\n  width: 100%;\n  height: 36px;\n  padding: 0 var(--space-3) 0 36px;\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-base);\n  outline: none;\n}\n\n.search-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.search-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.search-clear,\n.search-power-mode {\n  position: absolute;\n  right: var(--space-2);\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.search-clear:hover,\n.search-power-mode:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.search-spinner {\n  position: absolute;\n  right: var(--space-3);\n  color: var(--color-primary);\n  animation: spin 1s linear infinite;\n}\n\n.command-hint-button {\n  position: absolute;\n  right: var(--space-2);\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background-color: transparent;\n  color: var(--ui-text-tertiary);\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-xs);\n  cursor: pointer;\n  border: none;\n  transition: all var(--transition-fast);\n}\n\n.command-hint-button:hover {\n    background-color: var(--color-gray-100);\n    color: var(--ui-text-secondary);\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* ==========================================================================\n   MODAL STYLES\n   ========================================================================== */\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(15, 23, 42, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-overlay);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: var(--ui-element-background);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n  padding: var(--space-6);\n  animation: modal-fade-in 0.2s var(--transition-base);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n@keyframes modal-fade-in {\n  from { opacity: 0; transform: scale(0.95); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--space-4);\n  padding-bottom: var(--space-3);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.modal-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n}\n\n.modal-close-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.modal-close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.modal-body {\n  /* No specific styles needed for the body wrapper itself */\n}\n\n.modal-footer {\n  margin-top: var(--space-5);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n}\n\n/* Modal form elements */\n.form-group {\n    margin-bottom: var(--space-4);\n}\n.form-group label {\n    display: block;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-2);\n}\n.form-group input[type=\"text\"],\n.form-group textarea {\n    width: 100%;\n    padding: var(--space-2) var(--space-3);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    transition: all var(--transition-fast);\n}\n.form-group input[type=\"text\"]:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n}\n\n.button {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-2) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.button:hover {\n    background: var(--color-gray-300);\n}\n.button.primary {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n.button.primary:hover {\n    background: var(--color-primary-dark);\n}\n\n/* ==========================================================================\n   SETTINGS STYLES\n   ========================================================================== */\n\n.settings-modal .modal-content {\n    max-width: 800px; /* Wider for settings */\n    padding: 0;\n    display: flex;\n    overflow: hidden;\n}\n\n.settings-content {\n    display: flex;\n    width: 100%;\n}\n\n.settings-tabs {\n    width: 200px;\n    flex-shrink: 0;\n    padding: var(--space-4);\n    border-right: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n}\n\n.settings-tab {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.settings-tab:hover {\n    color: var(--ui-text-primary);\n    background: var(--color-gray-200);\n}\n.settings-tab.active {\n    color: var(--ui-text-primary);\n    background: var(--color-white);\n    box-shadow: var(--shadow-sm);\n}\n\n.settings-panel {\n    flex: 1;\n    padding: var(--space-5) var(--space-6);\n    overflow-y: auto;\n    max-height: 80vh;\n}\n\n.settings-panel h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.settings-panel p {\n    color: var(--ui-text-secondary);\n    margin-bottom: var(--space-4);\n}\n\n.setting-group {\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--space-5);\n    overflow: hidden;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--space-3) var(--space-4);\n}\n.setting-item:not(:last-child) {\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.setting-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n}\n.setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.setting-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-4);\n    margin-top: var(--space-4);\n}\n.stat-card {\n    background: var(--color-gray-100);\n    padding: var(--space-4);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--ui-border);\n}\n.stat-number {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n.stat-label {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.settings-message {\n    margin-top: var(--space-4);\n    padding: var(--space-3) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}\n.settings-message.success {\n    background-color: hsl(142.1 76.2% 36.3% / 15%);\n    color: hsl(142.1 70.2% 30.3%);\n}\n.settings-message.error {\n    background-color: hsl(0 72.2% 50.6% / 15%);\n    color: hsl(0 62.2% 45.6%);\n}\n\n.settings-button {\n    /* uses .button styles */\n}\n.settings-button.danger {\n    background-color: var(--color-danger);\n    color: var(--color-white);\n}\n.settings-button.danger:hover {\n    background-color: var(--color-danger-hover);\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n}\n.toggle-switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--color-gray-300);\n  transition: .4s;\n  border-radius: var(--radius-full);\n}\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 14px;\n  width: 14px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\ninput:checked + .toggle-slider {\n  background-color: var(--color-primary);\n}\ninput:checked + .toggle-slider:before {\n  transform: translateX(16px);\n}\n\n/* ==========================================================================\n   SIDEBAR SETTINGS STYLES\n   ========================================================================== */\n\n.settings-sidebar {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--ui-element-background);\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n}\n\n.settings-header {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3) var(--space-4);\n    background: var(--ui-element-background);\n    border-bottom: 1px solid var(--ui-border);\n    flex-shrink: 0;\n}\n\n.settings-back-button {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.settings-back-button:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n}\n\n.settings-header h2 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin: 0;\n}\n\n.settings-tabs-horizontal {\n    display: flex;\n    padding: var(--space-2) var(--space-4);\n    background: var(--color-gray-50);\n    border-bottom: 1px solid var(--ui-border);\n    gap: var(--space-1);\n    overflow-x: auto;\n    flex-shrink: 0;\n}\n\n.settings-tab-horizontal {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 40px;\n    height: 40px;\n}\n\n.settings-tab-horizontal:hover {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n}\n\n.settings-tab-horizontal.active {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n\n.settings-content-sidebar {\n    flex: 1;\n    overflow-y: auto;\n    padding: var(--space-4);\n}\n\n.settings-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--space-8);\n    color: var(--ui-text-secondary);\n}\n\n.settings-section {\n    margin-bottom: var(--space-6);\n}\n\n.settings-section h3 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-2);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.account-info {\n    margin-bottom: var(--space-5);\n}\n\n.account-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n}\n\n.account-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n}\n\n.account-value {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid-sidebar {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n    margin-bottom: var(--space-5);\n}\n\n.stat-card-sidebar {\n    background: var(--color-gray-50);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    text-align: center;\n    border: 1px solid var(--ui-border);\n}\n\n.stat-card-sidebar .stat-number {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n\n.stat-card-sidebar .stat-label {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.setting-list {\n    space-y: var(--space-1);\n}\n\n.setting-item-sidebar {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-2);\n    gap: var(--space-3);\n}\n\n.setting-item-sidebar .setting-info {\n    flex: 1;\n    min-width: 0;\n}\n\n.setting-item-sidebar .setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n    margin-bottom: var(--space-1);\n}\n\n.setting-item-sidebar .setting-description {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    line-height: 1.4;\n}\n\n.form-control-sidebar {\n    width: 100%;\n    max-width: 200px;\n    padding: var(--space-2);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    background: var(--ui-element-background);\n    color: var(--ui-text-primary);\n}\n\n.form-control-sidebar:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.button-small {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-1) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-xs);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n    flex-shrink: 0;\n}\n\n.button-small:hover {\n    background: var(--color-gray-300);\n}\n\n.button-small.danger {\n    background: var(--color-danger);\n    color: var(--color-white);\n}\n\n.button-small.danger:hover {\n    background: var(--color-danger-hover);\n}\n\n.setting-actions {\n    margin-top: var(--space-5);\n}\n\n.about-info-sidebar {\n    margin-bottom: var(--space-5);\n}\n\n.app-info-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    margin-bottom: var(--space-3);\n}\n\n.app-logo-sidebar {\n    width: 32px;\n    height: 32px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    border-radius: var(--radius-md);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: var(--font-size-lg);\n}\n\n.app-name {\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-base);\n}\n\n.app-version {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n\n.app-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    line-height: 1.5;\n}\n\n.support-links-sidebar h4 {\n    font-size: var(--font-size-sm);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-3);\n}\n\n.support-link-list {\n    display: flex;\n    flex-direction: column;\n    gap: var(--space-2);\n}\n\n.support-link-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-2);\n    padding: var(--space-2) var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    color: var(--ui-text-secondary);\n    text-decoration: none;\n    font-size: var(--font-size-sm);\n    transition: all var(--transition-fast);\n}\n\n.support-link-sidebar:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n}\n\n/* Mobile responsive adjustments */\n@media (max-width: 480px) {\n    .settings-tabs-horizontal {\n        padding: var(--space-2);\n        gap: var(--space-1);\n    }\n    \n    .settings-tab-horizontal {\n        min-width: 36px;\n        height: 36px;\n        padding: var(--space-1);\n    }\n    \n    .settings-content-sidebar {\n        padding: var(--space-3);\n    }\n    \n    .stats-grid-sidebar {\n        grid-template-columns: 1fr;\n    }\n    \n    .setting-item-sidebar {\n        flex-direction: column;\n        align-items: stretch;\n        gap: var(--space-2);\n    }\n    \n    .form-control-sidebar {\n        max-width: none;\n    }\n}\n\n/* TAG EDITOR */\n.tag-editor {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.tag-editor-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.tag-editor-loading {\n  padding: var(--space-3);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n}\n\n/* COLLECTIONS MENU */\n.collections-menu {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.collections-header {\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  transition: background-color var(--transition-fast);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.collection-option:last-child {\n  border-bottom: none;\n}\n\n.collection-option:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* Inbox Actions */\n.inbox-section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping on small screens */\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-section-title .section-header {\n  padding: 0;\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 20px;\n  text-align: center;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button,\n.inbox-actions select {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button:hover,\n.inbox-actions select:hover {\n  background: var(--color-gray-100);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n}\n\n.inbox-actions select {\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 24 24' stroke='%2394a3b8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='m6 9 6 6 6-6'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right var(--space-2) center;\n  padding-right: var(--space-6);\n}\n\n/* Footer */\n.footer {\n  padding: var(--space-2) var(--space-4);\n  background: var(--ui-element-background);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.footer-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .search-container {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .content {\n    padding: var(--space-2);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-3);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* Content Area */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--space-2) var(--space-3);\n  scroll-behavior: smooth;\n}\n\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n/* Section Headers */\n.section {\n  margin-bottom: var(--space-3);\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-2) 0;\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: color var(--transition-fast);\n  position: relative;\n}\n\n.section-header:hover {\n  color: var(--ui-text-interactive);\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 24px;\n  text-align: center;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.add-collection-button:hover {\n  color: var(--ui-text-interactive);\n  background: var(--color-gray-100);\n  transform: scale(1.1);\n}\n\n.section-content {\n  margin-top: var(--space-2);\n}\n\n/* Modern Card Design Foundation */\n.card-base {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-3);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n}\n\n.card-base:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.card-base::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  opacity: 0;\n  transition: opacity var(--transition-base);\n}\n\n.card-base:hover::before {\n  opacity: 1;\n}\n\n/* Enhanced Favicon System */\n.favicon-container {\n  position: relative;\n  width: 36px;\n  height: 36px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n}\n\n.favicon-container img {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n  transition: transform var(--transition-fast);\n}\n\n.favicon-container:hover img {\n  transform: scale(1.05);\n}\n\n.favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--color-white);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n/* Domain Color System */\n.domain-github { background: linear-gradient(135deg, #24292e, #586069); }\n.domain-stackoverflow { background: linear-gradient(135deg, #f48024, #fe7a15); }\n.domain-medium { background: linear-gradient(135deg, #00ab6c, #00d084); }\n.domain-youtube { background: linear-gradient(135deg, #ff0000, #cc0000); }\n.domain-twitter { background: linear-gradient(135deg, #1da1f2, #0d8bd9); }\n.domain-linkedin { background: linear-gradient(135deg, #0077b5, #005885); }\n.domain-reddit { background: linear-gradient(135deg, #ff4500, #ff6500); }\n.domain-dev { background: linear-gradient(135deg, #0a0a0a, #2d2d2d); }\n\n/* Typography Improvements */\n.link-title,\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  line-height: 1.4;\n  margin-bottom: var(--space-1);\n  cursor: pointer;\n  transition: color var(--transition-fast);\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.link-title:hover,\n.inbox-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-meta,\n.inbox-card-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-bottom: var(--space-2);\n}\n\n.link-domain {\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n}\n\n.link-date::before {\n  content: '•';\n  margin: 0 var(--space-2);\n  color: var(--ui-text-tertiary);\n}\n\n/* Action Buttons */\n.action-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Enhanced Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: fixed;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: 1000;\n  min-width: 180px;\n  padding: var(--space-1);\n  margin-top: 0;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu button.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-10);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner {\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-primary);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n/* Empty States */\n.empty-state {\n  text-align: center;\n  padding: var(--space-10) var(--space-4);\n  color: var(--ui-text-secondary);\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--color-gray-300);\n  margin-bottom: var(--space-4);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  max-width: 300px;\n  margin: 0 auto var(--space-4);\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n/* ==========================================================================\n   MODERN CARD SYSTEM - COMPLETE REDESIGN\n   ========================================================================== */\n\n/* ===== INBOX CARD STYLES ===== */\n.inbox-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.inbox-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.inbox-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-md);\n}\n\n.inbox-card-content {\n  padding: var(--space-3);\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-checkbox {\n  padding-top: 5px; /* Align with text */\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"] {\n  width: 18px;\n  height: 18px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:hover {\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: 0px;\n  left: 3px;\n  color: var(--color-white);\n  font-size: 12px;\n  font-weight: 700;\n}\n\n.inbox-card-main-content { /* New wrapper */\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.inbox-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.inbox-card-body {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n}\n\n.inbox-card-domain {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 400;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.inbox-card-link,\n.inbox-card-menu-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--ui-text-secondary);\n  background: transparent;\n}\n\n.inbox-card-link:hover,\n.inbox-card-menu-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n/* Let dropdowns be handled by the global dropdown styles */\n.inbox-card-menu,\n.inbox-card-submenu {\n  /* Styles are now handled by .dropdown-menu */\n  display: none; /* Hide if not actively shown by JS */\n}\n\n.inbox-card-summary,\n.inbox-card-note {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  border-left: 3px solid var(--color-gray-300);\n}\n\n.inbox-card-summary p,\n.inbox-card-note p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.inbox-card-highlights {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.highlights-toggle {\n  background: none;\n  border: none;\n  color: var(--ui-text-interactive);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n  padding: var(--space-1) 0;\n}\n\n.highlights-toggle:hover {\n  color: var(--ui-text-interactive-hover);\n}\n\n.highlights-chevron {\n  transition: transform var(--transition-fast);\n  font-size: 10px;\n}\n\n.highlights-chevron.expanded {\n  transform: rotate(180deg);\n}\n\n/* ===== LINK CARD STYLES ===== */\n.link-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.link-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.link-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n}\n\n.link-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.link-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.link-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.link-card-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-card-info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.link-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.link-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-meta {\n  margin-bottom: var(--space-3);\n}\n\n.link-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n/* TAG STYLES */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-top: var(--space-3);\n}\n\n.link-tag {\n  background: hsl(var(--brand-hue) 81% 59% / 10%);\n  color: var(--ui-text-interactive);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 3px var(--space-2);\n  border-radius: var(--radius-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: none;\n}\n\n.link-tag:hover {\n  background: hsl(var(--brand-hue) 81% 59% / 20%);\n}\n\n/* CATEGORY BADGE */\n.link-category {\n  margin-top: var(--space-3);\n}\n\n.category-badge {\n  background: var(--color-gray-600);\n  color: var(--color-white);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n/* NOTES AND SUMMARIES */\n.link-note,\n.link-summary {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n}\n\n.link-note strong,\n.link-summary strong {\n  color: var(--ui-text-primary);\n  font-weight: 600;\n}\n\n/* HIGHLIGHTS SECTION */\n.link-highlights-section {\n  margin-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-3);\n}\n\n.highlights-header {\n  margin-bottom: var(--space-3);\n}\n\n/* ===== COLLECTION CARD STYLES ===== */\n.collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3) var(--space-4);\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: background-color var(--transition-fast);\n}\n\n.collection-card.expanded .collection-header {\n   border-bottom: 1px solid var(--ui-border);\n}\n\n\n.collection-header:hover {\n  background-color: var(--color-gray-50);\n}\n\n.collection-icon {\n  color: var(--ui-text-tertiary);\n}\n\n.collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-weight: 600;\n}\n\n.public-indicator {\n    color: var(--ui-text-tertiary);\n}\n\n.collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-top: 2px;\n  display: block;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.collection-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n}\n\n.collection-content {\n  padding: var(--space-4);\n}\n\n.empty-collection {\n  padding: var(--space-4);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* ===== SEARCH RESULT CARD STYLES ===== */\n.search-result-card {\n  position: relative;\n  margin-bottom: var(--space-4);\n  border: 1px dashed var(--ui-border-hover);\n  border-radius: var(--radius-xl);\n  padding-top: var(--space-5);\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: var(--space-2);\n  right: var(--space-4);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  color: var(--ui-text-tertiary);\n  background-color: var(--color-gray-100);\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.search-headline {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  padding: 0 var(--space-4) var(--space-3);\n  border-bottom: 1px dashed var(--ui-border);\n  margin-bottom: var(--space-3);\n}\n\n.search-headline em {\n  font-style: normal;\n  background-color: hsl(var(--brand-hue) 81% 59% / 15%);\n  color: var(--ui-text-interactive-hover);\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.search-result-card .link-card {\n    border: none;\n    margin-bottom: 0;\n    box-shadow: none;\n}\n.search-result-card .link-card:hover {\n    transform: none;\n    box-shadow: none;\n}\n\n.about-info {\n    margin-bottom: var(--space-5);\n}\n.app-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-4);\n    margin-bottom: var(--space-4);\n}\n.app-logo {\n    width: 48px;\n    height: 48px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n}\n.app-name {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n}\n.app-version {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.support-links h4 {\n    font-size: var(--font-size-base);\n    font-weight: 600;\n    margin-bottom: var(--space-3);\n}\n.link-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n}\n.support-link {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    background: var(--color-gray-50);\n    border: 1px solid var(--ui-border);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n    transition: all var(--transition-fast);\n}\n.support-link:hover {\n    background: var(--color-gray-100);\n    border-color: var(--ui-border-hover);\n}\n\n/* ==========================================================================\n   COMMAND PALETTE STYLES\n   ========================================================================== */\n.command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.6);\n    display: flex;\n    align-items: flex-start; /* Align to top */\n    justify-content: center;\n    padding-top: 15vh; /* Push it down a bit */\n    z-index: var(--z-overlay);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n}\n.command-palette {\n    background: var(--ui-element-background);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-xl);\n    width: 90%;\n    max-width: 600px;\n    overflow: hidden;\n    animation: command-palette-fade-in 0.2s var(--transition-base);\n}\n@keyframes command-palette-fade-in {\n  from { opacity: 0; transform: translateY(-10px) scale(0.98); }\n  to { opacity: 1; transform: translateY(0) scale(1); }\n}\n\n.command-palette-header {\n    padding: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n.command-palette-search-icon {\n    position: absolute;\n    left: var(--space-3);\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-input {\n    width: 100%;\n    height: 40px;\n    padding: 0 var(--space-3) 0 var(--space-6);\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: var(--font-size-lg);\n    color: var(--ui-text-primary);\n}\n\n.command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: var(--space-2);\n}\n\n.command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background-color var(--transition-fast);\n}\n.command-palette-item.selected {\n    background-color: var(--color-gray-100);\n}\n.command-palette-item-icon {\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n}\n.command-palette-item-title {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.command-palette-item-subtitle {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-action {\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-empty {\n    text-align: center;\n    padding: var(--space-6);\n    color: var(--ui-text-secondary);\n}\n\n.command-palette-footer {\n    padding: var(--space-2) var(--space-3);\n    border-top: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n.command-palette-tips {\n    display: flex;\n    gap: var(--space-4);\n}\n.command-palette-tips kbd {\n    background: var(--color-white);\n    border: 1px solid var(--ui-border);\n    padding: 2px 4px;\n    border-radius: var(--radius-sm);\n    box-shadow: var(--shadow-sm);\n}\n\n@keyframes card-fade-in {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* ==========================================================================\n   TAG FILTERS COMPONENT\n   ========================================================================== */\n\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n  margin-bottom: var(--space-2);\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n.tag-filter {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.tag-filter.active {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.tag-filter.active:hover {\n  background: var(--color-primary-dark);\n  border-color: var(--color-primary-dark);\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: var(--color-white);\n  color: var(--ui-text-secondary);\n  font-size: 10px;\n  font-weight: 600;\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  min-width: 16px;\n  text-align: center;\n  margin-left: var(--space-1);\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--color-primary);\n}\n\n.tag-filter-more {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n  font-style: italic;\n  padding: var(--space-1) var(--space-2);\n}\n\n.tag-filter-skeleton {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-sm);\n  font-style: italic;\n  padding: var(--space-2);\n}\n\n/* ==========================================================================\n   TAG INPUT COMPONENT\n   ========================================================================== */\n\n.tag-input-container {\n  position: relative;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-2);\n  min-height: 40px;\n  transition: all var(--transition-fast);\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  padding: 2px var(--space-2);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  animation: tag-chip-appear 0.2s ease-out;\n}\n\n@keyframes tag-chip-appear {\n  from { opacity: 0; transform: scale(0.8); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.tag-name {\n  white-space: nowrap;\n}\n\n.tag-remove {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: 1px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n  margin-left: 2px;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.tag-input {\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  flex: 1;\n  min-width: 100px;\n  padding: 2px 0;\n}\n\n.tag-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.tag-input:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tag-input-icon {\n  color: var(--ui-text-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  left: 0;\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  max-height: 200px;\n  overflow-y: auto;\n  padding: var(--space-1);\n}\n\n.tag-suggestion {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background: var(--color-gray-100);\n}\n\n.tag-suggestion-color {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.tag-suggestion-count {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS COMPONENT\n   ========================================================================== */\n\n.ai-suggestions {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  overflow: hidden;\n  box-shadow: var(--shadow-sm);\n  animation: ai-suggestions-appear 0.3s ease-out;\n}\n\n@keyframes ai-suggestions-appear {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.ai-suggestions.loading {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-suggestions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.ai-suggestions.loading .ai-suggestions-header {\n  background: var(--color-gray-50);\n  -webkit-backdrop-filter: none;\n  backdrop-filter: none;\n}\n\n.ai-loading-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--ui-text-primary);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n}\n\n.ai-suggestions.loading .ai-loading-content {\n  color: var(--ui-text-secondary);\n}\n\n.ai-icon {\n  width: 14px;\n  height: 14px;\n}\n\n.ai-icon.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.ai-suggestions-close {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions.loading .ai-suggestions-close {\n  color: var(--ui-text-tertiary);\n}\n\n.ai-suggestions-close:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions.loading .ai-suggestions-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions-toggle {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  margin-right: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-toggle:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions-content {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n}\n\n.ai-suggestion-section {\n  margin-bottom: var(--space-4);\n}\n\n.ai-suggestion-section:last-child {\n  margin-bottom: 0;\n}\n\n.suggestion-section-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-category-suggestions,\n.ai-tag-suggestions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.ai-category-chip,\n.ai-tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.ai-category-chip:hover,\n.ai-tag-chip:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.ai-category-chip.selected,\n.ai-tag-chip.selected {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.suggestion-name {\n  font-weight: 500;\n}\n\n.confidence-indicator {\n  font-size: 9px;\n  font-weight: 700;\n  color: var(--color-white);\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  min-width: 20px;\n  text-align: center;\n}\n\n.selected-icon {\n  margin-left: var(--space-1);\n}\n\n.ai-topics-section {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.ai-topics-label {\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-detected-topics {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n}\n\n.ai-topic-pill {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.ai-suggestions-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n  margin-top: var(--space-4);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.ai-action-btn {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.ai-action-btn:hover {\n  background: var(--color-gray-300);\n}\n\n.ai-action-btn.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.ai-action-btn.primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-action-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ai-action-btn.secondary {\n  background: transparent;\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-action-btn.secondary:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   ENHANCED DROPDOWN MENU STYLES\n   ========================================================================== */\n\n.dropdown-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu-item:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu-item:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.dropdown-menu-item.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu-item.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* ==========================================================================\n   INBOX CARD TAG STYLES\n   ========================================================================== */\n\n.inbox-card-tags {\n  margin-top: var(--space-3);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n/* ==========================================================================\n   ENHANCED BUTTON STYLES\n   ========================================================================== */\n\n.action-button {\n  background: none;\n  border: 1px solid transparent;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.action-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--color-gray-100);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n  border-radius: inherit;\n}\n\n.action-button:hover {\n  color: var(--ui-text-primary);\n  border-color: var(--ui-border);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.action-button:hover::before {\n  opacity: 1;\n}\n\n.action-button:active {\n  transform: translateY(0);\n  box-shadow: var(--shadow-inner);\n}\n\n.action-button > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Primary action button variant */\n.action-button.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n}\n\n.action-button.primary::before {\n  background: var(--color-primary-dark);\n}\n\n.action-button.primary:hover {\n  border-color: var(--color-primary-dark);\n  color: var(--color-white);\n}\n\n/* Danger action button variant */\n.action-button.danger {\n  color: var(--color-danger);\n}\n\n.action-button.danger::before {\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.action-button.danger:hover {\n  color: var(--color-danger-hover);\n  border-color: var(--color-danger);\n}\n\n/* ==========================================================================\n   SHARE MODAL STYLES\n   ========================================================================== */\n\n.share-link-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--color-gray-50);\n  color: var(--ui-text-primary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.share-link-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.share-link-input:read-only {\n  cursor: pointer;\n}\n\n.share-link-input:read-only:hover {\n  background: var(--color-gray-100);\n}\n\n/* ==========================================================================\n   TAB SYNC STYLES\n   ========================================================================== */\n\n.tab-sync-filters {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.tab-sync-filter-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.tab-sync-filter-row:last-child {\n  margin-bottom: 0;\n}\n\n.tab-sync-filter-checkbox {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:hover {\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: -1px;\n  left: 2px;\n  color: var(--color-white);\n  font-size: 10px;\n  font-weight: 700;\n}\n\n.tab-sync-domain-filter {\n  flex: 1;\n  min-width: 200px;\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.tab-sync-domain-filter:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tab-sync-domain-filter::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n/* ==========================================================================\n   AUTH INPUT STYLES\n   ========================================================================== */\n\n.auth-input {\n  width: 100%;\n  padding: var(--space-3) var(--space-4);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.auth-input:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.auth-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.auth-input:invalid {\n  border-color: var(--color-danger);\n}\n\n.auth-input:invalid:focus {\n  border-color: var(--color-danger);\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS META STYLES\n   ========================================================================== */\n\n.ai-suggestions-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  color: rgba(255, 255, 255, 0.9);\n  font-size: var(--font-size-xs);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  display: none;\n}\n\n/* ==========================================================================\n   SMART COLLECTIONS STYLES\n   ========================================================================== */\n\n.smart-collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-fast);\n  position: relative;\n  overflow: hidden;\n}\n\n.smart-collection-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, #8b5cf6, #3b82f6, #10b981);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n}\n\n.smart-collection-card:hover::before {\n  opacity: 1;\n}\n\n.smart-collection-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  width: 100%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.smart-collection-header:hover {\n  background: var(--color-gray-50);\n}\n\n.smart-collection-icon {\n  font-size: var(--font-size-lg);\n  min-width: 24px;\n  text-align: center;\n}\n\n.smart-collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.smart-collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-1);\n}\n\n.smart-collection-name {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.smart-collection-badges {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.ai-badge {\n  color: var(--color-primary);\n  opacity: 0.8;\n}\n\n.auto-update-badge {\n  font-size: 10px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  background: var(--color-success);\n  color: white;\n  padding: 2px 6px;\n  border-radius: var(--radius-full);\n  line-height: 1;\n}\n\n.smart-collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin: 0;\n  line-height: 1.4;\n}\n\n.smart-collection-updated {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  margin-top: var(--space-1);\n  display: block;\n}\n\n.smart-collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.smart-collection-count {\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 32px;\n  text-align: center;\n}\n\n.refresh-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.refresh-button:hover:not(:disabled) {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.refresh-button .spinning {\n  animation: spin 1s linear infinite;\n}\n\n.smart-collection-content {\n  border-top: 1px solid var(--ui-border);\n  background: var(--color-gray-50);\n}\n\n.smart-collection-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.smart-collection-loading .loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid var(--color-gray-200);\n  border-top: 2px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.empty-smart-collection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n.empty-smart-collection .empty-icon {\n  color: var(--color-primary);\n  opacity: 0.6;\n  margin-bottom: var(--space-3);\n}\n\n.empty-smart-collection p {\n  font-weight: 500;\n  margin-bottom: var(--space-2);\n  color: var(--ui-text-primary);\n}\n\n.empty-subtitle {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.smart-collection-links {\n  padding: var(--space-3);\n}\n\n.smart-collection-links .link-card {\n  margin-bottom: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.smart-collection-links .link-card:last-child {\n  margin-bottom: 0;\n}\n\n/* Smart Collections Section Header */\n.smart-collections-section .section-header {\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  color: white;\n  border: none;\n}\n\n.smart-collections-section .section-header:hover {\n  background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));\n}\n\n.smart-collections-section .section-header .count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n/* Animation for smart collection expansion */\n.smart-collection-card.expanded {\n  box-shadow: var(--shadow-md);\n}\n\n.smart-collection-card.expanded .smart-collection-header {\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n/* Responsive adjustments for smart collections */\n@media (max-width: 480px) {\n  .smart-collection-header {\n    padding: var(--space-3);\n  }\n  \n  .smart-collection-name {\n    font-size: var(--font-size-sm);\n  }\n  \n  .smart-collection-description {\n    font-size: var(--font-size-xs);\n  }\n  \n  .smart-collection-actions {\n    gap: var(--space-1);\n  }\n  \n  .auto-update-badge {\n    font-size: 8px;\n    padding: 1px 4px;\n  }\n}\n\n/* ==========================================================================\n   SAVE PROMPT MODAL STYLES\n   ========================================================================== */\n\n.save-prompt-modal {\n  max-width: 600px;\n  width: 95%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.save-prompt-modal .modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: var(--space-2);\n}\n\n.save-prompt-modal .modal-footer {\n  flex-shrink: 0;\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-4);\n  margin-top: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n/* Custom scrollbar for save prompt modal */\n.save-prompt-modal .modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-track {\n  background: var(--color-gray-100);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n.save-prompt-link-preview {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-3);\n  margin-bottom: var(--space-4);\n}\n\n.link-preview-title {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n  line-height: 1.4;\n}\n\n.link-preview-url {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-reasons-section {\n  margin-bottom: var(--space-5);\n}\n\n.save-reasons-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.save-reasons-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: var(--space-3);\n}\n\n.save-reason-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-align: left;\n  width: 100%;\n}\n\n.save-reason-card:hover {\n  border-color: var(--color-primary);\n  background: var(--color-gray-50);\n}\n\n.save-reason-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 8%);\n  box-shadow: 0 0 0 1px var(--color-primary);\n}\n\n.save-reason-icon {\n  color: var(--color-primary);\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.save-reason-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.save-reason-label {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.save-reason-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.4;\n}\n\n.custom-reason-section {\n  margin-bottom: var(--space-5);\n}\n\n.custom-reason-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.custom-reason-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  resize: vertical;\n  min-height: 80px;\n  font-family: inherit;\n}\n\n.custom-reason-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.custom-reason-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.suggested-tags-section {\n  margin-bottom: var(--space-5);\n}\n\n.suggested-tags-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.suggested-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.suggested-tag {\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  background: var(--ui-element-background);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.suggested-tag:hover {\n  border-color: var(--color-primary);\n  color: var(--ui-text-primary);\n}\n\n.suggested-tag.selected {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n  color: white;\n}\n\n.save-prompt-tip {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-prompt-tip svg {\n  color: var(--color-warning);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for save prompt modal */\n@media (max-width: 480px) {\n  .save-prompt-modal {\n    max-width: 95%;\n    margin: var(--space-2);\n    max-height: 95vh;\n  }\n  \n  .save-reasons-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .save-reason-card {\n    padding: var(--space-2);\n  }\n  \n  .suggested-tags {\n    justify-content: center;\n  }\n  \n  .save-prompt-modal .modal-body {\n    padding-right: var(--space-1);\n  }\n}\n\n/* ==========================================================================\n   ACTIVITY TRACKER STYLES\n   ========================================================================== */\n\n.activity-tracker-modal {\n  max-width: 650px;\n  width: 95%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.activity-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.activity-loading .loading-spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.streak-section {\n  margin-bottom: var(--space-6);\n}\n\n.streak-card {\n  display: flex;\n  align-items: center;\n  gap: var(--space-4);\n  padding: var(--space-5);\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  border-radius: var(--radius-xl);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.streak-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n  pointer-events: none;\n}\n\n.streak-icon {\n  flex-shrink: 0;\n}\n\n.flame-active {\n  color: #ffd700;\n  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.5));\n}\n\n.flame-inactive {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.streak-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.streak-number {\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: var(--space-1);\n}\n\n.streak-label {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n  opacity: 0.9;\n}\n\n.streak-message {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.4;\n}\n\n.best-streak {\n  position: absolute;\n  top: var(--space-3);\n  right: var(--space-3);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: var(--space-3);\n  margin-bottom: var(--space-6);\n}\n\n.stat-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  transition: all var(--transition-fast);\n}\n\n.stat-card:hover {\n  border-color: var(--color-primary);\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n}\n\n.stat-icon {\n  color: var(--color-primary);\n  margin-bottom: var(--space-2);\n}\n\n.stat-number {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 500;\n}\n\n.weekly-activity {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-6);\n  text-align: center;\n}\n\n.weekly-activity h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.weekly-stat {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: var(--space-2);\n}\n\n.weekly-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.weekly-label {\n  font-size: var(--font-size-base);\n  color: var(--ui-text-secondary);\n}\n\n.recent-activities {\n  margin-bottom: var(--space-6);\n}\n\n.recent-activities h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.no-activities {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n}\n\n.no-activities p {\n  font-weight: 500;\n  margin: var(--space-2) 0;\n  color: var(--ui-text-primary);\n}\n\n.no-activities span {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n}\n\n.activities-list {\n  space-y: var(--space-2);\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n}\n\n.activity-item:hover {\n  background: var(--color-gray-50);\n}\n\n.activity-icon {\n  flex-shrink: 0;\n}\n\n.activity-icon.save { color: var(--color-success); }\n.activity-icon.read { color: var(--color-primary); }\n.activity-icon.highlight { color: var(--color-warning); }\n.activity-icon.organize { color: #8b5cf6; }\n.activity-icon.search { color: var(--ui-text-secondary); }\n.activity-icon.default { color: var(--ui-text-tertiary); }\n\n.activity-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.activity-description {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.activity-time {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n}\n\n.motivation-section {\n  margin-top: var(--space-4);\n}\n\n.motivation-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  color: white;\n}\n\n.motivation-content h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n}\n\n.motivation-content p {\n  font-size: var(--font-size-sm);\n  line-height: 1.5;\n  opacity: 0.9;\n}\n\n.activity-error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* Responsive adjustments for activity tracker */\n@media (max-width: 480px) {\n  .activity-tracker-modal {\n    max-width: 95%;\n    margin: var(--space-4);\n  }\n  \n  .streak-card {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--space-3);\n  }\n  \n  .best-streak {\n    position: static;\n    margin-top: var(--space-2);\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .stat-card {\n    padding: var(--space-3);\n  }\n  \n  .stat-number {\n    font-size: var(--font-size-xl);\n  }\n  \n  .weekly-number {\n    font-size: var(--font-size-2xl);\n  }\n}\n\n/* ==========================================================================\n   DIGEST SETTINGS COMPONENT\n   ========================================================================== */\n\n.digest-settings {\n  padding: 1rem 0;\n}\n\n.digest-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  margin-bottom: 2rem;\n}\n\n.digest-header-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.digest-icon {\n  opacity: 0.9;\n}\n\n.digest-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.digest-header p {\n  margin: 0.25rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.digest-config {\n  space-y: 2rem;\n}\n\n.digest-config .setting-group {\n  margin-bottom: 2rem;\n}\n\n.digest-config h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 0.5rem;\n}\n\n.digest-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.digest-actions .button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.digest-preview {\n  background: #f8fafc;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.digest-preview h4 {\n  margin: 0 0 1rem;\n  color: #1f2937;\n  font-size: 1.125rem;\n}\n\n.preview-content {\n  space-y: 1rem;\n}\n\n.preview-header {\n  text-align: center;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.preview-header h5 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.preview-header p {\n  margin: 0.5rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.preview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.preview-stat {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-stat .stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #667eea;\n  line-height: 1;\n}\n\n.preview-stat .stat-label {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n}\n\n.preview-sections {\n  space-y: 1rem;\n}\n\n.preview-section {\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-section h6 {\n  margin: 0 0 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.preview-section p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.preview-ai-summary {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #0ea5e9;\n}\n\n.preview-ai-summary em {\n  font-size: 0.875rem;\n  color: #0369a1;\n}\n\n.preview-insights {\n  padding: 1rem;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border-radius: 8px;\n  border: 1px solid #bae6fd;\n  margin-top: 1rem;\n}\n\n.preview-insights h6 {\n  margin: 0 0 0.5rem;\n  color: #0369a1;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.preview-insights p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #075985;\n}\n\n.digest-message {\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.digest-message.success {\n  background: #dcfce7;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.digest-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n} \n\n/* Analytics Dashboard Styles */\n.analytics-dashboard {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.dashboard-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.dashboard-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.timeframe-selector {\n  display: flex;\n  gap: 4px;\n  background: #f3f4f6;\n  border-radius: 6px;\n  padding: 2px;\n}\n\n.timeframe-selector button {\n  padding: 6px 12px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.timeframe-selector button.active {\n  background: white;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.dashboard-content {\n  padding: 16px;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.stat-icon {\n  color: #6366f1;\n  margin-bottom: 8px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #111827;\n  margin-bottom: 4px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insights-section,\n.recommendations-section {\n  margin-bottom: 24px;\n}\n\n.insights-section h3,\n.recommendations-section h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.insight-cards,\n.recommendation-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.insight-card,\n.recommendation-card {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 6px;\n  border-left: 3px solid #6366f1;\n}\n\n.recommendation-card {\n  border-left-color: #10b981;\n}\n\n.dashboard-loading,\n.dashboard-empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.empty-icon {\n  color: #9ca3af;\n  margin-bottom: 16px;\n}\n\n/* AI Insights Styles */\n.ai-insights {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.insights-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.insights-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.refresh-button {\n  padding: 8px;\n  border: 1px solid #e5e7eb;\n  background: white;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.refresh-button:hover {\n  background: #f9fafb;\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.spinning {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.insights-tabs {\n  display: flex;\n  border-bottom: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n  position: sticky;\n  top: 73px;\n  z-index: 99;\n}\n\n.insights-tabs .tab {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  padding: 12px 8px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 14px;\n  color: var(--ui-text-primary);\n  border-bottom: 2px solid transparent;\n}\n\n.insights-tabs .tab:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.insights-tabs .tab.active {\n  color: var(--color-primary);\n  border-bottom-color: var(--color-primary);\n  background: var(--color-primary-light);\n}\n\n.insights-tabs .count {\n  background: var(--color-primary);\n  color: var(--color-white);\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 10px;\n  min-width: 18px;\n  text-align: center;\n}\n\n.insights-content {\n  padding: 16px;\n}\n\n.quick-insights {\n  margin-bottom: 24px;\n}\n\n.quick-insights h3 {\n  margin-bottom: 12px;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n}\n\n.recent-items {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.recent-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  font-size: 14px;\n  color: var(--ui-text-primary);\n}\n\n.recent-item:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n}\n\n.recent-item:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.insights-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.insight-card,\n.flashcard,\n.connection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.insight-header,\n.flashcard-header,\n.connection-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.insight-type {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insight-rating {\n  display: flex;\n  gap: 2px;\n}\n\n.star {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--color-gray-300);\n  transition: color 0.2s;\n}\n\n.star.filled {\n  color: var(--color-warning);\n}\n\n.insight-content {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background: var(--ui-element-background);\n  padding: var(--space-3);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n  margin-top: var(--space-2);\n}\n\n.insight-meta {\n  margin-top: var(--space-2);\n  display: flex;\n  gap: var(--space-2);\n  align-items: center;\n}\n\n.difficulty {\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  color: var(--ui-text-primary);\n  background: var(--color-gray-100);\n}\n\n.difficulty.easy {\n  background: var(--color-success);\n  color: var(--color-white);\n}\n\n.difficulty.medium {\n  background: var(--color-warning);\n  color: var(--color-white);\n}\n\n.difficulty.hard {\n  background: var(--color-danger);\n  color: var(--color-white);\n}\n\n.confidence {\n  padding: var(--space-1) var(--space-2);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n}\n\n.flashcard-content .question {\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.flashcard-content .answer {\n  color: var(--ui-text-secondary);\n}\n\n.relationship {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: capitalize;\n}\n\n.relationship.related {\n  background: #dbeafe;\n  color: #1e40af;\n}\n\n.relationship.supports {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.relationship.contradicts {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.relationship.cites {\n  background: #e0e7ff;\n  color: #3730a3;\n}\n\n.relationship.builds-on {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.strength {\n  font-size: 12px;\n  color: var(--ui-text-secondary);\n}\n\n.connection-target {\n  font-size: 14px;\n  margin-bottom: 4px;\n}\n\n.connection-note {\n  font-size: 12px;\n  color: var(--ui-text-secondary);\n  font-style: italic;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: var(--ui-text-secondary);\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: var(--ui-text-primary);\n}\n\n/* Action buttons styling */\n.analytics-button,\n.ai-insights-button {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.analytics-button:hover,\n.ai-insights-button:hover {\n  background: #e5e7eb;\n}\n\n.ai-insights-button {\n  background: #f0f0ff;\n  border-color: #c7d2fe;\n  color: #4338ca;\n}\n\n.ai-insights-button:hover {\n  background: #e0e7ff;\n}\n\n/* ==========================================================================\n   COMPACT VIEW STYLES\n   ========================================================================== */\n\n/* View Toggle Controls */\n.view-toggle-container {\n  padding: var(--space-2) var(--space-4);\n  border-bottom: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n}\n\n.view-toggle {\n  display: flex;\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  padding: var(--space-1);\n  gap: var(--space-1);\n}\n\n.view-toggle-btn {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--space-2);\n  padding: var(--space-2) var(--space-3);\n  border: none;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n  background: transparent;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.view-toggle-btn.active {\n  background: var(--color-white);\n  color: var(--ui-text-primary);\n  box-shadow: var(--shadow-sm);\n}\n\n.view-toggle-btn:hover:not(.active) {\n  color: var(--ui-text-primary);\n  background: var(--color-gray-200);\n}\n\n/* Link Card Compact View */\n.link-card.compact {\n  padding: 0;\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  box-shadow: none;\n  border: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n  transition: all var(--transition-fast);\n}\n\n.link-card.compact:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-sm);\n  transform: none;\n}\n\n.link-card-compact {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  cursor: pointer;\n}\n\n.link-card-compact-main {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-1);\n}\n\n.link-card-compact-title {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.3;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  cursor: pointer;\n  transition: color var(--transition-fast);\n}\n\n.link-card-compact-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-compact-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  flex-wrap: wrap;\n}\n\n.link-card-compact-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  flex-shrink: 0;\n}\n\n.action-button-compact {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n}\n\n.action-button-compact:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.category-badge-compact {\n  display: inline-flex;\n  align-items: center;\n  padding: var(--space-1) var(--space-2);\n  background: var(--color-gray-200);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  text-transform: capitalize;\n  white-space: nowrap;\n}\n\n.link-tags-compact {\n  display: flex;\n  gap: var(--space-1);\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.link-tag-compact {\n  display: inline-flex;\n  align-items: center;\n  padding: var(--space-1) var(--space-2);\n  background: var(--color-gray-200);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  white-space: nowrap;\n}\n\n.tag-count {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  font-weight: 500;\n}\n\n/* Inbox Card Compact View */\n.inbox-card.compact {\n  padding: 0;\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  box-shadow: none;\n  border: 1px solid var(--ui-border);\n  background: var(--ui-element-background);\n  transition: all var(--transition-fast);\n}\n\n.inbox-card.compact:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-sm);\n  transform: none;\n}\n\n.inbox-card.compact.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-sm);\n}\n\n.inbox-card-compact {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n}\n\n.inbox-card-compact .inbox-card-checkbox {\n  padding-top: 0;\n}\n\n.inbox-card-compact .inbox-card-checkbox input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n}\n\n.inbox-card-compact-main {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--space-1);\n  cursor: pointer;\n}\n\n.inbox-card-compact-title {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.3;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  transition: color var(--transition-fast);\n}\n\n.inbox-card-compact-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.inbox-card-compact-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  flex-wrap: wrap;\n}\n\n.inbox-card-compact-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for compact view */\n@media (max-width: 480px) {\n  .link-card-compact,\n  .inbox-card-compact {\n    padding: var(--space-2);\n    gap: var(--space-2);\n  }\n  \n  .link-card-compact-meta,\n  .inbox-card-compact-meta {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--space-1);\n  }\n  \n  .link-tags-compact {\n    width: 100%;\n  }\n}\n\n/* ==========================================================================\n   IMPROVED LOADING AND ERROR STATES\n   ========================================================================== */\n\n/* Enhanced Loading Spinner */\n.loading-spinner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.loading-spinner.small::before {\n  width: 20px;\n  height: 20px;\n  border-width: 2px;\n}\n\n.loading-spinner.large::before {\n  width: 48px;\n  height: 48px;\n  border-width: 4px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Error States */\n.error-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n  text-align: center;\n}\n\n.error-state-icon {\n  width: 48px;\n  height: 48px;\n  color: var(--color-danger);\n  background: rgba(239, 68, 68, 0.1);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.error-state-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.error-state-message {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n}\n\n.error-state-retry {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.error-state-retry:hover {\n  background: var(--color-primary-dark);\n}\n\n/* Empty States */\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n  text-align: center;\n}\n\n.empty-state-icon {\n  width: 64px;\n  height: 64px;\n  color: var(--ui-text-tertiary);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  max-width: 300px;\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  margin-top: var(--space-2);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n}\n\n/* Skeleton Loading States */\n.skeleton {\n  background: linear-gradient(90deg, var(--color-gray-200) 25%, var(--color-gray-100) 50%, var(--color-gray-200) 75%);\n  background-size: 200% 100%;\n  animation: skeleton-loading 1.5s infinite;\n}\n\n@keyframes skeleton-loading {\n  0% {\n    background-position: 200% 0;\n  }\n  100% {\n    background-position: -200% 0;\n  }\n}\n\n.skeleton-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.skeleton-title {\n  height: 20px;\n  border-radius: var(--radius-sm);\n  margin-bottom: var(--space-2);\n  width: 75%;\n}\n\n.skeleton-line {\n  height: 14px;\n  border-radius: var(--radius-sm);\n  margin-bottom: var(--space-2);\n}\n\n.skeleton-line.short {\n  width: 60%;\n}\n\n.skeleton-line.medium {\n  width: 80%;\n}\n\n.skeleton-line.long {\n  width: 100%;\n}\n\n/* ===== GENERAL IMPROVEMENTS ===== */\n\n/* Enhanced Accessibility */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n/* Better focus states for keyboard navigation */\n*:focus {\n  outline: 2px solid var(--color-primary);\n  outline-offset: 2px;\n}\n\nbutton:focus,\ninput:focus,\ntextarea:focus,\nselect:focus {\n  outline: 2px solid var(--color-primary);\n  outline-offset: 2px;\n  box-shadow: 0 0 0 4px rgba(79, 70, 229, 0.1);\n}\n\n/* Enhanced button animations */\nbutton,\n.action-button,\n.button {\n  transition: all var(--transition-fast);\n  transform-origin: center;\n}\n\nbutton:active,\n.action-button:active,\n.button:active {\n  transform: scale(0.98);\n}\n\n/* Improved card hover animations */\n.card-base,\n.inbox-card,\n.link-card,\n.collection-card,\n.smart-collection-card {\n  transition: all var(--transition-base);\n}\n\n.card-base:hover,\n.inbox-card:hover,\n.link-card:hover,\n.collection-card:hover,\n.smart-collection-card:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-lg);\n}\n\n/* Enhanced loading states with subtle pulse */\n.loading-pulse {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n}\n\n/* Better scroll behavior */\n.content,\n.modal-body {\n  scroll-behavior: smooth;\n}\n\n/* Enhanced empty states */\n.empty-state {\n  transition: opacity var(--transition-base);\n}\n\n.empty-state:hover {\n  opacity: 0.9;\n}\n\n/* Improved mobile touch targets */\n@media (max-width: 768px) {\n  button,\n  .action-button,\n  .dropdown-menu button {\n    min-height: 44px;\n    min-width: 44px;\n  }\n  \n  .link-card,\n  .inbox-card {\n    padding: var(--space-4);\n  }\n  \n  .search-input {\n    height: 44px;\n  }\n}\n\n/* Dark mode preparations (CSS variables ready) */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --ui-background: var(--color-gray-900);\n    --ui-element-background: var(--color-gray-800);\n    --ui-border: var(--color-gray-700);\n    --ui-border-hover: var(--color-gray-600);\n    --ui-text-primary: var(--color-gray-100);\n    --ui-text-secondary: var(--color-gray-400);\n    --ui-text-tertiary: var(--color-gray-500);\n  }\n}\n\n/* Class-based dark mode for manual toggle */\n.dark-mode {\n  --ui-background: var(--color-gray-900);\n  --ui-element-background: var(--color-gray-800);\n  --ui-border: var(--color-gray-700);\n  --ui-border-hover: var(--color-gray-600);\n  --ui-text-primary: var(--color-gray-100);\n  --ui-text-secondary: var(--color-gray-400);\n  --ui-text-tertiary: var(--color-gray-500);\n  \n  /* Shadows for dark mode */\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.2);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -2px rgba(0, 0, 0, 0.3);\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -4px rgba(0, 0, 0, 0.3);\n  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.3), 0 8px 10px -6px rgba(0, 0, 0, 0.3);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.15);\n  \n  /* Modal overlay for dark mode */\n  .modal-overlay {\n    background: rgba(0, 0, 0, 0.8);\n  }\n  \n  /* Command palette overlay for dark mode */\n  .command-palette-overlay {\n    background: rgba(0, 0, 0, 0.8);\n  }\n  \n  /* Input and form elements in dark mode */\n  .search-input,\n  .form-group input[type=\"text\"],\n  .form-group textarea,\n  .custom-reason-input,\n  .form-control-sidebar {\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    border-color: var(--ui-border);\n  }\n  \n  .search-input:focus,\n  .form-group input[type=\"text\"]:focus,\n  .form-group textarea:focus,\n  .custom-reason-input:focus,\n  .form-control-sidebar:focus {\n    background: var(--ui-element-background);\n  }\n  \n  /* Placeholder text in dark mode */\n  .search-input::placeholder,\n  .custom-reason-input::placeholder {\n    color: var(--ui-text-tertiary);\n  }\n  \n  /* Specific adjustments for dark mode */\n  .toggle-slider {\n    background-color: var(--color-gray-600);\n  }\n  \n  .toggle-slider:before {\n    background-color: var(--color-gray-300);\n  }\n  \n  /* Card backgrounds in dark mode */\n  .inbox-card,\n  .link-card,\n  .collection-card,\n  .smart-collection-card {\n    background: var(--ui-element-background);\n    border-color: var(--ui-border);\n  }\n  \n  /* Favicon placeholders in dark mode */\n  .favicon-placeholder {\n    background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  }\n  \n  /* Settings specific dark mode adjustments */\n  .settings-tabs {\n    background: var(--ui-background);\n  }\n  \n  .settings-tab.active {\n    background: var(--ui-element-background);\n  }\n  \n  .stat-card,\n  .stat-card-sidebar {\n    background: var(--ui-background);\n  }\n  \n  /* Digest preview adjustments */\n  .digest-preview {\n    background: var(--ui-background);\n    border-color: var(--ui-border);\n  }\n  \n  .preview-stat,\n  .preview-section {\n    background: var(--ui-element-background);\n    border-color: var(--ui-border);\n  }\n  \n  /* Activity tracker dark mode */\n  .activity-loading {\n    color: var(--ui-text-secondary);\n  }\n  \n  .activity-loading .loading-spinner {\n    border-color: var(--ui-border);\n    border-top-color: var(--color-primary);\n  }\n}\n\n/* Ensure dark mode applies to body when class is present */\nbody.dark-mode {\n  background-color: var(--ui-background);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   FLOATING WINDOW STYLES\n   ========================================================================== */\n\n.floating-window {\n  border-radius: var(--radius-lg);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\n  border: 1px solid var(--ui-border);\n  overflow: hidden;\n}\n\n.floating-window .sidepanel {\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n}\n\n.floating-window .header {\n  border-top-left-radius: var(--radius-lg);\n  border-top-right-radius: var(--radius-lg);\n  background: var(--ui-element-background);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n}\n\n.floating-indicator {\n  color: var(--color-primary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  opacity: 0.8;\n}\n\n.header-button.close-button {\n  color: var(--ui-text-secondary);\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.header-button.close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--color-red-500);\n}\n\n.floating-window .content {\n  max-height: calc(100vh - 160px);\n  overflow-y: auto;\n}\n\n.floating-window .search-container {\n  margin: var(--space-3) var(--space-4);\n}\n\n.floating-window .view-toggle-container {\n  margin: 0 var(--space-4) var(--space-3);\n}\n\n/* Dark mode floating window adjustments */\n.dark-mode.floating-window .header-button.close-button:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--color-red-400);\n}"],sourceRoot:""}]);const A=u},206:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},261:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(660));class o extends a.default{select(n){let e=!1;const t=(null!=n?n:"*").split("").map(n=>/\s/.test(n)&&!e?"":('"'===n&&(e=!e),n)).join("");return this.url.searchParams.set("select",t),this.headers.Prefer&&(this.headers.Prefer+=","),this.headers.Prefer+="return=representation",this}order(n,{ascending:e=!0,nullsFirst:t,foreignTable:r,referencedTable:a=r}={}){const o=a?`${a}.order`:"order",i=this.url.searchParams.get(o);return this.url.searchParams.set(o,`${i?`${i},`:""}${n}.${e?"asc":"desc"}${void 0===t?"":t?".nullsfirst":".nullslast"}`),this}limit(n,{foreignTable:e,referencedTable:t=e}={}){const r=void 0===t?"limit":`${t}.limit`;return this.url.searchParams.set(r,`${n}`),this}range(n,e,{foreignTable:t,referencedTable:r=t}={}){const a=void 0===r?"offset":`${r}.offset`,o=void 0===r?"limit":`${r}.limit`;return this.url.searchParams.set(a,`${n}`),this.url.searchParams.set(o,""+(e-n+1)),this}abortSignal(n){return this.signal=n,this}single(){return this.headers.Accept="application/vnd.pgrst.object+json",this}maybeSingle(){return"GET"===this.method?this.headers.Accept="application/json":this.headers.Accept="application/vnd.pgrst.object+json",this.isMaybeSingle=!0,this}csv(){return this.headers.Accept="text/csv",this}geojson(){return this.headers.Accept="application/geo+json",this}explain({analyze:n=!1,verbose:e=!1,settings:t=!1,buffers:r=!1,wal:a=!1,format:o="text"}={}){var i;const s=[n?"analyze":null,e?"verbose":null,t?"settings":null,r?"buffers":null,a?"wal":null].filter(Boolean).join("|"),c=null!==(i=this.headers.Accept)&&void 0!==i?i:"application/json";return this.headers.Accept=`application/vnd.pgrst.plan+${o}; for="${c}"; options=${s};`,this}rollback(){var n;return(null!==(n=this.headers.Prefer)&&void 0!==n?n:"").trim().length>0?this.headers.Prefer+=",tx=rollback":this.headers.Prefer="tx=rollback",this}returns(){return this}}e.default=o},279:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0}),e.PostgrestError=e.PostgrestBuilder=e.PostgrestTransformBuilder=e.PostgrestFilterBuilder=e.PostgrestQueryBuilder=e.PostgrestClient=void 0;const a=r(t(342));e.PostgrestClient=a.default;const o=r(t(45));e.PostgrestQueryBuilder=o.default;const i=r(t(825));e.PostgrestFilterBuilder=i.default;const s=r(t(261));e.PostgrestTransformBuilder=s.default;const c=r(t(660));e.PostgrestBuilder=c.default;const l=r(t(818));e.PostgrestError=l.default,e.default={PostgrestClient:a.default,PostgrestQueryBuilder:o.default,PostgrestFilterBuilder:i.default,PostgrestTransformBuilder:s.default,PostgrestBuilder:c.default,PostgrestError:l.default}},287:(n,e)=>{var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),A=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function m(n,e,t){this.props=n,this.context=e,this.refs=g,this.updater=t||f}function v(){}function b(n,e,t){this.props=n,this.context=e,this.refs=g,this.updater=t||f}m.prototype.isReactComponent={},m.prototype.setState=function(n,e){if("object"!=typeof n&&"function"!=typeof n&&null!=n)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,n,e,"setState")},m.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")},v.prototype=m.prototype;var C=b.prototype=new v;C.constructor=b,h(C,m.prototype),C.isPureReactComponent=!0;var y=Array.isArray,E=Object.prototype.hasOwnProperty,B={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function k(n,e,r){var a,o={},i=null,s=null;if(null!=e)for(a in void 0!==e.ref&&(s=e.ref),void 0!==e.key&&(i=""+e.key),e)E.call(e,a)&&!x.hasOwnProperty(a)&&(o[a]=e[a]);var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}if(n&&n.defaultProps)for(a in c=n.defaultProps)void 0===o[a]&&(o[a]=c[a]);return{$$typeof:t,type:n,key:i,ref:s,props:o,_owner:B.current}}function w(n){return"object"==typeof n&&null!==n&&n.$$typeof===t}var j=/\/+/g;function S(n,e){return"object"==typeof n&&null!==n&&null!=n.key?function(n){var e={"=":"=0",":":"=2"};return"$"+n.replace(/[=:]/g,function(n){return e[n]})}(""+n.key):e.toString(36)}function z(n,e,a,o,i){var s=typeof n;"undefined"!==s&&"boolean"!==s||(n=null);var c=!1;if(null===n)c=!0;else switch(s){case"string":case"number":c=!0;break;case"object":switch(n.$$typeof){case t:case r:c=!0}}if(c)return i=i(c=n),n=""===o?"."+S(c,0):o,y(i)?(a="",null!=n&&(a=n.replace(j,"$&/")+"/"),z(i,e,a,"",function(n){return n})):null!=i&&(w(i)&&(i=function(n,e){return{$$typeof:t,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}(i,a+(!i.key||c&&c.key===i.key?"":(""+i.key).replace(j,"$&/")+"/")+n)),e.push(i)),1;if(c=0,o=""===o?".":o+":",y(n))for(var l=0;l<n.length;l++){var u=o+S(s=n[l],l);c+=z(s,e,a,u,i)}else if(u=function(n){return null===n||"object"!=typeof n?null:"function"==typeof(n=p&&n[p]||n["@@iterator"])?n:null}(n),"function"==typeof u)for(n=u.call(n),l=0;!(s=n.next()).done;)c+=z(s=s.value,e,a,u=o+S(s,l++),i);else if("object"===s)throw e=String(n),Error("Objects are not valid as a React child (found: "+("[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return c}function N(n,e,t){if(null==n)return n;var r=[],a=0;return z(n,r,"","",function(n){return e.call(t,n,a++)}),r}function I(n){if(-1===n._status){var e=n._result;(e=e()).then(function(e){0!==n._status&&-1!==n._status||(n._status=1,n._result=e)},function(e){0!==n._status&&-1!==n._status||(n._status=2,n._result=e)}),-1===n._status&&(n._status=0,n._result=e)}if(1===n._status)return n._result.default;throw n._result}var _={current:null},T={transition:null},O={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:T,ReactCurrentOwner:B};function P(){throw Error("act(...) is not supported in production builds of React.")}e.Children={map:N,forEach:function(n,e,t){N(n,function(){e.apply(this,arguments)},t)},count:function(n){var e=0;return N(n,function(){e++}),e},toArray:function(n){return N(n,function(n){return n})||[]},only:function(n){if(!w(n))throw Error("React.Children.only expected to receive a single React element child.");return n}},e.Component=m,e.Fragment=a,e.Profiler=i,e.PureComponent=b,e.StrictMode=o,e.Suspense=u,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,e.act=P,e.cloneElement=function(n,e,r){if(null==n)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+n+".");var a=h({},n.props),o=n.key,i=n.ref,s=n._owner;if(null!=e){if(void 0!==e.ref&&(i=e.ref,s=B.current),void 0!==e.key&&(o=""+e.key),n.type&&n.type.defaultProps)var c=n.type.defaultProps;for(l in e)E.call(e,l)&&!x.hasOwnProperty(l)&&(a[l]=void 0===e[l]&&void 0!==c?c[l]:e[l])}var l=arguments.length-2;if(1===l)a.children=r;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];a.children=c}return{$$typeof:t,type:n.type,key:o,ref:i,props:a,_owner:s}},e.createContext=function(n){return(n={$$typeof:c,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:n},n.Consumer=n},e.createElement=k,e.createFactory=function(n){var e=k.bind(null,n);return e.type=n,e},e.createRef=function(){return{current:null}},e.forwardRef=function(n){return{$$typeof:l,render:n}},e.isValidElement=w,e.lazy=function(n){return{$$typeof:A,_payload:{_status:-1,_result:n},_init:I}},e.memo=function(n,e){return{$$typeof:d,type:n,compare:void 0===e?null:e}},e.startTransition=function(n){var e=T.transition;T.transition={};try{n()}finally{T.transition=e}},e.unstable_act=P,e.useCallback=function(n,e){return _.current.useCallback(n,e)},e.useContext=function(n){return _.current.useContext(n)},e.useDebugValue=function(){},e.useDeferredValue=function(n){return _.current.useDeferredValue(n)},e.useEffect=function(n,e){return _.current.useEffect(n,e)},e.useId=function(){return _.current.useId()},e.useImperativeHandle=function(n,e,t){return _.current.useImperativeHandle(n,e,t)},e.useInsertionEffect=function(n,e){return _.current.useInsertionEffect(n,e)},e.useLayoutEffect=function(n,e){return _.current.useLayoutEffect(n,e)},e.useMemo=function(n,e){return _.current.useMemo(n,e)},e.useReducer=function(n,e,t){return _.current.useReducer(n,e,t)},e.useRef=function(n){return _.current.useRef(n)},e.useState=function(n){return _.current.useState(n)},e.useSyncExternalStore=function(n,e,t){return _.current.useSyncExternalStore(n,e,t)},e.useTransition=function(){return _.current.useTransition()},e.version="18.3.1"},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t}).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);r&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),e.push(u))}},e}},338:(n,e,t)=>{var r=t(961);e.createRoot=r.createRoot,r.hydrateRoot},342:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(45)),o=r(t(825)),i=t(530);class s{constructor(n,{headers:e={},schema:t,fetch:r}={}){this.url=n,this.headers=Object.assign(Object.assign({},i.DEFAULT_HEADERS),e),this.schemaName=t,this.fetch=r}from(n){const e=new URL(`${this.url}/${n}`);return new a.default(e,{headers:Object.assign({},this.headers),schema:this.schemaName,fetch:this.fetch})}schema(n){return new s(this.url,{headers:this.headers,schema:n,fetch:this.fetch})}rpc(n,e={},{head:t=!1,get:r=!1,count:a}={}){let i;const s=new URL(`${this.url}/rpc/${n}`);let c;t||r?(i=t?"HEAD":"GET",Object.entries(e).filter(([n,e])=>void 0!==e).map(([n,e])=>[n,Array.isArray(e)?`{${e.join(",")}}`:`${e}`]).forEach(([n,e])=>{s.searchParams.append(n,e)})):(i="POST",c=e);const l=Object.assign({},this.headers);return a&&(l.Prefer=`count=${a}`),new o.default({method:i,url:s,headers:l,schema:this.schemaName,body:c,fetch:this.fetch,allowEmpty:!1})}}e.default=s},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},463:(n,e)=>{function t(n,e){var t=n.length;n.push(e);n:for(;0<t;){var r=t-1>>>1,a=n[r];if(!(0<o(a,e)))break n;n[r]=e,n[t]=a,t=r}}function r(n){return 0===n.length?null:n[0]}function a(n){if(0===n.length)return null;var e=n[0],t=n.pop();if(t!==e){n[0]=t;n:for(var r=0,a=n.length,i=a>>>1;r<i;){var s=2*(r+1)-1,c=n[s],l=s+1,u=n[l];if(0>o(c,t))l<a&&0>o(u,c)?(n[r]=u,n[l]=t,r=l):(n[r]=c,n[s]=t,r=s);else{if(!(l<a&&0>o(u,t)))break n;n[r]=u,n[l]=t,r=l}}}return e}function o(n,e){var t=n.sortIndex-e.sortIndex;return 0!==t?t:n.id-e.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;e.unstable_now=function(){return i.now()}}else{var s=Date,c=s.now();e.unstable_now=function(){return s.now()-c}}var l=[],u=[],d=1,A=null,p=3,f=!1,h=!1,g=!1,m="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function C(n){for(var e=r(u);null!==e;){if(null===e.callback)a(u);else{if(!(e.startTime<=n))break;a(u),e.sortIndex=e.expirationTime,t(l,e)}e=r(u)}}function y(n){if(g=!1,C(n),!h)if(null!==r(l))h=!0,T(E);else{var e=r(u);null!==e&&O(y,e.startTime-n)}}function E(n,t){h=!1,g&&(g=!1,v(w),w=-1),f=!0;var o=p;try{for(C(t),A=r(l);null!==A&&(!(A.expirationTime>t)||n&&!z());){var i=A.callback;if("function"==typeof i){A.callback=null,p=A.priorityLevel;var s=i(A.expirationTime<=t);t=e.unstable_now(),"function"==typeof s?A.callback=s:A===r(l)&&a(l),C(t)}else a(l);A=r(l)}if(null!==A)var c=!0;else{var d=r(u);null!==d&&O(y,d.startTime-t),c=!1}return c}finally{A=null,p=o,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var B,x=!1,k=null,w=-1,j=5,S=-1;function z(){return!(e.unstable_now()-S<j)}function N(){if(null!==k){var n=e.unstable_now();S=n;var t=!0;try{t=k(!0,n)}finally{t?B():(x=!1,k=null)}}else x=!1}if("function"==typeof b)B=function(){b(N)};else if("undefined"!=typeof MessageChannel){var I=new MessageChannel,_=I.port2;I.port1.onmessage=N,B=function(){_.postMessage(null)}}else B=function(){m(N,0)};function T(n){k=n,x||(x=!0,B())}function O(n,t){w=m(function(){n(e.unstable_now())},t)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(n){n.callback=null},e.unstable_continueExecution=function(){h||f||(h=!0,T(E))},e.unstable_forceFrameRate=function(n){0>n||125<n?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):j=0<n?Math.floor(1e3/n):5},e.unstable_getCurrentPriorityLevel=function(){return p},e.unstable_getFirstCallbackNode=function(){return r(l)},e.unstable_next=function(n){switch(p){case 1:case 2:case 3:var e=3;break;default:e=p}var t=p;p=e;try{return n()}finally{p=t}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(n,e){switch(n){case 1:case 2:case 3:case 4:case 5:break;default:n=3}var t=p;p=n;try{return e()}finally{p=t}},e.unstable_scheduleCallback=function(n,a,o){var i=e.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,n){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return n={id:d++,callback:a,priorityLevel:n,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>i?(n.sortIndex=o,t(u,n),null===r(l)&&n===r(u)&&(g?(v(w),w=-1):g=!0,O(y,o-i))):(n.sortIndex=s,t(l,n),h||f||(h=!0,T(E))),n},e.unstable_shouldYield=z,e.unstable_wrapCallback=function(n){var e=p;return function(){var t=p;p=e;try{return n.apply(this,arguments)}finally{p=t}}}},508:(n,e,t)=>{function r(n){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach(function(e){s(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function i(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=u(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,a=function(){};return{s:a,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return i=n.done,n},e:function(n){s=!0,o=n},f:function(){try{i||null==t.return||t.return()}finally{if(s)throw o}}}}function s(n,e,t){return(e=b(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function c(n){return function(n){if(Array.isArray(n))return d(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||u(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||u(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,e){if(n){if("string"==typeof n)return d(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?d(n,e):void 0}}function d(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function A(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return p(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(p(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function f(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,p(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,p(d,"constructor",l),p(l,"constructor",c),c.displayName="GeneratorFunction",p(l,a,"GeneratorFunction"),p(d),p(d,a,"Generator"),p(d,r,function(){return this}),p(d,"toString",function(){return"[object Generator]"}),(A=function(){return{w:o,m:f}})()}function p(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}p=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){p(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},p(n,e,t,r)}function f(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function h(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){f(o,r,a,i,s,"next",n)}function s(n){f(o,r,a,i,s,"throw",n)}i(void 0)})}}function g(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function m(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,b(r.key),r)}}function v(n,e,t){return e&&m(n.prototype,e),t&&m(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function b(n){var e=function(n){if("object"!=r(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=r(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==r(e)?e:e+""}t.r(e),t.d(e,{AIService:()=>C,aiService:()=>B,createAIService:()=>y});var C=function(){return v(function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};g(this,n),this.apiKey=e.apiKey||"",this.model=e.model||"gpt-3.5-turbo"},[{key:"analyzeContent",value:(o=h(A().m(function n(e,t,r){var a,o;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,this.generateRuleBasedAnalysis(e,t,r));case 1:return n.p=1,n.n=2,this.callOpenAIForAnalysis(e,t,r);case 2:return a=n.v,n.a(2,a);case 3:return n.p=3,o=n.v,console.error("AI analysis failed, falling back to rule-based:",o),n.a(2,this.generateRuleBasedAnalysis(e,t,r))}},n,this,[[1,3]])})),function(n,e,t){return o.apply(this,arguments)})},{key:"generateSummary",value:(a=h(A().m(function n(e,t,r){var a,o;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,this.generatePlaceholderSummary(e,t,r));case 1:return n.p=1,n.n=2,this.callOpenAI(e,t,r);case 2:return a=n.v,n.a(2,a);case 3:return n.p=3,o=n.v,console.error("AI summary generation failed:",o),n.a(2,this.generatePlaceholderSummary(e,t,r))}},n,this,[[1,3]])})),function(n,e,t){return a.apply(this,arguments)})},{key:"generateRuleBasedAnalysis",value:function(n,e,t){var r=new URL(t).hostname,a=n.toLowerCase(),o=e.toLowerCase(),i="".concat(o," ").concat(a),s=this.detectContentType(r,e,n),c=this.generateRuleBasedTags(i,r,s),l=this.generateRuleBasedCategories(i,r,s),u=this.extractTopics(i),d=this.estimateComplexity(n),A=this.estimateReadingTime(n);return{summary:this.generatePlaceholderSummary(n,e,t),tagSuggestions:c,categorySuggestions:l,contentType:s,topics:u,complexity:d,readingTime:A}}},{key:"detectContentType",value:function(n,e,t){var r=e.toLowerCase(),a=t.toLowerCase();return n.includes("youtube.com")||n.includes("vimeo.com")||n.includes("twitch.tv")?"video":n.includes("docs.")||r.includes("documentation")||a.includes("api reference")||a.includes("getting started")?"documentation":r.includes("tutorial")||r.includes("how to")||r.includes("guide")||a.includes("step by step")?"tutorial":n.includes("news")||n.includes("cnn.com")||n.includes("bbc.com")||n.includes("techcrunch.com")||n.includes("reuters.com")?"news":n.includes("medium.com")||n.includes("blog")||r.includes("thoughts on")||a.includes("published")?"blog":n.includes("arxiv.org")||n.includes("scholar.google")||r.includes("research")||a.includes("abstract")?"research":n.includes("github.com")||r.includes("tool")||r.includes("app")||a.includes("download")?"tool":r.includes("reference")||r.includes("cheat sheet")||a.includes("quick reference")?"reference":"article"}},{key:"generateRuleBasedTags",value:function(n,e,t){for(var r=[],a=0,o=Object.entries({"github.com":[{tag:"github",confidence:.9,reason:"GitHub repository"}],"stackoverflow.com":[{tag:"programming",confidence:.8,reason:"Stack Overflow content"}],"medium.com":[{tag:"blog",confidence:.7,reason:"Medium article"}],"youtube.com":[{tag:"video",confidence:.9,reason:"YouTube video"}],"linkedin.com":[{tag:"career",confidence:.7,reason:"LinkedIn content"}]});a<o.length;a++){var i=l(o[a],2),s=i[0],u=i[1];e.includes(s)&&r.push.apply(r,c(u))}for(var d=0,A=Object.entries({javascript:["javascript","js","node.js","react","vue","angular"],python:["python","django","flask","pandas","numpy"],"web-development":["html","css","frontend","backend","full-stack"],"machine-learning":["ml","ai","neural network","deep learning","tensorflow"],"data-science":["data science","analytics","visualization","statistics"],mobile:["android","ios","react native","flutter","mobile app"],devops:["docker","kubernetes","aws","cloud","deployment"],database:["sql","postgresql","mongodb","database design"],security:["cybersecurity","encryption","vulnerability","penetration testing"]});d<A.length;d++){var p=l(A[d],2),f=p[0],h=p[1].filter(function(e){return n.includes(e)}).length;if(h>0){var g=Math.min(.9,.4+.1*h);r.push({tag:f,confidence:g,reason:"Found ".concat(h," related keyword(s)")})}}r.push({tag:t||"general",confidence:.6,reason:"Detected as ".concat(t," content")}),(n.includes("beginner")||n.includes("getting started"))&&r.push({tag:"beginner",confidence:.7,reason:"Beginner-friendly content"}),(n.includes("advanced")||n.includes("expert"))&&r.push({tag:"advanced",confidence:.7,reason:"Advanced content"});for(var m=0,v=["productivity","business","startup","marketing","sales","finance"];m<v.length;m++){var b=v[m];n.includes(b)&&r.push({tag:b,confidence:.6,reason:"Content related to ".concat(b)})}return r.filter(function(n,e,t){return t.findIndex(function(e){return e.tag===n.tag})===e}).sort(function(n,e){return e.confidence-n.confidence}).slice(0,8)}},{key:"generateRuleBasedCategories",value:function(n,e,t){var r=[];return(n.includes("work")||n.includes("job")||n.includes("career")||n.includes("professional")||n.includes("business"))&&r.push({category:"work",confidence:.8,reason:"Contains work-related content"}),("tutorial"===t||"documentation"===t||n.includes("learn")||n.includes("education")||n.includes("course"))&&r.push({category:"learning",confidence:.9,reason:"Educational content detected"}),(n.includes("hobby")||n.includes("personal")||n.includes("lifestyle")||n.includes("entertainment"))&&r.push({category:"personal",confidence:.7,reason:"Personal interest content"}),(e.includes("github.com")||e.includes("stackoverflow.com")||n.includes("programming")||n.includes("development"))&&r.push({category:"work",confidence:.8,reason:"Technical/development content"}),("news"===t||n.includes("breaking")||n.includes("update"))&&r.push({category:"general",confidence:.7,reason:"News or current events"}),0===r.length&&r.push({category:"general",confidence:.5,reason:"General content"}),r.sort(function(n,e){return e.confidence-n.confidence})}},{key:"extractTopics",value:function(n){return["artificial intelligence","machine learning","web development","mobile development","data science","cybersecurity","cloud computing","blockchain","cryptocurrency","startup","productivity","leadership","design","marketing","sales","programming","software engineering","devops","database","frontend","backend","full-stack","api","microservices","architecture"].filter(function(e){return n.includes(e)}).slice(0,5)}},{key:"estimateComplexity",value:function(n){var e=n.toLowerCase(),t=["algorithm","architecture","optimization","scalability","performance"].filter(function(n){return e.includes(n)}).length,r=["introduction","basics","getting started","beginner","simple"].filter(function(n){return e.includes(n)}).length,a=["advanced","expert","complex","sophisticated","enterprise"].filter(function(n){return e.includes(n)}).length;return r>0||0===t?"beginner":a>1||t>3?"advanced":"intermediate"}},{key:"estimateReadingTime",value:function(n){var e=n.split(/\s+/).length;return Math.max(1,Math.round(e/200))}},{key:"callOpenAIForAnalysis",value:(r=h(A().m(function n(e,t,r){var a,o,i,s,c,l,u;return A().w(function(n){for(;;)switch(n.n){case 0:return o='Analyze this web content and provide a JSON response with the following structure:\n\n{\n  "summary": "1-2 sentence summary",\n  "tagSuggestions": [\n    {"tag": "tag-name", "confidence": 0.8, "reason": "why this tag fits"}\n  ],\n  "categorySuggestions": [\n    {"category": "work|learning|personal|general", "confidence": 0.9, "reason": "explanation"}\n  ],\n  "contentType": "article|tutorial|documentation|video|tool|reference|blog|news|research|other",\n  "topics": ["main", "topics", "covered"],\n  "complexity": "beginner|intermediate|advanced",\n  "readingTime": 5\n}\n\nContent to analyze:\nTitle: '.concat(t,"\nURL: ").concat(r,"\nContent: ").concat(e.substring(0,2e3),"...\n\nFocus on:\n- Relevant, specific tags (technology, skills, domains)\n- Appropriate category (work/learning/personal/general)\n- Content type and complexity\n- Main topics and themes"),n.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:o}],max_tokens:500,temperature:.3})});case 1:return i=n.v,n.n=2,i.json();case 2:if(s=n.v,!(c=null===(a=s.choices[0])||void 0===a||null===(a=a.message)||void 0===a?void 0:a.content)){n.n=5;break}return n.p=3,l=JSON.parse(c),n.a(2,{summary:l.summary,tagSuggestions:l.tagSuggestions||[],categorySuggestions:l.categorySuggestions||[],contentType:l.contentType,topics:l.topics||[],complexity:l.complexity,readingTime:l.readingTime});case 4:n.p=4,u=n.v,console.error("Failed to parse AI response:",u);case 5:return n.a(2,this.generateRuleBasedAnalysis(e,t,r))}},n,this,[[3,4]])})),function(n,e,t){return r.apply(this,arguments)})},{key:"callOpenAI",value:(t=h(A().m(function n(e,t,r){var a,o,i,s;return A().w(function(n){for(;;)switch(n.n){case 0:return o="Summarize this web page in 1-2 sentences:\nTitle: ".concat(t,"\nURL: ").concat(r,"\nContent: ").concat(e.substring(0,1e3),"..."),n.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:o}],max_tokens:100,temperature:.3})});case 1:return i=n.v,n.n=2,i.json();case 2:return s=n.v,n.a(2,(null===(a=s.choices[0])||void 0===a||null===(a=a.message)||void 0===a?void 0:a.content)||this.generatePlaceholderSummary(e,t,r))}},n,this)})),function(n,e,r){return t.apply(this,arguments)})},{key:"generatePlaceholderSummary",value:function(n,e,t){var r=new URL(t).hostname,a=n.length;return r.includes("github.com")?"GitHub repository or project page: ".concat(e):r.includes("stackoverflow.com")?"Stack Overflow discussion about programming or technical topics":r.includes("medium.com")||r.includes("blog")?"Blog article: ".concat(e.substring(0,50),"..."):r.includes("youtube.com")?"Video content: ".concat(e):r.includes("news")||r.includes("article")?"News article from ".concat(r):"Web page from ".concat(r," (").concat(Math.round(a/100)," paragraphs)")}},{key:"updateApiKey",value:function(n){this.apiKey=n}},{key:"generateSmartCollectionSuggestions",value:(e=h(A().m(function n(e){var t,r,a,o,i,s,c,u,d,p,f,h,g,m,v;return A().w(function(n){for(;;)if(0===n.n){for(t=this.analyzeDomains(e),r=this.analyzeTopics(e),a=this.analyzeTimePatterns(e),o=[],i=new Date,s=0,c=Object.entries(t);s<c.length;s++)u=l(c[s],2),d=u[0],(p=u[1])>=3&&o.push({id:"domain-".concat(d.replace(/\./g,"-")),name:"📌 ".concat(this.getDomainDisplayName(d)),description:"Links from ".concat(d," (").concat(p," links)"),query:"domain LIKE '%".concat(d,"%'"),isSystem:!0,autoUpdate:!0,icon:this.getDomainIcon(d),color:this.getDomainColor(d),filters:{domains:[d]},createdAt:i,updatedAt:i});for(f=0,h=Object.entries(r);f<h.length;f++)g=l(h[f],2),m=g[0],(v=g[1])>=2&&o.push({id:"topic-".concat(m.toLowerCase().replace(/\s+/g,"-")),name:"🎯 ".concat(m),description:"Content related to ".concat(m.toLowerCase()," (").concat(v," links)"),query:"title ILIKE '%".concat(m,"%' OR user_note ILIKE '%").concat(m,"%' OR ai_summary ILIKE '%").concat(m,"%'"),isSystem:!0,autoUpdate:!0,icon:this.getTopicIcon(m),color:this.getTopicColor(m),createdAt:i,updatedAt:i});return a.recentActivity>5&&o.push({id:"recent-activity",name:"🔥 Recent Activity",description:"Links saved in the last 3 days",query:"created_at >= now() - interval '3 days'",isSystem:!0,autoUpdate:!0,icon:"🔥",color:"#ef4444",filters:{dateRange:{start:new Date(Date.now()-2592e5)}},createdAt:i,updatedAt:i}),n.a(2,o.slice(0,8))}},n,this)})),function(n){return e.apply(this,arguments)})},{key:"analyzeDomains",value:function(n){var e={};return n.forEach(function(n){var t=n.domain;e[t]=(e[t]||0)+1}),Object.fromEntries(Object.entries(e).sort(function(n,e){var t=l(n,2)[1];return l(e,2)[1]-t}).slice(0,10))}},{key:"analyzeTopics",value:function(n){var e={},t=["React","JavaScript","TypeScript","Python","Node.js","API","Database","Machine Learning","AI","Design","UI/UX","CSS","HTML","Backend","Frontend","DevOps","Cloud","AWS","Docker","Kubernetes","Git","Testing","Security","Performance","Mobile","iOS","Android","Tutorial","Guide","Documentation","Tool","Framework","Library"];return n.forEach(function(n){var r="".concat(n.title," ").concat(n.userNote," ").concat(n.aiSummary||"").toLowerCase();t.forEach(function(n){r.includes(n.toLowerCase())&&(e[n]=(e[n]||0)+1)})}),Object.fromEntries(Object.entries(e).sort(function(n,e){var t=l(n,2)[1];return l(e,2)[1]-t}).slice(0,8))}},{key:"analyzeTimePatterns",value:function(n){var e=new Date,t=new Date(e.getTime()-2592e5),r=n.filter(function(n){return n.createdAt>=t}).length,a={};return n.forEach(function(n){var e=n.createdAt.toLocaleDateString("en-US",{weekday:"long"});a[e]=(a[e]||0)+1}),{recentActivity:r,weeklyPattern:a}}},{key:"getDomainDisplayName",value:function(n){return{"github.com":"GitHub","stackoverflow.com":"Stack Overflow","medium.com":"Medium","youtube.com":"YouTube","twitter.com":"Twitter","linkedin.com":"LinkedIn","reddit.com":"Reddit","dev.to":"Dev.to","hashnode.com":"Hashnode","docs.google.com":"Google Docs"}[n]||n.replace("www.","").split(".")[0]}},{key:"getDomainIcon",value:function(n){return{"github.com":"⭐","stackoverflow.com":"💬","medium.com":"✍️","youtube.com":"📺","twitter.com":"🐦","linkedin.com":"💼","reddit.com":"🤖","dev.to":"👨‍💻","hashnode.com":"📝","docs.google.com":"📄"}[n]||"🌐"}},{key:"getDomainColor",value:function(n){return{"github.com":"#24292e","stackoverflow.com":"#f48024","medium.com":"#00ab6c","youtube.com":"#ff0000","twitter.com":"#1da1f2","linkedin.com":"#0077b5","reddit.com":"#ff4500","dev.to":"#0a0a0a","hashnode.com":"#2962ff","docs.google.com":"#4285f4"}[n]||"#6b7280"}},{key:"getTopicIcon",value:function(n){return{React:"⚛️",JavaScript:"🟨",TypeScript:"🔷",Python:"🐍","Node.js":"🟢",API:"🔌",Database:"🗄️","Machine Learning":"🤖",AI:"🧠",Design:"🎨","UI/UX":"✨",CSS:"🎨",HTML:"📄",Backend:"⚙️",Frontend:"🖥️",DevOps:"🔧",Cloud:"☁️",AWS:"🟠",Docker:"🐳",Security:"🔒",Mobile:"📱",Tutorial:"📚",Tool:"🛠️"}[n]||"🏷️"}},{key:"getTopicColor",value:function(n){return{React:"#61dafb",JavaScript:"#f7df1e",TypeScript:"#3178c6",Python:"#3776ab","Node.js":"#339933",API:"#ff6b6b",Database:"#336791","Machine Learning":"#ff9500",AI:"#8b5cf6",Design:"#e91e63","UI/UX":"#9c27b0",CSS:"#1572b6",HTML:"#e34f26",Backend:"#4caf50",Frontend:"#2196f3",DevOps:"#ff5722",Cloud:"#607d8b",Security:"#795548",Mobile:"#00bcd4",Tutorial:"#ff9800",Tool:"#607d8b"}[n]||"#6b7280"}},{key:"analyzeForSmartCollections",value:(n=h(A().m(function n(e){var t,r,a,o,i,s,c,l;return A().w(function(n){for(;;)if(0===n.n)return t="".concat(e.title," ").concat(e.userNote," ").concat(e.aiSummary||"").toLowerCase(),r=e.domain,a=[],o=[],i={},(s=["ai","artificial intelligence","machine learning","ml","neural","deep learning"].filter(function(n){return t.includes(n)}).length)>0&&(a.push("ai-related"),o.push("AI"),i.ai=s),(c=["tutorial","how to","guide","walkthrough","step by step"].filter(function(n){return t.includes(n)}).length)>0&&(a.push("tutorials"),o.push("tutorial"),i.tutorial=c),r.includes("github.com")&&(a.push("github-repos"),o.push("github","repository"),i.github=1),(l=(Date.now()-e.createdAt.getTime())/864e5)<=7&&(a.push("recent-reads"),i.recent=Math.max(0,7-l)/7),e.userNote&&""!==e.userNote.trim()||(a.push("unread"),i.unread=1),n.a(2,{matchingCollections:a,suggestedTags:o,contentSignals:i})},n)})),function(e){return n.apply(this,arguments)})}]);var n,e,t,r,a,o}(),y=function(n){return n?new E(n):{generateInsights:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},generateQuestions:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},generateFlashcards:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},findCrossReferences:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},generateRecommendations:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},updateKnowledgeGraph:function(n){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,{nodes:[],edges:[],lastUpdated:Date.now()})},n)}))()},extractKeyTopics:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},calculateKnowledgeGrowth:function(){return 0}}},E=function(){return v(function n(e){g(this,n),s(this,"baseURL","https://api.openai.com/v1"),this.apiKey=e},[{key:"generateInsights",value:(d=h(A().m(function n(e){var t,r,a,o,i;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,t="text"in e?e.text:"".concat(e.title," - ").concat(e.description||""),r=e.url,a='Analyze this content and generate 3 types of insights:\n1. A thought-provoking question\n2. A key summary point\n3. A potential connection to other topics\n\nContent: "'.concat(t,'"\nURL: ').concat(r,"\n\nReturn as JSON array with objects containing: type, content, metadata"),n.n=2,this.callOpenAI(a);case 2:return o=n.v,n.a(2,this.parseInsights(o));case 3:return n.p=3,i=n.v,console.error("Error generating insights:",i),n.a(2,[])}},n,this,[[1,3]])})),function(n){return d.apply(this,arguments)})},{key:"generateQuestions",value:(u=h(A().m(function n(e){var t,r,a,o,i=arguments;return A().w(function(n){for(;;)switch(n.n){case 0:if(t=i.length>1&&void 0!==i[1]?i[1]:"medium",this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,r="Generate 3 ".concat(t,' level questions based on this content that would help with retention and understanding:\n\nContent: "').concat(e,'"\n\nQuestions should be:\n- ').concat("easy"===t?"Recall-based, asking for basic facts":"","\n- ").concat("medium"===t?"Application-based, asking how concepts apply":"","\n- ").concat("hard"===t?"Analysis-based, asking for evaluation and synthesis":"",'\n\nReturn as JSON array with type: "question", content: "the question", metadata: {difficulty, topic}'),n.n=2,this.callOpenAI(r);case 2:return a=n.v,n.a(2,this.parseInsights(a));case 3:return n.p=3,o=n.v,console.error("Error generating questions:",o),n.a(2,[])}},n,this,[[1,3]])})),function(n){return u.apply(this,arguments)})},{key:"generateFlashcards",value:(c=h(A().m(function n(e){var t,r,a;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,t='Create 3 flashcard pairs from this content. Each should have a question/prompt and answer:\n\nContent: "'.concat(e,'"\n\nReturn as JSON array with type: "flashcard", content: "Question: [question]\nAnswer: [answer]", metadata: {topic}'),n.n=2,this.callOpenAI(t);case 2:return r=n.v,n.a(2,this.parseInsights(r));case 3:return n.p=3,a=n.v,console.error("Error generating flashcards:",a),n.a(2,[])}},n,this,[[1,3]])})),function(n){return c.apply(this,arguments)})},{key:"findCrossReferences",value:(a=h(A().m(function n(e,t){var r,a,o,i,s;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey&&0!==t.length){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,r="text"in e?e.text:"".concat(e.title," - ").concat(e.description||""),a=t.filter(function(n){return n.id!==e.id}).slice(0,10),o='Analyze the main item and find potential relationships with other items:\n\nMain item: "'.concat(r,'"\n\nOther items:\n').concat(a.map(function(n,e){return"".concat(e+1,". ").concat(n.id,": ").concat("text"in n?n.text:"".concat(n.title," - ").concat(n.description||""))}).join("\n"),'\n\nFor each relationship found, return JSON with:\n- targetId: the item ID\n- relationshipType: "related" | "contradicts" | "supports" | "cites" | "builds-on"\n- strength: 0-1 confidence score\n- note: brief explanation\n\nOnly return relationships with strength > 0.3'),n.n=2,this.callOpenAI(o);case 2:return i=n.v,n.a(2,this.parseCrossReferences(i,e.id));case 3:return n.p=3,s=n.v,console.error("Error finding cross references:",s),n.a(2,[])}},n,this,[[1,3]])})),function(n,e){return a.apply(this,arguments)})},{key:"generateRecommendations",value:(r=h(A().m(function n(e){var t,r,a,o,i;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,t=e.slice(-10),n.n=2,this.extractKeyTopics(t.map(function(n){return"text"in n?n.text:"".concat(n.title," - ").concat(n.description||"")}).join(" "));case 2:return r=n.v,a="Based on the user's reading history and interests, suggest 5 content recommendations:\n\nRecent reading topics: ".concat(r.join(", "),"\n\nRecent items:\n").concat(t.map(function(n){return"text"in n?'Highlight: "'.concat(n.text,'"'):'Link: "'.concat(n.title,'"')}).join("\n"),'\n\nSuggest:\n1. Specific topics to explore next\n2. Types of content that would complement their reading\n3. Areas for deeper study\n\nReturn as JSON array with type: "recommendation", content: suggestion, metadata: {topic, confidence}'),n.n=3,this.callOpenAI(a);case 3:return o=n.v,n.a(2,this.parseInsights(o));case 4:return n.p=4,i=n.v,console.error("Error generating recommendations:",i),n.a(2,[])}},n,this,[[1,4]])})),function(n){return r.apply(this,arguments)})},{key:"updateKnowledgeGraph",value:(t=h(A().m(function n(e){var t,r,a,o,s,c,l,u,d;return A().w(function(n){for(;;)switch(n.n){case 0:t=[],r=[],a=new Map,o=i(e),n.p=1,o.s();case 2:if((s=o.n()).done){n.n=5;break}return c=s.value,l="text"in c?c.text:"".concat(c.title," - ").concat(c.description||""),n.n=3,this.extractKeyTopics(l);case 3:u=n.v,t.push({id:c.id,type:"text"in c?"highlight":"link",label:"text"in c?c.text.slice(0,50)+"...":c.title,weight:1,metadata:{topics:u}}),u.forEach(function(n){a.set(n,(a.get(n)||0)+1)});case 4:n.n=2;break;case 5:n.n=7;break;case 6:n.p=6,d=n.v,o.e(d);case 7:return n.p=7,o.f(),n.f(7);case 8:return a.forEach(function(n,e){n>1&&t.push({id:"topic-".concat(e),type:"topic",label:e,weight:n,metadata:{frequency:n}})}),n.a(2,{nodes:t,edges:r,lastUpdated:Date.now()})}},n,this,[[1,6,7,8]])})),function(n){return t.apply(this,arguments)})},{key:"extractKeyTopics",value:(e=h(A().m(function n(e){var t,r,a,o,i;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return t=e.toLowerCase().match(/\b\w+\b/g)||[],r=new Map,t.forEach(function(n){n.length>4&&r.set(n,(r.get(n)||0)+1)}),n.a(2,Array.from(r.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,5).map(function(n){return l(n,1)[0]}));case 1:return n.p=1,a='Extract 3-5 key topics/themes from this content. Return as comma-separated list:\n\nContent: "'.concat(e.slice(0,1e3),'"'),n.n=2,this.callOpenAI(a);case 2:return o=n.v,n.a(2,o.split(",").map(function(n){return n.trim()}).filter(function(n){return n.length>0}));case 3:return n.p=3,i=n.v,console.error("Error extracting topics:",i),n.a(2,[])}},n,this,[[1,3]])})),function(n){return e.apply(this,arguments)})},{key:"calculateKnowledgeGrowth",value:function(n){if(0===n.length)return 0;var e=n.slice(-7),t=n.slice(-14,-7),r=e.reduce(function(n,e){return n+(e.linksRead||0)+(e.highlightsMade||0)},0),a=t.reduce(function(n,e){return n+(e.linksRead||0)+(e.highlightsMade||0)},0);return 0===a?r>0?1:0:Math.max(0,Math.min(2,r/a))}},{key:"callOpenAI",value:(n=h(A().m(function n(e){var t,r,a;return A().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,fetch("".concat(this.baseURL,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"user",content:e}],temperature:.7,max_tokens:500})});case 1:if((r=n.v).ok){n.n=2;break}throw new Error("OpenAI API error: ".concat(r.statusText));case 2:return n.n=3,r.json();case 3:return a=n.v,n.a(2,(null===(t=a.choices[0])||void 0===t||null===(t=t.message)||void 0===t?void 0:t.content)||"")}},n,this)})),function(e){return n.apply(this,arguments)})},{key:"parseInsights",value:function(n){try{var e=JSON.parse(n);return Array.isArray(e)?e.map(function(n){return o(o({id:"insight-".concat(Date.now(),"-").concat(Math.random())},n),{},{createdAt:Date.now()})}):[]}catch(e){return[{id:"insight-".concat(Date.now()),type:"summary",content:n.slice(0,200),createdAt:Date.now()}]}}},{key:"parseCrossReferences",value:function(n,e){try{var t=JSON.parse(n);return Array.isArray(t)?t.map(function(n){return o(o({id:"ref-".concat(Date.now(),"-").concat(Math.random())},n),{},{createdAt:Date.now()})}):[]}catch(n){return[]}}}]);var n,e,t,r,a,c,u,d}(),B=new C({apiKey:""})},519:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.version=void 0,e.version="0.0.0-automated"},530:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DEFAULT_HEADERS=void 0;const r=t(519);e.DEFAULT_HEADERS={"X-Client-Info":`postgrest-js/${r.version}`}},540:(n,e,t)=>{n.exports=t(287)},551:(n,e,t)=>{var r=t(540),a=t(982);function o(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function c(n,e){l(n,e),l(n+"Capture",e)}function l(n,e){for(s[n]=e,n=0;n<e.length;n++)i.add(e[n])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,A=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function h(n,e,t,r,a,o,i){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=n,this.type=e,this.sanitizeURL=o,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(n){g[n]=new h(n,0,!1,n,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(n){var e=n[0];g[e]=new h(e,1,!1,n[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(n){g[n]=new h(n,2,!1,n.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(n){g[n]=new h(n,2,!1,n,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(n){g[n]=new h(n,3,!1,n.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(n){g[n]=new h(n,3,!0,n,null,!1,!1)}),["capture","download"].forEach(function(n){g[n]=new h(n,4,!1,n,null,!1,!1)}),["cols","rows","size","span"].forEach(function(n){g[n]=new h(n,6,!1,n,null,!1,!1)}),["rowSpan","start"].forEach(function(n){g[n]=new h(n,5,!1,n.toLowerCase(),null,!1,!1)});var m=/[\-:]([a-z])/g;function v(n){return n[1].toUpperCase()}function b(n,e,t,r){var a=g.hasOwnProperty(e)?g[e]:null;(null!==a?0!==a.type:r||!(2<e.length)||"o"!==e[0]&&"O"!==e[0]||"n"!==e[1]&&"N"!==e[1])&&(function(n,e,t,r){if(null==e||function(n,e,t,r){if(null!==t&&0===t.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(n=n.toLowerCase().slice(0,5))&&"aria-"!==n);default:return!1}}(n,e,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,t,a,r)&&(t=null),r||null===a?function(n){return!!d.call(f,n)||!d.call(p,n)&&(A.test(n)?f[n]=!0:(p[n]=!0,!1))}(e)&&(null===t?n.removeAttribute(e):n.setAttribute(e,""+t)):a.mustUseProperty?n[a.propertyName]=null===t?3!==a.type&&"":t:(e=a.attributeName,r=a.attributeNamespace,null===t?n.removeAttribute(e):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?n.setAttributeNS(r,e,t):n.setAttribute(e,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(n){var e=n.replace(m,v);g[e]=new h(e,1,!1,n,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(n){var e=n.replace(m,v);g[e]=new h(e,1,!1,n,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(n){var e=n.replace(m,v);g[e]=new h(e,1,!1,n,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(n){g[n]=new h(n,1,!1,n.toLowerCase(),null,!1,!1)}),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(n){g[n]=new h(n,1,!1,n.toLowerCase(),null,!0,!0)});var C=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=Symbol.for("react.element"),E=Symbol.for("react.portal"),B=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),k=Symbol.for("react.profiler"),w=Symbol.for("react.provider"),j=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),I=Symbol.for("react.memo"),_=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var T=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function P(n){return null===n||"object"!=typeof n?null:"function"==typeof(n=O&&n[O]||n["@@iterator"])?n:null}var D,L=Object.assign;function R(n){if(void 0===D)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);D=e&&e[1]||""}return"\n"+D+n}var M=!1;function F(n,e){if(!n||M)return"";M=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(e,[])}catch(n){var r=n}Reflect.construct(n,[],e)}else{try{e.call()}catch(n){r=n}n.call(e.prototype)}else{try{throw Error()}catch(n){r=n}n()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,s=o.length-1;1<=i&&0<=s&&a[i]!==o[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==o[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==o[s]){var c="\n"+a[i].replace(" at new "," at ");return n.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",n.displayName)),c}}while(1<=i&&0<=s);break}}}finally{M=!1,Error.prepareStackTrace=t}return(n=n?n.displayName||n.name:"")?R(n):""}function U(n){switch(n.tag){case 5:return R(n.type);case 16:return R("Lazy");case 13:return R("Suspense");case 19:return R("SuspenseList");case 0:case 2:case 15:return F(n.type,!1);case 11:return F(n.type.render,!1);case 1:return F(n.type,!0);default:return""}}function Y(n){if(null==n)return null;if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n;switch(n){case B:return"Fragment";case E:return"Portal";case k:return"Profiler";case x:return"StrictMode";case z:return"Suspense";case N:return"SuspenseList"}if("object"==typeof n)switch(n.$$typeof){case j:return(n.displayName||"Context")+".Consumer";case w:return(n._context.displayName||"Context")+".Provider";case S:var e=n.render;return(n=n.displayName)||(n=""!==(n=e.displayName||e.name||"")?"ForwardRef("+n+")":"ForwardRef"),n;case I:return null!==(e=n.displayName||null)?e:Y(n.type)||"Memo";case _:e=n._payload,n=n._init;try{return Y(n(e))}catch(n){}}return null}function q(n){var e=n.type;switch(n.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return n=(n=e.render).displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Y(e);case 8:return e===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e}return null}function $(n){switch(typeof n){case"boolean":case"number":case"string":case"undefined":case"object":return n;default:return""}}function W(n){var e=n.type;return(n=n.nodeName)&&"input"===n.toLowerCase()&&("checkbox"===e||"radio"===e)}function G(n){n._valueTracker||(n._valueTracker=function(n){var e=W(n)?"checked":"value",t=Object.getOwnPropertyDescriptor(n.constructor.prototype,e),r=""+n[e];if(!n.hasOwnProperty(e)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(n,e,{configurable:!0,get:function(){return a.call(this)},set:function(n){r=""+n,o.call(this,n)}}),Object.defineProperty(n,e,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(n){r=""+n},stopTracking:function(){n._valueTracker=null,delete n[e]}}}}(n))}function H(n){if(!n)return!1;var e=n._valueTracker;if(!e)return!0;var t=e.getValue(),r="";return n&&(r=W(n)?n.checked?"true":"false":n.value),(n=r)!==t&&(e.setValue(n),!0)}function V(n){if(void 0===(n=n||("undefined"!=typeof document?document:void 0)))return null;try{return n.activeElement||n.body}catch(e){return n.body}}function K(n,e){var t=e.checked;return L({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:n._wrapperState.initialChecked})}function Q(n,e){var t=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;t=$(null!=e.value?e.value:t),n._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Z(n,e){null!=(e=e.checked)&&b(n,"checked",e,!1)}function X(n,e){Z(n,e);var t=$(e.value),r=e.type;if(null!=t)"number"===r?(0===t&&""===n.value||n.value!=t)&&(n.value=""+t):n.value!==""+t&&(n.value=""+t);else if("submit"===r||"reset"===r)return void n.removeAttribute("value");e.hasOwnProperty("value")?nn(n,e.type,t):e.hasOwnProperty("defaultValue")&&nn(n,e.type,$(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(n.defaultChecked=!!e.defaultChecked)}function J(n,e,t){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+n._wrapperState.initialValue,t||e===n.value||(n.value=e),n.defaultValue=e}""!==(t=n.name)&&(n.name=""),n.defaultChecked=!!n._wrapperState.initialChecked,""!==t&&(n.name=t)}function nn(n,e,t){"number"===e&&V(n.ownerDocument)===n||(null==t?n.defaultValue=""+n._wrapperState.initialValue:n.defaultValue!==""+t&&(n.defaultValue=""+t))}var en=Array.isArray;function tn(n,e,t,r){if(n=n.options,e){e={};for(var a=0;a<t.length;a++)e["$"+t[a]]=!0;for(t=0;t<n.length;t++)a=e.hasOwnProperty("$"+n[t].value),n[t].selected!==a&&(n[t].selected=a),a&&r&&(n[t].defaultSelected=!0)}else{for(t=""+$(t),e=null,a=0;a<n.length;a++){if(n[a].value===t)return n[a].selected=!0,void(r&&(n[a].defaultSelected=!0));null!==e||n[a].disabled||(e=n[a])}null!==e&&(e.selected=!0)}}function rn(n,e){if(null!=e.dangerouslySetInnerHTML)throw Error(o(91));return L({},e,{value:void 0,defaultValue:void 0,children:""+n._wrapperState.initialValue})}function an(n,e){var t=e.value;if(null==t){if(t=e.children,e=e.defaultValue,null!=t){if(null!=e)throw Error(o(92));if(en(t)){if(1<t.length)throw Error(o(93));t=t[0]}e=t}null==e&&(e=""),t=e}n._wrapperState={initialValue:$(t)}}function on(n,e){var t=$(e.value),r=$(e.defaultValue);null!=t&&((t=""+t)!==n.value&&(n.value=t),null==e.defaultValue&&n.defaultValue!==t&&(n.defaultValue=t)),null!=r&&(n.defaultValue=""+r)}function sn(n){var e=n.textContent;e===n._wrapperState.initialValue&&""!==e&&null!==e&&(n.value=e)}function cn(n){switch(n){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ln(n,e){return null==n||"http://www.w3.org/1999/xhtml"===n?cn(e):"http://www.w3.org/2000/svg"===n&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":n}var un,dn,An=(dn=function(n,e){if("http://www.w3.org/2000/svg"!==n.namespaceURI||"innerHTML"in n)n.innerHTML=e;else{for((un=un||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=un.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;e.firstChild;)n.appendChild(e.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(n,e,t,r){MSApp.execUnsafeLocalFunction(function(){return dn(n,e)})}:dn);function pn(n,e){if(e){var t=n.firstChild;if(t&&t===n.lastChild&&3===t.nodeType)return void(t.nodeValue=e)}n.textContent=e}var fn={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},hn=["Webkit","ms","Moz","O"];function gn(n,e,t){return null==e||"boolean"==typeof e||""===e?"":t||"number"!=typeof e||0===e||fn.hasOwnProperty(n)&&fn[n]?(""+e).trim():e+"px"}function mn(n,e){for(var t in n=n.style,e)if(e.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=gn(t,e[t],r);"float"===t&&(t="cssFloat"),r?n.setProperty(t,a):n[t]=a}}Object.keys(fn).forEach(function(n){hn.forEach(function(e){e=e+n.charAt(0).toUpperCase()+n.substring(1),fn[e]=fn[n]})});var vn=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function bn(n,e){if(e){if(vn[n]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(o(137,n));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(o(60));if("object"!=typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=e.style&&"object"!=typeof e.style)throw Error(o(62))}}function Cn(n,e){if(-1===n.indexOf("-"))return"string"==typeof e.is;switch(n){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var yn=null;function En(n){return(n=n.target||n.srcElement||window).correspondingUseElement&&(n=n.correspondingUseElement),3===n.nodeType?n.parentNode:n}var Bn=null,xn=null,kn=null;function wn(n){if(n=ba(n)){if("function"!=typeof Bn)throw Error(o(280));var e=n.stateNode;e&&(e=ya(e),Bn(n.stateNode,n.type,e))}}function jn(n){xn?kn?kn.push(n):kn=[n]:xn=n}function Sn(){if(xn){var n=xn,e=kn;if(kn=xn=null,wn(n),e)for(n=0;n<e.length;n++)wn(e[n])}}function zn(n,e){return n(e)}function Nn(){}var In=!1;function _n(n,e,t){if(In)return n(e,t);In=!0;try{return zn(n,e,t)}finally{In=!1,(null!==xn||null!==kn)&&(Nn(),Sn())}}function Tn(n,e){var t=n.stateNode;if(null===t)return null;var r=ya(t);if(null===r)return null;t=r[e];n:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(n=n.type)||"input"===n||"select"===n||"textarea"===n)),n=!r;break n;default:n=!1}if(n)return null;if(t&&"function"!=typeof t)throw Error(o(231,e,typeof t));return t}var On=!1;if(u)try{var Pn={};Object.defineProperty(Pn,"passive",{get:function(){On=!0}}),window.addEventListener("test",Pn,Pn),window.removeEventListener("test",Pn,Pn)}catch(dn){On=!1}function Dn(n,e,t,r,a,o,i,s,c){var l=Array.prototype.slice.call(arguments,3);try{e.apply(t,l)}catch(n){this.onError(n)}}var Ln=!1,Rn=null,Mn=!1,Fn=null,Un={onError:function(n){Ln=!0,Rn=n}};function Yn(n,e,t,r,a,o,i,s,c){Ln=!1,Rn=null,Dn.apply(Un,arguments)}function qn(n){var e=n,t=n;if(n.alternate)for(;e.return;)e=e.return;else{n=e;do{!!(4098&(e=n).flags)&&(t=e.return),n=e.return}while(n)}return 3===e.tag?t:null}function $n(n){if(13===n.tag){var e=n.memoizedState;if(null===e&&null!==(n=n.alternate)&&(e=n.memoizedState),null!==e)return e.dehydrated}return null}function Wn(n){if(qn(n)!==n)throw Error(o(188))}function Gn(n){return null!==(n=function(n){var e=n.alternate;if(!e){if(null===(e=qn(n)))throw Error(o(188));return e!==n?null:n}for(var t=n,r=e;;){var a=t.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){t=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===t)return Wn(a),n;if(i===r)return Wn(a),e;i=i.sibling}throw Error(o(188))}if(t.return!==r.return)t=a,r=i;else{for(var s=!1,c=a.child;c;){if(c===t){s=!0,t=a,r=i;break}if(c===r){s=!0,r=a,t=i;break}c=c.sibling}if(!s){for(c=i.child;c;){if(c===t){s=!0,t=i,r=a;break}if(c===r){s=!0,r=i,t=a;break}c=c.sibling}if(!s)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?n:e}(n))?Hn(n):null}function Hn(n){if(5===n.tag||6===n.tag)return n;for(n=n.child;null!==n;){var e=Hn(n);if(null!==e)return e;n=n.sibling}return null}var Vn=a.unstable_scheduleCallback,Kn=a.unstable_cancelCallback,Qn=a.unstable_shouldYield,Zn=a.unstable_requestPaint,Xn=a.unstable_now,Jn=a.unstable_getCurrentPriorityLevel,ne=a.unstable_ImmediatePriority,ee=a.unstable_UserBlockingPriority,te=a.unstable_NormalPriority,re=a.unstable_LowPriority,ae=a.unstable_IdlePriority,oe=null,ie=null,se=Math.clz32?Math.clz32:function(n){return 0===(n>>>=0)?32:31-(ce(n)/le|0)|0},ce=Math.log,le=Math.LN2,ue=64,de=4194304;function Ae(n){switch(n&-n){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&n;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&n;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return n}}function pe(n,e){var t=n.pendingLanes;if(0===t)return 0;var r=0,a=n.suspendedLanes,o=n.pingedLanes,i=268435455&t;if(0!==i){var s=i&~a;0!==s?r=Ae(s):0!==(o&=i)&&(r=Ae(o))}else 0!==(i=t&~a)?r=Ae(i):0!==o&&(r=Ae(o));if(0===r)return 0;if(0!==e&&e!==r&&0===(e&a)&&((a=r&-r)>=(o=e&-e)||16===a&&4194240&o))return e;if(4&r&&(r|=16&t),0!==(e=n.entangledLanes))for(n=n.entanglements,e&=r;0<e;)a=1<<(t=31-se(e)),r|=n[t],e&=~a;return r}function fe(n,e){switch(n){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;default:return-1}}function he(n){return 0!=(n=-1073741825&n.pendingLanes)?n:1073741824&n?1073741824:0}function ge(){var n=ue;return!(4194240&(ue<<=1))&&(ue=64),n}function me(n){for(var e=[],t=0;31>t;t++)e.push(n);return e}function ve(n,e,t){n.pendingLanes|=e,536870912!==e&&(n.suspendedLanes=0,n.pingedLanes=0),(n=n.eventTimes)[e=31-se(e)]=t}function be(n,e){var t=n.entangledLanes|=e;for(n=n.entanglements;t;){var r=31-se(t),a=1<<r;a&e|n[r]&e&&(n[r]|=e),t&=~a}}var Ce=0;function ye(n){return 1<(n&=-n)?4<n?268435455&n?16:536870912:4:1}var Ee,Be,xe,ke,we,je=!1,Se=[],ze=null,Ne=null,Ie=null,_e=new Map,Te=new Map,Oe=[],Pe="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function De(n,e){switch(n){case"focusin":case"focusout":ze=null;break;case"dragenter":case"dragleave":Ne=null;break;case"mouseover":case"mouseout":Ie=null;break;case"pointerover":case"pointerout":_e.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Te.delete(e.pointerId)}}function Le(n,e,t,r,a,o){return null===n||n.nativeEvent!==o?(n={blockedOn:e,domEventName:t,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==e&&null!==(e=ba(e))&&Be(e),n):(n.eventSystemFlags|=r,e=n.targetContainers,null!==a&&-1===e.indexOf(a)&&e.push(a),n)}function Re(n){var e=va(n.target);if(null!==e){var t=qn(e);if(null!==t)if(13===(e=t.tag)){if(null!==(e=$n(t)))return n.blockedOn=e,void we(n.priority,function(){xe(t)})}else if(3===e&&t.stateNode.current.memoizedState.isDehydrated)return void(n.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}n.blockedOn=null}function Me(n){if(null!==n.blockedOn)return!1;for(var e=n.targetContainers;0<e.length;){var t=Qe(n.domEventName,n.eventSystemFlags,e[0],n.nativeEvent);if(null!==t)return null!==(e=ba(t))&&Be(e),n.blockedOn=t,!1;var r=new(t=n.nativeEvent).constructor(t.type,t);yn=r,t.target.dispatchEvent(r),yn=null,e.shift()}return!0}function Fe(n,e,t){Me(n)&&t.delete(e)}function Ue(){je=!1,null!==ze&&Me(ze)&&(ze=null),null!==Ne&&Me(Ne)&&(Ne=null),null!==Ie&&Me(Ie)&&(Ie=null),_e.forEach(Fe),Te.forEach(Fe)}function Ye(n,e){n.blockedOn===e&&(n.blockedOn=null,je||(je=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ue)))}function qe(n){function e(e){return Ye(e,n)}if(0<Se.length){Ye(Se[0],n);for(var t=1;t<Se.length;t++){var r=Se[t];r.blockedOn===n&&(r.blockedOn=null)}}for(null!==ze&&Ye(ze,n),null!==Ne&&Ye(Ne,n),null!==Ie&&Ye(Ie,n),_e.forEach(e),Te.forEach(e),t=0;t<Oe.length;t++)(r=Oe[t]).blockedOn===n&&(r.blockedOn=null);for(;0<Oe.length&&null===(t=Oe[0]).blockedOn;)Re(t),null===t.blockedOn&&Oe.shift()}var $e=C.ReactCurrentBatchConfig,We=!0;function Ge(n,e,t,r){var a=Ce,o=$e.transition;$e.transition=null;try{Ce=1,Ve(n,e,t,r)}finally{Ce=a,$e.transition=o}}function He(n,e,t,r){var a=Ce,o=$e.transition;$e.transition=null;try{Ce=4,Ve(n,e,t,r)}finally{Ce=a,$e.transition=o}}function Ve(n,e,t,r){if(We){var a=Qe(n,e,t,r);if(null===a)$r(n,e,r,Ke,t),De(n,r);else if(function(n,e,t,r,a){switch(e){case"focusin":return ze=Le(ze,n,e,t,r,a),!0;case"dragenter":return Ne=Le(Ne,n,e,t,r,a),!0;case"mouseover":return Ie=Le(Ie,n,e,t,r,a),!0;case"pointerover":var o=a.pointerId;return _e.set(o,Le(_e.get(o)||null,n,e,t,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Te.set(o,Le(Te.get(o)||null,n,e,t,r,a)),!0}return!1}(a,n,e,t,r))r.stopPropagation();else if(De(n,r),4&e&&-1<Pe.indexOf(n)){for(;null!==a;){var o=ba(a);if(null!==o&&Ee(o),null===(o=Qe(n,e,t,r))&&$r(n,e,r,Ke,t),o===a)break;a=o}null!==a&&r.stopPropagation()}else $r(n,e,r,null,t)}}var Ke=null;function Qe(n,e,t,r){if(Ke=null,null!==(n=va(n=En(r))))if(null===(e=qn(n)))n=null;else if(13===(t=e.tag)){if(null!==(n=$n(e)))return n;n=null}else if(3===t){if(e.stateNode.current.memoizedState.isDehydrated)return 3===e.tag?e.stateNode.containerInfo:null;n=null}else e!==n&&(n=null);return Ke=n,null}function Ze(n){switch(n){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Jn()){case ne:return 1;case ee:return 4;case te:case re:return 16;case ae:return 536870912;default:return 16}default:return 16}}var Xe=null,Je=null,nt=null;function et(){if(nt)return nt;var n,e,t=Je,r=t.length,a="value"in Xe?Xe.value:Xe.textContent,o=a.length;for(n=0;n<r&&t[n]===a[n];n++);var i=r-n;for(e=1;e<=i&&t[r-e]===a[o-e];e++);return nt=a.slice(n,1<e?1-e:void 0)}function tt(n){var e=n.keyCode;return"charCode"in n?0===(n=n.charCode)&&13===e&&(n=13):n=e,10===n&&(n=13),32<=n||13===n?n:0}function rt(){return!0}function at(){return!1}function ot(n){function e(e,t,r,a,o){for(var i in this._reactName=e,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=o,this.currentTarget=null,n)n.hasOwnProperty(i)&&(e=n[i],this[i]=e?e(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return L(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():"unknown"!=typeof n.returnValue&&(n.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():"unknown"!=typeof n.cancelBubble&&(n.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),e}var it,st,ct,lt={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(n){return n.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=ot(lt),dt=L({},lt,{view:0,detail:0}),At=ot(dt),pt=L({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kt,button:0,buttons:0,relatedTarget:function(n){return void 0===n.relatedTarget?n.fromElement===n.srcElement?n.toElement:n.fromElement:n.relatedTarget},movementX:function(n){return"movementX"in n?n.movementX:(n!==ct&&(ct&&"mousemove"===n.type?(it=n.screenX-ct.screenX,st=n.screenY-ct.screenY):st=it=0,ct=n),it)},movementY:function(n){return"movementY"in n?n.movementY:st}}),ft=ot(pt),ht=ot(L({},pt,{dataTransfer:0})),gt=ot(L({},dt,{relatedTarget:0})),mt=ot(L({},lt,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=L({},lt,{clipboardData:function(n){return"clipboardData"in n?n.clipboardData:window.clipboardData}}),bt=ot(vt),Ct=ot(L({},lt,{data:0})),yt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Et={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xt(n){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(n):!!(n=Bt[n])&&!!e[n]}function kt(){return xt}var wt=L({},dt,{key:function(n){if(n.key){var e=yt[n.key]||n.key;if("Unidentified"!==e)return e}return"keypress"===n.type?13===(n=tt(n))?"Enter":String.fromCharCode(n):"keydown"===n.type||"keyup"===n.type?Et[n.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kt,charCode:function(n){return"keypress"===n.type?tt(n):0},keyCode:function(n){return"keydown"===n.type||"keyup"===n.type?n.keyCode:0},which:function(n){return"keypress"===n.type?tt(n):"keydown"===n.type||"keyup"===n.type?n.keyCode:0}}),jt=ot(wt),St=ot(L({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),zt=ot(L({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kt})),Nt=ot(L({},lt,{propertyName:0,elapsedTime:0,pseudoElement:0})),It=L({},pt,{deltaX:function(n){return"deltaX"in n?n.deltaX:"wheelDeltaX"in n?-n.wheelDeltaX:0},deltaY:function(n){return"deltaY"in n?n.deltaY:"wheelDeltaY"in n?-n.wheelDeltaY:"wheelDelta"in n?-n.wheelDelta:0},deltaZ:0,deltaMode:0}),_t=ot(It),Tt=[9,13,27,32],Ot=u&&"CompositionEvent"in window,Pt=null;u&&"documentMode"in document&&(Pt=document.documentMode);var Dt=u&&"TextEvent"in window&&!Pt,Lt=u&&(!Ot||Pt&&8<Pt&&11>=Pt),Rt=String.fromCharCode(32),Mt=!1;function Ft(n,e){switch(n){case"keyup":return-1!==Tt.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ut(n){return"object"==typeof(n=n.detail)&&"data"in n?n.data:null}var Yt=!1,qt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $t(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return"input"===e?!!qt[n.type]:"textarea"===e}function Wt(n,e,t,r){jn(r),0<(e=Gr(e,"onChange")).length&&(t=new ut("onChange","change",null,t,r),n.push({event:t,listeners:e}))}var Gt=null,Ht=null;function Vt(n){Rr(n,0)}function Kt(n){if(H(Ca(n)))return n}function Qt(n,e){if("change"===n)return e}var Zt=!1;if(u){var Xt;if(u){var Jt="oninput"in document;if(!Jt){var nr=document.createElement("div");nr.setAttribute("oninput","return;"),Jt="function"==typeof nr.oninput}Xt=Jt}else Xt=!1;Zt=Xt&&(!document.documentMode||9<document.documentMode)}function er(){Gt&&(Gt.detachEvent("onpropertychange",tr),Ht=Gt=null)}function tr(n){if("value"===n.propertyName&&Kt(Ht)){var e=[];Wt(e,Ht,n,En(n)),_n(Vt,e)}}function rr(n,e,t){"focusin"===n?(er(),Ht=t,(Gt=e).attachEvent("onpropertychange",tr)):"focusout"===n&&er()}function ar(n){if("selectionchange"===n||"keyup"===n||"keydown"===n)return Kt(Ht)}function or(n,e){if("click"===n)return Kt(e)}function ir(n,e){if("input"===n||"change"===n)return Kt(e)}var sr="function"==typeof Object.is?Object.is:function(n,e){return n===e&&(0!==n||1/n==1/e)||n!=n&&e!=e};function cr(n,e){if(sr(n,e))return!0;if("object"!=typeof n||null===n||"object"!=typeof e||null===e)return!1;var t=Object.keys(n),r=Object.keys(e);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!d.call(e,a)||!sr(n[a],e[a]))return!1}return!0}function lr(n){for(;n&&n.firstChild;)n=n.firstChild;return n}function ur(n,e){var t,r=lr(n);for(n=0;r;){if(3===r.nodeType){if(t=n+r.textContent.length,n<=e&&t>=e)return{node:r,offset:e-n};n=t}n:{for(;r;){if(r.nextSibling){r=r.nextSibling;break n}r=r.parentNode}r=void 0}r=lr(r)}}function dr(n,e){return!(!n||!e)&&(n===e||(!n||3!==n.nodeType)&&(e&&3===e.nodeType?dr(n,e.parentNode):"contains"in n?n.contains(e):!!n.compareDocumentPosition&&!!(16&n.compareDocumentPosition(e))))}function Ar(){for(var n=window,e=V();e instanceof n.HTMLIFrameElement;){try{var t="string"==typeof e.contentWindow.location.href}catch(n){t=!1}if(!t)break;e=V((n=e.contentWindow).document)}return e}function pr(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e&&("input"===e&&("text"===n.type||"search"===n.type||"tel"===n.type||"url"===n.type||"password"===n.type)||"textarea"===e||"true"===n.contentEditable)}function fr(n){var e=Ar(),t=n.focusedElem,r=n.selectionRange;if(e!==t&&t&&t.ownerDocument&&dr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(e=r.start,void 0===(n=r.end)&&(n=e),"selectionStart"in t)t.selectionStart=e,t.selectionEnd=Math.min(n,t.value.length);else if((n=(e=t.ownerDocument||document)&&e.defaultView||window).getSelection){n=n.getSelection();var a=t.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!n.extend&&o>r&&(a=r,r=o,o=a),a=ur(t,o);var i=ur(t,r);a&&i&&(1!==n.rangeCount||n.anchorNode!==a.node||n.anchorOffset!==a.offset||n.focusNode!==i.node||n.focusOffset!==i.offset)&&((e=e.createRange()).setStart(a.node,a.offset),n.removeAllRanges(),o>r?(n.addRange(e),n.extend(i.node,i.offset)):(e.setEnd(i.node,i.offset),n.addRange(e)))}for(e=[],n=t;n=n.parentNode;)1===n.nodeType&&e.push({element:n,left:n.scrollLeft,top:n.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<e.length;t++)(n=e[t]).element.scrollLeft=n.left,n.element.scrollTop=n.top}}var hr=u&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,vr=null,br=!1;function Cr(n,e,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;br||null==gr||gr!==V(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&cr(vr,r)||(vr=r,0<(r=Gr(mr,"onSelect")).length&&(e=new ut("onSelect","select",null,e,t),n.push({event:e,listeners:r}),e.target=gr)))}function yr(n,e){var t={};return t[n.toLowerCase()]=e.toLowerCase(),t["Webkit"+n]="webkit"+e,t["Moz"+n]="moz"+e,t}var Er={animationend:yr("Animation","AnimationEnd"),animationiteration:yr("Animation","AnimationIteration"),animationstart:yr("Animation","AnimationStart"),transitionend:yr("Transition","TransitionEnd")},Br={},xr={};function kr(n){if(Br[n])return Br[n];if(!Er[n])return n;var e,t=Er[n];for(e in t)if(t.hasOwnProperty(e)&&e in xr)return Br[n]=t[e];return n}u&&(xr=document.createElement("div").style,"AnimationEvent"in window||(delete Er.animationend.animation,delete Er.animationiteration.animation,delete Er.animationstart.animation),"TransitionEvent"in window||delete Er.transitionend.transition);var wr=kr("animationend"),jr=kr("animationiteration"),Sr=kr("animationstart"),zr=kr("transitionend"),Nr=new Map,Ir="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function _r(n,e){Nr.set(n,e),c(e,[n])}for(var Tr=0;Tr<Ir.length;Tr++){var Or=Ir[Tr];_r(Or.toLowerCase(),"on"+(Or[0].toUpperCase()+Or.slice(1)))}_r(wr,"onAnimationEnd"),_r(jr,"onAnimationIteration"),_r(Sr,"onAnimationStart"),_r("dblclick","onDoubleClick"),_r("focusin","onFocus"),_r("focusout","onBlur"),_r(zr,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Pr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Pr));function Lr(n,e,t){var r=n.type||"unknown-event";n.currentTarget=t,function(n,e,t,r,a,i,s,c,l){if(Yn.apply(this,arguments),Ln){if(!Ln)throw Error(o(198));var u=Rn;Ln=!1,Rn=null,Mn||(Mn=!0,Fn=u)}}(r,e,void 0,n),n.currentTarget=null}function Rr(n,e){e=!!(4&e);for(var t=0;t<n.length;t++){var r=n[t],a=r.event;r=r.listeners;n:{var o=void 0;if(e)for(var i=r.length-1;0<=i;i--){var s=r[i],c=s.instance,l=s.currentTarget;if(s=s.listener,c!==o&&a.isPropagationStopped())break n;Lr(a,s,l),o=c}else for(i=0;i<r.length;i++){if(c=(s=r[i]).instance,l=s.currentTarget,s=s.listener,c!==o&&a.isPropagationStopped())break n;Lr(a,s,l),o=c}}}if(Mn)throw n=Fn,Mn=!1,Fn=null,n}function Mr(n,e){var t=e[ha];void 0===t&&(t=e[ha]=new Set);var r=n+"__bubble";t.has(r)||(qr(e,n,2,!1),t.add(r))}function Fr(n,e,t){var r=0;e&&(r|=4),qr(t,n,r,e)}var Ur="_reactListening"+Math.random().toString(36).slice(2);function Yr(n){if(!n[Ur]){n[Ur]=!0,i.forEach(function(e){"selectionchange"!==e&&(Dr.has(e)||Fr(e,!1,n),Fr(e,!0,n))});var e=9===n.nodeType?n:n.ownerDocument;null===e||e[Ur]||(e[Ur]=!0,Fr("selectionchange",!1,e))}}function qr(n,e,t,r){switch(Ze(e)){case 1:var a=Ge;break;case 4:a=He;break;default:a=Ve}t=a.bind(null,e,t,n),a=void 0,!On||"touchstart"!==e&&"touchmove"!==e&&"wheel"!==e||(a=!0),r?void 0!==a?n.addEventListener(e,t,{capture:!0,passive:a}):n.addEventListener(e,t,!0):void 0!==a?n.addEventListener(e,t,{passive:a}):n.addEventListener(e,t,!1)}function $r(n,e,t,r,a){var o=r;if(!(1&e||2&e||null===r))n:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var c=i.tag;if((3===c||4===c)&&((c=i.stateNode.containerInfo)===a||8===c.nodeType&&c.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=va(s)))return;if(5===(c=i.tag)||6===c){r=o=i;continue n}s=s.parentNode}}r=r.return}_n(function(){var r=o,a=En(t),i=[];n:{var s=Nr.get(n);if(void 0!==s){var c=ut,l=n;switch(n){case"keypress":if(0===tt(t))break n;case"keydown":case"keyup":c=jt;break;case"focusin":l="focus",c=gt;break;case"focusout":l="blur",c=gt;break;case"beforeblur":case"afterblur":c=gt;break;case"click":if(2===t.button)break n;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=ft;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=ht;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=zt;break;case wr:case jr:case Sr:c=mt;break;case zr:c=Nt;break;case"scroll":c=At;break;case"wheel":c=_t;break;case"copy":case"cut":case"paste":c=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=St}var u=!!(4&e),d=!u&&"scroll"===n,A=u?null!==s?s+"Capture":null:s;u=[];for(var p,f=r;null!==f;){var h=(p=f).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==A&&null!=(h=Tn(f,A))&&u.push(Wr(f,h,p))),d)break;f=f.return}0<u.length&&(s=new c(s,l,null,t,a),i.push({event:s,listeners:u}))}}if(!(7&e)){if(c="mouseout"===n||"pointerout"===n,(!(s="mouseover"===n||"pointerover"===n)||t===yn||!(l=t.relatedTarget||t.fromElement)||!va(l)&&!l[fa])&&(c||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,c?(c=r,null!==(l=(l=t.relatedTarget||t.toElement)?va(l):null)&&(l!==(d=qn(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=r),c!==l)){if(u=ft,h="onMouseLeave",A="onMouseEnter",f="mouse","pointerout"!==n&&"pointerover"!==n||(u=St,h="onPointerLeave",A="onPointerEnter",f="pointer"),d=null==c?s:Ca(c),p=null==l?s:Ca(l),(s=new u(h,f+"leave",c,t,a)).target=d,s.relatedTarget=p,h=null,va(a)===r&&((u=new u(A,f+"enter",l,t,a)).target=p,u.relatedTarget=d,h=u),d=h,c&&l)n:{for(A=l,f=0,p=u=c;p;p=Hr(p))f++;for(p=0,h=A;h;h=Hr(h))p++;for(;0<f-p;)u=Hr(u),f--;for(;0<p-f;)A=Hr(A),p--;for(;f--;){if(u===A||null!==A&&u===A.alternate)break n;u=Hr(u),A=Hr(A)}u=null}else u=null;null!==c&&Vr(i,s,c,u,!1),null!==l&&null!==d&&Vr(i,d,l,u,!0)}if("select"===(c=(s=r?Ca(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===c&&"file"===s.type)var g=Qt;else if($t(s))if(Zt)g=ir;else{g=ar;var m=rr}else(c=s.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=or);switch(g&&(g=g(n,r))?Wt(i,g,t,a):(m&&m(n,s,r),"focusout"===n&&(m=s._wrapperState)&&m.controlled&&"number"===s.type&&nn(s,"number",s.value)),m=r?Ca(r):window,n){case"focusin":($t(m)||"true"===m.contentEditable)&&(gr=m,mr=r,vr=null);break;case"focusout":vr=mr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,Cr(i,t,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":Cr(i,t,a)}var v;if(Ot)n:{switch(n){case"compositionstart":var b="onCompositionStart";break n;case"compositionend":b="onCompositionEnd";break n;case"compositionupdate":b="onCompositionUpdate";break n}b=void 0}else Yt?Ft(n,t)&&(b="onCompositionEnd"):"keydown"===n&&229===t.keyCode&&(b="onCompositionStart");b&&(Lt&&"ko"!==t.locale&&(Yt||"onCompositionStart"!==b?"onCompositionEnd"===b&&Yt&&(v=et()):(Je="value"in(Xe=a)?Xe.value:Xe.textContent,Yt=!0)),0<(m=Gr(r,b)).length&&(b=new Ct(b,n,null,t,a),i.push({event:b,listeners:m}),(v||null!==(v=Ut(t)))&&(b.data=v))),(v=Dt?function(n,e){switch(n){case"compositionend":return Ut(e);case"keypress":return 32!==e.which?null:(Mt=!0,Rt);case"textInput":return(n=e.data)===Rt&&Mt?null:n;default:return null}}(n,t):function(n,e){if(Yt)return"compositionend"===n||!Ot&&Ft(n,e)?(n=et(),nt=Je=Xe=null,Yt=!1,n):null;switch(n){case"paste":default:return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return Lt&&"ko"!==e.locale?null:e.data}}(n,t))&&0<(r=Gr(r,"onBeforeInput")).length&&(a=new Ct("onBeforeInput","beforeinput",null,t,a),i.push({event:a,listeners:r}),a.data=v)}Rr(i,e)})}function Wr(n,e,t){return{instance:n,listener:e,currentTarget:t}}function Gr(n,e){for(var t=e+"Capture",r=[];null!==n;){var a=n,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Tn(n,t))&&r.unshift(Wr(n,o,a)),null!=(o=Tn(n,e))&&r.push(Wr(n,o,a))),n=n.return}return r}function Hr(n){if(null===n)return null;do{n=n.return}while(n&&5!==n.tag);return n||null}function Vr(n,e,t,r,a){for(var o=e._reactName,i=[];null!==t&&t!==r;){var s=t,c=s.alternate,l=s.stateNode;if(null!==c&&c===r)break;5===s.tag&&null!==l&&(s=l,a?null!=(c=Tn(t,o))&&i.unshift(Wr(t,c,s)):a||null!=(c=Tn(t,o))&&i.push(Wr(t,c,s))),t=t.return}0!==i.length&&n.push({event:e,listeners:i})}var Kr=/\r\n?/g,Qr=/\u0000|\uFFFD/g;function Zr(n){return("string"==typeof n?n:""+n).replace(Kr,"\n").replace(Qr,"")}function Xr(n,e,t){if(e=Zr(e),Zr(n)!==e&&t)throw Error(o(425))}function Jr(){}var na=null,ea=null;function ta(n,e){return"textarea"===n||"noscript"===n||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(n){return oa.resolve(null).then(n).catch(sa)}:ra;function sa(n){setTimeout(function(){throw n})}function ca(n,e){var t=e,r=0;do{var a=t.nextSibling;if(n.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return n.removeChild(a),void qe(e);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);qe(e)}function la(n){for(;null!=n;n=n.nextSibling){var e=n.nodeType;if(1===e||3===e)break;if(8===e){if("$"===(e=n.data)||"$!"===e||"$?"===e)break;if("/$"===e)return null}}return n}function ua(n){n=n.previousSibling;for(var e=0;n;){if(8===n.nodeType){var t=n.data;if("$"===t||"$!"===t||"$?"===t){if(0===e)return n;e--}else"/$"===t&&e++}n=n.previousSibling}return null}var da=Math.random().toString(36).slice(2),Aa="__reactFiber$"+da,pa="__reactProps$"+da,fa="__reactContainer$"+da,ha="__reactEvents$"+da,ga="__reactListeners$"+da,ma="__reactHandles$"+da;function va(n){var e=n[Aa];if(e)return e;for(var t=n.parentNode;t;){if(e=t[fa]||t[Aa]){if(t=e.alternate,null!==e.child||null!==t&&null!==t.child)for(n=ua(n);null!==n;){if(t=n[Aa])return t;n=ua(n)}return e}t=(n=t).parentNode}return null}function ba(n){return!(n=n[Aa]||n[fa])||5!==n.tag&&6!==n.tag&&13!==n.tag&&3!==n.tag?null:n}function Ca(n){if(5===n.tag||6===n.tag)return n.stateNode;throw Error(o(33))}function ya(n){return n[pa]||null}var Ea=[],Ba=-1;function xa(n){return{current:n}}function ka(n){0>Ba||(n.current=Ea[Ba],Ea[Ba]=null,Ba--)}function wa(n,e){Ba++,Ea[Ba]=n.current,n.current=e}var ja={},Sa=xa(ja),za=xa(!1),Na=ja;function Ia(n,e){var t=n.type.contextTypes;if(!t)return ja;var r=n.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=e[a];return r&&((n=n.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,n.__reactInternalMemoizedMaskedChildContext=o),o}function _a(n){return null!=n.childContextTypes}function Ta(){ka(za),ka(Sa)}function Oa(n,e,t){if(Sa.current!==ja)throw Error(o(168));wa(Sa,e),wa(za,t)}function Pa(n,e,t){var r=n.stateNode;if(e=e.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in e))throw Error(o(108,q(n)||"Unknown",a));return L({},t,r)}function Da(n){return n=(n=n.stateNode)&&n.__reactInternalMemoizedMergedChildContext||ja,Na=Sa.current,wa(Sa,n),wa(za,za.current),!0}function La(n,e,t){var r=n.stateNode;if(!r)throw Error(o(169));t?(n=Pa(n,e,Na),r.__reactInternalMemoizedMergedChildContext=n,ka(za),ka(Sa),wa(Sa,n)):ka(za),wa(za,t)}var Ra=null,Ma=!1,Fa=!1;function Ua(n){null===Ra?Ra=[n]:Ra.push(n)}function Ya(){if(!Fa&&null!==Ra){Fa=!0;var n=0,e=Ce;try{var t=Ra;for(Ce=1;n<t.length;n++){var r=t[n];do{r=r(!0)}while(null!==r)}Ra=null,Ma=!1}catch(e){throw null!==Ra&&(Ra=Ra.slice(n+1)),Vn(ne,Ya),e}finally{Ce=e,Fa=!1}}return null}var qa=[],$a=0,Wa=null,Ga=0,Ha=[],Va=0,Ka=null,Qa=1,Za="";function Xa(n,e){qa[$a++]=Ga,qa[$a++]=Wa,Wa=n,Ga=e}function Ja(n,e,t){Ha[Va++]=Qa,Ha[Va++]=Za,Ha[Va++]=Ka,Ka=n;var r=Qa;n=Za;var a=32-se(r)-1;r&=~(1<<a),t+=1;var o=32-se(e)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Qa=1<<32-se(e)+a|t<<a|r,Za=o+n}else Qa=1<<o|t<<a|r,Za=n}function no(n){null!==n.return&&(Xa(n,1),Ja(n,1,0))}function eo(n){for(;n===Wa;)Wa=qa[--$a],qa[$a]=null,Ga=qa[--$a],qa[$a]=null;for(;n===Ka;)Ka=Ha[--Va],Ha[Va]=null,Za=Ha[--Va],Ha[Va]=null,Qa=Ha[--Va],Ha[Va]=null}var to=null,ro=null,ao=!1,oo=null;function io(n,e){var t=Il(5,null,null,0);t.elementType="DELETED",t.stateNode=e,t.return=n,null===(e=n.deletions)?(n.deletions=[t],n.flags|=16):e.push(t)}function so(n,e){switch(n.tag){case 5:var t=n.type;return null!==(e=1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(n.stateNode=e,to=n,ro=la(e.firstChild),!0);case 6:return null!==(e=""===n.pendingProps||3!==e.nodeType?null:e)&&(n.stateNode=e,to=n,ro=null,!0);case 13:return null!==(e=8!==e.nodeType?null:e)&&(t=null!==Ka?{id:Qa,overflow:Za}:null,n.memoizedState={dehydrated:e,treeContext:t,retryLane:1073741824},(t=Il(18,null,null,0)).stateNode=e,t.return=n,n.child=t,to=n,ro=null,!0);default:return!1}}function co(n){return!(!(1&n.mode)||128&n.flags)}function lo(n){if(ao){var e=ro;if(e){var t=e;if(!so(n,e)){if(co(n))throw Error(o(418));e=la(t.nextSibling);var r=to;e&&so(n,e)?io(r,t):(n.flags=-4097&n.flags|2,ao=!1,to=n)}}else{if(co(n))throw Error(o(418));n.flags=-4097&n.flags|2,ao=!1,to=n}}}function uo(n){for(n=n.return;null!==n&&5!==n.tag&&3!==n.tag&&13!==n.tag;)n=n.return;to=n}function Ao(n){if(n!==to)return!1;if(!ao)return uo(n),ao=!0,!1;var e;if((e=3!==n.tag)&&!(e=5!==n.tag)&&(e="head"!==(e=n.type)&&"body"!==e&&!ta(n.type,n.memoizedProps)),e&&(e=ro)){if(co(n))throw po(),Error(o(418));for(;e;)io(n,e),e=la(e.nextSibling)}if(uo(n),13===n.tag){if(!(n=null!==(n=n.memoizedState)?n.dehydrated:null))throw Error(o(317));n:{for(n=n.nextSibling,e=0;n;){if(8===n.nodeType){var t=n.data;if("/$"===t){if(0===e){ro=la(n.nextSibling);break n}e--}else"$"!==t&&"$!"!==t&&"$?"!==t||e++}n=n.nextSibling}ro=null}}else ro=to?la(n.stateNode.nextSibling):null;return!0}function po(){for(var n=ro;n;)n=la(n.nextSibling)}function fo(){ro=to=null,ao=!1}function ho(n){null===oo?oo=[n]:oo.push(n)}var go=C.ReactCurrentBatchConfig;function mo(n,e,t){if(null!==(n=t.ref)&&"function"!=typeof n&&"object"!=typeof n){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,n));var a=r,i=""+n;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===i?e.ref:(e=function(n){var e=a.refs;null===n?delete e[i]:e[i]=n},e._stringRef=i,e)}if("string"!=typeof n)throw Error(o(284));if(!t._owner)throw Error(o(290,n))}return n}function vo(n,e){throw n=Object.prototype.toString.call(e),Error(o(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n))}function bo(n){return(0,n._init)(n._payload)}function Co(n){function e(e,t){if(n){var r=e.deletions;null===r?(e.deletions=[t],e.flags|=16):r.push(t)}}function t(t,r){if(!n)return null;for(;null!==r;)e(t,r),r=r.sibling;return null}function r(n,e){for(n=new Map;null!==e;)null!==e.key?n.set(e.key,e):n.set(e.index,e),e=e.sibling;return n}function a(n,e){return(n=Tl(n,e)).index=0,n.sibling=null,n}function i(e,t,r){return e.index=r,n?null!==(r=e.alternate)?(r=r.index)<t?(e.flags|=2,t):r:(e.flags|=2,t):(e.flags|=1048576,t)}function s(e){return n&&null===e.alternate&&(e.flags|=2),e}function c(n,e,t,r){return null===e||6!==e.tag?((e=Ll(t,n.mode,r)).return=n,e):((e=a(e,t)).return=n,e)}function l(n,e,t,r){var o=t.type;return o===B?d(n,e,t.props.children,r,t.key):null!==e&&(e.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===_&&bo(o)===e.type)?((r=a(e,t.props)).ref=mo(n,e,t),r.return=n,r):((r=Ol(t.type,t.key,t.props,null,n.mode,r)).ref=mo(n,e,t),r.return=n,r)}function u(n,e,t,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==t.containerInfo||e.stateNode.implementation!==t.implementation?((e=Rl(t,n.mode,r)).return=n,e):((e=a(e,t.children||[])).return=n,e)}function d(n,e,t,r,o){return null===e||7!==e.tag?((e=Pl(t,n.mode,r,o)).return=n,e):((e=a(e,t)).return=n,e)}function A(n,e,t){if("string"==typeof e&&""!==e||"number"==typeof e)return(e=Ll(""+e,n.mode,t)).return=n,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case y:return(t=Ol(e.type,e.key,e.props,null,n.mode,t)).ref=mo(n,null,e),t.return=n,t;case E:return(e=Rl(e,n.mode,t)).return=n,e;case _:return A(n,(0,e._init)(e._payload),t)}if(en(e)||P(e))return(e=Pl(e,n.mode,t,null)).return=n,e;vo(n,e)}return null}function p(n,e,t,r){var a=null!==e?e.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==a?null:c(n,e,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case y:return t.key===a?l(n,e,t,r):null;case E:return t.key===a?u(n,e,t,r):null;case _:return p(n,e,(a=t._init)(t._payload),r)}if(en(t)||P(t))return null!==a?null:d(n,e,t,r,null);vo(n,t)}return null}function f(n,e,t,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return c(e,n=n.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case y:return l(e,n=n.get(null===r.key?t:r.key)||null,r,a);case E:return u(e,n=n.get(null===r.key?t:r.key)||null,r,a);case _:return f(n,e,t,(0,r._init)(r._payload),a)}if(en(r)||P(r))return d(e,n=n.get(t)||null,r,a,null);vo(e,r)}return null}function h(a,o,s,c){for(var l=null,u=null,d=o,h=o=0,g=null;null!==d&&h<s.length;h++){d.index>h?(g=d,d=null):g=d.sibling;var m=p(a,d,s[h],c);if(null===m){null===d&&(d=g);break}n&&d&&null===m.alternate&&e(a,d),o=i(m,o,h),null===u?l=m:u.sibling=m,u=m,d=g}if(h===s.length)return t(a,d),ao&&Xa(a,h),l;if(null===d){for(;h<s.length;h++)null!==(d=A(a,s[h],c))&&(o=i(d,o,h),null===u?l=d:u.sibling=d,u=d);return ao&&Xa(a,h),l}for(d=r(a,d);h<s.length;h++)null!==(g=f(d,a,h,s[h],c))&&(n&&null!==g.alternate&&d.delete(null===g.key?h:g.key),o=i(g,o,h),null===u?l=g:u.sibling=g,u=g);return n&&d.forEach(function(n){return e(a,n)}),ao&&Xa(a,h),l}function g(a,s,c,l){var u=P(c);if("function"!=typeof u)throw Error(o(150));if(null==(c=u.call(c)))throw Error(o(151));for(var d=u=null,h=s,g=s=0,m=null,v=c.next();null!==h&&!v.done;g++,v=c.next()){h.index>g?(m=h,h=null):m=h.sibling;var b=p(a,h,v.value,l);if(null===b){null===h&&(h=m);break}n&&h&&null===b.alternate&&e(a,h),s=i(b,s,g),null===d?u=b:d.sibling=b,d=b,h=m}if(v.done)return t(a,h),ao&&Xa(a,g),u;if(null===h){for(;!v.done;g++,v=c.next())null!==(v=A(a,v.value,l))&&(s=i(v,s,g),null===d?u=v:d.sibling=v,d=v);return ao&&Xa(a,g),u}for(h=r(a,h);!v.done;g++,v=c.next())null!==(v=f(h,a,g,v.value,l))&&(n&&null!==v.alternate&&h.delete(null===v.key?g:v.key),s=i(v,s,g),null===d?u=v:d.sibling=v,d=v);return n&&h.forEach(function(n){return e(a,n)}),ao&&Xa(a,g),u}return function n(r,o,i,c){if("object"==typeof i&&null!==i&&i.type===B&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case y:n:{for(var l=i.key,u=o;null!==u;){if(u.key===l){if((l=i.type)===B){if(7===u.tag){t(r,u.sibling),(o=a(u,i.props.children)).return=r,r=o;break n}}else if(u.elementType===l||"object"==typeof l&&null!==l&&l.$$typeof===_&&bo(l)===u.type){t(r,u.sibling),(o=a(u,i.props)).ref=mo(r,u,i),o.return=r,r=o;break n}t(r,u);break}e(r,u),u=u.sibling}i.type===B?((o=Pl(i.props.children,r.mode,c,i.key)).return=r,r=o):((c=Ol(i.type,i.key,i.props,null,r.mode,c)).ref=mo(r,o,i),c.return=r,r=c)}return s(r);case E:n:{for(u=i.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){t(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break n}t(r,o);break}e(r,o),o=o.sibling}(o=Rl(i,r.mode,c)).return=r,r=o}return s(r);case _:return n(r,o,(u=i._init)(i._payload),c)}if(en(i))return h(r,o,i,c);if(P(i))return g(r,o,i,c);vo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(t(r,o.sibling),(o=a(o,i)).return=r,r=o):(t(r,o),(o=Ll(i,r.mode,c)).return=r,r=o),s(r)):t(r,o)}}var yo=Co(!0),Eo=Co(!1),Bo=xa(null),xo=null,ko=null,wo=null;function jo(){wo=ko=xo=null}function So(n){var e=Bo.current;ka(Bo),n._currentValue=e}function zo(n,e,t){for(;null!==n;){var r=n.alternate;if((n.childLanes&e)!==e?(n.childLanes|=e,null!==r&&(r.childLanes|=e)):null!==r&&(r.childLanes&e)!==e&&(r.childLanes|=e),n===t)break;n=n.return}}function No(n,e){xo=n,wo=ko=null,null!==(n=n.dependencies)&&null!==n.firstContext&&(0!==(n.lanes&e)&&(bs=!0),n.firstContext=null)}function Io(n){var e=n._currentValue;if(wo!==n)if(n={context:n,memoizedValue:e,next:null},null===ko){if(null===xo)throw Error(o(308));ko=n,xo.dependencies={lanes:0,firstContext:n}}else ko=ko.next=n;return e}var _o=null;function To(n){null===_o?_o=[n]:_o.push(n)}function Oo(n,e,t,r){var a=e.interleaved;return null===a?(t.next=t,To(e)):(t.next=a.next,a.next=t),e.interleaved=t,Po(n,r)}function Po(n,e){n.lanes|=e;var t=n.alternate;for(null!==t&&(t.lanes|=e),t=n,n=n.return;null!==n;)n.childLanes|=e,null!==(t=n.alternate)&&(t.childLanes|=e),t=n,n=n.return;return 3===t.tag?t.stateNode:null}var Do=!1;function Lo(n){n.updateQueue={baseState:n.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ro(n,e){n=n.updateQueue,e.updateQueue===n&&(e.updateQueue={baseState:n.baseState,firstBaseUpdate:n.firstBaseUpdate,lastBaseUpdate:n.lastBaseUpdate,shared:n.shared,effects:n.effects})}function Mo(n,e){return{eventTime:n,lane:e,tag:0,payload:null,callback:null,next:null}}function Fo(n,e,t){var r=n.updateQueue;if(null===r)return null;if(r=r.shared,2&Sc){var a=r.pending;return null===a?e.next=e:(e.next=a.next,a.next=e),r.pending=e,Po(n,t)}return null===(a=r.interleaved)?(e.next=e,To(r)):(e.next=a.next,a.next=e),r.interleaved=e,Po(n,t)}function Uo(n,e,t){if(null!==(e=e.updateQueue)&&(e=e.shared,4194240&t)){var r=e.lanes;t|=r&=n.pendingLanes,e.lanes=t,be(n,t)}}function Yo(n,e){var t=n.updateQueue,r=n.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?a=o=i:o=o.next=i,t=t.next}while(null!==t);null===o?a=o=e:o=o.next=e}else a=o=e;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(n.updateQueue=t)}null===(n=t.lastBaseUpdate)?t.firstBaseUpdate=e:n.next=e,t.lastBaseUpdate=e}function qo(n,e,t,r){var a=n.updateQueue;Do=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var c=s,l=c.next;c.next=null,null===i?o=l:i.next=l,i=c;var u=n.alternate;null!==u&&(s=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===s?u.firstBaseUpdate=l:s.next=l,u.lastBaseUpdate=c)}if(null!==o){var d=a.baseState;for(i=0,u=l=c=null,s=o;;){var A=s.lane,p=s.eventTime;if((r&A)===A){null!==u&&(u=u.next={eventTime:p,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});n:{var f=n,h=s;switch(A=e,p=t,h.tag){case 1:if("function"==typeof(f=h.payload)){d=f.call(p,d,A);break n}d=f;break n;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(A="function"==typeof(f=h.payload)?f.call(p,d,A):f))break n;d=L({},d,A);break n;case 2:Do=!0}}null!==s.callback&&0!==s.lane&&(n.flags|=64,null===(A=a.effects)?a.effects=[s]:A.push(s))}else p={eventTime:p,lane:A,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(l=u=p,c=d):u=u.next=p,i|=A;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(A=s).next,A.next=null,a.lastBaseUpdate=A,a.shared.pending=null}}if(null===u&&(c=d),a.baseState=c,a.firstBaseUpdate=l,a.lastBaseUpdate=u,null!==(e=a.shared.interleaved)){a=e;do{i|=a.lane,a=a.next}while(a!==e)}else null===o&&(a.shared.lanes=0);Dc|=i,n.lanes=i,n.memoizedState=d}}function $o(n,e,t){if(n=e.effects,e.effects=null,null!==n)for(e=0;e<n.length;e++){var r=n[e],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Wo={},Go=xa(Wo),Ho=xa(Wo),Vo=xa(Wo);function Ko(n){if(n===Wo)throw Error(o(174));return n}function Qo(n,e){switch(wa(Vo,e),wa(Ho,n),wa(Go,Wo),n=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:ln(null,"");break;default:e=ln(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}ka(Go),wa(Go,e)}function Zo(){ka(Go),ka(Ho),ka(Vo)}function Xo(n){Ko(Vo.current);var e=Ko(Go.current),t=ln(e,n.type);e!==t&&(wa(Ho,n),wa(Go,t))}function Jo(n){Ho.current===n&&(ka(Go),ka(Ho))}var ni=xa(0);function ei(n){for(var e=n;null!==e;){if(13===e.tag){var t=e.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(128&e.flags)return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var ti=[];function ri(){for(var n=0;n<ti.length;n++)ti[n]._workInProgressVersionPrimary=null;ti.length=0}var ai=C.ReactCurrentDispatcher,oi=C.ReactCurrentBatchConfig,ii=0,si=null,ci=null,li=null,ui=!1,di=!1,Ai=0,pi=0;function fi(){throw Error(o(321))}function hi(n,e){if(null===e)return!1;for(var t=0;t<e.length&&t<n.length;t++)if(!sr(n[t],e[t]))return!1;return!0}function gi(n,e,t,r,a,i){if(ii=i,si=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,ai.current=null===n||null===n.memoizedState?Ji:ns,n=t(r,a),di){i=0;do{if(di=!1,Ai=0,25<=i)throw Error(o(301));i+=1,li=ci=null,e.updateQueue=null,ai.current=es,n=t(r,a)}while(di)}if(ai.current=Xi,e=null!==ci&&null!==ci.next,ii=0,li=ci=si=null,ui=!1,e)throw Error(o(300));return n}function mi(){var n=0!==Ai;return Ai=0,n}function vi(){var n={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===li?si.memoizedState=li=n:li=li.next=n,li}function bi(){if(null===ci){var n=si.alternate;n=null!==n?n.memoizedState:null}else n=ci.next;var e=null===li?si.memoizedState:li.next;if(null!==e)li=e,ci=n;else{if(null===n)throw Error(o(310));n={memoizedState:(ci=n).memoizedState,baseState:ci.baseState,baseQueue:ci.baseQueue,queue:ci.queue,next:null},null===li?si.memoizedState=li=n:li=li.next=n}return li}function Ci(n,e){return"function"==typeof e?e(n):e}function yi(n){var e=bi(),t=e.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=n;var r=ci,a=r.baseQueue,i=t.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}r.baseQueue=a=i,t.pending=null}if(null!==a){i=a.next,r=r.baseState;var c=s=null,l=null,u=i;do{var d=u.lane;if((ii&d)===d)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:n(r,u.action);else{var A={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=A,s=r):l=l.next=A,si.lanes|=d,Dc|=d}u=u.next}while(null!==u&&u!==i);null===l?s=r:l.next=c,sr(r,e.memoizedState)||(bs=!0),e.memoizedState=r,e.baseState=s,e.baseQueue=l,t.lastRenderedState=r}if(null!==(n=t.interleaved)){a=n;do{i=a.lane,si.lanes|=i,Dc|=i,a=a.next}while(a!==n)}else null===a&&(t.lanes=0);return[e.memoizedState,t.dispatch]}function Ei(n){var e=bi(),t=e.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=n;var r=t.dispatch,a=t.pending,i=e.memoizedState;if(null!==a){t.pending=null;var s=a=a.next;do{i=n(i,s.action),s=s.next}while(s!==a);sr(i,e.memoizedState)||(bs=!0),e.memoizedState=i,null===e.baseQueue&&(e.baseState=i),t.lastRenderedState=i}return[i,r]}function Bi(){}function xi(n,e){var t=si,r=bi(),a=e(),i=!sr(r.memoizedState,a);if(i&&(r.memoizedState=a,bs=!0),r=r.queue,Di(ji.bind(null,t,r,n),[n]),r.getSnapshot!==e||i||null!==li&&1&li.memoizedState.tag){if(t.flags|=2048,Ii(9,wi.bind(null,t,r,a,e),void 0,null),null===zc)throw Error(o(349));30&ii||ki(t,e,a)}return a}function ki(n,e,t){n.flags|=16384,n={getSnapshot:e,value:t},null===(e=si.updateQueue)?(e={lastEffect:null,stores:null},si.updateQueue=e,e.stores=[n]):null===(t=e.stores)?e.stores=[n]:t.push(n)}function wi(n,e,t,r){e.value=t,e.getSnapshot=r,Si(e)&&zi(n)}function ji(n,e,t){return t(function(){Si(e)&&zi(n)})}function Si(n){var e=n.getSnapshot;n=n.value;try{var t=e();return!sr(n,t)}catch(n){return!0}}function zi(n){var e=Po(n,1);null!==e&&tl(e,n,1,-1)}function Ni(n){var e=vi();return"function"==typeof n&&(n=n()),e.memoizedState=e.baseState=n,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ci,lastRenderedState:n},e.queue=n,n=n.dispatch=Vi.bind(null,si,n),[e.memoizedState,n]}function Ii(n,e,t,r){return n={tag:n,create:e,destroy:t,deps:r,next:null},null===(e=si.updateQueue)?(e={lastEffect:null,stores:null},si.updateQueue=e,e.lastEffect=n.next=n):null===(t=e.lastEffect)?e.lastEffect=n.next=n:(r=t.next,t.next=n,n.next=r,e.lastEffect=n),n}function _i(){return bi().memoizedState}function Ti(n,e,t,r){var a=vi();si.flags|=n,a.memoizedState=Ii(1|e,t,void 0,void 0===r?null:r)}function Oi(n,e,t,r){var a=bi();r=void 0===r?null:r;var o=void 0;if(null!==ci){var i=ci.memoizedState;if(o=i.destroy,null!==r&&hi(r,i.deps))return void(a.memoizedState=Ii(e,t,o,r))}si.flags|=n,a.memoizedState=Ii(1|e,t,o,r)}function Pi(n,e){return Ti(8390656,8,n,e)}function Di(n,e){return Oi(2048,8,n,e)}function Li(n,e){return Oi(4,2,n,e)}function Ri(n,e){return Oi(4,4,n,e)}function Mi(n,e){return"function"==typeof e?(n=n(),e(n),function(){e(null)}):null!=e?(n=n(),e.current=n,function(){e.current=null}):void 0}function Fi(n,e,t){return t=null!=t?t.concat([n]):null,Oi(4,4,Mi.bind(null,e,n),t)}function Ui(){}function Yi(n,e){var t=bi();e=void 0===e?null:e;var r=t.memoizedState;return null!==r&&null!==e&&hi(e,r[1])?r[0]:(t.memoizedState=[n,e],n)}function qi(n,e){var t=bi();e=void 0===e?null:e;var r=t.memoizedState;return null!==r&&null!==e&&hi(e,r[1])?r[0]:(n=n(),t.memoizedState=[n,e],n)}function $i(n,e,t){return 21&ii?(sr(t,e)||(t=ge(),si.lanes|=t,Dc|=t,n.baseState=!0),e):(n.baseState&&(n.baseState=!1,bs=!0),n.memoizedState=t)}function Wi(n,e){var t=Ce;Ce=0!==t&&4>t?t:4,n(!0);var r=oi.transition;oi.transition={};try{n(!1),e()}finally{Ce=t,oi.transition=r}}function Gi(){return bi().memoizedState}function Hi(n,e,t){var r=el(n);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},Ki(n)?Qi(e,t):null!==(t=Oo(n,e,t,r))&&(tl(t,n,r,nl()),Zi(t,e,r))}function Vi(n,e,t){var r=el(n),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(Ki(n))Qi(e,a);else{var o=n.alternate;if(0===n.lanes&&(null===o||0===o.lanes)&&null!==(o=e.lastRenderedReducer))try{var i=e.lastRenderedState,s=o(i,t);if(a.hasEagerState=!0,a.eagerState=s,sr(s,i)){var c=e.interleaved;return null===c?(a.next=a,To(e)):(a.next=c.next,c.next=a),void(e.interleaved=a)}}catch(n){}null!==(t=Oo(n,e,a,r))&&(tl(t,n,r,a=nl()),Zi(t,e,r))}}function Ki(n){var e=n.alternate;return n===si||null!==e&&e===si}function Qi(n,e){di=ui=!0;var t=n.pending;null===t?e.next=e:(e.next=t.next,t.next=e),n.pending=e}function Zi(n,e,t){if(4194240&t){var r=e.lanes;t|=r&=n.pendingLanes,e.lanes=t,be(n,t)}}var Xi={readContext:Io,useCallback:fi,useContext:fi,useEffect:fi,useImperativeHandle:fi,useInsertionEffect:fi,useLayoutEffect:fi,useMemo:fi,useReducer:fi,useRef:fi,useState:fi,useDebugValue:fi,useDeferredValue:fi,useTransition:fi,useMutableSource:fi,useSyncExternalStore:fi,useId:fi,unstable_isNewReconciler:!1},Ji={readContext:Io,useCallback:function(n,e){return vi().memoizedState=[n,void 0===e?null:e],n},useContext:Io,useEffect:Pi,useImperativeHandle:function(n,e,t){return t=null!=t?t.concat([n]):null,Ti(4194308,4,Mi.bind(null,e,n),t)},useLayoutEffect:function(n,e){return Ti(4194308,4,n,e)},useInsertionEffect:function(n,e){return Ti(4,2,n,e)},useMemo:function(n,e){var t=vi();return e=void 0===e?null:e,n=n(),t.memoizedState=[n,e],n},useReducer:function(n,e,t){var r=vi();return e=void 0!==t?t(e):e,r.memoizedState=r.baseState=e,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:n,lastRenderedState:e},r.queue=n,n=n.dispatch=Hi.bind(null,si,n),[r.memoizedState,n]},useRef:function(n){return n={current:n},vi().memoizedState=n},useState:Ni,useDebugValue:Ui,useDeferredValue:function(n){return vi().memoizedState=n},useTransition:function(){var n=Ni(!1),e=n[0];return n=Wi.bind(null,n[1]),vi().memoizedState=n,[e,n]},useMutableSource:function(){},useSyncExternalStore:function(n,e,t){var r=si,a=vi();if(ao){if(void 0===t)throw Error(o(407));t=t()}else{if(t=e(),null===zc)throw Error(o(349));30&ii||ki(r,e,t)}a.memoizedState=t;var i={value:t,getSnapshot:e};return a.queue=i,Pi(ji.bind(null,r,i,n),[n]),r.flags|=2048,Ii(9,wi.bind(null,r,i,t,e),void 0,null),t},useId:function(){var n=vi(),e=zc.identifierPrefix;if(ao){var t=Za;e=":"+e+"R"+(t=(Qa&~(1<<32-se(Qa)-1)).toString(32)+t),0<(t=Ai++)&&(e+="H"+t.toString(32)),e+=":"}else e=":"+e+"r"+(t=pi++).toString(32)+":";return n.memoizedState=e},unstable_isNewReconciler:!1},ns={readContext:Io,useCallback:Yi,useContext:Io,useEffect:Di,useImperativeHandle:Fi,useInsertionEffect:Li,useLayoutEffect:Ri,useMemo:qi,useReducer:yi,useRef:_i,useState:function(){return yi(Ci)},useDebugValue:Ui,useDeferredValue:function(n){return $i(bi(),ci.memoizedState,n)},useTransition:function(){return[yi(Ci)[0],bi().memoizedState]},useMutableSource:Bi,useSyncExternalStore:xi,useId:Gi,unstable_isNewReconciler:!1},es={readContext:Io,useCallback:Yi,useContext:Io,useEffect:Di,useImperativeHandle:Fi,useInsertionEffect:Li,useLayoutEffect:Ri,useMemo:qi,useReducer:Ei,useRef:_i,useState:function(){return Ei(Ci)},useDebugValue:Ui,useDeferredValue:function(n){var e=bi();return null===ci?e.memoizedState=n:$i(e,ci.memoizedState,n)},useTransition:function(){return[Ei(Ci)[0],bi().memoizedState]},useMutableSource:Bi,useSyncExternalStore:xi,useId:Gi,unstable_isNewReconciler:!1};function ts(n,e){if(n&&n.defaultProps){for(var t in e=L({},e),n=n.defaultProps)void 0===e[t]&&(e[t]=n[t]);return e}return e}function rs(n,e,t,r){t=null==(t=t(r,e=n.memoizedState))?e:L({},e,t),n.memoizedState=t,0===n.lanes&&(n.updateQueue.baseState=t)}var as={isMounted:function(n){return!!(n=n._reactInternals)&&qn(n)===n},enqueueSetState:function(n,e,t){n=n._reactInternals;var r=nl(),a=el(n),o=Mo(r,a);o.payload=e,null!=t&&(o.callback=t),null!==(e=Fo(n,o,a))&&(tl(e,n,a,r),Uo(e,n,a))},enqueueReplaceState:function(n,e,t){n=n._reactInternals;var r=nl(),a=el(n),o=Mo(r,a);o.tag=1,o.payload=e,null!=t&&(o.callback=t),null!==(e=Fo(n,o,a))&&(tl(e,n,a,r),Uo(e,n,a))},enqueueForceUpdate:function(n,e){n=n._reactInternals;var t=nl(),r=el(n),a=Mo(t,r);a.tag=2,null!=e&&(a.callback=e),null!==(e=Fo(n,a,r))&&(tl(e,n,r,t),Uo(e,n,r))}};function os(n,e,t,r,a,o,i){return"function"==typeof(n=n.stateNode).shouldComponentUpdate?n.shouldComponentUpdate(r,o,i):!(e.prototype&&e.prototype.isPureReactComponent&&cr(t,r)&&cr(a,o))}function is(n,e,t){var r=!1,a=ja,o=e.contextType;return"object"==typeof o&&null!==o?o=Io(o):(a=_a(e)?Na:Sa.current,o=(r=null!=(r=e.contextTypes))?Ia(n,a):ja),e=new e(t,o),n.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=as,n.stateNode=e,e._reactInternals=n,r&&((n=n.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,n.__reactInternalMemoizedMaskedChildContext=o),e}function ss(n,e,t,r){n=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(t,r),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(t,r),e.state!==n&&as.enqueueReplaceState(e,e.state,null)}function cs(n,e,t,r){var a=n.stateNode;a.props=t,a.state=n.memoizedState,a.refs={},Lo(n);var o=e.contextType;"object"==typeof o&&null!==o?a.context=Io(o):(o=_a(e)?Na:Sa.current,a.context=Ia(n,o)),a.state=n.memoizedState,"function"==typeof(o=e.getDerivedStateFromProps)&&(rs(n,e,o,t),a.state=n.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(e=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),e!==a.state&&as.enqueueReplaceState(a,a.state,null),qo(n,t,a,r),a.state=n.memoizedState),"function"==typeof a.componentDidMount&&(n.flags|=4194308)}function ls(n,e){try{var t="",r=e;do{t+=U(r),r=r.return}while(r);var a=t}catch(n){a="\nError generating stack: "+n.message+"\n"+n.stack}return{value:n,source:e,stack:a,digest:null}}function us(n,e,t){return{value:n,source:null,stack:null!=t?t:null,digest:null!=e?e:null}}function ds(n,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var As="function"==typeof WeakMap?WeakMap:Map;function ps(n,e,t){(t=Mo(-1,t)).tag=3,t.payload={element:null};var r=e.value;return t.callback=function(){$c||($c=!0,Wc=r),ds(0,e)},t}function fs(n,e,t){(t=Mo(-1,t)).tag=3;var r=n.type.getDerivedStateFromError;if("function"==typeof r){var a=e.value;t.payload=function(){return r(a)},t.callback=function(){ds(0,e)}}var o=n.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){ds(0,e),"function"!=typeof r&&(null===Gc?Gc=new Set([this]):Gc.add(this));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),t}function hs(n,e,t){var r=n.pingCache;if(null===r){r=n.pingCache=new As;var a=new Set;r.set(e,a)}else void 0===(a=r.get(e))&&(a=new Set,r.set(e,a));a.has(t)||(a.add(t),n=kl.bind(null,n,e,t),e.then(n,n))}function gs(n){do{var e;if((e=13===n.tag)&&(e=null===(e=n.memoizedState)||null!==e.dehydrated),e)return n;n=n.return}while(null!==n);return null}function ms(n,e,t,r,a){return 1&n.mode?(n.flags|=65536,n.lanes=a,n):(n===e?n.flags|=65536:(n.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((e=Mo(-1,1)).tag=2,Fo(t,e,1))),t.lanes|=1),n)}var vs=C.ReactCurrentOwner,bs=!1;function Cs(n,e,t,r){e.child=null===n?Eo(e,null,t,r):yo(e,n.child,t,r)}function ys(n,e,t,r,a){t=t.render;var o=e.ref;return No(e,a),r=gi(n,e,t,r,o,a),t=mi(),null===n||bs?(ao&&t&&no(e),e.flags|=1,Cs(n,e,r,a),e.child):(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~a,$s(n,e,a))}function Es(n,e,t,r,a){if(null===n){var o=t.type;return"function"!=typeof o||_l(o)||void 0!==o.defaultProps||null!==t.compare||void 0!==t.defaultProps?((n=Ol(t.type,null,r,e,e.mode,a)).ref=e.ref,n.return=e,e.child=n):(e.tag=15,e.type=o,Bs(n,e,o,r,a))}if(o=n.child,0===(n.lanes&a)){var i=o.memoizedProps;if((t=null!==(t=t.compare)?t:cr)(i,r)&&n.ref===e.ref)return $s(n,e,a)}return e.flags|=1,(n=Tl(o,r)).ref=e.ref,n.return=e,e.child=n}function Bs(n,e,t,r,a){if(null!==n){var o=n.memoizedProps;if(cr(o,r)&&n.ref===e.ref){if(bs=!1,e.pendingProps=r=o,0===(n.lanes&a))return e.lanes=n.lanes,$s(n,e,a);131072&n.flags&&(bs=!0)}}return ws(n,e,t,r,a)}function xs(n,e,t){var r=e.pendingProps,a=r.children,o=null!==n?n.memoizedState:null;if("hidden"===r.mode)if(1&e.mode){if(!(1073741824&t))return n=null!==o?o.baseLanes|t:t,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:n,cachePool:null,transitions:null},e.updateQueue=null,wa(Tc,_c),_c|=n,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:t,wa(Tc,_c),_c|=r}else e.memoizedState={baseLanes:0,cachePool:null,transitions:null},wa(Tc,_c),_c|=t;else null!==o?(r=o.baseLanes|t,e.memoizedState=null):r=t,wa(Tc,_c),_c|=r;return Cs(n,e,a,t),e.child}function ks(n,e){var t=e.ref;(null===n&&null!==t||null!==n&&n.ref!==t)&&(e.flags|=512,e.flags|=2097152)}function ws(n,e,t,r,a){var o=_a(t)?Na:Sa.current;return o=Ia(e,o),No(e,a),t=gi(n,e,t,r,o,a),r=mi(),null===n||bs?(ao&&r&&no(e),e.flags|=1,Cs(n,e,t,a),e.child):(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~a,$s(n,e,a))}function js(n,e,t,r,a){if(_a(t)){var o=!0;Da(e)}else o=!1;if(No(e,a),null===e.stateNode)qs(n,e),is(e,t,r),cs(e,t,r,a),r=!0;else if(null===n){var i=e.stateNode,s=e.memoizedProps;i.props=s;var c=i.context,l=t.contextType;l="object"==typeof l&&null!==l?Io(l):Ia(e,l=_a(t)?Na:Sa.current);var u=t.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||c!==l)&&ss(e,i,r,l),Do=!1;var A=e.memoizedState;i.state=A,qo(e,r,i,a),c=e.memoizedState,s!==r||A!==c||za.current||Do?("function"==typeof u&&(rs(e,t,u,r),c=e.memoizedState),(s=Do||os(e,t,s,r,A,c,l))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(e.flags|=4194308)):("function"==typeof i.componentDidMount&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=c),i.props=r,i.state=c,i.context=l,r=s):("function"==typeof i.componentDidMount&&(e.flags|=4194308),r=!1)}else{i=e.stateNode,Ro(n,e),s=e.memoizedProps,l=e.type===e.elementType?s:ts(e.type,s),i.props=l,d=e.pendingProps,A=i.context,c="object"==typeof(c=t.contextType)&&null!==c?Io(c):Ia(e,c=_a(t)?Na:Sa.current);var p=t.getDerivedStateFromProps;(u="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==d||A!==c)&&ss(e,i,r,c),Do=!1,A=e.memoizedState,i.state=A,qo(e,r,i,a);var f=e.memoizedState;s!==d||A!==f||za.current||Do?("function"==typeof p&&(rs(e,t,p,r),f=e.memoizedState),(l=Do||os(e,t,l,r,A,f,c)||!1)?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,c)),"function"==typeof i.componentDidUpdate&&(e.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(e.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=f),i.props=r,i.state=f,i.context=c,r=l):("function"!=typeof i.componentDidUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=1024),r=!1)}return Ss(n,e,t,r,o,a)}function Ss(n,e,t,r,a,o){ks(n,e);var i=!!(128&e.flags);if(!r&&!i)return a&&La(e,t,!1),$s(n,e,o);r=e.stateNode,vs.current=e;var s=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return e.flags|=1,null!==n&&i?(e.child=yo(e,n.child,null,o),e.child=yo(e,null,s,o)):Cs(n,e,s,o),e.memoizedState=r.state,a&&La(e,t,!0),e.child}function zs(n){var e=n.stateNode;e.pendingContext?Oa(0,e.pendingContext,e.pendingContext!==e.context):e.context&&Oa(0,e.context,!1),Qo(n,e.containerInfo)}function Ns(n,e,t,r,a){return fo(),ho(a),e.flags|=256,Cs(n,e,t,r),e.child}var Is,_s,Ts,Os,Ps={dehydrated:null,treeContext:null,retryLane:0};function Ds(n){return{baseLanes:n,cachePool:null,transitions:null}}function Ls(n,e,t){var r,a=e.pendingProps,i=ni.current,s=!1,c=!!(128&e.flags);if((r=c)||(r=(null===n||null!==n.memoizedState)&&!!(2&i)),r?(s=!0,e.flags&=-129):null!==n&&null===n.memoizedState||(i|=1),wa(ni,1&i),null===n)return lo(e),null!==(n=e.memoizedState)&&null!==(n=n.dehydrated)?(1&e.mode?"$!"===n.data?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(c=a.children,n=a.fallback,s?(a=e.mode,s=e.child,c={mode:"hidden",children:c},1&a||null===s?s=Dl(c,a,0,null):(s.childLanes=0,s.pendingProps=c),n=Pl(n,a,t,null),s.return=e,n.return=e,s.sibling=n,e.child=s,e.child.memoizedState=Ds(t),e.memoizedState=Ps,n):Rs(e,c));if(null!==(i=n.memoizedState)&&null!==(r=i.dehydrated))return function(n,e,t,r,a,i,s){if(t)return 256&e.flags?(e.flags&=-257,Ms(n,e,s,r=us(Error(o(422))))):null!==e.memoizedState?(e.child=n.child,e.flags|=128,null):(i=r.fallback,a=e.mode,r=Dl({mode:"visible",children:r.children},a,0,null),(i=Pl(i,a,s,null)).flags|=2,r.return=e,i.return=e,r.sibling=i,e.child=r,1&e.mode&&yo(e,n.child,null,s),e.child.memoizedState=Ds(s),e.memoizedState=Ps,i);if(!(1&e.mode))return Ms(n,e,s,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var c=r.dgst;return r=c,Ms(n,e,s,r=us(i=Error(o(419)),r,void 0))}if(c=0!==(s&n.childLanes),bs||c){if(null!==(r=zc)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|s))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Po(n,a),tl(r,n,a,-1))}return hl(),Ms(n,e,s,r=us(Error(o(421))))}return"$?"===a.data?(e.flags|=128,e.child=n.child,e=jl.bind(null,n),a._reactRetry=e,null):(n=i.treeContext,ro=la(a.nextSibling),to=e,ao=!0,oo=null,null!==n&&(Ha[Va++]=Qa,Ha[Va++]=Za,Ha[Va++]=Ka,Qa=n.id,Za=n.overflow,Ka=e),(e=Rs(e,r.children)).flags|=4096,e)}(n,e,c,a,r,i,t);if(s){s=a.fallback,c=e.mode,r=(i=n.child).sibling;var l={mode:"hidden",children:a.children};return 1&c||e.child===i?(a=Tl(i,l)).subtreeFlags=14680064&i.subtreeFlags:((a=e.child).childLanes=0,a.pendingProps=l,e.deletions=null),null!==r?s=Tl(r,s):(s=Pl(s,c,t,null)).flags|=2,s.return=e,a.return=e,a.sibling=s,e.child=a,a=s,s=e.child,c=null===(c=n.child.memoizedState)?Ds(t):{baseLanes:c.baseLanes|t,cachePool:null,transitions:c.transitions},s.memoizedState=c,s.childLanes=n.childLanes&~t,e.memoizedState=Ps,a}return n=(s=n.child).sibling,a=Tl(s,{mode:"visible",children:a.children}),!(1&e.mode)&&(a.lanes=t),a.return=e,a.sibling=null,null!==n&&(null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)),e.child=a,e.memoizedState=null,a}function Rs(n,e){return(e=Dl({mode:"visible",children:e},n.mode,0,null)).return=n,n.child=e}function Ms(n,e,t,r){return null!==r&&ho(r),yo(e,n.child,null,t),(n=Rs(e,e.pendingProps.children)).flags|=2,e.memoizedState=null,n}function Fs(n,e,t){n.lanes|=e;var r=n.alternate;null!==r&&(r.lanes|=e),zo(n.return,e,t)}function Us(n,e,t,r,a){var o=n.memoizedState;null===o?n.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=t,o.tailMode=a)}function Ys(n,e,t){var r=e.pendingProps,a=r.revealOrder,o=r.tail;if(Cs(n,e,r.children,t),2&(r=ni.current))r=1&r|2,e.flags|=128;else{if(null!==n&&128&n.flags)n:for(n=e.child;null!==n;){if(13===n.tag)null!==n.memoizedState&&Fs(n,t,e);else if(19===n.tag)Fs(n,t,e);else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break n;for(;null===n.sibling;){if(null===n.return||n.return===e)break n;n=n.return}n.sibling.return=n.return,n=n.sibling}r&=1}if(wa(ni,r),1&e.mode)switch(a){case"forwards":for(t=e.child,a=null;null!==t;)null!==(n=t.alternate)&&null===ei(n)&&(a=t),t=t.sibling;null===(t=a)?(a=e.child,e.child=null):(a=t.sibling,t.sibling=null),Us(e,!1,a,t,o);break;case"backwards":for(t=null,a=e.child,e.child=null;null!==a;){if(null!==(n=a.alternate)&&null===ei(n)){e.child=a;break}n=a.sibling,a.sibling=t,t=a,a=n}Us(e,!0,t,null,o);break;case"together":Us(e,!1,null,null,void 0);break;default:e.memoizedState=null}else e.memoizedState=null;return e.child}function qs(n,e){!(1&e.mode)&&null!==n&&(n.alternate=null,e.alternate=null,e.flags|=2)}function $s(n,e,t){if(null!==n&&(e.dependencies=n.dependencies),Dc|=e.lanes,0===(t&e.childLanes))return null;if(null!==n&&e.child!==n.child)throw Error(o(153));if(null!==e.child){for(t=Tl(n=e.child,n.pendingProps),e.child=t,t.return=e;null!==n.sibling;)n=n.sibling,(t=t.sibling=Tl(n,n.pendingProps)).return=e;t.sibling=null}return e.child}function Ws(n,e){if(!ao)switch(n.tailMode){case"hidden":e=n.tail;for(var t=null;null!==e;)null!==e.alternate&&(t=e),e=e.sibling;null===t?n.tail=null:t.sibling=null;break;case"collapsed":t=n.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e||null===n.tail?n.tail=null:n.tail.sibling=null:r.sibling=null}}function Gs(n){var e=null!==n.alternate&&n.alternate.child===n.child,t=0,r=0;if(e)for(var a=n.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=n,a=a.sibling;else for(a=n.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=n,a=a.sibling;return n.subtreeFlags|=r,n.childLanes=t,e}function Hs(n,e,t){var r=e.pendingProps;switch(eo(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Gs(e),null;case 1:case 17:return _a(e.type)&&Ta(),Gs(e),null;case 3:return r=e.stateNode,Zo(),ka(za),ka(Sa),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==n&&null!==n.child||(Ao(e)?e.flags|=4:null===n||n.memoizedState.isDehydrated&&!(256&e.flags)||(e.flags|=1024,null!==oo&&(il(oo),oo=null))),_s(n,e),Gs(e),null;case 5:Jo(e);var a=Ko(Vo.current);if(t=e.type,null!==n&&null!=e.stateNode)Ts(n,e,t,r,a),n.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(null===e.stateNode)throw Error(o(166));return Gs(e),null}if(n=Ko(Go.current),Ao(e)){r=e.stateNode,t=e.type;var i=e.memoizedProps;switch(r[Aa]=e,r[pa]=i,n=!!(1&e.mode),t){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(a=0;a<Pr.length;a++)Mr(Pr[a],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":Q(r,i),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Mr("invalid",r);break;case"textarea":an(r,i),Mr("invalid",r)}for(var c in bn(t,i),a=null,i)if(i.hasOwnProperty(c)){var l=i[c];"children"===c?"string"==typeof l?r.textContent!==l&&(!0!==i.suppressHydrationWarning&&Xr(r.textContent,l,n),a=["children",l]):"number"==typeof l&&r.textContent!==""+l&&(!0!==i.suppressHydrationWarning&&Xr(r.textContent,l,n),a=["children",""+l]):s.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Mr("scroll",r)}switch(t){case"input":G(r),J(r,i,!0);break;case"textarea":G(r),sn(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Jr)}r=a,e.updateQueue=r,null!==r&&(e.flags|=4)}else{c=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===n&&(n=cn(t)),"http://www.w3.org/1999/xhtml"===n?"script"===t?((n=c.createElement("div")).innerHTML="<script><\/script>",n=n.removeChild(n.firstChild)):"string"==typeof r.is?n=c.createElement(t,{is:r.is}):(n=c.createElement(t),"select"===t&&(c=n,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):n=c.createElementNS(n,t),n[Aa]=e,n[pa]=r,Is(n,e,!1,!1),e.stateNode=n;n:{switch(c=Cn(t,r),t){case"dialog":Mr("cancel",n),Mr("close",n),a=r;break;case"iframe":case"object":case"embed":Mr("load",n),a=r;break;case"video":case"audio":for(a=0;a<Pr.length;a++)Mr(Pr[a],n);a=r;break;case"source":Mr("error",n),a=r;break;case"img":case"image":case"link":Mr("error",n),Mr("load",n),a=r;break;case"details":Mr("toggle",n),a=r;break;case"input":Q(n,r),a=K(n,r),Mr("invalid",n);break;case"option":default:a=r;break;case"select":n._wrapperState={wasMultiple:!!r.multiple},a=L({},r,{value:void 0}),Mr("invalid",n);break;case"textarea":an(n,r),a=rn(n,r),Mr("invalid",n)}for(i in bn(t,a),l=a)if(l.hasOwnProperty(i)){var u=l[i];"style"===i?mn(n,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&An(n,u):"children"===i?"string"==typeof u?("textarea"!==t||""!==u)&&pn(n,u):"number"==typeof u&&pn(n,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Mr("scroll",n):null!=u&&b(n,i,u,c))}switch(t){case"input":G(n),J(n,r,!1);break;case"textarea":G(n),sn(n);break;case"option":null!=r.value&&n.setAttribute("value",""+$(r.value));break;case"select":n.multiple=!!r.multiple,null!=(i=r.value)?tn(n,!!r.multiple,i,!1):null!=r.defaultValue&&tn(n,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(n.onclick=Jr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break n;case"img":r=!0;break n;default:r=!1}}r&&(e.flags|=4)}null!==e.ref&&(e.flags|=512,e.flags|=2097152)}return Gs(e),null;case 6:if(n&&null!=e.stateNode)Os(n,e,n.memoizedProps,r);else{if("string"!=typeof r&&null===e.stateNode)throw Error(o(166));if(t=Ko(Vo.current),Ko(Go.current),Ao(e)){if(r=e.stateNode,t=e.memoizedProps,r[Aa]=e,(i=r.nodeValue!==t)&&null!==(n=to))switch(n.tag){case 3:Xr(r.nodeValue,t,!!(1&n.mode));break;case 5:!0!==n.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,t,!!(1&n.mode))}i&&(e.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Aa]=e,e.stateNode=r}return Gs(e),null;case 13:if(ka(ni),r=e.memoizedState,null===n||null!==n.memoizedState&&null!==n.memoizedState.dehydrated){if(ao&&null!==ro&&1&e.mode&&!(128&e.flags))po(),fo(),e.flags|=98560,i=!1;else if(i=Ao(e),null!==r&&null!==r.dehydrated){if(null===n){if(!i)throw Error(o(318));if(!(i=null!==(i=e.memoizedState)?i.dehydrated:null))throw Error(o(317));i[Aa]=e}else fo(),!(128&e.flags)&&(e.memoizedState=null),e.flags|=4;Gs(e),i=!1}else null!==oo&&(il(oo),oo=null),i=!0;if(!i)return 65536&e.flags?e:null}return 128&e.flags?(e.lanes=t,e):((r=null!==r)!=(null!==n&&null!==n.memoizedState)&&r&&(e.child.flags|=8192,1&e.mode&&(null===n||1&ni.current?0===Oc&&(Oc=3):hl())),null!==e.updateQueue&&(e.flags|=4),Gs(e),null);case 4:return Zo(),_s(n,e),null===n&&Yr(e.stateNode.containerInfo),Gs(e),null;case 10:return So(e.type._context),Gs(e),null;case 19:if(ka(ni),null===(i=e.memoizedState))return Gs(e),null;if(r=!!(128&e.flags),null===(c=i.rendering))if(r)Ws(i,!1);else{if(0!==Oc||null!==n&&128&n.flags)for(n=e.child;null!==n;){if(null!==(c=ei(n))){for(e.flags|=128,Ws(i,!1),null!==(r=c.updateQueue)&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=t,t=e.child;null!==t;)n=r,(i=t).flags&=14680066,null===(c=i.alternate)?(i.childLanes=0,i.lanes=n,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,n=c.dependencies,i.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext}),t=t.sibling;return wa(ni,1&ni.current|2),e.child}n=n.sibling}null!==i.tail&&Xn()>Yc&&(e.flags|=128,r=!0,Ws(i,!1),e.lanes=4194304)}else{if(!r)if(null!==(n=ei(c))){if(e.flags|=128,r=!0,null!==(t=n.updateQueue)&&(e.updateQueue=t,e.flags|=4),Ws(i,!0),null===i.tail&&"hidden"===i.tailMode&&!c.alternate&&!ao)return Gs(e),null}else 2*Xn()-i.renderingStartTime>Yc&&1073741824!==t&&(e.flags|=128,r=!0,Ws(i,!1),e.lanes=4194304);i.isBackwards?(c.sibling=e.child,e.child=c):(null!==(t=i.last)?t.sibling=c:e.child=c,i.last=c)}return null!==i.tail?(e=i.tail,i.rendering=e,i.tail=e.sibling,i.renderingStartTime=Xn(),e.sibling=null,t=ni.current,wa(ni,r?1&t|2:1&t),e):(Gs(e),null);case 22:case 23:return dl(),r=null!==e.memoizedState,null!==n&&null!==n.memoizedState!==r&&(e.flags|=8192),r&&1&e.mode?!!(1073741824&_c)&&(Gs(e),6&e.subtreeFlags&&(e.flags|=8192)):Gs(e),null;case 24:case 25:return null}throw Error(o(156,e.tag))}function Vs(n,e){switch(eo(e),e.tag){case 1:return _a(e.type)&&Ta(),65536&(n=e.flags)?(e.flags=-65537&n|128,e):null;case 3:return Zo(),ka(za),ka(Sa),ri(),65536&(n=e.flags)&&!(128&n)?(e.flags=-65537&n|128,e):null;case 5:return Jo(e),null;case 13:if(ka(ni),null!==(n=e.memoizedState)&&null!==n.dehydrated){if(null===e.alternate)throw Error(o(340));fo()}return 65536&(n=e.flags)?(e.flags=-65537&n|128,e):null;case 19:return ka(ni),null;case 4:return Zo(),null;case 10:return So(e.type._context),null;case 22:case 23:return dl(),null;default:return null}}Is=function(n,e){for(var t=e.child;null!==t;){if(5===t.tag||6===t.tag)n.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},_s=function(){},Ts=function(n,e,t,r){var a=n.memoizedProps;if(a!==r){n=e.stateNode,Ko(Go.current);var o,i=null;switch(t){case"input":a=K(n,a),r=K(n,r),i=[];break;case"select":a=L({},a,{value:void 0}),r=L({},r,{value:void 0}),i=[];break;case"textarea":a=rn(n,a),r=rn(n,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(n.onclick=Jr)}for(u in bn(t,r),t=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var c=a[u];for(o in c)c.hasOwnProperty(o)&&(t||(t={}),t[o]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var l=r[u];if(c=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(o in c)!c.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(t||(t={}),t[o]="");for(o in l)l.hasOwnProperty(o)&&c[o]!==l[o]&&(t||(t={}),t[o]=l[o])}else t||(i||(i=[]),i.push(u,t)),t=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(i=i||[]).push(u,l)):"children"===u?"string"!=typeof l&&"number"!=typeof l||(i=i||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Mr("scroll",n),i||c===l||(i=[])):(i=i||[]).push(u,l))}t&&(i=i||[]).push("style",t);var u=i;(e.updateQueue=u)&&(e.flags|=4)}},Os=function(n,e,t,r){t!==r&&(e.flags|=4)};var Ks=!1,Qs=!1,Zs="function"==typeof WeakSet?WeakSet:Set,Xs=null;function Js(n,e){var t=n.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){xl(n,e,t)}else t.current=null}function nc(n,e,t){try{t()}catch(t){xl(n,e,t)}}var ec=!1;function tc(n,e,t){var r=e.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&n)===n){var o=a.destroy;a.destroy=void 0,void 0!==o&&nc(e,t,o)}a=a.next}while(a!==r)}}function rc(n,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var t=e=e.next;do{if((t.tag&n)===n){var r=t.create;t.destroy=r()}t=t.next}while(t!==e)}}function ac(n){var e=n.ref;if(null!==e){var t=n.stateNode;n.tag,n=t,"function"==typeof e?e(n):e.current=n}}function oc(n){var e=n.alternate;null!==e&&(n.alternate=null,oc(e)),n.child=null,n.deletions=null,n.sibling=null,5===n.tag&&null!==(e=n.stateNode)&&(delete e[Aa],delete e[pa],delete e[ha],delete e[ga],delete e[ma]),n.stateNode=null,n.return=null,n.dependencies=null,n.memoizedProps=null,n.memoizedState=null,n.pendingProps=null,n.stateNode=null,n.updateQueue=null}function ic(n){return 5===n.tag||3===n.tag||4===n.tag}function sc(n){n:for(;;){for(;null===n.sibling;){if(null===n.return||ic(n.return))return null;n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue n;if(null===n.child||4===n.tag)continue n;n.child.return=n,n=n.child}if(!(2&n.flags))return n.stateNode}}function cc(n,e,t){var r=n.tag;if(5===r||6===r)n=n.stateNode,e?8===t.nodeType?t.parentNode.insertBefore(n,e):t.insertBefore(n,e):(8===t.nodeType?(e=t.parentNode).insertBefore(n,t):(e=t).appendChild(n),null!=(t=t._reactRootContainer)||null!==e.onclick||(e.onclick=Jr));else if(4!==r&&null!==(n=n.child))for(cc(n,e,t),n=n.sibling;null!==n;)cc(n,e,t),n=n.sibling}function lc(n,e,t){var r=n.tag;if(5===r||6===r)n=n.stateNode,e?t.insertBefore(n,e):t.appendChild(n);else if(4!==r&&null!==(n=n.child))for(lc(n,e,t),n=n.sibling;null!==n;)lc(n,e,t),n=n.sibling}var uc=null,dc=!1;function Ac(n,e,t){for(t=t.child;null!==t;)pc(n,e,t),t=t.sibling}function pc(n,e,t){if(ie&&"function"==typeof ie.onCommitFiberUnmount)try{ie.onCommitFiberUnmount(oe,t)}catch(n){}switch(t.tag){case 5:Qs||Js(t,e);case 6:var r=uc,a=dc;uc=null,Ac(n,e,t),dc=a,null!==(uc=r)&&(dc?(n=uc,t=t.stateNode,8===n.nodeType?n.parentNode.removeChild(t):n.removeChild(t)):uc.removeChild(t.stateNode));break;case 18:null!==uc&&(dc?(n=uc,t=t.stateNode,8===n.nodeType?ca(n.parentNode,t):1===n.nodeType&&ca(n,t),qe(n)):ca(uc,t.stateNode));break;case 4:r=uc,a=dc,uc=t.stateNode.containerInfo,dc=!0,Ac(n,e,t),uc=r,dc=a;break;case 0:case 11:case 14:case 15:if(!Qs&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(2&o||4&o)&&nc(t,e,i),a=a.next}while(a!==r)}Ac(n,e,t);break;case 1:if(!Qs&&(Js(t,e),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(n){xl(t,e,n)}Ac(n,e,t);break;case 21:Ac(n,e,t);break;case 22:1&t.mode?(Qs=(r=Qs)||null!==t.memoizedState,Ac(n,e,t),Qs=r):Ac(n,e,t);break;default:Ac(n,e,t)}}function fc(n){var e=n.updateQueue;if(null!==e){n.updateQueue=null;var t=n.stateNode;null===t&&(t=n.stateNode=new Zs),e.forEach(function(e){var r=Sl.bind(null,n,e);t.has(e)||(t.add(e),e.then(r,r))})}}function hc(n,e){var t=e.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var i=n,s=e,c=s;n:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,dc=!1;break n;case 3:case 4:uc=c.stateNode.containerInfo,dc=!0;break n}c=c.return}if(null===uc)throw Error(o(160));pc(i,s,a),uc=null,dc=!1;var l=a.alternate;null!==l&&(l.return=null),a.return=null}catch(n){xl(a,e,n)}}if(12854&e.subtreeFlags)for(e=e.child;null!==e;)gc(e,n),e=e.sibling}function gc(n,e){var t=n.alternate,r=n.flags;switch(n.tag){case 0:case 11:case 14:case 15:if(hc(e,n),mc(n),4&r){try{tc(3,n,n.return),rc(3,n)}catch(e){xl(n,n.return,e)}try{tc(5,n,n.return)}catch(e){xl(n,n.return,e)}}break;case 1:hc(e,n),mc(n),512&r&&null!==t&&Js(t,t.return);break;case 5:if(hc(e,n),mc(n),512&r&&null!==t&&Js(t,t.return),32&n.flags){var a=n.stateNode;try{pn(a,"")}catch(e){xl(n,n.return,e)}}if(4&r&&null!=(a=n.stateNode)){var i=n.memoizedProps,s=null!==t?t.memoizedProps:i,c=n.type,l=n.updateQueue;if(n.updateQueue=null,null!==l)try{"input"===c&&"radio"===i.type&&null!=i.name&&Z(a,i),Cn(c,s);var u=Cn(c,i);for(s=0;s<l.length;s+=2){var d=l[s],A=l[s+1];"style"===d?mn(a,A):"dangerouslySetInnerHTML"===d?An(a,A):"children"===d?pn(a,A):b(a,d,A,u)}switch(c){case"input":X(a,i);break;case"textarea":on(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?tn(a,!!i.multiple,f,!1):p!==!!i.multiple&&(null!=i.defaultValue?tn(a,!!i.multiple,i.defaultValue,!0):tn(a,!!i.multiple,i.multiple?[]:"",!1))}a[pa]=i}catch(e){xl(n,n.return,e)}}break;case 6:if(hc(e,n),mc(n),4&r){if(null===n.stateNode)throw Error(o(162));a=n.stateNode,i=n.memoizedProps;try{a.nodeValue=i}catch(e){xl(n,n.return,e)}}break;case 3:if(hc(e,n),mc(n),4&r&&null!==t&&t.memoizedState.isDehydrated)try{qe(e.containerInfo)}catch(e){xl(n,n.return,e)}break;case 4:default:hc(e,n),mc(n);break;case 13:hc(e,n),mc(n),8192&(a=n.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Uc=Xn())),4&r&&fc(n);break;case 22:if(d=null!==t&&null!==t.memoizedState,1&n.mode?(Qs=(u=Qs)||d,hc(e,n),Qs=u):hc(e,n),mc(n),8192&r){if(u=null!==n.memoizedState,(n.stateNode.isHidden=u)&&!d&&1&n.mode)for(Xs=n,d=n.child;null!==d;){for(A=Xs=d;null!==Xs;){switch(f=(p=Xs).child,p.tag){case 0:case 11:case 14:case 15:tc(4,p,p.return);break;case 1:Js(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){r=p,t=p.return;try{e=r,h.props=e.memoizedProps,h.state=e.memoizedState,h.componentWillUnmount()}catch(n){xl(r,t,n)}}break;case 5:Js(p,p.return);break;case 22:if(null!==p.memoizedState){yc(A);continue}}null!==f?(f.return=p,Xs=f):yc(A)}d=d.sibling}n:for(d=null,A=n;;){if(5===A.tag){if(null===d){d=A;try{a=A.stateNode,u?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(c=A.stateNode,s=null!=(l=A.memoizedProps.style)&&l.hasOwnProperty("display")?l.display:null,c.style.display=gn("display",s))}catch(e){xl(n,n.return,e)}}}else if(6===A.tag){if(null===d)try{A.stateNode.nodeValue=u?"":A.memoizedProps}catch(e){xl(n,n.return,e)}}else if((22!==A.tag&&23!==A.tag||null===A.memoizedState||A===n)&&null!==A.child){A.child.return=A,A=A.child;continue}if(A===n)break n;for(;null===A.sibling;){if(null===A.return||A.return===n)break n;d===A&&(d=null),A=A.return}d===A&&(d=null),A.sibling.return=A.return,A=A.sibling}}break;case 19:hc(e,n),mc(n),4&r&&fc(n);case 21:}}function mc(n){var e=n.flags;if(2&e){try{n:{for(var t=n.return;null!==t;){if(ic(t)){var r=t;break n}t=t.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(pn(a,""),r.flags&=-33),lc(n,sc(n),a);break;case 3:case 4:var i=r.stateNode.containerInfo;cc(n,sc(n),i);break;default:throw Error(o(161))}}catch(e){xl(n,n.return,e)}n.flags&=-3}4096&e&&(n.flags&=-4097)}function vc(n,e,t){Xs=n,bc(n,e,t)}function bc(n,e,t){for(var r=!!(1&n.mode);null!==Xs;){var a=Xs,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Ks;if(!i){var s=a.alternate,c=null!==s&&null!==s.memoizedState||Qs;s=Ks;var l=Qs;if(Ks=i,(Qs=c)&&!l)for(Xs=a;null!==Xs;)c=(i=Xs).child,22===i.tag&&null!==i.memoizedState?Ec(a):null!==c?(c.return=i,Xs=c):Ec(a);for(;null!==o;)Xs=o,bc(o,e,t),o=o.sibling;Xs=a,Ks=s,Qs=l}Cc(n)}else 8772&a.subtreeFlags&&null!==o?(o.return=a,Xs=o):Cc(n)}}function Cc(n){for(;null!==Xs;){var e=Xs;if(8772&e.flags){var t=e.alternate;try{if(8772&e.flags)switch(e.tag){case 0:case 11:case 15:Qs||rc(5,e);break;case 1:var r=e.stateNode;if(4&e.flags&&!Qs)if(null===t)r.componentDidMount();else{var a=e.elementType===e.type?t.memoizedProps:ts(e.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=e.updateQueue;null!==i&&$o(e,i,r);break;case 3:var s=e.updateQueue;if(null!==s){if(t=null,null!==e.child)switch(e.child.tag){case 5:case 1:t=e.child.stateNode}$o(e,s,t)}break;case 5:var c=e.stateNode;if(null===t&&4&e.flags){t=c;var l=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&t.focus();break;case"img":l.src&&(t.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===e.memoizedState){var u=e.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var A=d.dehydrated;null!==A&&qe(A)}}}break;default:throw Error(o(163))}Qs||512&e.flags&&ac(e)}catch(n){xl(e,e.return,n)}}if(e===n){Xs=null;break}if(null!==(t=e.sibling)){t.return=e.return,Xs=t;break}Xs=e.return}}function yc(n){for(;null!==Xs;){var e=Xs;if(e===n){Xs=null;break}var t=e.sibling;if(null!==t){t.return=e.return,Xs=t;break}Xs=e.return}}function Ec(n){for(;null!==Xs;){var e=Xs;try{switch(e.tag){case 0:case 11:case 15:var t=e.return;try{rc(4,e)}catch(n){xl(e,t,n)}break;case 1:var r=e.stateNode;if("function"==typeof r.componentDidMount){var a=e.return;try{r.componentDidMount()}catch(n){xl(e,a,n)}}var o=e.return;try{ac(e)}catch(n){xl(e,o,n)}break;case 5:var i=e.return;try{ac(e)}catch(n){xl(e,i,n)}}}catch(n){xl(e,e.return,n)}if(e===n){Xs=null;break}var s=e.sibling;if(null!==s){s.return=e.return,Xs=s;break}Xs=e.return}}var Bc,xc=Math.ceil,kc=C.ReactCurrentDispatcher,wc=C.ReactCurrentOwner,jc=C.ReactCurrentBatchConfig,Sc=0,zc=null,Nc=null,Ic=0,_c=0,Tc=xa(0),Oc=0,Pc=null,Dc=0,Lc=0,Rc=0,Mc=null,Fc=null,Uc=0,Yc=1/0,qc=null,$c=!1,Wc=null,Gc=null,Hc=!1,Vc=null,Kc=0,Qc=0,Zc=null,Xc=-1,Jc=0;function nl(){return 6&Sc?Xn():-1!==Xc?Xc:Xc=Xn()}function el(n){return 1&n.mode?2&Sc&&0!==Ic?Ic&-Ic:null!==go.transition?(0===Jc&&(Jc=ge()),Jc):0!==(n=Ce)?n:n=void 0===(n=window.event)?16:Ze(n.type):1}function tl(n,e,t,r){if(50<Qc)throw Qc=0,Zc=null,Error(o(185));ve(n,t,r),2&Sc&&n===zc||(n===zc&&(!(2&Sc)&&(Lc|=t),4===Oc&&sl(n,Ic)),rl(n,r),1===t&&0===Sc&&!(1&e.mode)&&(Yc=Xn()+500,Ma&&Ya()))}function rl(n,e){var t=n.callbackNode;!function(n,e){for(var t=n.suspendedLanes,r=n.pingedLanes,a=n.expirationTimes,o=n.pendingLanes;0<o;){var i=31-se(o),s=1<<i,c=a[i];-1===c?0!==(s&t)&&0===(s&r)||(a[i]=fe(s,e)):c<=e&&(n.expiredLanes|=s),o&=~s}}(n,e);var r=pe(n,n===zc?Ic:0);if(0===r)null!==t&&Kn(t),n.callbackNode=null,n.callbackPriority=0;else if(e=r&-r,n.callbackPriority!==e){if(null!=t&&Kn(t),1===e)0===n.tag?function(n){Ma=!0,Ua(n)}(cl.bind(null,n)):Ua(cl.bind(null,n)),ia(function(){!(6&Sc)&&Ya()}),t=null;else{switch(ye(r)){case 1:t=ne;break;case 4:t=ee;break;case 16:default:t=te;break;case 536870912:t=ae}t=zl(t,al.bind(null,n))}n.callbackPriority=e,n.callbackNode=t}}function al(n,e){if(Xc=-1,Jc=0,6&Sc)throw Error(o(327));var t=n.callbackNode;if(El()&&n.callbackNode!==t)return null;var r=pe(n,n===zc?Ic:0);if(0===r)return null;if(30&r||0!==(r&n.expiredLanes)||e)e=gl(n,r);else{e=r;var a=Sc;Sc|=2;var i=fl();for(zc===n&&Ic===e||(qc=null,Yc=Xn()+500,Al(n,e));;)try{vl();break}catch(e){pl(n,e)}jo(),kc.current=i,Sc=a,null!==Nc?e=0:(zc=null,Ic=0,e=Oc)}if(0!==e){if(2===e&&0!==(a=he(n))&&(r=a,e=ol(n,a)),1===e)throw t=Pc,Al(n,0),sl(n,r),rl(n,Xn()),t;if(6===e)sl(n,r);else{if(a=n.current.alternate,!(30&r||function(n){for(var e=n;;){if(16384&e.flags){var t=e.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],o=a.getSnapshot;a=a.value;try{if(!sr(o(),a))return!1}catch(n){return!1}}}if(t=e.child,16384&e.subtreeFlags&&null!==t)t.return=e,e=t;else{if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}(a)||(e=gl(n,r),2===e&&(i=he(n),0!==i&&(r=i,e=ol(n,i))),1!==e)))throw t=Pc,Al(n,0),sl(n,r),rl(n,Xn()),t;switch(n.finishedWork=a,n.finishedLanes=r,e){case 0:case 1:throw Error(o(345));case 2:case 5:yl(n,Fc,qc);break;case 3:if(sl(n,r),(130023424&r)===r&&10<(e=Uc+500-Xn())){if(0!==pe(n,0))break;if(((a=n.suspendedLanes)&r)!==r){nl(),n.pingedLanes|=n.suspendedLanes&a;break}n.timeoutHandle=ra(yl.bind(null,n,Fc,qc),e);break}yl(n,Fc,qc);break;case 4:if(sl(n,r),(4194240&r)===r)break;for(e=n.eventTimes,a=-1;0<r;){var s=31-se(r);i=1<<s,(s=e[s])>a&&(a=s),r&=~i}if(r=a,10<(r=(120>(r=Xn()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xc(r/1960))-r)){n.timeoutHandle=ra(yl.bind(null,n,Fc,qc),r);break}yl(n,Fc,qc);break;default:throw Error(o(329))}}}return rl(n,Xn()),n.callbackNode===t?al.bind(null,n):null}function ol(n,e){var t=Mc;return n.current.memoizedState.isDehydrated&&(Al(n,e).flags|=256),2!==(n=gl(n,e))&&(e=Fc,Fc=t,null!==e&&il(e)),n}function il(n){null===Fc?Fc=n:Fc.push.apply(Fc,n)}function sl(n,e){for(e&=~Rc,e&=~Lc,n.suspendedLanes|=e,n.pingedLanes&=~e,n=n.expirationTimes;0<e;){var t=31-se(e),r=1<<t;n[t]=-1,e&=~r}}function cl(n){if(6&Sc)throw Error(o(327));El();var e=pe(n,0);if(!(1&e))return rl(n,Xn()),null;var t=gl(n,e);if(0!==n.tag&&2===t){var r=he(n);0!==r&&(e=r,t=ol(n,r))}if(1===t)throw t=Pc,Al(n,0),sl(n,e),rl(n,Xn()),t;if(6===t)throw Error(o(345));return n.finishedWork=n.current.alternate,n.finishedLanes=e,yl(n,Fc,qc),rl(n,Xn()),null}function ll(n,e){var t=Sc;Sc|=1;try{return n(e)}finally{0===(Sc=t)&&(Yc=Xn()+500,Ma&&Ya())}}function ul(n){null!==Vc&&0===Vc.tag&&!(6&Sc)&&El();var e=Sc;Sc|=1;var t=jc.transition,r=Ce;try{if(jc.transition=null,Ce=1,n)return n()}finally{Ce=r,jc.transition=t,!(6&(Sc=e))&&Ya()}}function dl(){_c=Tc.current,ka(Tc)}function Al(n,e){n.finishedWork=null,n.finishedLanes=0;var t=n.timeoutHandle;if(-1!==t&&(n.timeoutHandle=-1,aa(t)),null!==Nc)for(t=Nc.return;null!==t;){var r=t;switch(eo(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ta();break;case 3:Zo(),ka(za),ka(Sa),ri();break;case 5:Jo(r);break;case 4:Zo();break;case 13:case 19:ka(ni);break;case 10:So(r.type._context);break;case 22:case 23:dl()}t=t.return}if(zc=n,Nc=n=Tl(n.current,null),Ic=_c=e,Oc=0,Pc=null,Rc=Lc=Dc=0,Fc=Mc=null,null!==_o){for(e=0;e<_o.length;e++)if(null!==(r=(t=_o[e]).interleaved)){t.interleaved=null;var a=r.next,o=t.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}t.pending=r}_o=null}return n}function pl(n,e){for(;;){var t=Nc;try{if(jo(),ai.current=Xi,ui){for(var r=si.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ui=!1}if(ii=0,li=ci=si=null,di=!1,Ai=0,wc.current=null,null===t||null===t.return){Oc=1,Pc=e,Nc=null;break}n:{var i=n,s=t.return,c=t,l=e;if(e=Ic,c.flags|=32768,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l,d=c,A=d.tag;if(!(1&d.mode||0!==A&&11!==A&&15!==A)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=gs(s);if(null!==f){f.flags&=-257,ms(f,s,c,0,e),1&f.mode&&hs(i,u,e),l=u;var h=(e=f).updateQueue;if(null===h){var g=new Set;g.add(l),e.updateQueue=g}else h.add(l);break n}if(!(1&e)){hs(i,u,e),hl();break n}l=Error(o(426))}else if(ao&&1&c.mode){var m=gs(s);if(null!==m){!(65536&m.flags)&&(m.flags|=256),ms(m,s,c,0,e),ho(ls(l,c));break n}}i=l=ls(l,c),4!==Oc&&(Oc=2),null===Mc?Mc=[i]:Mc.push(i),i=s;do{switch(i.tag){case 3:i.flags|=65536,e&=-e,i.lanes|=e,Yo(i,ps(0,l,e));break n;case 1:c=l;var v=i.type,b=i.stateNode;if(!(128&i.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==Gc&&Gc.has(b)))){i.flags|=65536,e&=-e,i.lanes|=e,Yo(i,fs(i,c,e));break n}}i=i.return}while(null!==i)}Cl(t)}catch(n){e=n,Nc===t&&null!==t&&(Nc=t=t.return);continue}break}}function fl(){var n=kc.current;return kc.current=Xi,null===n?Xi:n}function hl(){0!==Oc&&3!==Oc&&2!==Oc||(Oc=4),null===zc||!(268435455&Dc)&&!(268435455&Lc)||sl(zc,Ic)}function gl(n,e){var t=Sc;Sc|=2;var r=fl();for(zc===n&&Ic===e||(qc=null,Al(n,e));;)try{ml();break}catch(e){pl(n,e)}if(jo(),Sc=t,kc.current=r,null!==Nc)throw Error(o(261));return zc=null,Ic=0,Oc}function ml(){for(;null!==Nc;)bl(Nc)}function vl(){for(;null!==Nc&&!Qn();)bl(Nc)}function bl(n){var e=Bc(n.alternate,n,_c);n.memoizedProps=n.pendingProps,null===e?Cl(n):Nc=e,wc.current=null}function Cl(n){var e=n;do{var t=e.alternate;if(n=e.return,32768&e.flags){if(null!==(t=Vs(t,e)))return t.flags&=32767,void(Nc=t);if(null===n)return Oc=6,void(Nc=null);n.flags|=32768,n.subtreeFlags=0,n.deletions=null}else if(null!==(t=Hs(t,e,_c)))return void(Nc=t);if(null!==(e=e.sibling))return void(Nc=e);Nc=e=n}while(null!==e);0===Oc&&(Oc=5)}function yl(n,e,t){var r=Ce,a=jc.transition;try{jc.transition=null,Ce=1,function(n,e,t,r){do{El()}while(null!==Vc);if(6&Sc)throw Error(o(327));t=n.finishedWork;var a=n.finishedLanes;if(null===t)return null;if(n.finishedWork=null,n.finishedLanes=0,t===n.current)throw Error(o(177));n.callbackNode=null,n.callbackPriority=0;var i=t.lanes|t.childLanes;if(function(n,e){var t=n.pendingLanes&~e;n.pendingLanes=e,n.suspendedLanes=0,n.pingedLanes=0,n.expiredLanes&=e,n.mutableReadLanes&=e,n.entangledLanes&=e,e=n.entanglements;var r=n.eventTimes;for(n=n.expirationTimes;0<t;){var a=31-se(t),o=1<<a;e[a]=0,r[a]=-1,n[a]=-1,t&=~o}}(n,i),n===zc&&(Nc=zc=null,Ic=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||Hc||(Hc=!0,zl(te,function(){return El(),null})),i=!!(15990&t.flags),15990&t.subtreeFlags||i){i=jc.transition,jc.transition=null;var s=Ce;Ce=1;var c=Sc;Sc|=4,wc.current=null,function(n,e){if(na=We,pr(n=Ar())){if("selectionStart"in n)var t={start:n.selectionStart,end:n.selectionEnd};else n:{var r=(t=(t=n.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{t.nodeType,i.nodeType}catch(n){t=null;break n}var s=0,c=-1,l=-1,u=0,d=0,A=n,p=null;e:for(;;){for(var f;A!==t||0!==a&&3!==A.nodeType||(c=s+a),A!==i||0!==r&&3!==A.nodeType||(l=s+r),3===A.nodeType&&(s+=A.nodeValue.length),null!==(f=A.firstChild);)p=A,A=f;for(;;){if(A===n)break e;if(p===t&&++u===a&&(c=s),p===i&&++d===r&&(l=s),null!==(f=A.nextSibling))break;p=(A=p).parentNode}A=f}t=-1===c||-1===l?null:{start:c,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;for(ea={focusedElem:n,selectionRange:t},We=!1,Xs=e;null!==Xs;)if(n=(e=Xs).child,1028&e.subtreeFlags&&null!==n)n.return=e,Xs=n;else for(;null!==Xs;){e=Xs;try{var h=e.alternate;if(1024&e.flags)switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,m=h.memoizedState,v=e.stateNode,b=v.getSnapshotBeforeUpdate(e.elementType===e.type?g:ts(e.type,g),m);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var C=e.stateNode.containerInfo;1===C.nodeType?C.textContent="":9===C.nodeType&&C.documentElement&&C.removeChild(C.documentElement);break;default:throw Error(o(163))}}catch(n){xl(e,e.return,n)}if(null!==(n=e.sibling)){n.return=e.return,Xs=n;break}Xs=e.return}h=ec,ec=!1}(n,t),gc(t,n),fr(ea),We=!!na,ea=na=null,n.current=t,vc(t,n,a),Zn(),Sc=c,Ce=s,jc.transition=i}else n.current=t;if(Hc&&(Hc=!1,Vc=n,Kc=a),0===(i=n.pendingLanes)&&(Gc=null),function(n){if(ie&&"function"==typeof ie.onCommitFiberRoot)try{ie.onCommitFiberRoot(oe,n,void 0,!(128&~n.current.flags))}catch(n){}}(t.stateNode),rl(n,Xn()),null!==e)for(r=n.onRecoverableError,t=0;t<e.length;t++)r((a=e[t]).value,{componentStack:a.stack,digest:a.digest});if($c)throw $c=!1,n=Wc,Wc=null,n;!!(1&Kc)&&0!==n.tag&&El(),1&(i=n.pendingLanes)?n===Zc?Qc++:(Qc=0,Zc=n):Qc=0,Ya()}(n,e,t,r)}finally{jc.transition=a,Ce=r}return null}function El(){if(null!==Vc){var n=ye(Kc),e=jc.transition,t=Ce;try{if(jc.transition=null,Ce=16>n?16:n,null===Vc)var r=!1;else{if(n=Vc,Vc=null,Kc=0,6&Sc)throw Error(o(331));var a=Sc;for(Sc|=4,Xs=n.current;null!==Xs;){var i=Xs,s=i.child;if(16&Xs.flags){var c=i.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Xs=u;null!==Xs;){var d=Xs;switch(d.tag){case 0:case 11:case 15:tc(8,d,i)}var A=d.child;if(null!==A)A.return=d,Xs=A;else for(;null!==Xs;){var p=(d=Xs).sibling,f=d.return;if(oc(d),d===u){Xs=null;break}if(null!==p){p.return=f,Xs=p;break}Xs=f}}}var h=i.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var m=g.sibling;g.sibling=null,g=m}while(null!==g)}}Xs=i}}if(2064&i.subtreeFlags&&null!==s)s.return=i,Xs=s;else n:for(;null!==Xs;){if(2048&(i=Xs).flags)switch(i.tag){case 0:case 11:case 15:tc(9,i,i.return)}var v=i.sibling;if(null!==v){v.return=i.return,Xs=v;break n}Xs=i.return}}var b=n.current;for(Xs=b;null!==Xs;){var C=(s=Xs).child;if(2064&s.subtreeFlags&&null!==C)C.return=s,Xs=C;else n:for(s=b;null!==Xs;){if(2048&(c=Xs).flags)try{switch(c.tag){case 0:case 11:case 15:rc(9,c)}}catch(n){xl(c,c.return,n)}if(c===s){Xs=null;break n}var y=c.sibling;if(null!==y){y.return=c.return,Xs=y;break n}Xs=c.return}}if(Sc=a,Ya(),ie&&"function"==typeof ie.onPostCommitFiberRoot)try{ie.onPostCommitFiberRoot(oe,n)}catch(n){}r=!0}return r}finally{Ce=t,jc.transition=e}}return!1}function Bl(n,e,t){n=Fo(n,e=ps(0,e=ls(t,e),1),1),e=nl(),null!==n&&(ve(n,1,e),rl(n,e))}function xl(n,e,t){if(3===n.tag)Bl(n,n,t);else for(;null!==e;){if(3===e.tag){Bl(e,n,t);break}if(1===e.tag){var r=e.stateNode;if("function"==typeof e.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Gc||!Gc.has(r))){e=Fo(e,n=fs(e,n=ls(t,n),1),1),n=nl(),null!==e&&(ve(e,1,n),rl(e,n));break}}e=e.return}}function kl(n,e,t){var r=n.pingCache;null!==r&&r.delete(e),e=nl(),n.pingedLanes|=n.suspendedLanes&t,zc===n&&(Ic&t)===t&&(4===Oc||3===Oc&&(130023424&Ic)===Ic&&500>Xn()-Uc?Al(n,0):Rc|=t),rl(n,e)}function wl(n,e){0===e&&(1&n.mode?(e=de,!(130023424&(de<<=1))&&(de=4194304)):e=1);var t=nl();null!==(n=Po(n,e))&&(ve(n,e,t),rl(n,t))}function jl(n){var e=n.memoizedState,t=0;null!==e&&(t=e.retryLane),wl(n,t)}function Sl(n,e){var t=0;switch(n.tag){case 13:var r=n.stateNode,a=n.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=n.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(e),wl(n,t)}function zl(n,e){return Vn(n,e)}function Nl(n,e,t,r){this.tag=n,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Il(n,e,t,r){return new Nl(n,e,t,r)}function _l(n){return!(!(n=n.prototype)||!n.isReactComponent)}function Tl(n,e){var t=n.alternate;return null===t?((t=Il(n.tag,e,n.key,n.mode)).elementType=n.elementType,t.type=n.type,t.stateNode=n.stateNode,t.alternate=n,n.alternate=t):(t.pendingProps=e,t.type=n.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&n.flags,t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,e=n.dependencies,t.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext},t.sibling=n.sibling,t.index=n.index,t.ref=n.ref,t}function Ol(n,e,t,r,a,i){var s=2;if(r=n,"function"==typeof n)_l(n)&&(s=1);else if("string"==typeof n)s=5;else n:switch(n){case B:return Pl(t.children,a,i,e);case x:s=8,a|=8;break;case k:return(n=Il(12,t,e,2|a)).elementType=k,n.lanes=i,n;case z:return(n=Il(13,t,e,a)).elementType=z,n.lanes=i,n;case N:return(n=Il(19,t,e,a)).elementType=N,n.lanes=i,n;case T:return Dl(t,a,i,e);default:if("object"==typeof n&&null!==n)switch(n.$$typeof){case w:s=10;break n;case j:s=9;break n;case S:s=11;break n;case I:s=14;break n;case _:s=16,r=null;break n}throw Error(o(130,null==n?n:typeof n,""))}return(e=Il(s,t,e,a)).elementType=n,e.type=r,e.lanes=i,e}function Pl(n,e,t,r){return(n=Il(7,n,r,e)).lanes=t,n}function Dl(n,e,t,r){return(n=Il(22,n,r,e)).elementType=T,n.lanes=t,n.stateNode={isHidden:!1},n}function Ll(n,e,t){return(n=Il(6,n,null,e)).lanes=t,n}function Rl(n,e,t){return(e=Il(4,null!==n.children?n.children:[],n.key,e)).lanes=t,e.stateNode={containerInfo:n.containerInfo,pendingChildren:null,implementation:n.implementation},e}function Ml(n,e,t,r,a){this.tag=e,this.containerInfo=n,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=me(0),this.expirationTimes=me(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=me(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Fl(n,e,t,r,a,o,i,s,c){return n=new Ml(n,e,t,s,c),1===e?(e=1,!0===o&&(e|=8)):e=0,o=Il(3,null,null,e),n.current=o,o.stateNode=n,o.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lo(o),n}function Ul(n){if(!n)return ja;n:{if(qn(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var e=n;do{switch(e.tag){case 3:e=e.stateNode.context;break n;case 1:if(_a(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break n}}e=e.return}while(null!==e);throw Error(o(171))}if(1===n.tag){var t=n.type;if(_a(t))return Pa(n,t,e)}return e}function Yl(n,e,t,r,a,o,i,s,c){return(n=Fl(t,r,!0,n,0,o,0,s,c)).context=Ul(null),t=n.current,(o=Mo(r=nl(),a=el(t))).callback=null!=e?e:null,Fo(t,o,a),n.current.lanes=a,ve(n,a,r),rl(n,r),n}function ql(n,e,t,r){var a=e.current,o=nl(),i=el(a);return t=Ul(t),null===e.context?e.context=t:e.pendingContext=t,(e=Mo(o,i)).payload={element:n},null!==(r=void 0===r?null:r)&&(e.callback=r),null!==(n=Fo(a,e,i))&&(tl(n,a,i,o),Uo(n,a,i)),i}function $l(n){return(n=n.current).child?(n.child.tag,n.child.stateNode):null}function Wl(n,e){if(null!==(n=n.memoizedState)&&null!==n.dehydrated){var t=n.retryLane;n.retryLane=0!==t&&t<e?t:e}}function Gl(n,e){Wl(n,e),(n=n.alternate)&&Wl(n,e)}Bc=function(n,e,t){if(null!==n)if(n.memoizedProps!==e.pendingProps||za.current)bs=!0;else{if(0===(n.lanes&t)&&!(128&e.flags))return bs=!1,function(n,e,t){switch(e.tag){case 3:zs(e),fo();break;case 5:Xo(e);break;case 1:_a(e.type)&&Da(e);break;case 4:Qo(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,a=e.memoizedProps.value;wa(Bo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=e.memoizedState))return null!==r.dehydrated?(wa(ni,1&ni.current),e.flags|=128,null):0!==(t&e.child.childLanes)?Ls(n,e,t):(wa(ni,1&ni.current),null!==(n=$s(n,e,t))?n.sibling:null);wa(ni,1&ni.current);break;case 19:if(r=0!==(t&e.childLanes),128&n.flags){if(r)return Ys(n,e,t);e.flags|=128}if(null!==(a=e.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),wa(ni,ni.current),r)break;return null;case 22:case 23:return e.lanes=0,xs(n,e,t)}return $s(n,e,t)}(n,e,t);bs=!!(131072&n.flags)}else bs=!1,ao&&1048576&e.flags&&Ja(e,Ga,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;qs(n,e),n=e.pendingProps;var a=Ia(e,Sa.current);No(e,t),a=gi(null,e,r,n,a,t);var i=mi();return e.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(e.tag=1,e.memoizedState=null,e.updateQueue=null,_a(r)?(i=!0,Da(e)):i=!1,e.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Lo(e),a.updater=as,e.stateNode=a,a._reactInternals=e,cs(e,r,n,t),e=Ss(null,e,r,!0,i,t)):(e.tag=0,ao&&i&&no(e),Cs(null,e,a,t),e=e.child),e;case 16:r=e.elementType;n:{switch(qs(n,e),n=e.pendingProps,r=(a=r._init)(r._payload),e.type=r,a=e.tag=function(n){if("function"==typeof n)return _l(n)?1:0;if(null!=n){if((n=n.$$typeof)===S)return 11;if(n===I)return 14}return 2}(r),n=ts(r,n),a){case 0:e=ws(null,e,r,n,t);break n;case 1:e=js(null,e,r,n,t);break n;case 11:e=ys(null,e,r,n,t);break n;case 14:e=Es(null,e,r,ts(r.type,n),t);break n}throw Error(o(306,r,""))}return e;case 0:return r=e.type,a=e.pendingProps,ws(n,e,r,a=e.elementType===r?a:ts(r,a),t);case 1:return r=e.type,a=e.pendingProps,js(n,e,r,a=e.elementType===r?a:ts(r,a),t);case 3:n:{if(zs(e),null===n)throw Error(o(387));r=e.pendingProps,a=(i=e.memoizedState).element,Ro(n,e),qo(e,r,null,t);var s=e.memoizedState;if(r=s.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},e.updateQueue.baseState=i,e.memoizedState=i,256&e.flags){e=Ns(n,e,r,t,a=ls(Error(o(423)),e));break n}if(r!==a){e=Ns(n,e,r,t,a=ls(Error(o(424)),e));break n}for(ro=la(e.stateNode.containerInfo.firstChild),to=e,ao=!0,oo=null,t=Eo(e,null,r,t),e.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(fo(),r===a){e=$s(n,e,t);break n}Cs(n,e,r,t)}e=e.child}return e;case 5:return Xo(e),null===n&&lo(e),r=e.type,a=e.pendingProps,i=null!==n?n.memoizedProps:null,s=a.children,ta(r,a)?s=null:null!==i&&ta(r,i)&&(e.flags|=32),ks(n,e),Cs(n,e,s,t),e.child;case 6:return null===n&&lo(e),null;case 13:return Ls(n,e,t);case 4:return Qo(e,e.stateNode.containerInfo),r=e.pendingProps,null===n?e.child=yo(e,null,r,t):Cs(n,e,r,t),e.child;case 11:return r=e.type,a=e.pendingProps,ys(n,e,r,a=e.elementType===r?a:ts(r,a),t);case 7:return Cs(n,e,e.pendingProps,t),e.child;case 8:case 12:return Cs(n,e,e.pendingProps.children,t),e.child;case 10:n:{if(r=e.type._context,a=e.pendingProps,i=e.memoizedProps,s=a.value,wa(Bo,r._currentValue),r._currentValue=s,null!==i)if(sr(i.value,s)){if(i.children===a.children&&!za.current){e=$s(n,e,t);break n}}else for(null!==(i=e.child)&&(i.return=e);null!==i;){var c=i.dependencies;if(null!==c){s=i.child;for(var l=c.firstContext;null!==l;){if(l.context===r){if(1===i.tag){(l=Mo(-1,t&-t)).tag=2;var u=i.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?l.next=l:(l.next=d.next,d.next=l),u.pending=l}}i.lanes|=t,null!==(l=i.alternate)&&(l.lanes|=t),zo(i.return,t,e),c.lanes|=t;break}l=l.next}}else if(10===i.tag)s=i.type===e.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(o(341));s.lanes|=t,null!==(c=s.alternate)&&(c.lanes|=t),zo(s,t,e),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===e){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}Cs(n,e,a.children,t),e=e.child}return e;case 9:return a=e.type,r=e.pendingProps.children,No(e,t),r=r(a=Io(a)),e.flags|=1,Cs(n,e,r,t),e.child;case 14:return a=ts(r=e.type,e.pendingProps),Es(n,e,r,a=ts(r.type,a),t);case 15:return Bs(n,e,e.type,e.pendingProps,t);case 17:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:ts(r,a),qs(n,e),e.tag=1,_a(r)?(n=!0,Da(e)):n=!1,No(e,t),is(e,r,a),cs(e,r,a,t),Ss(null,e,r,!0,n,t);case 19:return Ys(n,e,t);case 22:return xs(n,e,t)}throw Error(o(156,e.tag))};var Hl="function"==typeof reportError?reportError:function(n){console.error(n)};function Vl(n){this._internalRoot=n}function Kl(n){this._internalRoot=n}function Ql(n){return!(!n||1!==n.nodeType&&9!==n.nodeType&&11!==n.nodeType)}function Zl(n){return!(!n||1!==n.nodeType&&9!==n.nodeType&&11!==n.nodeType&&(8!==n.nodeType||" react-mount-point-unstable "!==n.nodeValue))}function Xl(){}function Jl(n,e,t,r,a){var o=t._reactRootContainer;if(o){var i=o;if("function"==typeof a){var s=a;a=function(){var n=$l(i);s.call(n)}}ql(e,i,n,a)}else i=function(n,e,t,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var n=$l(i);o.call(n)}}var i=Yl(e,r,n,0,null,!1,0,"",Xl);return n._reactRootContainer=i,n[fa]=i.current,Yr(8===n.nodeType?n.parentNode:n),ul(),i}for(;a=n.lastChild;)n.removeChild(a);if("function"==typeof r){var s=r;r=function(){var n=$l(c);s.call(n)}}var c=Fl(n,0,!1,null,0,!1,0,"",Xl);return n._reactRootContainer=c,n[fa]=c.current,Yr(8===n.nodeType?n.parentNode:n),ul(function(){ql(e,c,t,r)}),c}(t,e,n,a,r);return $l(i)}Kl.prototype.render=Vl.prototype.render=function(n){var e=this._internalRoot;if(null===e)throw Error(o(409));ql(n,e,null,null)},Kl.prototype.unmount=Vl.prototype.unmount=function(){var n=this._internalRoot;if(null!==n){this._internalRoot=null;var e=n.containerInfo;ul(function(){ql(null,n,null,null)}),e[fa]=null}},Kl.prototype.unstable_scheduleHydration=function(n){if(n){var e=ke();n={blockedOn:null,target:n,priority:e};for(var t=0;t<Oe.length&&0!==e&&e<Oe[t].priority;t++);Oe.splice(t,0,n),0===t&&Re(n)}},Ee=function(n){switch(n.tag){case 3:var e=n.stateNode;if(e.current.memoizedState.isDehydrated){var t=Ae(e.pendingLanes);0!==t&&(be(e,1|t),rl(e,Xn()),!(6&Sc)&&(Yc=Xn()+500,Ya()))}break;case 13:ul(function(){var e=Po(n,1);if(null!==e){var t=nl();tl(e,n,1,t)}}),Gl(n,1)}},Be=function(n){if(13===n.tag){var e=Po(n,134217728);null!==e&&tl(e,n,134217728,nl()),Gl(n,134217728)}},xe=function(n){if(13===n.tag){var e=el(n),t=Po(n,e);null!==t&&tl(t,n,e,nl()),Gl(n,e)}},ke=function(){return Ce},we=function(n,e){var t=Ce;try{return Ce=n,e()}finally{Ce=t}},Bn=function(n,e,t){switch(e){case"input":if(X(n,t),e=t.name,"radio"===t.type&&null!=e){for(t=n;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<t.length;e++){var r=t[e];if(r!==n&&r.form===n.form){var a=ya(r);if(!a)throw Error(o(90));H(r),X(r,a)}}}break;case"textarea":on(n,t);break;case"select":null!=(e=t.value)&&tn(n,!!t.multiple,e,!1)}},zn=ll,Nn=ul;var nu={usingClientEntryPoint:!1,Events:[ba,Ca,ya,jn,Sn,ll]},eu={findFiberByHostInstance:va,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tu={bundleType:eu.bundleType,version:eu.version,rendererPackageName:eu.rendererPackageName,rendererConfig:eu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:C.ReactCurrentDispatcher,findHostInstanceByFiber:function(n){return null===(n=Gn(n))?null:n.stateNode},findFiberByHostInstance:eu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{oe=ru.inject(tu),ie=ru}catch(dn){}}e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu,e.createPortal=function(n,e){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ql(e))throw Error(o(200));return function(n,e,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:n,containerInfo:e,implementation:t}}(n,e,null,t)},e.createRoot=function(n,e){if(!Ql(n))throw Error(o(299));var t=!1,r="",a=Hl;return null!=e&&(!0===e.unstable_strictMode&&(t=!0),void 0!==e.identifierPrefix&&(r=e.identifierPrefix),void 0!==e.onRecoverableError&&(a=e.onRecoverableError)),e=Fl(n,1,!1,null,0,t,0,r,a),n[fa]=e.current,Yr(8===n.nodeType?n.parentNode:n),new Vl(e)},e.findDOMNode=function(n){if(null==n)return null;if(1===n.nodeType)return n;var e=n._reactInternals;if(void 0===e){if("function"==typeof n.render)throw Error(o(188));throw n=Object.keys(n).join(","),Error(o(268,n))}return null===(n=Gn(e))?null:n.stateNode},e.flushSync=function(n){return ul(n)},e.hydrate=function(n,e,t){if(!Zl(e))throw Error(o(200));return Jl(null,n,e,!0,t)},e.hydrateRoot=function(n,e,t){if(!Ql(n))throw Error(o(405));var r=null!=t&&t.hydratedSources||null,a=!1,i="",s=Hl;if(null!=t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),e=Yl(e,null,n,1,null!=t?t:null,a,0,i,s),n[fa]=e.current,Yr(n),r)for(n=0;n<r.length;n++)a=(a=(t=r[n])._getVersion)(t._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[t,a]:e.mutableSourceEagerHydrationData.push(t,a);return new Kl(e)},e.render=function(n,e,t){if(!Zl(e))throw Error(o(200));return Jl(null,n,e,!1,t)},e.unmountComponentAtNode=function(n){if(!Zl(n))throw Error(o(40));return!!n._reactRootContainer&&(ul(function(){Jl(null,null,n,!1,function(){n._reactRootContainer=null,n[fa]=null})}),!0)},e.unstable_batchedUpdates=ll,e.unstable_renderSubtreeIntoContainer=function(n,e,t,r){if(!Zl(t))throw Error(o(200));if(null==n||void 0===n._reactInternals)throw Error(o(38));return Jl(n,e,t,!1,r)},e.version="18.3.1-next-f1338f8080-20240426"},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},660:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(907)),o=r(t(818));e.default=class{constructor(n){this.shouldThrowOnError=!1,this.method=n.method,this.url=n.url,this.headers=n.headers,this.schema=n.schema,this.body=n.body,this.shouldThrowOnError=n.shouldThrowOnError,this.signal=n.signal,this.isMaybeSingle=n.isMaybeSingle,n.fetch?this.fetch=n.fetch:"undefined"==typeof fetch?this.fetch=a.default:this.fetch=fetch}throwOnError(){return this.shouldThrowOnError=!0,this}setHeader(n,e){return this.headers=Object.assign({},this.headers),this.headers[n]=e,this}then(n,e){void 0===this.schema||(["GET","HEAD"].includes(this.method)?this.headers["Accept-Profile"]=this.schema:this.headers["Content-Profile"]=this.schema),"GET"!==this.method&&"HEAD"!==this.method&&(this.headers["Content-Type"]="application/json");let t=(0,this.fetch)(this.url.toString(),{method:this.method,headers:this.headers,body:JSON.stringify(this.body),signal:this.signal}).then(async n=>{var e,t,r;let a=null,i=null,s=null,c=n.status,l=n.statusText;if(n.ok){if("HEAD"!==this.method){const e=await n.text();""===e||(i="text/csv"===this.headers.Accept||this.headers.Accept&&this.headers.Accept.includes("application/vnd.pgrst.plan+text")?e:JSON.parse(e))}const r=null===(e=this.headers.Prefer)||void 0===e?void 0:e.match(/count=(exact|planned|estimated)/),o=null===(t=n.headers.get("content-range"))||void 0===t?void 0:t.split("/");r&&o&&o.length>1&&(s=parseInt(o[1])),this.isMaybeSingle&&"GET"===this.method&&Array.isArray(i)&&(i.length>1?(a={code:"PGRST116",details:`Results contain ${i.length} rows, application/vnd.pgrst.object+json requires 1 row`,hint:null,message:"JSON object requested, multiple (or no) rows returned"},i=null,s=null,c=406,l="Not Acceptable"):i=1===i.length?i[0]:null)}else{const e=await n.text();try{a=JSON.parse(e),Array.isArray(a)&&404===n.status&&(i=[],a=null,c=200,l="OK")}catch(t){404===n.status&&""===e?(c=204,l="No Content"):a={message:e}}if(a&&this.isMaybeSingle&&(null===(r=null==a?void 0:a.details)||void 0===r?void 0:r.includes("0 rows"))&&(a=null,c=200,l="OK"),a&&this.shouldThrowOnError)throw new o.default(a)}return{error:a,data:i,count:s,status:c,statusText:l}});return this.shouldThrowOnError||(t=t.catch(n=>{var e,t,r;return{error:{message:`${null!==(e=null==n?void 0:n.name)&&void 0!==e?e:"FetchError"}: ${null==n?void 0:n.message}`,details:`${null!==(t=null==n?void 0:n.stack)&&void 0!==t?t:""}`,hint:"",code:`${null!==(r=null==n?void 0:n.code)&&void 0!==r?r:""}`},data:null,count:null,status:0,statusText:""}})),t.then(n,e)}returns(){return this}overrideTypes(){return this}}},691:n=>{n.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2716%27 height=%2716%27 fill=%27none%27 viewBox=%270 0 24 24%27 stroke=%27%2394a3b8%27 stroke-width=%272%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3E%3Cpath d=%27m6 9 6 6 6-6%27/%3E%3C/svg%3E"},818:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends Error{constructor(n){super(n.message),this.name="PostgrestError",this.details=n.details,this.hint=n.hint,this.code=n.code}}e.default=t},825:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(261));class o extends a.default{eq(n,e){return this.url.searchParams.append(n,`eq.${e}`),this}neq(n,e){return this.url.searchParams.append(n,`neq.${e}`),this}gt(n,e){return this.url.searchParams.append(n,`gt.${e}`),this}gte(n,e){return this.url.searchParams.append(n,`gte.${e}`),this}lt(n,e){return this.url.searchParams.append(n,`lt.${e}`),this}lte(n,e){return this.url.searchParams.append(n,`lte.${e}`),this}like(n,e){return this.url.searchParams.append(n,`like.${e}`),this}likeAllOf(n,e){return this.url.searchParams.append(n,`like(all).{${e.join(",")}}`),this}likeAnyOf(n,e){return this.url.searchParams.append(n,`like(any).{${e.join(",")}}`),this}ilike(n,e){return this.url.searchParams.append(n,`ilike.${e}`),this}ilikeAllOf(n,e){return this.url.searchParams.append(n,`ilike(all).{${e.join(",")}}`),this}ilikeAnyOf(n,e){return this.url.searchParams.append(n,`ilike(any).{${e.join(",")}}`),this}is(n,e){return this.url.searchParams.append(n,`is.${e}`),this}in(n,e){const t=Array.from(new Set(e)).map(n=>"string"==typeof n&&new RegExp("[,()]").test(n)?`"${n}"`:`${n}`).join(",");return this.url.searchParams.append(n,`in.(${t})`),this}contains(n,e){return"string"==typeof e?this.url.searchParams.append(n,`cs.${e}`):Array.isArray(e)?this.url.searchParams.append(n,`cs.{${e.join(",")}}`):this.url.searchParams.append(n,`cs.${JSON.stringify(e)}`),this}containedBy(n,e){return"string"==typeof e?this.url.searchParams.append(n,`cd.${e}`):Array.isArray(e)?this.url.searchParams.append(n,`cd.{${e.join(",")}}`):this.url.searchParams.append(n,`cd.${JSON.stringify(e)}`),this}rangeGt(n,e){return this.url.searchParams.append(n,`sr.${e}`),this}rangeGte(n,e){return this.url.searchParams.append(n,`nxl.${e}`),this}rangeLt(n,e){return this.url.searchParams.append(n,`sl.${e}`),this}rangeLte(n,e){return this.url.searchParams.append(n,`nxr.${e}`),this}rangeAdjacent(n,e){return this.url.searchParams.append(n,`adj.${e}`),this}overlaps(n,e){return"string"==typeof e?this.url.searchParams.append(n,`ov.${e}`):this.url.searchParams.append(n,`ov.{${e.join(",")}}`),this}textSearch(n,e,{config:t,type:r}={}){let a="";"plain"===r?a="pl":"phrase"===r?a="ph":"websearch"===r&&(a="w");const o=void 0===t?"":`(${t})`;return this.url.searchParams.append(n,`${a}fts${o}.${e}`),this}match(n){return Object.entries(n).forEach(([n,e])=>{this.url.searchParams.append(n,`eq.${e}`)}),this}not(n,e,t){return this.url.searchParams.append(n,`not.${e}.${t}`),this}or(n,{foreignTable:e,referencedTable:t=e}={}){const r=t?`${t}.or`:"or";return this.url.searchParams.append(r,`(${n})`),this}filter(n,e,t){return this.url.searchParams.append(n,`${e}.${t}`),this}}e.default=o},848:(n,e,t)=>{n.exports=t(20)},907:(n,e,t)=>{t.r(e),t.d(e,{Headers:()=>i,Request:()=>s,Response:()=>c,default:()=>o,fetch:()=>a});var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("unable to locate global object")}();const a=r.fetch,o=r.fetch.bind(r),i=r.Headers,s=r.Request,c=r.Response},961:(n,e,t)=>{!function n(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(n){console.error(n)}}(),n.exports=t(551)},982:(n,e,t)=>{n.exports=t(463)}},r={};function a(n){var e=r[n];if(void 0!==e)return e.exports;var o=r[n]={id:n,exports:{}};return t[n].call(o.exports,o,o.exports,a),o.exports}a.m=t,a.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return a.d(e,{a:e}),e},a.d=(n,e)=>{for(var t in e)a.o(e,t)&&!a.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},a.f={},a.e=n=>Promise.all(Object.keys(a.f).reduce((e,t)=>(a.f[t](n,e),e),[])),a.u=n=>n+".js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),a.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),n={},e="nest-chrome-extension:",a.l=(t,r,o,i)=>{if(n[t])n[t].push(r);else{var s,c;if(void 0!==o)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==t||d.getAttribute("data-webpack")==e+o){s=d;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",e+o),s.src=t),n[t]=[r];var A=(e,r)=>{s.onerror=s.onload=null,clearTimeout(p);var a=n[t];if(delete n[t],s.parentNode&&s.parentNode.removeChild(s),a&&a.forEach(n=>n(r)),e)return e(r)},p=setTimeout(A.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=A.bind(null,s.onerror),s.onload=A.bind(null,s.onload),c&&document.head.appendChild(s)}},a.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;a.g.importScripts&&(n=a.g.location+"");var e=a.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=n})(),(()=>{a.b=document.baseURI||self.location.href;var n={508:0,796:0};a.f.j=(e,t)=>{var r=a.o(n,e)?n[e]:void 0;if(0!==r)if(r)t.push(r[2]);else{var o=new Promise((t,a)=>r=n[e]=[t,a]);t.push(r[2]=o);var i=a.p+a.u(e),s=new Error;a.l(i,t=>{if(a.o(n,e)&&(0!==(r=n[e])&&(n[e]=void 0),r)){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;s.message="Loading chunk "+e+" failed.\n("+o+": "+i+")",s.name="ChunkLoadError",s.type=o,s.request=i,r[1](s)}},"chunk-"+e,e)}};var e=(e,t)=>{var r,o,[i,s,c]=t,l=0;if(i.some(e=>0!==n[e])){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);c&&c(a)}for(e&&e(t);l<i.length;l++)o=i[l],a.o(n,o)&&n[o]&&n[o][0](),n[o]=0},t=self.webpackChunknest_chrome_extension=self.webpackChunknest_chrome_extension||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})(),a.nc=void 0;var o=a(540),i=a(338),s={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const c=(n,e)=>{const t=(0,o.forwardRef)(({color:t="currentColor",size:r=24,strokeWidth:a=2,absoluteStrokeWidth:i,className:c="",children:l,...u},d)=>{return(0,o.createElement)("svg",{ref:d,...s,width:r,height:r,stroke:t,strokeWidth:i?24*Number(a)/Number(r):a,className:["lucide",`lucide-${A=n,A.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase().trim()}`,c].join(" "),...u},[...e.map(([n,e])=>(0,o.createElement)(n,e)),...Array.isArray(l)?l:[l]]);var A});return t.displayName=`${n}`,t},l=c("Bookmark",[["path",{d:"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z",key:"1fy3hk"}]]),u=c("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]),d=c("Camera",[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]]),A=c("StickyNote",[["path",{d:"M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z",key:"1wis1t"}],["path",{d:"M15 3v6h6",key:"edgan2"}]]),p=c("MessageCircle",[["path",{d:"m3 21 1.9-5.7a8.5 8.5 0 1 1 3.8 3.8z",key:"v2veuj"}]]),f=c("TabletSmartphone",[["rect",{width:"10",height:"14",x:"3",y:"8",rx:"2",key:"1vrsiq"}],["path",{d:"M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4",key:"1j4zmg"}],["path",{d:"M8 18h.01",key:"lrp35t"}]]),h=c("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]),g=c("BarChart3",[["path",{d:"M3 3v18h18",key:"1s2lah"}],["path",{d:"M18 17V9",key:"2bz60n"}],["path",{d:"M13 17V5",key:"1frdt8"}],["path",{d:"M8 17v-3",key:"17ska0"}]]),m=c("Brain",[["path",{d:"M9.5 2A2.5 2.5 0 0 1 12 4.5v15a2.5 2.5 0 0 1-4.96.44 2.5 2.5 0 0 1-2.96-3.08 3 3 0 0 1-.34-5.58 2.5 2.5 0 0 1 1.32-4.24 2.5 2.5 0 0 1 1.98-3A2.5 2.5 0 0 1 9.5 2Z",key:"1mhkh5"}],["path",{d:"M14.5 2A2.5 2.5 0 0 0 12 4.5v15a2.5 2.5 0 0 0 4.96.44 2.5 2.5 0 0 0 2.96-3.08 3 3 0 0 0 .34-5.58 2.5 2.5 0 0 0-1.32-4.24 2.5 2.5 0 0 0-1.98-3A2.5 2.5 0 0 0 14.5 2Z",key:"1d6s00"}]]),v=c("Focus",[["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}],["path",{d:"M3 7V5a2 2 0 0 1 2-2h2",key:"aa7l1z"}],["path",{d:"M17 3h2a2 2 0 0 1 2 2v2",key:"4qcy5o"}],["path",{d:"M21 17v2a2 2 0 0 1-2 2h-2",key:"6vwrx8"}],["path",{d:"M7 21H5a2 2 0 0 1-2-2v-2",key:"ioqczr"}]]),b=c("Network",[["rect",{x:"16",y:"16",width:"6",height:"6",rx:"1",key:"4q2zg0"}],["rect",{x:"2",y:"16",width:"6",height:"6",rx:"1",key:"8cvhb9"}],["rect",{x:"9",y:"2",width:"6",height:"6",rx:"1",key:"1egb70"}],["path",{d:"M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3",key:"1jsf9p"}],["path",{d:"M12 12V8",key:"2874zd"}]]),C=c("PenSquare",[["path",{d:"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1qinfi"}],["path",{d:"M18.5 2.5a2.12 2.12 0 0 1 3 3L12 15l-4 1 1-4Z",key:"w2jsv5"}]]),y=c("LogOut",[["path",{d:"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4",key:"1uf3rs"}],["polyline",{points:"16 17 21 12 16 7",key:"1gabdz"}],["line",{x1:"21",x2:"9",y1:"12",y2:"12",key:"1uyos4"}]]),E=c("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]),B=c("Command",[["path",{d:"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3",key:"11bfej"}]]),x=c("Grid3x3",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}],["path",{d:"M3 9h18",key:"1pudct"}],["path",{d:"M3 15h18",key:"5xshup"}],["path",{d:"M9 3v18",key:"fh3hqa"}],["path",{d:"M15 3v18",key:"14nvp0"}]]),k=c("List",[["line",{x1:"8",x2:"21",y1:"6",y2:"6",key:"7ey8pc"}],["line",{x1:"8",x2:"21",y1:"12",y2:"12",key:"rjfblc"}],["line",{x1:"8",x2:"21",y1:"18",y2:"18",key:"c3b1m8"}],["line",{x1:"3",x2:"3.01",y1:"6",y2:"6",key:"1g7gq3"}],["line",{x1:"3",x2:"3.01",y1:"12",y2:"12",key:"1pjlvk"}],["line",{x1:"3",x2:"3.01",y1:"18",y2:"18",key:"28t2mc"}]]),w=c("Tag",[["path",{d:"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z",key:"14b2ls"}],["path",{d:"M7 7h.01",key:"7u93v4"}]]),j=c("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]]),S=c("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]]),z=c("Inbox",[["polyline",{points:"22 12 16 12 14 15 10 15 8 12 2 12",key:"o97t9d"}],["path",{d:"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",key:"oot6mr"}]]),N=c("CheckSquare",[["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}],["path",{d:"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11",key:"1jnkn4"}]]),I=c("Sparkles",[["path",{d:"m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z",key:"17u4zn"}],["path",{d:"M5 3v4",key:"bklmnn"}],["path",{d:"M19 17v4",key:"iiml17"}],["path",{d:"M3 5h4",key:"nem4j1"}],["path",{d:"M17 19h4",key:"lbex7p"}]]),_=c("Archive",[["rect",{width:"20",height:"5",x:"2",y:"3",rx:"1",key:"1wp1u1"}],["path",{d:"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8",key:"1s80jp"}],["path",{d:"M10 12h4",key:"a56b0p"}]]),T=c("FolderPlus",[["path",{d:"M12 10v6",key:"1bos4e"}],["path",{d:"M9 13h6",key:"1uhe8q"}],["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),O=c("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);class P extends Error{constructor(n,e="FunctionsError",t){super(n),this.name=e,this.context=t}}class D extends P{constructor(n){super("Failed to send a request to the Edge Function","FunctionsFetchError",n)}}class L extends P{constructor(n){super("Relay Error invoking the Edge Function","FunctionsRelayError",n)}}class R extends P{constructor(n){super("Edge Function returned a non-2xx status code","FunctionsHttpError",n)}}var M;!function(n){n.Any="any",n.ApNortheast1="ap-northeast-1",n.ApNortheast2="ap-northeast-2",n.ApSouth1="ap-south-1",n.ApSoutheast1="ap-southeast-1",n.ApSoutheast2="ap-southeast-2",n.CaCentral1="ca-central-1",n.EuCentral1="eu-central-1",n.EuWest1="eu-west-1",n.EuWest2="eu-west-2",n.EuWest3="eu-west-3",n.SaEast1="sa-east-1",n.UsEast1="us-east-1",n.UsWest1="us-west-1",n.UsWest2="us-west-2"}(M||(M={}));class F{constructor(n,{headers:e={},customFetch:t,region:r=M.Any}={}){this.url=n,this.headers=e,this.region=r,this.fetch=(n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)})(t)}setAuth(n){this.headers.Authorization=`Bearer ${n}`}invoke(n,e={}){var t,r,a,o,i;return r=this,a=void 0,i=function*(){try{const{headers:r,method:a,body:o}=e;let i={},{region:s}=e;s||(s=this.region);const c=new URL(`${this.url}/${n}`);let l;s&&"any"!==s&&(i["x-region"]=s,c.searchParams.set("forceFunctionRegion",s)),o&&(r&&!Object.prototype.hasOwnProperty.call(r,"Content-Type")||!r)&&("undefined"!=typeof Blob&&o instanceof Blob||o instanceof ArrayBuffer?(i["Content-Type"]="application/octet-stream",l=o):"string"==typeof o?(i["Content-Type"]="text/plain",l=o):"undefined"!=typeof FormData&&o instanceof FormData?l=o:(i["Content-Type"]="application/json",l=JSON.stringify(o)));const u=yield this.fetch(c.toString(),{method:a||"POST",headers:Object.assign(Object.assign(Object.assign({},i),this.headers),r),body:l}).catch(n=>{throw new D(n)}),d=u.headers.get("x-relay-error");if(d&&"true"===d)throw new L(u);if(!u.ok)throw new R(u);let A,p=(null!==(t=u.headers.get("Content-Type"))&&void 0!==t?t:"text/plain").split(";")[0].trim();return A="application/json"===p?yield u.json():"application/octet-stream"===p?yield u.blob():"text/event-stream"===p?u:"multipart/form-data"===p?yield u.formData():yield u.text(),{data:A,error:null,response:u}}catch(n){return{data:null,error:n,response:n instanceof R||n instanceof L?n.context:void 0}}},new((o=void 0)||(o=Promise))(function(n,e){function t(n){try{c(i.next(n))}catch(n){e(n)}}function s(n){try{c(i.throw(n))}catch(n){e(n)}}function c(e){var r;e.done?n(e.value):(r=e.value,r instanceof o?r:new o(function(n){n(r)})).then(t,s)}c((i=i.apply(r,a||[])).next())})}}var U=a(279);const{PostgrestClient:Y,PostgrestQueryBuilder:q,PostgrestFilterBuilder:$,PostgrestTransformBuilder:W,PostgrestBuilder:G,PostgrestError:H}=U,V=function(){if("undefined"!=typeof WebSocket)return WebSocket;if(void 0!==global.WebSocket)return global.WebSocket;if(void 0!==window.WebSocket)return window.WebSocket;if(void 0!==self.WebSocket)return self.WebSocket;throw new Error("`WebSocket` is not supported in this environment")}();var K,Q,Z,X,J,nn,en;!function(n){n[n.connecting=0]="connecting",n[n.open=1]="open",n[n.closing=2]="closing",n[n.closed=3]="closed"}(K||(K={})),(en=Q||(Q={})).closed="closed",en.errored="errored",en.joined="joined",en.joining="joining",en.leaving="leaving",function(n){n.close="phx_close",n.error="phx_error",n.join="phx_join",n.reply="phx_reply",n.leave="phx_leave",n.access_token="access_token"}(Z||(Z={})),function(n){n.websocket="websocket"}(X||(X={})),function(n){n.Connecting="connecting",n.Open="open",n.Closing="closing",n.Closed="closed"}(J||(J={}));class tn{constructor(){this.HEADER_LENGTH=1}decode(n,e){return n.constructor===ArrayBuffer?e(this._binaryDecode(n)):e("string"==typeof n?JSON.parse(n):{})}_binaryDecode(n){const e=new DataView(n),t=new TextDecoder;return this._decodeBroadcast(n,e,t)}_decodeBroadcast(n,e,t){const r=e.getUint8(1),a=e.getUint8(2);let o=this.HEADER_LENGTH+2;const i=t.decode(n.slice(o,o+r));o+=r;const s=t.decode(n.slice(o,o+a));return o+=a,{ref:null,topic:i,event:s,payload:JSON.parse(t.decode(n.slice(o,n.byteLength)))}}}class rn{constructor(n,e){this.callback=n,this.timerCalc=e,this.timer=void 0,this.tries=0,this.callback=n,this.timerCalc=e}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}}!function(n){n.abstime="abstime",n.bool="bool",n.date="date",n.daterange="daterange",n.float4="float4",n.float8="float8",n.int2="int2",n.int4="int4",n.int4range="int4range",n.int8="int8",n.int8range="int8range",n.json="json",n.jsonb="jsonb",n.money="money",n.numeric="numeric",n.oid="oid",n.reltime="reltime",n.text="text",n.time="time",n.timestamp="timestamp",n.timestamptz="timestamptz",n.timetz="timetz",n.tsrange="tsrange",n.tstzrange="tstzrange"}(nn||(nn={}));const an=(n,e,t={})=>{var r;const a=null!==(r=t.skipTypes)&&void 0!==r?r:[];return Object.keys(e).reduce((t,r)=>(t[r]=on(r,n,e,a),t),{})},on=(n,e,t,r)=>{const a=e.find(e=>e.name===n),o=null==a?void 0:a.type,i=t[n];return o&&!r.includes(o)?sn(o,i):cn(i)},sn=(n,e)=>{if("_"===n.charAt(0)){const t=n.slice(1,n.length);return An(e,t)}switch(n){case nn.bool:return ln(e);case nn.float4:case nn.float8:case nn.int2:case nn.int4:case nn.int8:case nn.numeric:case nn.oid:return un(e);case nn.json:case nn.jsonb:return dn(e);case nn.timestamp:return pn(e);case nn.abstime:case nn.date:case nn.daterange:case nn.int4range:case nn.int8range:case nn.money:case nn.reltime:case nn.text:case nn.time:case nn.timestamptz:case nn.timetz:case nn.tsrange:case nn.tstzrange:default:return cn(e)}},cn=n=>n,ln=n=>{switch(n){case"t":return!0;case"f":return!1;default:return n}},un=n=>{if("string"==typeof n){const e=parseFloat(n);if(!Number.isNaN(e))return e}return n},dn=n=>{if("string"==typeof n)try{return JSON.parse(n)}catch(e){return console.log(`JSON parse error: ${e}`),n}return n},An=(n,e)=>{if("string"!=typeof n)return n;const t=n.length-1,r=n[t];if("{"===n[0]&&"}"===r){let r;const a=n.slice(1,t);try{r=JSON.parse("["+a+"]")}catch(n){r=a?a.split(","):[]}return r.map(n=>sn(e,n))}return n},pn=n=>"string"==typeof n?n.replace(" ","T"):n,fn=n=>{let e=n;return e=e.replace(/^ws/i,"http"),e=e.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i,""),e.replace(/\/+$/,"")};class hn{constructor(n,e,t={},r=1e4){this.channel=n,this.event=e,this.payload=t,this.timeout=r,this.sent=!1,this.timeoutTimer=void 0,this.ref="",this.receivedResp=null,this.recHooks=[],this.refEvent=null}resend(n){this.timeout=n,this._cancelRefEvent(),this.ref="",this.refEvent=null,this.receivedResp=null,this.sent=!1,this.send()}send(){this._hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload,ref:this.ref,join_ref:this.channel._joinRef()}))}updatePayload(n){this.payload=Object.assign(Object.assign({},this.payload),n)}receive(n,e){var t;return this._hasReceived(n)&&e(null===(t=this.receivedResp)||void 0===t?void 0:t.response),this.recHooks.push({status:n,callback:e}),this}startTimeout(){this.timeoutTimer||(this.ref=this.channel.socket._makeRef(),this.refEvent=this.channel._replyEventName(this.ref),this.channel._on(this.refEvent,{},n=>{this._cancelRefEvent(),this._cancelTimeout(),this.receivedResp=n,this._matchReceive(n)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout))}trigger(n,e){this.refEvent&&this.channel._trigger(this.refEvent,{status:n,response:e})}destroy(){this._cancelRefEvent(),this._cancelTimeout()}_cancelRefEvent(){this.refEvent&&this.channel._off(this.refEvent,{})}_cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=void 0}_matchReceive({status:n,response:e}){this.recHooks.filter(e=>e.status===n).forEach(n=>n.callback(e))}_hasReceived(n){return this.receivedResp&&this.receivedResp.status===n}}var gn,mn,vn,bn;!function(n){n.SYNC="sync",n.JOIN="join",n.LEAVE="leave"}(gn||(gn={}));class Cn{constructor(n,e){this.channel=n,this.state={},this.pendingDiffs=[],this.joinRef=null,this.caller={onJoin:()=>{},onLeave:()=>{},onSync:()=>{}};const t=(null==e?void 0:e.events)||{state:"presence_state",diff:"presence_diff"};this.channel._on(t.state,{},n=>{const{onJoin:e,onLeave:t,onSync:r}=this.caller;this.joinRef=this.channel._joinRef(),this.state=Cn.syncState(this.state,n,e,t),this.pendingDiffs.forEach(n=>{this.state=Cn.syncDiff(this.state,n,e,t)}),this.pendingDiffs=[],r()}),this.channel._on(t.diff,{},n=>{const{onJoin:e,onLeave:t,onSync:r}=this.caller;this.inPendingSyncState()?this.pendingDiffs.push(n):(this.state=Cn.syncDiff(this.state,n,e,t),r())}),this.onJoin((n,e,t)=>{this.channel._trigger("presence",{event:"join",key:n,currentPresences:e,newPresences:t})}),this.onLeave((n,e,t)=>{this.channel._trigger("presence",{event:"leave",key:n,currentPresences:e,leftPresences:t})}),this.onSync(()=>{this.channel._trigger("presence",{event:"sync"})})}static syncState(n,e,t,r){const a=this.cloneDeep(n),o=this.transformState(e),i={},s={};return this.map(a,(n,e)=>{o[n]||(s[n]=e)}),this.map(o,(n,e)=>{const t=a[n];if(t){const r=e.map(n=>n.presence_ref),a=t.map(n=>n.presence_ref),o=e.filter(n=>a.indexOf(n.presence_ref)<0),c=t.filter(n=>r.indexOf(n.presence_ref)<0);o.length>0&&(i[n]=o),c.length>0&&(s[n]=c)}else i[n]=e}),this.syncDiff(a,{joins:i,leaves:s},t,r)}static syncDiff(n,e,t,r){const{joins:a,leaves:o}={joins:this.transformState(e.joins),leaves:this.transformState(e.leaves)};return t||(t=()=>{}),r||(r=()=>{}),this.map(a,(e,r)=>{var a;const o=null!==(a=n[e])&&void 0!==a?a:[];if(n[e]=this.cloneDeep(r),o.length>0){const t=n[e].map(n=>n.presence_ref),r=o.filter(n=>t.indexOf(n.presence_ref)<0);n[e].unshift(...r)}t(e,o,r)}),this.map(o,(e,t)=>{let a=n[e];if(!a)return;const o=t.map(n=>n.presence_ref);a=a.filter(n=>o.indexOf(n.presence_ref)<0),n[e]=a,r(e,a,t),0===a.length&&delete n[e]}),n}static map(n,e){return Object.getOwnPropertyNames(n).map(t=>e(t,n[t]))}static transformState(n){return n=this.cloneDeep(n),Object.getOwnPropertyNames(n).reduce((e,t)=>{const r=n[t];return e[t]="metas"in r?r.metas.map(n=>(n.presence_ref=n.phx_ref,delete n.phx_ref,delete n.phx_ref_prev,n)):r,e},{})}static cloneDeep(n){return JSON.parse(JSON.stringify(n))}onJoin(n){this.caller.onJoin=n}onLeave(n){this.caller.onLeave=n}onSync(n){this.caller.onSync=n}inPendingSyncState(){return!this.joinRef||this.joinRef!==this.channel._joinRef()}}!function(n){n.ALL="*",n.INSERT="INSERT",n.UPDATE="UPDATE",n.DELETE="DELETE"}(mn||(mn={})),function(n){n.BROADCAST="broadcast",n.PRESENCE="presence",n.POSTGRES_CHANGES="postgres_changes",n.SYSTEM="system"}(vn||(vn={})),function(n){n.SUBSCRIBED="SUBSCRIBED",n.TIMED_OUT="TIMED_OUT",n.CLOSED="CLOSED",n.CHANNEL_ERROR="CHANNEL_ERROR"}(bn||(bn={}));class yn{constructor(n,e={config:{}},t){this.topic=n,this.params=e,this.socket=t,this.bindings={},this.state=Q.closed,this.joinedOnce=!1,this.pushBuffer=[],this.subTopic=n.replace(/^realtime:/i,""),this.params.config=Object.assign({broadcast:{ack:!1,self:!1},presence:{key:""},private:!1},e.config),this.timeout=this.socket.timeout,this.joinPush=new hn(this,Z.join,this.params,this.timeout),this.rejoinTimer=new rn(()=>this._rejoinUntilConnected(),this.socket.reconnectAfterMs),this.joinPush.receive("ok",()=>{this.state=Q.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(n=>n.send()),this.pushBuffer=[]}),this._onClose(()=>{this.rejoinTimer.reset(),this.socket.log("channel",`close ${this.topic} ${this._joinRef()}`),this.state=Q.closed,this.socket._remove(this)}),this._onError(n=>{this._isLeaving()||this._isClosed()||(this.socket.log("channel",`error ${this.topic}`,n),this.state=Q.errored,this.rejoinTimer.scheduleTimeout())}),this.joinPush.receive("timeout",()=>{this._isJoining()&&(this.socket.log("channel",`timeout ${this.topic}`,this.joinPush.timeout),this.state=Q.errored,this.rejoinTimer.scheduleTimeout())}),this._on(Z.reply,{},(n,e)=>{this._trigger(this._replyEventName(e),n)}),this.presence=new Cn(this),this.broadcastEndpointURL=fn(this.socket.endPoint)+"/api/broadcast",this.private=this.params.config.private||!1}subscribe(n,e=this.timeout){var t,r;if(this.socket.isConnected()||this.socket.connect(),this.state==Q.closed){const{config:{broadcast:a,presence:o,private:i}}=this.params;this._onError(e=>null==n?void 0:n(bn.CHANNEL_ERROR,e)),this._onClose(()=>null==n?void 0:n(bn.CLOSED));const s={},c={broadcast:a,presence:o,postgres_changes:null!==(r=null===(t=this.bindings.postgres_changes)||void 0===t?void 0:t.map(n=>n.filter))&&void 0!==r?r:[],private:i};this.socket.accessTokenValue&&(s.access_token=this.socket.accessTokenValue),this.updateJoinPayload(Object.assign({config:c},s)),this.joinedOnce=!0,this._rejoin(e),this.joinPush.receive("ok",async({postgres_changes:e})=>{var t;if(this.socket.setAuth(),void 0!==e){const r=this.bindings.postgres_changes,a=null!==(t=null==r?void 0:r.length)&&void 0!==t?t:0,o=[];for(let t=0;t<a;t++){const a=r[t],{filter:{event:i,schema:s,table:c,filter:l}}=a,u=e&&e[t];if(!u||u.event!==i||u.schema!==s||u.table!==c||u.filter!==l)return this.unsubscribe(),this.state=Q.errored,void(null==n||n(bn.CHANNEL_ERROR,new Error("mismatch between server and client bindings for postgres changes")));o.push(Object.assign(Object.assign({},a),{id:u.id}))}return this.bindings.postgres_changes=o,void(n&&n(bn.SUBSCRIBED))}null==n||n(bn.SUBSCRIBED)}).receive("error",e=>{this.state=Q.errored,null==n||n(bn.CHANNEL_ERROR,new Error(JSON.stringify(Object.values(e).join(", ")||"error")))}).receive("timeout",()=>{null==n||n(bn.TIMED_OUT)})}return this}presenceState(){return this.presence.state}async track(n,e={}){return await this.send({type:"presence",event:"track",payload:n},e.timeout||this.timeout)}async untrack(n={}){return await this.send({type:"presence",event:"untrack"},n)}on(n,e,t){return this._on(n,e,t)}async send(n,e={}){var t,r;if(this._canPush()||"broadcast"!==n.type)return new Promise(t=>{var r,a,o;const i=this._push(n.type,n,e.timeout||this.timeout);"broadcast"!==n.type||(null===(o=null===(a=null===(r=this.params)||void 0===r?void 0:r.config)||void 0===a?void 0:a.broadcast)||void 0===o?void 0:o.ack)||t("ok"),i.receive("ok",()=>t("ok")),i.receive("error",()=>t("error")),i.receive("timeout",()=>t("timed out"))});{const{event:a,payload:o}=n,i={method:"POST",headers:{Authorization:this.socket.accessTokenValue?`Bearer ${this.socket.accessTokenValue}`:"",apikey:this.socket.apiKey?this.socket.apiKey:"","Content-Type":"application/json"},body:JSON.stringify({messages:[{topic:this.subTopic,event:a,payload:o,private:this.private}]})};try{const n=await this._fetchWithTimeout(this.broadcastEndpointURL,i,null!==(t=e.timeout)&&void 0!==t?t:this.timeout);return await(null===(r=n.body)||void 0===r?void 0:r.cancel()),n.ok?"ok":"error"}catch(n){return"AbortError"===n.name?"timed out":"error"}}}updateJoinPayload(n){this.joinPush.updatePayload(n)}unsubscribe(n=this.timeout){this.state=Q.leaving;const e=()=>{this.socket.log("channel",`leave ${this.topic}`),this._trigger(Z.close,"leave",this._joinRef())};this.joinPush.destroy();let t=null;return new Promise(r=>{t=new hn(this,Z.leave,{},n),t.receive("ok",()=>{e(),r("ok")}).receive("timeout",()=>{e(),r("timed out")}).receive("error",()=>{r("error")}),t.send(),this._canPush()||t.trigger("ok",{})}).finally(()=>{null==t||t.destroy()})}teardown(){this.pushBuffer.forEach(n=>n.destroy()),this.rejoinTimer&&clearTimeout(this.rejoinTimer.timer),this.joinPush.destroy()}async _fetchWithTimeout(n,e,t){const r=new AbortController,a=setTimeout(()=>r.abort(),t),o=await this.socket.fetch(n,Object.assign(Object.assign({},e),{signal:r.signal}));return clearTimeout(a),o}_push(n,e,t=this.timeout){if(!this.joinedOnce)throw`tried to push '${n}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;let r=new hn(this,n,e,t);return this._canPush()?r.send():(r.startTimeout(),this.pushBuffer.push(r)),r}_onMessage(n,e,t){return e}_isMember(n){return this.topic===n}_joinRef(){return this.joinPush.ref}_trigger(n,e,t){var r,a;const o=n.toLocaleLowerCase(),{close:i,error:s,leave:c,join:l}=Z;if(t&&[i,s,c,l].indexOf(o)>=0&&t!==this._joinRef())return;let u=this._onMessage(o,e,t);if(e&&!u)throw"channel onMessage callbacks must return the payload, modified or unmodified";["insert","update","delete"].includes(o)?null===(r=this.bindings.postgres_changes)||void 0===r||r.filter(n=>{var e,t,r;return"*"===(null===(e=n.filter)||void 0===e?void 0:e.event)||(null===(r=null===(t=n.filter)||void 0===t?void 0:t.event)||void 0===r?void 0:r.toLocaleLowerCase())===o}).map(n=>n.callback(u,t)):null===(a=this.bindings[o])||void 0===a||a.filter(n=>{var t,r,a,i,s,c;if(["broadcast","presence","postgres_changes"].includes(o)){if("id"in n){const o=n.id,i=null===(t=n.filter)||void 0===t?void 0:t.event;return o&&(null===(r=e.ids)||void 0===r?void 0:r.includes(o))&&("*"===i||(null==i?void 0:i.toLocaleLowerCase())===(null===(a=e.data)||void 0===a?void 0:a.type.toLocaleLowerCase()))}{const t=null===(s=null===(i=null==n?void 0:n.filter)||void 0===i?void 0:i.event)||void 0===s?void 0:s.toLocaleLowerCase();return"*"===t||t===(null===(c=null==e?void 0:e.event)||void 0===c?void 0:c.toLocaleLowerCase())}}return n.type.toLocaleLowerCase()===o}).map(n=>{if("object"==typeof u&&"ids"in u){const n=u.data,{schema:e,table:t,commit_timestamp:r,type:a,errors:o}=n,i={schema:e,table:t,commit_timestamp:r,eventType:a,new:{},old:{},errors:o};u=Object.assign(Object.assign({},i),this._getPayloadRecords(n))}n.callback(u,t)})}_isClosed(){return this.state===Q.closed}_isJoined(){return this.state===Q.joined}_isJoining(){return this.state===Q.joining}_isLeaving(){return this.state===Q.leaving}_replyEventName(n){return`chan_reply_${n}`}_on(n,e,t){const r=n.toLocaleLowerCase(),a={type:r,filter:e,callback:t};return this.bindings[r]?this.bindings[r].push(a):this.bindings[r]=[a],this}_off(n,e){const t=n.toLocaleLowerCase();return this.bindings[t]=this.bindings[t].filter(n=>{var r;return!((null===(r=n.type)||void 0===r?void 0:r.toLocaleLowerCase())===t&&yn.isEqual(n.filter,e))}),this}static isEqual(n,e){if(Object.keys(n).length!==Object.keys(e).length)return!1;for(const t in n)if(n[t]!==e[t])return!1;return!0}_rejoinUntilConnected(){this.rejoinTimer.scheduleTimeout(),this.socket.isConnected()&&this._rejoin()}_onClose(n){this._on(Z.close,{},n)}_onError(n){this._on(Z.error,{},e=>n(e))}_canPush(){return this.socket.isConnected()&&this._isJoined()}_rejoin(n=this.timeout){this._isLeaving()||(this.socket._leaveOpenTopic(this.topic),this.state=Q.joining,this.joinPush.resend(n))}_getPayloadRecords(n){const e={new:{},old:{}};return"INSERT"!==n.type&&"UPDATE"!==n.type||(e.new=an(n.columns,n.record)),"UPDATE"!==n.type&&"DELETE"!==n.type||(e.old=an(n.columns,n.old_record)),e}}const En=()=>{};class Bn{constructor(n,e){var t;this.accessTokenValue=null,this.apiKey=null,this.channels=new Array,this.endPoint="",this.httpEndpoint="",this.headers={},this.params={},this.timeout=1e4,this.heartbeatIntervalMs=25e3,this.heartbeatTimer=void 0,this.pendingHeartbeatRef=null,this.heartbeatCallback=En,this.ref=0,this.logger=En,this.conn=null,this.sendBuffer=[],this.serializer=new tn,this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.accessToken=null,this._resolveFetch=n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)},this.endPoint=`${n}/${X.websocket}`,this.httpEndpoint=fn(n),(null==e?void 0:e.transport)?this.transport=e.transport:this.transport=null,(null==e?void 0:e.params)&&(this.params=e.params),(null==e?void 0:e.timeout)&&(this.timeout=e.timeout),(null==e?void 0:e.logger)&&(this.logger=e.logger),((null==e?void 0:e.logLevel)||(null==e?void 0:e.log_level))&&(this.logLevel=e.logLevel||e.log_level,this.params=Object.assign(Object.assign({},this.params),{log_level:this.logLevel})),(null==e?void 0:e.heartbeatIntervalMs)&&(this.heartbeatIntervalMs=e.heartbeatIntervalMs);const r=null===(t=null==e?void 0:e.params)||void 0===t?void 0:t.apikey;if(r&&(this.accessTokenValue=r,this.apiKey=r),this.reconnectAfterMs=(null==e?void 0:e.reconnectAfterMs)?e.reconnectAfterMs:n=>[1e3,2e3,5e3,1e4][n-1]||1e4,this.encode=(null==e?void 0:e.encode)?e.encode:(n,e)=>e(JSON.stringify(n)),this.decode=(null==e?void 0:e.decode)?e.decode:this.serializer.decode.bind(this.serializer),this.reconnectTimer=new rn(async()=>{this.disconnect(),this.connect()},this.reconnectAfterMs),this.fetch=this._resolveFetch(null==e?void 0:e.fetch),null==e?void 0:e.worker){if("undefined"!=typeof window&&!window.Worker)throw new Error("Web Worker is not supported");this.worker=(null==e?void 0:e.worker)||!1,this.workerUrl=null==e?void 0:e.workerUrl}this.accessToken=(null==e?void 0:e.accessToken)||null}connect(){if(!this.conn){if(this.transport||(this.transport=V),!this.transport)throw new Error("No transport provided");this.conn=new this.transport(this.endpointURL()),this.setupConnection()}}endpointURL(){return this._appendParams(this.endPoint,Object.assign({},this.params,{vsn:"1.0.0"}))}disconnect(n,e){this.conn&&(this.conn.onclose=function(){},n?this.conn.close(n,null!=e?e:""):this.conn.close(),this.conn=null,this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.reset(),this.channels.forEach(n=>n.teardown()))}getChannels(){return this.channels}async removeChannel(n){const e=await n.unsubscribe();return 0===this.channels.length&&this.disconnect(),e}async removeAllChannels(){const n=await Promise.all(this.channels.map(n=>n.unsubscribe()));return this.channels=[],this.disconnect(),n}log(n,e,t){this.logger(n,e,t)}connectionState(){switch(this.conn&&this.conn.readyState){case K.connecting:return J.Connecting;case K.open:return J.Open;case K.closing:return J.Closing;default:return J.Closed}}isConnected(){return this.connectionState()===J.Open}channel(n,e={config:{}}){const t=`realtime:${n}`,r=this.getChannels().find(n=>n.topic===t);if(r)return r;{const t=new yn(`realtime:${n}`,e,this);return this.channels.push(t),t}}push(n){const{topic:e,event:t,payload:r,ref:a}=n,o=()=>{this.encode(n,n=>{var e;null===(e=this.conn)||void 0===e||e.send(n)})};this.log("push",`${e} ${t} (${a})`,r),this.isConnected()?o():this.sendBuffer.push(o)}async setAuth(n=null){let e=n||this.accessToken&&await this.accessToken()||this.accessTokenValue;this.accessTokenValue!=e&&(this.accessTokenValue=e,this.channels.forEach(n=>{const t={access_token:e,version:"realtime-js/2.11.15"};e&&n.updateJoinPayload(t),n.joinedOnce&&n._isJoined()&&n._push(Z.access_token,{access_token:e})}))}async sendHeartbeat(){var n;if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.log("transport","heartbeat timeout. Attempting to re-establish connection"),this.heartbeatCallback("timeout"),void(null===(n=this.conn)||void 0===n||n.close(1e3,"hearbeat timeout"));this.pendingHeartbeatRef=this._makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef}),this.heartbeatCallback("sent"),await this.setAuth()}else this.heartbeatCallback("disconnected")}onHeartbeat(n){this.heartbeatCallback=n}flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(n=>n()),this.sendBuffer=[])}_makeRef(){let n=this.ref+1;return n===this.ref?this.ref=0:this.ref=n,this.ref.toString()}_leaveOpenTopic(n){let e=this.channels.find(e=>e.topic===n&&(e._isJoined()||e._isJoining()));e&&(this.log("transport",`leaving duplicate topic "${n}"`),e.unsubscribe())}_remove(n){this.channels=this.channels.filter(e=>e.topic!==n.topic)}setupConnection(){this.conn&&(this.conn.binaryType="arraybuffer",this.conn.onopen=()=>this._onConnOpen(),this.conn.onerror=n=>this._onConnError(n),this.conn.onmessage=n=>this._onConnMessage(n),this.conn.onclose=n=>this._onConnClose(n))}_onConnMessage(n){this.decode(n.data,n=>{let{topic:e,event:t,payload:r,ref:a}=n;"phoenix"===e&&"phx_reply"===t&&this.heartbeatCallback("ok"==n.payload.status?"ok":"error"),a&&a===this.pendingHeartbeatRef&&(this.pendingHeartbeatRef=null),this.log("receive",`${r.status||""} ${e} ${t} ${a&&"("+a+")"||""}`,r),Array.from(this.channels).filter(n=>n._isMember(e)).forEach(n=>n._trigger(t,r,a)),this.stateChangeCallbacks.message.forEach(e=>e(n))})}_onConnOpen(){this.log("transport",`connected to ${this.endpointURL()}`),this.flushSendBuffer(),this.reconnectTimer.reset(),this.worker?this.workerRef||this._startWorkerHeartbeat():this._startHeartbeat(),this.stateChangeCallbacks.open.forEach(n=>n())}_startHeartbeat(){this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(()=>this.sendHeartbeat(),this.heartbeatIntervalMs)}_startWorkerHeartbeat(){this.workerUrl?this.log("worker",`starting worker for from ${this.workerUrl}`):this.log("worker","starting default worker");const n=this._workerObjectUrl(this.workerUrl);this.workerRef=new Worker(n),this.workerRef.onerror=n=>{this.log("worker","worker error",n.message),this.workerRef.terminate()},this.workerRef.onmessage=n=>{"keepAlive"===n.data.event&&this.sendHeartbeat()},this.workerRef.postMessage({event:"start",interval:this.heartbeatIntervalMs})}_onConnClose(n){this.log("transport","close",n),this._triggerChanError(),this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(e=>e(n))}_onConnError(n){this.log("transport",`${n}`),this._triggerChanError(),this.stateChangeCallbacks.error.forEach(e=>e(n))}_triggerChanError(){this.channels.forEach(n=>n._trigger(Z.error))}_appendParams(n,e){if(0===Object.keys(e).length)return n;const t=n.match(/\?/)?"&":"?";return`${n}${t}${new URLSearchParams(e)}`}_workerObjectUrl(n){let e;if(n)e=n;else{const n=new Blob(['\n  addEventListener("message", (e) => {\n    if (e.data.event === "start") {\n      setInterval(() => postMessage({ event: "keepAlive" }), e.data.interval);\n    }\n  });'],{type:"application/javascript"});e=URL.createObjectURL(n)}return e}}class xn extends Error{constructor(n){super(n),this.__isStorageError=!0,this.name="StorageError"}}function kn(n){return"object"==typeof n&&null!==n&&"__isStorageError"in n}class wn extends xn{constructor(n,e){super(n),this.name="StorageApiError",this.status=e}toJSON(){return{name:this.name,message:this.message,status:this.status}}}class jn extends xn{constructor(n,e){super(n),this.name="StorageUnknownError",this.originalError=e}}const Sn=n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)},zn=n=>{if(Array.isArray(n))return n.map(n=>zn(n));if("function"==typeof n||n!==Object(n))return n;const e={};return Object.entries(n).forEach(([n,t])=>{const r=n.replace(/([-_][a-z])/gi,n=>n.toUpperCase().replace(/[-_]/g,""));e[r]=zn(t)}),e};var Nn=function(n,e,t,r){return new(t||(t=Promise))(function(a,o){function i(n){try{c(r.next(n))}catch(n){o(n)}}function s(n){try{c(r.throw(n))}catch(n){o(n)}}function c(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(i,s)}c((r=r.apply(n,e||[])).next())})};const In=n=>n.msg||n.message||n.error_description||n.error||JSON.stringify(n),_n=(n,e,t)=>Nn(void 0,void 0,void 0,function*(){const r=yield(o=void 0,i=void 0,s=void 0,c=function*(){return"undefined"==typeof Response?(yield Promise.resolve().then(a.bind(a,907))).Response:Response},new(s||(s=Promise))(function(n,e){function t(n){try{a(c.next(n))}catch(n){e(n)}}function r(n){try{a(c.throw(n))}catch(n){e(n)}}function a(e){var a;e.done?n(e.value):(a=e.value,a instanceof s?a:new s(function(n){n(a)})).then(t,r)}a((c=c.apply(o,i||[])).next())}));var o,i,s,c;n instanceof r&&!(null==t?void 0:t.noResolveJson)?n.json().then(t=>{e(new wn(In(t),n.status||500))}).catch(n=>{e(new jn(In(n),n))}):e(new jn(In(n),n))});function Tn(n,e,t,r,a,o){return Nn(this,void 0,void 0,function*(){return new Promise((i,s)=>{n(t,((n,e,t,r)=>{const a={method:n,headers:(null==e?void 0:e.headers)||{}};return"GET"===n?a:(a.headers=Object.assign({"Content-Type":"application/json"},null==e?void 0:e.headers),r&&(a.body=JSON.stringify(r)),Object.assign(Object.assign({},a),t))})(e,r,a,o)).then(n=>{if(!n.ok)throw n;return(null==r?void 0:r.noResolveJson)?n:n.json()}).then(n=>i(n)).catch(n=>_n(n,s,r))})})}function On(n,e,t,r){return Nn(this,void 0,void 0,function*(){return Tn(n,"GET",e,t,r)})}function Pn(n,e,t,r,a){return Nn(this,void 0,void 0,function*(){return Tn(n,"POST",e,r,a,t)})}function Dn(n,e,t,r,a){return Nn(this,void 0,void 0,function*(){return Tn(n,"DELETE",e,r,a,t)})}var Ln=function(n,e,t,r){return new(t||(t=Promise))(function(a,o){function i(n){try{c(r.next(n))}catch(n){o(n)}}function s(n){try{c(r.throw(n))}catch(n){o(n)}}function c(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(i,s)}c((r=r.apply(n,e||[])).next())})};const Rn={limit:100,offset:0,sortBy:{column:"name",order:"asc"}},Mn={cacheControl:"3600",contentType:"text/plain;charset=UTF-8",upsert:!1};class Fn{constructor(n,e={},t,r){this.url=n,this.headers=e,this.bucketId=t,this.fetch=Sn(r)}uploadOrUpdate(n,e,t,r){return Ln(this,void 0,void 0,function*(){try{let a;const o=Object.assign(Object.assign({},Mn),r);let i=Object.assign(Object.assign({},this.headers),"POST"===n&&{"x-upsert":String(o.upsert)});const s=o.metadata;"undefined"!=typeof Blob&&t instanceof Blob?(a=new FormData,a.append("cacheControl",o.cacheControl),s&&a.append("metadata",this.encodeMetadata(s)),a.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(a=t,a.append("cacheControl",o.cacheControl),s&&a.append("metadata",this.encodeMetadata(s))):(a=t,i["cache-control"]=`max-age=${o.cacheControl}`,i["content-type"]=o.contentType,s&&(i["x-metadata"]=this.toBase64(this.encodeMetadata(s)))),(null==r?void 0:r.headers)&&(i=Object.assign(Object.assign({},i),r.headers));const c=this._removeEmptyFolders(e),l=this._getFinalPath(c),u=yield this.fetch(`${this.url}/object/${l}`,Object.assign({method:n,body:a,headers:i},(null==o?void 0:o.duplex)?{duplex:o.duplex}:{})),d=yield u.json();return u.ok?{data:{path:c,id:d.Id,fullPath:d.Key},error:null}:{data:null,error:d}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}upload(n,e,t){return Ln(this,void 0,void 0,function*(){return this.uploadOrUpdate("POST",n,e,t)})}uploadToSignedUrl(n,e,t,r){return Ln(this,void 0,void 0,function*(){const a=this._removeEmptyFolders(n),o=this._getFinalPath(a),i=new URL(this.url+`/object/upload/sign/${o}`);i.searchParams.set("token",e);try{let n;const e=Object.assign({upsert:Mn.upsert},r),o=Object.assign(Object.assign({},this.headers),{"x-upsert":String(e.upsert)});"undefined"!=typeof Blob&&t instanceof Blob?(n=new FormData,n.append("cacheControl",e.cacheControl),n.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(n=t,n.append("cacheControl",e.cacheControl)):(n=t,o["cache-control"]=`max-age=${e.cacheControl}`,o["content-type"]=e.contentType);const s=yield this.fetch(i.toString(),{method:"PUT",body:n,headers:o}),c=yield s.json();return s.ok?{data:{path:a,fullPath:c.Key},error:null}:{data:null,error:c}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}createSignedUploadUrl(n,e){return Ln(this,void 0,void 0,function*(){try{let t=this._getFinalPath(n);const r=Object.assign({},this.headers);(null==e?void 0:e.upsert)&&(r["x-upsert"]="true");const a=yield Pn(this.fetch,`${this.url}/object/upload/sign/${t}`,{},{headers:r}),o=new URL(this.url+a.url),i=o.searchParams.get("token");if(!i)throw new xn("No token returned by API");return{data:{signedUrl:o.toString(),path:n,token:i},error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}update(n,e,t){return Ln(this,void 0,void 0,function*(){return this.uploadOrUpdate("PUT",n,e,t)})}move(n,e,t){return Ln(this,void 0,void 0,function*(){try{return{data:yield Pn(this.fetch,`${this.url}/object/move`,{bucketId:this.bucketId,sourceKey:n,destinationKey:e,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}copy(n,e,t){return Ln(this,void 0,void 0,function*(){try{return{data:{path:(yield Pn(this.fetch,`${this.url}/object/copy`,{bucketId:this.bucketId,sourceKey:n,destinationKey:e,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers})).Key},error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}createSignedUrl(n,e,t){return Ln(this,void 0,void 0,function*(){try{let r=this._getFinalPath(n),a=yield Pn(this.fetch,`${this.url}/object/sign/${r}`,Object.assign({expiresIn:e},(null==t?void 0:t.transform)?{transform:t.transform}:{}),{headers:this.headers});const o=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return a={signedUrl:encodeURI(`${this.url}${a.signedURL}${o}`)},{data:a,error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}createSignedUrls(n,e,t){return Ln(this,void 0,void 0,function*(){try{const r=yield Pn(this.fetch,`${this.url}/object/sign/${this.bucketId}`,{expiresIn:e,paths:n},{headers:this.headers}),a=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return{data:r.map(n=>Object.assign(Object.assign({},n),{signedUrl:n.signedURL?encodeURI(`${this.url}${n.signedURL}${a}`):null})),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}download(n,e){return Ln(this,void 0,void 0,function*(){const t=void 0!==(null==e?void 0:e.transform)?"render/image/authenticated":"object",r=this.transformOptsToQueryString((null==e?void 0:e.transform)||{}),a=r?`?${r}`:"";try{const e=this._getFinalPath(n),r=yield On(this.fetch,`${this.url}/${t}/${e}${a}`,{headers:this.headers,noResolveJson:!0});return{data:yield r.blob(),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}info(n){return Ln(this,void 0,void 0,function*(){const e=this._getFinalPath(n);try{const n=yield On(this.fetch,`${this.url}/object/info/${e}`,{headers:this.headers});return{data:zn(n),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}exists(n){return Ln(this,void 0,void 0,function*(){const e=this._getFinalPath(n);try{return yield function(n,e,t){return Nn(this,void 0,void 0,function*(){return Tn(n,"HEAD",e,Object.assign(Object.assign({},t),{noResolveJson:!0}),undefined)})}(this.fetch,`${this.url}/object/${e}`,{headers:this.headers}),{data:!0,error:null}}catch(n){if(kn(n)&&n instanceof jn){const e=n.originalError;if([400,404].includes(null==e?void 0:e.status))return{data:!1,error:n}}throw n}})}getPublicUrl(n,e){const t=this._getFinalPath(n),r=[],a=(null==e?void 0:e.download)?`download=${!0===e.download?"":e.download}`:"";""!==a&&r.push(a);const o=void 0!==(null==e?void 0:e.transform)?"render/image":"object",i=this.transformOptsToQueryString((null==e?void 0:e.transform)||{});""!==i&&r.push(i);let s=r.join("&");return""!==s&&(s=`?${s}`),{data:{publicUrl:encodeURI(`${this.url}/${o}/public/${t}${s}`)}}}remove(n){return Ln(this,void 0,void 0,function*(){try{return{data:yield Dn(this.fetch,`${this.url}/object/${this.bucketId}`,{prefixes:n},{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}list(n,e,t){return Ln(this,void 0,void 0,function*(){try{const r=Object.assign(Object.assign(Object.assign({},Rn),e),{prefix:n||""});return{data:yield Pn(this.fetch,`${this.url}/object/list/${this.bucketId}`,r,{headers:this.headers},t),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}encodeMetadata(n){return JSON.stringify(n)}toBase64(n){return"undefined"!=typeof Buffer?Buffer.from(n).toString("base64"):btoa(n)}_getFinalPath(n){return`${this.bucketId}/${n}`}_removeEmptyFolders(n){return n.replace(/^\/|\/$/g,"").replace(/\/+/g,"/")}transformOptsToQueryString(n){const e=[];return n.width&&e.push(`width=${n.width}`),n.height&&e.push(`height=${n.height}`),n.resize&&e.push(`resize=${n.resize}`),n.format&&e.push(`format=${n.format}`),n.quality&&e.push(`quality=${n.quality}`),e.join("&")}}const Un={"X-Client-Info":"storage-js/2.7.1"};var Yn=function(n,e,t,r){return new(t||(t=Promise))(function(a,o){function i(n){try{c(r.next(n))}catch(n){o(n)}}function s(n){try{c(r.throw(n))}catch(n){o(n)}}function c(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(i,s)}c((r=r.apply(n,e||[])).next())})};class qn{constructor(n,e={},t){this.url=n,this.headers=Object.assign(Object.assign({},Un),e),this.fetch=Sn(t)}listBuckets(){return Yn(this,void 0,void 0,function*(){try{return{data:yield On(this.fetch,`${this.url}/bucket`,{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}getBucket(n){return Yn(this,void 0,void 0,function*(){try{return{data:yield On(this.fetch,`${this.url}/bucket/${n}`,{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}createBucket(n,e={public:!1}){return Yn(this,void 0,void 0,function*(){try{return{data:yield Pn(this.fetch,`${this.url}/bucket`,{id:n,name:n,public:e.public,file_size_limit:e.fileSizeLimit,allowed_mime_types:e.allowedMimeTypes},{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}updateBucket(n,e){return Yn(this,void 0,void 0,function*(){try{const t=yield function(n,e,t,r){return Nn(this,void 0,void 0,function*(){return Tn(n,"PUT",e,r,undefined,t)})}(this.fetch,`${this.url}/bucket/${n}`,{id:n,name:n,public:e.public,file_size_limit:e.fileSizeLimit,allowed_mime_types:e.allowedMimeTypes},{headers:this.headers});return{data:t,error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}emptyBucket(n){return Yn(this,void 0,void 0,function*(){try{return{data:yield Pn(this.fetch,`${this.url}/bucket/${n}/empty`,{},{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}deleteBucket(n){return Yn(this,void 0,void 0,function*(){try{return{data:yield Dn(this.fetch,`${this.url}/bucket/${n}`,{},{headers:this.headers}),error:null}}catch(n){if(kn(n))return{data:null,error:n};throw n}})}}class $n extends qn{constructor(n,e={},t){super(n,e,t)}from(n){return new Fn(this.url,this.headers,n,this.fetch)}}let Wn="";Wn="undefined"!=typeof Deno?"deno":"undefined"!=typeof document?"web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?"react-native":"node";const Gn={headers:{"X-Client-Info":`supabase-js-${Wn}/2.50.3`}},Hn={schema:"public"},Vn={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},Kn={};var Qn=a(907);const Zn=n=>{let e;return e=n||("undefined"==typeof fetch?Qn.default:fetch),(...n)=>e(...n)},Xn=(n,e,t)=>{const r=Zn(t),a="undefined"==typeof Headers?Qn.Headers:Headers;return(t,o)=>{return i=void 0,s=void 0,l=function*(){var i;const s=null!==(i=yield e())&&void 0!==i?i:n;let c=new a(null==o?void 0:o.headers);return c.has("apikey")||c.set("apikey",n),c.has("Authorization")||c.set("Authorization",`Bearer ${s}`),r(t,Object.assign(Object.assign({},o),{headers:c}))},new((c=void 0)||(c=Promise))(function(n,e){function t(n){try{a(l.next(n))}catch(n){e(n)}}function r(n){try{a(l.throw(n))}catch(n){e(n)}}function a(e){var a;e.done?n(e.value):(a=e.value,a instanceof c?a:new c(function(n){n(a)})).then(t,r)}a((l=l.apply(i,s||[])).next())});var i,s,c,l}};const Jn="2.70.0",ne=3e4,ee={"X-Client-Info":`gotrue-js/${Jn}`},te="X-Supabase-Api-Version",re=Date.parse("2024-01-01T00:00:00.0Z"),ae="2024-01-01",oe=/^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;class ie extends Error{constructor(n,e,t){super(n),this.__isAuthError=!0,this.name="AuthError",this.status=e,this.code=t}}function se(n){return"object"==typeof n&&null!==n&&"__isAuthError"in n}class ce extends ie{constructor(n,e,t){super(n,e,t),this.name="AuthApiError",this.status=e,this.code=t}}class le extends ie{constructor(n,e){super(n),this.name="AuthUnknownError",this.originalError=e}}class ue extends ie{constructor(n,e,t,r){super(n,t,r),this.name=e,this.status=t}}class de extends ue{constructor(){super("Auth session missing!","AuthSessionMissingError",400,void 0)}}class Ae extends ue{constructor(){super("Auth session or user missing","AuthInvalidTokenResponseError",500,void 0)}}class pe extends ue{constructor(n){super(n,"AuthInvalidCredentialsError",400,void 0)}}class fe extends ue{constructor(n,e=null){super(n,"AuthImplicitGrantRedirectError",500,void 0),this.details=null,this.details=e}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class he extends ue{constructor(n,e=null){super(n,"AuthPKCEGrantCodeExchangeError",500,void 0),this.details=null,this.details=e}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class ge extends ue{constructor(n,e){super(n,"AuthRetryableFetchError",e,void 0)}}function me(n){return se(n)&&"AuthRetryableFetchError"===n.name}class ve extends ue{constructor(n,e,t){super(n,"AuthWeakPasswordError",e,"weak_password"),this.reasons=t}}class be extends ue{constructor(n){super(n,"AuthInvalidJwtError",400,"invalid_jwt")}}const Ce="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".split(""),ye=" \t\n\r=".split(""),Ee=(()=>{const n=new Array(128);for(let e=0;e<n.length;e+=1)n[e]=-1;for(let e=0;e<ye.length;e+=1)n[ye[e].charCodeAt(0)]=-2;for(let e=0;e<Ce.length;e+=1)n[Ce[e].charCodeAt(0)]=e;return n})();function Be(n,e,t){if(null!==n)for(e.queue=e.queue<<8|n,e.queuedBits+=8;e.queuedBits>=6;){const n=e.queue>>e.queuedBits-6&63;t(Ce[n]),e.queuedBits-=6}else if(e.queuedBits>0)for(e.queue=e.queue<<6-e.queuedBits,e.queuedBits=6;e.queuedBits>=6;){const n=e.queue>>e.queuedBits-6&63;t(Ce[n]),e.queuedBits-=6}}function xe(n,e,t){const r=Ee[n];if(!(r>-1)){if(-2===r)return;throw new Error(`Invalid Base64-URL character "${String.fromCharCode(n)}"`)}for(e.queue=e.queue<<6|r,e.queuedBits+=6;e.queuedBits>=8;)t(e.queue>>e.queuedBits-8&255),e.queuedBits-=8}function ke(n){const e=[],t=n=>{e.push(String.fromCodePoint(n))},r={utf8seq:0,codepoint:0},a={queue:0,queuedBits:0},o=n=>{!function(n,e,t){if(0===e.utf8seq){if(n<=127)return void t(n);for(let t=1;t<6;t+=1)if(!(n>>7-t&1)){e.utf8seq=t;break}if(2===e.utf8seq)e.codepoint=31&n;else if(3===e.utf8seq)e.codepoint=15&n;else{if(4!==e.utf8seq)throw new Error("Invalid UTF-8 sequence");e.codepoint=7&n}e.utf8seq-=1}else if(e.utf8seq>0){if(n<=127)throw new Error("Invalid UTF-8 sequence");e.codepoint=e.codepoint<<6|63&n,e.utf8seq-=1,0===e.utf8seq&&t(e.codepoint)}}(n,r,t)};for(let e=0;e<n.length;e+=1)xe(n.charCodeAt(e),a,o);return e.join("")}function we(n,e){if(!(n<=127)){if(n<=2047)return e(192|n>>6),void e(128|63&n);if(n<=65535)return e(224|n>>12),e(128|n>>6&63),void e(128|63&n);if(n<=1114111)return e(240|n>>18),e(128|n>>12&63),e(128|n>>6&63),void e(128|63&n);throw new Error(`Unrecognized Unicode codepoint: ${n.toString(16)}`)}e(n)}function je(n){const e=[],t={queue:0,queuedBits:0},r=n=>{e.push(n)};for(let e=0;e<n.length;e+=1)xe(n.charCodeAt(e),t,r);return new Uint8Array(e)}function Se(n){const e=[],t={queue:0,queuedBits:0},r=n=>{e.push(n)};return n.forEach(n=>Be(n,t,r)),Be(null,t,r),e.join("")}const ze=()=>"undefined"!=typeof window&&"undefined"!=typeof document,Ne={tested:!1,writable:!1},Ie=()=>{if(!ze())return!1;try{if("object"!=typeof globalThis.localStorage)return!1}catch(n){return!1}if(Ne.tested)return Ne.writable;const n=`lswt-${Math.random()}${Math.random()}`;try{globalThis.localStorage.setItem(n,n),globalThis.localStorage.removeItem(n),Ne.tested=!0,Ne.writable=!0}catch(n){Ne.tested=!0,Ne.writable=!1}return Ne.writable},_e=n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)},Te=async(n,e,t)=>{await n.setItem(e,JSON.stringify(t))},Oe=async(n,e)=>{const t=await n.getItem(e);if(!t)return null;try{return JSON.parse(t)}catch(n){return t}},Pe=async(n,e)=>{await n.removeItem(e)};class De{constructor(){this.promise=new De.promiseConstructor((n,e)=>{this.resolve=n,this.reject=e})}}function Le(n){const e=n.split(".");if(3!==e.length)throw new be("Invalid JWT structure");for(let n=0;n<e.length;n++)if(!oe.test(e[n]))throw new be("JWT not in base64url format");return{header:JSON.parse(ke(e[0])),payload:JSON.parse(ke(e[1])),signature:je(e[2]),raw:{header:e[0],payload:e[1]}}}function Re(n){return("0"+n.toString(16)).substr(-2)}async function Me(n,e,t=!1){const r=function(){const n=new Uint32Array(56);if("undefined"==typeof crypto){const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",e=n.length;let t="";for(let r=0;r<56;r++)t+=n.charAt(Math.floor(Math.random()*e));return t}return crypto.getRandomValues(n),Array.from(n,Re).join("")}();let a=r;t&&(a+="/PASSWORD_RECOVERY"),await Te(n,`${e}-code-verifier`,a);const o=await async function(n){if("undefined"==typeof crypto||void 0===crypto.subtle||"undefined"==typeof TextEncoder)return console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256."),n;const e=await async function(n){const e=(new TextEncoder).encode(n),t=await crypto.subtle.digest("SHA-256",e),r=new Uint8Array(t);return Array.from(r).map(n=>String.fromCharCode(n)).join("")}(n);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}(r);return[o,r===o?"plain":"s256"]}De.promiseConstructor=Promise;const Fe=/^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i,Ue=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;function Ye(n){if(!Ue.test(n))throw new Error("@supabase/auth-js: Expected parameter to be UUID but is not")}const qe=n=>n.msg||n.message||n.error_description||n.error||JSON.stringify(n),$e=[502,503,504];async function We(n){var e,t;if(!("object"==typeof(t=n)&&null!==t&&"status"in t&&"ok"in t&&"json"in t&&"function"==typeof t.json))throw new ge(qe(n),0);if($e.includes(n.status))throw new ge(qe(n),n.status);let r,a;try{r=await n.json()}catch(n){throw new le(qe(n),n)}const o=function(n){const e=n.headers.get(te);if(!e)return null;if(!e.match(Fe))return null;try{return new Date(`${e}T00:00:00.0Z`)}catch(n){return null}}(n);if(o&&o.getTime()>=re&&"object"==typeof r&&r&&"string"==typeof r.code?a=r.code:"object"==typeof r&&r&&"string"==typeof r.error_code&&(a=r.error_code),a){if("weak_password"===a)throw new ve(qe(r),n.status,(null===(e=r.weak_password)||void 0===e?void 0:e.reasons)||[]);if("session_not_found"===a)throw new de}else if("object"==typeof r&&r&&"object"==typeof r.weak_password&&r.weak_password&&Array.isArray(r.weak_password.reasons)&&r.weak_password.reasons.length&&r.weak_password.reasons.reduce((n,e)=>n&&"string"==typeof e,!0))throw new ve(qe(r),n.status,r.weak_password.reasons);throw new ce(qe(r),n.status||500,a)}async function Ge(n,e,t,r){var a;const o=Object.assign({},null==r?void 0:r.headers);o[te]||(o[te]=ae),(null==r?void 0:r.jwt)&&(o.Authorization=`Bearer ${r.jwt}`);const i=null!==(a=null==r?void 0:r.query)&&void 0!==a?a:{};(null==r?void 0:r.redirectTo)&&(i.redirect_to=r.redirectTo);const s=Object.keys(i).length?"?"+new URLSearchParams(i).toString():"",c=await async function(n,e,t,r,a,o){const i=((n,e,t,r)=>{const a={method:n,headers:(null==e?void 0:e.headers)||{}};return"GET"===n?a:(a.headers=Object.assign({"Content-Type":"application/json;charset=UTF-8"},null==e?void 0:e.headers),a.body=JSON.stringify(r),Object.assign(Object.assign({},a),t))})(e,r,{},o);let s;try{s=await n(t,Object.assign({},i))}catch(n){throw console.error(n),new ge(qe(n),0)}if(s.ok||await We(s),null==r?void 0:r.noResolveJson)return s;try{return await s.json()}catch(n){await We(n)}}(n,e,t+s,{headers:o,noResolveJson:null==r?void 0:r.noResolveJson},0,null==r?void 0:r.body);return(null==r?void 0:r.xform)?null==r?void 0:r.xform(c):{data:Object.assign({},c),error:null}}function He(n){var e;let t=null;var r;return function(n){return n.access_token&&n.refresh_token&&n.expires_in}(n)&&(t=Object.assign({},n),n.expires_at||(t.expires_at=(r=n.expires_in,Math.round(Date.now()/1e3)+r))),{data:{session:t,user:null!==(e=n.user)&&void 0!==e?e:n},error:null}}function Ve(n){const e=He(n);return!e.error&&n.weak_password&&"object"==typeof n.weak_password&&Array.isArray(n.weak_password.reasons)&&n.weak_password.reasons.length&&n.weak_password.message&&"string"==typeof n.weak_password.message&&n.weak_password.reasons.reduce((n,e)=>n&&"string"==typeof e,!0)&&(e.data.weak_password=n.weak_password),e}function Ke(n){var e;return{data:{user:null!==(e=n.user)&&void 0!==e?e:n},error:null}}function Qe(n){return{data:n,error:null}}function Ze(n){const{action_link:e,email_otp:t,hashed_token:r,redirect_to:a,verification_type:o}=n,i=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t}(n,["action_link","email_otp","hashed_token","redirect_to","verification_type"]);return{data:{properties:{action_link:e,email_otp:t,hashed_token:r,redirect_to:a,verification_type:o},user:Object.assign({},i)},error:null}}function Xe(n){return n}const Je=["global","local","others"];class nt{constructor({url:n="",headers:e={},fetch:t}){this.url=n,this.headers=e,this.fetch=_e(t),this.mfa={listFactors:this._listFactors.bind(this),deleteFactor:this._deleteFactor.bind(this)}}async signOut(n,e=Je[0]){if(Je.indexOf(e)<0)throw new Error(`@supabase/auth-js: Parameter scope must be one of ${Je.join(", ")}`);try{return await Ge(this.fetch,"POST",`${this.url}/logout?scope=${e}`,{headers:this.headers,jwt:n,noResolveJson:!0}),{data:null,error:null}}catch(n){if(se(n))return{data:null,error:n};throw n}}async inviteUserByEmail(n,e={}){try{return await Ge(this.fetch,"POST",`${this.url}/invite`,{body:{email:n,data:e.data},headers:this.headers,redirectTo:e.redirectTo,xform:Ke})}catch(n){if(se(n))return{data:{user:null},error:n};throw n}}async generateLink(n){try{const{options:e}=n,t=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t}(n,["options"]),r=Object.assign(Object.assign({},t),e);return"newEmail"in t&&(r.new_email=null==t?void 0:t.newEmail,delete r.newEmail),await Ge(this.fetch,"POST",`${this.url}/admin/generate_link`,{body:r,headers:this.headers,xform:Ze,redirectTo:null==e?void 0:e.redirectTo})}catch(n){if(se(n))return{data:{properties:null,user:null},error:n};throw n}}async createUser(n){try{return await Ge(this.fetch,"POST",`${this.url}/admin/users`,{body:n,headers:this.headers,xform:Ke})}catch(n){if(se(n))return{data:{user:null},error:n};throw n}}async listUsers(n){var e,t,r,a,o,i,s;try{const c={nextPage:null,lastPage:0,total:0},l=await Ge(this.fetch,"GET",`${this.url}/admin/users`,{headers:this.headers,noResolveJson:!0,query:{page:null!==(t=null===(e=null==n?void 0:n.page)||void 0===e?void 0:e.toString())&&void 0!==t?t:"",per_page:null!==(a=null===(r=null==n?void 0:n.perPage)||void 0===r?void 0:r.toString())&&void 0!==a?a:""},xform:Xe});if(l.error)throw l.error;const u=await l.json(),d=null!==(o=l.headers.get("x-total-count"))&&void 0!==o?o:0,A=null!==(s=null===(i=l.headers.get("link"))||void 0===i?void 0:i.split(","))&&void 0!==s?s:[];return A.length>0&&(A.forEach(n=>{const e=parseInt(n.split(";")[0].split("=")[1].substring(0,1)),t=JSON.parse(n.split(";")[1].split("=")[1]);c[`${t}Page`]=e}),c.total=parseInt(d)),{data:Object.assign(Object.assign({},u),c),error:null}}catch(n){if(se(n))return{data:{users:[]},error:n};throw n}}async getUserById(n){Ye(n);try{return await Ge(this.fetch,"GET",`${this.url}/admin/users/${n}`,{headers:this.headers,xform:Ke})}catch(n){if(se(n))return{data:{user:null},error:n};throw n}}async updateUserById(n,e){Ye(n);try{return await Ge(this.fetch,"PUT",`${this.url}/admin/users/${n}`,{body:e,headers:this.headers,xform:Ke})}catch(n){if(se(n))return{data:{user:null},error:n};throw n}}async deleteUser(n,e=!1){Ye(n);try{return await Ge(this.fetch,"DELETE",`${this.url}/admin/users/${n}`,{headers:this.headers,body:{should_soft_delete:e},xform:Ke})}catch(n){if(se(n))return{data:{user:null},error:n};throw n}}async _listFactors(n){Ye(n.userId);try{const{data:e,error:t}=await Ge(this.fetch,"GET",`${this.url}/admin/users/${n.userId}/factors`,{headers:this.headers,xform:n=>({data:{factors:n},error:null})});return{data:e,error:t}}catch(n){if(se(n))return{data:null,error:n};throw n}}async _deleteFactor(n){Ye(n.userId),Ye(n.id);try{return{data:await Ge(this.fetch,"DELETE",`${this.url}/admin/users/${n.userId}/factors/${n.id}`,{headers:this.headers}),error:null}}catch(n){if(se(n))return{data:null,error:n};throw n}}}const et={getItem:n=>Ie()?globalThis.localStorage.getItem(n):null,setItem:(n,e)=>{Ie()&&globalThis.localStorage.setItem(n,e)},removeItem:n=>{Ie()&&globalThis.localStorage.removeItem(n)}};function tt(n={}){return{getItem:e=>n[e]||null,setItem:(e,t)=>{n[e]=t},removeItem:e=>{delete n[e]}}}const rt=!!(globalThis&&Ie()&&globalThis.localStorage&&"true"===globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug"));class at extends Error{constructor(n){super(n),this.isAcquireTimeout=!0}}class ot extends at{}async function it(n,e,t){rt&&console.log("@supabase/gotrue-js: navigatorLock: acquire lock",n,e);const r=new globalThis.AbortController;return e>0&&setTimeout(()=>{r.abort(),rt&&console.log("@supabase/gotrue-js: navigatorLock acquire timed out",n)},e),await Promise.resolve().then(()=>globalThis.navigator.locks.request(n,0===e?{mode:"exclusive",ifAvailable:!0}:{mode:"exclusive",signal:r.signal},async r=>{if(!r){if(0===e)throw rt&&console.log("@supabase/gotrue-js: navigatorLock: not immediately available",n),new ot(`Acquiring an exclusive Navigator LockManager lock "${n}" immediately failed`);if(rt)try{const n=await globalThis.navigator.locks.query();console.log("@supabase/gotrue-js: Navigator LockManager state",JSON.stringify(n,null,"  "))}catch(n){console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state",n)}return console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"),await t()}rt&&console.log("@supabase/gotrue-js: navigatorLock: acquired",n,r.name);try{return await t()}finally{rt&&console.log("@supabase/gotrue-js: navigatorLock: released",n,r.name)}}))}!function(){if("object"!=typeof globalThis)try{Object.defineProperty(Object.prototype,"__magic__",{get:function(){return this},configurable:!0}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__}catch(n){"undefined"!=typeof self&&(self.globalThis=self)}}();const st={url:"http://localhost:9999",storageKey:"supabase.auth.token",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,headers:ee,flowType:"implicit",debug:!1,hasCustomAuthorizationHeader:!1};async function ct(n,e,t){return await t()}class lt{constructor(n){var e,t;this.memoryStorage=null,this.stateChangeEmitters=new Map,this.autoRefreshTicker=null,this.visibilityChangedCallback=null,this.refreshingDeferred=null,this.initializePromise=null,this.detectSessionInUrl=!0,this.hasCustomAuthorizationHeader=!1,this.suppressGetSessionWarning=!1,this.lockAcquired=!1,this.pendingInLock=[],this.broadcastChannel=null,this.logger=console.log,this.instanceID=lt.nextInstanceID,lt.nextInstanceID+=1,this.instanceID>0&&ze()&&console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");const r=Object.assign(Object.assign({},st),n);if(this.logDebugMessages=!!r.debug,"function"==typeof r.debug&&(this.logger=r.debug),this.persistSession=r.persistSession,this.storageKey=r.storageKey,this.autoRefreshToken=r.autoRefreshToken,this.admin=new nt({url:r.url,headers:r.headers,fetch:r.fetch}),this.url=r.url,this.headers=r.headers,this.fetch=_e(r.fetch),this.lock=r.lock||ct,this.detectSessionInUrl=r.detectSessionInUrl,this.flowType=r.flowType,this.hasCustomAuthorizationHeader=r.hasCustomAuthorizationHeader,r.lock?this.lock=r.lock:ze()&&(null===(e=null===globalThis||void 0===globalThis?void 0:globalThis.navigator)||void 0===e?void 0:e.locks)?this.lock=it:this.lock=ct,this.jwks={keys:[]},this.jwks_cached_at=Number.MIN_SAFE_INTEGER,this.mfa={verify:this._verify.bind(this),enroll:this._enroll.bind(this),unenroll:this._unenroll.bind(this),challenge:this._challenge.bind(this),listFactors:this._listFactors.bind(this),challengeAndVerify:this._challengeAndVerify.bind(this),getAuthenticatorAssuranceLevel:this._getAuthenticatorAssuranceLevel.bind(this)},this.persistSession?r.storage?this.storage=r.storage:Ie()?this.storage=et:(this.memoryStorage={},this.storage=tt(this.memoryStorage)):(this.memoryStorage={},this.storage=tt(this.memoryStorage)),ze()&&globalThis.BroadcastChannel&&this.persistSession&&this.storageKey){try{this.broadcastChannel=new globalThis.BroadcastChannel(this.storageKey)}catch(n){console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available",n)}null===(t=this.broadcastChannel)||void 0===t||t.addEventListener("message",async n=>{this._debug("received broadcast notification from other tab or client",n),await this._notifyAllSubscribers(n.data.event,n.data.session,!1)})}this.initialize()}_debug(...n){return this.logDebugMessages&&this.logger(`GoTrueClient@${this.instanceID} (${Jn}) ${(new Date).toISOString()}`,...n),this}async initialize(){return this.initializePromise||(this.initializePromise=(async()=>await this._acquireLock(-1,async()=>await this._initialize()))()),await this.initializePromise}async _initialize(){var n;try{const e=function(n){const e={},t=new URL(n);if(t.hash&&"#"===t.hash[0])try{new URLSearchParams(t.hash.substring(1)).forEach((n,t)=>{e[t]=n})}catch(n){}return t.searchParams.forEach((n,t)=>{e[t]=n}),e}(window.location.href);let t="none";if(this._isImplicitGrantCallback(e)?t="implicit":await this._isPKCECallback(e)&&(t="pkce"),ze()&&this.detectSessionInUrl&&"none"!==t){const{data:r,error:a}=await this._getSessionFromURL(e,t);if(a){if(this._debug("#_initialize()","error detecting session from URL",a),function(n){return se(n)&&"AuthImplicitGrantRedirectError"===n.name}(a)){const e=null===(n=a.details)||void 0===n?void 0:n.code;if("identity_already_exists"===e||"identity_not_found"===e||"single_identity_not_deletable"===e)return{error:a}}return await this._removeSession(),{error:a}}const{session:o,redirectType:i}=r;return this._debug("#_initialize()","detected session in URL",o,"redirect type",i),await this._saveSession(o),setTimeout(async()=>{"recovery"===i?await this._notifyAllSubscribers("PASSWORD_RECOVERY",o):await this._notifyAllSubscribers("SIGNED_IN",o)},0),{error:null}}return await this._recoverAndRefresh(),{error:null}}catch(n){return se(n)?{error:n}:{error:new le("Unexpected error during initialization",n)}}finally{await this._handleVisibilityChange(),this._debug("#_initialize()","end")}}async signInAnonymously(n){var e,t,r;try{const a=await Ge(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{data:null!==(t=null===(e=null==n?void 0:n.options)||void 0===e?void 0:e.data)&&void 0!==t?t:{},gotrue_meta_security:{captcha_token:null===(r=null==n?void 0:n.options)||void 0===r?void 0:r.captchaToken}},xform:He}),{data:o,error:i}=a;if(i||!o)return{data:{user:null,session:null},error:i};const s=o.session,c=o.user;return o.session&&(await this._saveSession(o.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:c,session:s},error:null}}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async signUp(n){var e,t,r;try{let a;if("email"in n){const{email:t,password:r,options:o}=n;let i=null,s=null;"pkce"===this.flowType&&([i,s]=await Me(this.storage,this.storageKey)),a=await Ge(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,redirectTo:null==o?void 0:o.emailRedirectTo,body:{email:t,password:r,data:null!==(e=null==o?void 0:o.data)&&void 0!==e?e:{},gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken},code_challenge:i,code_challenge_method:s},xform:He})}else{if(!("phone"in n))throw new pe("You must provide either an email or phone number and a password");{const{phone:e,password:o,options:i}=n;a=await Ge(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{phone:e,password:o,data:null!==(t=null==i?void 0:i.data)&&void 0!==t?t:{},channel:null!==(r=null==i?void 0:i.channel)&&void 0!==r?r:"sms",gotrue_meta_security:{captcha_token:null==i?void 0:i.captchaToken}},xform:He})}}const{data:o,error:i}=a;if(i||!o)return{data:{user:null,session:null},error:i};const s=o.session,c=o.user;return o.session&&(await this._saveSession(o.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:c,session:s},error:null}}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithPassword(n){try{let e;if("email"in n){const{email:t,password:r,options:a}=n;e=await Ge(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{email:t,password:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:Ve})}else{if(!("phone"in n))throw new pe("You must provide either an email or phone number and a password");{const{phone:t,password:r,options:a}=n;e=await Ge(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{phone:t,password:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:Ve})}}const{data:t,error:r}=e;return r?{data:{user:null,session:null},error:r}:t&&t.session&&t.user?(t.session&&(await this._saveSession(t.session),await this._notifyAllSubscribers("SIGNED_IN",t.session)),{data:Object.assign({user:t.user,session:t.session},t.weak_password?{weakPassword:t.weak_password}:null),error:r}):{data:{user:null,session:null},error:new Ae}}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithOAuth(n){var e,t,r,a;return await this._handleProviderSignIn(n.provider,{redirectTo:null===(e=n.options)||void 0===e?void 0:e.redirectTo,scopes:null===(t=n.options)||void 0===t?void 0:t.scopes,queryParams:null===(r=n.options)||void 0===r?void 0:r.queryParams,skipBrowserRedirect:null===(a=n.options)||void 0===a?void 0:a.skipBrowserRedirect})}async exchangeCodeForSession(n){return await this.initializePromise,this._acquireLock(-1,async()=>this._exchangeCodeForSession(n))}async signInWithWeb3(n){const{chain:e}=n;if("solana"===e)return await this.signInWithSolana(n);throw new Error(`@supabase/auth-js: Unsupported chain "${e}"`)}async signInWithSolana(n){var e,t,r,a,o,i,s,c,l,u,d,A;let p,f;if("message"in n)p=n.message,f=n.signature;else{const{chain:d,wallet:A,statement:h,options:g}=n;let m;if(ze())if("object"==typeof A)m=A;else{const n=window;if(!("solana"in n)||"object"!=typeof n.solana||!("signIn"in n.solana&&"function"==typeof n.solana.signIn||"signMessage"in n.solana&&"function"==typeof n.solana.signMessage))throw new Error("@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.");m=n.solana}else{if("object"!=typeof A||!(null==g?void 0:g.url))throw new Error("@supabase/auth-js: Both wallet and url must be specified in non-browser environments.");m=A}const v=new URL(null!==(e=null==g?void 0:g.url)&&void 0!==e?e:window.location.href);if("signIn"in m&&m.signIn){const n=await m.signIn(Object.assign(Object.assign(Object.assign({issuedAt:(new Date).toISOString()},null==g?void 0:g.signInWithSolana),{version:"1",domain:v.host,uri:v.href}),h?{statement:h}:null));let e;if(Array.isArray(n)&&n[0]&&"object"==typeof n[0])e=n[0];else{if(!(n&&"object"==typeof n&&"signedMessage"in n&&"signature"in n))throw new Error("@supabase/auth-js: Wallet method signIn() returned unrecognized value");e=n}if(!("signedMessage"in e&&"signature"in e&&("string"==typeof e.signedMessage||e.signedMessage instanceof Uint8Array)&&e.signature instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields");p="string"==typeof e.signedMessage?e.signedMessage:(new TextDecoder).decode(e.signedMessage),f=e.signature}else{if(!("signMessage"in m&&"function"==typeof m.signMessage&&"publicKey"in m&&"object"==typeof m&&m.publicKey&&"toBase58"in m.publicKey&&"function"==typeof m.publicKey.toBase58))throw new Error("@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API");p=[`${v.host} wants you to sign in with your Solana account:`,m.publicKey.toBase58(),...h?["",h,""]:[""],"Version: 1",`URI: ${v.href}`,`Issued At: ${null!==(r=null===(t=null==g?void 0:g.signInWithSolana)||void 0===t?void 0:t.issuedAt)&&void 0!==r?r:(new Date).toISOString()}`,...(null===(a=null==g?void 0:g.signInWithSolana)||void 0===a?void 0:a.notBefore)?[`Not Before: ${g.signInWithSolana.notBefore}`]:[],...(null===(o=null==g?void 0:g.signInWithSolana)||void 0===o?void 0:o.expirationTime)?[`Expiration Time: ${g.signInWithSolana.expirationTime}`]:[],...(null===(i=null==g?void 0:g.signInWithSolana)||void 0===i?void 0:i.chainId)?[`Chain ID: ${g.signInWithSolana.chainId}`]:[],...(null===(s=null==g?void 0:g.signInWithSolana)||void 0===s?void 0:s.nonce)?[`Nonce: ${g.signInWithSolana.nonce}`]:[],...(null===(c=null==g?void 0:g.signInWithSolana)||void 0===c?void 0:c.requestId)?[`Request ID: ${g.signInWithSolana.requestId}`]:[],...(null===(u=null===(l=null==g?void 0:g.signInWithSolana)||void 0===l?void 0:l.resources)||void 0===u?void 0:u.length)?["Resources",...g.signInWithSolana.resources.map(n=>`- ${n}`)]:[]].join("\n");const n=await m.signMessage((new TextEncoder).encode(p),"utf8");if(!(n&&n instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet signMessage() API returned an recognized value");f=n}}try{const{data:e,error:t}=await Ge(this.fetch,"POST",`${this.url}/token?grant_type=web3`,{headers:this.headers,body:Object.assign({chain:"solana",message:p,signature:Se(f)},(null===(d=n.options)||void 0===d?void 0:d.captchaToken)?{gotrue_meta_security:{captcha_token:null===(A=n.options)||void 0===A?void 0:A.captchaToken}}:null),xform:He});if(t)throw t;return e&&e.session&&e.user?(e.session&&(await this._saveSession(e.session),await this._notifyAllSubscribers("SIGNED_IN",e.session)),{data:Object.assign({},e),error:t}):{data:{user:null,session:null},error:new Ae}}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async _exchangeCodeForSession(n){const e=await Oe(this.storage,`${this.storageKey}-code-verifier`),[t,r]=(null!=e?e:"").split("/");try{const{data:e,error:a}=await Ge(this.fetch,"POST",`${this.url}/token?grant_type=pkce`,{headers:this.headers,body:{auth_code:n,code_verifier:t},xform:He});if(await Pe(this.storage,`${this.storageKey}-code-verifier`),a)throw a;return e&&e.session&&e.user?(e.session&&(await this._saveSession(e.session),await this._notifyAllSubscribers("SIGNED_IN",e.session)),{data:Object.assign(Object.assign({},e),{redirectType:null!=r?r:null}),error:a}):{data:{user:null,session:null,redirectType:null},error:new Ae}}catch(n){if(se(n))return{data:{user:null,session:null,redirectType:null},error:n};throw n}}async signInWithIdToken(n){try{const{options:e,provider:t,token:r,access_token:a,nonce:o}=n,i=await Ge(this.fetch,"POST",`${this.url}/token?grant_type=id_token`,{headers:this.headers,body:{provider:t,id_token:r,access_token:a,nonce:o,gotrue_meta_security:{captcha_token:null==e?void 0:e.captchaToken}},xform:He}),{data:s,error:c}=i;return c?{data:{user:null,session:null},error:c}:s&&s.session&&s.user?(s.session&&(await this._saveSession(s.session),await this._notifyAllSubscribers("SIGNED_IN",s.session)),{data:s,error:c}):{data:{user:null,session:null},error:new Ae}}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithOtp(n){var e,t,r,a,o;try{if("email"in n){const{email:r,options:a}=n;let o=null,i=null;"pkce"===this.flowType&&([o,i]=await Me(this.storage,this.storageKey));const{error:s}=await Ge(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{email:r,data:null!==(e=null==a?void 0:a.data)&&void 0!==e?e:{},create_user:null===(t=null==a?void 0:a.shouldCreateUser)||void 0===t||t,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken},code_challenge:o,code_challenge_method:i},redirectTo:null==a?void 0:a.emailRedirectTo});return{data:{user:null,session:null},error:s}}if("phone"in n){const{phone:e,options:t}=n,{data:i,error:s}=await Ge(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{phone:e,data:null!==(r=null==t?void 0:t.data)&&void 0!==r?r:{},create_user:null===(a=null==t?void 0:t.shouldCreateUser)||void 0===a||a,gotrue_meta_security:{captcha_token:null==t?void 0:t.captchaToken},channel:null!==(o=null==t?void 0:t.channel)&&void 0!==o?o:"sms"}});return{data:{user:null,session:null,messageId:null==i?void 0:i.message_id},error:s}}throw new pe("You must provide either an email or phone number.")}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async verifyOtp(n){var e,t;try{let r,a;"options"in n&&(r=null===(e=n.options)||void 0===e?void 0:e.redirectTo,a=null===(t=n.options)||void 0===t?void 0:t.captchaToken);const{data:o,error:i}=await Ge(this.fetch,"POST",`${this.url}/verify`,{headers:this.headers,body:Object.assign(Object.assign({},n),{gotrue_meta_security:{captcha_token:a}}),redirectTo:r,xform:He});if(i)throw i;if(!o)throw new Error("An error occurred on token verification.");const s=o.session,c=o.user;return(null==s?void 0:s.access_token)&&(await this._saveSession(s),await this._notifyAllSubscribers("recovery"==n.type?"PASSWORD_RECOVERY":"SIGNED_IN",s)),{data:{user:c,session:s},error:null}}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithSSO(n){var e,t,r;try{let a=null,o=null;return"pkce"===this.flowType&&([a,o]=await Me(this.storage,this.storageKey)),await Ge(this.fetch,"POST",`${this.url}/sso`,{body:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},"providerId"in n?{provider_id:n.providerId}:null),"domain"in n?{domain:n.domain}:null),{redirect_to:null!==(t=null===(e=n.options)||void 0===e?void 0:e.redirectTo)&&void 0!==t?t:void 0}),(null===(r=null==n?void 0:n.options)||void 0===r?void 0:r.captchaToken)?{gotrue_meta_security:{captcha_token:n.options.captchaToken}}:null),{skip_http_redirect:!0,code_challenge:a,code_challenge_method:o}),headers:this.headers,xform:Qe})}catch(n){if(se(n))return{data:null,error:n};throw n}}async reauthenticate(){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._reauthenticate())}async _reauthenticate(){try{return await this._useSession(async n=>{const{data:{session:e},error:t}=n;if(t)throw t;if(!e)throw new de;const{error:r}=await Ge(this.fetch,"GET",`${this.url}/reauthenticate`,{headers:this.headers,jwt:e.access_token});return{data:{user:null,session:null},error:r}})}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async resend(n){try{const e=`${this.url}/resend`;if("email"in n){const{email:t,type:r,options:a}=n,{error:o}=await Ge(this.fetch,"POST",e,{headers:this.headers,body:{email:t,type:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},redirectTo:null==a?void 0:a.emailRedirectTo});return{data:{user:null,session:null},error:o}}if("phone"in n){const{phone:t,type:r,options:a}=n,{data:o,error:i}=await Ge(this.fetch,"POST",e,{headers:this.headers,body:{phone:t,type:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}}});return{data:{user:null,session:null,messageId:null==o?void 0:o.message_id},error:i}}throw new pe("You must provide either an email or phone number and a type")}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async getSession(){return await this.initializePromise,await this._acquireLock(-1,async()=>this._useSession(async n=>n))}async _acquireLock(n,e){this._debug("#_acquireLock","begin",n);try{if(this.lockAcquired){const n=this.pendingInLock.length?this.pendingInLock[this.pendingInLock.length-1]:Promise.resolve(),t=(async()=>(await n,await e()))();return this.pendingInLock.push((async()=>{try{await t}catch(n){}})()),t}return await this.lock(`lock:${this.storageKey}`,n,async()=>{this._debug("#_acquireLock","lock acquired for storage key",this.storageKey);try{this.lockAcquired=!0;const n=e();for(this.pendingInLock.push((async()=>{try{await n}catch(n){}})()),await n;this.pendingInLock.length;){const n=[...this.pendingInLock];await Promise.all(n),this.pendingInLock.splice(0,n.length)}return await n}finally{this._debug("#_acquireLock","lock released for storage key",this.storageKey),this.lockAcquired=!1}})}finally{this._debug("#_acquireLock","end")}}async _useSession(n){this._debug("#_useSession","begin");try{const e=await this.__loadSession();return await n(e)}finally{this._debug("#_useSession","end")}}async __loadSession(){this._debug("#__loadSession()","begin"),this.lockAcquired||this._debug("#__loadSession()","used outside of an acquired lock!",(new Error).stack);try{let n=null;const e=await Oe(this.storage,this.storageKey);if(this._debug("#getSession()","session from storage",e),null!==e&&(this._isValidSession(e)?n=e:(this._debug("#getSession()","session from storage is not valid"),await this._removeSession())),!n)return{data:{session:null},error:null};const t=!!n.expires_at&&1e3*n.expires_at-Date.now()<9e4;if(this._debug("#__loadSession()",`session has${t?"":" not"} expired`,"expires_at",n.expires_at),!t){if(this.storage.isServer){let e=this.suppressGetSessionWarning;n=new Proxy(n,{get:(n,t,r)=>(e||"user"!==t||(console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."),e=!0,this.suppressGetSessionWarning=!0),Reflect.get(n,t,r))})}return{data:{session:n},error:null}}const{session:r,error:a}=await this._callRefreshToken(n.refresh_token);return a?{data:{session:null},error:a}:{data:{session:r},error:null}}finally{this._debug("#__loadSession()","end")}}async getUser(n){return n?await this._getUser(n):(await this.initializePromise,await this._acquireLock(-1,async()=>await this._getUser()))}async _getUser(n){try{return n?await Ge(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:n,xform:Ke}):await this._useSession(async n=>{var e,t,r;const{data:a,error:o}=n;if(o)throw o;return(null===(e=a.session)||void 0===e?void 0:e.access_token)||this.hasCustomAuthorizationHeader?await Ge(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:null!==(r=null===(t=a.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0,xform:Ke}):{data:{user:null},error:new de}})}catch(n){if(se(n))return function(n){return se(n)&&"AuthSessionMissingError"===n.name}(n)&&(await this._removeSession(),await Pe(this.storage,`${this.storageKey}-code-verifier`)),{data:{user:null},error:n};throw n}}async updateUser(n,e={}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._updateUser(n,e))}async _updateUser(n,e={}){try{return await this._useSession(async t=>{const{data:r,error:a}=t;if(a)throw a;if(!r.session)throw new de;const o=r.session;let i=null,s=null;"pkce"===this.flowType&&null!=n.email&&([i,s]=await Me(this.storage,this.storageKey));const{data:c,error:l}=await Ge(this.fetch,"PUT",`${this.url}/user`,{headers:this.headers,redirectTo:null==e?void 0:e.emailRedirectTo,body:Object.assign(Object.assign({},n),{code_challenge:i,code_challenge_method:s}),jwt:o.access_token,xform:Ke});if(l)throw l;return o.user=c.user,await this._saveSession(o),await this._notifyAllSubscribers("USER_UPDATED",o),{data:{user:o.user},error:null}})}catch(n){if(se(n))return{data:{user:null},error:n};throw n}}async setSession(n){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._setSession(n))}async _setSession(n){try{if(!n.access_token||!n.refresh_token)throw new de;const e=Date.now()/1e3;let t=e,r=!0,a=null;const{payload:o}=Le(n.access_token);if(o.exp&&(t=o.exp,r=t<=e),r){const{session:e,error:t}=await this._callRefreshToken(n.refresh_token);if(t)return{data:{user:null,session:null},error:t};if(!e)return{data:{user:null,session:null},error:null};a=e}else{const{data:r,error:o}=await this._getUser(n.access_token);if(o)throw o;a={access_token:n.access_token,refresh_token:n.refresh_token,user:r.user,token_type:"bearer",expires_in:t-e,expires_at:t},await this._saveSession(a),await this._notifyAllSubscribers("SIGNED_IN",a)}return{data:{user:a.user,session:a},error:null}}catch(n){if(se(n))return{data:{session:null,user:null},error:n};throw n}}async refreshSession(n){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._refreshSession(n))}async _refreshSession(n){try{return await this._useSession(async e=>{var t;if(!n){const{data:r,error:a}=e;if(a)throw a;n=null!==(t=r.session)&&void 0!==t?t:void 0}if(!(null==n?void 0:n.refresh_token))throw new de;const{session:r,error:a}=await this._callRefreshToken(n.refresh_token);return a?{data:{user:null,session:null},error:a}:r?{data:{user:r.user,session:r},error:null}:{data:{user:null,session:null},error:null}})}catch(n){if(se(n))return{data:{user:null,session:null},error:n};throw n}}async _getSessionFromURL(n,e){try{if(!ze())throw new fe("No browser detected.");if(n.error||n.error_description||n.error_code)throw new fe(n.error_description||"Error in URL with unspecified error_description",{error:n.error||"unspecified_error",code:n.error_code||"unspecified_code"});switch(e){case"implicit":if("pkce"===this.flowType)throw new he("Not a valid PKCE flow url.");break;case"pkce":if("implicit"===this.flowType)throw new fe("Not a valid implicit grant flow url.")}if("pkce"===e){if(this._debug("#_initialize()","begin","is PKCE flow",!0),!n.code)throw new he("No code detected.");const{data:e,error:t}=await this._exchangeCodeForSession(n.code);if(t)throw t;const r=new URL(window.location.href);return r.searchParams.delete("code"),window.history.replaceState(window.history.state,"",r.toString()),{data:{session:e.session,redirectType:null},error:null}}const{provider_token:t,provider_refresh_token:r,access_token:a,refresh_token:o,expires_in:i,expires_at:s,token_type:c}=n;if(!(a&&i&&o&&c))throw new fe("No session defined in URL");const l=Math.round(Date.now()/1e3),u=parseInt(i);let d=l+u;s&&(d=parseInt(s));const A=d-l;1e3*A<=ne&&console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${A}s, should have been closer to ${u}s`);const p=d-u;l-p>=120?console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale",p,d,l):l-p<0&&console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew",p,d,l);const{data:f,error:h}=await this._getUser(a);if(h)throw h;const g={provider_token:t,provider_refresh_token:r,access_token:a,expires_in:u,expires_at:d,refresh_token:o,token_type:c,user:f.user};return window.location.hash="",this._debug("#_getSessionFromURL()","clearing window.location.hash"),{data:{session:g,redirectType:n.type},error:null}}catch(n){if(se(n))return{data:{session:null,redirectType:null},error:n};throw n}}_isImplicitGrantCallback(n){return Boolean(n.access_token||n.error_description)}async _isPKCECallback(n){const e=await Oe(this.storage,`${this.storageKey}-code-verifier`);return!(!n.code||!e)}async signOut(n={scope:"global"}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._signOut(n))}async _signOut({scope:n}={scope:"global"}){return await this._useSession(async e=>{var t;const{data:r,error:a}=e;if(a)return{error:a};const o=null===(t=r.session)||void 0===t?void 0:t.access_token;if(o){const{error:e}=await this.admin.signOut(o,n);if(e&&(!function(n){return se(n)&&"AuthApiError"===n.name}(e)||404!==e.status&&401!==e.status&&403!==e.status))return{error:e}}return"others"!==n&&(await this._removeSession(),await Pe(this.storage,`${this.storageKey}-code-verifier`)),{error:null}})}onAuthStateChange(n){const e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){const e=16*Math.random()|0;return("x"==n?e:3&e|8).toString(16)}),t={id:e,callback:n,unsubscribe:()=>{this._debug("#unsubscribe()","state change callback with id removed",e),this.stateChangeEmitters.delete(e)}};return this._debug("#onAuthStateChange()","registered callback with id",e),this.stateChangeEmitters.set(e,t),(async()=>{await this.initializePromise,await this._acquireLock(-1,async()=>{this._emitInitialSession(e)})})(),{data:{subscription:t}}}async _emitInitialSession(n){return await this._useSession(async e=>{var t,r;try{const{data:{session:r},error:a}=e;if(a)throw a;await(null===(t=this.stateChangeEmitters.get(n))||void 0===t?void 0:t.callback("INITIAL_SESSION",r)),this._debug("INITIAL_SESSION","callback id",n,"session",r)}catch(e){await(null===(r=this.stateChangeEmitters.get(n))||void 0===r?void 0:r.callback("INITIAL_SESSION",null)),this._debug("INITIAL_SESSION","callback id",n,"error",e),console.error(e)}})}async resetPasswordForEmail(n,e={}){let t=null,r=null;"pkce"===this.flowType&&([t,r]=await Me(this.storage,this.storageKey,!0));try{return await Ge(this.fetch,"POST",`${this.url}/recover`,{body:{email:n,code_challenge:t,code_challenge_method:r,gotrue_meta_security:{captcha_token:e.captchaToken}},headers:this.headers,redirectTo:e.redirectTo})}catch(n){if(se(n))return{data:null,error:n};throw n}}async getUserIdentities(){var n;try{const{data:e,error:t}=await this.getUser();if(t)throw t;return{data:{identities:null!==(n=e.user.identities)&&void 0!==n?n:[]},error:null}}catch(n){if(se(n))return{data:null,error:n};throw n}}async linkIdentity(n){var e;try{const{data:t,error:r}=await this._useSession(async e=>{var t,r,a,o,i;const{data:s,error:c}=e;if(c)throw c;const l=await this._getUrlForProvider(`${this.url}/user/identities/authorize`,n.provider,{redirectTo:null===(t=n.options)||void 0===t?void 0:t.redirectTo,scopes:null===(r=n.options)||void 0===r?void 0:r.scopes,queryParams:null===(a=n.options)||void 0===a?void 0:a.queryParams,skipBrowserRedirect:!0});return await Ge(this.fetch,"GET",l,{headers:this.headers,jwt:null!==(i=null===(o=s.session)||void 0===o?void 0:o.access_token)&&void 0!==i?i:void 0})});if(r)throw r;return ze()&&!(null===(e=n.options)||void 0===e?void 0:e.skipBrowserRedirect)&&window.location.assign(null==t?void 0:t.url),{data:{provider:n.provider,url:null==t?void 0:t.url},error:null}}catch(e){if(se(e))return{data:{provider:n.provider,url:null},error:e};throw e}}async unlinkIdentity(n){try{return await this._useSession(async e=>{var t,r;const{data:a,error:o}=e;if(o)throw o;return await Ge(this.fetch,"DELETE",`${this.url}/user/identities/${n.identity_id}`,{headers:this.headers,jwt:null!==(r=null===(t=a.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0})})}catch(n){if(se(n))return{data:null,error:n};throw n}}async _refreshAccessToken(n){const e=`#_refreshAccessToken(${n.substring(0,5)}...)`;this._debug(e,"begin");try{const a=Date.now();return await(t=async t=>(t>0&&await async function(n){return await new Promise(e=>{setTimeout(()=>e(null),n)})}(200*Math.pow(2,t-1)),this._debug(e,"refreshing attempt",t),await Ge(this.fetch,"POST",`${this.url}/token?grant_type=refresh_token`,{body:{refresh_token:n},headers:this.headers,xform:He})),r=(n,e)=>{const t=200*Math.pow(2,n);return e&&me(e)&&Date.now()+t-a<ne},new Promise((n,e)=>{(async()=>{for(let a=0;a<1/0;a++)try{const e=await t(a);if(!r(a,null))return void n(e)}catch(n){if(!r(a,n))return void e(n)}})()}))}catch(n){if(this._debug(e,"error",n),se(n))return{data:{session:null,user:null},error:n};throw n}finally{this._debug(e,"end")}var t,r}_isValidSession(n){return"object"==typeof n&&null!==n&&"access_token"in n&&"refresh_token"in n&&"expires_at"in n}async _handleProviderSignIn(n,e){const t=await this._getUrlForProvider(`${this.url}/authorize`,n,{redirectTo:e.redirectTo,scopes:e.scopes,queryParams:e.queryParams});return this._debug("#_handleProviderSignIn()","provider",n,"options",e,"url",t),ze()&&!e.skipBrowserRedirect&&window.location.assign(t),{data:{provider:n,url:t},error:null}}async _recoverAndRefresh(){var n;const e="#_recoverAndRefresh()";this._debug(e,"begin");try{const t=await Oe(this.storage,this.storageKey);if(this._debug(e,"session from storage",t),!this._isValidSession(t))return this._debug(e,"session is not valid"),void(null!==t&&await this._removeSession());const r=1e3*(null!==(n=t.expires_at)&&void 0!==n?n:1/0)-Date.now()<9e4;if(this._debug(e,`session has${r?"":" not"} expired with margin of 90000s`),r){if(this.autoRefreshToken&&t.refresh_token){const{error:n}=await this._callRefreshToken(t.refresh_token);n&&(console.error(n),me(n)||(this._debug(e,"refresh failed with a non-retryable error, removing the session",n),await this._removeSession()))}}else await this._notifyAllSubscribers("SIGNED_IN",t)}catch(n){return this._debug(e,"error",n),void console.error(n)}finally{this._debug(e,"end")}}async _callRefreshToken(n){var e,t;if(!n)throw new de;if(this.refreshingDeferred)return this.refreshingDeferred.promise;const r=`#_callRefreshToken(${n.substring(0,5)}...)`;this._debug(r,"begin");try{this.refreshingDeferred=new De;const{data:e,error:t}=await this._refreshAccessToken(n);if(t)throw t;if(!e.session)throw new de;await this._saveSession(e.session),await this._notifyAllSubscribers("TOKEN_REFRESHED",e.session);const r={session:e.session,error:null};return this.refreshingDeferred.resolve(r),r}catch(n){if(this._debug(r,"error",n),se(n)){const t={session:null,error:n};return me(n)||await this._removeSession(),null===(e=this.refreshingDeferred)||void 0===e||e.resolve(t),t}throw null===(t=this.refreshingDeferred)||void 0===t||t.reject(n),n}finally{this.refreshingDeferred=null,this._debug(r,"end")}}async _notifyAllSubscribers(n,e,t=!0){const r=`#_notifyAllSubscribers(${n})`;this._debug(r,"begin",e,`broadcast = ${t}`);try{this.broadcastChannel&&t&&this.broadcastChannel.postMessage({event:n,session:e});const r=[],a=Array.from(this.stateChangeEmitters.values()).map(async t=>{try{await t.callback(n,e)}catch(n){r.push(n)}});if(await Promise.all(a),r.length>0){for(let n=0;n<r.length;n+=1)console.error(r[n]);throw r[0]}}finally{this._debug(r,"end")}}async _saveSession(n){this._debug("#_saveSession()",n),this.suppressGetSessionWarning=!0,await Te(this.storage,this.storageKey,n)}async _removeSession(){this._debug("#_removeSession()"),await Pe(this.storage,this.storageKey),await this._notifyAllSubscribers("SIGNED_OUT",null)}_removeVisibilityChangedCallback(){this._debug("#_removeVisibilityChangedCallback()");const n=this.visibilityChangedCallback;this.visibilityChangedCallback=null;try{n&&ze()&&(null===window||void 0===window?void 0:window.removeEventListener)&&window.removeEventListener("visibilitychange",n)}catch(n){console.error("removing visibilitychange callback failed",n)}}async _startAutoRefresh(){await this._stopAutoRefresh(),this._debug("#_startAutoRefresh()");const n=setInterval(()=>this._autoRefreshTokenTick(),ne);this.autoRefreshTicker=n,n&&"object"==typeof n&&"function"==typeof n.unref?n.unref():"undefined"!=typeof Deno&&"function"==typeof Deno.unrefTimer&&Deno.unrefTimer(n),setTimeout(async()=>{await this.initializePromise,await this._autoRefreshTokenTick()},0)}async _stopAutoRefresh(){this._debug("#_stopAutoRefresh()");const n=this.autoRefreshTicker;this.autoRefreshTicker=null,n&&clearInterval(n)}async startAutoRefresh(){this._removeVisibilityChangedCallback(),await this._startAutoRefresh()}async stopAutoRefresh(){this._removeVisibilityChangedCallback(),await this._stopAutoRefresh()}async _autoRefreshTokenTick(){this._debug("#_autoRefreshTokenTick()","begin");try{await this._acquireLock(0,async()=>{try{const n=Date.now();try{return await this._useSession(async e=>{const{data:{session:t}}=e;if(!t||!t.refresh_token||!t.expires_at)return void this._debug("#_autoRefreshTokenTick()","no session");const r=Math.floor((1e3*t.expires_at-n)/ne);this._debug("#_autoRefreshTokenTick()",`access token expires in ${r} ticks, a tick lasts 30000ms, refresh threshold is 3 ticks`),r<=3&&await this._callRefreshToken(t.refresh_token)})}catch(n){console.error("Auto refresh tick failed with error. This is likely a transient error.",n)}}finally{this._debug("#_autoRefreshTokenTick()","end")}})}catch(n){if(!(n.isAcquireTimeout||n instanceof at))throw n;this._debug("auto refresh token tick lock not available")}}async _handleVisibilityChange(){if(this._debug("#_handleVisibilityChange()"),!ze()||!(null===window||void 0===window?void 0:window.addEventListener))return this.autoRefreshToken&&this.startAutoRefresh(),!1;try{this.visibilityChangedCallback=async()=>await this._onVisibilityChanged(!1),null===window||void 0===window||window.addEventListener("visibilitychange",this.visibilityChangedCallback),await this._onVisibilityChanged(!0)}catch(n){console.error("_handleVisibilityChange",n)}}async _onVisibilityChanged(n){const e=`#_onVisibilityChanged(${n})`;this._debug(e,"visibilityState",document.visibilityState),"visible"===document.visibilityState?(this.autoRefreshToken&&this._startAutoRefresh(),n||(await this.initializePromise,await this._acquireLock(-1,async()=>{"visible"===document.visibilityState?await this._recoverAndRefresh():this._debug(e,"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting")}))):"hidden"===document.visibilityState&&this.autoRefreshToken&&this._stopAutoRefresh()}async _getUrlForProvider(n,e,t){const r=[`provider=${encodeURIComponent(e)}`];if((null==t?void 0:t.redirectTo)&&r.push(`redirect_to=${encodeURIComponent(t.redirectTo)}`),(null==t?void 0:t.scopes)&&r.push(`scopes=${encodeURIComponent(t.scopes)}`),"pkce"===this.flowType){const[n,e]=await Me(this.storage,this.storageKey),t=new URLSearchParams({code_challenge:`${encodeURIComponent(n)}`,code_challenge_method:`${encodeURIComponent(e)}`});r.push(t.toString())}if(null==t?void 0:t.queryParams){const n=new URLSearchParams(t.queryParams);r.push(n.toString())}return(null==t?void 0:t.skipBrowserRedirect)&&r.push(`skip_http_redirect=${t.skipBrowserRedirect}`),`${n}?${r.join("&")}`}async _unenroll(n){try{return await this._useSession(async e=>{var t;const{data:r,error:a}=e;return a?{data:null,error:a}:await Ge(this.fetch,"DELETE",`${this.url}/factors/${n.factorId}`,{headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(n){if(se(n))return{data:null,error:n};throw n}}async _enroll(n){try{return await this._useSession(async e=>{var t,r;const{data:a,error:o}=e;if(o)return{data:null,error:o};const i=Object.assign({friendly_name:n.friendlyName,factor_type:n.factorType},"phone"===n.factorType?{phone:n.phone}:{issuer:n.issuer}),{data:s,error:c}=await Ge(this.fetch,"POST",`${this.url}/factors`,{body:i,headers:this.headers,jwt:null===(t=null==a?void 0:a.session)||void 0===t?void 0:t.access_token});return c?{data:null,error:c}:("totp"===n.factorType&&(null===(r=null==s?void 0:s.totp)||void 0===r?void 0:r.qr_code)&&(s.totp.qr_code=`data:image/svg+xml;utf-8,${s.totp.qr_code}`),{data:s,error:null})})}catch(n){if(se(n))return{data:null,error:n};throw n}}async _verify(n){return this._acquireLock(-1,async()=>{try{return await this._useSession(async e=>{var t;const{data:r,error:a}=e;if(a)return{data:null,error:a};const{data:o,error:i}=await Ge(this.fetch,"POST",`${this.url}/factors/${n.factorId}/verify`,{body:{code:n.code,challenge_id:n.challengeId},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token});return i?{data:null,error:i}:(await this._saveSession(Object.assign({expires_at:Math.round(Date.now()/1e3)+o.expires_in},o)),await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED",o),{data:o,error:i})})}catch(n){if(se(n))return{data:null,error:n};throw n}})}async _challenge(n){return this._acquireLock(-1,async()=>{try{return await this._useSession(async e=>{var t;const{data:r,error:a}=e;return a?{data:null,error:a}:await Ge(this.fetch,"POST",`${this.url}/factors/${n.factorId}/challenge`,{body:{channel:n.channel},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(n){if(se(n))return{data:null,error:n};throw n}})}async _challengeAndVerify(n){const{data:e,error:t}=await this._challenge({factorId:n.factorId});return t?{data:null,error:t}:await this._verify({factorId:n.factorId,challengeId:e.id,code:n.code})}async _listFactors(){const{data:{user:n},error:e}=await this.getUser();if(e)return{data:null,error:e};const t=(null==n?void 0:n.factors)||[],r=t.filter(n=>"totp"===n.factor_type&&"verified"===n.status),a=t.filter(n=>"phone"===n.factor_type&&"verified"===n.status);return{data:{all:t,totp:r,phone:a},error:null}}async _getAuthenticatorAssuranceLevel(){return this._acquireLock(-1,async()=>await this._useSession(async n=>{var e,t;const{data:{session:r},error:a}=n;if(a)return{data:null,error:a};if(!r)return{data:{currentLevel:null,nextLevel:null,currentAuthenticationMethods:[]},error:null};const{payload:o}=Le(r.access_token);let i=null;o.aal&&(i=o.aal);let s=i;return(null!==(t=null===(e=r.user.factors)||void 0===e?void 0:e.filter(n=>"verified"===n.status))&&void 0!==t?t:[]).length>0&&(s="aal2"),{data:{currentLevel:i,nextLevel:s,currentAuthenticationMethods:o.amr||[]},error:null}}))}async fetchJwk(n,e={keys:[]}){let t=e.keys.find(e=>e.kid===n);if(t)return t;if(t=this.jwks.keys.find(e=>e.kid===n),t&&this.jwks_cached_at+6e5>Date.now())return t;const{data:r,error:a}=await Ge(this.fetch,"GET",`${this.url}/.well-known/jwks.json`,{headers:this.headers});if(a)throw a;if(!r.keys||0===r.keys.length)throw new be("JWKS is empty");if(this.jwks=r,this.jwks_cached_at=Date.now(),t=r.keys.find(e=>e.kid===n),!t)throw new be("No matching signing key found in JWKS");return t}async getClaims(n,e={keys:[]}){try{let t=n;if(!t){const{data:n,error:e}=await this.getSession();if(e||!n.session)return{data:null,error:e};t=n.session.access_token}const{header:r,payload:a,signature:o,raw:{header:i,payload:s}}=Le(t);if(function(n){if(!n)throw new Error("Missing exp claim");if(n<=Math.floor(Date.now()/1e3))throw new Error("JWT has expired")}(a.exp),!r.kid||"HS256"===r.alg||!("crypto"in globalThis)||!("subtle"in globalThis.crypto)){const{error:n}=await this.getUser(t);if(n)throw n;return{data:{claims:a,header:r,signature:o},error:null}}const c=function(n){switch(n){case"RS256":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"ES256":return{name:"ECDSA",namedCurve:"P-256",hash:{name:"SHA-256"}};default:throw new Error("Invalid alg claim")}}(r.alg),l=await this.fetchJwk(r.kid,e),u=await crypto.subtle.importKey("jwk",l,c,!0,["verify"]);if(!await crypto.subtle.verify(c,u,o,function(n){const e=[];return function(n,e){for(let t=0;t<n.length;t+=1){let r=n.charCodeAt(t);if(r>55295&&r<=56319){const e=1024*(r-55296)&65535;r=65536+(n.charCodeAt(t+1)-56320&65535|e),t+=1}we(r,e)}}(n,n=>e.push(n)),new Uint8Array(e)}(`${i}.${s}`)))throw new be("Invalid JWT signature");return{data:{claims:a,header:r,signature:o},error:null}}catch(n){if(se(n))return{data:null,error:n};throw n}}}lt.nextInstanceID=0;const ut=lt;class dt extends ut{constructor(n){super(n)}}class At{constructor(n,e,t){var r,a,o;if(this.supabaseUrl=n,this.supabaseKey=e,!n)throw new Error("supabaseUrl is required.");if(!e)throw new Error("supabaseKey is required.");const i=(s=n).endsWith("/")?s:s+"/";var s;const c=new URL(i);this.realtimeUrl=new URL("realtime/v1",c),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",c),this.storageUrl=new URL("storage/v1",c),this.functionsUrl=new URL("functions/v1",c);const l=`sb-${c.hostname.split(".")[0]}-auth-token`,u=function(n,e){var t,r;const{db:a,auth:o,realtime:i,global:s}=n,{db:c,auth:l,realtime:u,global:d}=e,A={db:Object.assign(Object.assign({},c),a),auth:Object.assign(Object.assign({},l),o),realtime:Object.assign(Object.assign({},u),i),global:Object.assign(Object.assign(Object.assign({},d),s),{headers:Object.assign(Object.assign({},null!==(t=null==d?void 0:d.headers)&&void 0!==t?t:{}),null!==(r=null==s?void 0:s.headers)&&void 0!==r?r:{})}),accessToken:()=>{return n=this,e=void 0,r=function*(){return""},new((t=void 0)||(t=Promise))(function(a,o){function i(n){try{c(r.next(n))}catch(n){o(n)}}function s(n){try{c(r.throw(n))}catch(n){o(n)}}function c(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(i,s)}c((r=r.apply(n,e||[])).next())});var n,e,t,r}};return n.accessToken?A.accessToken=n.accessToken:delete A.accessToken,A}(null!=t?t:{},{db:Hn,realtime:Kn,auth:Object.assign(Object.assign({},Vn),{storageKey:l}),global:Gn});this.storageKey=null!==(r=u.auth.storageKey)&&void 0!==r?r:"",this.headers=null!==(a=u.global.headers)&&void 0!==a?a:{},u.accessToken?(this.accessToken=u.accessToken,this.auth=new Proxy({},{get:(n,e)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(e)} is not possible`)}})):this.auth=this._initSupabaseAuthClient(null!==(o=u.auth)&&void 0!==o?o:{},this.headers,u.global.fetch),this.fetch=Xn(e,this._getAccessToken.bind(this),u.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},u.realtime)),this.rest=new Y(new URL("rest/v1",c).href,{headers:this.headers,schema:u.db.schema,fetch:this.fetch}),u.accessToken||this._listenForAuthEvents()}get functions(){return new F(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}get storage(){return new $n(this.storageUrl.href,this.headers,this.fetch)}from(n){return this.rest.from(n)}schema(n){return this.rest.schema(n)}rpc(n,e={},t={}){return this.rest.rpc(n,e,t)}channel(n,e={config:{}}){return this.realtime.channel(n,e)}getChannels(){return this.realtime.getChannels()}removeChannel(n){return this.realtime.removeChannel(n)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var n,e,t,r,a,o;return t=this,r=void 0,o=function*(){if(this.accessToken)return yield this.accessToken();const{data:t}=yield this.auth.getSession();return null!==(e=null===(n=t.session)||void 0===n?void 0:n.access_token)&&void 0!==e?e:null},new((a=void 0)||(a=Promise))(function(n,e){function i(n){try{c(o.next(n))}catch(n){e(n)}}function s(n){try{c(o.throw(n))}catch(n){e(n)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a(function(n){n(t)})).then(i,s)}c((o=o.apply(t,r||[])).next())})}_initSupabaseAuthClient({autoRefreshToken:n,persistSession:e,detectSessionInUrl:t,storage:r,storageKey:a,flowType:o,lock:i,debug:s},c,l){const u={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new dt({url:this.authUrl.href,headers:Object.assign(Object.assign({},u),c),storageKey:a,autoRefreshToken:n,persistSession:e,detectSessionInUrl:t,storage:r,flowType:o,lock:i,debug:s,fetch:l,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(n){return new Bn(this.realtimeUrl.href,Object.assign(Object.assign({},n),{params:Object.assign({apikey:this.supabaseKey},null==n?void 0:n.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((n,e)=>{this._handleTokenChanged(n,"CLIENT",null==e?void 0:e.access_token)})}_handleTokenChanged(n,e,t){"TOKEN_REFRESHED"!==n&&"SIGNED_IN"!==n||this.changedAccessToken===t?"SIGNED_OUT"===n&&(this.realtime.setAuth(),"STORAGE"==e&&this.auth.signOut(),this.changedAccessToken=void 0):this.changedAccessToken=t}}function pt(n){return pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},pt(n)}function ft(n,e,t){return(e=function(n){var e=function(n){if("object"!=pt(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=pt(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==pt(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function ht(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return gt(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(gt(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,gt(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,gt(d,"constructor",l),gt(l,"constructor",c),c.displayName="GeneratorFunction",gt(l,a,"GeneratorFunction"),gt(d),gt(d,a,"Generator"),gt(d,r,function(){return this}),gt(d,"toString",function(){return"[object Generator]"}),(ht=function(){return{w:o,m:A}})()}function gt(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}gt=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){gt(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},gt(n,e,t,r)}function mt(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function vt(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){mt(o,r,a,i,s,"next",n)}function s(n){mt(o,r,a,i,s,"throw",n)}i(void 0)})}}var bt=((n,e,t)=>new At("https://tpjnyiyvpyzzbzhajbjh.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRwam55aXl2cHl6emJ6aGFqYmpoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE2NDA1NTQsImV4cCI6MjA2NzIxNjU1NH0.cflFdHytlTUA_H_AP7E3Kry9-S-xw45pIRoJQtfk4AE",t))(0,0,{auth:{storage:{getItem:function(n){return vt(ht().m(function e(){var t;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,chrome.storage.local.get(n);case 1:return t=e.v,e.a(2,t[n]||null)}},e)}))()},setItem:function(n,e){return vt(ht().m(function t(){return ht().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,chrome.storage.local.set(ft({},n,e));case 1:return t.a(2)}},t)}))()},removeItem:function(n){return vt(ht().m(function e(){return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,chrome.storage.local.remove(n);case 1:return e.a(2)}},e)}))()}},autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0}});function Ct(n){return Ct="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ct(n)}function yt(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Et(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?yt(Object(t),!0).forEach(function(e){Bt(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):yt(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Bt(n,e,t){return(e=_t(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function xt(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return kt(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(kt(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,kt(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,kt(d,"constructor",l),kt(l,"constructor",c),c.displayName="GeneratorFunction",kt(l,a,"GeneratorFunction"),kt(d),kt(d,a,"Generator"),kt(d,r,function(){return this}),kt(d,"toString",function(){return"[object Generator]"}),(xt=function(){return{w:o,m:A}})()}function kt(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}kt=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){kt(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},kt(n,e,t,r)}function wt(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||jt(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function jt(n,e){if(n){if("string"==typeof n)return St(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?St(n,e):void 0}}function St(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function zt(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Nt(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){zt(o,r,a,i,s,"next",n)}function s(n){zt(o,r,a,i,s,"throw",n)}i(void 0)})}}function It(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,_t(r.key),r)}}function _t(n){var e=function(n){if("object"!=Ct(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Ct(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Ct(e)?e:e+""}var Tt=new(function(){return n=function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)},e=[{key:"getData",value:(R=Nt(xt().m(function n(){var e,t,r,a,o,i,s,c,l,u,d,A,p,f,h=this;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(e=n.v,t=e.data,!e.error&&t.session){n.n=2;break}return n.a(2,this.getDefaultData());case 2:return r=t.session.user,console.log("Fetching data for user:",r.id),n.n=3,Promise.all([bt.from("links").select("*").eq("user_id",r.id),bt.from("collections").select("*").eq("user_id",r.id)]);case 3:return a=n.v,o=wt(a,2),i=o[0],s=o[1],i.error&&console.error("Error fetching links:",i.error),s.error&&console.error("Error fetching collections:",s.error),c=(i.data||[]).map(function(n){return console.log("Storage: getData highlights for link",n.id,n.highlights),{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:h.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain}}),l=(s.data||[]).map(function(n){return{id:n.id,name:n.name,description:n.description,color:n.color,createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at)}}),d=c,A=l,n.n=4,this.getSmartCollections();case 4:return p=n.v,f=this.getDefaultCategories(),u={links:d,collections:A,smartCollections:p,categories:f,settings:{defaultCategory:"general",autoSummarize:!0,enableSmartCollections:!0}},console.log("Data fetched from Supabase:",u),n.a(2,u)}},n,this)})),function(){return R.apply(this,arguments)})},{key:"addLink",value:(L=Nt(xt().m(function n(e){var t,r,a,o,i,s,c,l;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(r=n.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return console.error("User not logged in"),n.a(2,{success:!1,error:"User not logged in."});case 2:return i={user_id:o.id,collection_id:e.collectionId||null,url:e.url,title:e.title,favicon:e.favicon,domain:e.domain,user_note:e.userNote,ai_summary:e.aiSummary,category:e.category,is_in_inbox:e.isInInbox||!1,highlights:e.highlights?JSON.stringify(e.highlights):null},console.log("Storage: addLink dbLink.highlights:",i.highlights),n.n=3,bt.from("links").insert(i).select("id").single();case 3:if(s=n.v,c=s.data,!(l=s.error)){n.n=4;break}return console.error("Supabase addLink error:",l),n.a(2,{success:!1,error:l.message||"Database error occurred."});case 4:return n.a(2,{success:!0,linkId:c.id})}},n)})),function(n){return L.apply(this,arguments)})},{key:"updateLink",value:(D=Nt(xt().m(function n(e,t){var r,a,o;return xt().w(function(n){for(;;)switch(n.n){case 0:return r=Et(Et({},t),{},{updated_at:new Date}),void 0!==t.highlights&&(r.highlights=t.highlights?JSON.stringify(t.highlights):null),delete r.collectionId,delete r.userNote,delete r.aiSummary,delete r.isInInbox,delete r.createdAt,delete r.updatedAt,void 0!==t.collectionId&&(r.collection_id=t.collectionId),void 0!==t.userNote&&(r.user_note=t.userNote),void 0!==t.aiSummary&&(r.ai_summary=t.aiSummary),void 0!==t.isInInbox&&(r.is_in_inbox=t.isInInbox),console.log("Storage: updateLink dbUpdates.highlights:",r.highlights),n.n=1,bt.from("links").update(r).eq("id",e);case 1:if(a=n.v,!(o=a.error)){n.n=2;break}throw o;case 2:return n.a(2)}},n)})),function(n,e){return D.apply(this,arguments)})},{key:"deleteLink",value:(P=Nt(xt().m(function n(e){var t,r;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.from("links").delete().eq("id",e);case 1:if(t=n.v,!(r=t.error)){n.n=2;break}throw r;case 2:return n.a(2)}},n)})),function(n){return P.apply(this,arguments)})},{key:"addCollection",value:(O=Nt(xt().m(function n(e){var t,r,a,o,i,s,c;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(r=n.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}throw new Error("User not logged in.");case 2:return i={user_id:o.id,name:e.name,description:e.description,color:e.color},n.n=3,bt.from("collections").insert(i);case 3:if(s=n.v,!(c=s.error)){n.n=4;break}throw c;case 4:return n.a(2)}},n)})),function(n){return O.apply(this,arguments)})},{key:"updateCollection",value:(T=Nt(xt().m(function n(e,t){var r,a;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.from("collections").update(Et(Et({},t),{},{updatedAt:new Date})).eq("id",e);case 1:if(r=n.v,!(a=r.error)){n.n=2;break}throw a;case 2:return n.a(2)}},n)})),function(n,e){return T.apply(this,arguments)})},{key:"deleteCollection",value:(_=Nt(xt().m(function n(e){var t,r;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.from("collections").delete().eq("id",e);case 1:if(t=n.v,!(r=t.error)){n.n=2;break}throw r;case 2:return n.a(2)}},n)})),function(n){return _.apply(this,arguments)})},{key:"searchLinks",value:(I=Nt(xt().m(function n(e){var t,r,a,o,i,s,c,l,u=this;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(r=n.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return console.error("User not logged in"),n.a(2,[]);case 2:if(e.trim()){n.n=3;break}return n.a(2,[]);case 3:return n.p=3,n.n=4,bt.rpc("search_user_links",{search_query:e.trim(),user_uuid:o.id,result_limit:50});case 4:if(i=n.v,s=i.data,!(c=i.error)){n.n=5;break}return console.error("Search error:",c),n.a(2,[]);case 5:return n.a(2,(s||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:u.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain,searchRank:n.rank,searchHeadline:n.headline}}));case 6:return n.p=6,l=n.v,console.error("Search failed:",l),n.a(2,[])}},n,null,[[3,6]])})),function(n){return I.apply(this,arguments)})},{key:"getUserTags",value:(N=Nt(xt().m(function n(){var e,t,r,a,o,i,s,c;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(t=n.v,r=t.data,a=null===(e=r.session)||void 0===e?void 0:e.user){n.n=2;break}return console.error("User not logged in"),n.a(2,[]);case 2:return n.p=2,n.n=3,bt.rpc("get_user_tags_with_counts",{user_uuid:a.id});case 3:if(o=n.v,i=o.data,!(s=o.error)){n.n=4;break}return console.error("Error fetching user tags:",s),n.a(2,[]);case 4:return n.a(2,(i||[]).map(function(n){return{id:n.id,name:n.name,usageCount:n.usage_count||0}}));case 5:return n.p=5,c=n.v,console.error("Failed to get user tags:",c),n.a(2,[])}},n,null,[[2,5]])})),function(){return N.apply(this,arguments)})},{key:"getLinkTags",value:(z=Nt(xt().m(function n(e){var t,r,a,o;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,bt.rpc("get_link_tags",{link_uuid:e});case 1:if(t=n.v,r=t.data,!(a=t.error)){n.n=2;break}return console.error("Error fetching link tags:",a),n.a(2,[]);case 2:return n.a(2,r||[]);case 3:return n.p=3,o=n.v,console.error("Failed to get link tags:",o),n.a(2,[])}},n,null,[[0,3]])})),function(n){return z.apply(this,arguments)})},{key:"addTagsToLink",value:(S=Nt(xt().m(function n(e,t){var r,a,o,i,s,c,l;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(a=n.v,o=a.data,i=null===(r=o.session)||void 0===r?void 0:r.user){n.n=2;break}return n.a(2,{success:!1,error:"User not logged in."});case 2:return n.p=2,n.n=3,bt.rpc("add_tags_to_link",{link_uuid:e,tag_names:t,user_uuid:i.id});case 3:if(s=n.v,!(c=s.error)){n.n=4;break}return console.error("Error adding tags to link:",c),n.a(2,{success:!1,error:c.message||"Failed to add tags."});case 4:return n.a(2,{success:!0});case 5:return n.p=5,l=n.v,console.error("Failed to add tags to link:",l),n.a(2,{success:!1,error:l.message})}},n,null,[[2,5]])})),function(n,e){return S.apply(this,arguments)})},{key:"getLinksByTag",value:(j=Nt(xt().m(function n(e){var t,r,a,o,i,s,c,l,u=this;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(r=n.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return console.error("User not logged in"),n.a(2,[]);case 2:return n.p=2,n.n=3,bt.rpc("get_links_by_tag",{user_uuid:o.id,tag_name:e});case 3:if(i=n.v,s=i.data,!(c=i.error)){n.n=4;break}return console.error("Error fetching links by tag:",c),n.a(2,[]);case 4:return n.a(2,(s||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:u.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain}}));case 5:return n.p=5,l=n.v,console.error("Failed to get links by tag:",l),n.a(2,[])}},n,null,[[2,5]])})),function(n){return j.apply(this,arguments)})},{key:"cleanupUnusedTags",value:(w=Nt(xt().m(function n(){var e,t,r,a,o,i,s,c;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(t=n.v,r=t.data,a=null===(e=r.session)||void 0===e?void 0:e.user){n.n=2;break}return n.a(2,0);case 2:return n.p=2,n.n=3,bt.rpc("cleanup_unused_tags",{user_uuid:a.id});case 3:if(o=n.v,i=o.data,!(s=o.error)){n.n=4;break}return console.error("Error cleaning up unused tags:",s),n.a(2,0);case 4:return n.a(2,i||0);case 5:return n.p=5,c=n.v,console.error("Failed to cleanup unused tags:",c),n.a(2,0)}},n,null,[[2,5]])})),function(){return w.apply(this,arguments)})},{key:"moveToInbox",value:(k=Nt(xt().m(function n(e){var t,r;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.from("links").update({is_in_inbox:!0,collection_id:null,updated_at:(new Date).toISOString()}).eq("id",e);case 1:if(t=n.v,!(r=t.error)){n.n=2;break}throw r;case 2:return n.a(2)}},n)})),function(n){return k.apply(this,arguments)})},{key:"moveFromInbox",value:(x=Nt(xt().m(function n(e,t){var r,a;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).eq("id",e);case 1:if(r=n.v,!(a=r.error)){n.n=2;break}throw a;case 2:return n.a(2)}},n)})),function(n,e){return x.apply(this,arguments)})},{key:"getInboxLinks",value:(B=Nt(xt().m(function n(){var e,t,r,a,o,i,s,c=this;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(t=n.v,r=t.data,a=null===(e=r.session)||void 0===e?void 0:e.user){n.n=2;break}return n.a(2,[]);case 2:return n.n=3,bt.from("links").select("*").eq("user_id",a.id).eq("is_in_inbox",!0).order("created_at",{ascending:!1});case 3:if(o=n.v,i=o.data,!(s=o.error)){n.n=4;break}return console.error("Error fetching inbox links:",s),n.a(2,[]);case 4:return n.a(2,(i||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:c.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain}}))}},n)})),function(){return B.apply(this,arguments)})},{key:"bulkMoveFromInbox",value:(E=Nt(xt().m(function n(e,t){var r,a;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).in("id",e);case 1:if(r=n.v,!(a=r.error)){n.n=2;break}throw a;case 2:return n.a(2)}},n)})),function(n,e){return E.apply(this,arguments)})},{key:"toggleCollectionSharing",value:(y=Nt(xt().m(function n(e,t){var r,a,o,i,s,c,l,u,d;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(a=n.v,o=a.data,i=null===(r=o.session)||void 0===r?void 0:r.user){n.n=2;break}return n.a(2,{success:!1,message:"User not logged in."});case 2:return n.p=2,n.n=3,bt.rpc("toggle_collection_sharing",{collection_uuid:e,user_uuid:i.id,make_public:t});case 3:if(s=n.v,c=s.data,!(l=s.error)){n.n=4;break}return console.error("Error toggling collection sharing:",l),n.a(2,{success:!1,message:l.message||"Failed to update sharing settings."});case 4:return u=null==c?void 0:c[0],n.a(2,{success:(null==u?void 0:u.success)||!1,shareToken:null==u?void 0:u.share_token,message:(null==u?void 0:u.message)||"Sharing settings updated."});case 5:return n.p=5,d=n.v,console.error("Failed to toggle collection sharing:",d),n.a(2,{success:!1,message:d.message})}},n,null,[[2,5]])})),function(n,e){return y.apply(this,arguments)})},{key:"getCollectionSharingInfo",value:(C=Nt(xt().m(function n(e){var t,r,a,o,i,s,c,l;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(r=n.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return n.a(2,null);case 2:return n.p=2,n.n=3,bt.from("collections").select("is_public, share_token, view_count").eq("id",e).eq("user_id",o.id).single();case 3:if(i=n.v,s=i.data,!(c=i.error)){n.n=4;break}return console.error("Error fetching collection sharing info:",c),n.a(2,null);case 4:return n.a(2,{isPublic:s.is_public||!1,shareToken:s.share_token,viewCount:s.view_count||0});case 5:return n.p=5,l=n.v,console.error("Failed to get collection sharing info:",l),n.a(2,null)}},n,null,[[2,5]])})),function(n){return C.apply(this,arguments)})},{key:"getSmartCollections",value:(b=Nt(xt().m(function n(){var e;return xt().w(function(n){for(;;)if(0===n.n)return e=this.getDefaultSmartCollections(),n.a(2,e)},n,this)})),function(){return b.apply(this,arguments)})},{key:"generateAISmartCollections",value:(v=Nt(xt().m(function n(e){var t,r,o;return xt().w(function(n){for(;;)switch(n.n){case 0:if(n.p=0,!(e.length>5)){n.n=3;break}return n.n=1,a.e(508).then(a.bind(a,508));case 1:return t=n.v,r=t.aiService,n.n=2,r.generateSmartCollectionSuggestions(e);case 2:return n.a(2,n.v);case 3:n.n=5;break;case 4:n.p=4,o=n.v,console.error("Failed to generate AI smart collection suggestions:",o);case 5:return n.a(2,[])}},n,null,[[0,4]])})),function(n){return v.apply(this,arguments)})},{key:"createSmartCollection",value:(m=Nt(xt().m(function n(e){return xt().w(function(n){for(;;)switch(n.n){case 0:console.log("Creating smart collection:",e);case 1:return n.a(2)}},n)})),function(n){return m.apply(this,arguments)})},{key:"updateSmartCollection",value:(g=Nt(xt().m(function n(e,t){return xt().w(function(n){for(;;)switch(n.n){case 0:console.log("Updating smart collection:",e,t);case 1:return n.a(2)}},n)})),function(n,e){return g.apply(this,arguments)})},{key:"deleteSmartCollection",value:(h=Nt(xt().m(function n(e){return xt().w(function(n){for(;;)switch(n.n){case 0:console.log("Deleting smart collection:",e);case 1:return n.a(2)}},n)})),function(n){return h.apply(this,arguments)})},{key:"getSmartCollectionLinks",value:(f=Nt(xt().m(function n(e){var t,r,a;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getSmartCollections();case 1:if(t=n.v,r=t.find(function(n){return n.id===e})){n.n=2;break}return n.a(2,[]);case 2:return n.n=3,this.getData();case 3:return a=n.v.links,n.a(2,this.filterLinksForSmartCollection(a,r))}},n,this)})),function(n){return f.apply(this,arguments)})},{key:"filterLinksForSmartCollection",value:function(n,e){var t,r,a,o,i=this,s=function(n){return function(n){if(Array.isArray(n))return St(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||jt(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n);if(null!==(t=e.filters)&&void 0!==t&&t.dateRange){var c=e.filters.dateRange,l=c.start,u=c.end;s=s.filter(function(n){var e=n.createdAt;return!(l&&e<l||u&&e>u)})}switch(null!==(r=e.filters)&&void 0!==r&&null!==(r=r.categories)&&void 0!==r&&r.length&&(s=s.filter(function(n){return e.filters.categories.includes(n.category)})),null!==(a=e.filters)&&void 0!==a&&null!==(a=a.domains)&&void 0!==a&&a.length&&(s=s.filter(function(n){return e.filters.domains.some(function(e){return n.domain.includes(e)})})),null!==(o=e.filters)&&void 0!==o&&null!==(o=o.contentType)&&void 0!==o&&o.length&&(s=s.filter(function(n){var t=i.detectContentTypeFromDomain(n.domain);return e.filters.contentType.includes(t)})),e.id){case"recent-reads":return s.filter(function(n){return n.createdAt>=new Date(Date.now()-6048e5)}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()}).slice(0,20);case"ai-related":return s.filter(function(n){return i.isAIRelated(n)}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});case"unread":return s.filter(function(n){return!n.userNote||""===n.userNote.trim()}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});case"tutorials":return s.filter(function(n){return i.isTutorial(n)}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});case"github-repos":return s.filter(function(n){return n.domain.includes("github.com")}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});default:return s}}},{key:"detectContentTypeFromDomain",value:function(n){return n.includes("youtube.com")||n.includes("vimeo.com")?"video":n.includes("github.com")?"tool":n.includes("docs.")||n.includes("documentation")?"documentation":n.includes("medium.com")||n.includes("blog")?"blog":n.includes("news")||n.includes("cnn.com")?"news":"article"}},{key:"isAIRelated",value:function(n){var e="".concat(n.title," ").concat(n.userNote," ").concat(n.aiSummary||"").toLowerCase();return["artificial intelligence","machine learning","deep learning","neural network","ai","ml","gpt","chatgpt","openai","tensorflow","pytorch","llm","natural language processing","nlp","computer vision","reinforcement learning"].some(function(n){return e.includes(n)})}},{key:"isTutorial",value:function(n){var e="".concat(n.title," ").concat(n.userNote).toLowerCase();return["tutorial","how to","guide","step by step","learn","course","introduction to","getting started","beginner","walkthrough"].some(function(n){return e.includes(n)})}},{key:"getDefaultSmartCollections",value:function(){var n=new Date;return[{id:"recent-reads",name:"📚 Recent Reads",description:"Links saved in the last 7 days",query:"created_at >= now() - interval '7 days'",isSystem:!0,autoUpdate:!0,icon:"📚",color:"#3b82f6",filters:{dateRange:{start:new Date(Date.now()-6048e5)}},createdAt:n,updatedAt:n},{id:"ai-related",name:"🤖 AI & Machine Learning",description:"Content related to artificial intelligence and machine learning",query:"title ILIKE '%ai%' OR title ILIKE '%machine learning%' OR title ILIKE '%neural%'",isSystem:!0,autoUpdate:!0,icon:"🤖",color:"#8b5cf6",createdAt:n,updatedAt:n},{id:"unread",name:"📖 To Read",description:"Links without notes (likely unread)",query:"user_note IS NULL OR user_note = ''",isSystem:!0,autoUpdate:!0,icon:"📖",color:"#f59e0b",createdAt:n,updatedAt:n},{id:"tutorials",name:"🎓 Tutorials & Guides",description:"Educational content and tutorials",query:"title ILIKE '%tutorial%' OR title ILIKE '%guide%' OR title ILIKE '%how to%'",isSystem:!0,autoUpdate:!0,icon:"🎓",color:"#10b981",createdAt:n,updatedAt:n},{id:"github-repos",name:"⭐ GitHub Repositories",description:"GitHub repositories and projects",query:"domain LIKE '%github.com%'",isSystem:!0,autoUpdate:!0,icon:"⭐",color:"#6b7280",filters:{domains:["github.com"]},createdAt:n,updatedAt:n}]}},{key:"getDefaultCategories",value:function(){return[{id:"general",name:"General",color:"#6b7280",isDefault:!0},{id:"work",name:"Work",color:"#3b82f6"},{id:"personal",name:"Personal",color:"#10b981"},{id:"learning",name:"Learning",color:"#f59e0b"}]}},{key:"getDefaultData",value:function(){return{links:[],collections:[],smartCollections:[],categories:this.getDefaultCategories(),settings:{defaultCategory:"general",autoSummarize:!0,enableSmartCollections:!0}}}},{key:"getLinkByUrl",value:(p=Nt(xt().m(function n(e){var t,r,a,o,i,s,c;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.getSession();case 1:if(r=n.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return n.a(2,null);case 2:return n.n=3,bt.from("links").select("*").eq("user_id",o.id).eq("url",e).single();case 3:if(i=n.v,s=i.data,!(c=i.error)){n.n=5;break}if("PGRST116"!==c.code){n.n=4;break}return n.a(2,null);case 4:throw c;case 5:return n.a(2,{id:s.id,url:s.url,title:s.title,favicon:s.favicon,userNote:s.user_note||"",aiSummary:s.ai_summary,category:s.category,collectionId:s.collection_id,isInInbox:s.is_in_inbox||!1,highlights:this.parseHighlights(s.highlights),createdAt:new Date(s.created_at),updatedAt:new Date(s.updated_at),domain:s.domain})}},n,this)})),function(n){return p.apply(this,arguments)})},{key:"parseHighlights",value:function(n){if(!n)return console.log("Storage: No highlights data found"),[];if("string"==typeof n)try{var e=JSON.parse(n),t=Array.isArray(e)?e:[];return console.log("Storage: Parsed highlights from JSON:",t.length,"highlights",t),t}catch(n){return console.warn("Failed to parse highlights JSON:",n),[]}return Array.isArray(n)?(console.log("Storage: Found highlights array:",n.length,"highlights",n),n):(console.log("Storage: Highlights data in unexpected format:",Ct(n),n),[])}},{key:"logActivity",value:(A=Nt(xt().m(function n(e,t,r,a){var o,i,s,c;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getActivities();case 1:return o=n.v,i={id:Date.now().toString(),type:e,linkId:t,collectionId:r,metadata:a,createdAt:new Date},o.push(i),s=o.slice(-1e3),n.n=2,chrome.storage.local.set({nest_activities:s});case 2:return n.n=3,this.updateStreaks(e);case 3:console.log("Activity logged:",i),n.n=5;break;case 4:n.p=4,c=n.v,console.error("Failed to log activity:",c);case 5:return n.a(2)}},n,this,[[0,4]])})),function(n,e,t,r){return A.apply(this,arguments)})},{key:"getActivities",value:(d=Nt(xt().m(function n(){var e,t,r,a,o=arguments;return xt().w(function(n){for(;;)switch(n.n){case 0:return e=o.length>0&&void 0!==o[0]?o[0]:100,n.p=1,n.n=2,chrome.storage.local.get("nest_activities");case 2:return t=n.v,r=t.nest_activities||[],n.a(2,r.slice(-e).reverse());case 3:return n.p=3,a=n.v,console.error("Failed to get activities:",a),n.a(2,[])}},n,null,[[1,3]])})),function(){return d.apply(this,arguments)})},{key:"getActivityStats",value:(u=Nt(xt().m(function n(){var e,t,r,a,o,i;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getActivities(1e3);case 1:return r=n.v,n.n=2,this.getStreaks();case 2:return a=n.v,o={totalSaves:r.filter(function(n){return"save"===n.type}).length,totalReads:r.filter(function(n){return"read"===n.type}).length,totalHighlights:r.filter(function(n){return"highlight"===n.type}).length,totalOrganizations:r.filter(function(n){return"organize"===n.type}).length,totalSearches:r.filter(function(n){return"search"===n.type}).length,activeDays:this.getUniqueDays(r).length,currentStreak:(null===(e=a.find(function(n){return"daily_save"===n.type}))||void 0===e?void 0:e.currentCount)||0,bestStreak:(null===(t=a.find(function(n){return"daily_save"===n.type}))||void 0===t?void 0:t.bestCount)||0,thisWeekActivity:this.getThisWeekActivity(r),lastActiveDate:r.length>0?new Date(r[0].createdAt):void 0},n.a(2,o);case 3:return n.p=3,i=n.v,console.error("Failed to get activity stats:",i),n.a(2,{totalSaves:0,totalReads:0,totalHighlights:0,totalOrganizations:0,totalSearches:0,activeDays:0,currentStreak:0,bestStreak:0,thisWeekActivity:0})}},n,this,[[0,3]])})),function(){return u.apply(this,arguments)})},{key:"getStreaks",value:(l=Nt(xt().m(function n(){var e,t;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_streaks");case 1:return e=n.v,n.a(2,e.nest_streaks||[]);case 2:return n.p=2,t=n.v,console.error("Failed to get streaks:",t),n.a(2,[])}},n,null,[[0,2]])})),function(){return l.apply(this,arguments)})},{key:"updateStreaks",value:(c=Nt(xt().m(function n(e){var t,r,a,o,i,s,c,l,u;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getStreaks();case 1:return t=n.v,r=(new Date).toDateString(),"save"===e&&((a=t.find(function(n){return"daily_save"===n.type}))||(a={id:"daily_save",type:"daily_save",currentCount:0,bestCount:0,lastActivityAt:new Date,createdAt:new Date},t.push(a)),o=new Date(a.lastActivityAt).toDateString(),i=new Date(Date.now()-864e5).toDateString(),o===r||(o===i?(a.currentCount++,a.lastActivityAt=new Date):(a.currentCount=1,a.lastActivityAt=new Date)),a.currentCount>a.bestCount&&(a.bestCount=a.currentCount)),"organize"===e&&((s=t.find(function(n){return"weekly_organize"===n.type}))||(s={id:"weekly_organize",type:"weekly_organize",currentCount:0,bestCount:0,lastActivityAt:new Date,createdAt:new Date},t.push(s)),c=this.getWeekNumber(new Date),l=this.getWeekNumber(new Date(s.lastActivityAt)),c===l||(c===l+1?(s.currentCount++,s.lastActivityAt=new Date):(s.currentCount=1,s.lastActivityAt=new Date)),s.currentCount>s.bestCount&&(s.bestCount=s.currentCount)),n.n=2,chrome.storage.local.set({nest_streaks:t});case 2:n.n=4;break;case 3:n.p=3,u=n.v,console.error("Failed to update streaks:",u);case 4:return n.a(2)}},n,this,[[0,3]])})),function(n){return c.apply(this,arguments)})},{key:"getUniqueDays",value:function(n){var e=new Set;return n.forEach(function(n){var t=new Date(n.createdAt).toDateString();e.add(t)}),Array.from(e)}},{key:"getThisWeekActivity",value:function(n){var e=new Date(Date.now()-6048e5);return n.filter(function(n){return new Date(n.createdAt)>=e}).length}},{key:"getWeekNumber",value:function(n){var e=new Date(n.getFullYear(),0,1);return Math.ceil(((n.getTime()-e.getTime())/864e5+e.getDay()+1)/7)}},{key:"shouldShowNudge",value:(s=Nt(xt().m(function n(){var e,t,r,a,o,i;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getActivityStats();case 1:return e=n.v,n.n=2,this.getActivities(50);case 2:if(t=n.v,r=(new Date).toDateString(),0!==t.filter(function(n){return new Date(n.createdAt).toDateString()===r&&"save"===n.type}).length){n.n=5;break}if(!(e.currentStreak>0)){n.n=3;break}return n.a(2,{show:!0,type:"streak_reminder",message:"You have a ".concat(e.currentStreak,"-day saving streak! Don't break it - save something today.")});case 3:if(!e.lastActiveDate){n.n=4;break}if(!((a=Math.floor((Date.now()-e.lastActiveDate.getTime())/864e5))>=3)){n.n=4;break}return n.a(2,{show:!0,type:"inactive_reminder",message:"Welcome back! You haven't saved anything in ".concat(a," days. Found something interesting?")});case 4:if(!((o=(new Date).getHours())>=10&&o<=20)){n.n=5;break}return n.a(2,{show:!0,type:"daily_reminder",message:"Discover something new today? Save it to Nest!"});case 5:return n.a(2,{show:!1});case 6:return n.p=6,i=n.v,console.error("Failed to check nudge status:",i),n.a(2,{show:!1})}},n,this,[[0,6]])})),function(){return s.apply(this,arguments)})}],t=[{key:"getPublicCollection",value:(i=Nt(xt().m(function n(e){var t,r,a,o,i;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,bt.rpc("get_public_collection",{token:e});case 1:if(t=n.v,r=t.data,!(a=t.error)){n.n=2;break}return console.error("Error fetching public collection:",a),n.a(2,null);case 2:if(o=null==r?void 0:r[0]){n.n=3;break}return n.a(2,null);case 3:return n.a(2,{id:o.id,name:o.name,description:o.description,viewCount:o.view_count||0,createdAt:new Date(o.created_at),ownerEmail:o.owner_email});case 4:return n.p=4,i=n.v,console.error("Failed to get public collection:",i),n.a(2,null)}},n,null,[[0,4]])})),function(n){return i.apply(this,arguments)})},{key:"getPublicCollectionLinks",value:(o=Nt(xt().m(function n(e){var t,r,a,o;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,bt.rpc("get_public_collection_links",{token:e});case 1:if(t=n.v,r=t.data,!(a=t.error)){n.n=2;break}return console.error("Error fetching public collection links:",a),n.a(2,[]);case 2:return n.a(2,(r||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,domain:n.domain,userNote:n.user_note,aiSummary:n.ai_summary,category:n.category,createdAt:new Date(n.created_at),tags:n.tag_names||[]}}));case 3:return n.p=3,o=n.v,console.error("Failed to get public collection links:",o),n.a(2,[])}},n,null,[[0,3]])})),function(n){return o.apply(this,arguments)})},{key:"incrementViewCount",value:(r=Nt(xt().m(function n(e){var t,r,a;return xt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,bt.rpc("increment_collection_views",{token:e});case 1:t=n.v,(r=t.error)&&console.error("Error incrementing view count:",r),n.n=3;break;case 2:n.p=2,a=n.v,console.error("Failed to increment view count:",a);case 3:return n.a(2)}},n,null,[[0,2]])})),function(n){return r.apply(this,arguments)})}],e&&It(n.prototype,e),t&&It(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e,t,r,o,i,s,c,l,u,d,A,p,f,h,g,m,v,b,C,y,E,B,x,k,w,j,S,z,N,I,_,T,O,P,D,L,R}());const Ot=c("ExternalLink",[["path",{d:"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6",key:"a6xqqp"}],["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["line",{x1:"10",x2:"21",y1:"14",y2:"3",key:"18c3s4"}]]),Pt=c("MoreHorizontal",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]),Dt=c("PenLine",[["path",{d:"M12 20h9",key:"t2du7b"}],["path",{d:"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z",key:"ymcmye"}]]),Lt=c("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);var Rt=a(848);function Mt(n){return function(n){if(Array.isArray(n))return Yt(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Ut(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ft(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||Ut(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ut(n,e){if(n){if("string"==typeof n)return Yt(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Yt(n,e):void 0}}function Yt(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const qt=function(n){var e=n.selectedTags,t=n.availableTags,r=n.onTagsChange,a=n.placeholder,i=void 0===a?"Add tags...":a,s=n.maxTags,c=void 0===s?10:s,l=Ft((0,o.useState)(""),2),d=l[0],A=l[1],p=Ft((0,o.useState)(!1),2),f=p[0],g=p[1],m=Ft((0,o.useState)(-1),2),v=m[0],b=m[1],C=(0,o.useRef)(null),y=t.filter(function(n){return n.name.toLowerCase().includes(d.toLowerCase())&&!e.find(function(e){return e.name===n.name})}).slice(0,8),E=function(n){var t;e.length>=c||e.find(function(e){return e.name===n.name})||(r([].concat(Mt(e),[n])),A(""),g(!1),b(-1),null===(t=C.current)||void 0===t||t.focus())},B=function(n){var t;r(e.filter(function(e){return e.name!==n.name})),null===(t=C.current)||void 0===t||t.focus()},x=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]};return(0,Rt.jsxs)("div",{className:"tag-input-container",children:[(0,Rt.jsxs)("div",{className:"tag-input-wrapper",children:[e.map(function(n){return(0,Rt.jsxs)("div",{className:"tag-chip",style:{backgroundColor:x(n.name)},children:[(0,Rt.jsx)("span",{className:"tag-name",children:n.name}),(0,Rt.jsx)("button",{onClick:function(){return B(n)},className:"tag-remove",type:"button",title:"Remove ".concat(n.name," tag"),"aria-label":"Remove ".concat(n.name," tag"),children:(0,Rt.jsx)(u,{size:12})})]},n.name)}),(0,Rt.jsx)("input",{ref:C,type:"text",value:d,onChange:function(n){var e=n.target.value;A(e),g(e.length>0),b(-1)},onKeyDown:function(n){"Enter"===n.key?(n.preventDefault(),v>=0&&y[v]?E(y[v]):d.trim()&&function(n){var t;if(!(e.length>=c||e.find(function(e){return e.name.toLowerCase()===n.toLowerCase()}))){var a={id:"",name:n.toLowerCase()};r([].concat(Mt(e),[a])),A(""),g(!1),b(-1),null===(t=C.current)||void 0===t||t.focus()}}(d.trim())):"ArrowDown"===n.key?(n.preventDefault(),b(function(n){return n<y.length-1?n+1:n})):"ArrowUp"===n.key?(n.preventDefault(),b(function(n){return n>0?n-1:-1})):"Escape"===n.key?(g(!1),b(-1)):"Backspace"===n.key&&!d&&e.length>0&&B(e[e.length-1])},onFocus:function(){return g(d.length>0)},onBlur:function(){return setTimeout(function(){return g(!1)},150)},placeholder:0===e.length?i:"",className:"tag-input",disabled:e.length>=c}),e.length<c&&(0,Rt.jsx)("div",{className:"tag-input-icon",children:(0,Rt.jsx)(h,{size:14})})]}),f&&y.length>0&&(0,Rt.jsx)("div",{className:"tag-suggestions",children:y.map(function(n,e){return(0,Rt.jsxs)("button",{onClick:function(){return function(n){E(n)}(n)},className:"tag-suggestion ".concat(e===v?"focused":""),type:"button",children:[(0,Rt.jsx)("span",{className:"tag-suggestion-color",style:{backgroundColor:x(n.name)}}),(0,Rt.jsx)("span",{className:"tag-suggestion-name",children:n.name}),n.usageCount&&n.usageCount>0&&(0,Rt.jsxs)("span",{className:"tag-suggestion-count",children:["(",n.usageCount,")"]})]},n.id)})})]})};function $t(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Wt(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Wt(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wt(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Gt=function(n){var e=n.highlight,t=n.onAddNote,r=n.onDelete,a=$t((0,o.useState)(!1),2),i=a[0],s=a[1],c=$t((0,o.useState)(e.userNote||""),2),l=c[0],u=c[1];return(0,Rt.jsxs)("div",{className:"highlight-card",children:[(0,Rt.jsxs)("div",{className:"highlight-content",children:[(0,Rt.jsxs)("div",{className:"highlight-text",children:[(0,Rt.jsx)("div",{className:"highlight-icon",children:(0,Rt.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,Rt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z",fill:"currentColor"})})}),(0,Rt.jsxs)("p",{className:"highlight-selected-text",children:['"',e.selectedText,'"']})]}),e.context&&e.context!==e.selectedText&&(0,Rt.jsx)("div",{className:"highlight-context",children:(0,Rt.jsxs)("p",{children:["Context: ",e.context]})}),e.userNote&&!i&&(0,Rt.jsx)("div",{className:"highlight-note",children:(0,Rt.jsx)("p",{children:e.userNote})}),i&&(0,Rt.jsxs)("div",{className:"highlight-note-form",children:[(0,Rt.jsx)("textarea",{value:l,onChange:function(n){return u(n.target.value)},placeholder:"Add your thoughts about this highlight...",autoFocus:!0}),(0,Rt.jsxs)("div",{className:"highlight-note-actions",children:[(0,Rt.jsx)("button",{onClick:function(){t&&t(e.id,l),s(!1)},className:"save-button",children:"Save"}),(0,Rt.jsx)("button",{onClick:function(){u(e.userNote||""),s(!1)},className:"cancel-button",children:"Cancel"})]})]})]}),(0,Rt.jsxs)("div",{className:"highlight-actions",children:[(0,Rt.jsx)("span",{className:"highlight-date",children:new Date(e.createdAt).toLocaleDateString()}),(0,Rt.jsxs)("div",{className:"highlight-buttons",children:[!i&&(0,Rt.jsx)("button",{onClick:function(){return s(!0)},className:"highlight-action-button",title:e.userNote?"Edit note":"Add note",children:(0,Rt.jsxs)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,Rt.jsx)("path",{d:"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,Rt.jsx)("path",{d:"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})}),r&&(0,Rt.jsx)("button",{onClick:function(){return r(e.id)},className:"highlight-action-button delete-button",title:"Delete highlight",children:(0,Rt.jsxs)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,Rt.jsx)("path",{d:"m18 6-12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,Rt.jsx)("path",{d:"m6 6 12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})})]})]})]})};function Ht(n){return Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ht(n)}function Vt(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Kt(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Kt(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Kt(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Kt(d,"constructor",l),Kt(l,"constructor",c),c.displayName="GeneratorFunction",Kt(l,a,"GeneratorFunction"),Kt(d),Kt(d,a,"Generator"),Kt(d,r,function(){return this}),Kt(d,"toString",function(){return"[object Generator]"}),(Vt=function(){return{w:o,m:A}})()}function Kt(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Kt=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Kt(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Kt(n,e,t,r)}function Qt(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Zt(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Qt(Object(t),!0).forEach(function(e){Xt(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Qt(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Xt(n,e,t){return(e=function(n){var e=function(n){if("object"!=Ht(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Ht(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Ht(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Jt(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function nr(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){Jt(o,r,a,i,s,"next",n)}function s(n){Jt(o,r,a,i,s,"throw",n)}i(void 0)})}}function er(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return tr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?tr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function tr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function rr(n){return{general:"#6b7280",work:"#3b82f6",personal:"#10b981",learning:"#f59e0b"}[n]||"#6b7280"}const ar=function(n){var e=n.link,t=n.collections,r=n.onUpdate,a=n.onDelete,i=n.onMoveToCollection,s=n.onAddNote,c=n.onTagsUpdated,l=n.onOpenDetail,u=n.compactView,d=void 0!==u&&u,A=er((0,o.useState)(!1),2),p=A[0],f=A[1],h=er((0,o.useState)(!1),2),g=h[0],m=h[1],v=er((0,o.useState)(!1),2),b=v[0],C=v[1],y=er((0,o.useState)(!1),2),E=y[0],B=y[1],x=er((0,o.useState)([]),2),k=x[0],j=x[1],S=er((0,o.useState)([]),2),z=(S[0],S[1]),N=er((0,o.useState)(!1),2),I=N[0],_=N[1],O=er((0,o.useState)({top:0,left:0}),2),P=O[0],D=O[1];(0,o.useEffect)(function(){b?M():R()},[b,e.id]);var L,R=function(){var n=nr(Vt().m(function n(){var t,r;return Vt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getLinkTags(e.id);case 1:t=n.v,j(t.map(function(n){return Zt(Zt({},n),{},{usageCount:0})})),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load link tags:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),M=function(){var n=nr(Vt().m(function n(){var t,r,a,o,i;return Vt().w(function(n){for(;;)switch(n.n){case 0:return _(!0),n.p=1,n.n=2,Promise.all([Tt.getLinkTags(e.id),Tt.getUserTags()]);case 2:t=n.v,r=er(t,2),a=r[0],o=r[1],j(a.map(function(n){return Zt(Zt({},n),{},{usageCount:0})})),z(o),n.n=4;break;case 3:n.p=3,i=n.v,console.error("Failed to load tags:",i);case 4:return n.p=4,_(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),F=function(){l(e)},U=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]},Y=function(){var n=nr(Vt().m(function n(t,a){var o,i;return Vt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,o=(e.highlights||[]).map(function(n){return n.id===t?Zt(Zt({},n),{},{userNote:a,updatedAt:new Date}):n}),n.n=1,Tt.updateLink(e.id,{highlights:o});case 1:r(e.id,{highlights:o}),n.n=3;break;case 2:n.p=2,i=n.v,console.error("Failed to update highlight note:",i);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e,t){return n.apply(this,arguments)}}(),q=function(){var n=nr(Vt().m(function n(t){var a,o;return Vt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,a=(e.highlights||[]).filter(function(n){return n.id!==t}),n.n=1,Tt.updateLink(e.id,{highlights:a});case 1:r(e.id,{highlights:a}),n.n=3;break;case 2:n.p=2,o=n.v,console.error("Failed to delete highlight:",o);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}(),$=function(n){if(n.stopPropagation(),!p){var e=n.currentTarget.getBoundingClientRect();D({top:e.bottom+4,left:e.right-180})}f(!p)};return(0,Rt.jsx)("div",{className:"link-card ".concat(d?"compact":""),children:d?(0,Rt.jsxs)("div",{className:"link-card-compact",children:[(0,Rt.jsxs)("div",{className:"link-card-compact-main",onClick:F,children:[(0,Rt.jsx)("div",{className:"link-card-compact-title",children:e.title}),(0,Rt.jsxs)("div",{className:"link-card-compact-meta",children:[(0,Rt.jsx)("span",{className:"link-domain",children:e.domain}),(0,Rt.jsx)("span",{className:"category-badge-compact",style:{backgroundColor:rr(e.category)},children:e.category}),k.length>0&&(0,Rt.jsxs)("div",{className:"link-tags-compact",children:[k.slice(0,3).map(function(n){return(0,Rt.jsx)("span",{className:"link-tag-compact",style:{backgroundColor:U(n.name)},children:n.name},n.id||n.name)}),k.length>3&&(0,Rt.jsxs)("span",{className:"tag-count",children:["+",k.length-3]})]})]})]}),(0,Rt.jsxs)("div",{className:"link-card-compact-actions",children:[(0,Rt.jsx)("button",{onClick:function(n){n.stopPropagation(),F()},className:"action-button-compact",title:"Open link",children:(0,Rt.jsx)(Ot,{size:14})}),(0,Rt.jsxs)("div",{className:"dropdown",children:[(0,Rt.jsx)("button",{onClick:$,className:"action-button-compact",title:"More options",children:(0,Rt.jsx)(Pt,{size:14})}),p&&(0,Rt.jsxs)("div",{className:"dropdown-menu",style:{top:P.top,left:P.left},children:[(0,Rt.jsxs)("button",{onClick:function(){s(e),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(Dt,{size:14}),(0,Rt.jsx)("span",{children:"Edit note"})]}),(0,Rt.jsxs)("button",{onClick:function(){C(!b),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(w,{size:14}),(0,Rt.jsx)("span",{children:"Edit tags"})]}),(0,Rt.jsxs)("button",{onClick:function(){m(!g),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(T,{size:14}),(0,Rt.jsx)("span",{children:"Move to collection"})]}),(0,Rt.jsxs)("button",{onClick:function(){a(e.id),f(!1)},className:"dropdown-menu-item delete-action",children:[(0,Rt.jsx)(Lt,{size:14}),(0,Rt.jsx)("span",{children:"Delete"})]})]})]})]})]}):(0,Rt.jsx)(Rt.Fragment,{children:(0,Rt.jsxs)("div",{className:"link-card-header",children:[(0,Rt.jsx)("div",{className:"link-card-favicon",children:e.favicon?(0,Rt.jsx)("img",{src:e.favicon,alt:"",width:"24",height:"24"}):(0,Rt.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]}(e.domain)},children:e.domain.charAt(0).toUpperCase()})}),(0,Rt.jsxs)("div",{className:"link-card-main",children:[(0,Rt.jsxs)("div",{className:"link-card-info-header",children:[(0,Rt.jsxs)("div",{className:"link-card-title-section",children:[(0,Rt.jsx)("h3",{className:"link-card-title",onClick:F,title:e.title,children:e.title}),(0,Rt.jsxs)("div",{className:"link-meta",children:[(0,Rt.jsx)("span",{className:"link-domain",children:e.domain}),(0,Rt.jsx)("span",{className:"link-date",children:(L=e.createdAt,new Date(L).toLocaleDateString("en-US",{month:"short",day:"numeric"}))})]})]}),(0,Rt.jsxs)("div",{className:"link-actions",children:[(0,Rt.jsx)("button",{onClick:F,className:"action-button",title:"Open link",children:(0,Rt.jsx)(Ot,{size:14})}),(0,Rt.jsxs)("div",{className:"dropdown",children:[(0,Rt.jsx)("button",{onClick:$,className:"action-button",title:"More options",children:(0,Rt.jsx)(Pt,{size:14})}),p&&(0,Rt.jsxs)("div",{className:"dropdown-menu",style:{top:P.top,left:P.left},children:[(0,Rt.jsxs)("button",{onClick:function(){s(e),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(Dt,{size:14}),(0,Rt.jsx)("span",{children:"Edit note"})]}),(0,Rt.jsxs)("button",{onClick:function(){C(!b),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(w,{size:14}),(0,Rt.jsx)("span",{children:"Edit tags"})]}),e.highlights&&e.highlights.length>0&&(0,Rt.jsxs)("button",{onClick:function(){B(!E),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:(0,Rt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"})}),(0,Rt.jsxs)("span",{children:[E?"Hide":"Show"," highlights (",e.highlights.length,")"]})]}),(0,Rt.jsxs)("button",{onClick:function(){m(!g),f(!1)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(T,{size:14}),(0,Rt.jsx)("span",{children:"Move to collection"})]}),(0,Rt.jsxs)("button",{onClick:function(){a(e.id),f(!1)},className:"dropdown-menu-item delete-action",children:[(0,Rt.jsx)(Lt,{size:14}),(0,Rt.jsx)("span",{children:"Delete"})]})]})]})]})]}),(0,Rt.jsxs)("div",{className:"link-card-body",children:[g&&(0,Rt.jsxs)("div",{className:"collections-menu",children:[(0,Rt.jsx)("div",{className:"collections-header",children:"Move to:"}),t.map(function(n){return(0,Rt.jsx)("button",{onClick:function(){i(e.id,n.id),m(!1)},className:"collection-option",children:n.name},n.id)}),(0,Rt.jsx)("button",{onClick:function(){i(e.id,""),m(!1)},className:"collection-option",children:"Remove from collection"})]}),b&&(0,Rt.jsxs)("div",{className:"tag-editor",children:[(0,Rt.jsxs)("div",{className:"tag-editor-header",children:[(0,Rt.jsx)("span",{children:"Edit Tags"}),(0,Rt.jsx)("button",{onClick:function(){return C(!1)},className:"tag-editor-close",title:"Close tag editor",children:"×"})]}),I?(0,Rt.jsx)("div",{className:"tag-editor-loading",children:"Loading tags..."}):(0,Rt.jsx)(qt,{linkId:e.id,onTagsUpdated:function(){R(),c&&c(),C(!1)},onCancel:function(){return C(!1)}})]}),!b&&k.length>0&&(0,Rt.jsx)("div",{className:"link-tags",children:k.map(function(n){return(0,Rt.jsx)("span",{className:"link-tag",title:"Filter by ".concat(n.name),children:n.name},n.id||n.name)})}),e.userNote&&(0,Rt.jsxs)("div",{className:"link-note",children:[(0,Rt.jsx)("strong",{children:"Note:"})," ",e.userNote]}),e.aiSummary&&(0,Rt.jsxs)("div",{className:"link-summary",children:[(0,Rt.jsx)("strong",{children:"Summary:"})," ",e.aiSummary]}),(0,Rt.jsx)("div",{className:"link-category",children:(0,Rt.jsx)("span",{className:"category-badge",style:{backgroundColor:rr(e.category)},children:e.category})}),e.highlights&&e.highlights.length>0&&(0,Rt.jsxs)("div",{className:"link-highlights-section",children:[(0,Rt.jsx)("div",{className:"highlights-header",children:(0,Rt.jsxs)("button",{onClick:function(){return B(!E)},className:"highlights-toggle",children:[(0,Rt.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",children:(0,Rt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"})}),(0,Rt.jsxs)("span",{children:[e.highlights.length," highlight",1!==e.highlights.length?"s":""]}),(0,Rt.jsx)("svg",{width:"12",height:"12",viewBox:"0 0 24 24",className:"highlights-chevron ".concat(E?"expanded":""),fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:(0,Rt.jsx)("path",{d:"m6 9 6 6 6-6"})})]})}),E&&(0,Rt.jsx)("div",{className:"highlights-list",children:e.highlights.map(function(n){return(0,Rt.jsx)(Gt,{highlight:n,onAddNote:Y,onDelete:q},n.id)})})]})]})]})]})})})},or=c("Folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),ir=c("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]),sr=c("Share2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]]),cr=c("Lock",[["rect",{width:"18",height:"11",x:"3",y:"11",rx:"2",ry:"2",key:"1w4ew1"}],["path",{d:"M7 11V7a5 5 0 0 1 10 0v4",key:"fwvmzm"}]]),lr=c("Link2",[["path",{d:"M9 17H7A5 5 0 0 1 7 7h2",key:"8i5ue5"}],["path",{d:"M15 7h2a5 5 0 1 1 0 10h-2",key:"1b9ql8"}],["line",{x1:"8",x2:"16",y1:"12",y2:"12",key:"1jonct"}]]),ur=c("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),dr=c("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]]),Ar=c("Eye",[["path",{d:"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z",key:"rwhkz3"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);function pr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return fr(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(fr(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,fr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,fr(d,"constructor",l),fr(l,"constructor",c),c.displayName="GeneratorFunction",fr(l,a,"GeneratorFunction"),fr(d),fr(d,a,"Generator"),fr(d,r,function(){return this}),fr(d,"toString",function(){return"[object Generator]"}),(pr=function(){return{w:o,m:A}})()}function fr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}fr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){fr(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},fr(n,e,t,r)}function hr(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function gr(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){hr(o,r,a,i,s,"next",n)}function s(n){hr(o,r,a,i,s,"throw",n)}i(void 0)})}}function mr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return vr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?vr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function vr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const br=function(n){var e=n.collection,t=n.onClose,r=n.onUpdate,a=mr((0,o.useState)(!1),2),i=a[0],s=a[1],c=mr((0,o.useState)(""),2),l=c[0],d=c[1],A=mr((0,o.useState)(0),2),p=A[0],f=A[1],h=mr((0,o.useState)(!0),2),g=h[0],m=h[1],v=mr((0,o.useState)(!1),2),b=v[0],C=v[1],y=mr((0,o.useState)(""),2),E=y[0],B=y[1],x=mr((0,o.useState)(!1),2),k=x[0],w=x[1];(0,o.useEffect)(function(){S()},[e.id]);var j,S=function(){var n=gr(pr().m(function n(){var t,r;return pr().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getCollectionSharingInfo(e.id);case 1:(t=n.v)&&(s(t.isPublic),d(t.shareToken||""),f(t.viewCount)),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load sharing info:",r);case 3:return n.p=3,m(!1),n.f(3);case 4:return n.a(2)}},n,null,[[0,2,3,4]])}));return function(){return n.apply(this,arguments)}}(),z=function(){var n=gr(pr().m(function n(){var t;return pr().w(function(n){for(;;)switch(n.n){case 0:return C(!0),B(""),n.p=1,n.n=2,Tt.toggleCollectionSharing(e.id,!i);case 2:(t=n.v).success?(s(!i),t.shareToken&&d(t.shareToken),B(t.message),r()):B(t.message),n.n=4;break;case 3:n.p=3,n.v,B("Failed to update sharing settings");case 4:return n.p=4,C(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),N=function(){return l?"https://nest-shared.vercel.app/collection/".concat(l):""},I=function(){var n=gr(pr().m(function n(){var e,t;return pr().w(function(n){for(;;)switch(n.n){case 0:if(e=N()){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,navigator.clipboard.writeText(e);case 2:w(!0),setTimeout(function(){return w(!1)},2e3),n.n=4;break;case 3:n.p=3,n.v,(t=document.createElement("textarea")).value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),w(!0),setTimeout(function(){return w(!1)},2e3);case 4:return n.a(2)}},n,null,[[1,3]])}));return function(){return n.apply(this,arguments)}}();return g?(0,Rt.jsx)("div",{className:"modal-overlay",children:(0,Rt.jsxs)("div",{className:"modal share-modal",children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsx)("h2",{children:"Share Collection"}),(0,Rt.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsx)("div",{className:"modal-content",children:(0,Rt.jsx)("div",{className:"loading-spinner",children:"Loading sharing settings..."})})]})}):(0,Rt.jsx)("div",{className:"modal-overlay",children:(0,Rt.jsxs)("div",{className:"modal share-modal",children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsx)("h2",{children:"Share Collection"}),(0,Rt.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsxs)("div",{className:"modal-content",children:[(0,Rt.jsxs)("div",{className:"share-collection-info",children:[(0,Rt.jsx)("h3",{className:"collection-name",children:e.name}),e.description&&(0,Rt.jsx)("p",{className:"collection-description",children:e.description}),(0,Rt.jsx)("div",{className:"collection-meta",children:(0,Rt.jsxs)("span",{children:["Created ",(j=e.createdAt,new Date(j).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}))]})})]}),(0,Rt.jsx)("div",{className:"share-toggle-section",children:(0,Rt.jsxs)("div",{className:"share-toggle-header",children:[(0,Rt.jsx)("div",{className:"share-status",children:i?(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsx)(ir,{size:20,className:"status-icon public"}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"status-title",children:"Public Collection"}),(0,Rt.jsx)("div",{className:"status-subtitle",children:"Anyone with the link can view this collection"})]})]}):(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsx)(cr,{size:20,className:"status-icon private"}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"status-title",children:"Private Collection"}),(0,Rt.jsx)("div",{className:"status-subtitle",children:"Only you can see this collection"})]})]})}),(0,Rt.jsx)("button",{onClick:z,disabled:b,className:"toggle-button ".concat(i?"public":"private"),children:b?"Updating...":i?"Make Private":"Make Public"})]})}),i&&l&&(0,Rt.jsxs)("div",{className:"share-link-section",children:[(0,Rt.jsxs)("div",{className:"share-link-header",children:[(0,Rt.jsx)(lr,{size:16}),(0,Rt.jsx)("span",{children:"Share Link"})]}),(0,Rt.jsxs)("div",{className:"share-link-container",children:[(0,Rt.jsx)("input",{type:"text",value:N(),readOnly:!0,className:"share-link-input",title:"Share link URL","aria-label":"Share link URL"}),(0,Rt.jsxs)("div",{className:"share-link-actions",children:[(0,Rt.jsx)("button",{onClick:I,className:"copy-button ".concat(k?"copied":""),title:"Copy link",children:k?(0,Rt.jsx)(ur,{size:16}):(0,Rt.jsx)(dr,{size:16})}),(0,Rt.jsx)("button",{onClick:function(){var n=N();n&&chrome.tabs.create({url:n})},className:"open-button",title:"Open in new tab",children:(0,Rt.jsx)(Ot,{size:16})})]})]}),(0,Rt.jsx)("div",{className:"share-analytics",children:(0,Rt.jsxs)("div",{className:"analytics-item",children:[(0,Rt.jsx)(Ar,{size:16}),(0,Rt.jsxs)("span",{children:[p," ",1===p?"view":"views"]})]})})]}),E&&(0,Rt.jsx)("div",{className:"share-message ".concat(E.includes("error")?"error":"success"),children:E}),(0,Rt.jsxs)("div",{className:"share-info-box",children:[(0,Rt.jsx)("h4",{children:"About Public Collections"}),(0,Rt.jsxs)("ul",{children:[(0,Rt.jsx)("li",{children:"Public collections can be viewed by anyone with the link"}),(0,Rt.jsx)("li",{children:"Viewers don't need an account to see your collection"}),(0,Rt.jsx)("li",{children:"Links, notes, summaries, and tags are included"}),(0,Rt.jsx)("li",{children:"You can make collections private at any time"}),(0,Rt.jsx)("li",{children:"View counts help you track sharing analytics"})]})]})]}),(0,Rt.jsx)("div",{className:"modal-footer",children:(0,Rt.jsx)("button",{onClick:t,className:"modal-button secondary",children:"Close"})})]})})};function Cr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return yr(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(yr(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,yr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,yr(d,"constructor",l),yr(l,"constructor",c),c.displayName="GeneratorFunction",yr(l,a,"GeneratorFunction"),yr(d),yr(d,a,"Generator"),yr(d,r,function(){return this}),yr(d,"toString",function(){return"[object Generator]"}),(Cr=function(){return{w:o,m:A}})()}function yr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}yr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){yr(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},yr(n,e,t,r)}function Er(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Br(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return xr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?xr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function xr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const kr=function(n){var e=n.collection,t=n.links,r=n.onUpdateLink,a=n.onDeleteLink,i=n.onAddNote,s=n.onTagsUpdated,c=n.onUpdate,l=n.onOpenDetail,u=n.compactView,d=void 0!==u&&u,A=Br((0,o.useState)(!1),2),p=A[0],f=A[1],h=Br((0,o.useState)(!1),2),g=h[0],m=h[1],v=function(){var n,e=(n=Cr().m(function n(e,t){return Cr().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,r(e,{collectionId:t||void 0});case 1:return n.a(2)}},n)}),function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){Er(o,r,a,i,s,"next",n)}function s(n){Er(o,r,a,i,s,"throw",n)}i(void 0)})});return function(n,t){return e.apply(this,arguments)}}();return(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsxs)("div",{className:"collection-card ".concat(p?"expanded":""),children:[(0,Rt.jsxs)("button",{onClick:function(){return f(!p)},className:"collection-header",children:[p?(0,Rt.jsx)(j,{size:16}):(0,Rt.jsx)(S,{size:16}),(0,Rt.jsx)(or,{size:16,className:"collection-icon"}),(0,Rt.jsxs)("div",{className:"collection-info",children:[(0,Rt.jsxs)("div",{className:"collection-name-row",children:[(0,Rt.jsx)("span",{className:"collection-name",children:e.name}),e.isPublic&&(0,Rt.jsx)("div",{className:"public-indicator",title:"This collection is public",children:(0,Rt.jsx)(ir,{size:12})})]}),e.description&&(0,Rt.jsx)("span",{className:"collection-description",children:e.description})]}),(0,Rt.jsxs)("div",{className:"collection-actions",children:[(0,Rt.jsx)("span",{className:"collection-count",children:t.length}),(0,Rt.jsx)("button",{onClick:function(n){n.stopPropagation(),m(!0)},className:"action-button share-collection-button",title:"Share collection",children:(0,Rt.jsx)(sr,{size:14})})]})]}),p&&(0,Rt.jsx)("div",{className:"collection-content",children:0===t.length?(0,Rt.jsx)("div",{className:"empty-collection",children:(0,Rt.jsx)("p",{children:"No links in this collection"})}):t.map(function(n){return(0,Rt.jsx)(ar,{link:n,collections:[],onUpdate:r,onDelete:a,onMoveToCollection:v,onAddNote:i,onTagsUpdated:s,onOpenDetail:l,compactView:d},n.id)})})]}),g&&(0,Rt.jsx)(br,{collection:e,onClose:function(){m(!1)},onUpdate:function(){c&&c()}})]})},wr=c("RotateCcw",[["path",{d:"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"1357e3"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}]]);function jr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Sr(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Sr(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Sr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Sr(d,"constructor",l),Sr(l,"constructor",c),c.displayName="GeneratorFunction",Sr(l,a,"GeneratorFunction"),Sr(d),Sr(d,a,"Generator"),Sr(d,r,function(){return this}),Sr(d,"toString",function(){return"[object Generator]"}),(jr=function(){return{w:o,m:A}})()}function Sr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Sr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Sr(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Sr(n,e,t,r)}function zr(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Nr(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){zr(o,r,a,i,s,"next",n)}function s(n){zr(o,r,a,i,s,"throw",n)}i(void 0)})}}function Ir(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return _r(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_r(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Tr=function(n){var e=n.smartCollection,t=n.collections,r=n.onUpdateLink,a=n.onDeleteLink,i=n.onAddNote,s=n.onTagsUpdated,c=n.onOpenDetail,l=n.compactView,u=void 0!==l&&l,d=Ir((0,o.useState)(!1),2),A=d[0],p=d[1],f=Ir((0,o.useState)([]),2),h=f[0],g=f[1],m=Ir((0,o.useState)(!1),2),v=m[0],b=m[1],C=Ir((0,o.useState)(null),2),y=C[0],E=C[1];(0,o.useEffect)(function(){A&&B()},[A,e.id]);var B=function(){var n=Nr(jr().m(function n(){var t,r;return jr().w(function(n){for(;;)switch(n.n){case 0:return b(!0),n.p=1,n.n=2,Tt.getSmartCollectionLinks(e.id);case 2:t=n.v,g(t),E(new Date),n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load smart collection links:",r);case 4:return n.p=4,b(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),x=function(){var n=Nr(jr().m(function n(t,a){return jr().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,r(t,{collectionId:a||void 0});case 1:e.autoUpdate&&B();case 2:return n.a(2)}},n)}));return function(e,t){return n.apply(this,arguments)}}();return(0,Rt.jsxs)("div",{className:"smart-collection-card ".concat(A?"expanded":""),children:[(0,Rt.jsxs)("button",{onClick:function(){return p(!A)},className:"smart-collection-header",children:[A?(0,Rt.jsx)(j,{size:16}):(0,Rt.jsx)(S,{size:16}),(0,Rt.jsx)("span",{className:"smart-collection-icon",children:e.icon||"🔮"}),(0,Rt.jsxs)("div",{className:"smart-collection-info",children:[(0,Rt.jsxs)("div",{className:"smart-collection-name-row",children:[(0,Rt.jsx)("span",{className:"smart-collection-name",children:e.name}),(0,Rt.jsxs)("div",{className:"smart-collection-badges",children:[(0,Rt.jsx)(I,{size:12,className:"ai-badge",title:"AI-Powered Collection"}),e.autoUpdate&&(0,Rt.jsx)("div",{className:"auto-update-badge",title:"Auto-updating",children:"AUTO"})]})]}),(0,Rt.jsx)("span",{className:"smart-collection-description",children:e.description}),y&&(0,Rt.jsxs)("span",{className:"smart-collection-updated",children:["Updated ",function(){if(!y)return"";var n=(new Date).getTime()-y.getTime(),e=Math.floor(n/6e4);if(e<1)return"Just now";if(e<60)return"".concat(e,"m ago");var t=Math.floor(e/60);if(t<24)return"".concat(t,"h ago");var r=Math.floor(t/24);return"".concat(r,"d ago")}()]})]}),(0,Rt.jsxs)("div",{className:"smart-collection-actions",children:[(0,Rt.jsx)("span",{className:"smart-collection-count",children:v?"...":h.length}),(0,Rt.jsx)("button",{onClick:function(n){n.stopPropagation(),B()},className:"action-button refresh-button",title:"Refresh collection",disabled:v,children:(0,Rt.jsx)(wr,{size:14,className:v?"spinning":""})})]})]}),A&&(0,Rt.jsx)("div",{className:"smart-collection-content",children:v?(0,Rt.jsxs)("div",{className:"smart-collection-loading",children:[(0,Rt.jsx)("div",{className:"loading-spinner"}),(0,Rt.jsx)("span",{children:"Finding matching links..."})]}):0===h.length?(0,Rt.jsxs)("div",{className:"empty-smart-collection",children:[(0,Rt.jsx)(I,{size:24,className:"empty-icon"}),(0,Rt.jsx)("p",{children:"No matching links found"}),(0,Rt.jsx)("span",{className:"empty-subtitle",children:"Links will appear here automatically when they match this collection's criteria"})]}):(0,Rt.jsx)("div",{className:"smart-collection-links",children:h.map(function(n){return(0,Rt.jsx)(ar,{link:n,collections:t,onUpdate:r,onDelete:a,onMoveToCollection:x,onAddNote:i,onTagsUpdated:s,onOpenDetail:c,compactView:u},n.id)})})})]})},Or=function(n){var e,t=n.link,r=n.collections,a=n.onUpdate,o=n.onDelete,i=n.onMoveToCollection,s=n.onAddNote,c=n.onTagsUpdated,l=n.compactView,u=void 0!==l&&l;return(0,Rt.jsxs)("div",{className:"search-result-card",children:[t.searchRank&&(0,Rt.jsx)("div",{className:"search-rank-indicator",children:(e=t.searchRank,e?"".concat(Math.round(100*e),"% match"):"")}),t.searchHeadline&&(0,Rt.jsx)("div",{className:"search-headline",dangerouslySetInnerHTML:{__html:t.searchHeadline}}),(0,Rt.jsx)(ar,{link:t,collections:r,onUpdate:a,onDelete:o,onMoveToCollection:i,onAddNote:s,onTagsUpdated:c,compactView:u})]})},Pr=c("MoreVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]),Dr=c("ChevronUp",[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]]),Lr=c("Info",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 16v-4",key:"1dtifu"}],["path",{d:"M12 8h.01",key:"e9boi3"}]]);function Rr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Mr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Mr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Mr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Fr=function(n){var e=n.analysis,t=n.onTagsApproved,r=n.onCategoryApproved,a=n.onClose,i=n.isLoading,s=void 0!==i&&i,c=Rr((0,o.useState)(new Set),2),l=c[0],d=c[1],A=Rr((0,o.useState)(""),2),p=A[0],f=A[1],h=Rr((0,o.useState)(!0),2),g=h[0],m=h[1],v=function(n){return n>=.8?"#10b981":n>=.6?"#f59e0b":"#6b7280"},b=function(n){return n>=.8?"High":n>=.6?"Med":"Low"};return s?(0,Rt.jsx)("div",{className:"ai-suggestions loading",children:(0,Rt.jsxs)("div",{className:"ai-suggestions-header",children:[(0,Rt.jsxs)("div",{className:"ai-loading-content",children:[(0,Rt.jsx)(I,{size:14,className:"ai-icon spinning"}),(0,Rt.jsx)("span",{children:"AI analyzing content..."})]}),(0,Rt.jsx)("button",{onClick:a,className:"ai-suggestions-close",title:"Cancel analysis",children:(0,Rt.jsx)(u,{size:12})})]})}):(0,Rt.jsxs)("div",{className:"ai-suggestions",children:[(0,Rt.jsxs)("div",{className:"ai-suggestions-header",children:[(0,Rt.jsxs)("button",{onClick:function(){return m(!g)},className:"ai-suggestions-toggle",children:[(0,Rt.jsx)(I,{size:14,className:"ai-icon"}),(0,Rt.jsx)("span",{children:"AI Suggestions"}),(0,Rt.jsx)("div",{className:"ai-suggestions-meta",children:e.readingTime&&(0,Rt.jsxs)("span",{className:"ai-reading-time",children:[e.readingTime,"min"]})}),g?(0,Rt.jsx)(Dr,{size:12}):(0,Rt.jsx)(j,{size:12})]}),(0,Rt.jsx)("button",{onClick:a,className:"ai-suggestions-close",title:"Close suggestions",children:(0,Rt.jsx)(u,{size:12})})]}),g&&(0,Rt.jsxs)("div",{className:"ai-suggestions-content",children:[e.categorySuggestions.length>0&&(0,Rt.jsxs)("div",{className:"ai-suggestion-section",children:[(0,Rt.jsxs)("div",{className:"suggestion-section-header",children:[(0,Rt.jsx)(Lr,{size:12}),(0,Rt.jsx)("span",{children:"Categories"})]}),(0,Rt.jsx)("div",{className:"ai-category-suggestions",children:e.categorySuggestions.slice(0,3).map(function(n,e){return(0,Rt.jsxs)("button",{onClick:function(){return e=n.category,void f(p===e?"":e);var e},className:"ai-category-chip ".concat(p===n.category?"selected":""),title:n.reason,children:[(0,Rt.jsx)("span",{className:"suggestion-name",children:n.category}),(0,Rt.jsx)("span",{className:"confidence-indicator",style:{backgroundColor:v(n.confidence)},children:b(n.confidence)})]},"".concat(n.category,"-").concat(e))})})]}),e.tagSuggestions.length>0&&(0,Rt.jsxs)("div",{className:"ai-suggestion-section",children:[(0,Rt.jsxs)("div",{className:"suggestion-section-header",children:[(0,Rt.jsx)(Lr,{size:12}),(0,Rt.jsx)("span",{children:"Tags"})]}),(0,Rt.jsx)("div",{className:"ai-tag-suggestions",children:e.tagSuggestions.slice(0,6).map(function(n,e){return(0,Rt.jsxs)("button",{onClick:function(){return e=n.tag,(t=new Set(l)).has(e)?t.delete(e):t.add(e),void d(t);var e,t},className:"ai-tag-chip ".concat(l.has(n.tag)?"selected":""),title:"".concat(n.reason," (").concat(Math.round(100*n.confidence),"% confidence)"),children:[(0,Rt.jsx)("span",{className:"suggestion-name",children:n.tag}),(0,Rt.jsx)("span",{className:"confidence-indicator",style:{backgroundColor:v(n.confidence)},children:b(n.confidence)}),l.has(n.tag)&&(0,Rt.jsx)(ur,{size:10,className:"selected-icon"})]},"".concat(n.tag,"-").concat(e))})})]}),e.topics&&e.topics.length>0&&(0,Rt.jsxs)("div",{className:"ai-topics-section",children:[(0,Rt.jsx)("span",{className:"ai-topics-label",children:"Topics:"}),(0,Rt.jsx)("div",{className:"ai-detected-topics",children:e.topics.slice(0,3).map(function(n,e){return(0,Rt.jsx)("span",{className:"ai-topic-pill",children:n},e)})})]}),(0,Rt.jsxs)("div",{className:"ai-suggestions-actions",children:[(0,Rt.jsx)("button",{onClick:a,className:"ai-action-btn secondary",children:"Skip"}),(0,Rt.jsxs)("button",{onClick:function(){l.size>0&&t(Array.from(l)),p&&r(p),a()},className:"ai-action-btn primary",disabled:0===l.size&&!p,children:["Apply (",l.size+(p?1:0),")"]})]})]})]})};function Ur(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Yr(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Yr(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Yr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Yr(d,"constructor",l),Yr(l,"constructor",c),c.displayName="GeneratorFunction",Yr(l,a,"GeneratorFunction"),Yr(d),Yr(d,a,"Generator"),Yr(d,r,function(){return this}),Yr(d,"toString",function(){return"[object Generator]"}),(Ur=function(){return{w:o,m:A}})()}function Yr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Yr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Yr(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Yr(n,e,t,r)}function qr(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function $r(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){qr(o,r,a,i,s,"next",n)}function s(n){qr(o,r,a,i,s,"throw",n)}i(void 0)})}}function Wr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Gr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Gr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Gr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Hr=function(n){var e,t=n.link,r=n.collections,a=n.onMoveFromInbox,i=n.onDelete,s=n.onUpdate,c=n.onAddNote,l=n.onTagsUpdated,d=n.isSelected,A=void 0!==d&&d,p=n.onSelect,f=n.onOpenDetail,h=n.compactView,g=void 0!==h&&h,m=Wr((0,o.useState)(!1),2),v=m[0],b=m[1],C=Wr((0,o.useState)(!1),2),y=C[0],E=C[1],B=Wr((0,o.useState)(!1),2),x=B[0],k=B[1],j=Wr((0,o.useState)(!1),2),S=j[0],z=j[1],N=Wr((0,o.useState)(!1),2),O=N[0],P=N[1],D=Wr((0,o.useState)(null),2),L=D[0],R=D[1],M=Wr((0,o.useState)(!1),2),F=M[0],U=M[1],Y=Wr((0,o.useState)({top:0,left:0}),2),q=Y[0],$=Y[1],W=(0,o.useRef)(null),G=function(){f(t)},H=function(n){p&&p(t.id)},V=function(n){if(console.log("Menu click detected, showMenu:",v),n.preventDefault(),n.stopPropagation(),!v){var e=n.currentTarget.getBoundingClientRect(),t={top:e.bottom+4,left:e.right-180};console.log("Setting menu position:",t),$(t)}b(!v),E(!1),console.log("Menu will be shown:",!v)},K=function(){a(t.id),b(!1)},Q=function(){i(t.id),b(!1)},Z=function(){c(t),b(!1)},X=function(){k(!0),b(!1)},J=function(){var n=$r(Ur().m(function n(){var e,t;return Ur().w(function(n){for(;;)switch(n.n){case 0:if(b(!1),L){n.n=6;break}return U(!0),n.p=1,n.n=2,chrome.runtime.sendMessage({action:"analyzePageWithAI"});case 2:(e=n.v).success&&e.analysis?(R(e.analysis),P(!0)):console.error("Failed to get AI analysis:",e.error),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Error requesting AI analysis:",t);case 4:return n.p=4,U(!1),n.f(4);case 5:n.n=7;break;case 6:P(!0);case 7:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),nn=function(){var n=$r(Ur().m(function n(e){var r;return Ur().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.addTagsToLink(t.id,e);case 1:n.v.success&&l(),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to apply AI tags:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}(),en=function(){var n=$r(Ur().m(function n(e){var r;return Ur().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,s(t.id,{category:e});case 1:n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to apply AI category:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}(),tn=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]};return o.useEffect(function(){var n=function(n){var e=n.target,t=e.closest(".action-button-compact, .inbox-card-menu-button"),r=e.closest(".dropdown-menu");t||r||(b(!1),E(!1))};if(v)return setTimeout(function(){document.addEventListener("click",n)},100),function(){return document.removeEventListener("click",n)}},[v]),(0,Rt.jsx)("div",{className:"inbox-card ".concat(A?"selected":""," ").concat(g?"compact":""),children:g?(0,Rt.jsxs)("div",{className:"inbox-card-compact",children:[(0,Rt.jsx)("div",{className:"inbox-card-checkbox",children:(0,Rt.jsx)("input",{type:"checkbox",checked:A,onChange:function(n){return H(n.target.checked)},"aria-label":"Select ".concat(t.title),title:"Select ".concat(t.title)})}),(0,Rt.jsxs)("div",{className:"inbox-card-compact-main",onClick:G,children:[(0,Rt.jsx)("div",{className:"inbox-card-compact-title",children:t.title}),(0,Rt.jsxs)("div",{className:"inbox-card-compact-meta",children:[(0,Rt.jsx)("span",{className:"link-domain",children:t.domain}),(0,Rt.jsx)("span",{className:"category-badge-compact",style:{backgroundColor:tn(t.domain)},children:t.category||"general"})]})]}),(0,Rt.jsxs)("div",{className:"inbox-card-compact-actions",children:[(0,Rt.jsx)("a",{href:t.url,target:"_blank",rel:"noopener noreferrer",className:"action-button-compact",title:"Open link",onClick:function(n){return n.stopPropagation()},children:(0,Rt.jsx)(Ot,{size:14})}),(0,Rt.jsxs)("div",{className:"dropdown",ref:g?W:void 0,children:[(0,Rt.jsx)("button",{onClick:V,className:"action-button-compact",title:"More options",children:(0,Rt.jsx)(Pr,{size:14})}),v&&(0,Rt.jsxs)("div",{className:"dropdown-menu",style:{top:q.top,left:q.left},children:[(0,Rt.jsxs)("button",{onClick:J,className:"dropdown-menu-item",disabled:F,children:[(0,Rt.jsx)(I,{size:14}),F?"Analyzing...":"AI Suggestions"]}),(0,Rt.jsxs)("button",{onClick:X,className:"dropdown-menu-item",children:[(0,Rt.jsx)(w,{size:14}),(0,Rt.jsx)("span",{children:"Add Tags"})]}),(0,Rt.jsxs)("button",{onClick:Z,className:"dropdown-menu-item",children:[(0,Rt.jsx)(Dt,{size:14}),(0,Rt.jsx)("span",{children:"Add Note"})]}),(0,Rt.jsxs)("button",{onClick:K,className:"dropdown-menu-item",children:[(0,Rt.jsx)(_,{size:14}),(0,Rt.jsx)("span",{children:"Archive"})]}),(0,Rt.jsxs)("button",{onClick:Q,className:"dropdown-menu-item delete-action",children:[(0,Rt.jsx)(Lt,{size:14}),(0,Rt.jsx)("span",{children:"Delete"})]})]})]})]})]}):(0,Rt.jsxs)("div",{className:"inbox-card-content",children:[(0,Rt.jsx)("div",{className:"inbox-card-checkbox",children:(0,Rt.jsx)("input",{type:"checkbox",checked:A,onChange:function(n){return H(n.target.checked)},"aria-label":"Select ".concat(t.title),title:"Select ".concat(t.title)})}),(0,Rt.jsxs)("div",{className:"inbox-card-main-content",children:[(0,Rt.jsxs)("div",{className:"inbox-card-favicon",children:[t.favicon?(0,Rt.jsx)("img",{src:t.favicon,alt:"",onError:function(n){var e=n.target;e.style.display="none";var t=e.nextElementSibling;t&&(t.style.display="flex")}}):null,(0,Rt.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:tn(t.domain),display:t.favicon?"none":"flex"},children:t.domain.charAt(0).toUpperCase()})]}),(0,Rt.jsxs)("div",{className:"inbox-card-body",children:[(0,Rt.jsxs)("div",{className:"inbox-card-header",children:[(0,Rt.jsxs)("div",{className:"inbox-card-title-section",children:[(0,Rt.jsx)("h3",{className:"inbox-card-title",onClick:G,children:t.title}),(0,Rt.jsxs)("div",{className:"inbox-card-domain",children:[t.domain," • ",(e=t.createdAt,new Date(e).toLocaleDateString("en-US",{month:"short",day:"numeric"}))]})]}),(0,Rt.jsxs)("div",{className:"inbox-card-actions",children:[(0,Rt.jsx)("a",{href:t.url,target:"_blank",rel:"noopener noreferrer",className:"inbox-card-link",title:"Open link",children:(0,Rt.jsx)(Ot,{size:14})}),(0,Rt.jsxs)("div",{className:"inbox-card-menu-container dropdown",ref:g?void 0:W,children:[(0,Rt.jsx)("button",{onClick:V,className:"inbox-card-menu-button",title:"More options",children:(0,Rt.jsx)(Pr,{size:14})}),v&&(0,Rt.jsxs)("div",{className:"dropdown-menu",style:{top:q.top,left:q.left},children:[(0,Rt.jsxs)("button",{onClick:J,className:"dropdown-menu-item",disabled:F,children:[(0,Rt.jsx)(I,{size:14}),F?"Analyzing...":"AI Suggestions"]}),(0,Rt.jsxs)("button",{onClick:X,className:"dropdown-menu-item",children:[(0,Rt.jsx)(w,{size:14}),(0,Rt.jsx)("span",{children:"Add Tags"})]}),(0,Rt.jsxs)("button",{onClick:Z,className:"dropdown-menu-item",children:[(0,Rt.jsx)(Dt,{size:14}),(0,Rt.jsx)("span",{children:"Add Note"})]}),(0,Rt.jsxs)("div",{className:"dropdown-submenu-container",children:[(0,Rt.jsxs)("button",{onClick:function(){return E(!y)},className:"dropdown-menu-item",children:[(0,Rt.jsx)(T,{size:14}),(0,Rt.jsx)("span",{children:"Move to Collection"})]}),y&&(0,Rt.jsxs)("div",{className:"dropdown-menu submenu",children:[(0,Rt.jsxs)("div",{className:"submenu-header",children:[(0,Rt.jsx)("span",{children:"Collections"}),(0,Rt.jsx)("button",{onClick:function(n){n.stopPropagation(),E(!1)},className:"submenu-close",title:"Close",children:(0,Rt.jsx)(u,{size:12})})]}),r.length>0?r.map(function(n){return(0,Rt.jsx)("button",{onClick:function(){return e=n.id,a(t.id,e),void b(!1);var e},className:"dropdown-menu-item",children:n.name},n.id)}):(0,Rt.jsx)("div",{className:"submenu-empty",children:"No collections"})]})]}),(0,Rt.jsxs)("button",{onClick:K,className:"dropdown-menu-item",children:[(0,Rt.jsx)(_,{size:14}),(0,Rt.jsx)("span",{children:"Archive"})]}),(0,Rt.jsxs)("button",{onClick:Q,className:"dropdown-menu-item delete-action",children:[(0,Rt.jsx)(Lt,{size:14}),(0,Rt.jsx)("span",{children:"Delete"})]})]})]})]})]}),(0,Rt.jsxs)("div",{className:"inbox-card-footer",children:[O&&L&&(0,Rt.jsx)(Fr,{analysis:L,onTagsApproved:nn,onCategoryApproved:en,onClose:function(){return P(!1)},isLoading:F}),t.highlights&&t.highlights.length>0&&(0,Rt.jsxs)("div",{className:"inbox-card-highlights",children:[(0,Rt.jsxs)("button",{onClick:function(){return z(!S)},className:"highlights-toggle",title:"".concat(S?"Hide":"Show"," highlights"),"aria-label":"".concat(S?"Hide":"Show"," ").concat(t.highlights.length," highlight").concat(1!==t.highlights.length?"s":""),children:[(0,Rt.jsxs)("span",{children:["🔗 ",t.highlights.length," highlight",1!==t.highlights.length?"s":""]}),(0,Rt.jsx)("span",{className:"highlights-chevron ".concat(S?"expanded":""),children:"▼"})]}),S&&(0,Rt.jsx)("div",{className:"inbox-highlights-list",style:{padding:"var(--space-3)",display:"flex",flexDirection:"column",gap:"var(--space-3)"},children:t.highlights.map(function(n){return(0,Rt.jsx)(Gt,{highlight:n},n.id)})})]}),t.aiSummary&&(0,Rt.jsx)("div",{className:"inbox-card-summary",children:(0,Rt.jsx)("p",{children:t.aiSummary})}),t.userNote&&(0,Rt.jsx)("div",{className:"inbox-card-note",children:(0,Rt.jsx)("p",{children:t.userNote})}),x&&(0,Rt.jsx)("div",{className:"inbox-card-tags",children:(0,Rt.jsx)(qt,{linkId:t.id,onTagsUpdated:function(){l(),k(!1)},onCancel:function(){return k(!1)}})})]})]})]})]})})};function Vr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Kr(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Kr(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Kr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Kr(d,"constructor",l),Kr(l,"constructor",c),c.displayName="GeneratorFunction",Kr(l,a,"GeneratorFunction"),Kr(d),Kr(d,a,"Generator"),Kr(d,r,function(){return this}),Kr(d,"toString",function(){return"[object Generator]"}),(Vr=function(){return{w:o,m:A}})()}function Kr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Kr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Kr(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Kr(n,e,t,r)}function Qr(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Zr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Xr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Jr=function(n){var e=n.isOpen,t=n.onClose,r=n.links,a=n.collections,i=n.onOpenLink,s=n.onAddToCollection,c=n.onCreateCollection,u=n.onSaveCurrentPage,d=n.onAddNote,A=n.onOpenTabSync,p=Zr((0,o.useState)(""),2),f=p[0],g=p[1],m=Zr((0,o.useState)(0),2),v=m[0],b=m[1],C=Zr((0,o.useState)([]),2),y=C[0],B=C[1],x=(0,o.useRef)(null),k=(0,o.useRef)(null),w=(0,o.useCallback)(function(n){var e,o,s=[];return s.push({id:"save-current",type:"action",title:"Save Current Page",subtitle:"Add the current browser tab to Nest",icon:(0,Rt.jsx)(h,{size:16}),action:function(){u(),t()},keywords:["save","add","current","page","bookmark"]}),s.push({id:"create-collection",type:"action",title:"Create New Collection",subtitle:"Organize your links into collections",icon:(0,Rt.jsx)(T,{size:16}),action:function(){c(),t()},keywords:["create","collection","folder","organize"]}),s.push({id:"tab-sync",type:"action",title:"Tab Sync Mode",subtitle:"View and save open browser tabs",icon:(0,Rt.jsx)(l,{size:16}),action:function(){A(),t()},keywords:["tab","sync","browser","open","tabs","save"]}),s.push({id:"floating-window",type:"action",title:"Open Floating Window",subtitle:"Open Nest in a floating window (like Raycast)",icon:(0,Rt.jsx)(Ot,{size:16}),action:(e=Vr().m(function n(){var e;return Vr().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"openFloatingWindow"});case 1:t(),n.n=3;break;case 2:n.p=2,e=n.v,console.error("Failed to open floating window:",e);case 3:return n.a(2)}},n,null,[[0,2]])}),o=function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(n){Qr(o,r,a,i,s,"next",n)}function s(n){Qr(o,r,a,i,s,"throw",n)}i(void 0)})},function(){return o.apply(this,arguments)}),keywords:["floating","window","popup","raycast","detached"]}),a.forEach(function(n){var e;s.push({id:"collection-".concat(n.id),type:"collection",title:n.name,subtitle:"Collection • ".concat(r.filter(function(e){return e.collectionId===n.id}).length," links"),icon:(0,Rt.jsx)(_,{size:16}),action:function(){t()},keywords:["collection",n.name.toLowerCase(),null===(e=n.description)||void 0===e?void 0:e.toLowerCase()],collection:n})}),(n.trim()?j(r,n):r.slice(0,10)).forEach(function(n){var e;s.push({id:"link-".concat(n.id),type:"link",title:n.title,subtitle:"".concat(n.domain," • ").concat(n.userNote?"Has note":"No note"),icon:(0,Rt.jsx)(Ot,{size:16}),action:function(){i(n.url),t()},keywords:[n.title.toLowerCase(),n.domain.toLowerCase(),n.userNote.toLowerCase(),(null===(e=n.aiSummary)||void 0===e?void 0:e.toLowerCase())||"",n.category.toLowerCase()],link:n})}),n.trim()?s.filter(function(e){var t,r;return e.title.toLowerCase().includes(n.toLowerCase())||(null===(t=e.subtitle)||void 0===t?void 0:t.toLowerCase().includes(n.toLowerCase()))||(null===(r=e.keywords)||void 0===r?void 0:r.some(function(e){return e.includes(n.toLowerCase())}))}):s.slice(0,12)},[r,a,i,s,c,u,d,A,t]),j=function(n,e){var t=e.toLowerCase();return n.map(function(n){var e,r=0,a=n.title.toLowerCase(),o=n.domain.toLowerCase(),i=n.userNote.toLowerCase(),s=(null===(e=n.aiSummary)||void 0===e?void 0:e.toLowerCase())||"";return a.includes(t)&&(r+=10),o.includes(t)&&(r+=5),i.includes(t)&&(r+=8),s.includes(t)&&(r+=6),{link:n,score:r+=S(a,t)}}).filter(function(n){return n.score>0}).sort(function(n,e){return e.score-n.score}).slice(0,8).map(function(n){return n.link})},S=function(n,e){for(var t=0,r=0,a=0;a<e.length;a++){var o=e[a],i=n.indexOf(o,r);if(-1===i)return 0;var s=i-r;t+=Math.max(0,10-s),r=i+1}return t};return(0,o.useEffect)(function(){var n=w(f);B(n),b(0)},[f,w]),(0,o.useEffect)(function(){var n=function(n){if(e)switch(n.key){case"ArrowDown":n.preventDefault(),b(function(n){return Math.min(n+1,y.length-1)});break;case"ArrowUp":n.preventDefault(),b(function(n){return Math.max(n-1,0)});break;case"Enter":n.preventDefault(),y[v]&&y[v].action();break;case"Escape":n.preventDefault(),t()}};return document.addEventListener("keydown",n),function(){return document.removeEventListener("keydown",n)}},[e,y,v,t]),(0,o.useEffect)(function(){e&&x.current&&(x.current.focus(),g(""),b(0))},[e]),(0,o.useEffect)(function(){if(k.current&&y.length>0){var n=k.current.children[v];n&&n.scrollIntoView({block:"nearest",behavior:"smooth"})}},[v,y]),e?(0,Rt.jsx)("div",{className:"modal-overlay command-palette-overlay",onClick:t,children:(0,Rt.jsxs)("div",{className:"command-palette",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsx)("div",{className:"command-palette-header",children:(0,Rt.jsxs)("div",{className:"command-palette-search",children:[(0,Rt.jsx)(E,{size:18,className:"command-palette-search-icon"}),(0,Rt.jsx)("input",{ref:x,type:"text",placeholder:"Search links, collections, or commands...",value:f,onChange:function(n){return g(n.target.value)},className:"command-palette-input"})]})}),(0,Rt.jsx)("div",{className:"command-palette-content",ref:k,children:0===y.length?(0,Rt.jsx)("div",{className:"command-palette-empty",children:(0,Rt.jsx)("p",{children:"No results found"})}):y.map(function(n,e){return(0,Rt.jsxs)("div",{className:"command-palette-item ".concat(e===v?"selected":""),onClick:function(){return n.action()},onMouseEnter:function(){return b(e)},children:[(0,Rt.jsx)("div",{className:"command-palette-item-icon",children:n.icon}),(0,Rt.jsxs)("div",{className:"command-palette-item-content",children:[(0,Rt.jsx)("div",{className:"command-palette-item-title",children:n.title}),n.subtitle&&(0,Rt.jsx)("div",{className:"command-palette-item-subtitle",children:n.subtitle})]})]},n.id)})}),(0,Rt.jsx)("div",{className:"command-palette-footer",children:(0,Rt.jsxs)("div",{className:"command-palette-tips",children:[(0,Rt.jsxs)("span",{children:[(0,Rt.jsx)("kbd",{children:"↑"}),(0,Rt.jsx)("kbd",{children:"↓"})," to navigate"]}),(0,Rt.jsxs)("span",{children:[(0,Rt.jsx)("kbd",{children:"↵"})," to select"]}),(0,Rt.jsxs)("span",{children:[(0,Rt.jsx)("kbd",{children:"esc"})," to close"]})]})})]})}):null},na=c("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]),ea=c("Square",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}]]),ta=c("Monitor",[["rect",{width:"20",height:"14",x:"2",y:"3",rx:"2",key:"48i651"}],["line",{x1:"8",x2:"16",y1:"21",y2:"21",key:"1svkeh"}],["line",{x1:"12",x2:"12",y1:"17",y2:"21",key:"vw1qmm"}]]);function ra(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return aa(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(aa(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,aa(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,aa(d,"constructor",l),aa(l,"constructor",c),c.displayName="GeneratorFunction",aa(l,a,"GeneratorFunction"),aa(d),aa(d,a,"Generator"),aa(d,r,function(){return this}),aa(d,"toString",function(){return"[object Generator]"}),(ra=function(){return{w:o,m:A}})()}function aa(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}aa=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){aa(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},aa(n,e,t,r)}function oa(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function ia(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){oa(o,r,a,i,s,"next",n)}function s(n){oa(o,r,a,i,s,"throw",n)}i(void 0)})}}function sa(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return ca(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ca(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ca(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const la=function(n){var e=n.isOpen,t=n.onClose,r=n.collections,a=n.onSaveTabs,i=sa((0,o.useState)([]),2),s=i[0],c=i[1],l=sa((0,o.useState)(!1),2),d=l[0],A=l[1],p=sa((0,o.useState)(new Set),2),h=p[0],g=p[1],m=sa((0,o.useState)({}),2),v=m[0],b=m[1],C=sa((0,o.useState)(!1),2),y=C[0],E=C[1],B=sa((0,o.useState)(!1),2),x=B[0],k=B[1],w=sa((0,o.useState)(""),2),j=w[0],S=w[1];(0,o.useEffect)(function(){e&&I()},[e]),(0,o.useEffect)(function(){var n=s.reduce(function(n,e){return n[e.windowId]||(n[e.windowId]=[]),n[e.windowId].push(e),n},{});b(n)},[s]);var z,I=function(){var n=ia(ra().m(function n(){var e,t,r;return ra().w(function(n){for(;;)switch(n.n){case 0:return A(!0),n.p=1,n.n=2,chrome.tabs.query({});case 2:e=n.v,t=e.filter(function(n){return n.url&&!n.url.startsWith("chrome://")&&!n.url.startsWith("chrome-extension://")}).map(function(n){return{id:n.id,title:n.title||"Untitled",url:n.url,favicon:n.favIconUrl,windowId:n.windowId,index:n.index,active:n.active,domain:new URL(n.url).hostname,pinned:n.pinned}}),c(t),g(new Set),n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load tabs:",r);case 4:return n.p=4,A(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),T=function(){return s.filter(function(n){return!(x&&!n.pinned||j&&!n.domain.toLowerCase().includes(j.toLowerCase()))})},O=function(){var n=ia(ra().m(function n(e,t){var r,o;return ra().w(function(n){for(;;)switch(n.n){case 0:if(0!==h.size){n.n=1;break}return n.a(2);case 1:return E(!0),n.p=2,r=s.filter(function(n){return h.has(n.id)}),n.n=3,a(r,e,t);case 3:g(new Set),n.n=5;break;case 4:n.p=4,o=n.v,console.error("Failed to save tabs:",o);case 5:return n.p=5,E(!1),n.f(5);case 6:return n.a(2)}},n,null,[[2,4,5,6]])}));return function(e,t){return n.apply(this,arguments)}}(),P=function(){var n=ia(ra().m(function n(e,t,r){var o;return ra().w(function(n){for(;;)switch(n.n){case 0:return E(!0),n.p=1,n.n=2,a([e],t,r);case 2:n.n=4;break;case 3:n.p=3,o=n.v,console.error("Failed to save tab:",o);case 4:return n.p=4,E(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(e,t,r){return n.apply(this,arguments)}}(),D=T(),L=(z={},s.forEach(function(n){z[n.domain]=(z[n.domain]||0)+1}),Object.entries(z).sort(function(n,e){var t=sa(n,2)[1];return sa(e,2)[1]-t}).slice(0,5));return e?(0,Rt.jsx)("div",{className:"tab-sync-overlay",onClick:t,children:(0,Rt.jsxs)("div",{className:"tab-sync-modal",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"tab-sync-header",children:[(0,Rt.jsxs)("div",{className:"tab-sync-title",children:[(0,Rt.jsx)(f,{size:20}),(0,Rt.jsx)("h2",{children:"Tab Sync Mode"}),(0,Rt.jsxs)("span",{className:"tab-count",children:[s.length," open tabs"]})]}),(0,Rt.jsxs)("div",{className:"tab-sync-actions",children:[(0,Rt.jsx)("button",{onClick:I,className:"tab-sync-refresh",disabled:d,title:"Refresh tabs",children:(0,Rt.jsx)(na,{size:16,className:d?"spinning":""})}),(0,Rt.jsx)("button",{onClick:t,className:"tab-sync-close",title:"Close",children:(0,Rt.jsx)(u,{size:16})})]})]}),(0,Rt.jsxs)("div",{className:"tab-sync-filters",children:[(0,Rt.jsxs)("div",{className:"tab-sync-filter-row",children:[(0,Rt.jsxs)("label",{className:"tab-sync-filter-checkbox",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:x,onChange:function(n){return k(n.target.checked)}}),"Show only pinned tabs"]}),(0,Rt.jsx)("input",{type:"text",placeholder:"Filter by domain...",value:j,onChange:function(n){return S(n.target.value)},className:"tab-sync-domain-filter"})]}),L.length>0&&(0,Rt.jsxs)("div",{className:"tab-sync-domain-pills",children:[(0,Rt.jsx)("span",{className:"domain-pills-label",children:"Quick filters:"}),L.map(function(n){var e=sa(n,2),t=e[0],r=e[1];return(0,Rt.jsxs)("button",{onClick:function(){return S(j===t?"":t)},className:"domain-pill ".concat(j===t?"active":""),children:[t," (",r,")"]},t)})]})]}),(0,Rt.jsxs)("div",{className:"tab-sync-bulk-actions",children:[(0,Rt.jsxs)("button",{onClick:function(){var n=T();h.size===n.length?g(new Set):g(new Set(n.map(function(n){return n.id})))},className:"bulk-action-btn",title:h.size===D.length?"Deselect all":"Select all",children:[h.size===D.length?(0,Rt.jsx)(ea,{size:16}):(0,Rt.jsx)(N,{size:16}),h.size===D.length?"Deselect All":"Select All"]}),h.size>0&&(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsxs)("button",{onClick:function(){return O(void 0,!0)},className:"bulk-action-btn primary",disabled:y,children:[(0,Rt.jsx)(_,{size:16}),"Save to Inbox (",h.size,")"]}),(0,Rt.jsxs)("select",{onChange:function(n){n.target.value&&(O(n.target.value),n.target.value="")},className:"bulk-collection-select",disabled:y,title:"Save selected tabs to collection","aria-label":"Save selected tabs to collection",children:[(0,Rt.jsx)("option",{value:"",children:"Save to Collection..."}),r.map(function(n){return(0,Rt.jsx)("option",{value:n.id,children:n.name},n.id)})]})]})]}),(0,Rt.jsx)("div",{className:"tab-sync-content",children:d?(0,Rt.jsxs)("div",{className:"tab-sync-loading",children:[(0,Rt.jsx)(na,{size:24,className:"spinning"}),(0,Rt.jsx)("p",{children:"Loading tabs..."})]}):0===Object.keys(v).length?(0,Rt.jsxs)("div",{className:"tab-sync-empty",children:[(0,Rt.jsx)(ta,{size:48}),(0,Rt.jsx)("h3",{children:"No tabs found"}),(0,Rt.jsx)("p",{children:"Open some tabs and refresh to see them here"})]}):Object.entries(v).map(function(n){var e=sa(n,2),t=e[0],a=e[1];return(0,Rt.jsxs)("div",{className:"tab-window-group",children:[(0,Rt.jsx)("div",{className:"tab-window-header",children:(0,Rt.jsxs)("button",{onClick:function(){return function(n){var e=(v[n]||[]).map(function(n){return n.id}),t=new Set(h);e.every(function(n){return t.has(n)})?e.forEach(function(n){return t.delete(n)}):e.forEach(function(n){return t.add(n)}),g(t)}(parseInt(t))},className:"window-select-btn",children:[(0,Rt.jsx)(ta,{size:16}),"Window ",t," (",a.length," tabs)"]})}),(0,Rt.jsx)("div",{className:"tab-list",children:a.filter(function(n){return!(x&&!n.pinned||j&&!n.domain.toLowerCase().includes(j.toLowerCase()))}).map(function(n){return(0,Rt.jsxs)("div",{className:"tab-item ".concat(h.has(n.id)?"selected":""," ").concat(n.active?"active":""),children:[(0,Rt.jsxs)("div",{className:"tab-item-content",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:h.has(n.id),onChange:function(){return e=n.id,(t=new Set(h)).has(e)?t.delete(e):t.add(e),void g(t);var e,t},className:"tab-checkbox",title:"Select ".concat(n.title),"aria-label":"Select ".concat(n.title)}),(0,Rt.jsx)("img",{src:n.favicon||"https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=16"),alt:"favicon",className:"tab-favicon",onError:function(e){e.target.src="https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=16")}}),(0,Rt.jsxs)("div",{className:"tab-info",children:[(0,Rt.jsxs)("div",{className:"tab-title",children:[n.pinned&&(0,Rt.jsx)("span",{className:"tab-pin-indicator",children:"📌"}),n.title,n.active&&(0,Rt.jsx)("span",{className:"tab-active-indicator",children:"•"})]}),(0,Rt.jsx)("div",{className:"tab-url",children:n.domain})]})]}),(0,Rt.jsxs)("div",{className:"tab-actions",children:[(0,Rt.jsx)("button",{onClick:function(){return P(n,void 0,!0)},className:"tab-action-btn",title:"Save to inbox",disabled:y,children:(0,Rt.jsx)(_,{size:14})}),(0,Rt.jsxs)("select",{onChange:function(e){e.target.value&&(P(n,e.target.value),e.target.value="")},className:"tab-collection-select",disabled:y,title:"Save to collection","aria-label":"Save to collection",children:[(0,Rt.jsx)("option",{value:"",children:"📁"}),r.map(function(n){return(0,Rt.jsx)("option",{value:n.id,children:n.name},n.id)})]}),(0,Rt.jsx)("a",{href:n.url,target:"_blank",rel:"noopener noreferrer",className:"tab-action-btn",title:"Open tab",children:(0,Rt.jsx)(Ot,{size:14})})]})]},n.id)})})]},t)})}),(0,Rt.jsx)("div",{className:"tab-sync-footer",children:(0,Rt.jsxs)("div",{className:"tab-sync-stats",children:[(0,Rt.jsxs)("span",{children:[h.size," of ",D.length," tabs selected"]}),j&&(0,Rt.jsxs)("span",{children:['• Filtered by "',j,'"']}),x&&(0,Rt.jsx)("span",{children:"• Pinned only"})]})})]})}):null};function ua(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const da=function(n){var e,t,r=n.link,a=n.onSave,i=n.onClose,s=(e=(0,o.useState)(r.userNote||""),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(e,t)||function(n,e){if(n){if("string"==typeof n)return ua(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ua(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=s[0],l=s[1];return(0,Rt.jsx)("div",{className:"modal-overlay",onClick:i,children:(0,Rt.jsxs)("div",{className:"modal-content",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsx)("h2",{className:"modal-title",children:"Add Note"}),(0,Rt.jsx)("button",{onClick:i,className:"modal-close-button",title:"Close",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsxs)("form",{onSubmit:function(n){n.preventDefault(),a(c)},children:[(0,Rt.jsx)("div",{className:"modal-body",children:(0,Rt.jsxs)("div",{className:"form-group",children:[(0,Rt.jsx)("label",{htmlFor:"note",children:"Your Note"}),(0,Rt.jsx)("textarea",{id:"note",value:c,onChange:function(n){return l(n.target.value)},placeholder:"Add a note about why you saved this link...",rows:6,autoFocus:!0})]})}),(0,Rt.jsxs)("div",{className:"modal-footer",children:[(0,Rt.jsx)("button",{type:"button",onClick:i,className:"button",children:"Cancel"}),(0,Rt.jsx)("button",{type:"submit",className:"button primary",children:"Save Note"})]})]})]})})};function Aa(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return pa(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?pa(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pa(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const fa=function(n){var e=n.onSave,t=n.onClose,r=Aa((0,o.useState)(""),2),a=r[0],i=r[1],s=Aa((0,o.useState)(""),2),c=s[0],l=s[1];return(0,Rt.jsx)("div",{className:"modal-overlay",onClick:t,children:(0,Rt.jsxs)("div",{className:"modal-content",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsx)("h2",{className:"modal-title",children:"Create Collection"}),(0,Rt.jsx)("button",{onClick:t,className:"modal-close-button",title:"Close",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsxs)("form",{onSubmit:function(n){n.preventDefault(),a.trim()&&e(a.trim(),c.trim()||void 0)},children:[(0,Rt.jsxs)("div",{className:"modal-body",children:[(0,Rt.jsxs)("div",{className:"form-group",children:[(0,Rt.jsx)("label",{htmlFor:"collection-name",children:"Collection Name"}),(0,Rt.jsx)("input",{id:"collection-name",type:"text",value:a,onChange:function(n){return i(n.target.value)},placeholder:"e.g. Design Inspiration",required:!0,autoFocus:!0})]}),(0,Rt.jsxs)("div",{className:"form-group",children:[(0,Rt.jsx)("label",{htmlFor:"collection-description",children:"Description (optional)"}),(0,Rt.jsx)("textarea",{id:"collection-description",value:c,onChange:function(n){return l(n.target.value)},placeholder:"A short description of this collection",rows:3})]})]}),(0,Rt.jsxs)("div",{className:"modal-footer",children:[(0,Rt.jsx)("button",{type:"button",onClick:t,className:"button",children:"Cancel"}),(0,Rt.jsx)("button",{type:"submit",className:"button primary",disabled:!a.trim(),children:"Create Collection"})]})]})]})})},ha=c("BookOpen",[["path",{d:"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z",key:"vv98re"}],["path",{d:"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z",key:"1cyq3y"}]]),ga=c("Target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]]),ma=c("Lightbulb",[["path",{d:"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5",key:"1gvzjb"}],["path",{d:"M9 18h6",key:"x1upvd"}],["path",{d:"M10 22h4",key:"ceow96"}]]),va=c("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]]);function ba(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||Ca(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ca(n,e){if(n){if("string"==typeof n)return ya(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ya(n,e):void 0}}function ya(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Ea=function(n){var e=n.isOpen,t=n.onSave,r=n.onSkip,a=n.onClose,i=n.linkTitle,s=void 0===i?"this link":i,c=n.linkUrl,d=void 0===c?"":c,A=ba((0,o.useState)(""),2),p=A[0],f=A[1],h=ba((0,o.useState)(""),2),g=h[0],v=h[1],b=ba((0,o.useState)([]),2),C=b[0],y=b[1],E=ba((0,o.useState)([]),2),B=E[0],x=E[1],k=[{id:"learn",label:"To Learn",icon:(0,Rt.jsx)(ha,{size:16}),description:"I want to study this topic or skill",suggestedTags:["learning","tutorial","education"]},{id:"reference",label:"For Reference",icon:(0,Rt.jsx)(l,{size:16}),description:"I might need this information later",suggestedTags:["reference","documentation","resource"]},{id:"project",label:"For a Project",icon:(0,Rt.jsx)(ga,{size:16}),description:"This relates to a current or future project",suggestedTags:["project","work","implementation"]},{id:"inspiration",label:"For Inspiration",icon:(0,Rt.jsx)(ma,{size:16}),description:"This gives me ideas or creative inspiration",suggestedTags:["inspiration","ideas","creative"]},{id:"later",label:"Read Later",icon:(0,Rt.jsx)(va,{size:16}),description:"I don't have time now but want to read this",suggestedTags:["read-later","queue","pending"]},{id:"research",label:"For Research",icon:(0,Rt.jsx)(m,{size:16}),description:"This is part of my research on a topic",suggestedTags:["research","analysis","study"]}];(0,o.useEffect)(function(){if(p){var n=k.find(function(n){return n.id===p});n&&(y(n.suggestedTags),x(n.suggestedTags.slice(0,2)))}},[p]);var w=p||g.trim();return e?(0,Rt.jsx)("div",{className:"modal-overlay",onClick:a,children:(0,Rt.jsxs)("div",{className:"modal-content save-prompt-modal",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsx)("h2",{className:"modal-title",children:"Why are you saving this?"}),(0,Rt.jsx)("button",{onClick:a,className:"modal-close-button",title:"Close",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsxs)("div",{className:"modal-body",children:[(0,Rt.jsxs)("div",{className:"save-prompt-link-preview",children:[(0,Rt.jsx)("div",{className:"link-preview-title",children:s}),d&&(0,Rt.jsx)("div",{className:"link-preview-url",children:new URL(d).hostname})]}),(0,Rt.jsxs)("div",{className:"save-reasons-section",children:[(0,Rt.jsx)("h3",{children:"Select a reason:"}),(0,Rt.jsx)("div",{className:"save-reasons-grid",children:k.map(function(n){return(0,Rt.jsxs)("button",{onClick:function(){return e=n.id,f(e),void v("");var e},className:"save-reason-card ".concat(p===n.id?"selected":""),children:[(0,Rt.jsx)("div",{className:"save-reason-icon",children:n.icon}),(0,Rt.jsxs)("div",{className:"save-reason-content",children:[(0,Rt.jsx)("div",{className:"save-reason-label",children:n.label}),(0,Rt.jsx)("div",{className:"save-reason-description",children:n.description})]})]},n.id)})})]}),(0,Rt.jsxs)("div",{className:"custom-reason-section",children:[(0,Rt.jsx)("h3",{children:"Or write your own reason:"}),(0,Rt.jsx)("textarea",{value:g,onChange:function(n){return e=n.target.value,v(e),void(e.trim()&&f(""));var e},placeholder:"I'm saving this because...",className:"custom-reason-input",rows:3})]}),C.length>0&&(0,Rt.jsxs)("div",{className:"suggested-tags-section",children:[(0,Rt.jsx)("h3",{children:"Suggested tags:"}),(0,Rt.jsx)("div",{className:"suggested-tags",children:C.map(function(n){return(0,Rt.jsx)("button",{onClick:function(){return function(n){x(function(e){return e.includes(n)?e.filter(function(e){return e!==n}):[].concat(function(n){if(Array.isArray(n))return ya(n)}(t=e)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||Ca(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[n]);var t})}(n)},className:"suggested-tag ".concat(B.includes(n)?"selected":""),children:n},n)})})]}),(0,Rt.jsxs)("div",{className:"save-prompt-tip",children:[(0,Rt.jsx)(ma,{size:16}),(0,Rt.jsx)("span",{children:"Adding context helps you find and use your saved links more effectively!"})]})]}),(0,Rt.jsxs)("div",{className:"modal-footer",children:[(0,Rt.jsx)("button",{onClick:r,className:"button",children:"Skip for now"}),(0,Rt.jsx)("button",{onClick:function(){var n,e=g.trim()||(null===(n=k.find(function(n){return n.id===p}))||void 0===n?void 0:n.description)||"Saved for later reference";t(e,B)},className:"button primary",disabled:!w,children:"Save with context"})]})]})}):null},Ba=c("Calendar",[["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",ry:"2",key:"eu3xkr"}],["line",{x1:"16",x2:"16",y1:"2",y2:"6",key:"m3sa8f"}],["line",{x1:"8",x2:"8",y1:"2",y2:"6",key:"18kwsl"}],["line",{x1:"3",x2:"21",y1:"10",y2:"10",key:"xt86sb"}]]),xa=c("Star",[["polygon",{points:"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2",key:"8f66p6"}]]),ka=c("User",[["path",{d:"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2",key:"975kel"}],["circle",{cx:"12",cy:"7",r:"4",key:"17ys0d"}]]);function wa(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return ja(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(ja(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,ja(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,ja(d,"constructor",l),ja(l,"constructor",c),c.displayName="GeneratorFunction",ja(l,a,"GeneratorFunction"),ja(d),ja(d,a,"Generator"),ja(d,r,function(){return this}),ja(d,"toString",function(){return"[object Generator]"}),(wa=function(){return{w:o,m:A}})()}function ja(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}ja=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){ja(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},ja(n,e,t,r)}function Sa(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function za(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){Sa(o,r,a,i,s,"next",n)}function s(n){Sa(o,r,a,i,s,"throw",n)}i(void 0)})}}function Na(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ia(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ia(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ia(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const _a=function(n){var e=n.link,t=n.collections,r=n.onClose,a=(n.onUpdate,n.onDelete,n.onAddNote),i=Na((0,o.useState)([]),2),s=i[0],c=i[1],d=Na((0,o.useState)(!1),2),A=d[0],p=d[1],f=Na((0,o.useState)(null),2),h=f[0],g=f[1];(0,o.useEffect)(function(){v(),b()},[e.id]);var m,v=function(){var n=za(wa().m(function n(){var t,r;return wa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getLinkTags(e.id);case 1:t=n.v,c(t),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load link tags:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),b=function(){if(e.collectionId){var n=t.find(function(n){return n.id===e.collectionId});g(n||null)}else g(null)},C=function(){var n=za(wa().m(function n(){var t;return wa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,navigator.clipboard.writeText(e.url);case 1:p(!0),setTimeout(function(){return p(!1)},2e3),n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to copy URL:",t);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),y=function(){chrome.tabs.create({url:e.url})},E=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]};return(0,Rt.jsx)("div",{className:"modal-overlay",onClick:r,children:(0,Rt.jsxs)("div",{className:"modal-content link-detail-modal",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsxs)("div",{className:"link-detail-header",children:[(0,Rt.jsx)("div",{className:"link-detail-favicon",children:e.favicon?(0,Rt.jsx)("img",{src:e.favicon,alt:"",width:"24",height:"24"}):(0,Rt.jsx)("div",{className:"favicon-placeholder",children:(0,Rt.jsx)(ir,{size:16})})}),(0,Rt.jsxs)("div",{className:"link-detail-title-section",children:[(0,Rt.jsx)("h2",{className:"modal-title",children:e.title}),(0,Rt.jsx)("div",{className:"link-detail-domain",children:e.domain})]})]}),(0,Rt.jsx)("button",{onClick:r,className:"modal-close-button",title:"Close",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsxs)("div",{className:"modal-body",children:[(0,Rt.jsxs)("div",{className:"link-detail-section",children:[(0,Rt.jsxs)("div",{className:"link-detail-section-header",children:[(0,Rt.jsx)(Ot,{size:16}),(0,Rt.jsx)("span",{children:"URL"})]}),(0,Rt.jsxs)("div",{className:"link-detail-url-container",children:[(0,Rt.jsx)("input",{type:"text",value:e.url,readOnly:!0,className:"link-detail-url",title:"Link URL"}),(0,Rt.jsxs)("div",{className:"link-detail-url-actions",children:[(0,Rt.jsx)("button",{onClick:C,className:"action-button ".concat(A?"copied":""),title:"Copy URL",children:A?(0,Rt.jsx)(ur,{size:16}):(0,Rt.jsx)(dr,{size:16})}),(0,Rt.jsx)("button",{onClick:y,className:"action-button primary",title:"Open link",children:(0,Rt.jsx)(Ot,{size:16})})]})]})]}),(0,Rt.jsxs)("div",{className:"link-detail-section",children:[(0,Rt.jsxs)("div",{className:"link-detail-section-header",children:[(0,Rt.jsx)(Ba,{size:16}),(0,Rt.jsx)("span",{children:"Information"})]}),(0,Rt.jsxs)("div",{className:"link-detail-metadata",children:[(0,Rt.jsxs)("div",{className:"metadata-item",children:[(0,Rt.jsx)(va,{size:14}),(0,Rt.jsxs)("span",{children:["Added ",(m=e.createdAt,new Date(m).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"}))]})]}),h&&(0,Rt.jsxs)("div",{className:"metadata-item",children:[(0,Rt.jsx)(l,{size:14}),(0,Rt.jsxs)("span",{children:["In collection: ",h.name]})]}),e.category&&(0,Rt.jsxs)("div",{className:"metadata-item",children:[(0,Rt.jsx)(xa,{size:14}),(0,Rt.jsxs)("span",{children:["Category: ",e.category]})]})]})]}),s.length>0&&(0,Rt.jsxs)("div",{className:"link-detail-section",children:[(0,Rt.jsxs)("div",{className:"link-detail-section-header",children:[(0,Rt.jsx)(w,{size:16}),(0,Rt.jsx)("span",{children:"Tags"})]}),(0,Rt.jsx)("div",{className:"link-detail-tags",children:s.map(function(n){return(0,Rt.jsx)("span",{className:"link-detail-tag",style:{backgroundColor:E(n.name)},children:n.name},n.id||n.name)})})]}),e.userNote&&(0,Rt.jsxs)("div",{className:"link-detail-section",children:[(0,Rt.jsxs)("div",{className:"link-detail-section-header",children:[(0,Rt.jsx)(Dt,{size:16}),(0,Rt.jsx)("span",{children:"Your Note"})]}),(0,Rt.jsx)("div",{className:"link-detail-note",children:(0,Rt.jsx)("p",{children:e.userNote})})]}),e.aiSummary&&(0,Rt.jsxs)("div",{className:"link-detail-section",children:[(0,Rt.jsxs)("div",{className:"link-detail-section-header",children:[(0,Rt.jsx)(ka,{size:16}),(0,Rt.jsx)("span",{children:"AI Summary"})]}),(0,Rt.jsx)("div",{className:"link-detail-summary",children:(0,Rt.jsx)("p",{children:e.aiSummary})})]}),e.highlights&&e.highlights.length>0&&(0,Rt.jsxs)("div",{className:"link-detail-section",children:[(0,Rt.jsxs)("div",{className:"link-detail-section-header",children:[(0,Rt.jsx)(xa,{size:16}),(0,Rt.jsxs)("span",{children:["Highlights (",e.highlights.length,")"]})]}),(0,Rt.jsx)("div",{className:"link-detail-highlights",children:e.highlights.map(function(n){return(0,Rt.jsxs)("div",{className:"highlight-item",children:[(0,Rt.jsxs)("div",{className:"highlight-text",children:['"',n.text,'"']}),n.userNote&&(0,Rt.jsx)("div",{className:"highlight-note",children:n.userNote})]},n.id)})})]})]}),(0,Rt.jsxs)("div",{className:"modal-footer",children:[(0,Rt.jsxs)("button",{onClick:function(){return a(e)},className:"modal-button",children:[(0,Rt.jsx)(Dt,{size:16}),e.userNote?"Edit Note":"Add Note"]}),(0,Rt.jsxs)("button",{onClick:y,className:"modal-button primary",children:[(0,Rt.jsx)(Ot,{size:16}),"Open Link"]})]})]})})},Ta=function(n){var e=n.tags,t=n.selectedTag,r=n.onTagSelect,a=n.loading,o=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]};return void 0!==a&&a?(0,Rt.jsx)("div",{className:"tag-filters",children:(0,Rt.jsx)("div",{className:"tag-filter-skeleton",children:"Loading tags..."})}):0===e.length?null:(0,Rt.jsxs)("div",{className:"tag-filters",children:[t&&(0,Rt.jsxs)("button",{onClick:function(){return r(null)},className:"tag-filter active",title:"Clear tag filter",children:[(0,Rt.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:o(t)}}),t,(0,Rt.jsx)(u,{size:12})]}),e.filter(function(n){return n.name!==t}).sort(function(n,e){return e.usageCount-n.usageCount}).slice(0,10).map(function(n){return(0,Rt.jsxs)("button",{onClick:function(){return r(n.name)},className:"tag-filter",title:"Filter by ".concat(n.name," tag"),children:[(0,Rt.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:o(n.name)}}),n.name,(0,Rt.jsx)("span",{className:"tag-filter-count",children:n.usageCount})]},n.id)}),e.length>10&&!t&&(0,Rt.jsxs)("span",{className:"tag-filter-more",children:["+",e.length-10," more"]})]})},Oa=c("Palette",[["circle",{cx:"13.5",cy:"6.5",r:".5",key:"1xcu5"}],["circle",{cx:"17.5",cy:"10.5",r:".5",key:"736e4u"}],["circle",{cx:"8.5",cy:"7.5",r:".5",key:"clrty"}],["circle",{cx:"6.5",cy:"12.5",r:".5",key:"1s4xz9"}],["path",{d:"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",key:"12rzf8"}]]),Pa=c("Mail",[["rect",{width:"20",height:"16",x:"2",y:"4",rx:"2",key:"18n3k1"}],["path",{d:"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7",key:"1ocrg3"}]]),Da=c("Database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]),La=c("ChevronLeft",[["path",{d:"m15 18-6-6 6-6",key:"1wnfg3"}]]),Ra=c("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]),Ma=c("HelpCircle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3",key:"1u773s"}],["path",{d:"M12 17h.01",key:"p32p05"}]]),Fa=c("Send",[["path",{d:"m22 2-7 20-4-9-9-4Z",key:"1q3vgg"}],["path",{d:"M22 2 11 13",key:"nzbqef"}]]);var Ua=a(508);function Ya(n){return Ya="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ya(n)}function qa(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=Wa(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,a=function(){};return{s:a,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return i=n.done,n},e:function(n){s=!0,o=n},f:function(){try{i||null==t.return||t.return()}finally{if(s)throw o}}}}function $a(n){return function(n){if(Array.isArray(n))return Ga(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Wa(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wa(n,e){if(n){if("string"==typeof n)return Ga(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ga(n,e):void 0}}function Ga(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function Ha(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Va(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Va(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Va(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Va(d,"constructor",l),Va(l,"constructor",c),c.displayName="GeneratorFunction",Va(l,a,"GeneratorFunction"),Va(d),Va(d,a,"Generator"),Va(d,r,function(){return this}),Va(d,"toString",function(){return"[object Generator]"}),(Ha=function(){return{w:o,m:A}})()}function Va(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Va=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Va(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Va(n,e,t,r)}function Ka(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Qa(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){Ka(o,r,a,i,s,"next",n)}function s(n){Ka(o,r,a,i,s,"throw",n)}i(void 0)})}}function Za(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Xa(r.key),r)}}function Xa(n){var e=function(n){if("object"!=Ya(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Ya(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Ya(e)?e:e+""}var Ja=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return e=n,t=[{key:"getPreferences",value:(g=Qa(Ha().m(function n(){var e,t;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("digest_preferences");case 1:return e=n.v,n.a(2,e.digest_preferences||this.getDefaultPreferences());case 2:return n.p=2,t=n.v,console.error("Failed to get digest preferences:",t),n.a(2,this.getDefaultPreferences())}},n,this,[[0,2]])})),function(){return g.apply(this,arguments)})},{key:"savePreferences",value:(h=Qa(Ha().m(function n(e){var t;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({digest_preferences:e});case 1:if(!e.enabled){n.n=3;break}return n.n=2,this.scheduleDigest(e);case 2:n.n=4;break;case 3:return n.n=4,this.unscheduleDigest();case 4:n.n=6;break;case 5:throw n.p=5,t=n.v,console.error("Failed to save digest preferences:",t),t;case 6:return n.a(2)}},n,this,[[0,5]])})),function(n){return h.apply(this,arguments)})},{key:"getDefaultPreferences",value:function(){return{enabled:!1,frequency:"weekly",time:"09:00",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,includeStats:!0,includeRecentSaves:!0,includePopularLinks:!0,includeSmartCollections:!0,includeActivitySummary:!0,maxLinksPerSection:5}}},{key:"generateDigest",value:(f=Qa(Ha().m(function n(e,t){var r,a,o,i,s,c,l,u,d,A,p,f,h,g,m,v,b,C,y,E,B,x,k;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,r=t||this.calculatePeriod(e.frequency),n.n=1,Tt.getData();case 1:return a=n.v,n.n=2,Tt.getActivityStats();case 2:if(o=n.v,i=[],!e.includeRecentSaves){n.n=4;break}return l=i,n.n=3,this.generateRecentSavesSection(a.links,r,e.maxLinksPerSection);case 3:u=n.v,l.push.call(l,u);case 4:if(!e.includePopularLinks){n.n=6;break}return d=i,n.n=5,this.generatePopularLinksSection(a.links,r,e.maxLinksPerSection);case 5:A=n.v,d.push.call(d,A);case 6:if(!e.includeSmartCollections){n.n=8;break}return p=i,n.n=7,this.generateSmartCollectionsSection(a.smartCollections||[],e.maxLinksPerSection);case 7:f=n.v,p.push.call(p,f);case 8:if(!e.includeActivitySummary){n.n=10;break}return h=i,n.n=9,this.generateActivitySummarySection(r);case 9:g=n.v,h.push.call(h,g);case 10:return n.n=11,this.generateAIInsights(i,r);case 11:return s=n.v,m="digest_".concat(Date.now()),v=new Date,b=r,C=this.countLinksInPeriod(a.links,r),y=o.thisWeekActivity,E=this.countCollectionsInPeriod(a.collections,r),n.n=12,this.countTagsUsedInPeriod(r);case 12:return B=n.v,x=o.currentStreak,c={id:m,userId:"current_user",generatedAt:v,period:b,stats:{linksSaved:C,linksRead:y,collectionsCreated:E,tagsUsed:B,currentStreak:x},sections:i,aiInsights:s,sent:!1},n.a(2,c);case 13:throw n.p=13,k=n.v,console.error("Failed to generate digest:",k),k;case 14:return n.a(2)}},n,this,[[0,13]])})),function(n,e){return f.apply(this,arguments)})},{key:"generateRecentSavesSection",value:(p=Qa(Ha().m(function n(e,t,r){var a,o,i,s;return Ha().w(function(n){for(;;)switch(n.n){case 0:if(a=e.filter(function(n){return n.createdAt>=t.start&&n.createdAt<=t.end}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()}).slice(0,r),o="",!(a.length>0)){n.n=4;break}return n.p=1,i=a.map(function(n){return n.title}).join(", "),n.n=2,Ua.aiService.generateText("Provide a brief, engaging summary of these recently saved links and identify any common themes: ".concat(i),100);case 2:o=n.v,n.n=4;break;case 3:n.p=3,s=n.v,console.error("Failed to generate AI summary for recent saves:",s);case 4:return n.a(2,{type:"recent_saves",title:"📚 Recent Saves (".concat(a.length,")"),content:a.map(function(n){return{title:n.title,url:n.url,domain:n.domain,favicon:n.favicon,aiSummary:n.aiSummary,createdAt:n.createdAt}}),aiSummary:o})}},n,null,[[1,3]])})),function(n,e,t){return p.apply(this,arguments)})},{key:"generatePopularLinksSection",value:(A=Qa(Ha().m(function n(e,t,r){var a,o,i,s,c=this;return Ha().w(function(n){for(;;)switch(n.n){case 0:if(a=e.filter(function(n){return n.createdAt>=t.start&&n.createdAt<=t.end}).sort(function(n,e){var t=c.calculatePopularityScore(n);return c.calculatePopularityScore(e)-t}).slice(0,r),o="",!(a.length>0)){n.n=4;break}return n.p=1,i=$a(new Set(a.map(function(n){return n.domain}))),n.n=2,Ua.aiService.generateText("Analyze these popular domains and explain why they might be trending: ".concat(i.join(", ")),100);case 2:o=n.v,n.n=4;break;case 3:n.p=3,s=n.v,console.error("Failed to generate AI summary for popular links:",s);case 4:return n.a(2,{type:"popular_links",title:"🔥 Trending Links (".concat(a.length,")"),content:a.map(function(n){return{title:n.title,url:n.url,domain:n.domain,favicon:n.favicon,aiSummary:n.aiSummary,popularityScore:c.calculatePopularityScore(n)}}),aiSummary:o})}},n,null,[[1,3]])})),function(n,e,t){return A.apply(this,arguments)})},{key:"generateSmartCollectionsSection",value:(d=Qa(Ha().m(function n(e,t){var r,a,o,i;return Ha().w(function(n){for(;;)switch(n.n){case 0:if(r=e.filter(function(n){return n.autoUpdate}).slice(0,t),a="",!(r.length>0)){n.n=4;break}return n.p=1,o=r.map(function(n){return n.name}).join(", "),n.n=2,Ua.aiService.generateText("Explain how these smart collections can help organize knowledge: ".concat(o),100);case 2:a=n.v,n.n=4;break;case 3:n.p=3,i=n.v,console.error("Failed to generate AI summary for smart collections:",i);case 4:return n.a(2,{type:"smart_collections",title:"✨ Smart Collections (".concat(r.length,")"),content:r.map(function(n){return{name:n.name,description:n.description,icon:n.icon,linkCount:0}}),aiSummary:a})}},n,null,[[1,3]])})),function(n,e){return d.apply(this,arguments)})},{key:"generateActivitySummarySection",value:(u=Qa(Ha().m(function n(e){var t,r,a,o,i,s;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getActivities(e.start,e.end);case 1:return t=n.v,n.n=2,Tt.getActivityStats();case 2:return r=n.v,a={totalActivities:t.length,saveActivities:t.filter(function(n){return"save"===n.type}).length,readActivities:t.filter(function(n){return"read"===n.type}).length,organizeActivities:t.filter(function(n){return"organize"===n.type}).length,currentStreak:r.currentStreak,longestStreak:r.longestStreak},o="",n.p=3,n.n=4,Ua.aiService.generateText("Provide encouraging insights about this activity pattern: ".concat(a.saveActivities," saves, ").concat(a.readActivities," reads, ").concat(a.organizeActivities," organizes, ").concat(a.currentStreak," day streak"),100);case 4:o=n.v,n.n=6;break;case 5:n.p=5,i=n.v,console.error("Failed to generate AI summary for activity:",i);case 6:return n.a(2,{type:"activity_summary",title:"📊 Your Activity (".concat(a.totalActivities," actions)"),content:[a],aiSummary:o});case 7:return n.p=7,s=n.v,console.error("Failed to generate activity summary:",s),n.a(2,{type:"activity_summary",title:"📊 Your Activity",content:[],aiSummary:"Activity tracking data unavailable."})}},n,null,[[3,5],[0,7]])})),function(n){return u.apply(this,arguments)})},{key:"generateAIInsights",value:(l=Qa(Ha().m(function n(e,t){var r,a;return Ha().w(function(n){for(;;)switch(n.n){case 0:if(n.p=0,r=e.filter(function(n){return n.aiSummary}).map(function(n){return"".concat(n.title,": ").concat(n.aiSummary)}).join("\n")){n.n=1;break}return n.a(2,"Keep up the great work building your knowledge collection!");case 1:return n.n=2,Ua.aiService.generateText("Based on these sections from a user's knowledge digest, provide personalized insights and suggestions for improvement:\n".concat(r),200);case 2:return n.a(2,n.v);case 3:return n.p=3,a=n.v,console.error("Failed to generate AI insights:",a),n.a(2,"Continue exploring and saving valuable content to build your personal knowledge base!")}},n,null,[[0,3]])})),function(n,e){return l.apply(this,arguments)})},{key:"calculatePeriod",value:function(n){var e=new Date,t=new Date;switch(n){case"daily":t.setDate(t.getDate()-1);break;case"weekly":t.setDate(t.getDate()-7);break;case"monthly":t.setDate(t.getDate()-30)}return{start:t,end:e}}},{key:"calculatePopularityScore",value:function(n){var e=0,t=(Date.now()-n.createdAt.getTime())/864e5;return e+=2*Math.max(0,7-t),["github.com","stackoverflow.com","medium.com","dev.to","hackernews.com"].includes(n.domain)&&(e+=5),n.aiSummary&&(e+=3),n.userNote&&(e+=2),e}},{key:"countLinksInPeriod",value:function(n,e){return n.filter(function(n){return n.createdAt>=e.start&&n.createdAt<=e.end}).length}},{key:"countCollectionsInPeriod",value:function(n,e){return n.filter(function(n){return n.createdAt>=e.start&&n.createdAt<=e.end}).length}},{key:"countTagsUsedInPeriod",value:(c=Qa(Ha().m(function n(e){var t,r,a,o;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getActivities(e.start,e.end);case 1:return t=n.v,r=t.filter(function(n){return n.metadata&&n.metadata.tags&&n.metadata.tags.length>0}),a=new Set,r.forEach(function(n){n.metadata.tags.forEach(function(n){return a.add(n)})}),n.a(2,a.size);case 2:return n.p=2,o=n.v,console.error("Failed to count tags used in period:",o),n.a(2,0)}},n,null,[[0,2]])})),function(n){return c.apply(this,arguments)})},{key:"generateEmailHTML",value:(s=Qa(Ha().m(function n(e){var t,r,a,o,i,s,c,l,u;return Ha().w(function(n){for(;;)if(0===n.n){t=e.period,r=e.stats,a=e.sections,o=e.aiInsights,i=this.formatPeriod(t),s='\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <title>Your Nest Digest</title>\n        <style>\n          body { font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; background-color: #f8fafc; }\n          .container { max-width: 600px; margin: 0 auto; background: white; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; text-align: center; }\n          .header h1 { margin: 0; font-size: 2rem; }\n          .header p { margin: 0.5rem 0 0; opacity: 0.9; }\n          .content { padding: 2rem; }\n          .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 1rem; margin-bottom: 2rem; }\n          .stat { background: #f8fafc; padding: 1rem; border-radius: 8px; text-align: center; }\n          .stat-number { font-size: 1.5rem; font-weight: bold; color: #667eea; }\n          .stat-label { font-size: 0.875rem; color: #64748b; margin-top: 0.25rem; }\n          .section { margin-bottom: 2rem; }\n          .section-title { font-size: 1.25rem; font-weight: bold; margin-bottom: 1rem; color: #1e293b; }\n          .link-item { display: flex; gap: 1rem; padding: 1rem; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 1rem; }\n          .link-favicon { width: 24px; height: 24px; border-radius: 4px; flex-shrink: 0; }\n          .link-content { flex: 1; }\n          .link-title { font-weight: 600; color: #1e293b; text-decoration: none; }\n          .link-title:hover { color: #667eea; }\n          .link-domain { font-size: 0.875rem; color: #64748b; margin-top: 0.25rem; }\n          .link-summary { font-size: 0.875rem; color: #475569; margin-top: 0.5rem; }\n          .ai-insights { background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%); padding: 1.5rem; border-radius: 12px; margin: 2rem 0; }\n          .ai-insights h3 { margin: 0 0 1rem; color: #0369a1; }\n          .ai-insights p { margin: 0; }\n          .footer { background: #f8fafc; padding: 2rem; text-align: center; color: #64748b; font-size: 0.875rem; }\n          .button { display: inline-block; background: #667eea; color: white; padding: 0.75rem 1.5rem; border-radius: 8px; text-decoration: none; font-weight: 600; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>📚 Your Nest Digest</h1>\n            <p>'.concat(i,'</p>\n          </div>\n          \n          <div class="content">\n            <div class="stats">\n              <div class="stat">\n                <div class="stat-number">').concat(r.linksSaved,'</div>\n                <div class="stat-label">Links Saved</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.linksRead,'</div>\n                <div class="stat-label">Links Read</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.collectionsCreated,'</div>\n                <div class="stat-label">Collections</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.currentStreak,'</div>\n                <div class="stat-label">Day Streak</div>\n              </div>\n            </div>\n    '),c=qa(a);try{for(c.s();!(l=c.n()).done;)u=l.value,s+=this.generateSectionHTML(u)}catch(n){c.e(n)}finally{c.f()}return o&&(s+='\n        <div class="ai-insights">\n          <h3>✨ AI Insights</h3>\n          <p>'.concat(o,"</p>\n        </div>\n      ")),s+='\n            <div style="text-align: center; margin: 2rem 0;">\n              <a href="chrome-extension://nest" class="button">Open Nest</a>\n            </div>\n          </div>\n          \n          <div class="footer">\n            <p>This digest was generated by Nest - Your Smart Bookmarking Assistant</p>\n            <p>You can adjust your digest preferences in the Nest settings.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    ',n.a(2,s)}},n,this)})),function(n){return s.apply(this,arguments)})},{key:"generateSectionHTML",value:function(n){var e='<div class="section"><h2 class="section-title">'.concat(n.title,"</h2>");if("recent_saves"===n.type||"popular_links"===n.type){var t,r=qa(n.content);try{for(r.s();!(t=r.n()).done;){var a=t.value;e+='\n          <div class="link-item">\n            <img src="'.concat(a.favicon||"https://www.google.com/s2/favicons?domain=".concat(a.domain,"&sz=24"),'" alt="" class="link-favicon">\n            <div class="link-content">\n              <a href="').concat(a.url,'" class="link-title" target="_blank">').concat(a.title,'</a>\n              <div class="link-domain">').concat(a.domain,"</div>\n              ").concat(a.aiSummary?'<div class="link-summary">'.concat(a.aiSummary,"</div>"):"","\n            </div>\n          </div>\n        ")}}catch(n){r.e(n)}finally{r.f()}}else if("smart_collections"===n.type){var o,i=qa(n.content);try{for(i.s();!(o=i.n()).done;){var s=o.value;e+='\n          <div class="link-item">\n            <div style="font-size: 1.5rem; width: 24px; text-align: center;">'.concat(s.icon||"📁",'</div>\n            <div class="link-content">\n              <div class="link-title">').concat(s.name,'</div>\n              <div class="link-summary">').concat(s.description,"</div>\n            </div>\n          </div>\n        ")}}catch(n){i.e(n)}finally{i.f()}}else if("activity_summary"===n.type){var c=n.content[0];c&&(e+='\n          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); gap: 1rem;">\n            <div class="stat">\n              <div class="stat-number">'.concat(c.saveActivities,'</div>\n              <div class="stat-label">Saves</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(c.readActivities,'</div>\n              <div class="stat-label">Reads</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(c.organizeActivities,'</div>\n              <div class="stat-label">Organizes</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(c.currentStreak,'</div>\n              <div class="stat-label">Day Streak</div>\n            </div>\n          </div>\n        '))}return n.aiSummary&&(e+='<div style="background: #f1f5f9; padding: 1rem; border-radius: 8px; margin-top: 1rem; font-style: italic;">'.concat(n.aiSummary,"</div>")),e+"</div>"}},{key:"formatPeriod",value:function(n){var e={month:"short",day:"numeric",year:n.start.getFullYear()!==n.end.getFullYear()?"numeric":void 0},t=n.start.toLocaleDateString("en-US",e),r=n.end.toLocaleDateString("en-US",e);return"".concat(t," - ").concat(r)}},{key:"scheduleDigest",value:(i=Qa(Ha().m(function n(e){var t;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({digest_schedule:{enabled:!0,frequency:e.frequency,time:e.time,timezone:e.timezone,lastSent:null,nextSend:this.calculateNextSendTime(e)}});case 1:n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to schedule digest:",t);case 3:return n.a(2)}},n,this,[[0,2]])})),function(n){return i.apply(this,arguments)})},{key:"unscheduleDigest",value:(o=Qa(Ha().m(function n(){var e;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({digest_schedule:{enabled:!1}});case 1:n.n=3;break;case 2:n.p=2,e=n.v,console.error("Failed to unschedule digest:",e);case 3:return n.a(2)}},n,null,[[0,2]])})),function(){return o.apply(this,arguments)})},{key:"calculateNextSendTime",value:function(n){var e=new Date,t=function(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||Wa(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n.time.split(":").map(Number),2),r=t[0],a=t[1],o=new Date;if(o.setHours(r,a,0,0),o<=e)switch(n.frequency){case"daily":o.setDate(o.getDate()+1);break;case"weekly":o.setDate(o.getDate()+7);break;case"monthly":o.setMonth(o.getMonth()+1)}return o}},{key:"generatePreview",value:(a=Qa(Ha().m(function n(){var e;return Ha().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getPreferences();case 1:return e=n.v,n.a(2,this.generateDigest(e))}},n,this)})),function(){return a.apply(this,arguments)})}],r=[{key:"getInstance",value:function(){return n.instance||(n.instance=new n),n.instance}}],t&&Za(e.prototype,t),r&&Za(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,r,a,o,i,s,c,l,u,d,A,p,f,h,g}(),no=Ja.getInstance();function eo(n){return eo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},eo(n)}function to(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function ro(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?to(Object(t),!0).forEach(function(e){ao(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):to(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function ao(n,e,t){return(e=function(n){var e=function(n){if("object"!=eo(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=eo(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==eo(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function oo(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return io(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(io(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,io(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,io(d,"constructor",l),io(l,"constructor",c),c.displayName="GeneratorFunction",io(l,a,"GeneratorFunction"),io(d),io(d,a,"Generator"),io(d,r,function(){return this}),io(d,"toString",function(){return"[object Generator]"}),(oo=function(){return{w:o,m:A}})()}function io(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}io=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){io(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},io(n,e,t,r)}function so(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function co(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){so(o,r,a,i,s,"next",n)}function s(n){so(o,r,a,i,s,"throw",n)}i(void 0)})}}function lo(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return uo(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?uo(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function uo(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Ao=function(n){n.onClose;var e=lo((0,o.useState)(null),2),t=e[0],r=e[1],a=lo((0,o.useState)(!0),2),i=a[0],s=a[1],c=lo((0,o.useState)(!1),2),l=c[0],u=c[1],d=lo((0,o.useState)(""),2),A=d[0],p=d[1],f=lo((0,o.useState)(null),2),h=f[0],g=f[1],m=lo((0,o.useState)(!1),2),v=m[0],b=m[1],C=lo((0,o.useState)(!1),2),y=C[0],E=C[1];(0,o.useEffect)(function(){B()},[]);var B=function(){var n=co(oo().m(function n(){var e,t;return oo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,no.getPreferences();case 1:e=n.v,r(e),n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to load digest preferences:",t),p("Failed to load preferences");case 3:return n.p=3,s(!1),n.f(3);case 4:return n.a(2)}},n,null,[[0,2,3,4]])}));return function(){return n.apply(this,arguments)}}(),x=function(){var n=co(oo().m(function n(e){var t;return oo().w(function(n){for(;;)switch(n.n){case 0:return u(!0),p(""),n.p=1,n.n=2,no.savePreferences(e);case 2:r(e),p("Digest preferences saved successfully!"),setTimeout(function(){return p("")},3e3),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to save digest preferences:",t),p("Failed to save preferences");case 4:return n.p=4,u(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(e){return n.apply(this,arguments)}}(),k=function(){var n=co(oo().m(function n(){var e,r;return oo().w(function(n){for(;;)switch(n.n){case 0:if(t){n.n=1;break}return n.a(2);case 1:return E(!0),n.p=2,n.n=3,no.generatePreview();case 3:e=n.v,g(e),b(!0),n.n=5;break;case 4:n.p=4,r=n.v,console.error("Failed to generate preview:",r),p("Failed to generate preview");case 5:return n.p=5,E(!1),n.f(5);case 6:return n.a(2)}},n,null,[[2,4,5,6]])}));return function(){return n.apply(this,arguments)}}(),w=function(){var n=co(oo().m(function n(){var e,r,a,o;return oo().w(function(n){for(;;)switch(n.n){case 0:if(t&&h){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,no.generateEmailHTML(h);case 2:e=n.v,r=new Blob([e],{type:"text/html"}),a=URL.createObjectURL(r),window.open(a,"_blank"),p("Test digest opened in new tab!"),setTimeout(function(){return p("")},3e3),n.n=4;break;case 3:n.p=3,o=n.v,console.error("Failed to generate test digest:",o),p("Failed to generate test digest");case 4:return n.a(2)}},n,null,[[1,3]])}));return function(){return n.apply(this,arguments)}}();return i||!t?(0,Rt.jsx)("div",{className:"digest-settings",children:(0,Rt.jsx)("div",{className:"loading-spinner",children:"Loading digest settings..."})}):(0,Rt.jsxs)("div",{className:"digest-settings",children:[(0,Rt.jsxs)("div",{className:"digest-header",children:[(0,Rt.jsxs)("div",{className:"digest-header-content",children:[(0,Rt.jsx)(Pa,{size:24,className:"digest-icon"}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("h3",{children:"Daily Digest Email"}),(0,Rt.jsx)("p",{children:"Get personalized summaries of your saved content delivered to your inbox"})]})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",title:"Enable daily digest emails",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:t.enabled,onChange:function(n){return x(ro(ro({},t),{},{enabled:n.target.checked}))},disabled:l,"aria-label":"Enable daily digest emails"}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]}),t.enabled&&(0,Rt.jsxs)("div",{className:"digest-config",children:[(0,Rt.jsxs)("div",{className:"setting-group",children:[(0,Rt.jsx)("h4",{children:"Schedule"}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)(Ba,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Frequency"}),(0,Rt.jsx)("div",{className:"setting-description",children:"How often to receive digests"})]})]}),(0,Rt.jsxs)("select",{value:t.frequency,onChange:function(n){return x(ro(ro({},t),{},{frequency:n.target.value}))},className:"form-control",disabled:l,title:"Select digest frequency","aria-label":"Digest frequency",children:[(0,Rt.jsx)("option",{value:"daily",children:"Daily"}),(0,Rt.jsx)("option",{value:"weekly",children:"Weekly"}),(0,Rt.jsx)("option",{value:"monthly",children:"Monthly"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)(va,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Delivery Time"}),(0,Rt.jsx)("div",{className:"setting-description",children:"When to send the digest"})]})]}),(0,Rt.jsx)("input",{type:"time",value:t.time,onChange:function(n){return x(ro(ro({},t),{},{time:n.target.value}))},className:"form-control",disabled:l,title:"Select delivery time","aria-label":"Delivery time"})]})]}),(0,Rt.jsxs)("div",{className:"setting-group",children:[(0,Rt.jsx)("h4",{children:"Content"}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Include Statistics"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Show your activity stats and streaks"})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",title:"Include statistics in digest",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:t.includeStats,onChange:function(n){return x(ro(ro({},t),{},{includeStats:n.target.checked}))},disabled:l,"aria-label":"Include statistics"}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Recent Saves"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Your latest bookmarked links"})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",title:"Include recent saves in digest",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:t.includeRecentSaves,onChange:function(n){return x(ro(ro({},t),{},{includeRecentSaves:n.target.checked}))},disabled:l,"aria-label":"Include recent saves"}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Trending Links"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Popular content from your collection"})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",title:"Include trending links in digest",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:t.includePopularLinks,onChange:function(n){return x(ro(ro({},t),{},{includePopularLinks:n.target.checked}))},disabled:l,"aria-label":"Include trending links"}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Smart Collections"}),(0,Rt.jsx)("div",{className:"setting-description",children:"AI-curated content collections"})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",title:"Include smart collections in digest",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:t.includeSmartCollections,onChange:function(n){return x(ro(ro({},t),{},{includeSmartCollections:n.target.checked}))},disabled:l,"aria-label":"Include smart collections"}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Activity Summary"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Your reading and organizing activity"})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",title:"Include activity summary in digest",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:t.includeActivitySummary,onChange:function(n){return x(ro(ro({},t),{},{includeActivitySummary:n.target.checked}))},disabled:l,"aria-label":"Include activity summary"}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsx)("div",{className:"setting-info",children:(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Links per Section"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Maximum number of links to include in each section"})]})}),(0,Rt.jsx)("input",{type:"number",min:"1",max:"10",value:t.maxLinksPerSection,onChange:function(n){return x(ro(ro({},t),{},{maxLinksPerSection:parseInt(n.target.value)||5}))},className:"form-control",style:{width:"80px"},disabled:l,title:"Maximum links per section","aria-label":"Links per section"})]})]}),(0,Rt.jsxs)("div",{className:"setting-group",children:[(0,Rt.jsx)("h4",{children:"Preview & Test"}),(0,Rt.jsxs)("div",{className:"digest-actions",children:[(0,Rt.jsxs)("button",{onClick:k,disabled:y,className:"button secondary",children:[(0,Rt.jsx)(Ar,{size:16}),y?"Generating...":"Preview Digest"]}),h&&(0,Rt.jsxs)("button",{onClick:w,className:"button primary",children:[(0,Rt.jsx)(Fa,{size:16}),"Open Test Email"]})]})]}),v&&h&&(0,Rt.jsxs)("div",{className:"digest-preview",children:[(0,Rt.jsx)("h4",{children:"Digest Preview"}),(0,Rt.jsxs)("div",{className:"preview-content",children:[(0,Rt.jsxs)("div",{className:"preview-header",children:[(0,Rt.jsx)("h5",{children:"📚 Your Nest Digest"}),(0,Rt.jsxs)("p",{children:[h.period.start.toLocaleDateString()," - ",h.period.end.toLocaleDateString()]})]}),(0,Rt.jsxs)("div",{className:"preview-stats",children:[(0,Rt.jsxs)("div",{className:"preview-stat",children:[(0,Rt.jsx)("span",{className:"stat-number",children:h.stats.linksSaved}),(0,Rt.jsx)("span",{className:"stat-label",children:"Links Saved"})]}),(0,Rt.jsxs)("div",{className:"preview-stat",children:[(0,Rt.jsx)("span",{className:"stat-number",children:h.stats.linksRead}),(0,Rt.jsx)("span",{className:"stat-label",children:"Links Read"})]}),(0,Rt.jsxs)("div",{className:"preview-stat",children:[(0,Rt.jsx)("span",{className:"stat-number",children:h.stats.currentStreak}),(0,Rt.jsx)("span",{className:"stat-label",children:"Day Streak"})]})]}),(0,Rt.jsx)("div",{className:"preview-sections",children:h.sections.map(function(n,e){return(0,Rt.jsxs)("div",{className:"preview-section",children:[(0,Rt.jsx)("h6",{children:n.title}),(0,Rt.jsxs)("p",{children:[n.content.length," items"]}),n.aiSummary&&(0,Rt.jsx)("div",{className:"preview-ai-summary",children:(0,Rt.jsx)("em",{children:n.aiSummary})})]},e)})}),h.aiInsights&&(0,Rt.jsxs)("div",{className:"preview-insights",children:[(0,Rt.jsx)("h6",{children:"✨ AI Insights"}),(0,Rt.jsx)("p",{children:h.aiInsights})]})]})]})]}),A&&(0,Rt.jsx)("div",{className:"digest-message ".concat(A.includes("Failed")?"error":"success"),children:A})]})};function po(n){return po="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},po(n)}function fo(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function ho(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?fo(Object(t),!0).forEach(function(e){go(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):fo(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function go(n,e,t){return(e=function(n){var e=function(n){if("object"!=po(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=po(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==po(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function mo(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return vo(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(vo(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,vo(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,vo(d,"constructor",l),vo(l,"constructor",c),c.displayName="GeneratorFunction",vo(l,a,"GeneratorFunction"),vo(d),vo(d,a,"Generator"),vo(d,r,function(){return this}),vo(d,"toString",function(){return"[object Generator]"}),(mo=function(){return{w:o,m:A}})()}function vo(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}vo=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){vo(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},vo(n,e,t,r)}function bo(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Co(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){bo(o,r,a,i,s,"next",n)}function s(n){bo(o,r,a,i,s,"throw",n)}i(void 0)})}}function yo(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Eo(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Eo(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Eo(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Bo=function(n){var e=n.onClose,t=yo((0,o.useState)("account"),2),r=t[0],a=t[1],i=yo((0,o.useState)(""),2),s=i[0],c=i[1],l=yo((0,o.useState)({linkCount:0,collectionCount:0,tagCount:0,publicCollections:0,totalViews:0}),2),u=l[0],d=l[1],A=yo((0,o.useState)({autoSummarize:!0,defaultCategory:"general",defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1,autoTagging:!1,autoCategorization:!1,openaiApiKey:"",newTabEnabled:!0,highlightColor:"yellow",highlightStyle:"gradient"}),2),p=A[0],f=A[1],h=yo((0,o.useState)(!0),2),g=h[0],m=h[1],v=yo((0,o.useState)(!1),2),b=v[0],C=v[1],y=yo((0,o.useState)(""),2),E=y[0],B=y[1];(0,o.useEffect)(function(){x(),k(),w()},[]);var x=function(){var n=Co(mo().m(function n(){var e,t,r;return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,bt.auth.getUser();case 1:e=n.v,(t=e.data.user)&&c(t.email||"Unknown"),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load user data:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),k=function(){var n=Co(mo().m(function n(){var e,t,r,a,o,i,s,c,l,u,d,A,p,h,g,v,b,C,y,E;return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getData();case 1:return h=n.v,n.n=2,Promise.all([chrome.storage.local.get("nest_newtab_enabled"),chrome.storage.local.get("nest_settings")]);case 2:g=n.v,v=yo(g,2),b=v[0],C=v[1],y=C.nest_settings||{},f({autoSummarize:null===(e=null!==(t=y.autoSummarize)&&void 0!==t?t:h.settings.autoSummarize)||void 0===e||e,defaultCategory:h.settings.defaultCategory||"general",defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:null!==(r=y.darkMode)&&void 0!==r&&r,autoTagging:null!==(a=null!==(o=y.autoTagging)&&void 0!==o?o:h.settings.autoTagging)&&void 0!==a&&a,autoCategorization:null!==(i=null!==(s=y.autoCategorization)&&void 0!==s?s:h.settings.autoCategorization)&&void 0!==i&&i,openaiApiKey:null!==(c=null!==(l=y.openaiApiKey)&&void 0!==l?l:h.settings.openaiApiKey)&&void 0!==c?c:"",newTabEnabled:!0===b.nest_newtab_enabled,highlightColor:null!==(u=null!==(d=y.highlightColor)&&void 0!==d?d:h.settings.highlightColor)&&void 0!==u?u:"yellow",highlightStyle:null!==(A=null!==(p=y.highlightStyle)&&void 0!==p?p:h.settings.highlightStyle)&&void 0!==A?A:"gradient"}),y.darkMode&&document.body.classList.add("dark-mode"),n.n=4;break;case 3:n.p=3,E=n.v,console.error("Failed to load settings:",E);case 4:return n.p=4,m(!1),n.f(4);case 5:return n.a(2)}},n,null,[[0,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),w=function(){var n=Co(mo().m(function n(){var e,t,r,a,o,i,s;return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getData();case 1:return e=n.v,n.n=2,Tt.getUserTags();case 2:return t=n.v,n.n=3,bt.from("collections").select("view_count").eq("is_public",!0);case 3:r=n.v,a=r.data,o=(null==a?void 0:a.length)||0,i=(null==a?void 0:a.reduce(function(n,e){return n+(e.view_count||0)},0))||0,d({linkCount:e.links.length,collectionCount:e.collections.length,tagCount:t.length,publicCollections:o,totalViews:i}),n.n=5;break;case 4:n.p=4,s=n.v,console.error("Failed to load user stats:",s);case 5:return n.a(2)}},n,null,[[0,4]])}));return function(){return n.apply(this,arguments)}}(),j=function(){var n=Co(mo().m(function n(e){var t,r;return mo().w(function(n){for(;;)switch(n.n){case 0:if(C(!0),B(""),n.p=1,e.newTabEnabled===p.newTabEnabled){n.n=2;break}return n.n=2,chrome.storage.local.set({nest_newtab_enabled:e.newTabEnabled});case 2:return e.darkMode!==p.darkMode&&(e.darkMode?document.body.classList.add("dark-mode"):document.body.classList.remove("dark-mode")),n.n=3,Tt.getData();case 3:return ho(ho({},t=n.v),{},{settings:ho(ho({},t.settings),{},{autoSummarize:e.autoSummarize,autoTagging:e.autoTagging,autoCategorization:e.autoCategorization,openaiApiKey:e.openaiApiKey,highlightColor:e.highlightColor,highlightStyle:e.highlightStyle})}),n.n=4,chrome.storage.local.set({nest_settings:{autoSummarize:e.autoSummarize,autoTagging:e.autoTagging,autoCategorization:e.autoCategorization,openaiApiKey:e.openaiApiKey,highlightColor:e.highlightColor,highlightStyle:e.highlightStyle,darkMode:e.darkMode}});case 4:f(e),B("Settings saved successfully!"),setTimeout(function(){return B("")},3e3),n.n=6;break;case 5:n.p=5,r=n.v,console.error("Failed to save settings:",r),B("Failed to save settings");case 6:return n.p=6,C(!1),n.f(6);case 7:return n.a(2)}},n,null,[[1,5,6,7]])}));return function(e){return n.apply(this,arguments)}}(),S=function(){var n=Co(mo().m(function n(){var e,t,r,a,o,i;return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getData();case 1:return e=n.v,n.n=2,Tt.getUserTags();case 2:t=n.v,r={exported_at:(new Date).toISOString(),user_email:s,links:e.links,collections:e.collections,tags:t,stats:u},a=new Blob([JSON.stringify(r,null,2)],{type:"application/json"}),o=URL.createObjectURL(a),(i=document.createElement("a")).href=o,i.download="nest-export-".concat((new Date).toISOString().split("T")[0],".json"),document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(o),B("Data exported successfully!"),setTimeout(function(){return B("")},3e3),n.n=4;break;case 3:n.p=3,n.v,B("Failed to export data");case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),z=function(){var n=Co(mo().m(function n(){var e;return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.cleanupUnusedTags();case 1:e=n.v,B("Cleaned up ".concat(e," unused tags")),w(),setTimeout(function(){return B("")},3e3),n.n=3;break;case 2:n.p=2,n.v,B("Failed to cleanup tags");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),N=function(){var n=Co(mo().m(function n(){return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,bt.auth.signOut();case 1:e(),n.n=3;break;case 2:n.p=2,n.v,B("Failed to logout");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),I=function(n,e){f(function(t){return ho(ho({},t),{},go({},n,e))})},_=function(){var n=Co(mo().m(function n(){var e;return mo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"openFloatingWindow"});case 1:n.n=3;break;case 2:n.p=2,e=n.v,console.error("Failed to open floating window:",e),B("Failed to open floating window");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),T=[{id:"account",label:"Account",icon:ka},{id:"preferences",label:"Preferences",icon:Oa},{id:"digest",label:"Daily Digest",icon:Pa},{id:"data",label:"Data",icon:Da},{id:"sharing",label:"Sharing",icon:sr},{id:"about",label:"About",icon:Lr}];return g?(0,Rt.jsxs)("div",{className:"settings-sidebar",children:[(0,Rt.jsxs)("div",{className:"settings-header",children:[(0,Rt.jsx)("button",{onClick:e,className:"settings-back-button",children:(0,Rt.jsx)(La,{size:20})}),(0,Rt.jsx)("h2",{children:"Settings"})]}),(0,Rt.jsx)("div",{className:"settings-loading",children:(0,Rt.jsx)("div",{className:"loading-spinner",children:"Loading settings..."})})]}):(0,Rt.jsxs)("div",{className:"settings-sidebar",children:[(0,Rt.jsxs)("div",{className:"settings-header",children:[(0,Rt.jsx)("button",{onClick:e,className:"settings-back-button",children:(0,Rt.jsx)(La,{size:20})}),(0,Rt.jsx)("h2",{children:"Settings"})]}),(0,Rt.jsx)("div",{className:"settings-tabs-horizontal",children:T.map(function(n){var e=n.icon;return(0,Rt.jsx)("button",{onClick:function(){return a(n.id)},className:"settings-tab-horizontal ".concat(r===n.id?"active":""),title:n.label,children:(0,Rt.jsx)(e,{size:16})},n.id)})}),(0,Rt.jsxs)("div",{className:"settings-content-sidebar",children:["account"===r&&(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"Account"}),(0,Rt.jsx)("div",{className:"account-info",children:(0,Rt.jsxs)("div",{className:"account-item",children:[(0,Rt.jsx)(Pa,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"account-label",children:"Email"}),(0,Rt.jsx)("div",{className:"account-value",children:s})]})]})}),(0,Rt.jsx)("h3",{children:"Statistics"}),(0,Rt.jsxs)("div",{className:"stats-grid-sidebar",children:[(0,Rt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Rt.jsx)("div",{className:"stat-number",children:u.linkCount}),(0,Rt.jsx)("div",{className:"stat-label",children:"Links"})]}),(0,Rt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Rt.jsx)("div",{className:"stat-number",children:u.collectionCount}),(0,Rt.jsx)("div",{className:"stat-label",children:"Collections"})]}),(0,Rt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Rt.jsx)("div",{className:"stat-number",children:u.tagCount}),(0,Rt.jsx)("div",{className:"stat-label",children:"Tags"})]}),(0,Rt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Rt.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,Rt.jsx)("div",{className:"stat-label",children:"Views"})]})]}),(0,Rt.jsx)("div",{className:"setting-actions",children:(0,Rt.jsx)("button",{onClick:N,className:"button danger",children:"Logout"})})]}),"preferences"===r&&(0,Rt.jsxs)("div",{className:"settings-content",children:[(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"General Preferences"}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:p.autoSummarize,onChange:function(n){return f(ho(ho({},p),{},{autoSummarize:n.target.checked}))}}),"Auto-summarize saved links"]}),(0,Rt.jsx)("p",{className:"setting-description",children:"Automatically generate AI summaries for saved links"})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:p.autoTagging,onChange:function(n){return f(ho(ho({},p),{},{autoTagging:n.target.checked}))}}),"Auto-tag saved links"]}),(0,Rt.jsx)("p",{className:"setting-description",children:"Automatically suggest tags based on content"})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:p.autoCategorization,onChange:function(n){return f(ho(ho({},p),{},{autoCategorization:n.target.checked}))}}),"Auto-categorize saved links"]}),(0,Rt.jsx)("p",{className:"setting-description",children:"Automatically categorize links based on content and domain"})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:p.newTabEnabled,onChange:function(n){return f(ho(ho({},p),{},{newTabEnabled:n.target.checked}))}}),"Override new tab page"]}),(0,Rt.jsx)("p",{className:"setting-description",children:"Replace Chrome's new tab page with Nest"})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:p.darkMode,onChange:function(n){return f(ho(ho({},p),{},{darkMode:n.target.checked}))}}),"Dark mode"]}),(0,Rt.jsx)("p",{className:"setting-description",children:"Use dark theme for the interface"})]})]}),(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"Interface Options"}),(0,Rt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Rt.jsx)("div",{className:"setting-info",children:(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Floating Window"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Open Nest in a floating window (like Raycast)"})]})}),(0,Rt.jsx)("button",{onClick:_,className:"button-small",children:"Open Floating Window"})]})]}),(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"Highlight Settings"}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsx)("label",{htmlFor:"highlight-color",children:"Highlight Color"}),(0,Rt.jsxs)("select",{id:"highlight-color",value:p.highlightColor||"yellow",onChange:function(n){return I("highlightColor",n.target.value)},className:"setting-select",children:[(0,Rt.jsx)("option",{value:"yellow",children:"Yellow"}),(0,Rt.jsx)("option",{value:"blue",children:"Blue"}),(0,Rt.jsx)("option",{value:"green",children:"Green"}),(0,Rt.jsx)("option",{value:"pink",children:"Pink"}),(0,Rt.jsx)("option",{value:"purple",children:"Purple"}),(0,Rt.jsx)("option",{value:"orange",children:"Orange"}),(0,Rt.jsx)("option",{value:"red",children:"Red"})]})]}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsx)("label",{htmlFor:"highlight-style",children:"Highlight Style"}),(0,Rt.jsxs)("select",{id:"highlight-style",value:p.highlightStyle||"gradient",onChange:function(n){return I("highlightStyle",n.target.value)},className:"setting-select",children:[(0,Rt.jsx)("option",{value:"gradient",children:"Gradient"}),(0,Rt.jsx)("option",{value:"solid",children:"Solid"}),(0,Rt.jsx)("option",{value:"underline",children:"Underline"}),(0,Rt.jsx)("option",{value:"outline",children:"Outline"})]})]}),(0,Rt.jsx)("div",{className:"setting-description",children:"Choose your preferred highlight color and style for visual text highlighting on supported websites."})]}),(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"Advanced"}),(0,Rt.jsxs)("div",{className:"setting-item",children:[(0,Rt.jsx)("label",{htmlFor:"openai-key",children:"OpenAI API Key"}),(0,Rt.jsx)("input",{id:"openai-key",type:"password",value:p.openaiApiKey||"",onChange:function(n){return I("openaiApiKey",n.target.value)},placeholder:"sk-...",className:"setting-input"}),(0,Rt.jsx)("p",{className:"setting-description",children:"For enhanced AI features like auto-summarization and tagging"})]})]}),(0,Rt.jsx)("div",{className:"settings-actions",children:(0,Rt.jsx)("button",{onClick:function(){return j(p)},disabled:b,className:"save-button",children:b?"Saving...":"Save Preferences"})})]}),"digest"===r&&(0,Rt.jsx)("div",{className:"settings-section",children:(0,Rt.jsx)(Ao,{})}),"data"===r&&(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"Data Management"}),(0,Rt.jsxs)("div",{className:"setting-list",children:[(0,Rt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)(Ra,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Export Data"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Download all your data"})]})]}),(0,Rt.jsx)("button",{onClick:S,className:"button-small",children:"Export"})]}),(0,Rt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)(Lt,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Cleanup Tags"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Remove unused tags"})]})]}),(0,Rt.jsx)("button",{onClick:z,className:"button-small danger",children:"Cleanup"})]})]})]}),"sharing"===r&&(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"Sharing & Privacy"}),(0,Rt.jsx)("div",{className:"setting-list",children:(0,Rt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Rt.jsxs)("div",{className:"setting-info",children:[(0,Rt.jsx)("div",{className:"setting-label",children:"Default Privacy"}),(0,Rt.jsx)("div",{className:"setting-description",children:"Make collections public by default"})]}),(0,Rt.jsxs)("label",{className:"toggle-switch",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:p.defaultPrivacy,onChange:function(n){return j(ho(ho({},p),{},{defaultPrivacy:n.target.checked}))},disabled:b}),(0,Rt.jsx)("span",{className:"toggle-slider"})]})]})}),(0,Rt.jsx)("h3",{children:"Analytics"}),(0,Rt.jsxs)("div",{className:"stats-grid-sidebar",children:[(0,Rt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Rt.jsx)("div",{className:"stat-number",children:u.publicCollections}),(0,Rt.jsx)("div",{className:"stat-label",children:"Public collections"})]}),(0,Rt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Rt.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,Rt.jsx)("div",{className:"stat-label",children:"Total views"})]})]})]}),"about"===r&&(0,Rt.jsxs)("div",{className:"settings-section",children:[(0,Rt.jsx)("h3",{children:"About Nest"}),(0,Rt.jsxs)("div",{className:"about-info-sidebar",children:[(0,Rt.jsxs)("div",{className:"app-info-sidebar",children:[(0,Rt.jsx)("div",{className:"app-logo-sidebar",children:"N"}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("div",{className:"app-name",children:"Nest"}),(0,Rt.jsx)("div",{className:"app-version",children:"Version 1.0.0"})]})]}),(0,Rt.jsx)("p",{className:"app-description",children:"Smart bookmarks & notes with AI-powered summaries and flexible organization."})]}),(0,Rt.jsxs)("div",{className:"support-links-sidebar",children:[(0,Rt.jsx)("h4",{children:"Support"}),(0,Rt.jsxs)("div",{className:"support-link-list",children:[(0,Rt.jsxs)("a",{href:"https://github.com",target:"_blank",rel:"noopener",className:"support-link-sidebar",children:[(0,Rt.jsx)(Ot,{size:14}),(0,Rt.jsx)("span",{children:"Documentation"})]}),(0,Rt.jsxs)("a",{href:"https://github.com/issues",target:"_blank",rel:"noopener",className:"support-link-sidebar",children:[(0,Rt.jsx)(Ma,{size:14}),(0,Rt.jsx)("span",{children:"Report Issues"})]}),(0,Rt.jsxs)("a",{href:"mailto:support@nest.dev",className:"support-link-sidebar",children:[(0,Rt.jsx)(Pa,{size:14}),(0,Rt.jsx)("span",{children:"Contact Support"})]})]})]})]}),E&&(0,Rt.jsx)("div",{className:"settings-message ".concat(E.includes("Failed")?"error":"success"),children:E})]})]})};var xo=a(72),ko=a.n(xo),wo=a(206),jo=a.n(wo),So=a(659),zo=a.n(So),No=a(56),Io=a.n(No),_o=a(159),To=a.n(_o),Oo=a(113),Po=a.n(Oo),Do=a(182),Lo={};Lo.styleTagTransform=Po(),Lo.setAttributes=Io(),Lo.insert=zo().bind(null,"head"),Lo.domAPI=jo(),Lo.insertStyleElement=To(),ko()(Do.A,Lo),Do.A&&Do.A.locals&&Do.A.locals;const Ro=c("TrendingUp",[["polyline",{points:"22 7 13.5 15.5 8.5 10.5 2 17",key:"126l90"}],["polyline",{points:"16 7 22 7 22 13",key:"kwv8wd"}]]);function Mo(n){return Mo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Mo(n)}function Fo(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Uo(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Uo(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Uo(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function Yo(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return qo(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(qo(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,qo(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,qo(d,"constructor",l),qo(l,"constructor",c),c.displayName="GeneratorFunction",qo(l,a,"GeneratorFunction"),qo(d),qo(d,a,"Generator"),qo(d,r,function(){return this}),qo(d,"toString",function(){return"[object Generator]"}),(Yo=function(){return{w:o,m:A}})()}function qo(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}qo=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){qo(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},qo(n,e,t,r)}function $o(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Wo(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){$o(o,r,a,i,s,"next",n)}function s(n){$o(o,r,a,i,s,"throw",n)}i(void 0)})}}function Go(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Ho(r.key),r)}}function Ho(n){var e=function(n){if("object"!=Mo(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Mo(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Mo(e)?e:e+""}var Vo=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return e=n,t=[{key:"trackLinkRead",value:(d=Wo(Yo().m(function n(e){var t,r;return Yo().w(function(n){for(;;)switch(n.n){case 0:return this.getTodayString(),n.n=1,this.getTodayAnalytics();case 1:return(t=n.v).linksRead++,t.timeSpent+=this.estimateReadingTime(e.title+" "+(e.description||"")),this.extractTopicsFromContent(e.title+" "+(e.description||"")).forEach(function(n){t.topicsExplored.includes(n)||t.topicsExplored.push(n)}),r=(new Date).getHours(),t.mostActiveHours.includes(r)||t.mostActiveHours.push(r),n.n=2,this.saveAnalytics(t);case 2:return n.n=3,this.updateReadingStreak();case 3:return n.a(2)}},n,this)})),function(n){return d.apply(this,arguments)})},{key:"trackHighlightMade",value:(u=Wo(Yo().m(function n(e){var t;return Yo().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getTodayAnalytics();case 1:return(t=n.v).highlightsMade++,this.extractTopicsFromContent(e.text).forEach(function(n){t.topicsExplored.includes(n)||t.topicsExplored.push(n)}),n.n=2,this.saveAnalytics(t);case 2:return n.a(2)}},n,this)})),function(n){return u.apply(this,arguments)})},{key:"getWeeklyAnalytics",value:(l=Wo(Yo().m(function n(){var e,t,r,a;return Yo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_analytics");case 1:return e=n.v,t=e.nest_analytics||[],(r=new Date).setDate(r.getDate()-7),n.a(2,t.filter(function(n){return new Date(n.date)>=r}));case 2:return n.p=2,a=n.v,console.error("Error getting weekly analytics:",a),n.a(2,[])}},n,null,[[0,2]])})),function(){return l.apply(this,arguments)})},{key:"getMonthlyAnalytics",value:(c=Wo(Yo().m(function n(){var e,t,r,a;return Yo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_analytics");case 1:return e=n.v,t=e.nest_analytics||[],(r=new Date).setMonth(r.getMonth()-1),n.a(2,t.filter(function(n){return new Date(n.date)>=r}));case 2:return n.p=2,a=n.v,console.error("Error getting monthly analytics:",a),n.a(2,[])}},n,null,[[0,2]])})),function(){return c.apply(this,arguments)})},{key:"calculateInsights",value:(s=Wo(Yo().m(function n(){var e,t,r,a,o,i,s,c,l;return Yo().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getWeeklyAnalytics();case 1:return e=n.v,n.n=2,this.getMonthlyAnalytics();case 2:return t=n.v,r=e.reduce(function(n,e){return n+e.linksRead+e.highlightsMade},0),a=e.length>0?r/e.length:0,o=this.findMostActiveDay(e),i=this.findTopTopics(t),n.n=3,this.getCurrentReadingStreak();case 3:return s=n.v,c=this.calculateKnowledgeGrowth(t),l=this.findPeakHours(e),n.a(2,{totalItems:r,averageDaily:a,mostActiveDay:o,topTopics:i,readingStreak:s,knowledgeGrowth:c,peakHours:l})}},n,this)})),function(){return s.apply(this,arguments)})},{key:"getTodayAnalytics",value:(i=Wo(Yo().m(function n(){var e,t,r,a,o;return Yo().w(function(n){for(;;)switch(n.n){case 0:return e=this.getTodayString(),n.p=1,n.n=2,chrome.storage.local.get("nest_analytics");case 2:return t=n.v,r=t.nest_analytics||[],(a=r.find(function(n){return n.date===e}))||(a={id:"analytics-".concat(e),userId:"local",date:e,linksRead:0,highlightsMade:0,timeSpent:0,topicsExplored:[],mostActiveHours:[],readingStreak:0,knowledgeGrowthScore:0}),n.a(2,a);case 3:return n.p=3,o=n.v,console.error("Error getting today analytics:",o),n.a(2,{id:"analytics-".concat(e),userId:"local",date:e,linksRead:0,highlightsMade:0,timeSpent:0,topicsExplored:[],mostActiveHours:[],readingStreak:0,knowledgeGrowthScore:0})}},n,this,[[1,3]])})),function(){return i.apply(this,arguments)})},{key:"saveAnalytics",value:(o=Wo(Yo().m(function n(e){var t,r,a,o,i,s;return Yo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_analytics");case 1:return t=n.v,r=t.nest_analytics||[],(a=r.findIndex(function(n){return n.date===e.date}))>=0?r[a]=e:r.push(e),(o=new Date).setDate(o.getDate()-90),i=r.filter(function(n){return new Date(n.date)>=o}),n.n=2,chrome.storage.local.set({nest_analytics:i});case 2:n.n=4;break;case 3:n.p=3,s=n.v,console.error("Error saving analytics:",s);case 4:return n.a(2)}},n,null,[[0,3]])})),function(n){return o.apply(this,arguments)})},{key:"updateReadingStreak",value:(a=Wo(Yo().m(function n(){var e,t,r,a,o,i;return Yo().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getWeeklyAnalytics();case 1:(e=n.v).sort(function(n,e){return new Date(n.date).getTime()-new Date(e.date).getTime()}),t=0,r=new Date,a=e.length-1;case 2:if(!(a>=0)){n.n=5;break}if(o=new Date(e[a].date),Math.floor((r.getTime()-o.getTime())/864e5)!==t||!(e[a].linksRead>0||e[a].highlightsMade>0)){n.n=3;break}t++,r=o,n.n=4;break;case 3:return n.a(3,5);case 4:a--,n.n=2;break;case 5:return n.n=6,this.getTodayAnalytics();case 6:return(i=n.v).readingStreak=t,n.n=7,this.saveAnalytics(i);case 7:return n.a(2)}},n,this)})),function(){return a.apply(this,arguments)})},{key:"getCurrentReadingStreak",value:function(){return this.getTodayAnalytics().then(function(n){return n.readingStreak})}},{key:"estimateReadingTime",value:function(n){var e=n.split(/\s+/).length;return Math.ceil(e/200)}},{key:"extractTopicsFromContent",value:function(n){var e=this,t=n.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(function(n){return n.length>4}).filter(function(n){return!e.isStopWord(n)}),r=new Map;return t.forEach(function(n){r.set(n,(r.get(n)||0)+1)}),Array.from(r.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,3).map(function(n){return Fo(n,1)[0]})}},{key:"isStopWord",value:function(n){return new Set(["the","and","for","are","but","not","you","all","can","had","her","was","one","our","out","day","get","has","him","his","how","its","may","new","now","old","see","two","who","boy","did","end","few","got","let","man","put","run","say","she","too","use","way","why","your","that","with","have","this","will","been","from","they","know","want","were","what","when","where","said","each","which","their","time","would","there"]).has(n)}},{key:"getTodayString",value:function(){return(new Date).toISOString().split("T")[0]}},{key:"findMostActiveDay",value:function(n){if(0===n.length)return"N/A";var e=n.reduce(function(n,e){return e.linksRead+e.highlightsMade>n.linksRead+n.highlightsMade?e:n});return new Date(e.date).toLocaleDateString()}},{key:"findTopTopics",value:function(n){var e=new Map;return n.forEach(function(n){n.topicsExplored.forEach(function(n){e.set(n,(e.get(n)||0)+1)})}),Array.from(e.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,5).map(function(n){return Fo(n,1)[0]})}},{key:"calculateKnowledgeGrowth",value:function(n){if(n.length<2)return 0;var e=n.sort(function(n,e){return new Date(n.date).getTime()-new Date(e.date).getTime()}),t=e.slice(-7),r=e.slice(-14,-7),a=t.reduce(function(n,e){return n+e.linksRead+e.highlightsMade},0),o=r.reduce(function(n,e){return n+e.linksRead+e.highlightsMade},0);return 0===o?a>0?100:0:Math.round((a-o)/o*100)}},{key:"findPeakHours",value:function(n){var e=new Map;return n.forEach(function(n){n.mostActiveHours.forEach(function(n){e.set(n,(e.get(n)||0)+1)})}),Array.from(e.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,3).map(function(n){return Fo(n,1)[0]})}}],r=[{key:"getInstance",value:function(){return n.instance||(n.instance=new n),n.instance}}],t&&Go(e.prototype,t),r&&Go(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,r,a,o,i,s,c,l,u,d}();function Ko(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Qo(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Qo(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Qo(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Qo(d,"constructor",l),Qo(l,"constructor",c),c.displayName="GeneratorFunction",Qo(l,a,"GeneratorFunction"),Qo(d),Qo(d,a,"Generator"),Qo(d,r,function(){return this}),Qo(d,"toString",function(){return"[object Generator]"}),(Ko=function(){return{w:o,m:A}})()}function Qo(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Qo=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Qo(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Qo(n,e,t,r)}function Zo(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Xo(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Jo(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Jo(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Jo(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const ni=function(n){var e=n.onClose,t=Xo((0,o.useState)(null),2),r=t[0],a=t[1],i=Xo((0,o.useState)(!0),2),s=i[0],c=i[1],l=Xo((0,o.useState)("week"),2),u=l[0],d=l[1];(0,o.useEffect)(function(){p()},[u]);var A,p=function(){var n,e=(n=Ko().m(function n(){var e,t,r;return Ko().w(function(n){for(;;)switch(n.n){case 0:return c(!0),n.p=1,e=Vo.getInstance(),n.n=2,e.calculateInsights();case 2:t=n.v,a(t),n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load analytics:",r);case 4:return n.p=4,c(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}),function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){Zo(o,r,a,i,s,"next",n)}function s(n){Zo(o,r,a,i,s,"throw",n)}i(void 0)})});return function(){return e.apply(this,arguments)}}();return s?(0,Rt.jsxs)("div",{className:"analytics-dashboard",children:[(0,Rt.jsxs)("div",{className:"dashboard-header",children:[(0,Rt.jsx)("button",{onClick:e,className:"close-button",children:"×"}),(0,Rt.jsxs)("h2",{children:[(0,Rt.jsx)(g,{size:20})," Reading Analytics"]})]}),(0,Rt.jsx)("div",{className:"dashboard-loading",children:(0,Rt.jsx)("div",{className:"loading-spinner",children:"Loading analytics..."})})]}):r?(0,Rt.jsxs)("div",{className:"analytics-dashboard",children:[(0,Rt.jsxs)("div",{className:"dashboard-header",children:[(0,Rt.jsx)("button",{onClick:e,className:"close-button",children:"×"}),(0,Rt.jsxs)("h2",{children:[(0,Rt.jsx)(g,{size:20})," Reading Analytics"]}),(0,Rt.jsxs)("div",{className:"timeframe-selector",children:[(0,Rt.jsx)("button",{className:"week"===u?"active":"",onClick:function(){return d("week")},children:"Week"}),(0,Rt.jsx)("button",{className:"month"===u?"active":"",onClick:function(){return d("month")},children:"Month"})]})]}),(0,Rt.jsxs)("div",{className:"dashboard-content",children:[(0,Rt.jsxs)("div",{className:"stats-grid",children:[(0,Rt.jsxs)("div",{className:"stat-card",children:[(0,Rt.jsx)("div",{className:"stat-icon",children:(0,Rt.jsx)(ha,{size:24})}),(0,Rt.jsxs)("div",{className:"stat-content",children:[(0,Rt.jsx)("div",{className:"stat-value",children:r.totalItems}),(0,Rt.jsxs)("div",{className:"stat-label",children:["Items This ",u]})]})]}),(0,Rt.jsxs)("div",{className:"stat-card",children:[(0,Rt.jsx)("div",{className:"stat-icon",children:(0,Rt.jsx)(ga,{size:24})}),(0,Rt.jsxs)("div",{className:"stat-content",children:[(0,Rt.jsx)("div",{className:"stat-value",children:r.averageDaily.toFixed(1)}),(0,Rt.jsx)("div",{className:"stat-label",children:"Daily Average"})]})]}),(0,Rt.jsxs)("div",{className:"stat-card",children:[(0,Rt.jsx)("div",{className:"stat-icon",children:(0,Rt.jsx)(Ba,{size:24})}),(0,Rt.jsxs)("div",{className:"stat-content",children:[(0,Rt.jsx)("div",{className:"stat-value",children:r.readingStreak}),(0,Rt.jsx)("div",{className:"stat-label",children:"Day Streak"})]})]}),(0,Rt.jsxs)("div",{className:"stat-card",children:[(0,Rt.jsx)("div",{className:"stat-icon",children:(A=r.knowledgeGrowth,A>0?(0,Rt.jsx)(Ro,{size:16,className:"text-green-600"}):(0,Rt.jsx)(g,{size:16,className:"text-gray-600"}))}),(0,Rt.jsxs)("div",{className:"stat-content",children:[(0,Rt.jsxs)("div",{className:"stat-value ".concat(function(n){return n>20?"text-green-600":n>0?"text-blue-600":0===n?"text-gray-600":"text-orange-600"}(r.knowledgeGrowth)),children:[r.knowledgeGrowth>0?"+":"",r.knowledgeGrowth,"%"]}),(0,Rt.jsx)("div",{className:"stat-label",children:"Knowledge Growth"})]})]})]}),(0,Rt.jsxs)("div",{className:"insights-section",children:[(0,Rt.jsxs)("h3",{children:[(0,Rt.jsx)(m,{size:20})," Your Reading Insights"]}),(0,Rt.jsxs)("div",{className:"insight-cards",children:["N/A"!==r.mostActiveDay&&(0,Rt.jsxs)("div",{className:"insight-card",children:[(0,Rt.jsx)(va,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Most Active Day:"})," ",r.mostActiveDay]})]}),r.peakHours.length>0&&(0,Rt.jsxs)("div",{className:"insight-card",children:[(0,Rt.jsx)(va,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Peak Hours:"})," ",r.peakHours.map(function(n){var e=n>=12?"PM":"AM";return"".concat(0===n?12:n>12?n-12:n).concat(e)}).join(", ")]})]}),r.topTopics.length>0&&(0,Rt.jsxs)("div",{className:"insight-card",children:[(0,Rt.jsx)(ma,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Top Topics:"})," ",r.topTopics.slice(0,3).join(", ")]})]})]})]}),r.totalItems>0&&(0,Rt.jsxs)("div",{className:"recommendations-section",children:[(0,Rt.jsxs)("h3",{children:[(0,Rt.jsx)(Ro,{size:20})," Recommendations"]}),(0,Rt.jsxs)("div",{className:"recommendation-cards",children:[0===r.readingStreak&&(0,Rt.jsxs)("div",{className:"recommendation-card",children:[(0,Rt.jsx)(ga,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Build a Streak:"})," Try to read or highlight something every day to build consistency!"]})]}),r.averageDaily<1&&(0,Rt.jsxs)("div",{className:"recommendation-card",children:[(0,Rt.jsx)(ha,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Increase Activity:"})," Aim for at least 1-2 highlights or saved links per day."]})]}),r.topTopics.length<3&&(0,Rt.jsxs)("div",{className:"recommendation-card",children:[(0,Rt.jsx)(m,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Explore More:"})," Try reading about different topics to broaden your knowledge base."]})]}),r.knowledgeGrowth>50&&(0,Rt.jsxs)("div",{className:"recommendation-card",children:[(0,Rt.jsx)(Ro,{size:16}),(0,Rt.jsxs)("div",{children:[(0,Rt.jsx)("strong",{children:"Great Progress!"})," You're learning rapidly. Consider reviewing past highlights to reinforce knowledge."]})]})]})]})]})]}):(0,Rt.jsxs)("div",{className:"analytics-dashboard",children:[(0,Rt.jsxs)("div",{className:"dashboard-header",children:[(0,Rt.jsx)("button",{onClick:e,className:"close-button",children:"×"}),(0,Rt.jsxs)("h2",{children:[(0,Rt.jsx)(g,{size:20})," Reading Analytics"]})]}),(0,Rt.jsxs)("div",{className:"dashboard-empty",children:[(0,Rt.jsx)(ha,{size:48,className:"empty-icon"}),(0,Rt.jsx)("p",{children:"Start reading and highlighting to see your analytics!"})]})]})};function ei(n){return ei="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},ei(n)}function ti(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function ri(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ti(Object(t),!0).forEach(function(e){ai(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):ti(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function ai(n,e,t){return(e=function(n){var e=function(n){if("object"!=ei(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=ei(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==ei(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function oi(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return ii(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(ii(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,ii(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,ii(d,"constructor",l),ii(l,"constructor",c),c.displayName="GeneratorFunction",ii(l,a,"GeneratorFunction"),ii(d),ii(d,a,"Generator"),ii(d,r,function(){return this}),ii(d,"toString",function(){return"[object Generator]"}),(oi=function(){return{w:o,m:A}})()}function ii(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}ii=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){ii(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},ii(n,e,t,r)}function si(n){return function(n){if(Array.isArray(n))return Ai(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||di(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ci(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function li(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){ci(o,r,a,i,s,"next",n)}function s(n){ci(o,r,a,i,s,"throw",n)}i(void 0)})}}function ui(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||di(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function di(n,e){if(n){if("string"==typeof n)return Ai(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ai(n,e):void 0}}function Ai(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const pi=function(n){var e=n.onClose,t=ui((0,o.useState)({questions:[],flashcards:[],connections:[],recommendations:[]}),2),r=t[0],a=t[1],i=ui((0,o.useState)(!0),2),s=i[0],c=i[1],d=ui((0,o.useState)("questions"),2),A=d[0],f=d[1],h=ui((0,o.useState)(null),2),g=(h[0],h[1]),v=ui((0,o.useState)([]),2),b=v[0],C=v[1];(0,o.useEffect)(function(){y()},[]);var y=function(){var n=li(oi().m(function n(){var e,t,r,a,o;return oi().w(function(n){for(;;)switch(n.n){case 0:return c(!0),n.p=1,n.n=2,Tt.getData();case 2:return e=n.v,t=[],r=e.links.slice(-10),a=e.links.flatMap(function(n){return n.highlights||[]}).slice(-10),t.push.apply(t,si(r).concat(si(a))),C(t),n.n=3,E(t);case 3:n.n=5;break;case 4:n.p=4,o=n.v,console.error("Failed to load AI insights:",o);case 5:return n.p=5,c(!1),n.f(5);case 6:return n.a(2)}},n,null,[[1,4,5,6]])}));return function(){return n.apply(this,arguments)}}(),E=function(){var n=li(oi().m(function n(e){var t,r,o,i,s,c,l,u,d,A,p,f;return oi().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_settings");case 1:if(r=n.v,o=null===(t=r.nest_settings)||void 0===t?void 0:t.openaiApiKey){n.n=2;break}return console.log("No OpenAI API key found"),n.a(2);case 2:if(i=(0,Ua.createAIService)(o),!(s=e[e.length-1])){n.n=4;break}return n.n=3,Promise.all([i.generateQuestions("text"in s?s.text:"".concat(s.title," - ").concat(s.description||""),"medium"),i.generateFlashcards("text"in s?s.text:"".concat(s.title," - ").concat(s.description||"")),i.findCrossReferences(s,e.slice(0,-1)),i.generateRecommendations(e)]);case 3:c=n.v,l=ui(c,4),u=l[0],d=l[1],A=l[2],p=l[3],a({questions:u,flashcards:d,connections:A,recommendations:p});case 4:n.n=6;break;case 5:n.p=5,f=n.v,console.error("Error loading AI insights:",f);case 6:return n.a(2)}},n,null,[[0,5]])}));return function(e){return n.apply(this,arguments)}}(),B=function(){var n=li(oi().m(function n(e){var t,r,o,i,s,l,u,d,A,p,f;return oi().w(function(n){for(;;)switch(n.n){case 0:return c(!0),g(e),n.p=1,n.n=2,chrome.storage.local.get("nest_settings");case 2:if(r=n.v,o=null===(t=r.nest_settings)||void 0===t?void 0:t.openaiApiKey){n.n=3;break}return alert("Please configure your OpenAI API key in settings to use AI insights."),n.a(2);case 3:return i=(0,Ua.createAIService)(o),s="text"in e?e.text:"".concat(e.title," - ").concat(e.description||""),n.n=4,Promise.all([i.generateQuestions(s,"medium"),i.generateFlashcards(s),i.findCrossReferences(e,b.filter(function(n){return n.id!==e.id}))]);case 4:l=n.v,u=ui(l,3),d=u[0],A=u[1],p=u[2],a(function(n){return ri(ri({},n),{},{questions:d,flashcards:A,connections:p})}),n.n=6;break;case 5:n.p=5,f=n.v,console.error("Error generating insights:",f),alert("Failed to generate insights. Please check your API key and try again.");case 6:return n.p=6,c(!1),n.f(6);case 7:return n.a(2)}},n,null,[[1,5,6,7]])}));return function(e){return n.apply(this,arguments)}}(),x=function(){var n=li(oi().m(function n(e,t){var r;return oi().w(function(n){for(;;)switch(n.n){case 0:r=ri(ri({},e),{},{userRating:t,isReviewed:!0}),a(function(n){return ri(ri({},n),{},ai({},"question"===e.type?"questions":"flashcard"===e.type?"flashcards":"recommendations",n["question"===e.type?"questions":"flashcard"===e.type?"flashcards":"recommendations"].map(function(n){return n.id===e.id?r:n})))});case 1:return n.a(2)}},n)}));return function(e,t){return n.apply(this,arguments)}}(),k=[{id:"questions",label:"Questions",icon:p,count:r.questions.length},{id:"flashcards",label:"Flashcards",icon:l,count:r.flashcards.length},{id:"connections",label:"Connections",icon:lr,count:r.connections.length},{id:"recommendations",label:"Recommendations",icon:ma,count:r.recommendations.length}];return(0,Rt.jsxs)("div",{className:"ai-insights",children:[(0,Rt.jsxs)("div",{className:"insights-header",children:[(0,Rt.jsx)("button",{onClick:e,className:"close-button",children:(0,Rt.jsx)(u,{size:20})}),(0,Rt.jsxs)("h2",{children:[(0,Rt.jsx)(m,{size:20})," AI Insights"]}),(0,Rt.jsx)("button",{onClick:y,className:"refresh-button",disabled:s,children:(0,Rt.jsx)(na,{size:16,className:s?"spinning":""})})]}),(0,Rt.jsx)("div",{className:"insights-tabs",children:k.map(function(n){var e=n.icon;return(0,Rt.jsxs)("button",{onClick:function(){return f(n.id)},className:"tab ".concat(A===n.id?"active":""),children:[(0,Rt.jsx)(e,{size:16}),n.label,n.count>0&&(0,Rt.jsx)("span",{className:"count",children:n.count})]},n.id)})}),(0,Rt.jsxs)("div",{className:"insights-content",children:[b.length>0&&(0,Rt.jsxs)("div",{className:"quick-insights",children:[(0,Rt.jsx)("h3",{children:"Generate Insights For:"}),(0,Rt.jsx)("div",{className:"recent-items",children:b.slice(-5).map(function(n){return(0,Rt.jsx)("button",{onClick:function(){return B(n)},className:"recent-item",disabled:s,children:"text"in n?(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsx)(p,{size:14}),n.text.slice(0,50),"..."]}):(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsx)(l,{size:14}),n.title]})},n.id)})})]}),s?(0,Rt.jsxs)("div",{className:"loading-state",children:[(0,Rt.jsx)(na,{size:24,className:"spinning"}),(0,Rt.jsx)("p",{children:"Generating AI insights..."})]}):(0,Rt.jsxs)(Rt.Fragment,{children:["questions"===A&&(0,Rt.jsx)("div",{className:"insights-list",children:0===r.questions.length?(0,Rt.jsxs)("div",{className:"empty-state",children:[(0,Rt.jsx)(p,{size:48,className:"empty-icon"}),(0,Rt.jsx)("p",{children:"Generate questions to test your understanding"})]}):r.questions.map(function(n){var e;return(0,Rt.jsxs)("div",{className:"insight-card",children:[(0,Rt.jsxs)("div",{className:"insight-header",children:[(0,Rt.jsx)(p,{size:16}),(0,Rt.jsx)("span",{className:"insight-type",children:"Question"}),(0,Rt.jsx)("div",{className:"insight-rating",children:[1,2,3,4,5].map(function(e){return(0,Rt.jsx)("button",{onClick:function(){return x(n,e)},className:"star ".concat((n.userRating||0)>=e?"filled":""),children:(0,Rt.jsx)(xa,{size:12})},e)})})]}),(0,Rt.jsx)("div",{className:"insight-content",children:n.content}),(null===(e=n.metadata)||void 0===e?void 0:e.difficulty)&&(0,Rt.jsx)("div",{className:"insight-meta",children:(0,Rt.jsx)("span",{className:"difficulty ".concat(n.metadata.difficulty),children:n.metadata.difficulty})})]},n.id)})}),"flashcards"===A&&(0,Rt.jsx)("div",{className:"insights-list",children:0===r.flashcards.length?(0,Rt.jsxs)("div",{className:"empty-state",children:[(0,Rt.jsx)(l,{size:48,className:"empty-icon"}),(0,Rt.jsx)("p",{children:"Generate flashcards for better retention"})]}):r.flashcards.map(function(n){return(0,Rt.jsxs)("div",{className:"flashcard",children:[(0,Rt.jsxs)("div",{className:"flashcard-header",children:[(0,Rt.jsx)(l,{size:16}),(0,Rt.jsx)("span",{className:"insight-type",children:"Flashcard"}),(0,Rt.jsx)("div",{className:"insight-rating",children:[1,2,3,4,5].map(function(e){return(0,Rt.jsx)("button",{onClick:function(){return x(n,e)},className:"star ".concat((n.userRating||0)>=e?"filled":""),children:(0,Rt.jsx)(xa,{size:12})},e)})})]}),(0,Rt.jsx)("div",{className:"flashcard-content",children:n.content.split("\n").map(function(n,e){return(0,Rt.jsx)("div",{className:n.startsWith("Question:")?"question":n.startsWith("Answer:")?"answer":"",children:n},e)})})]},n.id)})}),"connections"===A&&(0,Rt.jsx)("div",{className:"insights-list",children:0===r.connections.length?(0,Rt.jsxs)("div",{className:"empty-state",children:[(0,Rt.jsx)(lr,{size:48,className:"empty-icon"}),(0,Rt.jsx)("p",{children:"Cross-references between your content will appear here"})]}):r.connections.map(function(n){return(0,Rt.jsxs)("div",{className:"connection-card",children:[(0,Rt.jsxs)("div",{className:"connection-header",children:[(0,Rt.jsx)(lr,{size:16}),(0,Rt.jsx)("span",{className:"relationship ".concat(n.relationshipType),children:n.relationshipType.replace("-"," ")}),(0,Rt.jsxs)("span",{className:"strength",children:[Math.round(100*n.strength),"% match"]})]}),(0,Rt.jsxs)("div",{className:"connection-content",children:[(0,Rt.jsxs)("div",{className:"connection-target",children:["Connected to: ",(0,Rt.jsx)("strong",{children:n.targetId})]}),n.note&&(0,Rt.jsx)("div",{className:"connection-note",children:n.note})]})]},n.id)})}),"recommendations"===A&&(0,Rt.jsx)("div",{className:"insights-list",children:0===r.recommendations.length?(0,Rt.jsxs)("div",{className:"empty-state",children:[(0,Rt.jsx)(ma,{size:48,className:"empty-icon"}),(0,Rt.jsx)("p",{children:"Content recommendations based on your reading will appear here"})]}):r.recommendations.map(function(n){var e;return(0,Rt.jsxs)("div",{className:"insight-card",children:[(0,Rt.jsxs)("div",{className:"insight-header",children:[(0,Rt.jsx)(ma,{size:16}),(0,Rt.jsx)("span",{className:"insight-type",children:"Recommendation"}),(0,Rt.jsx)("div",{className:"insight-rating",children:[1,2,3,4,5].map(function(e){return(0,Rt.jsx)("button",{onClick:function(){return x(n,e)},className:"star ".concat((n.userRating||0)>=e?"filled":""),children:(0,Rt.jsx)(xa,{size:12})},e)})})]}),(0,Rt.jsx)("div",{className:"insight-content",children:n.content}),(null===(e=n.metadata)||void 0===e?void 0:e.confidence)&&(0,Rt.jsx)("div",{className:"insight-meta",children:(0,Rt.jsxs)("span",{className:"confidence",children:[Math.round(100*n.metadata.confidence),"% confidence"]})})]},n.id)})})]})]})]})},fi=c("Shield",[["path",{d:"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10",key:"1irkt0"}]]),hi=c("Timer",[["line",{x1:"10",x2:"14",y1:"2",y2:"2",key:"14vaq8"}],["line",{x1:"12",x2:"15",y1:"14",y2:"11",key:"17fdiu"}],["circle",{cx:"12",cy:"14",r:"8",key:"1e1u0o"}]]),gi=c("Pause",[["rect",{width:"4",height:"16",x:"6",y:"4",key:"iffhe4"}],["rect",{width:"4",height:"16",x:"14",y:"4",key:"sjin7j"}]]),mi=c("Play",[["polygon",{points:"5 3 19 12 5 21 5 3",key:"191637"}]]);function vi(n){return vi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},vi(n)}function bi(n){return function(n){if(Array.isArray(n))return zi(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Si(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ci(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function yi(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Ci(Object(t),!0).forEach(function(e){Ei(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Ci(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Ei(n,e,t){return(e=function(n){var e=function(n){if("object"!=vi(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=vi(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==vi(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Bi(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return xi(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(xi(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,xi(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,xi(d,"constructor",l),xi(l,"constructor",c),c.displayName="GeneratorFunction",xi(l,a,"GeneratorFunction"),xi(d),xi(d,a,"Generator"),xi(d,r,function(){return this}),xi(d,"toString",function(){return"[object Generator]"}),(Bi=function(){return{w:o,m:A}})()}function xi(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}xi=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){xi(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},xi(n,e,t,r)}function ki(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function wi(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){ki(o,r,a,i,s,"next",n)}function s(n){ki(o,r,a,i,s,"throw",n)}i(void 0)})}}function ji(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||Si(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Si(n,e){if(n){if("string"==typeof n)return zi(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?zi(n,e):void 0}}function zi(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Ni=function(n){var e=n.isOpen,t=n.onClose,r=ji((0,o.useState)(null),2),a=r[0],i=r[1],s=ji((0,o.useState)(!1),2),c=s[0],l=s[1],d=ji((0,o.useState)(0),2),A=d[0],p=d[1],f=ji((0,o.useState)("reading"),2),h=f[0],g=f[1],m=ji((0,o.useState)(25),2),b=m[0],C=m[1],y=ji((0,o.useState)([]),2),E=y[0],B=y[1],x=ji((0,o.useState)(""),2),k=x[0],w=x[1],j=ji((0,o.useState)([]),2),S=j[0],z=j[1],N=ji((0,o.useState)(!1),2),I=N[0],_=N[1];(0,o.useEffect)(function(){var n;return c&&A>0&&(n=setInterval(function(){p(function(n){return n<=1?(q(),0):n-1})},1e3)),function(){return clearInterval(n)}},[c,A]),(0,o.useEffect)(function(){L()},[]);var T,P,D,L=function(){var n=wi(Bi().m(function n(){var e,t,r,a,o;return Bi().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_focus_mode");case 1:(e=n.v).nest_focus_mode&&(t=e.nest_focus_mode,i(t),t.enabled&&(l(!0),g(t.type),r=Date.now()-t.startTime.getTime(),a=Math.max(0,60*t.plannedDuration*1e3-r),p(Math.floor(a/1e3)))),n.n=3;break;case 2:n.p=2,o=n.v,console.error("Failed to load focus mode:",o);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),R=function(){var n=wi(Bi().m(function n(e){var t;return Bi().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({nest_focus_mode:e});case 1:i(e),n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to save focus mode:",t);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}(),M=function(){var n=wi(Bi().m(function n(){var e;return Bi().w(function(n){for(;;)switch(n.n){case 0:return e={enabled:!0,type:h,startTime:new Date,plannedDuration:b,blockedSites:S,allowedSites:[],goals:E,customSettings:{}},n.n=1,R(e);case 1:p(60*b),l(!0),chrome.runtime.sendMessage({action:"enableFocusMode",focusMode:e}),chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"🎯 Focus Mode Started",message:"".concat(b," minute ").concat(h," session started")});case 2:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),F=function(){var n=wi(Bi().m(function n(){var e;return Bi().w(function(n){for(;;)switch(n.n){case 0:if(l(!1),!a){n.n=1;break}return e=yi(yi({},a),{},{enabled:!1}),n.n=1,R(e);case 1:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),U=function(){var n=wi(Bi().m(function n(){var e;return Bi().w(function(n){for(;;)switch(n.n){case 0:if(l(!0),!a){n.n=1;break}return e=yi(yi({},a),{},{enabled:!0}),n.n=1,R(e);case 1:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),Y=function(){var n=wi(Bi().m(function n(){var e;return Bi().w(function(n){for(;;)switch(n.n){case 0:if(l(!1),p(0),!a){n.n=1;break}return e=yi(yi({},a),{},{enabled:!1}),n.n=1,R(e);case 1:chrome.runtime.sendMessage({action:"disableFocusMode"}),chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"✅ Focus Session Complete",message:"Great job staying focused!"});case 2:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),q=function(){var n=wi(Bi().m(function n(){return Bi().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,Y();case 1:chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"🎉 Focus Session Complete!",message:"You successfully completed a ".concat(b," minute ").concat(h," session!")});case 2:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),$=function(){k.trim()&&!E.includes(k.trim())&&(B([].concat(bi(E),[k.trim()])),w(""))},W=function(n){switch(n){case"reading":return{icon:(0,Rt.jsx)(ha,{size:20}),color:"#3b82f6",description:"Deep reading with minimal distractions",defaultSites:["social media","news","shopping"]};case"research":return{icon:(0,Rt.jsx)(ga,{size:20}),color:"#10b981",description:"Focused research with academic tools",defaultSites:["entertainment","social media","games"]};case"distraction-free":return{icon:(0,Rt.jsx)(fi,{size:20}),color:"#8b5cf6",description:"Complete focus with all distractions blocked",defaultSites:["all non-essential sites"]};default:return{icon:(0,Rt.jsx)(v,{size:20}),color:"#6b7280",description:"General focus mode",defaultSites:[]}}};return e?(0,Rt.jsx)("div",{className:"modal-overlay",onClick:t,children:(0,Rt.jsxs)("div",{className:"modal-content focus-mode-modal",onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsxs)("h2",{className:"modal-title",children:[(0,Rt.jsx)(v,{size:24}),"Focus Mode"]}),(0,Rt.jsx)("button",{onClick:t,className:"modal-close-button",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsx)("div",{className:"modal-body",children:c?(0,Rt.jsxs)("div",{className:"focus-session-active",children:[(0,Rt.jsxs)("div",{className:"focus-timer",children:[(0,Rt.jsxs)("div",{className:"timer-display",children:[(0,Rt.jsx)(hi,{size:48}),(0,Rt.jsx)("div",{className:"time-remaining",children:(T=A,P=Math.floor(T/60),D=T%60,"".concat(P.toString().padStart(2,"0"),":").concat(D.toString().padStart(2,"0")))})]}),(0,Rt.jsxs)("div",{className:"session-info",children:[(0,Rt.jsxs)("div",{className:"session-type",children:[W(h).icon,(0,Rt.jsxs)("span",{children:[h.charAt(0).toUpperCase()+h.slice(1)," Session"]})]}),E.length>0&&(0,Rt.jsxs)("div",{className:"session-goals",children:[(0,Rt.jsx)("h4",{children:"Session Goals:"}),(0,Rt.jsx)("ul",{children:E.map(function(n,e){return(0,Rt.jsx)("li",{children:n},e)})})]})]})]}),(0,Rt.jsxs)("div",{className:"focus-controls",children:[(0,Rt.jsxs)("button",{onClick:c?F:U,className:"control-button primary",children:[c?(0,Rt.jsx)(gi,{size:16}):(0,Rt.jsx)(mi,{size:16}),c?"Pause":"Resume"]}),(0,Rt.jsxs)("button",{onClick:Y,className:"control-button secondary",children:[(0,Rt.jsx)(ea,{size:16}),"Stop Session"]})]})]}):(0,Rt.jsx)("div",{className:"focus-setup",children:I?(0,Rt.jsxs)("div",{className:"focus-settings",children:[(0,Rt.jsxs)("div",{className:"settings-header",children:[(0,Rt.jsx)("h3",{children:"Advanced Settings"}),(0,Rt.jsx)("button",{onClick:function(){return _(!1)},className:"back-button",title:"Go back to main settings",children:"Back"})]}),(0,Rt.jsxs)("div",{className:"blocked-sites-section",children:[(0,Rt.jsx)("h4",{children:"Blocked Sites"}),(0,Rt.jsx)("p",{children:"Sites that will be blocked during focus sessions"}),(0,Rt.jsx)("div",{className:"blocked-sites-list",children:["facebook.com","twitter.com","youtube.com","reddit.com","tiktok.com"].map(function(n){return(0,Rt.jsxs)("label",{className:"site-checkbox",children:[(0,Rt.jsx)("input",{type:"checkbox",checked:S.includes(n),onChange:function(e){e.target.checked?z([].concat(bi(S),[n])):z(S.filter(function(e){return e!==n}))}}),(0,Rt.jsx)("span",{children:n})]},n)})})]})]}):(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsxs)("div",{className:"focus-type-selection",children:[(0,Rt.jsx)("h3",{children:"Choose Focus Type"}),(0,Rt.jsx)("div",{className:"focus-types",children:["reading","research","distraction-free"].map(function(n){var e=W(n);return(0,Rt.jsxs)("button",{onClick:function(){return g(n)},className:"focus-type-card ".concat(h===n?"selected":""),style:{borderColor:h===n?e.color:void 0},children:[(0,Rt.jsx)("div",{className:"focus-type-icon",style:{color:e.color},children:e.icon}),(0,Rt.jsxs)("div",{className:"focus-type-info",children:[(0,Rt.jsx)("h4",{children:n.charAt(0).toUpperCase()+n.slice(1)}),(0,Rt.jsx)("p",{children:e.description})]})]},n)})})]}),(0,Rt.jsxs)("div",{className:"duration-selection",children:[(0,Rt.jsx)("h3",{children:"Session Duration"}),(0,Rt.jsx)("div",{className:"duration-options",children:[15,25,45,60,90].map(function(n){return(0,Rt.jsxs)("button",{onClick:function(){return C(n)},className:"duration-option ".concat(b===n?"selected":""),children:[n,"m"]},n)})}),(0,Rt.jsxs)("div",{className:"custom-duration",children:[(0,Rt.jsx)("input",{type:"number",value:b,onChange:function(n){return C(parseInt(n.target.value)||25)},min:"5",max:"180",className:"duration-input"}),(0,Rt.jsx)("span",{children:"minutes"})]})]}),(0,Rt.jsxs)("div",{className:"session-goals",children:[(0,Rt.jsx)("h3",{children:"Session Goals (Optional)"}),(0,Rt.jsxs)("div",{className:"goal-input",children:[(0,Rt.jsx)("input",{type:"text",value:k,onChange:function(n){return w(n.target.value)},onKeyPress:function(n){return"Enter"===n.key&&$()},placeholder:"Add a goal for this session...",className:"goal-input-field"}),(0,Rt.jsx)("button",{onClick:$,className:"add-goal-button",title:"Add goal to session",children:"Add"})]}),E.length>0&&(0,Rt.jsx)("div",{className:"goals-list",children:E.map(function(n,e){return(0,Rt.jsxs)("div",{className:"goal-item",children:[(0,Rt.jsx)("span",{children:n}),(0,Rt.jsx)("button",{onClick:function(){return function(n){B(E.filter(function(e){return e!==n}))}(n)},className:"remove-goal",title:"Remove goal: ".concat(n),"aria-label":"Remove goal: ".concat(n),children:(0,Rt.jsx)(u,{size:14})})]},e)})})]}),(0,Rt.jsxs)("div",{className:"focus-actions",children:[(0,Rt.jsxs)("button",{onClick:M,className:"start-focus-button",children:[(0,Rt.jsx)(mi,{size:16}),"Start Focus Session"]}),(0,Rt.jsxs)("button",{onClick:function(){return _(!0)},className:"settings-button secondary",children:[(0,Rt.jsx)(O,{size:16}),"Advanced Settings"]})]})]})})})]})}):null},Ii=c("Minimize2",[["polyline",{points:"4 14 10 14 10 20",key:"11kfnr"}],["polyline",{points:"20 10 14 10 14 4",key:"rlmsce"}],["line",{x1:"14",x2:"21",y1:"10",y2:"3",key:"o5lafz"}],["line",{x1:"3",x2:"10",y1:"21",y2:"14",key:"1atl0r"}]]),_i=c("Maximize2",[["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["polyline",{points:"9 21 3 21 3 15",key:"1avn1i"}],["line",{x1:"21",x2:"14",y1:"3",y2:"10",key:"ota7mn"}],["line",{x1:"3",x2:"10",y1:"21",y2:"14",key:"1atl0r"}]]),Ti=c("Link",[["path",{d:"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71",key:"1cjeqo"}],["path",{d:"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71",key:"19qd67"}]]);function Oi(n){return Oi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Oi(n)}function Pi(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Di(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Pi(Object(t),!0).forEach(function(e){Li(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Pi(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Li(n,e,t){return(e=function(n){var e=function(n){if("object"!=Oi(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Oi(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Oi(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Ri(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return Mi(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Mi(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,Mi(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,Mi(d,"constructor",l),Mi(l,"constructor",c),c.displayName="GeneratorFunction",Mi(l,a,"GeneratorFunction"),Mi(d),Mi(d,a,"Generator"),Mi(d,r,function(){return this}),Mi(d,"toString",function(){return"[object Generator]"}),(Ri=function(){return{w:o,m:A}})()}function Mi(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Mi=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){Mi(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},Mi(n,e,t,r)}function Fi(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function Ui(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Yi(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Yi(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yi(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const qi=function(n){var e=n.isOpen,t=n.onClose,r=n.links,a=(0,o.useRef)(null),i=Ui((0,o.useState)([]),2),s=i[0],c=i[1],l=Ui((0,o.useState)([]),2),d=l[0],A=l[1],p=Ui((0,o.useState)(null),2),f=p[0],h=p[1],g=Ui((0,o.useState)(!1),2),m=(g[0],g[1],Ui((0,o.useState)({x:0,y:0}),2)),v=(m[0],m[1],Ui((0,o.useState)(1),2)),C=v[0],y=v[1],E=Ui((0,o.useState)({x:0,y:0}),2),B=E[0],x=(E[1],Ui((0,o.useState)(!1),2)),k=x[0],j=x[1],S=Ui((0,o.useState)(!1),2),z=S[0],N=S[1],I=Ui((0,o.useState)({showLinks:!0,showHighlights:!0,showNotes:!0,showTags:!0,minConnectionStrength:.3}),2),_=I[0],T=I[1];(0,o.useEffect)(function(){e&&P()},[e,r]),(0,o.useEffect)(function(){e&&L()},[s,d,C,B,_]);var P=function(){var n,e=(n=Ri().m(function n(){var e,t,a,o,i,s,l,u;return Ri().w(function(n){for(;;)switch(n.n){case 0:for(e=[],t=[],r.forEach(function(n,r){_.showLinks&&e.push({id:"link-".concat(n.id),type:"link",title:n.title,content:n.aiSummary||n.userNote||"",url:n.url,position:{x:200*Math.cos(.5*r)+300,y:200*Math.sin(.5*r)+300},connections:[],metadata:{domain:n.domain,tags:n.tags||[],createdAt:n.createdAt}}),_.showHighlights&&n.highlights&&n.highlights.forEach(function(a,o){e.push({id:"highlight-".concat(a.id),type:"highlight",title:a.selectedText.substring(0,50)+"...",content:a.selectedText,position:{x:150*Math.cos(.7*(r+o))+300,y:150*Math.sin(.7*(r+o))+300},connections:[],metadata:{linkId:n.id,context:a.context}}),t.push({id:"highlight-link-".concat(a.id),sourceId:"highlight-".concat(a.id),targetId:"link-".concat(n.id),type:"cites",strength:1,userCreated:!1,createdAt:new Date})})}),a=0;a<e.length;a++)for(o=a+1;o<e.length;o++)i=e[a],s=e[o],(l=D(i,s))>=_.minConnectionStrength&&t.push({id:"auto-".concat(i.id,"-").concat(s.id),sourceId:i.id,targetId:s.id,type:"relates",strength:l,userCreated:!1,createdAt:new Date});_.showTags&&(u=new Set,r.forEach(function(n){(n.tags||[]).forEach(function(n){return u.add(n)})}),Array.from(u).forEach(function(n,a){e.push({id:"tag-".concat(n),type:"tag",title:n,content:"Tag: ".concat(n),position:{x:100*Math.cos(1.2*a)+300,y:100*Math.sin(1.2*a)+300},connections:[],metadata:{name:n}}),r.forEach(function(e){(e.tags||[]).includes(n)&&t.push({id:"tag-link-".concat(n,"-").concat(e.id),sourceId:"tag-".concat(n),targetId:"link-".concat(e.id),type:"relates",strength:.8,userCreated:!1,createdAt:new Date})})})),c(e),A(t);case 1:return n.a(2)}},n)}),function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){Fi(o,r,a,i,s,"next",n)}function s(n){Fi(o,r,a,i,s,"throw",n)}i(void 0)})});return function(){return e.apply(this,arguments)}}(),D=function(n,e){var t=0;n.metadata.domain&&e.metadata.domain&&n.metadata.domain===e.metadata.domain&&(t+=.3);var r=n.metadata.tags||[],a=e.metadata.tags||[];t+=.2*r.filter(function(n){return a.includes(n)}).length;var o=(n.title+" "+n.content).toLowerCase(),i=(e.title+" "+e.content).toLowerCase(),s=o.split(/\s+/).filter(function(n){return n.length>3}),c=i.split(/\s+/).filter(function(n){return n.length>3}),l=s.filter(function(n){return c.includes(n)});return t+=Math.min(.1*l.length,.5),Math.min(t,1)},L=function(){var n=a.current;if(n){var e=n.getContext("2d");e&&(e.clearRect(0,0,n.width,n.height),e.save(),e.translate(B.x,B.y),e.scale(C,C),d.forEach(function(n){var t=s.find(function(e){return e.id===n.sourceId}),r=s.find(function(e){return e.id===n.targetId});t&&r&&n.strength>=_.minConnectionStrength&&F(e,t,r,n)}),s.forEach(function(n){R(n)&&M(e,n,n.id===(null==f?void 0:f.id))}),e.restore())}},R=function(n){switch(n.type){case"link":return _.showLinks;case"highlight":return _.showHighlights;case"note":return _.showNotes;case"tag":return _.showTags;default:return!0}},M=function(n,e,t){var r=e.position,a=r.x,o=r.y,i=U(e),s=Y(e);n.beginPath(),n.arc(a,o,i,0,2*Math.PI),n.fillStyle=s,n.fill(),t&&(n.strokeStyle="#3b82f6",n.lineWidth=3,n.stroke()),n.fillStyle="#ffffff",n.font="12px Arial",n.textAlign="center",n.textBaseline="middle";var c=q(e);n.fillText(c,a,o),C>.5&&(n.fillStyle="#333333",n.font="10px Arial",n.fillText(e.title.substring(0,20),a,o+i+15))},F=function(n,e,t,r){n.beginPath(),n.moveTo(e.position.x,e.position.y),n.lineTo(t.position.x,t.position.y),n.strokeStyle=$(r),n.lineWidth=Math.max(1,3*r.strength),n.globalAlpha=r.strength,n.stroke(),n.globalAlpha=1},U=function(n){switch(n.type){case"link":return 20;case"highlight":default:return 15;case"note":return 18;case"tag":return 12}},Y=function(n){switch(n.type){case"link":return"#3b82f6";case"highlight":return"#10b981";case"note":return"#f59e0b";case"tag":return"#8b5cf6";default:return"#6b7280"}},q=function(n){switch(n.type){case"link":return"🔗";case"highlight":return"✨";case"note":return"📝";case"tag":return"🏷️";default:return"●"}},$=function(n){switch(n.type){case"relates":default:return"#94a3b8";case"contradicts":return"#ef4444";case"supports":return"#10b981";case"cites":return"#3b82f6";case"builds-on":return"#8b5cf6"}};return e?(0,Rt.jsx)("div",{className:"modal-overlay",onClick:t,children:(0,Rt.jsxs)("div",{className:"modal-content knowledge-graph-modal ".concat(k?"fullscreen":""),onClick:function(n){return n.stopPropagation()},children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsxs)("h2",{className:"modal-title",children:[(0,Rt.jsx)(b,{size:24}),"Knowledge Graph"]}),(0,Rt.jsxs)("div",{className:"header-actions",children:[(0,Rt.jsx)("button",{onClick:function(){return N(!z)},className:"action-button",title:"Graph settings",children:(0,Rt.jsx)(O,{size:16})}),(0,Rt.jsx)("button",{onClick:function(){return j(!k)},className:"action-button",title:k?"Exit fullscreen":"Enter fullscreen",children:k?(0,Rt.jsx)(Ii,{size:16}):(0,Rt.jsx)(_i,{size:16})}),(0,Rt.jsx)("button",{onClick:P,className:"action-button",title:"Refresh graph",children:(0,Rt.jsx)(wr,{size:16})}),(0,Rt.jsx)("button",{onClick:t,className:"modal-close-button",children:(0,Rt.jsx)(u,{size:20})})]})]}),(0,Rt.jsxs)("div",{className:"knowledge-graph-body",children:[z&&(0,Rt.jsxs)("div",{className:"graph-settings",children:[(0,Rt.jsx)("h3",{children:"Graph Settings"}),(0,Rt.jsxs)("div",{className:"setting-group",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:_.showLinks,onChange:function(n){return T(Di(Di({},_),{},{showLinks:n.target.checked}))}}),(0,Rt.jsx)(Ti,{size:16}),"Show Links"]}),(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:_.showHighlights,onChange:function(n){return T(Di(Di({},_),{},{showHighlights:n.target.checked}))}}),(0,Rt.jsx)(ma,{size:16}),"Show Highlights"]}),(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("input",{type:"checkbox",checked:_.showTags,onChange:function(n){return T(Di(Di({},_),{},{showTags:n.target.checked}))}}),(0,Rt.jsx)(w,{size:16}),"Show Tags"]})]}),(0,Rt.jsx)("div",{className:"setting-group",children:(0,Rt.jsxs)("label",{children:["Connection Strength: ",_.minConnectionStrength.toFixed(1),(0,Rt.jsx)("input",{type:"range",min:"0",max:"1",step:"0.1",value:_.minConnectionStrength,onChange:function(n){return T(Di(Di({},_),{},{minConnectionStrength:parseFloat(n.target.value)}))}})]})})]}),(0,Rt.jsxs)("div",{className:"graph-container",children:[(0,Rt.jsx)("canvas",{ref:a,width:k?window.innerWidth-40:800,height:k?window.innerHeight-120:600,onClick:function(n){var e=a.current;if(e){var t=e.getBoundingClientRect(),r=(n.clientX-t.left-B.x)/C,o=(n.clientY-t.top-B.y)/C,i=s.find(function(n){return Math.sqrt(Math.pow(r-n.position.x,2)+Math.pow(o-n.position.y,2))<=U(n)});h(i||null)}},onWheel:function(n){n.preventDefault();var e=Math.max(.1,Math.min(3,C+(n.deltaY>0?-.1:.1)));y(e)},className:"knowledge-graph-canvas"}),(0,Rt.jsxs)("div",{className:"graph-controls",children:[(0,Rt.jsx)("button",{onClick:function(){return y(1.2*C)},title:"Zoom in",children:"+"}),(0,Rt.jsx)("button",{onClick:function(){return y(.8*C)},title:"Zoom out",children:"-"}),(0,Rt.jsxs)("span",{children:[Math.round(100*C),"%"]})]})]}),f&&(0,Rt.jsxs)("div",{className:"node-details",children:[(0,Rt.jsx)("h3",{children:f.title}),(0,Rt.jsx)("p",{className:"node-type",children:f.type.toUpperCase()}),(0,Rt.jsx)("p",{className:"node-content",children:f.content}),f.url&&(0,Rt.jsxs)("button",{onClick:function(){return window.open(f.url,"_blank")},className:"open-link-button",children:[(0,Rt.jsx)(Ti,{size:14}),"Open Link"]})]})]}),(0,Rt.jsxs)("div",{className:"graph-legend",children:[(0,Rt.jsxs)("div",{className:"legend-item",children:[(0,Rt.jsx)("div",{className:"legend-node",style:{backgroundColor:"#3b82f6"}}),(0,Rt.jsx)("span",{children:"Links"})]}),(0,Rt.jsxs)("div",{className:"legend-item",children:[(0,Rt.jsx)("div",{className:"legend-node",style:{backgroundColor:"#10b981"}}),(0,Rt.jsx)("span",{children:"Highlights"})]}),(0,Rt.jsxs)("div",{className:"legend-item",children:[(0,Rt.jsx)("div",{className:"legend-node",style:{backgroundColor:"#8b5cf6"}}),(0,Rt.jsx)("span",{children:"Tags"})]})]})]})}):null},$i=c("Mic",[["path",{d:"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z",key:"131961"}],["path",{d:"M19 10v2a7 7 0 0 1-14 0v-2",key:"1vc78b"}],["line",{x1:"12",x2:"12",y1:"19",y2:"22",key:"x3vr5v"}]]),Wi=c("Save",[["path",{d:"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z",key:"1owoqh"}],["polyline",{points:"17 21 17 13 7 13 7 21",key:"1md35c"}],["polyline",{points:"7 3 7 8 15 8",key:"8nz8an"}]]),Gi=c("Type",[["polyline",{points:"4 7 4 4 20 4 20 7",key:"1nosan"}],["line",{x1:"9",x2:"15",y1:"20",y2:"20",key:"swin9y"}],["line",{x1:"12",x2:"12",y1:"4",y2:"20",key:"1tx1rr"}]]),Hi=c("Bold",[["path",{d:"M14 12a4 4 0 0 0 0-8H6v8",key:"v2sylx"}],["path",{d:"M15 20a4 4 0 0 0 0-8H6v8Z",key:"1ef5ya"}]]),Vi=c("Italic",[["line",{x1:"19",x2:"10",y1:"4",y2:"4",key:"15jd3p"}],["line",{x1:"14",x2:"5",y1:"20",y2:"20",key:"bu0au3"}],["line",{x1:"15",x2:"9",y1:"4",y2:"20",key:"uljnxc"}]]),Ki=c("Underline",[["path",{d:"M6 4v6a6 6 0 0 0 12 0V4",key:"9kb039"}],["line",{x1:"4",x2:"20",y1:"20",y2:"20",key:"nun2al"}]]);function Qi(n){return Qi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Qi(n)}function Zi(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Xi(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Zi(Object(t),!0).forEach(function(e){Ji(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Zi(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Ji(n,e,t){return(e=function(n){var e=function(n){if("object"!=Qi(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Qi(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Qi(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function ns(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return es(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(es(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,es(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,es(d,"constructor",l),es(l,"constructor",c),c.displayName="GeneratorFunction",es(l,a,"GeneratorFunction"),es(d),es(d,a,"Generator"),es(d,r,function(){return this}),es(d,"toString",function(){return"[object Generator]"}),(ns=function(){return{w:o,m:A}})()}function es(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}es=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){es(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},es(n,e,t,r)}function ts(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function rs(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){ts(o,r,a,i,s,"next",n)}function s(n){ts(o,r,a,i,s,"throw",n)}i(void 0)})}}function as(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return os(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?os(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function os(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const is=function(n){var e=n.isOpen,t=n.onClose,r=n.onSaveVoiceMemo,a=n.onSaveRichNote,i=n.initialNote,s=void 0===i?"":i,c=(n.targetType,n.targetId,as((0,o.useState)(!1),2)),l=c[0],d=c[1],A=as((0,o.useState)(!1),2),p=A[0],f=A[1],h=as((0,o.useState)(0),2),g=h[0],m=h[1],v=as((0,o.useState)(null),2),b=v[0],C=v[1],y=as((0,o.useState)(null),2),E=y[0],B=y[1],x=as((0,o.useState)(""),2),k=x[0],w=x[1],j=as((0,o.useState)(s),2),S=j[0],z=j[1],N=as((0,o.useState)({bold:!1,italic:!1,underline:!1,color:"#000000",backgroundColor:"#ffffff",fontSize:14,fontFamily:"Arial"}),2),I=N[0],_=N[1],T=(0,o.useRef)(null),O=(0,o.useRef)(null),P=(0,o.useRef)(null),D=(0,o.useRef)(null);(0,o.useEffect)(function(){e||(R(),f(!1))},[e]);var L=function(){var n=rs(ns().m(function n(){var e,t,r,a;return ns().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,navigator.mediaDevices.getUserMedia({audio:!0});case 1:e=n.v,t=new MediaRecorder(e),T.current=t,r=[],t.ondataavailable=function(n){r.push(n.data)},t.onstop=function(){var n=new Blob(r,{type:"audio/wav"});C(n);var t=new FileReader;t.onload=function(){B(t.result)},t.readAsDataURL(n),e.getTracks().forEach(function(n){return n.stop()})},t.start(),d(!0),m(0),P.current=setInterval(function(){m(function(n){return n+1})},1e3),n.n=3;break;case 2:n.p=2,a=n.v,console.error("Error starting recording:",a),alert("Unable to access microphone. Please check permissions.");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),R=function(){T.current&&l&&(T.current.stop(),d(!1),P.current&&(clearInterval(P.current),P.current=null))},M=function(){var n=rs(ns().m(function n(){var e;return ns().w(function(n){for(;;)switch(n.n){case 0:if(b){n.n=1;break}return n.a(2);case 1:e={id:"voice-".concat(Date.now(),"-").concat(Math.random().toString(36).substr(2,9)),audioBlob:b,audioDataURL:E||void 0,duration:g,transcription:k||void 0,createdAt:new Date},r(e);case 2:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),F=function(n){var e=n;I.bold&&(e="<strong>".concat(e,"</strong>")),I.italic&&(e="<em>".concat(e,"</em>")),I.underline&&(e="<u>".concat(e,"</u>"));var t=[];return"#000000"!==I.color&&t.push("color: ".concat(I.color)),"#ffffff"!==I.backgroundColor&&t.push("background-color: ".concat(I.backgroundColor)),14!==I.fontSize&&t.push("font-size: ".concat(I.fontSize,"px")),"Arial"!==I.fontFamily&&t.push("font-family: ".concat(I.fontFamily)),t.length>0&&(e='<span style="'.concat(t.join("; "),'">').concat(e,"</span>")),e},U=function(n){"boolean"==typeof I[n]&&_(function(e){return Xi(Xi({},e),{},Ji({},n,!e[n]))})},Y=function(n){var e=Math.floor(n/60),t=n%60;return"".concat(e,":").concat(t.toString().padStart(2,"0"))};return e?(0,Rt.jsx)("div",{className:"modal-overlay",children:(0,Rt.jsxs)("div",{className:"modal rich-annotations-modal",children:[(0,Rt.jsxs)("div",{className:"modal-header",children:[(0,Rt.jsx)("h3",{children:"Rich Annotations"}),(0,Rt.jsx)("button",{onClick:t,className:"modal-close",title:"Close annotations",children:(0,Rt.jsx)(u,{size:20})})]}),(0,Rt.jsxs)("div",{className:"modal-content",children:[(0,Rt.jsxs)("div",{className:"annotation-section",children:[(0,Rt.jsxs)("h4",{children:[(0,Rt.jsx)($i,{size:16}),"Voice Memo"]}),(0,Rt.jsxs)("div",{className:"voice-memo-controls",children:[!l&&!b&&(0,Rt.jsxs)("button",{onClick:L,className:"record-button",children:[(0,Rt.jsx)($i,{size:16}),"Start Recording"]}),l&&(0,Rt.jsxs)("div",{className:"recording-controls",children:[(0,Rt.jsxs)("button",{onClick:R,className:"stop-button",children:[(0,Rt.jsx)(ea,{size:16}),"Stop (",Y(g),")"]}),(0,Rt.jsxs)("div",{className:"recording-indicator",children:[(0,Rt.jsx)("div",{className:"recording-dot"}),"Recording..."]})]}),b&&!l&&(0,Rt.jsxs)("div",{className:"playback-controls",children:[(0,Rt.jsxs)("button",{onClick:p?function(){O.current&&(O.current.pause(),f(!1))}:function(){E&&O.current&&(O.current.src=E,O.current.play(),f(!0))},className:"play-button",children:[p?(0,Rt.jsx)(gi,{size:16}):(0,Rt.jsx)(mi,{size:16}),p?"Pause":"Play"]}),(0,Rt.jsxs)("span",{className:"duration",children:["Duration: ",Y(g)]}),(0,Rt.jsxs)("button",{onClick:function(){C(null),B(null),m(0)},className:"delete-button",title:"Delete recording",children:[(0,Rt.jsx)(u,{size:16}),"Delete"]})]})]}),b&&(0,Rt.jsxs)("div",{className:"transcription-section",children:[(0,Rt.jsx)("label",{htmlFor:"transcription",children:"Transcription (optional):"}),(0,Rt.jsx)("textarea",{id:"transcription",value:k,onChange:function(n){return w(n.target.value)},placeholder:"Add a transcription of your voice memo...",rows:3})]}),b&&(0,Rt.jsxs)("button",{onClick:M,className:"save-memo-button",children:[(0,Rt.jsx)(Wi,{size:16}),"Save Voice Memo"]})]}),(0,Rt.jsxs)("div",{className:"annotation-section",children:[(0,Rt.jsxs)("h4",{children:[(0,Rt.jsx)(Gi,{size:16}),"Rich Text Note"]}),(0,Rt.jsxs)("div",{className:"formatting-toolbar",children:[(0,Rt.jsx)("button",{onClick:function(){return U("bold")},className:"format-button ".concat(I.bold?"active":""),title:"Bold",children:(0,Rt.jsx)(Hi,{size:14})}),(0,Rt.jsx)("button",{onClick:function(){return U("italic")},className:"format-button ".concat(I.italic?"active":""),title:"Italic",children:(0,Rt.jsx)(Vi,{size:14})}),(0,Rt.jsx)("button",{onClick:function(){return U("underline")},className:"format-button ".concat(I.underline?"active":""),title:"Underline",children:(0,Rt.jsx)(Ki,{size:14})}),(0,Rt.jsxs)("div",{className:"format-group",children:[(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)(Oa,{size:14}),(0,Rt.jsx)("input",{type:"color",value:I.color,onChange:function(n){return _(function(e){return Xi(Xi({},e),{},{color:n.target.value})})},title:"Text Color"})]}),(0,Rt.jsxs)("label",{children:[(0,Rt.jsx)("span",{style:{fontSize:"12px"},children:"BG"}),(0,Rt.jsx)("input",{type:"color",value:I.backgroundColor,onChange:function(n){return _(function(e){return Xi(Xi({},e),{},{backgroundColor:n.target.value})})},title:"Background Color"})]})]}),(0,Rt.jsxs)("select",{value:I.fontSize,onChange:function(n){return _(function(e){return Xi(Xi({},e),{},{fontSize:parseInt(n.target.value)})})},className:"font-size-select",title:"Font size","aria-label":"Font size",children:[(0,Rt.jsx)("option",{value:12,children:"12px"}),(0,Rt.jsx)("option",{value:14,children:"14px"}),(0,Rt.jsx)("option",{value:16,children:"16px"}),(0,Rt.jsx)("option",{value:18,children:"18px"}),(0,Rt.jsx)("option",{value:20,children:"20px"})]}),(0,Rt.jsxs)("select",{value:I.fontFamily,onChange:function(n){return _(function(e){return Xi(Xi({},e),{},{fontFamily:n.target.value})})},className:"font-family-select",title:"Font family","aria-label":"Font family",children:[(0,Rt.jsx)("option",{value:"Arial",children:"Arial"}),(0,Rt.jsx)("option",{value:"Georgia",children:"Georgia"}),(0,Rt.jsx)("option",{value:"Times New Roman",children:"Times New Roman"}),(0,Rt.jsx)("option",{value:"Courier New",children:"Courier New"}),(0,Rt.jsx)("option",{value:"Helvetica",children:"Helvetica"})]})]}),(0,Rt.jsx)("textarea",{ref:D,value:S,onChange:function(n){return z(n.target.value)},placeholder:"Write your rich text note...",className:"rich-text-input",style:{fontWeight:I.bold?"bold":"normal",fontStyle:I.italic?"italic":"normal",textDecoration:I.underline?"underline":"none",color:I.color,backgroundColor:I.backgroundColor,fontSize:"".concat(I.fontSize,"px"),fontFamily:I.fontFamily},rows:6}),S.trim()&&(0,Rt.jsxs)("button",{onClick:function(){if(S.trim()){var n={id:"note-".concat(Date.now(),"-").concat(Math.random().toString(36).substr(2,9)),content:F(S),plainText:S,formatting:I,lastEdited:new Date};a(n)}},className:"save-note-button",children:[(0,Rt.jsx)(Wi,{size:16}),"Save Rich Note"]})]})]}),(0,Rt.jsx)("audio",{ref:O,onEnded:function(){return f(!1)}})]})}):null};function ss(n){return ss="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},ss(n)}function cs(n){if(null!=n){var e=n["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],t=0;if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length))return{next:function(){return n&&t>=n.length&&(n=void 0),{value:n&&n[t++],done:!n}}}}throw new TypeError(ss(n)+" is not iterable")}function ls(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=bs(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,a=function(){};return{s:a,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return i=n.done,n},e:function(n){s=!0,o=n},f:function(){try{i||null==t.return||t.return()}finally{if(s)throw o}}}}function us(n){return function(n){if(Array.isArray(n))return Cs(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||bs(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ds(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function As(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ds(Object(t),!0).forEach(function(e){ps(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):ds(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function ps(n,e,t){return(e=function(n){var e=function(n){if("object"!=ss(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=ss(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==ss(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function fs(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var c=r&&r.prototype instanceof s?r:s,l=Object.create(c.prototype);return hs(l,"_invoke",function(t,r,a){var o,s,c,l=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:p,f:p.bind(n,4),d:function(e,t){return o=e,s=0,c=n,A.n=t,i}};function p(t,r){for(s=t,c=r,e=0;!d&&l&&!a&&e<u.length;e++){var a,o=u[e],p=A.p,f=o[2];t>3?(a=f===r)&&(c=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=n):o[0]<=p&&((a=t<2&&p<o[1])?(s=0,A.v=r,A.n=o[1]):p<f&&(a=t<3||o[0]>r||r>f)&&(o[4]=t,o[5]=r,A.n=f,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===u&&p(u,f),s=u,c=f;(e=s<2?n:c)||!d;){o||(s?s<3?(s>1&&(A.n=-1),p(s,c)):A.n=c:A.v=c);try{if(l=2,o){if(s||(a="next"),e=o[a]){if(!(e=e.call(o,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,s<2&&(s=0)}else 1===s&&(e=o.return)&&e.call(o),s<2&&(c=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=n}else if((e=(d=A.n<0)?c:t.call(r,A))!==i)break}catch(e){o=n,s=1,c=e}finally{l=1}}return{value:e,done:d}}}(t,a,o),!0),l}var i={};function s(){}function c(){}function l(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(hs(e={},r,function(){return this}),e),d=l.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,l):(n.__proto__=l,hs(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return c.prototype=l,hs(d,"constructor",l),hs(l,"constructor",c),c.displayName="GeneratorFunction",hs(l,a,"GeneratorFunction"),hs(d),hs(d,a,"Generator"),hs(d,r,function(){return this}),hs(d,"toString",function(){return"[object Generator]"}),(fs=function(){return{w:o,m:A}})()}function hs(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}hs=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var o=function(e,t){hs(n,e,function(n){return this._invoke(e,t,n)})};o("next",0),o("throw",1),o("return",2)}},hs(n,e,t,r)}function gs(n,e,t,r,a,o,i){try{var s=n[o](i),c=s.value}catch(n){return void t(n)}s.done?e(c):Promise.resolve(c).then(r,a)}function ms(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var o=n.apply(e,t);function i(n){gs(o,r,a,i,s,"next",n)}function s(n){gs(o,r,a,i,s,"throw",n)}i(void 0)})}}function vs(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,s=[],c=!0,l=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);c=!0);}catch(n){l=!0,a=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw a}}return s}}(n,e)||bs(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function bs(n,e){if(n){if("string"==typeof n)return Cs(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Cs(n,e):void 0}}function Cs(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const ys=function(){var n=vs((0,o.useState)({links:[],collections:[],categories:[],settings:{defaultCategory:"general",autoSummarize:!0}}),2),e=n[0],t=n[1],r=vs((0,o.useState)(!1),2),a=r[0],i=r[1],s=vs((0,o.useState)(""),2),c=s[0],P=s[1],D=vs((0,o.useState)([]),2),L=D[0],R=D[1],M=vs((0,o.useState)(!1),2),F=M[0],U=M[1],Y=vs((0,o.useState)(!1),2),q=Y[0],$=Y[1],W=vs((0,o.useState)(null),2),G=W[0],H=W[1],V=vs((0,o.useState)([]),2),K=V[0],Q=V[1],Z=vs((0,o.useState)([]),2),X=Z[0],J=Z[1],nn=vs((0,o.useState)(!1),2),en=nn[0],tn=nn[1],rn=vs((0,o.useState)({inbox:!0,smartCollections:!0,holdingArea:!0,collections:!0}),2),an=rn[0],on=rn[1],sn=vs((0,o.useState)(null),2),cn=sn[0],ln=sn[1],un=vs((0,o.useState)(!1),2),dn=un[0],An=un[1],pn=vs((0,o.useState)(!1),2),fn=pn[0],hn=pn[1],gn=vs((0,o.useState)(!1),2),mn=gn[0],vn=gn[1],bn=vs((0,o.useState)(null),2),Cn=bn[0],yn=bn[1],En=vs((0,o.useState)(!1),2),Bn=En[0],xn=En[1],kn=vs((0,o.useState)(!0),2),wn=kn[0],jn=kn[1],Sn=vs((0,o.useState)(null),2),zn=Sn[0],Nn=Sn[1],In=vs((0,o.useState)(""),2),_n=In[0],Tn=In[1],On=vs((0,o.useState)(!1),2),Pn=On[0],Dn=On[1],Ln=vs((0,o.useState)(""),2),Rn=Ln[0],Mn=Ln[1],Fn=vs((0,o.useState)([]),2),Un=Fn[0],Yn=Fn[1],qn=vs((0,o.useState)([]),2),$n=qn[0],Wn=qn[1],Gn=vs((0,o.useState)(!1),2),Hn=Gn[0],Vn=Gn[1],Kn=vs((0,o.useState)(!1),2),Qn=Kn[0],Zn=Kn[1],Xn=vs((0,o.useState)(!1),2),Jn=Xn[0],ne=Xn[1],ee=vs((0,o.useState)(null),2),te=ee[0],re=ee[1],ae=vs((0,o.useState)(!1),2),oe=ae[0],ie=ae[1],se=vs((0,o.useState)(!1),2),ce=se[0],le=se[1],ue=vs((0,o.useState)(!1),2),de=ue[0],Ae=ue[1],pe=vs((0,o.useState)(!1),2),fe=pe[0],he=pe[1],ge=vs((0,o.useState)(!1),2),me=ge[0],ve=ge[1],be=vs((0,o.useState)(!1),2),Ce=be[0],ye=be[1],Ee=vs((0,o.useState)(null),2),Be=Ee[0],xe=Ee[1],ke=vs((0,o.useState)(!1),2),we=ke[0],je=ke[1],Se=vs((0,o.useState)(!1),2),ze=Se[0],Ne=Se[1],Ie=vs((0,o.useState)(!1),2),_e=Ie[0],Te=Ie[1],Oe=vs((0,o.useState)(null),2),Pe=Oe[0],De=Oe[1],Le=vs((0,o.useState)(!1),2),Re=Le[0],Me=Le[1],Fe=vs((0,o.useState)(""),2),Ue=Fe[0],Ye=Fe[1],qe=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"success";"success"===e?(Ye(n),Me(!0),setTimeout(function(){return Me(!1)},3e3)):"error"===e&&(De(n),setTimeout(function(){return De(null)},5e3))},$e=function(){var n=ms(fs().m(function n(e,t){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,e();case 1:n.n=3;break;case 2:n.p=2,r=n.v,console.error(t,r),qe("".concat(t,": ").concat(r instanceof Error?r.message:"Unknown error"),"error");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e,t){return n.apply(this,arguments)}}();(0,o.useEffect)(function(){bt.auth.getSession().then(function(n){var e=n.data.session;Nn(e),e&&(Xe(),nt())});var n=bt.auth.onAuthStateChange(function(n,e){console.log("Auth state changed:",n,e),Nn(e),e&&(Xe(),nt())}),e=n.data.subscription,t=function(n,e,t){"refreshSidebar"===n.action&&(console.log("Sidebar: Received refresh request"),Xe(),Je(),nt(),t({success:!0}))};return chrome.runtime.onMessage.addListener(t),function(){e.unsubscribe(),chrome.runtime.onMessage.removeListener(t)}},[]),(0,o.useEffect)(function(){Xe(),Ke(),Ge(),He(),We()},[]);var We=function(){var n="true"===new URLSearchParams(window.location.search).get("floating");i(n),n&&document.body.classList.add("floating-window")},Ge=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_compact_view");case 1:e=n.v,je(!0===e.nest_compact_view),n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to load compact view setting:",t);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),He=function(){var n=ms(fs().m(function n(){var e;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_settings");case 1:(n.v.nest_settings||{}).darkMode?document.body.classList.add("dark-mode"):document.body.classList.remove("dark-mode"),n.n=3;break;case 2:n.p=2,e=n.v,console.error("Failed to load dark mode setting:",e);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),Ve=function(){var n=ms(fs().m(function n(e){var t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({nest_compact_view:e});case 1:je(e),n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to save compact view setting:",t);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}(),Ke=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_search_query");case 1:if(!(e=n.v).nest_search_query){n.n=2;break}return P(e.nest_search_query),St(e.nest_search_query),n.n=2,chrome.storage.local.remove("nest_search_query");case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to check for new tab search:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}();(0,o.useEffect)(function(){var n=function(n){(n.metaKey||n.ctrlKey)&&"k"===n.key&&(n.preventDefault(),Zn(!0))};return document.addEventListener("keydown",n),function(){return document.removeEventListener("keydown",n)}},[]);var Qe,Ze,Xe=function(){var n=ms(fs().m(function n(){var e,r;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.getData();case 1:return e=n.v,t(e),n.n=2,Je();case 2:n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load data:",r),qe("Failed to load data. Please refresh the page.","error");case 4:return n.p=4,jn(!1),n.f(4);case 5:return n.a(2)}},n,null,[[0,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),Je=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return Vn(!0),n.p=1,n.n=2,Tt.getInboxLinks();case 2:e=n.v,Yn(e),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to load inbox links:",t);case 4:return n.p=4,Vn(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),nt=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return tn(!0),n.p=1,n.n=2,Tt.getUserTags();case 2:e=n.v,J(e),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to load user tags:",t);case 4:return n.p=4,tn(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),et=function(){var n=ms(fs().m(function n(e){var t,r;return fs().w(function(n){for(;;)switch(n.n){case 0:if(e!==G){n.n=1;break}return H(null),Q([]),n.a(2);case 1:if(H(e),!e){n.n=6;break}return n.p=2,n.n=3,Tt.getLinksByTag(e);case 3:t=n.v,Q(t),n.n=5;break;case 4:n.p=4,r=n.v,console.error("Failed to load links by tag:",r),Q([]);case 5:n.n=7;break;case 6:Q([]);case 7:e&&q&&zt();case 8:return n.a(2)}},n,null,[[2,4]])}));return function(e){return n.apply(this,arguments)}}(),tt=function(){nt(),G&&et(G)},rt=function(n){on(function(e){return As(As({},e),{},ps({},n,!e[n]))})},at=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"getPageInfo"});case 1:if(!(e=n.v).success){n.n=2;break}re(e.pageInfo),ie(!0),n.n=3;break;case 2:return n.n=3,ct();case 3:n.n=5;break;case 4:return n.p=4,t=n.v,console.error("Failed to get page info:",t),n.n=5,ct();case 5:return n.a(2)}},n,null,[[0,4]])}));return function(){return n.apply(this,arguments)}}(),ot=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(e=n.v)[0]){n.n=2;break}return n.n=2,chrome.tabs.sendMessage(e[0].id,{action:"toggleFloatingAI"});case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to toggle floating AI:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),it=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(e=n.v)[0]){n.n=2;break}return n.n=2,chrome.tabs.sendMessage(e[0].id,{action:"toggleStickyNotes"});case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to toggle sticky notes:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),st=function(){var n=ms(fs().m(function n(){var e,t;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(e=n.v)[0]){n.n=2;break}return n.n=2,chrome.tabs.sendMessage(e[0].id,{action:"toggleScreenshotTool"});case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to toggle screenshot tool:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),ct=function(){var n=ms(fs().m(function n(){var e;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!n.v[0]){n.n=4;break}return n.n=2,chrome.runtime.sendMessage({action:"saveCurrentPage"});case 2:return n.n=3,Xe();case 3:return n.n=4,nt();case 4:n.n=6;break;case 5:n.p=5,e=n.v,console.error("Failed to save page:",e);case 6:return n.a(2)}},n,null,[[0,5]])}));return function(){return n.apply(this,arguments)}}(),lt=function(){var n=ms(fs().m(function n(e,t){return fs().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,$e(ms(fs().m(function n(){return fs().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,Tt.updateLink(e,t);case 1:if(void 0===t.collectionId){n.n=2;break}return n.n=2,Tt.logActivity("organize",e,t.collectionId,{action:"move_to_collection"});case 2:return n.n=3,Xe();case 3:qe("Link updated successfully!");case 4:return n.a(2)}},n)})),"Failed to update link");case 1:return n.a(2)}},n)}));return function(e,t){return n.apply(this,arguments)}}(),ut=function(){var n=ms(fs().m(function n(e){return fs().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,$e(ms(fs().m(function n(){return fs().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,Tt.deleteLink(e);case 1:return n.n=2,Xe();case 2:return n.n=3,nt();case 3:G&&et(G),qe("Link deleted successfully!");case 4:return n.a(2)}},n)})),"Failed to delete link");case 1:return n.a(2)}},n)}));return function(e){return n.apply(this,arguments)}}(),dt=function(){var n=ms(fs().m(function n(e,t){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.updateLink(e,{collectionId:t});case 1:return n.n=2,Xe();case 2:n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to move link:",r);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(e,t){return n.apply(this,arguments)}}(),At=function(n){ln(n),An(!0)},pt=function(n){yn(n),vn(!0)},ft=function(){var n=ms(fs().m(function n(e){return fs().w(function(n){for(;;)switch(n.n){case 0:if(!cn){n.n=1;break}return n.n=1,lt(cn.id,{userNote:e});case 1:An(!1),ln(null);case 2:return n.a(2)}},n)}));return function(e){return n.apply(this,arguments)}}(),ht=function(){var n=ms(fs().m(function n(e,t){var r,a;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,r={id:Date.now().toString(),name:e,description:t,createdAt:new Date,updatedAt:new Date},n.n=1,Tt.addCollection(r);case 1:return n.n=2,Xe();case 2:n.n=4;break;case 3:n.p=3,a=n.v,console.error("Failed to create collection:",a);case 4:hn(!1);case 5:return n.a(2)}},n,null,[[0,3]])}));return function(e,t){return n.apply(this,arguments)}}(),gt=function(){var n=ms(fs().m(function n(e,t){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,Tt.moveFromInbox(e,t);case 1:return n.n=2,Tt.logActivity("organize",e,t,{action:"move_from_inbox"});case 2:return n.n=3,Je();case 3:return n.n=4,Xe();case 4:Wn(function(n){return n.filter(function(n){return n!==e})}),n.n=6;break;case 5:n.p=5,r=n.v,console.error("Failed to move link from inbox:",r);case 6:return n.a(2)}},n,null,[[0,5]])}));return function(e,t){return n.apply(this,arguments)}}(),mt=function(n){Wn(function(e){return e.includes(n)?e.filter(function(e){return e!==n}):[].concat(us(e),[n])})},vt=function(){var n=ms(fs().m(function n(e){var t;return fs().w(function(n){for(;;)switch(n.n){case 0:if(0!==$n.length){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,Tt.bulkMoveFromInbox($n,e);case 2:return n.n=3,Je();case 3:return n.n=4,Xe();case 4:Wn([]),n.n=6;break;case 5:n.p=5,t=n.v,console.error("Failed to bulk move links from inbox:",t);case 6:return n.a(2)}},n,null,[[1,5]])}));return function(e){return n.apply(this,arguments)}}(),Ct=function(){var n=ms(fs().m(function n(){var t,r,a,o,i,s,c;return fs().w(function(n){for(;;)switch(n.n){case 0:if(0!==Un.length&&!ze){n.n=1;break}return n.a(2);case 1:return Ne(!0),n.p=2,n.n=3,chrome.storage.local.get("nest_settings");case 3:if(r=n.v,null===(t=r.nest_settings)||void 0===t?void 0:t.openaiApiKey){n.n=4;break}return alert("Please configure your OpenAI API key in settings to use AI auto-organize."),xn(!0),n.a(2);case 4:return a=Un.map(function(){var n=ms(fs().m(function n(t){var r,a,o,i,s,c,l,u,d,A,p,f;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"analyzeLinkContent",title:t.title,url:t.url,content:t.aiSummary||t.userNote||t.title});case 1:if(!(r=n.v).success||!r.analysis){n.n=14;break}if(o=r.analysis,i=null,s=0,!(o.categorySuggestions&&o.categorySuggestions.length>0)){n.n=8;break}c=ls(o.categorySuggestions),n.p=2,u=fs().m(function n(){var t,r;return fs().w(function(n){for(;;)switch(n.n){case 0:t=l.value,(r=e.collections.find(function(n){return n.name.toLowerCase().includes(t.category.toLowerCase())||t.category.toLowerCase().includes(n.name.toLowerCase())}))&&t.confidence>s&&(i=r.id,s=t.confidence);case 1:return n.a(2)}},n)}),c.s();case 3:if((l=c.n()).done){n.n=5;break}return n.d(cs(u()),4);case 4:n.n=3;break;case 5:n.n=7;break;case 6:n.p=6,p=n.v,c.e(p);case 7:return n.p=7,c.f(),n.f(7);case 8:if(d={},o.categorySuggestions&&(null===(a=o.categorySuggestions[0])||void 0===a?void 0:a.confidence)>.7&&(d.category=o.categorySuggestions[0].category),!(i&&s>.6)){n.n=10;break}return n.n=9,Tt.moveFromInbox(t.id,i);case 9:n.n=12;break;case 10:return n.n=11,Tt.moveFromInbox(t.id);case 11:if(!(Object.keys(d).length>0)){n.n=12;break}return n.n=12,Tt.updateLink(t.id,d);case 12:if(!(o.tagSuggestions&&o.tagSuggestions.length>0)){n.n=13;break}if(!((A=o.tagSuggestions.filter(function(n){return n.confidence>.6}).map(function(n){return n.tag}).slice(0,3)).length>0)){n.n=13;break}return n.n=13,Tt.addTagsToLink(t.id,A);case 13:return n.a(2,{success:!0,link:t.id,collection:i});case 14:n.n=16;break;case 15:return n.p=15,f=n.v,console.error("Failed to analyze link ".concat(t.id,":"),f),n.a(2,{success:!1,link:t.id,error:f});case 16:return n.a(2)}},n,null,[[2,6,7,8],[0,15]])}));return function(e){return n.apply(this,arguments)}}()),n.n=5,Promise.all(a);case 5:return o=n.v,i=o.filter(function(n){return n.success}).length,s=o.filter(function(n){return!n.success}).length,n.n=6,chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"AI Auto-Organize Complete",message:"Organized ".concat(i," items").concat(s>0?", ".concat(s," failed"):"")});case 6:return n.n=7,Je();case 7:return n.n=8,Xe();case 8:return n.n=9,nt();case 9:n.n=11;break;case 10:n.p=10,c=n.v,console.error("AI auto-organize failed:",c),alert("AI auto-organize failed. Please try again.");case 11:return n.p=11,Ne(!1),n.f(11);case 12:return n.a(2)}},n,null,[[2,10,11,12]])}));return function(){return n.apply(this,arguments)}}(),yt=function(){var n=ms(fs().m(function n(e,t,r){var a;return fs().w(function(n){for(;;)switch(n.n){case 0:return a=e.map(function(){var n=ms(fs().m(function n(e){var a;return fs().w(function(n){for(;;)switch(n.n){case 0:return a={url:e.url,title:e.title,favicon:e.favicon||"https://www.google.com/s2/favicons?domain=".concat(e.domain,"&sz=32"),userNote:"",aiSummary:"",category:"general",domain:e.domain,isInInbox:r||!1,collectionId:r?void 0:t},n.n=1,Tt.addLink(a);case 1:return n.a(2,n.v)}},n)}));return function(e){return n.apply(this,arguments)}}()),n.n=1,Promise.all(a);case 1:return n.n=2,Xe();case 2:return n.n=3,Je();case 3:chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Tabs Saved to Nest",message:"Saved ".concat(e.length," tab(s) ").concat(r?"to inbox":t?"to collection":"to holding area")});case 4:return n.a(2)}},n)}));return function(e,t,r){return n.apply(this,arguments)}}(),Et=function(){var n=ms(fs().m(function n(e){var t,r,a;return fs().w(function(n){for(;;)switch(n.n){case 0:return e.preventDefault(),Dn(!0),Mn(""),t=chrome.runtime.getURL("auth.html"),console.log("Redirecting to:",t),n.n=1,bt.auth.signInWithOtp({email:_n,options:{emailRedirectTo:t}});case 1:r=n.v,a=r.error,Mn(a?a.message:"Check your email for the login link!"),Dn(!1);case 2:return n.a(2)}},n)}));return function(e){return n.apply(this,arguments)}}(),Bt=function(){var n=ms(fs().m(function n(){return fs().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,bt.auth.signOut();case 1:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),xt=function(){var n=ms(fs().m(function n(e,t){var r,a;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"saveWithContext",reason:e,tags:t});case 1:if(!(r=n.v).success){n.n=4;break}return n.n=2,Xe();case 2:return n.n=3,nt();case 3:ie(!1),re(null),n.n=5;break;case 4:console.error("Failed to save with context:",r.error);case 5:n.n=7;break;case 6:n.p=6,a=n.v,console.error("Failed to save with context:",a);case 7:return n.a(2)}},n,null,[[0,6]])}));return function(e,t){return n.apply(this,arguments)}}(),kt=function(){var n=ms(fs().m(function n(){return fs().w(function(n){for(;;)switch(n.n){case 0:return ie(!1),re(null),n.n=1,ct();case 1:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),wt=function(){var n=ms(fs().m(function n(t){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:if(Be){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,$e(ms(fs().m(function n(){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:if("link"!==Be.type){n.n=1;break}if(!(r=e.links.find(function(n){return n.id===Be.id}))){n.n=1;break}return n.n=1,lt(r.id,{voiceMemos:[].concat(us(r.voiceMemos||[]),[t])});case 1:qe("Voice memo saved successfully!","success"),ye(!1),xe(null);case 2:return n.a(2)}},n)})),"Failed to save voice memo");case 2:n.n=4;break;case 3:n.p=3,r=n.v,console.error("Error saving voice memo:",r);case 4:return n.a(2)}},n,null,[[1,3]])}));return function(e){return n.apply(this,arguments)}}(),jt=function(){var n=ms(fs().m(function n(t){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:if(Be){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,$e(ms(fs().m(function n(){var r;return fs().w(function(n){for(;;)switch(n.n){case 0:if("link"!==Be.type){n.n=1;break}if(!(r=e.links.find(function(n){return n.id===Be.id}))){n.n=1;break}return n.n=1,lt(r.id,{richNotes:[].concat(us(r.richNotes||[]),[t])});case 1:qe("Rich note saved successfully!","success"),ye(!1),xe(null);case 2:return n.a(2)}},n)})),"Failed to save rich note");case 2:n.n=4;break;case 3:n.p=3,r=n.v,console.error("Error saving rich note:",r);case 4:return n.a(2)}},n,null,[[1,3]])}));return function(e){return n.apply(this,arguments)}}(),St=(0,o.useCallback)((Qe=function(){var n=ms(fs().m(function n(e){var t,r;return fs().w(function(n){for(;;)switch(n.n){case 0:if(e.trim()){n.n=1;break}return R([]),$(!1),U(!1),n.a(2);case 1:return U(!0),n.p=2,n.n=3,Tt.searchLinks(e);case 3:t=n.v,R(t),$(!0),G&&(H(null),Q([])),n.n=5;break;case 4:n.p=4,r=n.v,console.error("Search failed:",r),R([]);case 5:return n.p=5,U(!1),n.f(5);case 6:return n.a(2)}},n,null,[[2,4,5,6]])}));return function(e){return n.apply(this,arguments)}}(),function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];clearTimeout(Ze),Ze=setTimeout(function(){return Qe.apply(void 0,e)},300)}),[G]),zt=function(){P(""),R([]),$(!1),U(!1)},Nt=function(){zt(),H(null),Q([])},It=e.links.filter(function(n){return!n.isInInbox}),_t=It.filter(function(n){return!n.collectionId}),Ot=function(){var n=ms(fs().m(function n(){var t,r,a,o,i,s,c,l;return fs().w(function(n){for(;;)switch(n.n){case 0:if(0!==_t.length&&!_e){n.n=1;break}return n.a(2);case 1:return Te(!0),n.p=2,n.n=3,chrome.storage.local.get("nest_settings");case 3:if(r=n.v,null===(t=r.nest_settings)||void 0===t?void 0:t.openaiApiKey){n.n=4;break}return alert("Please configure your OpenAI API key in settings to use AI auto-organize."),Te(!1),n.a(2);case 4:return a=e.collections,o=_t.map(function(){var n=ms(fs().m(function n(e){var t,r,o,i,s,c,l,u,d,A,p,f,h,g,m,v,b,C,y,E,B,x,k,w,j,S,z,N,I;return fs().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"analyzeLinkContent",title:e.title,url:e.url,content:e.aiSummary||e.userNote||e.title});case 1:if(!(t=n.v).success||!t.analysis){n.n=4;break}r=t.analysis,o=null,i=0,s="",c=function(n,e){var t,r=n.toLowerCase().split(/\s+/),a=e.toLowerCase().split(/\s+/),o=0,i=ls(r);try{for(i.s();!(t=i.n()).done;){var s,c=t.value,l=ls(a);try{for(l.s();!(s=l.n()).done;){var u=s.value;(c.includes(u)||u.includes(c))&&o++}}catch(n){l.e(n)}finally{l.f()}}}catch(n){i.e(n)}finally{i.f()}return o/Math.max(r.length,a.length)},l=ls(a);try{for(l.s();!(u=l.n()).done;){if(d=u.value,A=d.name.toLowerCase(),r.categorySuggestions){p=ls(r.categorySuggestions);try{for(p.s();!(f=p.n()).done;)h=f.value,(g=c(A,h.category)*h.confidence)>.2&&g>i&&(i=g,o=d.id,s='Category "'.concat(h.category,'" matches collection "').concat(d.name,'" (score: ').concat(g.toFixed(2),")"))}catch(n){p.e(n)}finally{p.f()}}if(r.topics){m=ls(r.topics);try{for(m.s();!(v=m.n()).done;)b=v.value,(C=.6*c(A,b))>.2&&C>i&&(i=C,o=d.id,s='Topic "'.concat(b,'" matches collection "').concat(d.name,'" (score: ').concat(C.toFixed(2),")"))}catch(n){m.e(n)}finally{m.f()}}if(r.tagSuggestions){y=ls(r.tagSuggestions);try{for(y.s();!(E=y.n()).done;)B=E.value,(x=c(A,B.tag)*B.confidence*.5)>.15&&x>i&&(i=x,o=d.id,s='Tag "'.concat(B.tag,'" matches collection "').concat(d.name,'" (score: ').concat(x.toFixed(2),")"))}catch(n){y.e(n)}finally{y.f()}}}}catch(n){l.e(n)}finally{l.f()}if(!o&&a.length>0&&((k=a.find(function(n){return/general|misc|other|default|unsorted|random/i.test(n.name)}))?(o=k.id,s="Moved to general collection as fallback",i=.1):(o=a[0].id,s="Moved to first available collection as fallback",i=.05)),!o){n.n=4;break}return n.n=2,Tt.updateLink(e.id,{collectionId:o});case 2:if(!(r.tagSuggestions&&r.tagSuggestions.length>0)){n.n=3;break}if(!((j=r.tagSuggestions.filter(function(n){return n.confidence>.4}).map(function(n){return n.tag}).slice(0,3)).length>0)){n.n=3;break}return n.n=3,Tt.addTagsToLink(e.id,j);case 3:return console.log('AI Organized: "'.concat(e.title,'" -> Collection "').concat(null===(w=a.find(function(n){return n.id===o}))||void 0===w?void 0:w.name,'" (').concat(s,")")),n.a(2,{success:!0,linkId:e.id,collectionId:o,reason:s});case 4:if(!(a.length>0)){n.n=6;break}return S=a.find(function(n){return n.name.toLowerCase().includes("general")||n.name.toLowerCase().includes("misc")||n.name.toLowerCase().includes("unsorted")})||a[0],n.n=5,Tt.updateLink(e.id,{collectionId:S.id});case 5:return console.log('Fallback Organized: "'.concat(e.title,'" -> ').concat(S.name)),n.a(2,{success:!0,linkId:e.id,collectionId:S.id,reason:"Fallback organization"});case 6:return n.a(2,{success:!1,linkId:e.id,error:"No collections available"});case 7:if(n.p=7,N=n.v,console.error("Failed to organize link:",e.id,N),!(a.length>0)){n.n=11;break}return n.p=8,z=a[0],n.n=9,Tt.updateLink(e.id,{collectionId:z.id});case 9:return n.a(2,{success:!0,linkId:e.id,collectionId:z.id,reason:"Error fallback"});case 10:n.p=10,I=n.v,console.error("Fallback organization also failed:",I);case 11:return n.a(2,{success:!1,linkId:e.id,error:N.message})}},n,null,[[8,10],[0,7]])}));return function(e){return n.apply(this,arguments)}}()),n.n=5,Promise.all(o);case 5:return i=n.v,s=i.filter(function(n){return n.success}).length,c=i.filter(function(n){return!n.success}).length,n.n=6,chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"AI Auto-Organize Complete",message:"Organized ".concat(s," items from holding area").concat(c>0?", ".concat(c," failed"):"")});case 6:return n.n=7,Xe();case 7:return n.n=8,nt();case 8:n.n=10;break;case 9:n.p=9,l=n.v,console.error("AI auto-organize failed:",l),alert("AI auto-organize failed. Please try again.");case 10:return n.p=10,Te(!1),n.f(10);case 11:return n.a(2)}},n,null,[[2,9,10,11]])}));return function(){return n.apply(this,arguments)}}();return zn?wn?(0,Rt.jsx)("div",{className:"sidepanel loading",children:(0,Rt.jsx)("div",{className:"loading-spinner",children:"Loading..."})}):(0,Rt.jsxs)("div",{className:"sidepanel",children:[(0,Rt.jsxs)("div",{className:"header",children:[(0,Rt.jsxs)("div",{className:"header-title",children:[(0,Rt.jsx)(l,{className:"header-icon"}),(0,Rt.jsxs)("h1",{children:["Nest",a&&(0,Rt.jsx)("span",{className:"floating-indicator",children:" • Floating"})]})]}),(0,Rt.jsxs)("div",{className:"header-actions",children:[a&&(0,Rt.jsx)("button",{onClick:function(){return window.close()},className:"header-button close-button",title:"Close floating window",children:(0,Rt.jsx)(u,{size:18})}),(0,Rt.jsx)("button",{onClick:st,className:"screenshot-button",title:"Screenshot Tool (Alt+C)",children:(0,Rt.jsx)(d,{size:18})}),(0,Rt.jsx)("button",{onClick:it,className:"sticky-notes-button",title:"Toggle Sticky Notes (Alt+S)",children:(0,Rt.jsx)(A,{size:18})}),(0,Rt.jsx)("button",{onClick:ot,className:"floating-ai-button",title:"Toggle Floating AI Assistant (Alt+A)",children:(0,Rt.jsx)(p,{size:18})}),(0,Rt.jsx)("button",{onClick:function(){return ne(!0)},className:"tab-sync-button",title:"Tab Sync Mode",children:(0,Rt.jsx)(f,{size:18})}),(0,Rt.jsx)("button",{onClick:at,className:"save-button",title:"Save current page",children:(0,Rt.jsx)(h,{size:18})}),(0,Rt.jsxs)("button",{onClick:function(){return le(!0)},className:"analytics-button",title:"View Reading Analytics",children:[(0,Rt.jsx)(g,{size:18}),"Analytics"]}),(0,Rt.jsxs)("button",{onClick:function(){return Ae(!0)},className:"ai-insights-button",title:"AI-Powered Insights",children:[(0,Rt.jsx)(m,{size:18}),"AI Insights"]}),(0,Rt.jsxs)("button",{onClick:function(){return he(!0)},className:"focus-mode-button",title:"Focus Mode",children:[(0,Rt.jsx)(v,{size:18}),"Focus"]}),(0,Rt.jsxs)("button",{onClick:function(){return ve(!0)},className:"knowledge-graph-button",title:"Knowledge Graph",children:[(0,Rt.jsx)(b,{size:18}),"Graph"]}),(0,Rt.jsxs)("button",{onClick:function(){return xe({type:"link",id:""}),void ye(!0)},className:"rich-annotations-button",title:"Rich Annotations",children:[(0,Rt.jsx)(C,{size:18}),"Annotate"]}),(0,Rt.jsx)("button",{onClick:Bt,className:"logout-button",title:"Logout",children:(0,Rt.jsx)(y,{size:18})})]})]}),(0,Rt.jsxs)("div",{className:"search-container",children:[(0,Rt.jsx)(E,{className:"search-icon",size:16}),(0,Rt.jsx)("input",{type:"text",placeholder:"Search your links... (⌘K for power mode)",value:c,onChange:function(n){var e=n.target.value;P(e),St(e)},className:"search-input",onFocus:function(){}}),c&&(0,Rt.jsx)("button",{onClick:zt,className:"search-clear",title:"Clear search",children:(0,Rt.jsx)(u,{size:16})}),F&&(0,Rt.jsx)("div",{className:"search-spinner",children:"⟳"}),!c&&!F&&(0,Rt.jsxs)("button",{onClick:function(){return Zn(!0)},className:"command-hint-button",title:"Open command palette (⌘K)",children:[(0,Rt.jsx)(B,{size:14}),(0,Rt.jsx)("span",{children:"Or press ⌘K for quick access"})]})]}),X.length>0&&(0,Rt.jsx)(Ta,{tags:X,selectedTag:G,onTagSelect:et,loading:en}),(0,Rt.jsx)("div",{className:"view-toggle-container",children:(0,Rt.jsxs)("div",{className:"view-toggle",children:[(0,Rt.jsxs)("button",{onClick:function(){return Ve(!1)},className:"view-toggle-btn ".concat(we?"":"active"),title:"Normal view",children:[(0,Rt.jsx)(x,{size:14}),"Normal"]}),(0,Rt.jsxs)("button",{onClick:function(){return Ve(!0)},className:"view-toggle-btn ".concat(we?"active":""),title:"Compact view",children:[(0,Rt.jsx)(k,{size:14}),"Compact"]})]})}),(0,Rt.jsx)("div",{className:"content",children:q?(0,Rt.jsxs)("div",{className:"search-results",children:[(0,Rt.jsxs)("div",{className:"search-results-header",children:[(0,Rt.jsxs)("h3",{children:["Search Results (",L.length,")"]}),(0,Rt.jsx)("button",{onClick:Nt,className:"clear-search-btn",children:"Show All Links"})]}),0!==L.length||F?L.map(function(n){return(0,Rt.jsx)(Or,{link:n,collections:e.collections,onUpdate:lt,onDelete:ut,onMoveToCollection:dt,onAddNote:At,onTagsUpdated:tt,compactView:we},n.id)}):(0,Rt.jsx)("div",{className:"no-results",children:(0,Rt.jsxs)("p",{children:['No links found for "',c,'"']})})]}):G?(0,Rt.jsxs)("div",{className:"tag-results",children:[(0,Rt.jsxs)("div",{className:"tag-results-header",children:[(0,Rt.jsxs)("h3",{children:[(0,Rt.jsx)(w,{size:16}),'Tagged with "',G,'" (',K.length,")"]}),(0,Rt.jsx)("button",{onClick:Nt,className:"clear-search-btn",children:"Show All Links"})]}),0===K.length?(0,Rt.jsx)("div",{className:"no-results",children:(0,Rt.jsxs)("p",{children:['No links found with tag "',G,'"']})}):K.map(function(n){return(0,Rt.jsx)(ar,{link:n,collections:e.collections,onUpdate:lt,onDelete:ut,onMoveToCollection:dt,onAddNote:At,onTagsUpdated:tt,compactView:we},n.id)})]}):(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsxs)("div",{className:"section inbox-section",children:[(0,Rt.jsxs)("div",{className:"inbox-section-header",children:[(0,Rt.jsxs)("div",{className:"inbox-section-title",children:[(0,Rt.jsxs)("button",{onClick:function(){return rt("inbox")},className:"section-header",style:{padding:0,background:"none",border:"none"},children:[an.inbox?(0,Rt.jsx)(j,{size:16}):(0,Rt.jsx)(S,{size:16}),(0,Rt.jsx)(z,{size:16}),(0,Rt.jsx)("span",{children:"Inbox"})]}),(0,Rt.jsx)("span",{className:"inbox-count",children:Un.length})]}),Un.length>0&&(0,Rt.jsxs)("div",{className:"inbox-actions",children:[(0,Rt.jsxs)("button",{onClick:function(){$n.length===Un.length?Wn([]):Wn(Un.map(function(n){return n.id}))},className:"inbox-action-button",title:$n.length===Un.length?"Deselect all":"Select all",children:[(0,Rt.jsx)(N,{size:14}),$n.length===Un.length?"Deselect All":"Select All"]}),(0,Rt.jsxs)("button",{onClick:Ct,className:"inbox-action-button ai-organize-button",title:"Use AI to automatically organize all inbox items",disabled:0===Un.length||ze,children:[(0,Rt.jsx)(I,{size:14,className:ze?"spinning":""}),ze?"Organizing...":"AI Auto-Organize"]}),$n.length>0&&(0,Rt.jsxs)(Rt.Fragment,{children:[(0,Rt.jsxs)("button",{onClick:function(){return vt()},className:"inbox-action-button",title:"Move selected to holding area",children:[(0,Rt.jsx)(_,{size:14}),"Move to Holding (",$n.length,")"]}),(0,Rt.jsxs)("select",{onChange:function(n){n.target.value&&(vt(n.target.value),n.target.value="")},className:"inbox-action-button",style:{padding:"6px 8px"},title:"Move selected links to collection","aria-label":"Move selected links to collection",children:[(0,Rt.jsx)("option",{value:"",children:"Move to Collection..."}),e.collections.map(function(n){return(0,Rt.jsx)("option",{value:n.id,children:n.name},n.id)})]})]})]})]}),an.inbox&&(0,Rt.jsx)("div",{className:"section-content",children:Hn?(0,Rt.jsx)("div",{className:"loading-spinner",children:"Loading inbox..."}):0===Un.length?(0,Rt.jsxs)("div",{className:"inbox-empty",children:[(0,Rt.jsx)(z,{className:"inbox-empty-icon"}),(0,Rt.jsx)("h3",{children:"Inbox is empty"}),(0,Rt.jsx)("p",{children:"New saves will appear here for quick organization"})]}):Un.map(function(n){return(0,Rt.jsx)(Hr,{link:n,collections:e.collections,onMoveFromInbox:gt,onDelete:ut,onUpdate:lt,onAddNote:At,onTagsUpdated:tt,isSelected:$n.includes(n.id),onSelect:mt,onOpenDetail:pt,compactView:we},n.id)})})]}),e.settings.enableSmartCollections&&e.smartCollections&&e.smartCollections.length>0&&(0,Rt.jsxs)("div",{className:"section smart-collections-section",children:[(0,Rt.jsxs)("button",{onClick:function(){return rt("smartCollections")},className:"section-header",children:[an.smartCollections?(0,Rt.jsx)(j,{size:16}):(0,Rt.jsx)(S,{size:16}),(0,Rt.jsx)(I,{size:16}),(0,Rt.jsx)("span",{children:"Smart Collections"}),(0,Rt.jsx)("span",{className:"count",children:e.smartCollections.length})]}),an.smartCollections&&(0,Rt.jsx)("div",{className:"section-content",children:e.smartCollections.map(function(n){return(0,Rt.jsx)(Tr,{smartCollection:n,collections:e.collections,onUpdateLink:lt,onDeleteLink:ut,onAddNote:At,onTagsUpdated:tt,onOpenDetail:pt,compactView:we},n.id)})})]}),(0,Rt.jsxs)("div",{className:"section",children:[(0,Rt.jsxs)("div",{className:"inbox-section-header",children:[(0,Rt.jsx)("div",{className:"inbox-section-title",children:(0,Rt.jsxs)("button",{onClick:function(){return rt("holdingArea")},className:"section-header",children:[an.holdingArea?(0,Rt.jsx)(j,{size:16}):(0,Rt.jsx)(S,{size:16}),(0,Rt.jsx)("span",{children:"Holding Area"}),(0,Rt.jsx)("span",{className:"count",children:_t.length})]})}),_t.length>0&&(0,Rt.jsx)("div",{className:"inbox-actions",children:(0,Rt.jsxs)("button",{onClick:Ot,className:"inbox-action-button",title:"Use AI to automatically organize items into collections",disabled:0===_t.length||_e,children:[(0,Rt.jsx)(I,{size:14,className:_e?"spinning":""}),_e?"Organizing...":"AI Auto-Organize"]})})]}),an.holdingArea&&(0,Rt.jsx)("div",{className:"section-content",children:0===_t.length?(0,Rt.jsxs)("div",{className:"empty-state",children:[(0,Rt.jsx)("p",{children:"No links in holding area"}),(0,Rt.jsx)("p",{style:{fontSize:"0.9em",color:"var(--ui-text-secondary)",marginTop:"0.5rem"},children:"Links without a specific collection will appear here"})]}):_t.map(function(n){return(0,Rt.jsx)(ar,{link:n,collections:e.collections,onUpdate:lt,onDelete:ut,onMoveToCollection:dt,onAddNote:At,onTagsUpdated:tt,onOpenDetail:pt,compactView:we},n.id)})})]}),(0,Rt.jsxs)("div",{className:"section",children:[(0,Rt.jsxs)("button",{onClick:function(){return rt("collections")},className:"section-header",children:[an.collections?(0,Rt.jsx)(j,{size:16}):(0,Rt.jsx)(S,{size:16}),(0,Rt.jsx)("span",{children:"Collections"}),(0,Rt.jsx)("span",{className:"count",children:e.collections.length}),(0,Rt.jsx)("button",{onClick:function(n){n.stopPropagation(),hn(!0)},className:"add-collection-button",title:"Create new collection",children:(0,Rt.jsx)(T,{size:14})})]}),an.collections&&(0,Rt.jsx)("div",{className:"section-content",children:0===e.collections.length?(0,Rt.jsxs)("div",{className:"empty-state",children:[(0,Rt.jsx)("p",{children:"No collections yet"}),(0,Rt.jsx)("button",{onClick:function(){return hn(!0)},className:"empty-action",children:"Create collection"})]}):e.collections.map(function(n){var e,t=(e=n.id,It.filter(function(n){return n.collectionId===e}));return(0,Rt.jsx)(kr,{collection:n,links:t,onUpdateLink:lt,onDeleteLink:ut,onAddNote:At,onTagsUpdated:tt,onUpdate:Xe,onOpenDetail:pt,compactView:we},n.id)})})]})]})}),(0,Rt.jsxs)("div",{className:"footer",children:[(0,Rt.jsx)("button",{onClick:function(){return xn(!0)},className:"footer-button",title:"Settings",children:(0,Rt.jsx)(O,{size:16})}),(0,Rt.jsxs)("span",{className:"footer-text",children:[e.links.length," links • ",X.length," tags"]})]}),dn&&cn&&(0,Rt.jsx)(da,{link:cn,onSave:ft,onClose:function(){An(!1),ln(null)}}),fn&&(0,Rt.jsx)(fa,{onSave:ht,onClose:function(){return hn(!1)}}),mn&&Cn&&(0,Rt.jsx)(_a,{link:Cn,collections:e.collections,onClose:function(){vn(!1),yn(null)},onUpdate:lt,onDelete:ut,onAddNote:At}),Bn&&(0,Rt.jsx)(Bo,{onClose:function(){return xn(!1)}}),(0,Rt.jsx)(Jr,{isOpen:Qn,onClose:function(){return Zn(!1)},links:e.links,collections:e.collections,onOpenLink:function(n){window.open(n,"_blank")},onAddToCollection:dt,onCreateCollection:function(){hn(!0)},onSaveCurrentPage:at,onAddNote:At,onOpenTabSync:function(){return ne(!0)}}),(0,Rt.jsx)(la,{isOpen:Jn,onClose:function(){return ne(!1)},collections:e.collections,onSaveTabs:yt}),(0,Rt.jsx)(Ea,{isOpen:oe,onSave:xt,onSkip:kt,onClose:function(){ie(!1),re(null)},linkTitle:null==te?void 0:te.title,linkUrl:null==te?void 0:te.url}),ce&&(0,Rt.jsx)(ni,{onClose:function(){return le(!1)}}),de&&(0,Rt.jsx)(pi,{onClose:function(){return Ae(!1)}}),fe&&(0,Rt.jsx)(Ni,{isOpen:fe,onClose:function(){return he(!1)}}),me&&(0,Rt.jsx)(qi,{isOpen:me,onClose:function(){return ve(!1)},links:e.links}),Ce&&Be&&(0,Rt.jsx)(is,{isOpen:Ce,onClose:function(){ye(!1),xe(null)},onSaveVoiceMemo:wt,onSaveRichNote:jt,targetType:Be.type,targetId:Be.id}),Re&&(0,Rt.jsx)("div",{className:"toast-notification success",children:(0,Rt.jsx)("span",{children:Ue})}),Pe&&(0,Rt.jsxs)("div",{className:"toast-notification error",children:[(0,Rt.jsx)("span",{children:Pe}),(0,Rt.jsx)("button",{onClick:function(){return De(null)},style:{marginLeft:"8px",background:"none",border:"none",cursor:"pointer"},children:"×"})]})]}):(0,Rt.jsxs)("div",{className:"sidepanel auth-container",children:[(0,Rt.jsx)("div",{className:"header",children:(0,Rt.jsxs)("div",{className:"header-title",children:[(0,Rt.jsx)(l,{className:"header-icon"}),(0,Rt.jsx)("h1",{children:"Nest"})]})}),(0,Rt.jsxs)("div",{className:"auth-form",children:[(0,Rt.jsx)("h2",{children:"Sign In"}),(0,Rt.jsx)("p",{children:"Enter your email to receive a magic login link."}),(0,Rt.jsxs)("form",{onSubmit:Et,children:[(0,Rt.jsx)("input",{type:"email",placeholder:"Your email",value:_n,onChange:function(n){return Tn(n.target.value)},className:"auth-input"}),(0,Rt.jsx)("button",{type:"submit",className:"auth-button",disabled:Pn,children:Pn?"Sending...":"Send Magic Link"})]}),Rn&&(0,Rt.jsx)("p",{className:"auth-message",children:Rn})]})]})};var Es=document.getElementById("root");(0,i.createRoot)(Es).render((0,Rt.jsx)(ys,{}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,