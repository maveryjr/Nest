/*! For license information please see sidepanel.js.LICENSE.txt */
(()=>{"use strict";var e={20:(e,n,t)=>{var r=t(540),o=Symbol.for("react.element"),i=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var r,i={},c=null,u=null;for(r in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(u=n.ref),n)a.call(n,r)&&!l.hasOwnProperty(r)&&(i[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===i[r]&&(i[r]=n[r]);return{$$typeof:o,type:e,key:c,ref:u,props:i,_owner:s.current}}n.Fragment=i,n.jsx=c,n.jsxs=c},45:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const o=r(t(825));n.default=class{constructor(e,{headers:n={},schema:t,fetch:r}){this.url=e,this.headers=n,this.schema=t,this.fetch=r}select(e,{head:n=!1,count:t}={}){const r=n?"HEAD":"GET";let i=!1;const a=(null!=e?e:"*").split("").map(e=>/\s/.test(e)&&!i?"":('"'===e&&(i=!i),e)).join("");return this.url.searchParams.set("select",a),t&&(this.headers.Prefer=`count=${t}`),new o.default({method:r,url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}insert(e,{count:n,defaultToNull:t=!0}={}){const r=[];if(this.headers.Prefer&&r.push(this.headers.Prefer),n&&r.push(`count=${n}`),t||r.push("missing=default"),this.headers.Prefer=r.join(","),Array.isArray(e)){const n=e.reduce((e,n)=>e.concat(Object.keys(n)),[]);if(n.length>0){const e=[...new Set(n)].map(e=>`"${e}"`);this.url.searchParams.set("columns",e.join(","))}}return new o.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}upsert(e,{onConflict:n,ignoreDuplicates:t=!1,count:r,defaultToNull:i=!0}={}){const a=[`resolution=${t?"ignore":"merge"}-duplicates`];if(void 0!==n&&this.url.searchParams.set("on_conflict",n),this.headers.Prefer&&a.push(this.headers.Prefer),r&&a.push(`count=${r}`),i||a.push("missing=default"),this.headers.Prefer=a.join(","),Array.isArray(e)){const n=e.reduce((e,n)=>e.concat(Object.keys(n)),[]);if(n.length>0){const e=[...new Set(n)].map(e=>`"${e}"`);this.url.searchParams.set("columns",e.join(","))}}return new o.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}update(e,{count:n}={}){const t=[];return this.headers.Prefer&&t.push(this.headers.Prefer),n&&t.push(`count=${n}`),this.headers.Prefer=t.join(","),new o.default({method:"PATCH",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}delete({count:e}={}){const n=[];return e&&n.push(`count=${e}`),this.headers.Prefer&&n.unshift(this.headers.Prefer),this.headers.Prefer=n.join(","),new o.default({method:"DELETE",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var l=e[s],c=r.base?l[0]+r.base:l[0],u=i[c]||0,d="".concat(c," ").concat(u);i[c]=u+1;var A=t(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)n[A].references++,n[A].updater(f);else{var p=o(f,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var l=r(e,o),c=0;c<i.length;c++){var u=t(i[c]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}i=l}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},159:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},182:(e,n,t)=>{t.d(n,{A:()=>s});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([e.id,"/* Reset and base styles */\n* {\n  box-sizing: border-box;\n}\n\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n  overflow: hidden;\n}\n\n/* Header */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e5e7eb;\n  background: #ffffff;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.header-title h1 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: #111827;\n}\n\n.header-icon {\n  color: #3b82f6;\n  width: 20px;\n  height: 20px;\n}\n\n.save-button {\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s;\n}\n\n.save-button:hover {\n  background: #2563eb;\n}\n\n/* Enhanced Search Styles */\n.search-container {\n  position: relative;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.search-icon {\n  position: absolute;\n  left: 32px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #6b7280;\n  pointer-events: none;\n}\n\n.search-input {\n  width: 100%;\n  padding: 10px 12px 10px 36px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  font-size: 14px;\n  background: #f9fafb;\n  transition: border-color 0.2s, background-color 0.2s;\n  padding-right: 60px; /* Space for clear button and spinner */\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  background: white;\n}\n\n.search-clear {\n  position: absolute;\n  right: 40px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.search-clear:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.search-spinner {\n  position: absolute;\n  right: 24px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #3b82f6;\n  font-size: 16px;\n  animation: spin 1s linear infinite;\n}\n\n.search-power-mode {\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: #9ca3af;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search-power-mode:hover {\n  color: #3b82f6;\n  background: #f3f4f6;\n}\n\n@keyframes spin {\n  from { transform: translateY(-50%) rotate(0deg); }\n  to { transform: translateY(-50%) rotate(360deg); }\n}\n\n/* Search Results Styles */\n.search-results {\n  padding: 16px 0;\n}\n\n.search-results-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px 16px;\n  border-bottom: 1px solid #e5e7eb;\n  margin-bottom: 16px;\n}\n\n.search-results-header h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.clear-search-btn {\n  padding: 6px 12px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  color: #374151;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.clear-search-btn:hover {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n\n.no-results {\n  text-align: center;\n  padding: 40px 20px;\n  color: #6b7280;\n}\n\n/* Search Result Card Styles */\n.search-result-card {\n  position: relative;\n  margin-bottom: 16px;\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: #3b82f6;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 500;\n  z-index: 10;\n}\n\n.search-result-card:hover {\n  border-color: #d1d5db;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.search-result-header {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.search-result-favicon {\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  margin-top: 2px;\n}\n\n.search-result-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.search-result-title {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  cursor: pointer;\n  line-height: 1.4;\n  word-wrap: break-word;\n  transition: color 0.2s;\n}\n\n.search-result-title:hover {\n  color: #3b82f6;\n}\n\n.search-result-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: #6b7280;\n  flex-wrap: wrap;\n}\n\n.search-result-domain {\n  font-weight: 500;\n}\n\n.search-result-date::before {\n  content: '•';\n  margin-right: 8px;\n}\n\n.search-result-rank {\n  background: #eff6ff;\n  color: #1d4ed8;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 11px;\n  font-weight: 500;\n}\n\n.search-result-rank::before {\n  content: '•';\n  margin-right: 8px;\n  color: #6b7280;\n}\n\n.search-result-actions {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n/* Search headline with highlighting */\n.search-headline {\n  background: #fffbeb;\n  border: 1px solid #fed7aa;\n  border-radius: 6px;\n  padding: 8px 12px;\n  margin-bottom: 8px;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #92400e;\n}\n\n.search-headline mark {\n  background: #fbbf24;\n  color: #92400e;\n  padding: 1px 2px;\n  border-radius: 2px;\n}\n\n.search-result-category {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n/* Content */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0 20px 20px;\n}\n\n/* Sections */\n.section {\n  margin-bottom: 24px;\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 0;\n  background: none;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  color: #374151;\n  cursor: pointer;\n  text-align: left;\n  transition: color 0.2s;\n}\n\n.section-header:hover {\n  color: #111827;\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: #f3f4f6;\n  color: #6b7280;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 2px 8px;\n  border-radius: 12px;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.add-collection-button:hover {\n  color: #3b82f6;\n  background: #f3f4f6;\n}\n\n.section-content {\n  margin-top: 8px;\n}\n\n/* Link Cards */\n.link-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  transition: border-color 0.2s, box-shadow 0.2s;\n}\n\n.link-card:hover {\n  border-color: #d1d5db;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.link-header {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.link-favicon {\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  margin-top: 2px;\n}\n\n.favicon-placeholder {\n  width: 16px;\n  height: 16px;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 10px;\n  font-weight: 600;\n}\n\n.link-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-title {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  cursor: pointer;\n  line-height: 1.4;\n  word-wrap: break-word;\n  transition: color 0.2s;\n}\n\n.link-title:hover {\n  color: #3b82f6;\n}\n\n.link-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.link-domain {\n  font-weight: 500;\n}\n\n.link-date::before {\n  content: '•';\n  margin-right: 8px;\n}\n\n.link-actions {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.action-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 6px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.action-button:hover {\n  background-color: #f3f4f6;\n}\n\n/* Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  z-index: 50;\n  min-width: 160px;\n  padding: 4px;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 8px 12px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #374151;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n}\n\n.dropdown-menu button:hover {\n  background: #f3f4f6;\n}\n\n.dropdown-menu button.delete-action {\n  color: #dc2626;\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: #fef2f2;\n}\n\n/* Collections menu */\n.collections-menu {\n  background: #f9fafb;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  padding: 8px;\n  margin-top: 8px;\n}\n\n.collections-header {\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7280;\n  margin-bottom: 4px;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 6px 8px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.collection-option:hover {\n  background: white;\n}\n\n/* Link content */\n.link-note, .link-summary {\n  margin-bottom: 8px;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #4b5563;\n}\n\n.link-note strong, .link-summary strong {\n  color: #374151;\n  font-weight: 600;\n}\n\n.link-category {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n.category-badge {\n  background: #f3f4f6;\n  color: white;\n  font-size: 11px;\n  font-weight: 600;\n  padding: 3px 8px;\n  border-radius: 12px;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n/* Collection Cards */\n.collection-card {\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  margin-bottom: 12px;\n  background: white;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n  background: none;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.collection-header:hover {\n  background: #f9fafb;\n}\n\n.collection-icon {\n  color: #6b7280;\n  flex-shrink: 0;\n}\n\n.collection-info {\n  flex: 1;\n  text-align: left;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 2px;\n}\n\n.collection-name {\n  font-weight: 500;\n  color: #374151;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.public-indicator {\n  display: flex;\n  align-items: center;\n  padding: 2px 6px;\n  background: #dcfce7;\n  color: #16a34a;\n  border-radius: 10px;\n  font-size: 10px;\n  flex-shrink: 0;\n}\n\n.collection-description {\n  font-size: 12px;\n  color: #6b7280;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.collection-count {\n  background: #f3f4f6;\n  color: #6b7280;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.share-collection-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: transparent;\n  color: #6b7280;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n}\n\n.share-collection-button:hover {\n  background: #f3f4f6;\n  color: #374151;\n}\n\n.collection-content {\n  padding: 0 16px 16px;\n  border-top: 1px solid #f3f4f6;\n}\n\n.collection-content .link-card {\n  border: none;\n  background: #f9fafb;\n  margin-bottom: 8px;\n}\n\n.empty-collection {\n  padding: 20px;\n  text-align: center;\n  color: #6b7280;\n  font-size: 14px;\n}\n\n/* Empty states */\n.empty-state {\n  text-align: center;\n  padding: 32px 16px;\n  color: #6b7280;\n}\n\n.empty-state p {\n  margin: 0 0 16px 0;\n  font-size: 14px;\n}\n\n.empty-action {\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.empty-action:hover {\n  background: #2563eb;\n}\n\n/* Footer */\n.footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-top: 1px solid #e5e7eb;\n  background: #f9fafb;\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 6px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.footer-button:hover {\n  color: #374151;\n  background: white;\n}\n\n.footer-text {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n/* Modals */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n  padding: 20px;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 24px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #111827;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.close-button:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.modal-body {\n  padding: 24px;\n  overflow-y: auto;\n}\n\n/* Link preview in modal */\n.link-preview {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.link-preview-favicon {\n  flex-shrink: 0;\n}\n\n.link-preview-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-preview-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  margin-bottom: 2px;\n  word-wrap: break-word;\n}\n\n.link-preview-url {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n/* Form elements */\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 6px;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  transition: border-color 0.2s;\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.modal-actions {\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n  margin-top: 24px;\n}\n\n.button-primary {\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 10px 20px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.button-primary:hover:not(:disabled) {\n  background: #2563eb;\n}\n\n.button-primary:disabled {\n  background: #9ca3af;\n  cursor: not-allowed;\n}\n\n.button-secondary {\n  background: white;\n  color: #374151;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  padding: 10px 20px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n}\n\n.button-secondary:hover {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n\n/* Loading state */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #6b7280;\n}\n\n.loading-spinner {\n  font-size: 14px;\n}\n\n/* Responsive adjustments */\n@media (max-width: 480px) {\n  .modal-content {\n    margin: 0;\n    border-radius: 0;\n    height: 100vh;\n    max-height: none;\n  }\n  \n  .modal-overlay {\n    padding: 0;\n  }\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.tab-sync-button,\n.logout-button {\n  background: #f3f4f6;\n  color: #374151;\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s, color 0.2s;\n}\n\n.tab-sync-button:hover,\n.logout-button:hover {\n  background: #e5e7eb;\n}\n\n/* Auth Form Styles */\n.auth-container {\n  padding: 20px;\n}\n\n.auth-form {\n  margin-top: 40px;\n  text-align: center;\n}\n\n.auth-form h2 {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.auth-form p {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 24px;\n}\n\n.auth-input {\n  width: 100%;\n  padding: 12px;\n  font-size: 14px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  margin-bottom: 16px;\n}\n\n.auth-button {\n  width: 100%;\n  padding: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  color: white;\n  background: #3b82f6;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.auth-button:hover {\n  background: #2563eb;\n}\n\n.auth-button:disabled {\n  background: #9ca3af;\n  cursor: not-allowed;\n}\n\n.auth-message {\n  margin-top: 16px;\n  font-size: 14px;\n  color: #374151;\n}\n\n/* Tag Input Styles */\n.tag-input-container {\n  position: relative;\n  width: 100%;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background-color: white;\n  min-height: 42px;\n  cursor: text;\n  transition: border-color 0.2s ease;\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.tag-chip {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 8px;\n  border-radius: 16px;\n  color: white;\n  font-size: 12px;\n  font-weight: 500;\n  white-space: nowrap;\n  max-width: 150px;\n}\n\n.tag-name {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.tag-remove {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  border: none;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 50%;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  flex-shrink: 0;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n.tag-input {\n  flex: 1;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  min-width: 80px;\n  background: transparent;\n}\n\n.tag-input::placeholder {\n  color: #94a3b8;\n}\n\n.tag-input:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.tag-input-icon {\n  display: flex;\n  align-items: center;\n  color: #94a3b8;\n  flex-shrink: 0;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  margin-top: 4px;\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.tag-suggestion {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  padding: 8px 12px;\n  border: none;\n  background: white;\n  text-align: left;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  font-size: 14px;\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background-color: #f8fafc;\n}\n\n.tag-suggestion-color {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  color: #1e293b;\n}\n\n.tag-suggestion-count {\n  color: #64748b;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n/* Tag Filter Styles */\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-bottom: 16px;\n  padding: 12px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.tag-filter {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 12px;\n  border: 1px solid transparent;\n  border-radius: 20px;\n  background: white;\n  color: #64748b;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  border-color: #e2e8f0;\n  transform: translateY(-1px);\n}\n\n.tag-filter.active {\n  background: #3b82f6;\n  color: white;\n  border-color: #3b82f6;\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: rgba(100, 116, 139, 0.1);\n  color: #64748b;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n  margin-left: 4px;\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n.tag-filter-skeleton {\n  color: #94a3b8;\n  font-size: 12px;\n  padding: 6px 12px;\n  background: #f1f5f9;\n  border-radius: 20px;\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n.tag-filter-more {\n  color: #64748b;\n  font-size: 12px;\n  padding: 6px 12px;\n  background: #f1f5f9;\n  border-radius: 20px;\n  font-weight: 500;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: .5;\n  }\n}\n\n/* Tag Cloud Styles */\n.tag-cloud {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  padding: 16px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: #fafafa;\n}\n\n.tag-cloud-item {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 12px;\n  border-radius: 16px;\n  background: white;\n  border: 1px solid #e2e8f0;\n  color: #64748b;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-decoration: none;\n}\n\n.tag-cloud-item:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n  transform: translateY(-1px);\n}\n\n.tag-cloud-count {\n  background: #f1f5f9;\n  color: #64748b;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n}\n\n/* Tag Management Modal Styles */\n.tag-management {\n  padding: 16px;\n}\n\n.tag-management-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n}\n\n.tag-management-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.tag-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.tag-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n}\n\n.tag-list-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n}\n\n.tag-list-color {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-list-name {\n  font-weight: 500;\n  color: #1e293b;\n}\n\n.tag-list-count {\n  color: #64748b;\n  font-size: 12px;\n}\n\n.tag-list-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.tag-action-btn {\n  padding: 4px 8px;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  background: white;\n  color: #64748b;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.tag-action-btn:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.tag-action-btn.danger:hover {\n  border-color: #ef4444;\n  color: #ef4444;\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  .tag-input-wrapper {\n    padding: 6px 8px;\n    min-height: 38px;\n  }\n  \n  .tag-chip {\n    font-size: 11px;\n    padding: 3px 6px;\n  }\n  \n  .tag-filters {\n    padding: 8px;\n    gap: 6px;\n  }\n  \n  .tag-filter {\n    padding: 4px 8px;\n    font-size: 11px;\n  }\n}\n\n/* Tag Editor Styles */\n.tag-editor {\n  margin-top: 12px;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: #fafafa;\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  font-size: 18px;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.tag-editor-close:hover {\n  background-color: #e5e7eb;\n}\n\n.tag-editor-loading {\n  color: #6b7280;\n  font-size: 14px;\n  padding: 8px 0;\n  text-align: center;\n}\n\n/* Link Tags Display */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.link-tag {\n  display: inline-block;\n  padding: 3px 8px;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 500;\n  color: white;\n  cursor: pointer;\n  transition: transform 0.2s ease, opacity 0.2s ease;\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.link-tag:hover {\n  transform: translateY(-1px);\n  opacity: 0.9;\n}\n\n/* Tag Results Styles */\n.tag-results {\n  margin-bottom: 24px;\n}\n\n.tag-results-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  padding: 12px;\n  background: #f0fdf4;\n  border: 1px solid #bbf7d0;\n  border-radius: 8px;\n}\n\n.tag-results-header h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #166534;\n  margin: 0;\n}\n\n/* Share Modal Styles */\n.share-modal {\n  width: 500px;\n  max-width: 90vw;\n}\n\n.share-collection-info {\n  margin-bottom: 24px;\n  padding: 16px;\n  background: #f8fafc;\n  border-radius: 8px;\n  border: 1px solid #e2e8f0;\n}\n\n.collection-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n}\n\n.collection-description {\n  color: #64748b;\n  margin: 0 0 12px 0;\n  line-height: 1.5;\n}\n\n.collection-meta {\n  font-size: 12px;\n  color: #94a3b8;\n}\n\n.share-toggle-section {\n  margin-bottom: 24px;\n  padding: 20px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n}\n\n.share-toggle-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n}\n\n.share-status {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n}\n\n.status-icon {\n  flex-shrink: 0;\n}\n\n.status-icon.public {\n  color: #10b981;\n}\n\n.status-icon.private {\n  color: #6b7280;\n}\n\n.status-title {\n  font-weight: 600;\n  color: #1e293b;\n  margin-bottom: 2px;\n}\n\n.status-subtitle {\n  font-size: 13px;\n  color: #64748b;\n}\n\n.toggle-button {\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: none;\n  transition: all 0.2s ease;\n  min-width: 120px;\n}\n\n.toggle-button.private {\n  background: #3b82f6;\n  color: white;\n}\n\n.toggle-button.private:hover:not(:disabled) {\n  background: #2563eb;\n}\n\n.toggle-button.public {\n  background: #ef4444;\n  color: white;\n}\n\n.toggle-button.public:hover:not(:disabled) {\n  background: #dc2626;\n}\n\n.toggle-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.share-link-section {\n  margin-bottom: 24px;\n  padding: 20px;\n  border: 1px solid #d1fae5;\n  border-radius: 8px;\n  background: #f0fdf4;\n}\n\n.share-link-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n  font-weight: 600;\n  color: #166534;\n}\n\n.share-link-container {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.share-link-input {\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  font-size: 13px;\n  color: #374151;\n  font-family: monospace;\n}\n\n.share-link-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.share-link-actions {\n  display: flex;\n  gap: 4px;\n}\n\n.copy-button,\n.open-button {\n  padding: 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #6b7280;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.copy-button:hover,\n.open-button:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.copy-button.copied {\n  background: #10b981;\n  color: white;\n  border-color: #10b981;\n}\n\n.share-analytics {\n  display: flex;\n  gap: 16px;\n}\n\n.analytics-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 6px 12px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 16px;\n  font-size: 13px;\n  color: #64748b;\n}\n\n.share-message {\n  padding: 12px;\n  border-radius: 6px;\n  margin-bottom: 16px;\n  font-size: 14px;\n}\n\n.share-message.success {\n  background: #f0fdf4;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.share-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n}\n\n.share-info-box {\n  padding: 16px;\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  margin-bottom: 16px;\n}\n\n.share-info-box h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.share-info-box ul {\n  margin: 0;\n  padding-left: 16px;\n  list-style-type: disc;\n}\n\n.share-info-box li {\n  margin-bottom: 6px;\n  font-size: 13px;\n  color: #64748b;\n  line-height: 1.4;\n}\n\n.share-info-box li:last-child {\n  margin-bottom: 0;\n}\n\n/* Settings Modal Styles */\n.settings-modal {\n  width: 700px;\n  max-width: 95vw;\n  max-height: 90vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.settings-content {\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n}\n\n.settings-tabs {\n  display: flex;\n  flex-direction: column;\n  background: #f8fafc;\n  border-right: 1px solid #e2e8f0;\n  min-width: 160px;\n  padding: 16px 0;\n}\n\n.settings-tab {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border: none;\n  background: transparent;\n  color: #64748b;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-align: left;\n  border-radius: 0;\n}\n\n.settings-tab:hover {\n  background: #e2e8f0;\n  color: #1e293b;\n}\n\n.settings-tab.active {\n  background: #3b82f6;\n  color: white;\n}\n\n.settings-panel {\n  flex: 1;\n  overflow-y: auto;\n  padding: 24px;\n}\n\n.settings-section h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 20px 0;\n}\n\n.setting-group {\n  margin-bottom: 32px;\n}\n\n.setting-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n  margin-bottom: 12px;\n  gap: 16px;\n}\n\n.setting-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n  min-width: 0;\n}\n\n.setting-label {\n  font-weight: 500;\n  color: #1e293b;\n  margin-bottom: 2px;\n}\n\n.setting-description {\n  font-size: 13px;\n  color: #64748b;\n  line-height: 1.4;\n}\n\n/* Toggle Switch Styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 44px;\n  height: 24px;\n  cursor: pointer;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #cbd5e1;\n  border-radius: 24px;\n  transition: 0.3s;\n}\n\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 18px;\n  width: 18px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  border-radius: 50%;\n  transition: 0.3s;\n}\n\n.toggle-switch input:checked + .toggle-slider {\n  background-color: #3b82f6;\n}\n\n.toggle-switch input:checked + .toggle-slider:before {\n  transform: translateX(20px);\n}\n\n.toggle-switch input:disabled + .toggle-slider {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* Settings Controls */\n.settings-select {\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #374151;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  min-width: 120px;\n}\n\n.settings-select:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.settings-select:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.settings-button {\n  padding: 8px 16px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #374151;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.settings-button:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.settings-button.danger {\n  background: #ef4444;\n  color: white;\n  border-color: #ef4444;\n}\n\n.settings-button.danger:hover {\n  background: #dc2626;\n  border-color: #dc2626;\n}\n\n/* Stats Grid */\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 16px;\n  margin: 24px 0;\n}\n\n.stat-card {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.stat-number {\n  font-size: 24px;\n  font-weight: 700;\n  color: #3b82f6;\n  margin-bottom: 4px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n/* Data Usage */\n.data-usage {\n  margin-top: 24px;\n  padding: 16px;\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n}\n\n.data-usage h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.usage-items {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n}\n\n.usage-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 13px;\n  color: #64748b;\n}\n\n/* Sharing Stats */\n.sharing-stats {\n  margin-top: 24px;\n  padding: 16px;\n  background: #f0fdf4;\n  border: 1px solid #bbf7d0;\n  border-radius: 8px;\n}\n\n.sharing-stats h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #166534;\n}\n\n.stats-row {\n  display: flex;\n  gap: 24px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 13px;\n  color: #166534;\n}\n\n/* About Section */\n.about-info {\n  margin-bottom: 32px;\n}\n\n.app-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n}\n\n.app-logo {\n  width: 48px;\n  height: 48px;\n  background: #3b82f6;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.app-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.app-version {\n  font-size: 12px;\n  color: #64748b;\n}\n\n.app-description {\n  color: #64748b;\n  line-height: 1.6;\n  margin: 0;\n}\n\n.support-links {\n  margin-bottom: 32px;\n}\n\n.support-links h4 {\n  margin: 0 0 16px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.link-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 12px;\n}\n\n.support-link {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  color: #64748b;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  font-size: 14px;\n}\n\n.support-link:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.credits {\n  text-align: center;\n  color: #94a3b8;\n  font-size: 12px;\n  line-height: 1.6;\n}\n\n.credits p {\n  margin: 0 0 4px 0;\n}\n\n/* Settings Actions */\n.setting-actions {\n  margin-top: 24px;\n  padding-top: 24px;\n  border-top: 1px solid #e2e8f0;\n}\n\n/* Settings Message */\n.settings-message {\n  position: absolute;\n  bottom: 80px;\n  left: 24px;\n  right: 24px;\n  padding: 12px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  z-index: 1000;\n  animation: slideUp 0.3s ease-out;\n}\n\n.settings-message.success {\n  background: #f0fdf4;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.settings-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n}\n\n@keyframes slideUp {\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .settings-modal {\n    width: 100%;\n    max-width: 100vw;\n    max-height: 100vh;\n    border-radius: 0;\n  }\n\n  .settings-content {\n    flex-direction: column;\n  }\n\n  .settings-tabs {\n    flex-direction: row;\n    min-width: auto;\n    border-right: none;\n    border-bottom: 1px solid #e2e8f0;\n    overflow-x: auto;\n    padding: 8px 0;\n  }\n\n  .settings-tab {\n    white-space: nowrap;\n    padding: 8px 12px;\n    min-width: 100px;\n  }\n\n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .stats-row {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .link-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Inbox Card Styles */\n.inbox-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n.inbox-card:hover {\n  border-color: #d1d5db;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.inbox-card.selected {\n  border-color: #3b82f6;\n  background: #f8fafc;\n}\n\n.inbox-card-content {\n  padding: 12px 16px;\n}\n\n.inbox-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n}\n\n.inbox-card-checkbox {\n  flex-shrink: 0;\n  padding-top: 2px;\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  accent-color: #3b82f6;\n}\n\n.inbox-card-favicon {\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  margin-top: 2px;\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  line-height: 1.4;\n  word-wrap: break-word;\n}\n\n.inbox-card-domain {\n  font-size: 12px;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.inbox-card-link {\n  color: #6b7280;\n  text-decoration: none;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.inbox-card-link:hover {\n  color: #3b82f6;\n  background: #f3f4f6;\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n.inbox-card-menu-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.inbox-card-menu-button:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.inbox-card-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  z-index: 50;\n  min-width: 180px;\n  padding: 4px;\n  margin-top: 4px;\n}\n\n.inbox-card-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 8px 12px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #374151;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n}\n\n.inbox-card-menu-item:hover {\n  background: #f3f4f6;\n}\n\n.inbox-card-menu-item.delete {\n  color: #dc2626;\n}\n\n.inbox-card-menu-item.delete:hover {\n  background: #fef2f2;\n}\n\n.inbox-card-submenu {\n  position: absolute;\n  top: 0;\n  right: 100%;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  z-index: 51;\n  min-width: 160px;\n  padding: 4px;\n  margin-right: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.inbox-card-submenu-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  border-bottom: 1px solid #e5e7eb;\n  margin-bottom: 4px;\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n.inbox-card-submenu-close {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 2px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.inbox-card-submenu-close:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.inbox-card-submenu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 6px 12px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.inbox-card-submenu-item:hover {\n  background: #f3f4f6;\n}\n\n.inbox-card-submenu-empty {\n  padding: 8px 12px;\n  font-size: 14px;\n  color: #6b7280;\n  text-align: center;\n  font-style: italic;\n}\n\n.inbox-card-summary {\n  margin-top: 8px;\n  padding: 8px 12px;\n  background: #f8fafc;\n  border-radius: 6px;\n  border-left: 3px solid #3b82f6;\n}\n\n.inbox-card-summary p {\n  margin: 0;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #475569;\n}\n\n.inbox-card-note {\n  margin-top: 8px;\n  padding: 8px 12px;\n  background: #fffbeb;\n  border-radius: 6px;\n  border-left: 3px solid #f59e0b;\n}\n\n.inbox-card-note p {\n  margin: 0;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #92400e;\n}\n\n.inbox-card-tags {\n  margin-top: 8px;\n  padding-top: 8px;\n  border-top: 1px solid #e5e7eb;\n}\n\n/* Inbox Section Styles */\n.inbox-section {\n  margin-bottom: 24px;\n}\n\n.inbox-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.inbox-count {\n  background: #fef3c7;\n  color: #d97706;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 2px 8px;\n  border-radius: 12px;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.inbox-action-button {\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  padding: 6px 12px;\n  font-size: 12px;\n  color: #374151;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.inbox-action-button:hover:not(:disabled) {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n\n.inbox-action-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.inbox-action-button.primary {\n  background: #3b82f6;\n  color: white;\n  border-color: #3b82f6;\n}\n\n.inbox-action-button.primary:hover:not(:disabled) {\n  background: #2563eb;\n  border-color: #2563eb;\n}\n\n.inbox-empty {\n  text-align: center;\n  padding: 40px 20px;\n  color: #6b7280;\n}\n\n.inbox-empty-icon {\n  width: 48px;\n  height: 48px;\n  color: #d1d5db;\n  margin: 0 auto 16px;\n}\n\n.inbox-empty h3 {\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: #374151;\n}\n\n  .inbox-empty p {\n    margin: 0;\n    font-size: 14px;\n    line-height: 1.5;\n  }\n\n  /* Command Palette Styles */\n  .command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n    z-index: 1000;\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    padding: 10vh 20px 20px;\n    animation: fadeIn 0.15s ease-out;\n  }\n\n  .command-palette {\n    background: white;\n    border-radius: 12px;\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n    width: 100%;\n    max-width: 640px;\n    max-height: 80vh;\n    overflow: hidden;\n    animation: slideIn 0.15s ease-out;\n  }\n\n  .command-palette-header {\n    padding: 16px;\n    border-bottom: 1px solid #e5e7eb;\n  }\n\n  .command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n  }\n\n  .command-palette-search-icon {\n    position: absolute;\n    left: 12px;\n    color: #6b7280;\n    z-index: 10;\n  }\n\n  .command-palette-input {\n    width: 100%;\n    padding: 12px 16px 12px 44px;\n    border: none;\n    font-size: 16px;\n    background: #f9fafb;\n    border-radius: 8px;\n    outline: none;\n    color: #111827;\n    padding-right: 60px;\n  }\n\n  .command-palette-input::placeholder {\n    color: #9ca3af;\n  }\n\n  .command-palette-shortcut {\n    position: absolute;\n    right: 12px;\n    display: flex;\n    align-items: center;\n    gap: 2px;\n    background: white;\n    border: 1px solid #d1d5db;\n    border-radius: 4px;\n    padding: 4px 6px;\n    font-size: 11px;\n    color: #6b7280;\n    font-weight: 500;\n  }\n\n  .command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: 8px 0;\n  }\n\n  .command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 12px 16px;\n    cursor: pointer;\n    transition: all 0.1s ease;\n    border-left: 3px solid transparent;\n  }\n\n  .command-palette-item:hover,\n  .command-palette-item.selected {\n    background: #f8fafc;\n    border-left-color: #3b82f6;\n  }\n\n  .command-palette-item.selected {\n    background: #eff6ff;\n  }\n\n  .command-palette-item-icon {\n    flex-shrink: 0;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    background: #f3f4f6;\n    color: #6b7280;\n  }\n\n  .command-palette-item.selected .command-palette-item-icon {\n    background: #dbeafe;\n    color: #3b82f6;\n  }\n\n  .command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n  }\n\n  .command-palette-item-title {\n    font-size: 14px;\n    font-weight: 500;\n    color: #111827;\n    margin-bottom: 2px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .command-palette-item-subtitle {\n    font-size: 12px;\n    color: #6b7280;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .command-palette-item-action {\n    flex-shrink: 0;\n    color: #d1d5db;\n    transition: color 0.1s ease;\n  }\n\n  .command-palette-item.selected .command-palette-item-action {\n    color: #6b7280;\n  }\n\n  .command-palette-empty {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 40px 20px;\n    color: #6b7280;\n    text-align: center;\n  }\n\n  .command-palette-empty svg {\n    margin-bottom: 12px;\n    color: #d1d5db;\n  }\n\n  .command-palette-empty p {\n    margin: 0 0 4px 0;\n    font-size: 14px;\n    font-weight: 500;\n    color: #374151;\n  }\n\n  .command-palette-empty span {\n    font-size: 12px;\n    color: #9ca3af;\n  }\n\n  .command-palette-footer {\n    padding: 12px 16px;\n    border-top: 1px solid #e5e7eb;\n    background: #f9fafb;\n  }\n\n  .command-palette-tips {\n    display: flex;\n    gap: 16px;\n    align-items: center;\n    justify-content: center;\n    font-size: 11px;\n    color: #6b7280;\n  }\n\n  .command-palette-tips kbd {\n    display: inline-block;\n    padding: 2px 4px;\n    background: white;\n    border: 1px solid #d1d5db;\n    border-radius: 3px;\n    font-size: 10px;\n    font-weight: 500;\n    color: #374151;\n    margin: 0 2px;\n    font-family: inherit;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes slideIn {\n    from {\n      opacity: 0;\n      transform: translateY(-20px) scale(0.98);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0) scale(1);\n    }\n  }\n\n  /* Mobile responsive */\n  @media (max-width: 640px) {\n    .command-palette-overlay {\n      padding: 5vh 16px 16px;\n    }\n\n    .command-palette {\n      max-height: 90vh;\n    }\n\n    .command-palette-tips {\n      flex-wrap: wrap;\n      gap: 8px;\n    }\n\n    .command-palette-item {\n      padding: 10px 12px;\n    }\n\n    .command-palette-item-title {\n      font-size: 13px;\n    }\n\n         .command-palette-item-subtitle {\n       font-size: 11px;\n     }\n   }\n\n   /* Tab Sync Styles */\n   .tab-sync-overlay {\n     position: fixed;\n     top: 0;\n     left: 0;\n     right: 0;\n     bottom: 0;\n     background: rgba(0, 0, 0, 0.6);\n     -webkit-backdrop-filter: blur(4px);\n     backdrop-filter: blur(4px);\n     z-index: 1001;\n     display: flex;\n     align-items: center;\n     justify-content: center;\n     padding: 20px;\n     animation: fadeIn 0.15s ease-out;\n   }\n\n   .tab-sync-modal {\n     background: white;\n     border-radius: 12px;\n     box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n     width: 100%;\n     max-width: 900px;\n     max-height: 90vh;\n     overflow: hidden;\n     animation: slideIn 0.15s ease-out;\n     display: flex;\n     flex-direction: column;\n   }\n\n   .tab-sync-header {\n     display: flex;\n     align-items: center;\n     justify-content: space-between;\n     padding: 20px 24px;\n     border-bottom: 1px solid #e5e7eb;\n     background: #f9fafb;\n   }\n\n   .tab-sync-title {\n     display: flex;\n     align-items: center;\n     gap: 12px;\n   }\n\n   .tab-sync-title h2 {\n     margin: 0;\n     font-size: 20px;\n     font-weight: 600;\n     color: #111827;\n   }\n\n   .tab-count {\n     background: #dbeafe;\n     color: #1d4ed8;\n     font-size: 12px;\n     font-weight: 500;\n     padding: 4px 8px;\n     border-radius: 12px;\n   }\n\n   .tab-sync-actions {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n   }\n\n   .tab-sync-refresh,\n   .tab-sync-close {\n     background: none;\n     border: none;\n     color: #6b7280;\n     cursor: pointer;\n     padding: 8px;\n     border-radius: 6px;\n     transition: all 0.2s ease;\n   }\n\n   .tab-sync-refresh:hover,\n   .tab-sync-close:hover {\n     color: #374151;\n     background: #f3f4f6;\n   }\n\n   .tab-sync-refresh:disabled {\n     opacity: 0.5;\n     cursor: not-allowed;\n   }\n\n   .spinning {\n     animation: spin 1s linear infinite;\n   }\n\n   .tab-sync-filters {\n     padding: 16px 24px;\n     border-bottom: 1px solid #e5e7eb;\n     background: #fafafa;\n   }\n\n   .tab-sync-filter-row {\n     display: flex;\n     align-items: center;\n     gap: 16px;\n     margin-bottom: 12px;\n   }\n\n   .tab-sync-filter-checkbox {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     font-size: 14px;\n     color: #374151;\n     cursor: pointer;\n   }\n\n   .tab-sync-filter-checkbox input[type=\"checkbox\"] {\n     width: 16px;\n     height: 16px;\n     cursor: pointer;\n     accent-color: #3b82f6;\n   }\n\n   .tab-sync-domain-filter {\n     flex: 1;\n     padding: 8px 12px;\n     border: 1px solid #d1d5db;\n     border-radius: 6px;\n     font-size: 14px;\n     background: white;\n   }\n\n   .tab-sync-domain-filter:focus {\n     outline: none;\n     border-color: #3b82f6;\n     box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n   }\n\n   .tab-sync-domain-pills {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     flex-wrap: wrap;\n   }\n\n   .domain-pills-label {\n     font-size: 12px;\n     color: #6b7280;\n     font-weight: 500;\n   }\n\n   .domain-pill {\n     background: white;\n     border: 1px solid #d1d5db;\n     border-radius: 16px;\n     padding: 4px 12px;\n     font-size: 12px;\n     color: #374151;\n     cursor: pointer;\n     transition: all 0.2s ease;\n   }\n\n   .domain-pill:hover {\n     border-color: #9ca3af;\n     background: #f9fafb;\n   }\n\n   .domain-pill.active {\n     background: #3b82f6;\n     color: white;\n     border-color: #3b82f6;\n   }\n\n   .tab-sync-bulk-actions {\n     display: flex;\n     align-items: center;\n     gap: 12px;\n     padding: 16px 24px;\n     border-bottom: 1px solid #e5e7eb;\n     background: white;\n   }\n\n   .bulk-action-btn {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     padding: 8px 16px;\n     background: white;\n     border: 1px solid #d1d5db;\n     border-radius: 6px;\n     font-size: 14px;\n     color: #374151;\n     cursor: pointer;\n     transition: all 0.2s ease;\n   }\n\n   .bulk-action-btn:hover:not(:disabled) {\n     background: #f9fafb;\n     border-color: #9ca3af;\n   }\n\n   .bulk-action-btn:disabled {\n     opacity: 0.5;\n     cursor: not-allowed;\n   }\n\n   .bulk-action-btn.primary {\n     background: #3b82f6;\n     color: white;\n     border-color: #3b82f6;\n   }\n\n   .bulk-action-btn.primary:hover:not(:disabled) {\n     background: #2563eb;\n     border-color: #2563eb;\n   }\n\n   .bulk-collection-select {\n     padding: 8px 12px;\n     border: 1px solid #d1d5db;\n     border-radius: 6px;\n     font-size: 14px;\n     background: white;\n     color: #374151;\n     cursor: pointer;\n   }\n\n   .bulk-collection-select:focus {\n     outline: none;\n     border-color: #3b82f6;\n     box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n   }\n\n   .tab-sync-content {\n     flex: 1;\n     overflow-y: auto;\n     padding: 0;\n   }\n\n   .tab-sync-loading,\n   .tab-sync-empty {\n     display: flex;\n     flex-direction: column;\n     align-items: center;\n     justify-content: center;\n     padding: 60px 20px;\n     color: #6b7280;\n     text-align: center;\n   }\n\n   .tab-sync-loading svg,\n   .tab-sync-empty svg {\n     margin-bottom: 16px;\n     color: #d1d5db;\n   }\n\n   .tab-sync-empty h3 {\n     margin: 0 0 8px 0;\n     font-size: 18px;\n     font-weight: 500;\n     color: #374151;\n   }\n\n   .tab-sync-empty p {\n     margin: 0;\n     font-size: 14px;\n     line-height: 1.5;\n   }\n\n   .tab-window-group {\n     border-bottom: 1px solid #e5e7eb;\n   }\n\n   .tab-window-group:last-child {\n     border-bottom: none;\n   }\n\n   .tab-window-header {\n     padding: 12px 24px;\n     background: #f8fafc;\n     border-bottom: 1px solid #e5e7eb;\n   }\n\n   .window-select-btn {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     background: none;\n     border: none;\n     font-size: 14px;\n     font-weight: 500;\n     color: #374151;\n     cursor: pointer;\n     padding: 4px 0;\n     transition: color 0.2s ease;\n   }\n\n   .window-select-btn:hover {\n     color: #3b82f6;\n   }\n\n   .tab-list {\n     padding: 0;\n   }\n\n   .tab-item {\n     display: flex;\n     align-items: center;\n     justify-content: space-between;\n     padding: 12px 24px;\n     border-bottom: 1px solid #f3f4f6;\n     transition: all 0.2s ease;\n   }\n\n   .tab-item:hover {\n     background: #f8fafc;\n   }\n\n   .tab-item.selected {\n     background: #eff6ff;\n     border-left: 3px solid #3b82f6;\n   }\n\n   .tab-item.active {\n     border-left: 3px solid #10b981;\n   }\n\n   .tab-item.selected.active {\n     border-left: 3px solid #3b82f6;\n   }\n\n   .tab-item-content {\n     display: flex;\n     align-items: center;\n     gap: 12px;\n     flex: 1;\n     min-width: 0;\n   }\n\n   .tab-checkbox {\n     width: 16px;\n     height: 16px;\n     cursor: pointer;\n     accent-color: #3b82f6;\n   }\n\n   .tab-favicon {\n     flex-shrink: 0;\n     width: 16px;\n     height: 16px;\n   }\n\n   .tab-info {\n     flex: 1;\n     min-width: 0;\n   }\n\n   .tab-title {\n     display: flex;\n     align-items: center;\n     gap: 6px;\n     font-size: 14px;\n     font-weight: 500;\n     color: #111827;\n     margin-bottom: 2px;\n     white-space: nowrap;\n     overflow: hidden;\n     text-overflow: ellipsis;\n   }\n\n   .tab-pin-indicator {\n     font-size: 12px;\n   }\n\n   .tab-active-indicator {\n     color: #10b981;\n     font-weight: bold;\n     font-size: 16px;\n   }\n\n   .tab-url {\n     font-size: 12px;\n     color: #6b7280;\n     white-space: nowrap;\n     overflow: hidden;\n     text-overflow: ellipsis;\n   }\n\n   .tab-actions {\n     display: flex;\n     align-items: center;\n     gap: 4px;\n   }\n\n   .tab-action-btn {\n     display: flex;\n     align-items: center;\n     justify-content: center;\n     background: none;\n     border: none;\n     color: #6b7280;\n     cursor: pointer;\n     padding: 6px;\n     border-radius: 4px;\n     transition: all 0.2s ease;\n     text-decoration: none;\n   }\n\n   .tab-action-btn:hover {\n     color: #3b82f6;\n     background: #f3f4f6;\n   }\n\n   .tab-action-btn:disabled {\n     opacity: 0.5;\n     cursor: not-allowed;\n   }\n\n   .tab-collection-select {\n     padding: 4px 6px;\n     border: 1px solid #d1d5db;\n     border-radius: 4px;\n     font-size: 12px;\n     background: white;\n     color: #374151;\n     cursor: pointer;\n     min-width: 40px;\n   }\n\n   .tab-collection-select:focus {\n     outline: none;\n     border-color: #3b82f6;\n   }\n\n   .tab-sync-footer {\n     padding: 16px 24px;\n     border-top: 1px solid #e5e7eb;\n     background: #f9fafb;\n   }\n\n   .tab-sync-stats {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     font-size: 12px;\n     color: #6b7280;\n   }\n\n   /* Mobile responsive */\n   @media (max-width: 768px) {\n     .tab-sync-overlay {\n       padding: 10px;\n     }\n\n     .tab-sync-modal {\n       max-height: 95vh;\n     }\n\n     .tab-sync-header {\n       padding: 16px;\n     }\n\n     .tab-sync-title h2 {\n       font-size: 18px;\n     }\n\n     .tab-sync-filters {\n       padding: 12px 16px;\n     }\n\n     .tab-sync-filter-row {\n       flex-direction: column;\n       align-items: stretch;\n       gap: 12px;\n     }\n\n     .tab-sync-bulk-actions {\n       padding: 12px 16px;\n       flex-wrap: wrap;\n       gap: 8px;\n     }\n\n     .tab-item {\n       padding: 10px 16px;\n     }\n\n     .tab-title {\n       font-size: 13px;\n     }\n\n     .tab-url {\n       font-size: 11px;\n     }\n\n     .tab-actions {\n       gap: 2px;\n     }\n\n     .tab-sync-footer {\n       padding: 12px 16px;\n     }\n\n     .tab-sync-stats {\n       flex-wrap: wrap;\n       gap: 4px;\n     }\n   }\n\n ","",{version:3,sources:["webpack://./src/sidepanel/sidepanel.css"],names:[],mappings:"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",sourcesContent:["/* Reset and base styles */\n* {\n  box-sizing: border-box;\n}\n\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n  overflow: hidden;\n}\n\n/* Header */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e5e7eb;\n  background: #ffffff;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.header-title h1 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: #111827;\n}\n\n.header-icon {\n  color: #3b82f6;\n  width: 20px;\n  height: 20px;\n}\n\n.save-button {\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s;\n}\n\n.save-button:hover {\n  background: #2563eb;\n}\n\n/* Enhanced Search Styles */\n.search-container {\n  position: relative;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.search-icon {\n  position: absolute;\n  left: 32px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #6b7280;\n  pointer-events: none;\n}\n\n.search-input {\n  width: 100%;\n  padding: 10px 12px 10px 36px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  font-size: 14px;\n  background: #f9fafb;\n  transition: border-color 0.2s, background-color 0.2s;\n  padding-right: 60px; /* Space for clear button and spinner */\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  background: white;\n}\n\n.search-clear {\n  position: absolute;\n  right: 40px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.search-clear:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.search-spinner {\n  position: absolute;\n  right: 24px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #3b82f6;\n  font-size: 16px;\n  animation: spin 1s linear infinite;\n}\n\n.search-power-mode {\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: #9ca3af;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search-power-mode:hover {\n  color: #3b82f6;\n  background: #f3f4f6;\n}\n\n@keyframes spin {\n  from { transform: translateY(-50%) rotate(0deg); }\n  to { transform: translateY(-50%) rotate(360deg); }\n}\n\n/* Search Results Styles */\n.search-results {\n  padding: 16px 0;\n}\n\n.search-results-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px 16px;\n  border-bottom: 1px solid #e5e7eb;\n  margin-bottom: 16px;\n}\n\n.search-results-header h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.clear-search-btn {\n  padding: 6px 12px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  color: #374151;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.clear-search-btn:hover {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n\n.no-results {\n  text-align: center;\n  padding: 40px 20px;\n  color: #6b7280;\n}\n\n/* Search Result Card Styles */\n.search-result-card {\n  position: relative;\n  margin-bottom: 16px;\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: #3b82f6;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 500;\n  z-index: 10;\n}\n\n.search-result-card:hover {\n  border-color: #d1d5db;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.search-result-header {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.search-result-favicon {\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  margin-top: 2px;\n}\n\n.search-result-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.search-result-title {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  cursor: pointer;\n  line-height: 1.4;\n  word-wrap: break-word;\n  transition: color 0.2s;\n}\n\n.search-result-title:hover {\n  color: #3b82f6;\n}\n\n.search-result-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: #6b7280;\n  flex-wrap: wrap;\n}\n\n.search-result-domain {\n  font-weight: 500;\n}\n\n.search-result-date::before {\n  content: '•';\n  margin-right: 8px;\n}\n\n.search-result-rank {\n  background: #eff6ff;\n  color: #1d4ed8;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 11px;\n  font-weight: 500;\n}\n\n.search-result-rank::before {\n  content: '•';\n  margin-right: 8px;\n  color: #6b7280;\n}\n\n.search-result-actions {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n/* Search headline with highlighting */\n.search-headline {\n  background: #fffbeb;\n  border: 1px solid #fed7aa;\n  border-radius: 6px;\n  padding: 8px 12px;\n  margin-bottom: 8px;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #92400e;\n}\n\n.search-headline mark {\n  background: #fbbf24;\n  color: #92400e;\n  padding: 1px 2px;\n  border-radius: 2px;\n}\n\n.search-result-category {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n/* Content */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0 20px 20px;\n}\n\n/* Sections */\n.section {\n  margin-bottom: 24px;\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 0;\n  background: none;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  color: #374151;\n  cursor: pointer;\n  text-align: left;\n  transition: color 0.2s;\n}\n\n.section-header:hover {\n  color: #111827;\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: #f3f4f6;\n  color: #6b7280;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 2px 8px;\n  border-radius: 12px;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.add-collection-button:hover {\n  color: #3b82f6;\n  background: #f3f4f6;\n}\n\n.section-content {\n  margin-top: 8px;\n}\n\n/* Link Cards */\n.link-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 12px;\n  transition: border-color 0.2s, box-shadow 0.2s;\n}\n\n.link-card:hover {\n  border-color: #d1d5db;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.link-header {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  margin-bottom: 12px;\n}\n\n.link-favicon {\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  margin-top: 2px;\n}\n\n.favicon-placeholder {\n  width: 16px;\n  height: 16px;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 10px;\n  font-weight: 600;\n}\n\n.link-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-title {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  cursor: pointer;\n  line-height: 1.4;\n  word-wrap: break-word;\n  transition: color 0.2s;\n}\n\n.link-title:hover {\n  color: #3b82f6;\n}\n\n.link-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.link-domain {\n  font-weight: 500;\n}\n\n.link-date::before {\n  content: '•';\n  margin-right: 8px;\n}\n\n.link-actions {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.action-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 6px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.action-button:hover {\n  background-color: #f3f4f6;\n}\n\n/* Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  z-index: 50;\n  min-width: 160px;\n  padding: 4px;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 8px 12px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #374151;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n}\n\n.dropdown-menu button:hover {\n  background: #f3f4f6;\n}\n\n.dropdown-menu button.delete-action {\n  color: #dc2626;\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: #fef2f2;\n}\n\n/* Collections menu */\n.collections-menu {\n  background: #f9fafb;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  padding: 8px;\n  margin-top: 8px;\n}\n\n.collections-header {\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7280;\n  margin-bottom: 4px;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 6px 8px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.collection-option:hover {\n  background: white;\n}\n\n/* Link content */\n.link-note, .link-summary {\n  margin-bottom: 8px;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #4b5563;\n}\n\n.link-note strong, .link-summary strong {\n  color: #374151;\n  font-weight: 600;\n}\n\n.link-category {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n.category-badge {\n  background: #f3f4f6;\n  color: white;\n  font-size: 11px;\n  font-weight: 600;\n  padding: 3px 8px;\n  border-radius: 12px;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n/* Collection Cards */\n.collection-card {\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  margin-bottom: 12px;\n  background: white;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n  background: none;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.collection-header:hover {\n  background: #f9fafb;\n}\n\n.collection-icon {\n  color: #6b7280;\n  flex-shrink: 0;\n}\n\n.collection-info {\n  flex: 1;\n  text-align: left;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 2px;\n}\n\n.collection-name {\n  font-weight: 500;\n  color: #374151;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.public-indicator {\n  display: flex;\n  align-items: center;\n  padding: 2px 6px;\n  background: #dcfce7;\n  color: #16a34a;\n  border-radius: 10px;\n  font-size: 10px;\n  flex-shrink: 0;\n}\n\n.collection-description {\n  font-size: 12px;\n  color: #6b7280;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.collection-count {\n  background: #f3f4f6;\n  color: #6b7280;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.share-collection-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: transparent;\n  color: #6b7280;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  flex-shrink: 0;\n}\n\n.share-collection-button:hover {\n  background: #f3f4f6;\n  color: #374151;\n}\n\n.collection-content {\n  padding: 0 16px 16px;\n  border-top: 1px solid #f3f4f6;\n}\n\n.collection-content .link-card {\n  border: none;\n  background: #f9fafb;\n  margin-bottom: 8px;\n}\n\n.empty-collection {\n  padding: 20px;\n  text-align: center;\n  color: #6b7280;\n  font-size: 14px;\n}\n\n/* Empty states */\n.empty-state {\n  text-align: center;\n  padding: 32px 16px;\n  color: #6b7280;\n}\n\n.empty-state p {\n  margin: 0 0 16px 0;\n  font-size: 14px;\n}\n\n.empty-action {\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.empty-action:hover {\n  background: #2563eb;\n}\n\n/* Footer */\n.footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-top: 1px solid #e5e7eb;\n  background: #f9fafb;\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 6px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.footer-button:hover {\n  color: #374151;\n  background: white;\n}\n\n.footer-text {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n/* Modals */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100;\n  padding: 20px;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 24px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #111827;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: color 0.2s, background-color 0.2s;\n}\n\n.close-button:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.modal-body {\n  padding: 24px;\n  overflow-y: auto;\n}\n\n/* Link preview in modal */\n.link-preview {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.link-preview-favicon {\n  flex-shrink: 0;\n}\n\n.link-preview-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-preview-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  margin-bottom: 2px;\n  word-wrap: break-word;\n}\n\n.link-preview-url {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n/* Form elements */\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 6px;\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  transition: border-color 0.2s;\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.modal-actions {\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n  margin-top: 24px;\n}\n\n.button-primary {\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 10px 20px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.button-primary:hover:not(:disabled) {\n  background: #2563eb;\n}\n\n.button-primary:disabled {\n  background: #9ca3af;\n  cursor: not-allowed;\n}\n\n.button-secondary {\n  background: white;\n  color: #374151;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  padding: 10px 20px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s, border-color 0.2s;\n}\n\n.button-secondary:hover {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n\n/* Loading state */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #6b7280;\n}\n\n.loading-spinner {\n  font-size: 14px;\n}\n\n/* Responsive adjustments */\n@media (max-width: 480px) {\n  .modal-content {\n    margin: 0;\n    border-radius: 0;\n    height: 100vh;\n    max-height: none;\n  }\n  \n  .modal-overlay {\n    padding: 0;\n  }\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.tab-sync-button,\n.logout-button {\n  background: #f3f4f6;\n  color: #374151;\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s, color 0.2s;\n}\n\n.tab-sync-button:hover,\n.logout-button:hover {\n  background: #e5e7eb;\n}\n\n/* Auth Form Styles */\n.auth-container {\n  padding: 20px;\n}\n\n.auth-form {\n  margin-top: 40px;\n  text-align: center;\n}\n\n.auth-form h2 {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.auth-form p {\n  font-size: 14px;\n  color: #6b7280;\n  margin-bottom: 24px;\n}\n\n.auth-input {\n  width: 100%;\n  padding: 12px;\n  font-size: 14px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  margin-bottom: 16px;\n}\n\n.auth-button {\n  width: 100%;\n  padding: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  color: white;\n  background: #3b82f6;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.auth-button:hover {\n  background: #2563eb;\n}\n\n.auth-button:disabled {\n  background: #9ca3af;\n  cursor: not-allowed;\n}\n\n.auth-message {\n  margin-top: 16px;\n  font-size: 14px;\n  color: #374151;\n}\n\n/* Tag Input Styles */\n.tag-input-container {\n  position: relative;\n  width: 100%;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background-color: white;\n  min-height: 42px;\n  cursor: text;\n  transition: border-color 0.2s ease;\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.tag-chip {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 8px;\n  border-radius: 16px;\n  color: white;\n  font-size: 12px;\n  font-weight: 500;\n  white-space: nowrap;\n  max-width: 150px;\n}\n\n.tag-name {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.tag-remove {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  border: none;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 50%;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  flex-shrink: 0;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n.tag-input {\n  flex: 1;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  min-width: 80px;\n  background: transparent;\n}\n\n.tag-input::placeholder {\n  color: #94a3b8;\n}\n\n.tag-input:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.tag-input-icon {\n  display: flex;\n  align-items: center;\n  color: #94a3b8;\n  flex-shrink: 0;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  margin-top: 4px;\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.tag-suggestion {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  padding: 8px 12px;\n  border: none;\n  background: white;\n  text-align: left;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  font-size: 14px;\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background-color: #f8fafc;\n}\n\n.tag-suggestion-color {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  color: #1e293b;\n}\n\n.tag-suggestion-count {\n  color: #64748b;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n/* Tag Filter Styles */\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-bottom: 16px;\n  padding: 12px;\n  background: #f8fafc;\n  border-radius: 8px;\n}\n\n.tag-filter {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 12px;\n  border: 1px solid transparent;\n  border-radius: 20px;\n  background: white;\n  color: #64748b;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  border-color: #e2e8f0;\n  transform: translateY(-1px);\n}\n\n.tag-filter.active {\n  background: #3b82f6;\n  color: white;\n  border-color: #3b82f6;\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: rgba(100, 116, 139, 0.1);\n  color: #64748b;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n  margin-left: 4px;\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n.tag-filter-skeleton {\n  color: #94a3b8;\n  font-size: 12px;\n  padding: 6px 12px;\n  background: #f1f5f9;\n  border-radius: 20px;\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n.tag-filter-more {\n  color: #64748b;\n  font-size: 12px;\n  padding: 6px 12px;\n  background: #f1f5f9;\n  border-radius: 20px;\n  font-weight: 500;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: .5;\n  }\n}\n\n/* Tag Cloud Styles */\n.tag-cloud {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  padding: 16px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: #fafafa;\n}\n\n.tag-cloud-item {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 12px;\n  border-radius: 16px;\n  background: white;\n  border: 1px solid #e2e8f0;\n  color: #64748b;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-decoration: none;\n}\n\n.tag-cloud-item:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n  transform: translateY(-1px);\n}\n\n.tag-cloud-count {\n  background: #f1f5f9;\n  color: #64748b;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 10px;\n}\n\n/* Tag Management Modal Styles */\n.tag-management {\n  padding: 16px;\n}\n\n.tag-management-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n}\n\n.tag-management-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.tag-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.tag-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n}\n\n.tag-list-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n}\n\n.tag-list-color {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-list-name {\n  font-weight: 500;\n  color: #1e293b;\n}\n\n.tag-list-count {\n  color: #64748b;\n  font-size: 12px;\n}\n\n.tag-list-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.tag-action-btn {\n  padding: 4px 8px;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  background: white;\n  color: #64748b;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.tag-action-btn:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.tag-action-btn.danger:hover {\n  border-color: #ef4444;\n  color: #ef4444;\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  .tag-input-wrapper {\n    padding: 6px 8px;\n    min-height: 38px;\n  }\n  \n  .tag-chip {\n    font-size: 11px;\n    padding: 3px 6px;\n  }\n  \n  .tag-filters {\n    padding: 8px;\n    gap: 6px;\n  }\n  \n  .tag-filter {\n    padding: 4px 8px;\n    font-size: 11px;\n  }\n}\n\n/* Tag Editor Styles */\n.tag-editor {\n  margin-top: 12px;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: #fafafa;\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  font-size: 18px;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.tag-editor-close:hover {\n  background-color: #e5e7eb;\n}\n\n.tag-editor-loading {\n  color: #6b7280;\n  font-size: 14px;\n  padding: 8px 0;\n  text-align: center;\n}\n\n/* Link Tags Display */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.link-tag {\n  display: inline-block;\n  padding: 3px 8px;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 500;\n  color: white;\n  cursor: pointer;\n  transition: transform 0.2s ease, opacity 0.2s ease;\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.link-tag:hover {\n  transform: translateY(-1px);\n  opacity: 0.9;\n}\n\n/* Tag Results Styles */\n.tag-results {\n  margin-bottom: 24px;\n}\n\n.tag-results-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  padding: 12px;\n  background: #f0fdf4;\n  border: 1px solid #bbf7d0;\n  border-radius: 8px;\n}\n\n.tag-results-header h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #166534;\n  margin: 0;\n}\n\n/* Share Modal Styles */\n.share-modal {\n  width: 500px;\n  max-width: 90vw;\n}\n\n.share-collection-info {\n  margin-bottom: 24px;\n  padding: 16px;\n  background: #f8fafc;\n  border-radius: 8px;\n  border: 1px solid #e2e8f0;\n}\n\n.collection-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 8px 0;\n}\n\n.collection-description {\n  color: #64748b;\n  margin: 0 0 12px 0;\n  line-height: 1.5;\n}\n\n.collection-meta {\n  font-size: 12px;\n  color: #94a3b8;\n}\n\n.share-toggle-section {\n  margin-bottom: 24px;\n  padding: 20px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n}\n\n.share-toggle-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n}\n\n.share-status {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n}\n\n.status-icon {\n  flex-shrink: 0;\n}\n\n.status-icon.public {\n  color: #10b981;\n}\n\n.status-icon.private {\n  color: #6b7280;\n}\n\n.status-title {\n  font-weight: 600;\n  color: #1e293b;\n  margin-bottom: 2px;\n}\n\n.status-subtitle {\n  font-size: 13px;\n  color: #64748b;\n}\n\n.toggle-button {\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  border: none;\n  transition: all 0.2s ease;\n  min-width: 120px;\n}\n\n.toggle-button.private {\n  background: #3b82f6;\n  color: white;\n}\n\n.toggle-button.private:hover:not(:disabled) {\n  background: #2563eb;\n}\n\n.toggle-button.public {\n  background: #ef4444;\n  color: white;\n}\n\n.toggle-button.public:hover:not(:disabled) {\n  background: #dc2626;\n}\n\n.toggle-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.share-link-section {\n  margin-bottom: 24px;\n  padding: 20px;\n  border: 1px solid #d1fae5;\n  border-radius: 8px;\n  background: #f0fdf4;\n}\n\n.share-link-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n  font-weight: 600;\n  color: #166534;\n}\n\n.share-link-container {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.share-link-input {\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  font-size: 13px;\n  color: #374151;\n  font-family: monospace;\n}\n\n.share-link-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.share-link-actions {\n  display: flex;\n  gap: 4px;\n}\n\n.copy-button,\n.open-button {\n  padding: 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #6b7280;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.copy-button:hover,\n.open-button:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.copy-button.copied {\n  background: #10b981;\n  color: white;\n  border-color: #10b981;\n}\n\n.share-analytics {\n  display: flex;\n  gap: 16px;\n}\n\n.analytics-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 6px 12px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 16px;\n  font-size: 13px;\n  color: #64748b;\n}\n\n.share-message {\n  padding: 12px;\n  border-radius: 6px;\n  margin-bottom: 16px;\n  font-size: 14px;\n}\n\n.share-message.success {\n  background: #f0fdf4;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.share-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n}\n\n.share-info-box {\n  padding: 16px;\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  margin-bottom: 16px;\n}\n\n.share-info-box h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.share-info-box ul {\n  margin: 0;\n  padding-left: 16px;\n  list-style-type: disc;\n}\n\n.share-info-box li {\n  margin-bottom: 6px;\n  font-size: 13px;\n  color: #64748b;\n  line-height: 1.4;\n}\n\n.share-info-box li:last-child {\n  margin-bottom: 0;\n}\n\n/* Settings Modal Styles */\n.settings-modal {\n  width: 700px;\n  max-width: 95vw;\n  max-height: 90vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.settings-content {\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n}\n\n.settings-tabs {\n  display: flex;\n  flex-direction: column;\n  background: #f8fafc;\n  border-right: 1px solid #e2e8f0;\n  min-width: 160px;\n  padding: 16px 0;\n}\n\n.settings-tab {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border: none;\n  background: transparent;\n  color: #64748b;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-align: left;\n  border-radius: 0;\n}\n\n.settings-tab:hover {\n  background: #e2e8f0;\n  color: #1e293b;\n}\n\n.settings-tab.active {\n  background: #3b82f6;\n  color: white;\n}\n\n.settings-panel {\n  flex: 1;\n  overflow-y: auto;\n  padding: 24px;\n}\n\n.settings-section h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0 0 20px 0;\n}\n\n.setting-group {\n  margin-bottom: 32px;\n}\n\n.setting-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n  margin-bottom: 12px;\n  gap: 16px;\n}\n\n.setting-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n  min-width: 0;\n}\n\n.setting-label {\n  font-weight: 500;\n  color: #1e293b;\n  margin-bottom: 2px;\n}\n\n.setting-description {\n  font-size: 13px;\n  color: #64748b;\n  line-height: 1.4;\n}\n\n/* Toggle Switch Styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 44px;\n  height: 24px;\n  cursor: pointer;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #cbd5e1;\n  border-radius: 24px;\n  transition: 0.3s;\n}\n\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 18px;\n  width: 18px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  border-radius: 50%;\n  transition: 0.3s;\n}\n\n.toggle-switch input:checked + .toggle-slider {\n  background-color: #3b82f6;\n}\n\n.toggle-switch input:checked + .toggle-slider:before {\n  transform: translateX(20px);\n}\n\n.toggle-switch input:disabled + .toggle-slider {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* Settings Controls */\n.settings-select {\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #374151;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  min-width: 120px;\n}\n\n.settings-select:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.settings-select:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.settings-button {\n  padding: 8px 16px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #374151;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.settings-button:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.settings-button.danger {\n  background: #ef4444;\n  color: white;\n  border-color: #ef4444;\n}\n\n.settings-button.danger:hover {\n  background: #dc2626;\n  border-color: #dc2626;\n}\n\n/* Stats Grid */\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 16px;\n  margin: 24px 0;\n}\n\n.stat-card {\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.stat-number {\n  font-size: 24px;\n  font-weight: 700;\n  color: #3b82f6;\n  margin-bottom: 4px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #64748b;\n  font-weight: 500;\n}\n\n/* Data Usage */\n.data-usage {\n  margin-top: 24px;\n  padding: 16px;\n  background: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n}\n\n.data-usage h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.usage-items {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n}\n\n.usage-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 13px;\n  color: #64748b;\n}\n\n/* Sharing Stats */\n.sharing-stats {\n  margin-top: 24px;\n  padding: 16px;\n  background: #f0fdf4;\n  border: 1px solid #bbf7d0;\n  border-radius: 8px;\n}\n\n.sharing-stats h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #166534;\n}\n\n.stats-row {\n  display: flex;\n  gap: 24px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 13px;\n  color: #166534;\n}\n\n/* About Section */\n.about-info {\n  margin-bottom: 32px;\n}\n\n.app-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n}\n\n.app-logo {\n  width: 48px;\n  height: 48px;\n  background: #3b82f6;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.app-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.app-version {\n  font-size: 12px;\n  color: #64748b;\n}\n\n.app-description {\n  color: #64748b;\n  line-height: 1.6;\n  margin: 0;\n}\n\n.support-links {\n  margin-bottom: 32px;\n}\n\n.support-links h4 {\n  margin: 0 0 16px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.link-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 12px;\n}\n\n.support-link {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  color: #64748b;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  font-size: 14px;\n}\n\n.support-link:hover {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.credits {\n  text-align: center;\n  color: #94a3b8;\n  font-size: 12px;\n  line-height: 1.6;\n}\n\n.credits p {\n  margin: 0 0 4px 0;\n}\n\n/* Settings Actions */\n.setting-actions {\n  margin-top: 24px;\n  padding-top: 24px;\n  border-top: 1px solid #e2e8f0;\n}\n\n/* Settings Message */\n.settings-message {\n  position: absolute;\n  bottom: 80px;\n  left: 24px;\n  right: 24px;\n  padding: 12px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  z-index: 1000;\n  animation: slideUp 0.3s ease-out;\n}\n\n.settings-message.success {\n  background: #f0fdf4;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.settings-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n}\n\n@keyframes slideUp {\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .settings-modal {\n    width: 100%;\n    max-width: 100vw;\n    max-height: 100vh;\n    border-radius: 0;\n  }\n\n  .settings-content {\n    flex-direction: column;\n  }\n\n  .settings-tabs {\n    flex-direction: row;\n    min-width: auto;\n    border-right: none;\n    border-bottom: 1px solid #e2e8f0;\n    overflow-x: auto;\n    padding: 8px 0;\n  }\n\n  .settings-tab {\n    white-space: nowrap;\n    padding: 8px 12px;\n    min-width: 100px;\n  }\n\n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .stats-row {\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .link-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* Inbox Card Styles */\n.inbox-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n.inbox-card:hover {\n  border-color: #d1d5db;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.inbox-card.selected {\n  border-color: #3b82f6;\n  background: #f8fafc;\n}\n\n.inbox-card-content {\n  padding: 12px 16px;\n}\n\n.inbox-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n}\n\n.inbox-card-checkbox {\n  flex-shrink: 0;\n  padding-top: 2px;\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  accent-color: #3b82f6;\n}\n\n.inbox-card-favicon {\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n  margin-top: 2px;\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 500;\n  color: #111827;\n  line-height: 1.4;\n  word-wrap: break-word;\n}\n\n.inbox-card-domain {\n  font-size: 12px;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.inbox-card-link {\n  color: #6b7280;\n  text-decoration: none;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.inbox-card-link:hover {\n  color: #3b82f6;\n  background: #f3f4f6;\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n.inbox-card-menu-button {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.inbox-card-menu-button:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.inbox-card-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  z-index: 50;\n  min-width: 180px;\n  padding: 4px;\n  margin-top: 4px;\n}\n\n.inbox-card-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 8px 12px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #374151;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.2s;\n}\n\n.inbox-card-menu-item:hover {\n  background: #f3f4f6;\n}\n\n.inbox-card-menu-item.delete {\n  color: #dc2626;\n}\n\n.inbox-card-menu-item.delete:hover {\n  background: #fef2f2;\n}\n\n.inbox-card-submenu {\n  position: absolute;\n  top: 0;\n  right: 100%;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  z-index: 51;\n  min-width: 160px;\n  padding: 4px;\n  margin-right: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.inbox-card-submenu-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  border-bottom: 1px solid #e5e7eb;\n  margin-bottom: 4px;\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n.inbox-card-submenu-close {\n  background: none;\n  border: none;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 2px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.inbox-card-submenu-close:hover {\n  color: #374151;\n  background: #f3f4f6;\n}\n\n.inbox-card-submenu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: 6px 12px;\n  text-align: left;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.inbox-card-submenu-item:hover {\n  background: #f3f4f6;\n}\n\n.inbox-card-submenu-empty {\n  padding: 8px 12px;\n  font-size: 14px;\n  color: #6b7280;\n  text-align: center;\n  font-style: italic;\n}\n\n.inbox-card-summary {\n  margin-top: 8px;\n  padding: 8px 12px;\n  background: #f8fafc;\n  border-radius: 6px;\n  border-left: 3px solid #3b82f6;\n}\n\n.inbox-card-summary p {\n  margin: 0;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #475569;\n}\n\n.inbox-card-note {\n  margin-top: 8px;\n  padding: 8px 12px;\n  background: #fffbeb;\n  border-radius: 6px;\n  border-left: 3px solid #f59e0b;\n}\n\n.inbox-card-note p {\n  margin: 0;\n  font-size: 13px;\n  line-height: 1.4;\n  color: #92400e;\n}\n\n.inbox-card-tags {\n  margin-top: 8px;\n  padding-top: 8px;\n  border-top: 1px solid #e5e7eb;\n}\n\n/* Inbox Section Styles */\n.inbox-section {\n  margin-bottom: 24px;\n}\n\n.inbox-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.inbox-count {\n  background: #fef3c7;\n  color: #d97706;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 2px 8px;\n  border-radius: 12px;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.inbox-action-button {\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  padding: 6px 12px;\n  font-size: 12px;\n  color: #374151;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.inbox-action-button:hover:not(:disabled) {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n\n.inbox-action-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.inbox-action-button.primary {\n  background: #3b82f6;\n  color: white;\n  border-color: #3b82f6;\n}\n\n.inbox-action-button.primary:hover:not(:disabled) {\n  background: #2563eb;\n  border-color: #2563eb;\n}\n\n.inbox-empty {\n  text-align: center;\n  padding: 40px 20px;\n  color: #6b7280;\n}\n\n.inbox-empty-icon {\n  width: 48px;\n  height: 48px;\n  color: #d1d5db;\n  margin: 0 auto 16px;\n}\n\n.inbox-empty h3 {\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: #374151;\n}\n\n  .inbox-empty p {\n    margin: 0;\n    font-size: 14px;\n    line-height: 1.5;\n  }\n\n  /* Command Palette Styles */\n  .command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n    z-index: 1000;\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    padding: 10vh 20px 20px;\n    animation: fadeIn 0.15s ease-out;\n  }\n\n  .command-palette {\n    background: white;\n    border-radius: 12px;\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n    width: 100%;\n    max-width: 640px;\n    max-height: 80vh;\n    overflow: hidden;\n    animation: slideIn 0.15s ease-out;\n  }\n\n  .command-palette-header {\n    padding: 16px;\n    border-bottom: 1px solid #e5e7eb;\n  }\n\n  .command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n  }\n\n  .command-palette-search-icon {\n    position: absolute;\n    left: 12px;\n    color: #6b7280;\n    z-index: 10;\n  }\n\n  .command-palette-input {\n    width: 100%;\n    padding: 12px 16px 12px 44px;\n    border: none;\n    font-size: 16px;\n    background: #f9fafb;\n    border-radius: 8px;\n    outline: none;\n    color: #111827;\n    padding-right: 60px;\n  }\n\n  .command-palette-input::placeholder {\n    color: #9ca3af;\n  }\n\n  .command-palette-shortcut {\n    position: absolute;\n    right: 12px;\n    display: flex;\n    align-items: center;\n    gap: 2px;\n    background: white;\n    border: 1px solid #d1d5db;\n    border-radius: 4px;\n    padding: 4px 6px;\n    font-size: 11px;\n    color: #6b7280;\n    font-weight: 500;\n  }\n\n  .command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: 8px 0;\n  }\n\n  .command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 12px 16px;\n    cursor: pointer;\n    transition: all 0.1s ease;\n    border-left: 3px solid transparent;\n  }\n\n  .command-palette-item:hover,\n  .command-palette-item.selected {\n    background: #f8fafc;\n    border-left-color: #3b82f6;\n  }\n\n  .command-palette-item.selected {\n    background: #eff6ff;\n  }\n\n  .command-palette-item-icon {\n    flex-shrink: 0;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 6px;\n    background: #f3f4f6;\n    color: #6b7280;\n  }\n\n  .command-palette-item.selected .command-palette-item-icon {\n    background: #dbeafe;\n    color: #3b82f6;\n  }\n\n  .command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n  }\n\n  .command-palette-item-title {\n    font-size: 14px;\n    font-weight: 500;\n    color: #111827;\n    margin-bottom: 2px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .command-palette-item-subtitle {\n    font-size: 12px;\n    color: #6b7280;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .command-palette-item-action {\n    flex-shrink: 0;\n    color: #d1d5db;\n    transition: color 0.1s ease;\n  }\n\n  .command-palette-item.selected .command-palette-item-action {\n    color: #6b7280;\n  }\n\n  .command-palette-empty {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 40px 20px;\n    color: #6b7280;\n    text-align: center;\n  }\n\n  .command-palette-empty svg {\n    margin-bottom: 12px;\n    color: #d1d5db;\n  }\n\n  .command-palette-empty p {\n    margin: 0 0 4px 0;\n    font-size: 14px;\n    font-weight: 500;\n    color: #374151;\n  }\n\n  .command-palette-empty span {\n    font-size: 12px;\n    color: #9ca3af;\n  }\n\n  .command-palette-footer {\n    padding: 12px 16px;\n    border-top: 1px solid #e5e7eb;\n    background: #f9fafb;\n  }\n\n  .command-palette-tips {\n    display: flex;\n    gap: 16px;\n    align-items: center;\n    justify-content: center;\n    font-size: 11px;\n    color: #6b7280;\n  }\n\n  .command-palette-tips kbd {\n    display: inline-block;\n    padding: 2px 4px;\n    background: white;\n    border: 1px solid #d1d5db;\n    border-radius: 3px;\n    font-size: 10px;\n    font-weight: 500;\n    color: #374151;\n    margin: 0 2px;\n    font-family: inherit;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes slideIn {\n    from {\n      opacity: 0;\n      transform: translateY(-20px) scale(0.98);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0) scale(1);\n    }\n  }\n\n  /* Mobile responsive */\n  @media (max-width: 640px) {\n    .command-palette-overlay {\n      padding: 5vh 16px 16px;\n    }\n\n    .command-palette {\n      max-height: 90vh;\n    }\n\n    .command-palette-tips {\n      flex-wrap: wrap;\n      gap: 8px;\n    }\n\n    .command-palette-item {\n      padding: 10px 12px;\n    }\n\n    .command-palette-item-title {\n      font-size: 13px;\n    }\n\n         .command-palette-item-subtitle {\n       font-size: 11px;\n     }\n   }\n\n   /* Tab Sync Styles */\n   .tab-sync-overlay {\n     position: fixed;\n     top: 0;\n     left: 0;\n     right: 0;\n     bottom: 0;\n     background: rgba(0, 0, 0, 0.6);\n     -webkit-backdrop-filter: blur(4px);\n     backdrop-filter: blur(4px);\n     z-index: 1001;\n     display: flex;\n     align-items: center;\n     justify-content: center;\n     padding: 20px;\n     animation: fadeIn 0.15s ease-out;\n   }\n\n   .tab-sync-modal {\n     background: white;\n     border-radius: 12px;\n     box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n     width: 100%;\n     max-width: 900px;\n     max-height: 90vh;\n     overflow: hidden;\n     animation: slideIn 0.15s ease-out;\n     display: flex;\n     flex-direction: column;\n   }\n\n   .tab-sync-header {\n     display: flex;\n     align-items: center;\n     justify-content: space-between;\n     padding: 20px 24px;\n     border-bottom: 1px solid #e5e7eb;\n     background: #f9fafb;\n   }\n\n   .tab-sync-title {\n     display: flex;\n     align-items: center;\n     gap: 12px;\n   }\n\n   .tab-sync-title h2 {\n     margin: 0;\n     font-size: 20px;\n     font-weight: 600;\n     color: #111827;\n   }\n\n   .tab-count {\n     background: #dbeafe;\n     color: #1d4ed8;\n     font-size: 12px;\n     font-weight: 500;\n     padding: 4px 8px;\n     border-radius: 12px;\n   }\n\n   .tab-sync-actions {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n   }\n\n   .tab-sync-refresh,\n   .tab-sync-close {\n     background: none;\n     border: none;\n     color: #6b7280;\n     cursor: pointer;\n     padding: 8px;\n     border-radius: 6px;\n     transition: all 0.2s ease;\n   }\n\n   .tab-sync-refresh:hover,\n   .tab-sync-close:hover {\n     color: #374151;\n     background: #f3f4f6;\n   }\n\n   .tab-sync-refresh:disabled {\n     opacity: 0.5;\n     cursor: not-allowed;\n   }\n\n   .spinning {\n     animation: spin 1s linear infinite;\n   }\n\n   .tab-sync-filters {\n     padding: 16px 24px;\n     border-bottom: 1px solid #e5e7eb;\n     background: #fafafa;\n   }\n\n   .tab-sync-filter-row {\n     display: flex;\n     align-items: center;\n     gap: 16px;\n     margin-bottom: 12px;\n   }\n\n   .tab-sync-filter-checkbox {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     font-size: 14px;\n     color: #374151;\n     cursor: pointer;\n   }\n\n   .tab-sync-filter-checkbox input[type=\"checkbox\"] {\n     width: 16px;\n     height: 16px;\n     cursor: pointer;\n     accent-color: #3b82f6;\n   }\n\n   .tab-sync-domain-filter {\n     flex: 1;\n     padding: 8px 12px;\n     border: 1px solid #d1d5db;\n     border-radius: 6px;\n     font-size: 14px;\n     background: white;\n   }\n\n   .tab-sync-domain-filter:focus {\n     outline: none;\n     border-color: #3b82f6;\n     box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n   }\n\n   .tab-sync-domain-pills {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     flex-wrap: wrap;\n   }\n\n   .domain-pills-label {\n     font-size: 12px;\n     color: #6b7280;\n     font-weight: 500;\n   }\n\n   .domain-pill {\n     background: white;\n     border: 1px solid #d1d5db;\n     border-radius: 16px;\n     padding: 4px 12px;\n     font-size: 12px;\n     color: #374151;\n     cursor: pointer;\n     transition: all 0.2s ease;\n   }\n\n   .domain-pill:hover {\n     border-color: #9ca3af;\n     background: #f9fafb;\n   }\n\n   .domain-pill.active {\n     background: #3b82f6;\n     color: white;\n     border-color: #3b82f6;\n   }\n\n   .tab-sync-bulk-actions {\n     display: flex;\n     align-items: center;\n     gap: 12px;\n     padding: 16px 24px;\n     border-bottom: 1px solid #e5e7eb;\n     background: white;\n   }\n\n   .bulk-action-btn {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     padding: 8px 16px;\n     background: white;\n     border: 1px solid #d1d5db;\n     border-radius: 6px;\n     font-size: 14px;\n     color: #374151;\n     cursor: pointer;\n     transition: all 0.2s ease;\n   }\n\n   .bulk-action-btn:hover:not(:disabled) {\n     background: #f9fafb;\n     border-color: #9ca3af;\n   }\n\n   .bulk-action-btn:disabled {\n     opacity: 0.5;\n     cursor: not-allowed;\n   }\n\n   .bulk-action-btn.primary {\n     background: #3b82f6;\n     color: white;\n     border-color: #3b82f6;\n   }\n\n   .bulk-action-btn.primary:hover:not(:disabled) {\n     background: #2563eb;\n     border-color: #2563eb;\n   }\n\n   .bulk-collection-select {\n     padding: 8px 12px;\n     border: 1px solid #d1d5db;\n     border-radius: 6px;\n     font-size: 14px;\n     background: white;\n     color: #374151;\n     cursor: pointer;\n   }\n\n   .bulk-collection-select:focus {\n     outline: none;\n     border-color: #3b82f6;\n     box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n   }\n\n   .tab-sync-content {\n     flex: 1;\n     overflow-y: auto;\n     padding: 0;\n   }\n\n   .tab-sync-loading,\n   .tab-sync-empty {\n     display: flex;\n     flex-direction: column;\n     align-items: center;\n     justify-content: center;\n     padding: 60px 20px;\n     color: #6b7280;\n     text-align: center;\n   }\n\n   .tab-sync-loading svg,\n   .tab-sync-empty svg {\n     margin-bottom: 16px;\n     color: #d1d5db;\n   }\n\n   .tab-sync-empty h3 {\n     margin: 0 0 8px 0;\n     font-size: 18px;\n     font-weight: 500;\n     color: #374151;\n   }\n\n   .tab-sync-empty p {\n     margin: 0;\n     font-size: 14px;\n     line-height: 1.5;\n   }\n\n   .tab-window-group {\n     border-bottom: 1px solid #e5e7eb;\n   }\n\n   .tab-window-group:last-child {\n     border-bottom: none;\n   }\n\n   .tab-window-header {\n     padding: 12px 24px;\n     background: #f8fafc;\n     border-bottom: 1px solid #e5e7eb;\n   }\n\n   .window-select-btn {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     background: none;\n     border: none;\n     font-size: 14px;\n     font-weight: 500;\n     color: #374151;\n     cursor: pointer;\n     padding: 4px 0;\n     transition: color 0.2s ease;\n   }\n\n   .window-select-btn:hover {\n     color: #3b82f6;\n   }\n\n   .tab-list {\n     padding: 0;\n   }\n\n   .tab-item {\n     display: flex;\n     align-items: center;\n     justify-content: space-between;\n     padding: 12px 24px;\n     border-bottom: 1px solid #f3f4f6;\n     transition: all 0.2s ease;\n   }\n\n   .tab-item:hover {\n     background: #f8fafc;\n   }\n\n   .tab-item.selected {\n     background: #eff6ff;\n     border-left: 3px solid #3b82f6;\n   }\n\n   .tab-item.active {\n     border-left: 3px solid #10b981;\n   }\n\n   .tab-item.selected.active {\n     border-left: 3px solid #3b82f6;\n   }\n\n   .tab-item-content {\n     display: flex;\n     align-items: center;\n     gap: 12px;\n     flex: 1;\n     min-width: 0;\n   }\n\n   .tab-checkbox {\n     width: 16px;\n     height: 16px;\n     cursor: pointer;\n     accent-color: #3b82f6;\n   }\n\n   .tab-favicon {\n     flex-shrink: 0;\n     width: 16px;\n     height: 16px;\n   }\n\n   .tab-info {\n     flex: 1;\n     min-width: 0;\n   }\n\n   .tab-title {\n     display: flex;\n     align-items: center;\n     gap: 6px;\n     font-size: 14px;\n     font-weight: 500;\n     color: #111827;\n     margin-bottom: 2px;\n     white-space: nowrap;\n     overflow: hidden;\n     text-overflow: ellipsis;\n   }\n\n   .tab-pin-indicator {\n     font-size: 12px;\n   }\n\n   .tab-active-indicator {\n     color: #10b981;\n     font-weight: bold;\n     font-size: 16px;\n   }\n\n   .tab-url {\n     font-size: 12px;\n     color: #6b7280;\n     white-space: nowrap;\n     overflow: hidden;\n     text-overflow: ellipsis;\n   }\n\n   .tab-actions {\n     display: flex;\n     align-items: center;\n     gap: 4px;\n   }\n\n   .tab-action-btn {\n     display: flex;\n     align-items: center;\n     justify-content: center;\n     background: none;\n     border: none;\n     color: #6b7280;\n     cursor: pointer;\n     padding: 6px;\n     border-radius: 4px;\n     transition: all 0.2s ease;\n     text-decoration: none;\n   }\n\n   .tab-action-btn:hover {\n     color: #3b82f6;\n     background: #f3f4f6;\n   }\n\n   .tab-action-btn:disabled {\n     opacity: 0.5;\n     cursor: not-allowed;\n   }\n\n   .tab-collection-select {\n     padding: 4px 6px;\n     border: 1px solid #d1d5db;\n     border-radius: 4px;\n     font-size: 12px;\n     background: white;\n     color: #374151;\n     cursor: pointer;\n     min-width: 40px;\n   }\n\n   .tab-collection-select:focus {\n     outline: none;\n     border-color: #3b82f6;\n   }\n\n   .tab-sync-footer {\n     padding: 16px 24px;\n     border-top: 1px solid #e5e7eb;\n     background: #f9fafb;\n   }\n\n   .tab-sync-stats {\n     display: flex;\n     align-items: center;\n     gap: 8px;\n     font-size: 12px;\n     color: #6b7280;\n   }\n\n   /* Mobile responsive */\n   @media (max-width: 768px) {\n     .tab-sync-overlay {\n       padding: 10px;\n     }\n\n     .tab-sync-modal {\n       max-height: 95vh;\n     }\n\n     .tab-sync-header {\n       padding: 16px;\n     }\n\n     .tab-sync-title h2 {\n       font-size: 18px;\n     }\n\n     .tab-sync-filters {\n       padding: 12px 16px;\n     }\n\n     .tab-sync-filter-row {\n       flex-direction: column;\n       align-items: stretch;\n       gap: 12px;\n     }\n\n     .tab-sync-bulk-actions {\n       padding: 12px 16px;\n       flex-wrap: wrap;\n       gap: 8px;\n     }\n\n     .tab-item {\n       padding: 10px 16px;\n     }\n\n     .tab-title {\n       font-size: 13px;\n     }\n\n     .tab-url {\n       font-size: 11px;\n     }\n\n     .tab-actions {\n       gap: 2px;\n     }\n\n     .tab-sync-footer {\n       padding: 12px 16px;\n     }\n\n     .tab-sync-stats {\n       flex-wrap: wrap;\n       gap: 4px;\n     }\n   }\n\n "],sourceRoot:""}]);const s=a},206:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},261:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const o=r(t(660));class i extends o.default{select(e){let n=!1;const t=(null!=e?e:"*").split("").map(e=>/\s/.test(e)&&!n?"":('"'===e&&(n=!n),e)).join("");return this.url.searchParams.set("select",t),this.headers.Prefer&&(this.headers.Prefer+=","),this.headers.Prefer+="return=representation",this}order(e,{ascending:n=!0,nullsFirst:t,foreignTable:r,referencedTable:o=r}={}){const i=o?`${o}.order`:"order",a=this.url.searchParams.get(i);return this.url.searchParams.set(i,`${a?`${a},`:""}${e}.${n?"asc":"desc"}${void 0===t?"":t?".nullsfirst":".nullslast"}`),this}limit(e,{foreignTable:n,referencedTable:t=n}={}){const r=void 0===t?"limit":`${t}.limit`;return this.url.searchParams.set(r,`${e}`),this}range(e,n,{foreignTable:t,referencedTable:r=t}={}){const o=void 0===r?"offset":`${r}.offset`,i=void 0===r?"limit":`${r}.limit`;return this.url.searchParams.set(o,`${e}`),this.url.searchParams.set(i,""+(n-e+1)),this}abortSignal(e){return this.signal=e,this}single(){return this.headers.Accept="application/vnd.pgrst.object+json",this}maybeSingle(){return"GET"===this.method?this.headers.Accept="application/json":this.headers.Accept="application/vnd.pgrst.object+json",this.isMaybeSingle=!0,this}csv(){return this.headers.Accept="text/csv",this}geojson(){return this.headers.Accept="application/geo+json",this}explain({analyze:e=!1,verbose:n=!1,settings:t=!1,buffers:r=!1,wal:o=!1,format:i="text"}={}){var a;const s=[e?"analyze":null,n?"verbose":null,t?"settings":null,r?"buffers":null,o?"wal":null].filter(Boolean).join("|"),l=null!==(a=this.headers.Accept)&&void 0!==a?a:"application/json";return this.headers.Accept=`application/vnd.pgrst.plan+${i}; for="${l}"; options=${s};`,this}rollback(){var e;return(null!==(e=this.headers.Prefer)&&void 0!==e?e:"").trim().length>0?this.headers.Prefer+=",tx=rollback":this.headers.Prefer="tx=rollback",this}returns(){return this}}n.default=i},279:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.PostgrestError=n.PostgrestBuilder=n.PostgrestTransformBuilder=n.PostgrestFilterBuilder=n.PostgrestQueryBuilder=n.PostgrestClient=void 0;const o=r(t(342));n.PostgrestClient=o.default;const i=r(t(45));n.PostgrestQueryBuilder=i.default;const a=r(t(825));n.PostgrestFilterBuilder=a.default;const s=r(t(261));n.PostgrestTransformBuilder=s.default;const l=r(t(660));n.PostgrestBuilder=l.default;const c=r(t(818));n.PostgrestError=c.default,n.default={PostgrestClient:o.default,PostgrestQueryBuilder:i.default,PostgrestFilterBuilder:a.default,PostgrestTransformBuilder:s.default,PostgrestBuilder:l.default,PostgrestError:c.default}},287:(e,n)=>{var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),A=Symbol.for("react.lazy"),f=Symbol.iterator,p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function m(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||p}function b(){}function x(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||p}m.prototype.isReactComponent={},m.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=m.prototype;var y=x.prototype=new b;y.constructor=x,h(y,m.prototype),y.isPureReactComponent=!0;var v=Array.isArray,C=Object.prototype.hasOwnProperty,E={current:null},B={key:!0,ref:!0,__self:!0,__source:!0};function w(e,n,r){var o,i={},a=null,s=null;if(null!=n)for(o in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(a=""+n.key),n)C.call(n,o)&&!B.hasOwnProperty(o)&&(i[o]=n[o]);var l=arguments.length-2;if(1===l)i.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];i.children=c}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===i[o]&&(i[o]=l[o]);return{$$typeof:t,type:e,key:a,ref:s,props:i,_owner:E.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var S=/\/+/g;function j(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return n[e]})}(""+e.key):n.toString(36)}function _(e,n,o,i,a){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case r:l=!0}}if(l)return a=a(l=e),e=""===i?"."+j(l,0):i,v(a)?(o="",null!=e&&(o=e.replace(S,"$&/")+"/"),_(a,n,o,"",function(e){return e})):null!=a&&(k(a)&&(a=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(a,o+(!a.key||l&&l.key===a.key?"":(""+a.key).replace(S,"$&/")+"/")+e)),n.push(a)),1;if(l=0,i=""===i?".":i+":",v(e))for(var c=0;c<e.length;c++){var u=i+j(s=e[c],c);l+=_(s,n,o,u,a)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=_(s=s.value,n,o,u=i+j(s,c++),a);else if("object"===s)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function N(e,n,t){if(null==e)return e;var r=[],o=0;return _(e,r,"","",function(e){return n.call(t,e,o++)}),r}function T(e){if(-1===e._status){var n=e._result;(n=n()).then(function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)},function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)}),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var z={current:null},O={transition:null},P={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:O,ReactCurrentOwner:E};function I(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:N,forEach:function(e,n,t){N(e,function(){n.apply(this,arguments)},t)},count:function(e){var n=0;return N(e,function(){n++}),n},toArray:function(e){return N(e,function(e){return e})||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=m,n.Fragment=o,n.Profiler=a,n.PureComponent=x,n.StrictMode=i,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P,n.act=I,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=h({},e.props),i=e.key,a=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(a=n.ref,s=E.current),void 0!==n.key&&(i=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in n)C.call(n,c)&&!B.hasOwnProperty(c)&&(o[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}return{$$typeof:t,type:e.type,key:i,ref:a,props:o,_owner:s}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=w,n.createFactory=function(e){var n=w.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=k,n.lazy=function(e){return{$$typeof:A,_payload:{_status:-1,_result:e},_init:T}},n.memo=function(e,n){return{$$typeof:d,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=O.transition;O.transition={};try{e()}finally{O.transition=n}},n.unstable_act=I,n.useCallback=function(e,n){return z.current.useCallback(e,n)},n.useContext=function(e){return z.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return z.current.useDeferredValue(e)},n.useEffect=function(e,n){return z.current.useEffect(e,n)},n.useId=function(){return z.current.useId()},n.useImperativeHandle=function(e,n,t){return z.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return z.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return z.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return z.current.useMemo(e,n)},n.useReducer=function(e,n,t){return z.current.useReducer(e,n,t)},n.useRef=function(e){return z.current.useRef(e)},n.useState=function(e){return z.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return z.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return z.current.useTransition()},n.version="18.3.1"},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t}).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},338:(e,n,t)=>{var r=t(961);n.H=r.createRoot,r.hydrateRoot},342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const o=r(t(45)),i=r(t(825)),a=t(530);class s{constructor(e,{headers:n={},schema:t,fetch:r}={}){this.url=e,this.headers=Object.assign(Object.assign({},a.DEFAULT_HEADERS),n),this.schemaName=t,this.fetch=r}from(e){const n=new URL(`${this.url}/${e}`);return new o.default(n,{headers:Object.assign({},this.headers),schema:this.schemaName,fetch:this.fetch})}schema(e){return new s(this.url,{headers:this.headers,schema:e,fetch:this.fetch})}rpc(e,n={},{head:t=!1,get:r=!1,count:o}={}){let a;const s=new URL(`${this.url}/rpc/${e}`);let l;t||r?(a=t?"HEAD":"GET",Object.entries(n).filter(([e,n])=>void 0!==n).map(([e,n])=>[e,Array.isArray(n)?`{${n.join(",")}}`:`${n}`]).forEach(([e,n])=>{s.searchParams.append(e,n)})):(a="POST",l=n);const c=Object.assign({},this.headers);return o&&(c.Prefer=`count=${o}`),new i.default({method:a,url:s,headers:c,schema:this.schemaName,body:l,fetch:this.fetch,allowEmpty:!1})}}n.default=s},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},463:(e,n)=>{function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,o=e[r];if(!(0<i(o,n)))break e;e[r]=n,e[t]=o,t=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length,a=o>>>1;r<a;){var s=2*(r+1)-1,l=e[s],c=s+1,u=e[c];if(0>i(l,t))c<o&&0>i(u,l)?(e[r]=u,e[c]=t,r=c):(e[r]=l,e[s]=t,r=s);else{if(!(c<o&&0>i(u,t)))break e;e[r]=u,e[c]=t,r=c}}}return n}function i(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var a=performance;n.unstable_now=function(){return a.now()}}else{var s=Date,l=s.now();n.unstable_now=function(){return s.now()-l}}var c=[],u=[],d=1,A=null,f=3,p=!1,h=!1,g=!1,m="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,x="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var n=r(u);null!==n;){if(null===n.callback)o(u);else{if(!(n.startTime<=e))break;o(u),n.sortIndex=n.expirationTime,t(c,n)}n=r(u)}}function v(e){if(g=!1,y(e),!h)if(null!==r(c))h=!0,O(C);else{var n=r(u);null!==n&&P(v,n.startTime-e)}}function C(e,t){h=!1,g&&(g=!1,b(k),k=-1),p=!0;var i=f;try{for(y(t),A=r(c);null!==A&&(!(A.expirationTime>t)||e&&!_());){var a=A.callback;if("function"==typeof a){A.callback=null,f=A.priorityLevel;var s=a(A.expirationTime<=t);t=n.unstable_now(),"function"==typeof s?A.callback=s:A===r(c)&&o(c),y(t)}else o(c);A=r(c)}if(null!==A)var l=!0;else{var d=r(u);null!==d&&P(v,d.startTime-t),l=!1}return l}finally{A=null,f=i,p=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,B=!1,w=null,k=-1,S=5,j=-1;function _(){return!(n.unstable_now()-j<S)}function N(){if(null!==w){var e=n.unstable_now();j=e;var t=!0;try{t=w(!0,e)}finally{t?E():(B=!1,w=null)}}else B=!1}if("function"==typeof x)E=function(){x(N)};else if("undefined"!=typeof MessageChannel){var T=new MessageChannel,z=T.port2;T.port1.onmessage=N,E=function(){z.postMessage(null)}}else E=function(){m(N,0)};function O(e){w=e,B||(B=!0,E())}function P(e,t){k=m(function(){e(n.unstable_now())},t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){h||p||(h=!0,O(C))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):S=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return f},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(f){case 1:case 2:case 3:var n=3;break;default:n=f}var t=f;f=n;try{return e()}finally{f=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=f;f=e;try{return n()}finally{f=t}},n.unstable_scheduleCallback=function(e,o,i){var a=n.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?a+i:a,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:o,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>a?(e.sortIndex=i,t(u,e),null===r(c)&&e===r(u)&&(g?(b(k),k=-1):g=!0,P(v,i-a))):(e.sortIndex=s,t(c,e),h||p||(h=!0,O(C))),e},n.unstable_shouldYield=_,n.unstable_wrapCallback=function(e){var n=f;return function(){var t=f;f=n;try{return e.apply(this,arguments)}finally{f=t}}}},519:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.version=void 0,n.version="0.0.0-automated"},530:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.DEFAULT_HEADERS=void 0;const r=t(519);n.DEFAULT_HEADERS={"X-Client-Info":`postgrest-js/${r.version}`}},540:(e,n,t)=>{e.exports=t(287)},551:(e,n,t)=>{var r=t(540),o=t(982);function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var a=new Set,s={};function l(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(s[e]=n,e=0;e<n.length;e++)a.add(n[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,A=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},p={};function h(e,n,t,r,o,i,a){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=i,this.removeEmptyString=a}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){g[e]=new h(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var n=e[0];g[n]=new h(n,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){g[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){g[e]=new h(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){g[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){g[e]=new h(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){g[e]=new h(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){g[e]=new h(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){g[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)});var m=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,n,t,r){var o=g.hasOwnProperty(n)?g[n]:null;(null!==o?0!==o.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!d.call(p,e)||!d.call(f,e)&&(A.test(e)?p[e]=!0:(f[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var n=e.replace(m,b);g[n]=new h(n,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var n=e.replace(m,b);g[n]=new h(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var n=e.replace(m,b);g[n]=new h(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)}),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){g[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)});var y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,v=Symbol.for("react.element"),C=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),B=Symbol.for("react.strict_mode"),w=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),S=Symbol.for("react.context"),j=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),T=Symbol.for("react.memo"),z=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var P=Symbol.iterator;function I(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=P&&e[P]||e["@@iterator"])?e:null}var R,L=Object.assign;function D(e){if(void 0===R)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);R=n&&n[1]||""}return"\n"+R+e}var M=!1;function U(e,n){if(!e||M)return"";M=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var o=n.stack.split("\n"),i=r.stack.split("\n"),a=o.length-1,s=i.length-1;1<=a&&0<=s&&o[a]!==i[s];)s--;for(;1<=a&&0<=s;a--,s--)if(o[a]!==i[s]){if(1!==a||1!==s)do{if(a--,0>--s||o[a]!==i[s]){var l="\n"+o[a].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=a&&0<=s);break}}}finally{M=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?D(e):""}function K(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case C:return"Portal";case w:return"Profiler";case B:return"StrictMode";case _:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case j:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case T:return null!==(n=e.displayName||null)?n:$(e.type)||"Memo";case z:n=e._payload,e=e._init;try{return $(e(n))}catch(e){}}return null}function F(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return $(n);case 8:return n===B?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function q(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function Y(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function W(e){e._valueTracker||(e._valueTracker=function(e){var n=Y(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,i=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function G(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function V(e,n){var t=n.checked;return L({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function H(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=q(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Z(e,n){null!=(n=n.checked)&&x(e,"checked",n,!1)}function X(e,n){Z(e,n);var t=q(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,q(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function J(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&Q(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+q(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(i(91));return L({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(i(92));if(ne(t)){if(1<t.length)throw Error(i(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:q(t)}}function ie(e,n){var t=q(n.value),r=q(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ae(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?se(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction(function(){return ue(e,n)})}:ue);function Ae(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function he(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||fe.hasOwnProperty(e)&&fe[e]?(""+n).trim():n+"px"}function ge(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=he(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(fe).forEach(function(e){pe.forEach(function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),fe[n]=fe[e]})});var me=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,n){if(n){if(me[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(i(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(i(62))}}function xe(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function ve(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Ee=null,Be=null;function we(e){if(e=yo(e)){if("function"!=typeof Ce)throw Error(i(280));var n=e.stateNode;n&&(n=Co(n),Ce(e.stateNode,e.type,n))}}function ke(e){Ee?Be?Be.push(e):Be=[e]:Ee=e}function Se(){if(Ee){var e=Ee,n=Be;if(Be=Ee=null,we(e),n)for(e=0;e<n.length;e++)we(n[e])}}function je(e,n){return e(n)}function _e(){}var Ne=!1;function Te(e,n,t){if(Ne)return e(n,t);Ne=!0;try{return je(e,n,t)}finally{Ne=!1,(null!==Ee||null!==Be)&&(_e(),Se())}}function ze(e,n){var t=e.stateNode;if(null===t)return null;var r=Co(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(i(231,n,typeof t));return t}var Oe=!1;if(u)try{var Pe={};Object.defineProperty(Pe,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",Pe,Pe),window.removeEventListener("test",Pe,Pe)}catch(ue){Oe=!1}function Ie(e,n,t,r,o,i,a,s,l){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var Re=!1,Le=null,De=!1,Me=null,Ue={onError:function(e){Re=!0,Le=e}};function Ke(e,n,t,r,o,i,a,s,l){Re=!1,Le=null,Ie.apply(Ue,arguments)}function $e(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{!!(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Fe(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function qe(e){if($e(e)!==e)throw Error(i(188))}function Ye(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=$e(e)))throw Error(i(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){t=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===t)return qe(o),e;if(a===r)return qe(o),n;a=a.sibling}throw Error(i(188))}if(t.return!==r.return)t=o,r=a;else{for(var s=!1,l=o.child;l;){if(l===t){s=!0,t=o,r=a;break}if(l===r){s=!0,r=o,t=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===t){s=!0,t=a,r=o;break}if(l===r){s=!0,r=a,t=o;break}l=l.sibling}if(!s)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?e:n}(e))?We(e):null}function We(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=We(e);if(null!==n)return n;e=e.sibling}return null}var Ge=o.unstable_scheduleCallback,Qe=o.unstable_cancelCallback,Ve=o.unstable_shouldYield,He=o.unstable_requestPaint,Ze=o.unstable_now,Xe=o.unstable_getCurrentPriorityLevel,Je=o.unstable_ImmediatePriority,en=o.unstable_UserBlockingPriority,nn=o.unstable_NormalPriority,tn=o.unstable_LowPriority,rn=o.unstable_IdlePriority,on=null,an=null,sn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ln(e)/cn|0)|0},ln=Math.log,cn=Math.LN2,un=64,dn=4194304;function An(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function fn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,o=e.suspendedLanes,i=e.pingedLanes,a=268435455&t;if(0!==a){var s=a&~o;0!==s?r=An(s):0!==(i&=a)&&(r=An(i))}else 0!==(a=t&~o)?r=An(a):0!==i&&(r=An(i));if(0===r)return 0;if(0!==n&&n!==r&&0===(n&o)&&((o=r&-r)>=(i=n&-n)||16===o&&4194240&i))return n;if(4&r&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-sn(n)),r|=e[t],n&=~o;return r}function pn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function hn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gn(){var e=un;return!(4194240&(un<<=1))&&(un=64),e}function mn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function bn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-sn(n)]=t}function xn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-sn(t),o=1<<r;o&n|e[r]&n&&(e[r]|=n),t&=~o}}var yn=0;function vn(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var Cn,En,Bn,wn,kn,Sn=!1,jn=[],_n=null,Nn=null,Tn=null,zn=new Map,On=new Map,Pn=[],In="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rn(e,n){switch(e){case"focusin":case"focusout":_n=null;break;case"dragenter":case"dragleave":Nn=null;break;case"mouseover":case"mouseout":Tn=null;break;case"pointerover":case"pointerout":zn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":On.delete(n.pointerId)}}function Ln(e,n,t,r,o,i){return null===e||e.nativeEvent!==i?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:i,targetContainers:[o]},null!==n&&null!==(n=yo(n))&&En(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function Dn(e){var n=xo(e.target);if(null!==n){var t=$e(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Fe(t)))return e.blockedOn=n,void kn(e.priority,function(){Bn(t)})}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Mn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Hn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=yo(t))&&En(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);ye=r,t.target.dispatchEvent(r),ye=null,n.shift()}return!0}function Un(e,n,t){Mn(e)&&t.delete(n)}function Kn(){Sn=!1,null!==_n&&Mn(_n)&&(_n=null),null!==Nn&&Mn(Nn)&&(Nn=null),null!==Tn&&Mn(Tn)&&(Tn=null),zn.forEach(Un),On.forEach(Un)}function $n(e,n){e.blockedOn===n&&(e.blockedOn=null,Sn||(Sn=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Kn)))}function Fn(e){function n(n){return $n(n,e)}if(0<jn.length){$n(jn[0],e);for(var t=1;t<jn.length;t++){var r=jn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==_n&&$n(_n,e),null!==Nn&&$n(Nn,e),null!==Tn&&$n(Tn,e),zn.forEach(n),On.forEach(n),t=0;t<Pn.length;t++)(r=Pn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Pn.length&&null===(t=Pn[0]).blockedOn;)Dn(t),null===t.blockedOn&&Pn.shift()}var qn=y.ReactCurrentBatchConfig,Yn=!0;function Wn(e,n,t,r){var o=yn,i=qn.transition;qn.transition=null;try{yn=1,Qn(e,n,t,r)}finally{yn=o,qn.transition=i}}function Gn(e,n,t,r){var o=yn,i=qn.transition;qn.transition=null;try{yn=4,Qn(e,n,t,r)}finally{yn=o,qn.transition=i}}function Qn(e,n,t,r){if(Yn){var o=Hn(e,n,t,r);if(null===o)qr(e,n,r,Vn,t),Rn(e,r);else if(function(e,n,t,r,o){switch(n){case"focusin":return _n=Ln(_n,e,n,t,r,o),!0;case"dragenter":return Nn=Ln(Nn,e,n,t,r,o),!0;case"mouseover":return Tn=Ln(Tn,e,n,t,r,o),!0;case"pointerover":var i=o.pointerId;return zn.set(i,Ln(zn.get(i)||null,e,n,t,r,o)),!0;case"gotpointercapture":return i=o.pointerId,On.set(i,Ln(On.get(i)||null,e,n,t,r,o)),!0}return!1}(o,e,n,t,r))r.stopPropagation();else if(Rn(e,r),4&n&&-1<In.indexOf(e)){for(;null!==o;){var i=yo(o);if(null!==i&&Cn(i),null===(i=Hn(e,n,t,r))&&qr(e,n,r,Vn,t),i===o)break;o=i}null!==o&&r.stopPropagation()}else qr(e,n,r,null,t)}}var Vn=null;function Hn(e,n,t,r){if(Vn=null,null!==(e=xo(e=ve(r))))if(null===(n=$e(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Fe(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Vn=e,null}function Zn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Je:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var Xn=null,Jn=null,et=null;function nt(){if(et)return et;var e,n,t=Jn,r=t.length,o="value"in Xn?Xn.value:Xn.textContent,i=o.length;for(e=0;e<r&&t[e]===o[e];e++);var a=r-e;for(n=1;n<=a&&t[r-n]===o[i-n];n++);return et=o.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function ot(){return!1}function it(e){function n(n,t,r,o,i){for(var a in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=o,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(a)&&(n=e[a],this[a]=n?n(o):o[a]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?rt:ot,this.isPropagationStopped=ot,this}return L(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var at,st,lt,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=it(ct),dt=L({},ct,{view:0,detail:0}),At=it(dt),ft=L({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:wt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lt&&(lt&&"mousemove"===e.type?(at=e.screenX-lt.screenX,st=e.screenY-lt.screenY):st=at=0,lt=e),at)},movementY:function(e){return"movementY"in e?e.movementY:st}}),pt=it(ft),ht=it(L({},ft,{dataTransfer:0})),gt=it(L({},dt,{relatedTarget:0})),mt=it(L({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),bt=L({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xt=it(bt),yt=it(L({},ct,{data:0})),vt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ct={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Et={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Et[e])&&!!n[e]}function wt(){return Bt}var kt=L({},dt,{key:function(e){if(e.key){var n=vt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ct[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:wt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),St=it(kt),jt=it(L({},ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_t=it(L({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:wt})),Nt=it(L({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tt=L({},ft,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),zt=it(Tt),Ot=[9,13,27,32],Pt=u&&"CompositionEvent"in window,It=null;u&&"documentMode"in document&&(It=document.documentMode);var Rt=u&&"TextEvent"in window&&!It,Lt=u&&(!Pt||It&&8<It&&11>=It),Dt=String.fromCharCode(32),Mt=!1;function Ut(e,n){switch(e){case"keyup":return-1!==Ot.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Kt(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $t=!1,Ft={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Ft[e.type]:"textarea"===n}function Yt(e,n,t,r){ke(r),0<(n=Wr(n,"onChange")).length&&(t=new ut("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Wt=null,Gt=null;function Qt(e){Dr(e,0)}function Vt(e){if(G(vo(e)))return e}function Ht(e,n){if("change"===e)return n}var Zt=!1;if(u){var Xt;if(u){var Jt="oninput"in document;if(!Jt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jt="function"==typeof er.oninput}Xt=Jt}else Xt=!1;Zt=Xt&&(!document.documentMode||9<document.documentMode)}function nr(){Wt&&(Wt.detachEvent("onpropertychange",tr),Gt=Wt=null)}function tr(e){if("value"===e.propertyName&&Vt(Gt)){var n=[];Yt(n,Gt,e,ve(e)),Te(Qt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Gt=t,(Wt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Vt(Gt)}function ir(e,n){if("click"===e)return Vt(n)}function ar(e,n){if("input"===e||"change"===e)return Vt(n)}var sr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function lr(e,n){if(sr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var o=t[r];if(!d.call(n,o)||!sr(e[o],n[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?dr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function Ar(){for(var e=window,n=Q();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=Q((e=n.contentWindow).document)}return n}function fr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function pr(e){var n=Ar(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&dr(t.ownerDocument.documentElement,t)){if(null!==r&&fr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var o=t.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=ur(t,i);var a=ur(t,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((n=n.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(n),e.extend(a.node,a.offset)):(n.setEnd(a.node,a.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=u&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,br=null,xr=!1;function yr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;xr||null==gr||gr!==Q(r)||(r="selectionStart"in(r=gr)&&fr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=Wr(mr,"onSelect")).length&&(n=new ut("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=gr)))}function vr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Cr={animationend:vr("Animation","AnimationEnd"),animationiteration:vr("Animation","AnimationIteration"),animationstart:vr("Animation","AnimationStart"),transitionend:vr("Transition","TransitionEnd")},Er={},Br={};function wr(e){if(Er[e])return Er[e];if(!Cr[e])return e;var n,t=Cr[e];for(n in t)if(t.hasOwnProperty(n)&&n in Br)return Er[e]=t[n];return e}u&&(Br=document.createElement("div").style,"AnimationEvent"in window||(delete Cr.animationend.animation,delete Cr.animationiteration.animation,delete Cr.animationstart.animation),"TransitionEvent"in window||delete Cr.transitionend.transition);var kr=wr("animationend"),Sr=wr("animationiteration"),jr=wr("animationstart"),_r=wr("transitionend"),Nr=new Map,Tr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function zr(e,n){Nr.set(e,n),l(n,[e])}for(var Or=0;Or<Tr.length;Or++){var Pr=Tr[Or];zr(Pr.toLowerCase(),"on"+(Pr[0].toUpperCase()+Pr.slice(1)))}zr(kr,"onAnimationEnd"),zr(Sr,"onAnimationIteration"),zr(jr,"onAnimationStart"),zr("dblclick","onDoubleClick"),zr("focusin","onFocus"),zr("focusout","onBlur"),zr(_r,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ir="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Rr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ir));function Lr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,o,a,s,l,c){if(Ke.apply(this,arguments),Re){if(!Re)throw Error(i(198));var u=Le;Re=!1,Le=null,De||(De=!0,Me=u)}}(r,n,void 0,e),e.currentTarget=null}function Dr(e,n){n=!!(4&n);for(var t=0;t<e.length;t++){var r=e[t],o=r.event;r=r.listeners;e:{var i=void 0;if(n)for(var a=r.length-1;0<=a;a--){var s=r[a],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==i&&o.isPropagationStopped())break e;Lr(o,s,c),i=l}else for(a=0;a<r.length;a++){if(l=(s=r[a]).instance,c=s.currentTarget,s=s.listener,l!==i&&o.isPropagationStopped())break e;Lr(o,s,c),i=l}}}if(De)throw e=Me,De=!1,Me=null,e}function Mr(e,n){var t=n[go];void 0===t&&(t=n[go]=new Set);var r=e+"__bubble";t.has(r)||(Fr(n,e,2,!1),t.add(r))}function Ur(e,n,t){var r=0;n&&(r|=4),Fr(t,e,r,n)}var Kr="_reactListening"+Math.random().toString(36).slice(2);function $r(e){if(!e[Kr]){e[Kr]=!0,a.forEach(function(n){"selectionchange"!==n&&(Rr.has(n)||Ur(n,!1,e),Ur(n,!0,e))});var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Kr]||(n[Kr]=!0,Ur("selectionchange",!1,n))}}function Fr(e,n,t,r){switch(Zn(n)){case 1:var o=Wn;break;case 4:o=Gn;break;default:o=Qn}t=o.bind(null,n,t,e),o=void 0,!Oe||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),r?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function qr(e,n,t,r,o){var i=r;if(!(1&n||2&n||null===r))e:for(;;){if(null===r)return;var a=r.tag;if(3===a||4===a){var s=r.stateNode.containerInfo;if(s===o||8===s.nodeType&&s.parentNode===o)break;if(4===a)for(a=r.return;null!==a;){var l=a.tag;if((3===l||4===l)&&((l=a.stateNode.containerInfo)===o||8===l.nodeType&&l.parentNode===o))return;a=a.return}for(;null!==s;){if(null===(a=xo(s)))return;if(5===(l=a.tag)||6===l){r=i=a;continue e}s=s.parentNode}}r=r.return}Te(function(){var r=i,o=ve(t),a=[];e:{var s=Nr.get(e);if(void 0!==s){var l=ut,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":l=St;break;case"focusin":c="focus",l=gt;break;case"focusout":c="blur",l=gt;break;case"beforeblur":case"afterblur":l=gt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=pt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=ht;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=_t;break;case kr:case Sr:case jr:l=mt;break;case _r:l=Nt;break;case"scroll":l=At;break;case"wheel":l=zt;break;case"copy":case"cut":case"paste":l=xt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=jt}var u=!!(4&n),d=!u&&"scroll"===e,A=u?null!==s?s+"Capture":null:s;u=[];for(var f,p=r;null!==p;){var h=(f=p).stateNode;if(5===f.tag&&null!==h&&(f=h,null!==A&&null!=(h=ze(p,A))&&u.push(Yr(p,h,f))),d)break;p=p.return}0<u.length&&(s=new l(s,c,null,t,o),a.push({event:s,listeners:u}))}}if(!(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||t===ye||!(c=t.relatedTarget||t.fromElement)||!xo(c)&&!c[ho])&&(l||s)&&(s=o.window===o?o:(s=o.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(c=(c=t.relatedTarget||t.toElement)?xo(c):null)&&(c!==(d=$e(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(u=pt,h="onMouseLeave",A="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(u=jt,h="onPointerLeave",A="onPointerEnter",p="pointer"),d=null==l?s:vo(l),f=null==c?s:vo(c),(s=new u(h,p+"leave",l,t,o)).target=d,s.relatedTarget=f,h=null,xo(o)===r&&((u=new u(A,p+"enter",c,t,o)).target=f,u.relatedTarget=d,h=u),d=h,l&&c)e:{for(A=c,p=0,f=u=l;f;f=Gr(f))p++;for(f=0,h=A;h;h=Gr(h))f++;for(;0<p-f;)u=Gr(u),p--;for(;0<f-p;)A=Gr(A),f--;for(;p--;){if(u===A||null!==A&&u===A.alternate)break e;u=Gr(u),A=Gr(A)}u=null}else u=null;null!==l&&Qr(a,s,l,u,!1),null!==c&&null!==d&&Qr(a,d,c,u,!0)}if("select"===(l=(s=r?vo(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=Ht;else if(qt(s))if(Zt)g=ar;else{g=or;var m=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=ir);switch(g&&(g=g(e,r))?Yt(a,g,t,o):(m&&m(e,s,r),"focusout"===e&&(m=s._wrapperState)&&m.controlled&&"number"===s.type&&ee(s,"number",s.value)),m=r?vo(r):window,e){case"focusin":(qt(m)||"true"===m.contentEditable)&&(gr=m,mr=r,br=null);break;case"focusout":br=mr=gr=null;break;case"mousedown":xr=!0;break;case"contextmenu":case"mouseup":case"dragend":xr=!1,yr(a,t,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":yr(a,t,o)}var b;if(Pt)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else $t?Ut(e,t)&&(x="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(x="onCompositionStart");x&&(Lt&&"ko"!==t.locale&&($t||"onCompositionStart"!==x?"onCompositionEnd"===x&&$t&&(b=nt()):(Jn="value"in(Xn=o)?Xn.value:Xn.textContent,$t=!0)),0<(m=Wr(r,x)).length&&(x=new yt(x,e,null,t,o),a.push({event:x,listeners:m}),(b||null!==(b=Kt(t)))&&(x.data=b))),(b=Rt?function(e,n){switch(e){case"compositionend":return Kt(n);case"keypress":return 32!==n.which?null:(Mt=!0,Dt);case"textInput":return(e=n.data)===Dt&&Mt?null:e;default:return null}}(e,t):function(e,n){if($t)return"compositionend"===e||!Pt&&Ut(e,n)?(e=nt(),et=Jn=Xn=null,$t=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Lt&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Wr(r,"onBeforeInput")).length&&(o=new yt("onBeforeInput","beforeinput",null,t,o),a.push({event:o,listeners:r}),o.data=b)}Dr(a,n)})}function Yr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Wr(e,n){for(var t=n+"Capture",r=[];null!==e;){var o=e,i=o.stateNode;5===o.tag&&null!==i&&(o=i,null!=(i=ze(e,t))&&r.unshift(Yr(e,i,o)),null!=(i=ze(e,n))&&r.push(Yr(e,i,o))),e=e.return}return r}function Gr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qr(e,n,t,r,o){for(var i=n._reactName,a=[];null!==t&&t!==r;){var s=t,l=s.alternate,c=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==c&&(s=c,o?null!=(l=ze(t,i))&&a.unshift(Yr(t,l,s)):o||null!=(l=ze(t,i))&&a.push(Yr(t,l,s))),t=t.return}0!==a.length&&e.push({event:n,listeners:a})}var Vr=/\r\n?/g,Hr=/\u0000|\uFFFD/g;function Zr(e){return("string"==typeof e?e:""+e).replace(Vr,"\n").replace(Hr,"")}function Xr(e,n,t){if(n=Zr(n),Zr(e)!==n&&t)throw Error(i(425))}function Jr(){}var eo=null,no=null;function to(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ro="function"==typeof setTimeout?setTimeout:void 0,oo="function"==typeof clearTimeout?clearTimeout:void 0,io="function"==typeof Promise?Promise:void 0,ao="function"==typeof queueMicrotask?queueMicrotask:void 0!==io?function(e){return io.resolve(null).then(e).catch(so)}:ro;function so(e){setTimeout(function(){throw e})}function lo(e,n){var t=n,r=0;do{var o=t.nextSibling;if(e.removeChild(t),o&&8===o.nodeType)if("/$"===(t=o.data)){if(0===r)return e.removeChild(o),void Fn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=o}while(t);Fn(n)}function co(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function uo(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var Ao=Math.random().toString(36).slice(2),fo="__reactFiber$"+Ao,po="__reactProps$"+Ao,ho="__reactContainer$"+Ao,go="__reactEvents$"+Ao,mo="__reactListeners$"+Ao,bo="__reactHandles$"+Ao;function xo(e){var n=e[fo];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ho]||t[fo]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=uo(e);null!==e;){if(t=e[fo])return t;e=uo(e)}return n}t=(e=t).parentNode}return null}function yo(e){return!(e=e[fo]||e[ho])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function Co(e){return e[po]||null}var Eo=[],Bo=-1;function wo(e){return{current:e}}function ko(e){0>Bo||(e.current=Eo[Bo],Eo[Bo]=null,Bo--)}function So(e,n){Bo++,Eo[Bo]=e.current,e.current=n}var jo={},_o=wo(jo),No=wo(!1),To=jo;function zo(e,n){var t=e.type.contextTypes;if(!t)return jo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in t)i[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=i),i}function Oo(e){return null!=e.childContextTypes}function Po(){ko(No),ko(_o)}function Io(e,n,t){if(_o.current!==jo)throw Error(i(168));So(_o,n),So(No,t)}function Ro(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var o in r=r.getChildContext())if(!(o in n))throw Error(i(108,F(e)||"Unknown",o));return L({},t,r)}function Lo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||jo,To=_o.current,So(_o,e),So(No,No.current),!0}function Do(e,n,t){var r=e.stateNode;if(!r)throw Error(i(169));t?(e=Ro(e,n,To),r.__reactInternalMemoizedMergedChildContext=e,ko(No),ko(_o),So(_o,e)):ko(No),So(No,t)}var Mo=null,Uo=!1,Ko=!1;function $o(e){null===Mo?Mo=[e]:Mo.push(e)}function Fo(){if(!Ko&&null!==Mo){Ko=!0;var e=0,n=yn;try{var t=Mo;for(yn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Mo=null,Uo=!1}catch(n){throw null!==Mo&&(Mo=Mo.slice(e+1)),Ge(Je,Fo),n}finally{yn=n,Ko=!1}}return null}var qo=[],Yo=0,Wo=null,Go=0,Qo=[],Vo=0,Ho=null,Zo=1,Xo="";function Jo(e,n){qo[Yo++]=Go,qo[Yo++]=Wo,Wo=e,Go=n}function ei(e,n,t){Qo[Vo++]=Zo,Qo[Vo++]=Xo,Qo[Vo++]=Ho,Ho=e;var r=Zo;e=Xo;var o=32-sn(r)-1;r&=~(1<<o),t+=1;var i=32-sn(n)+o;if(30<i){var a=o-o%5;i=(r&(1<<a)-1).toString(32),r>>=a,o-=a,Zo=1<<32-sn(n)+o|t<<o|r,Xo=i+e}else Zo=1<<i|t<<o|r,Xo=e}function ni(e){null!==e.return&&(Jo(e,1),ei(e,1,0))}function ti(e){for(;e===Wo;)Wo=qo[--Yo],qo[Yo]=null,Go=qo[--Yo],qo[Yo]=null;for(;e===Ho;)Ho=Qo[--Vo],Qo[Vo]=null,Xo=Qo[--Vo],Qo[Vo]=null,Zo=Qo[--Vo],Qo[Vo]=null}var ri=null,oi=null,ii=!1,ai=null;function si(e,n){var t=Tc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function li(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ri=e,oi=co(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ri=e,oi=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Ho?{id:Zo,overflow:Xo}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Tc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ri=e,oi=null,!0);default:return!1}}function ci(e){return!(!(1&e.mode)||128&e.flags)}function ui(e){if(ii){var n=oi;if(n){var t=n;if(!li(e,n)){if(ci(e))throw Error(i(418));n=co(t.nextSibling);var r=ri;n&&li(e,n)?si(r,t):(e.flags=-4097&e.flags|2,ii=!1,ri=e)}}else{if(ci(e))throw Error(i(418));e.flags=-4097&e.flags|2,ii=!1,ri=e}}}function di(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ri=e}function Ai(e){if(e!==ri)return!1;if(!ii)return di(e),ii=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!to(e.type,e.memoizedProps)),n&&(n=oi)){if(ci(e))throw fi(),Error(i(418));for(;n;)si(e,n),n=co(n.nextSibling)}if(di(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){oi=co(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}oi=null}}else oi=ri?co(e.stateNode.nextSibling):null;return!0}function fi(){for(var e=oi;e;)e=co(e.nextSibling)}function pi(){oi=ri=null,ii=!1}function hi(e){null===ai?ai=[e]:ai.push(e)}var gi=y.ReactCurrentBatchConfig;function mi(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,e));var o=r,a=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===a?n.ref:(n=function(e){var n=o.refs;null===e?delete n[a]:n[a]=e},n._stringRef=a,n)}if("string"!=typeof e)throw Error(i(284));if(!t._owner)throw Error(i(290,e))}return e}function bi(e,n){throw e=Object.prototype.toString.call(n),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function xi(e){return(0,e._init)(e._payload)}function yi(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Oc(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function s(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,t,r){return null===n||6!==n.tag?((n=Lc(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){var i=t.type;return i===E?d(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===i||"object"==typeof i&&null!==i&&i.$$typeof===z&&xi(i)===n.type)?((r=o(n,t.props)).ref=mi(e,n,t),r.return=e,r):((r=Pc(t.type,t.key,t.props,null,e.mode,r)).ref=mi(e,n,t),r.return=e,r)}function u(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Dc(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function d(e,n,t,r,i){return null===n||7!==n.tag?((n=Ic(t,e.mode,r,i)).return=e,n):((n=o(n,t)).return=e,n)}function A(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Lc(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case v:return(t=Pc(n.type,n.key,n.props,null,e.mode,t)).ref=mi(e,null,n),t.return=e,t;case C:return(n=Dc(n,e.mode,t)).return=e,n;case z:return A(e,(0,n._init)(n._payload),t)}if(ne(n)||I(n))return(n=Ic(n,e.mode,t,null)).return=e,n;bi(e,n)}return null}function f(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==o?null:l(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case v:return t.key===o?c(e,n,t,r):null;case C:return t.key===o?u(e,n,t,r):null;case z:return f(e,n,(o=t._init)(t._payload),r)}if(ne(t)||I(t))return null!==o?null:d(e,n,t,r,null);bi(e,t)}return null}function p(e,n,t,r,o){if("string"==typeof r&&""!==r||"number"==typeof r)return l(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case v:return c(n,e=e.get(null===r.key?t:r.key)||null,r,o);case C:return u(n,e=e.get(null===r.key?t:r.key)||null,r,o);case z:return p(e,n,t,(0,r._init)(r._payload),o)}if(ne(r)||I(r))return d(n,e=e.get(t)||null,r,o,null);bi(n,r)}return null}function h(o,i,s,l){for(var c=null,u=null,d=i,h=i=0,g=null;null!==d&&h<s.length;h++){d.index>h?(g=d,d=null):g=d.sibling;var m=f(o,d,s[h],l);if(null===m){null===d&&(d=g);break}e&&d&&null===m.alternate&&n(o,d),i=a(m,i,h),null===u?c=m:u.sibling=m,u=m,d=g}if(h===s.length)return t(o,d),ii&&Jo(o,h),c;if(null===d){for(;h<s.length;h++)null!==(d=A(o,s[h],l))&&(i=a(d,i,h),null===u?c=d:u.sibling=d,u=d);return ii&&Jo(o,h),c}for(d=r(o,d);h<s.length;h++)null!==(g=p(d,o,h,s[h],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?h:g.key),i=a(g,i,h),null===u?c=g:u.sibling=g,u=g);return e&&d.forEach(function(e){return n(o,e)}),ii&&Jo(o,h),c}function g(o,s,l,c){var u=I(l);if("function"!=typeof u)throw Error(i(150));if(null==(l=u.call(l)))throw Error(i(151));for(var d=u=null,h=s,g=s=0,m=null,b=l.next();null!==h&&!b.done;g++,b=l.next()){h.index>g?(m=h,h=null):m=h.sibling;var x=f(o,h,b.value,c);if(null===x){null===h&&(h=m);break}e&&h&&null===x.alternate&&n(o,h),s=a(x,s,g),null===d?u=x:d.sibling=x,d=x,h=m}if(b.done)return t(o,h),ii&&Jo(o,g),u;if(null===h){for(;!b.done;g++,b=l.next())null!==(b=A(o,b.value,c))&&(s=a(b,s,g),null===d?u=b:d.sibling=b,d=b);return ii&&Jo(o,g),u}for(h=r(o,h);!b.done;g++,b=l.next())null!==(b=p(h,o,g,b.value,c))&&(e&&null!==b.alternate&&h.delete(null===b.key?g:b.key),s=a(b,s,g),null===d?u=b:d.sibling=b,d=b);return e&&h.forEach(function(e){return n(o,e)}),ii&&Jo(o,g),u}return function e(r,i,a,l){if("object"==typeof a&&null!==a&&a.type===E&&null===a.key&&(a=a.props.children),"object"==typeof a&&null!==a){switch(a.$$typeof){case v:e:{for(var c=a.key,u=i;null!==u;){if(u.key===c){if((c=a.type)===E){if(7===u.tag){t(r,u.sibling),(i=o(u,a.props.children)).return=r,r=i;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===z&&xi(c)===u.type){t(r,u.sibling),(i=o(u,a.props)).ref=mi(r,u,a),i.return=r,r=i;break e}t(r,u);break}n(r,u),u=u.sibling}a.type===E?((i=Ic(a.props.children,r.mode,l,a.key)).return=r,r=i):((l=Pc(a.type,a.key,a.props,null,r.mode,l)).ref=mi(r,i,a),l.return=r,r=l)}return s(r);case C:e:{for(u=a.key;null!==i;){if(i.key===u){if(4===i.tag&&i.stateNode.containerInfo===a.containerInfo&&i.stateNode.implementation===a.implementation){t(r,i.sibling),(i=o(i,a.children||[])).return=r,r=i;break e}t(r,i);break}n(r,i),i=i.sibling}(i=Dc(a,r.mode,l)).return=r,r=i}return s(r);case z:return e(r,i,(u=a._init)(a._payload),l)}if(ne(a))return h(r,i,a,l);if(I(a))return g(r,i,a,l);bi(r,a)}return"string"==typeof a&&""!==a||"number"==typeof a?(a=""+a,null!==i&&6===i.tag?(t(r,i.sibling),(i=o(i,a)).return=r,r=i):(t(r,i),(i=Lc(a,r.mode,l)).return=r,r=i),s(r)):t(r,i)}}var vi=yi(!0),Ci=yi(!1),Ei=wo(null),Bi=null,wi=null,ki=null;function Si(){ki=wi=Bi=null}function ji(e){var n=Ei.current;ko(Ei),e._currentValue=n}function _i(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Ni(e,n){Bi=e,ki=wi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(xs=!0),e.firstContext=null)}function Ti(e){var n=e._currentValue;if(ki!==e)if(e={context:e,memoizedValue:n,next:null},null===wi){if(null===Bi)throw Error(i(308));wi=e,Bi.dependencies={lanes:0,firstContext:e}}else wi=wi.next=e;return n}var zi=null;function Oi(e){null===zi?zi=[e]:zi.push(e)}function Pi(e,n,t,r){var o=n.interleaved;return null===o?(t.next=t,Oi(n)):(t.next=o.next,o.next=t),n.interleaved=t,Ii(e,r)}function Ii(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Ri=!1;function Li(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Di(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Mi(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Ui(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&jl){var o=r.pending;return null===o?n.next=n:(n.next=o.next,o.next=n),r.pending=n,Ii(e,t)}return null===(o=r.interleaved)?(n.next=n,Oi(r)):(n.next=o.next,o.next=n),r.interleaved=n,Ii(e,t)}function Ki(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,xn(e,t)}}function $i(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,i=null;if(null!==(t=t.firstBaseUpdate)){do{var a={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===i?o=i=a:i=i.next=a,t=t.next}while(null!==t);null===i?o=i=n:i=i.next=n}else o=i=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Fi(e,n,t,r){var o=e.updateQueue;Ri=!1;var i=o.firstBaseUpdate,a=o.lastBaseUpdate,s=o.shared.pending;if(null!==s){o.shared.pending=null;var l=s,c=l.next;l.next=null,null===a?i=c:a.next=c,a=l;var u=e.alternate;null!==u&&(s=(u=u.updateQueue).lastBaseUpdate)!==a&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l)}if(null!==i){var d=o.baseState;for(a=0,u=c=l=null,s=i;;){var A=s.lane,f=s.eventTime;if((r&A)===A){null!==u&&(u=u.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var p=e,h=s;switch(A=n,f=t,h.tag){case 1:if("function"==typeof(p=h.payload)){d=p.call(f,d,A);break e}d=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null==(A="function"==typeof(p=h.payload)?p.call(f,d,A):p))break e;d=L({},d,A);break e;case 2:Ri=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(A=o.effects)?o.effects=[s]:A.push(s))}else f={eventTime:f,lane:A,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=f,l=d):u=u.next=f,a|=A;if(null===(s=s.next)){if(null===(s=o.shared.pending))break;s=(A=s).next,A.next=null,o.lastBaseUpdate=A,o.shared.pending=null}}if(null===u&&(l=d),o.baseState=l,o.firstBaseUpdate=c,o.lastBaseUpdate=u,null!==(n=o.shared.interleaved)){o=n;do{a|=o.lane,o=o.next}while(o!==n)}else null===i&&(o.shared.lanes=0);Rl|=a,e.lanes=a,e.memoizedState=d}}function qi(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!=typeof o)throw Error(i(191,o));o.call(r)}}}var Yi={},Wi=wo(Yi),Gi=wo(Yi),Qi=wo(Yi);function Vi(e){if(e===Yi)throw Error(i(174));return e}function Hi(e,n){switch(So(Qi,n),So(Gi,e),So(Wi,Yi),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}ko(Wi),So(Wi,n)}function Zi(){ko(Wi),ko(Gi),ko(Qi)}function Xi(e){Vi(Qi.current);var n=Vi(Wi.current),t=le(n,e.type);n!==t&&(So(Gi,e),So(Wi,t))}function Ji(e){Gi.current===e&&(ko(Wi),ko(Gi))}var ea=wo(0);function na(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(128&n.flags)return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ta=[];function ra(){for(var e=0;e<ta.length;e++)ta[e]._workInProgressVersionPrimary=null;ta.length=0}var oa=y.ReactCurrentDispatcher,ia=y.ReactCurrentBatchConfig,aa=0,sa=null,la=null,ca=null,ua=!1,da=!1,Aa=0,fa=0;function pa(){throw Error(i(321))}function ha(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!sr(e[t],n[t]))return!1;return!0}function ga(e,n,t,r,o,a){if(aa=a,sa=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,oa.current=null===e||null===e.memoizedState?Ja:es,e=t(r,o),da){a=0;do{if(da=!1,Aa=0,25<=a)throw Error(i(301));a+=1,ca=la=null,n.updateQueue=null,oa.current=ns,e=t(r,o)}while(da)}if(oa.current=Xa,n=null!==la&&null!==la.next,aa=0,ca=la=sa=null,ua=!1,n)throw Error(i(300));return e}function ma(){var e=0!==Aa;return Aa=0,e}function ba(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ca?sa.memoizedState=ca=e:ca=ca.next=e,ca}function xa(){if(null===la){var e=sa.alternate;e=null!==e?e.memoizedState:null}else e=la.next;var n=null===ca?sa.memoizedState:ca.next;if(null!==n)ca=n,la=e;else{if(null===e)throw Error(i(310));e={memoizedState:(la=e).memoizedState,baseState:la.baseState,baseQueue:la.baseQueue,queue:la.queue,next:null},null===ca?sa.memoizedState=ca=e:ca=ca.next=e}return ca}function ya(e,n){return"function"==typeof n?n(e):n}function va(e){var n=xa(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=la,o=r.baseQueue,a=t.pending;if(null!==a){if(null!==o){var s=o.next;o.next=a.next,a.next=s}r.baseQueue=o=a,t.pending=null}if(null!==o){a=o.next,r=r.baseState;var l=s=null,c=null,u=a;do{var d=u.lane;if((aa&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var A={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=A,s=r):c=c.next=A,sa.lanes|=d,Rl|=d}u=u.next}while(null!==u&&u!==a);null===c?s=r:c.next=l,sr(r,n.memoizedState)||(xs=!0),n.memoizedState=r,n.baseState=s,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){o=e;do{a=o.lane,sa.lanes|=a,Rl|=a,o=o.next}while(o!==e)}else null===o&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ca(e){var n=xa(),t=n.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,a=n.memoizedState;if(null!==o){t.pending=null;var s=o=o.next;do{a=e(a,s.action),s=s.next}while(s!==o);sr(a,n.memoizedState)||(xs=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function Ea(){}function Ba(e,n){var t=sa,r=xa(),o=n(),a=!sr(r.memoizedState,o);if(a&&(r.memoizedState=o,xs=!0),r=r.queue,Ra(Sa.bind(null,t,r,e),[e]),r.getSnapshot!==n||a||null!==ca&&1&ca.memoizedState.tag){if(t.flags|=2048,Ta(9,ka.bind(null,t,r,o,n),void 0,null),null===_l)throw Error(i(349));30&aa||wa(t,n,o)}return o}function wa(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=sa.updateQueue)?(n={lastEffect:null,stores:null},sa.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function ka(e,n,t,r){n.value=t,n.getSnapshot=r,ja(n)&&_a(e)}function Sa(e,n,t){return t(function(){ja(n)&&_a(e)})}function ja(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!sr(e,t)}catch(e){return!0}}function _a(e){var n=Ii(e,1);null!==n&&tc(n,e,1,-1)}function Na(e){var n=ba();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ya,lastRenderedState:e},n.queue=e,e=e.dispatch=Qa.bind(null,sa,e),[n.memoizedState,e]}function Ta(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=sa.updateQueue)?(n={lastEffect:null,stores:null},sa.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function za(){return xa().memoizedState}function Oa(e,n,t,r){var o=ba();sa.flags|=e,o.memoizedState=Ta(1|n,t,void 0,void 0===r?null:r)}function Pa(e,n,t,r){var o=xa();r=void 0===r?null:r;var i=void 0;if(null!==la){var a=la.memoizedState;if(i=a.destroy,null!==r&&ha(r,a.deps))return void(o.memoizedState=Ta(n,t,i,r))}sa.flags|=e,o.memoizedState=Ta(1|n,t,i,r)}function Ia(e,n){return Oa(8390656,8,e,n)}function Ra(e,n){return Pa(2048,8,e,n)}function La(e,n){return Pa(4,2,e,n)}function Da(e,n){return Pa(4,4,e,n)}function Ma(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Ua(e,n,t){return t=null!=t?t.concat([e]):null,Pa(4,4,Ma.bind(null,n,e),t)}function Ka(){}function $a(e,n){var t=xa();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ha(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Fa(e,n){var t=xa();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ha(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function qa(e,n,t){return 21&aa?(sr(t,n)||(t=gn(),sa.lanes|=t,Rl|=t,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,xs=!0),e.memoizedState=t)}function Ya(e,n){var t=yn;yn=0!==t&&4>t?t:4,e(!0);var r=ia.transition;ia.transition={};try{e(!1),n()}finally{yn=t,ia.transition=r}}function Wa(){return xa().memoizedState}function Ga(e,n,t){var r=nc(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},Va(e)?Ha(n,t):null!==(t=Pi(e,n,t,r))&&(tc(t,e,r,ec()),Za(t,n,r))}function Qa(e,n,t){var r=nc(e),o={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(Va(e))Ha(n,o);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=n.lastRenderedReducer))try{var a=n.lastRenderedState,s=i(a,t);if(o.hasEagerState=!0,o.eagerState=s,sr(s,a)){var l=n.interleaved;return null===l?(o.next=o,Oi(n)):(o.next=l.next,l.next=o),void(n.interleaved=o)}}catch(e){}null!==(t=Pi(e,n,o,r))&&(tc(t,e,r,o=ec()),Za(t,n,r))}}function Va(e){var n=e.alternate;return e===sa||null!==n&&n===sa}function Ha(e,n){da=ua=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function Za(e,n,t){if(4194240&t){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,xn(e,t)}}var Xa={readContext:Ti,useCallback:pa,useContext:pa,useEffect:pa,useImperativeHandle:pa,useInsertionEffect:pa,useLayoutEffect:pa,useMemo:pa,useReducer:pa,useRef:pa,useState:pa,useDebugValue:pa,useDeferredValue:pa,useTransition:pa,useMutableSource:pa,useSyncExternalStore:pa,useId:pa,unstable_isNewReconciler:!1},Ja={readContext:Ti,useCallback:function(e,n){return ba().memoizedState=[e,void 0===n?null:n],e},useContext:Ti,useEffect:Ia,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Oa(4194308,4,Ma.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Oa(4194308,4,e,n)},useInsertionEffect:function(e,n){return Oa(4,2,e,n)},useMemo:function(e,n){var t=ba();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=ba();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=Ga.bind(null,sa,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},ba().memoizedState=e},useState:Na,useDebugValue:Ka,useDeferredValue:function(e){return ba().memoizedState=e},useTransition:function(){var e=Na(!1),n=e[0];return e=Ya.bind(null,e[1]),ba().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=sa,o=ba();if(ii){if(void 0===t)throw Error(i(407));t=t()}else{if(t=n(),null===_l)throw Error(i(349));30&aa||wa(r,n,t)}o.memoizedState=t;var a={value:t,getSnapshot:n};return o.queue=a,Ia(Sa.bind(null,r,a,e),[e]),r.flags|=2048,Ta(9,ka.bind(null,r,a,t,n),void 0,null),t},useId:function(){var e=ba(),n=_l.identifierPrefix;if(ii){var t=Xo;n=":"+n+"R"+(t=(Zo&~(1<<32-sn(Zo)-1)).toString(32)+t),0<(t=Aa++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=fa++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},es={readContext:Ti,useCallback:$a,useContext:Ti,useEffect:Ra,useImperativeHandle:Ua,useInsertionEffect:La,useLayoutEffect:Da,useMemo:Fa,useReducer:va,useRef:za,useState:function(){return va(ya)},useDebugValue:Ka,useDeferredValue:function(e){return qa(xa(),la.memoizedState,e)},useTransition:function(){return[va(ya)[0],xa().memoizedState]},useMutableSource:Ea,useSyncExternalStore:Ba,useId:Wa,unstable_isNewReconciler:!1},ns={readContext:Ti,useCallback:$a,useContext:Ti,useEffect:Ra,useImperativeHandle:Ua,useInsertionEffect:La,useLayoutEffect:Da,useMemo:Fa,useReducer:Ca,useRef:za,useState:function(){return Ca(ya)},useDebugValue:Ka,useDeferredValue:function(e){var n=xa();return null===la?n.memoizedState=e:qa(n,la.memoizedState,e)},useTransition:function(){return[Ca(ya)[0],xa().memoizedState]},useMutableSource:Ea,useSyncExternalStore:Ba,useId:Wa,unstable_isNewReconciler:!1};function ts(e,n){if(e&&e.defaultProps){for(var t in n=L({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}function rs(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:L({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var os={isMounted:function(e){return!!(e=e._reactInternals)&&$e(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ec(),o=nc(e),i=Mi(r,o);i.payload=n,null!=t&&(i.callback=t),null!==(n=Ui(e,i,o))&&(tc(n,e,o,r),Ki(n,e,o))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ec(),o=nc(e),i=Mi(r,o);i.tag=1,i.payload=n,null!=t&&(i.callback=t),null!==(n=Ui(e,i,o))&&(tc(n,e,o,r),Ki(n,e,o))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ec(),r=nc(e),o=Mi(t,r);o.tag=2,null!=n&&(o.callback=n),null!==(n=Ui(e,o,r))&&(tc(n,e,r,t),Ki(n,e,r))}};function is(e,n,t,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(n.prototype&&n.prototype.isPureReactComponent&&lr(t,r)&&lr(o,i))}function as(e,n,t){var r=!1,o=jo,i=n.contextType;return"object"==typeof i&&null!==i?i=Ti(i):(o=Oo(n)?To:_o.current,i=(r=null!=(r=n.contextTypes))?zo(e,o):jo),n=new n(t,i),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=os,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),n}function ss(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&os.enqueueReplaceState(n,n.state,null)}function ls(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs={},Li(e);var i=n.contextType;"object"==typeof i&&null!==i?o.context=Ti(i):(i=Oo(n)?To:_o.current,o.context=zo(e,i)),o.state=e.memoizedState,"function"==typeof(i=n.getDerivedStateFromProps)&&(rs(e,n,i,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&os.enqueueReplaceState(o,o.state,null),Fi(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function cs(e,n){try{var t="",r=n;do{t+=K(r),r=r.return}while(r);var o=t}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:o,digest:null}}function us(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function ds(e,n){try{console.error(n.value)}catch(e){setTimeout(function(){throw e})}}var As="function"==typeof WeakMap?WeakMap:Map;function fs(e,n,t){(t=Mi(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){ql||(ql=!0,Yl=r),ds(0,n)},t}function ps(e,n,t){(t=Mi(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return r(o)},t.callback=function(){ds(0,n)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(t.callback=function(){ds(0,n),"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function hs(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new As;var o=new Set;r.set(n,o)}else void 0===(o=r.get(n))&&(o=new Set,r.set(n,o));o.has(t)||(o.add(t),e=wc.bind(null,e,n,t),n.then(e,e))}function gs(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function ms(e,n,t,r,o){return 1&e.mode?(e.flags|=65536,e.lanes=o,e):(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Mi(-1,1)).tag=2,Ui(t,n,1))),t.lanes|=1),e)}var bs=y.ReactCurrentOwner,xs=!1;function ys(e,n,t,r){n.child=null===e?Ci(n,null,t,r):vi(n,e.child,t,r)}function vs(e,n,t,r,o){t=t.render;var i=n.ref;return Ni(n,o),r=ga(e,n,t,r,i,o),t=ma(),null===e||xs?(ii&&t&&ni(n),n.flags|=1,ys(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,qs(e,n,o))}function Cs(e,n,t,r,o){if(null===e){var i=t.type;return"function"!=typeof i||zc(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Pc(t.type,null,r,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=i,Es(e,n,i,r,o))}if(i=e.child,0===(e.lanes&o)){var a=i.memoizedProps;if((t=null!==(t=t.compare)?t:lr)(a,r)&&e.ref===n.ref)return qs(e,n,o)}return n.flags|=1,(e=Oc(i,r)).ref=n.ref,e.return=n,n.child=e}function Es(e,n,t,r,o){if(null!==e){var i=e.memoizedProps;if(lr(i,r)&&e.ref===n.ref){if(xs=!1,n.pendingProps=r=i,0===(e.lanes&o))return n.lanes=e.lanes,qs(e,n,o);131072&e.flags&&(xs=!0)}}return ks(e,n,t,r,o)}function Bs(e,n,t){var r=n.pendingProps,o=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&n.mode){if(!(1073741824&t))return e=null!==i?i.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,So(Ol,zl),zl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==i?i.baseLanes:t,So(Ol,zl),zl|=r}else n.memoizedState={baseLanes:0,cachePool:null,transitions:null},So(Ol,zl),zl|=t;else null!==i?(r=i.baseLanes|t,n.memoizedState=null):r=t,So(Ol,zl),zl|=r;return ys(e,n,o,t),n.child}function ws(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function ks(e,n,t,r,o){var i=Oo(t)?To:_o.current;return i=zo(n,i),Ni(n,o),t=ga(e,n,t,r,i,o),r=ma(),null===e||xs?(ii&&r&&ni(n),n.flags|=1,ys(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,qs(e,n,o))}function Ss(e,n,t,r,o){if(Oo(t)){var i=!0;Lo(n)}else i=!1;if(Ni(n,o),null===n.stateNode)Fs(e,n),as(n,t,r),ls(n,t,r,o),r=!0;else if(null===e){var a=n.stateNode,s=n.memoizedProps;a.props=s;var l=a.context,c=t.contextType;c="object"==typeof c&&null!==c?Ti(c):zo(n,c=Oo(t)?To:_o.current);var u=t.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==r||l!==c)&&ss(n,a,r,c),Ri=!1;var A=n.memoizedState;a.state=A,Fi(n,r,a,o),l=n.memoizedState,s!==r||A!==l||No.current||Ri?("function"==typeof u&&(rs(n,t,u,r),l=n.memoizedState),(s=Ri||is(n,t,s,r,A,l,c))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(n.flags|=4194308)):("function"==typeof a.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=l),a.props=r,a.state=l,a.context=c,r=s):("function"==typeof a.componentDidMount&&(n.flags|=4194308),r=!1)}else{a=n.stateNode,Di(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:ts(n.type,s),a.props=c,d=n.pendingProps,A=a.context,l="object"==typeof(l=t.contextType)&&null!==l?Ti(l):zo(n,l=Oo(t)?To:_o.current);var f=t.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(s!==d||A!==l)&&ss(n,a,r,l),Ri=!1,A=n.memoizedState,a.state=A,Fi(n,r,a,o);var p=n.memoizedState;s!==d||A!==p||No.current||Ri?("function"==typeof f&&(rs(n,t,f,r),p=n.memoizedState),(c=Ri||is(n,t,c,r,A,p,l)||!1)?(u||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,l),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,l)),"function"==typeof a.componentDidUpdate&&(n.flags|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=p),a.props=r,a.state=p,a.context=l,r=c):("function"!=typeof a.componentDidUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=4),"function"!=typeof a.getSnapshotBeforeUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=1024),r=!1)}return js(e,n,t,r,i,o)}function js(e,n,t,r,o,i){ws(e,n);var a=!!(128&n.flags);if(!r&&!a)return o&&Do(n,t,!1),qs(e,n,i);r=n.stateNode,bs.current=n;var s=a&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&a?(n.child=vi(n,e.child,null,i),n.child=vi(n,null,s,i)):ys(e,n,s,i),n.memoizedState=r.state,o&&Do(n,t,!0),n.child}function _s(e){var n=e.stateNode;n.pendingContext?Io(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Io(0,n.context,!1),Hi(e,n.containerInfo)}function Ns(e,n,t,r,o){return pi(),hi(o),n.flags|=256,ys(e,n,t,r),n.child}var Ts,zs,Os,Ps,Is={dehydrated:null,treeContext:null,retryLane:0};function Rs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ls(e,n,t){var r,o=n.pendingProps,a=ea.current,s=!1,l=!!(128&n.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&!!(2&a)),r?(s=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),So(ea,1&a),null===e)return ui(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(1&n.mode?"$!"===e.data?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(l=o.children,e=o.fallback,s?(o=n.mode,s=n.child,l={mode:"hidden",children:l},1&o||null===s?s=Rc(l,o,0,null):(s.childLanes=0,s.pendingProps=l),e=Ic(e,o,t,null),s.return=n,e.return=n,s.sibling=e,n.child=s,n.child.memoizedState=Rs(t),n.memoizedState=Is,e):Ds(n,l));if(null!==(a=e.memoizedState)&&null!==(r=a.dehydrated))return function(e,n,t,r,o,a,s){if(t)return 256&n.flags?(n.flags&=-257,Ms(e,n,s,r=us(Error(i(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(a=r.fallback,o=n.mode,r=Rc({mode:"visible",children:r.children},o,0,null),(a=Ic(a,o,s,null)).flags|=2,r.return=n,a.return=n,r.sibling=a,n.child=r,1&n.mode&&vi(n,e.child,null,s),n.child.memoizedState=Rs(s),n.memoizedState=Is,a);if(!(1&n.mode))return Ms(e,n,s,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var l=r.dgst;return r=l,Ms(e,n,s,r=us(a=Error(i(419)),r,void 0))}if(l=0!==(s&e.childLanes),xs||l){if(null!==(r=_l)){switch(s&-s){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!==(o&(r.suspendedLanes|s))?0:o)&&o!==a.retryLane&&(a.retryLane=o,Ii(e,o),tc(r,e,o,-1))}return hc(),Ms(e,n,s,r=us(Error(i(421))))}return"$?"===o.data?(n.flags|=128,n.child=e.child,n=Sc.bind(null,e),o._reactRetry=n,null):(e=a.treeContext,oi=co(o.nextSibling),ri=n,ii=!0,ai=null,null!==e&&(Qo[Vo++]=Zo,Qo[Vo++]=Xo,Qo[Vo++]=Ho,Zo=e.id,Xo=e.overflow,Ho=n),(n=Ds(n,r.children)).flags|=4096,n)}(e,n,l,o,r,a,t);if(s){s=o.fallback,l=n.mode,r=(a=e.child).sibling;var c={mode:"hidden",children:o.children};return 1&l||n.child===a?(o=Oc(a,c)).subtreeFlags=14680064&a.subtreeFlags:((o=n.child).childLanes=0,o.pendingProps=c,n.deletions=null),null!==r?s=Oc(r,s):(s=Ic(s,l,t,null)).flags|=2,s.return=n,o.return=n,o.sibling=s,n.child=o,o=s,s=n.child,l=null===(l=e.child.memoizedState)?Rs(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~t,n.memoizedState=Is,o}return e=(s=e.child).sibling,o=Oc(s,{mode:"visible",children:o.children}),!(1&n.mode)&&(o.lanes=t),o.return=n,o.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=o,n.memoizedState=null,o}function Ds(e,n){return(n=Rc({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Ms(e,n,t,r){return null!==r&&hi(r),vi(n,e.child,null,t),(e=Ds(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Us(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),_i(e.return,n,t)}function Ks(e,n,t,r,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=o)}function $s(e,n,t){var r=n.pendingProps,o=r.revealOrder,i=r.tail;if(ys(e,n,r.children,t),2&(r=ea.current))r=1&r|2,n.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Us(e,t,n);else if(19===e.tag)Us(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(So(ea,r),1&n.mode)switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===na(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),Ks(n,!1,o,t,i);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===na(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}Ks(n,!0,t,null,i);break;case"together":Ks(n,!1,null,null,void 0);break;default:n.memoizedState=null}else n.memoizedState=null;return n.child}function Fs(e,n){!(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function qs(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Rl|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(i(153));if(null!==n.child){for(t=Oc(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Oc(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Ys(e,n){if(!ii)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ws(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Gs(e,n,t){var r=n.pendingProps;switch(ti(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ws(n),null;case 1:case 17:return Oo(n.type)&&Po(),Ws(n),null;case 3:return r=n.stateNode,Zi(),ko(No),ko(_o),ra(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ai(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&n.flags)||(n.flags|=1024,null!==ai&&(ac(ai),ai=null))),zs(e,n),Ws(n),null;case 5:Ji(n);var o=Vi(Qi.current);if(t=n.type,null!==e&&null!=n.stateNode)Os(e,n,t,r,o),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(i(166));return Ws(n),null}if(e=Vi(Wi.current),Ai(n)){r=n.stateNode,t=n.type;var a=n.memoizedProps;switch(r[fo]=n,r[po]=a,e=!!(1&n.mode),t){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(o=0;o<Ir.length;o++)Mr(Ir[o],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":H(r,a),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Mr("invalid",r);break;case"textarea":oe(r,a),Mr("invalid",r)}for(var l in be(t,a),o=null,a)if(a.hasOwnProperty(l)){var c=a[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==a.suppressHydrationWarning&&Xr(r.textContent,c,e),o=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==a.suppressHydrationWarning&&Xr(r.textContent,c,e),o=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Mr("scroll",r)}switch(t){case"input":W(r),J(r,a,!0);break;case"textarea":W(r),ae(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=Jr)}r=o,n.updateQueue=r,null!==r&&(n.flags|=4)}else{l=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(t,{is:r.is}):(e=l.createElement(t),"select"===t&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,t),e[fo]=n,e[po]=r,Ts(e,n,!1,!1),n.stateNode=e;e:{switch(l=xe(t,r),t){case"dialog":Mr("cancel",e),Mr("close",e),o=r;break;case"iframe":case"object":case"embed":Mr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Ir.length;o++)Mr(Ir[o],e);o=r;break;case"source":Mr("error",e),o=r;break;case"img":case"image":case"link":Mr("error",e),Mr("load",e),o=r;break;case"details":Mr("toggle",e),o=r;break;case"input":H(e,r),o=V(e,r),Mr("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=L({},r,{value:void 0}),Mr("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Mr("invalid",e)}for(a in be(t,o),c=o)if(c.hasOwnProperty(a)){var u=c[a];"style"===a?ge(e,u):"dangerouslySetInnerHTML"===a?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===a?"string"==typeof u?("textarea"!==t||""!==u)&&Ae(e,u):"number"==typeof u&&Ae(e,""+u):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(s.hasOwnProperty(a)?null!=u&&"onScroll"===a&&Mr("scroll",e):null!=u&&x(e,a,u,l))}switch(t){case"input":W(e),J(e,r,!1);break;case"textarea":W(e),ae(e);break;case"option":null!=r.value&&e.setAttribute("value",""+q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(a=r.value)?te(e,!!r.multiple,a,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Jr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Ws(n),null;case 6:if(e&&null!=n.stateNode)Ps(e,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(i(166));if(t=Vi(Qi.current),Vi(Wi.current),Ai(n)){if(r=n.stateNode,t=n.memoizedProps,r[fo]=n,(a=r.nodeValue!==t)&&null!==(e=ri))switch(e.tag){case 3:Xr(r.nodeValue,t,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,t,!!(1&e.mode))}a&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[fo]=n,n.stateNode=r}return Ws(n),null;case 13:if(ko(ea),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ii&&null!==oi&&1&n.mode&&!(128&n.flags))fi(),pi(),n.flags|=98560,a=!1;else if(a=Ai(n),null!==r&&null!==r.dehydrated){if(null===e){if(!a)throw Error(i(318));if(!(a=null!==(a=n.memoizedState)?a.dehydrated:null))throw Error(i(317));a[fo]=n}else pi(),!(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Ws(n),a=!1}else null!==ai&&(ac(ai),ai=null),a=!0;if(!a)return 65536&n.flags?n:null}return 128&n.flags?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,1&n.mode&&(null===e||1&ea.current?0===Pl&&(Pl=3):hc())),null!==n.updateQueue&&(n.flags|=4),Ws(n),null);case 4:return Zi(),zs(e,n),null===e&&$r(n.stateNode.containerInfo),Ws(n),null;case 10:return ji(n.type._context),Ws(n),null;case 19:if(ko(ea),null===(a=n.memoizedState))return Ws(n),null;if(r=!!(128&n.flags),null===(l=a.rendering))if(r)Ys(a,!1);else{if(0!==Pl||null!==e&&128&e.flags)for(e=n.child;null!==e;){if(null!==(l=na(e))){for(n.flags|=128,Ys(a,!1),null!==(r=l.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(a=t).flags&=14680066,null===(l=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=l.childLanes,a.lanes=l.lanes,a.child=l.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=l.memoizedProps,a.memoizedState=l.memoizedState,a.updateQueue=l.updateQueue,a.type=l.type,e=l.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return So(ea,1&ea.current|2),n.child}e=e.sibling}null!==a.tail&&Ze()>$l&&(n.flags|=128,r=!0,Ys(a,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=na(l))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Ys(a,!0),null===a.tail&&"hidden"===a.tailMode&&!l.alternate&&!ii)return Ws(n),null}else 2*Ze()-a.renderingStartTime>$l&&1073741824!==t&&(n.flags|=128,r=!0,Ys(a,!1),n.lanes=4194304);a.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=a.last)?t.sibling=l:n.child=l,a.last=l)}return null!==a.tail?(n=a.tail,a.rendering=n,a.tail=n.sibling,a.renderingStartTime=Ze(),n.sibling=null,t=ea.current,So(ea,r?1&t|2:1&t),n):(Ws(n),null);case 22:case 23:return dc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&1&n.mode?!!(1073741824&zl)&&(Ws(n),6&n.subtreeFlags&&(n.flags|=8192)):Ws(n),null;case 24:case 25:return null}throw Error(i(156,n.tag))}function Qs(e,n){switch(ti(n),n.tag){case 1:return Oo(n.type)&&Po(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return Zi(),ko(No),ko(_o),ra(),65536&(e=n.flags)&&!(128&e)?(n.flags=-65537&e|128,n):null;case 5:return Ji(n),null;case 13:if(ko(ea),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(i(340));pi()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return ko(ea),null;case 4:return Zi(),null;case 10:return ji(n.type._context),null;case 22:case 23:return dc(),null;default:return null}}Ts=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},zs=function(){},Os=function(e,n,t,r){var o=e.memoizedProps;if(o!==r){e=n.stateNode,Vi(Wi.current);var i,a=null;switch(t){case"input":o=V(e,o),r=V(e,r),a=[];break;case"select":o=L({},o,{value:void 0}),r=L({},r,{value:void 0}),a=[];break;case"textarea":o=re(e,o),r=re(e,r),a=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(u in be(t,r),t=null,o)if(!r.hasOwnProperty(u)&&o.hasOwnProperty(u)&&null!=o[u])if("style"===u){var l=o[u];for(i in l)l.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?a||(a=[]):(a=a||[]).push(u,null));for(u in r){var c=r[u];if(l=null!=o?o[u]:void 0,r.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(i in l)!l.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in c)c.hasOwnProperty(i)&&l[i]!==c[i]&&(t||(t={}),t[i]=c[i])}else t||(a||(a=[]),a.push(u,t)),t=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(a=a||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(a=a||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Mr("scroll",e),a||l===c||(a=[])):(a=a||[]).push(u,c))}t&&(a=a||[]).push("style",t);var u=a;(n.updateQueue=u)&&(n.flags|=4)}},Ps=function(e,n,t,r){t!==r&&(n.flags|=4)};var Vs=!1,Hs=!1,Zs="function"==typeof WeakSet?WeakSet:Set,Xs=null;function Js(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Bc(e,n,t)}else t.current=null}function el(e,n,t){try{t()}catch(t){Bc(e,n,t)}}var nl=!1;function tl(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var i=o.destroy;o.destroy=void 0,void 0!==i&&el(n,t,i)}o=o.next}while(o!==r)}}function rl(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function ol(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function il(e){var n=e.alternate;null!==n&&(e.alternate=null,il(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[fo],delete n[po],delete n[go],delete n[mo],delete n[bo]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function al(e){return 5===e.tag||3===e.tag||4===e.tag}function sl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||al(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ll(e,n,t),e=e.sibling;null!==e;)ll(e,n,t),e=e.sibling}function cl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cl(e,n,t),e=e.sibling;null!==e;)cl(e,n,t),e=e.sibling}var ul=null,dl=!1;function Al(e,n,t){for(t=t.child;null!==t;)fl(e,n,t),t=t.sibling}function fl(e,n,t){if(an&&"function"==typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(on,t)}catch(e){}switch(t.tag){case 5:Hs||Js(t,n);case 6:var r=ul,o=dl;ul=null,Al(e,n,t),dl=o,null!==(ul=r)&&(dl?(e=ul,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(dl?(e=ul,t=t.stateNode,8===e.nodeType?lo(e.parentNode,t):1===e.nodeType&&lo(e,t),Fn(e)):lo(ul,t.stateNode));break;case 4:r=ul,o=dl,ul=t.stateNode.containerInfo,dl=!0,Al(e,n,t),ul=r,dl=o;break;case 0:case 11:case 14:case 15:if(!Hs&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){o=r=r.next;do{var i=o,a=i.destroy;i=i.tag,void 0!==a&&(2&i||4&i)&&el(t,n,a),o=o.next}while(o!==r)}Al(e,n,t);break;case 1:if(!Hs&&(Js(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){Bc(t,n,e)}Al(e,n,t);break;case 21:Al(e,n,t);break;case 22:1&t.mode?(Hs=(r=Hs)||null!==t.memoizedState,Al(e,n,t),Hs=r):Al(e,n,t);break;default:Al(e,n,t)}}function pl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Zs),n.forEach(function(n){var r=jc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))})}}function hl(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var o=t[r];try{var a=e,s=n,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,dl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===ul)throw Error(i(160));fl(a,s,o),ul=null,dl=!1;var c=o.alternate;null!==c&&(c.return=null),o.return=null}catch(e){Bc(o,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)gl(n,e),n=n.sibling}function gl(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(hl(n,e),ml(e),4&r){try{tl(3,e,e.return),rl(3,e)}catch(n){Bc(e,e.return,n)}try{tl(5,e,e.return)}catch(n){Bc(e,e.return,n)}}break;case 1:hl(n,e),ml(e),512&r&&null!==t&&Js(t,t.return);break;case 5:if(hl(n,e),ml(e),512&r&&null!==t&&Js(t,t.return),32&e.flags){var o=e.stateNode;try{Ae(o,"")}catch(n){Bc(e,e.return,n)}}if(4&r&&null!=(o=e.stateNode)){var a=e.memoizedProps,s=null!==t?t.memoizedProps:a,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===a.type&&null!=a.name&&Z(o,a),xe(l,s);var u=xe(l,a);for(s=0;s<c.length;s+=2){var d=c[s],A=c[s+1];"style"===d?ge(o,A):"dangerouslySetInnerHTML"===d?de(o,A):"children"===d?Ae(o,A):x(o,d,A,u)}switch(l){case"input":X(o,a);break;case"textarea":ie(o,a);break;case"select":var f=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!a.multiple;var p=a.value;null!=p?te(o,!!a.multiple,p,!1):f!==!!a.multiple&&(null!=a.defaultValue?te(o,!!a.multiple,a.defaultValue,!0):te(o,!!a.multiple,a.multiple?[]:"",!1))}o[po]=a}catch(n){Bc(e,e.return,n)}}break;case 6:if(hl(n,e),ml(e),4&r){if(null===e.stateNode)throw Error(i(162));o=e.stateNode,a=e.memoizedProps;try{o.nodeValue=a}catch(n){Bc(e,e.return,n)}}break;case 3:if(hl(n,e),ml(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Fn(n.containerInfo)}catch(n){Bc(e,e.return,n)}break;case 4:default:hl(n,e),ml(e);break;case 13:hl(n,e),ml(e),8192&(o=e.child).flags&&(a=null!==o.memoizedState,o.stateNode.isHidden=a,!a||null!==o.alternate&&null!==o.alternate.memoizedState||(Kl=Ze())),4&r&&pl(e);break;case 22:if(d=null!==t&&null!==t.memoizedState,1&e.mode?(Hs=(u=Hs)||d,hl(n,e),Hs=u):hl(n,e),ml(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&1&e.mode)for(Xs=e,d=e.child;null!==d;){for(A=Xs=d;null!==Xs;){switch(p=(f=Xs).child,f.tag){case 0:case 11:case 14:case 15:tl(4,f,f.return);break;case 1:Js(f,f.return);var h=f.stateNode;if("function"==typeof h.componentWillUnmount){r=f,t=f.return;try{n=r,h.props=n.memoizedProps,h.state=n.memoizedState,h.componentWillUnmount()}catch(e){Bc(r,t,e)}}break;case 5:Js(f,f.return);break;case 22:if(null!==f.memoizedState){vl(A);continue}}null!==p?(p.return=f,Xs=p):vl(A)}d=d.sibling}e:for(d=null,A=e;;){if(5===A.tag){if(null===d){d=A;try{o=A.stateNode,u?"function"==typeof(a=o.style).setProperty?a.setProperty("display","none","important"):a.display="none":(l=A.stateNode,s=null!=(c=A.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=he("display",s))}catch(n){Bc(e,e.return,n)}}}else if(6===A.tag){if(null===d)try{A.stateNode.nodeValue=u?"":A.memoizedProps}catch(n){Bc(e,e.return,n)}}else if((22!==A.tag&&23!==A.tag||null===A.memoizedState||A===e)&&null!==A.child){A.child.return=A,A=A.child;continue}if(A===e)break e;for(;null===A.sibling;){if(null===A.return||A.return===e)break e;d===A&&(d=null),A=A.return}d===A&&(d=null),A.sibling.return=A.return,A=A.sibling}}break;case 19:hl(n,e),ml(e),4&r&&pl(e);case 21:}}function ml(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(al(t)){var r=t;break e}t=t.return}throw Error(i(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(Ae(o,""),r.flags&=-33),cl(e,sl(e),o);break;case 3:case 4:var a=r.stateNode.containerInfo;ll(e,sl(e),a);break;default:throw Error(i(161))}}catch(n){Bc(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function bl(e,n,t){Xs=e,xl(e,n,t)}function xl(e,n,t){for(var r=!!(1&e.mode);null!==Xs;){var o=Xs,i=o.child;if(22===o.tag&&r){var a=null!==o.memoizedState||Vs;if(!a){var s=o.alternate,l=null!==s&&null!==s.memoizedState||Hs;s=Vs;var c=Hs;if(Vs=a,(Hs=l)&&!c)for(Xs=o;null!==Xs;)l=(a=Xs).child,22===a.tag&&null!==a.memoizedState?Cl(o):null!==l?(l.return=a,Xs=l):Cl(o);for(;null!==i;)Xs=i,xl(i,n,t),i=i.sibling;Xs=o,Vs=s,Hs=c}yl(e)}else 8772&o.subtreeFlags&&null!==i?(i.return=o,Xs=i):yl(e)}}function yl(e){for(;null!==Xs;){var n=Xs;if(8772&n.flags){var t=n.alternate;try{if(8772&n.flags)switch(n.tag){case 0:case 11:case 15:Hs||rl(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Hs)if(null===t)r.componentDidMount();else{var o=n.elementType===n.type?t.memoizedProps:ts(n.type,t.memoizedProps);r.componentDidUpdate(o,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var a=n.updateQueue;null!==a&&qi(n,a,r);break;case 3:var s=n.updateQueue;if(null!==s){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}qi(n,s,t)}break;case 5:var l=n.stateNode;if(null===t&&4&n.flags){t=l;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var u=n.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var A=d.dehydrated;null!==A&&Fn(A)}}}break;default:throw Error(i(163))}Hs||512&n.flags&&ol(n)}catch(e){Bc(n,n.return,e)}}if(n===e){Xs=null;break}if(null!==(t=n.sibling)){t.return=n.return,Xs=t;break}Xs=n.return}}function vl(e){for(;null!==Xs;){var n=Xs;if(n===e){Xs=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Xs=t;break}Xs=n.return}}function Cl(e){for(;null!==Xs;){var n=Xs;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rl(4,n)}catch(e){Bc(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var o=n.return;try{r.componentDidMount()}catch(e){Bc(n,o,e)}}var i=n.return;try{ol(n)}catch(e){Bc(n,i,e)}break;case 5:var a=n.return;try{ol(n)}catch(e){Bc(n,a,e)}}}catch(e){Bc(n,n.return,e)}if(n===e){Xs=null;break}var s=n.sibling;if(null!==s){s.return=n.return,Xs=s;break}Xs=n.return}}var El,Bl=Math.ceil,wl=y.ReactCurrentDispatcher,kl=y.ReactCurrentOwner,Sl=y.ReactCurrentBatchConfig,jl=0,_l=null,Nl=null,Tl=0,zl=0,Ol=wo(0),Pl=0,Il=null,Rl=0,Ll=0,Dl=0,Ml=null,Ul=null,Kl=0,$l=1/0,Fl=null,ql=!1,Yl=null,Wl=null,Gl=!1,Ql=null,Vl=0,Hl=0,Zl=null,Xl=-1,Jl=0;function ec(){return 6&jl?Ze():-1!==Xl?Xl:Xl=Ze()}function nc(e){return 1&e.mode?2&jl&&0!==Tl?Tl&-Tl:null!==gi.transition?(0===Jl&&(Jl=gn()),Jl):0!==(e=yn)?e:e=void 0===(e=window.event)?16:Zn(e.type):1}function tc(e,n,t,r){if(50<Hl)throw Hl=0,Zl=null,Error(i(185));bn(e,t,r),2&jl&&e===_l||(e===_l&&(!(2&jl)&&(Ll|=t),4===Pl&&sc(e,Tl)),rc(e,r),1===t&&0===jl&&!(1&n.mode)&&($l=Ze()+500,Uo&&Fo()))}function rc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,i=e.pendingLanes;0<i;){var a=31-sn(i),s=1<<a,l=o[a];-1===l?0!==(s&t)&&0===(s&r)||(o[a]=pn(s,n)):l<=n&&(e.expiredLanes|=s),i&=~s}}(e,n);var r=fn(e,e===_l?Tl:0);if(0===r)null!==t&&Qe(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Qe(t),1===n)0===e.tag?function(e){Uo=!0,$o(e)}(lc.bind(null,e)):$o(lc.bind(null,e)),ao(function(){!(6&jl)&&Fo()}),t=null;else{switch(vn(r)){case 1:t=Je;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=_c(t,oc.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function oc(e,n){if(Xl=-1,Jl=0,6&jl)throw Error(i(327));var t=e.callbackNode;if(Cc()&&e.callbackNode!==t)return null;var r=fn(e,e===_l?Tl:0);if(0===r)return null;if(30&r||0!==(r&e.expiredLanes)||n)n=gc(e,r);else{n=r;var o=jl;jl|=2;var a=pc();for(_l===e&&Tl===n||(Fl=null,$l=Ze()+500,Ac(e,n));;)try{bc();break}catch(n){fc(e,n)}Si(),wl.current=a,jl=o,null!==Nl?n=0:(_l=null,Tl=0,n=Pl)}if(0!==n){if(2===n&&0!==(o=hn(e))&&(r=o,n=ic(e,o)),1===n)throw t=Il,Ac(e,0),sc(e,r),rc(e,Ze()),t;if(6===n)sc(e,r);else{if(o=e.current.alternate,!(30&r||function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var o=t[r],i=o.getSnapshot;o=o.value;try{if(!sr(i(),o))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(o)||(n=gc(e,r),2===n&&(a=hn(e),0!==a&&(r=a,n=ic(e,a))),1!==n)))throw t=Il,Ac(e,0),sc(e,r),rc(e,Ze()),t;switch(e.finishedWork=o,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:case 5:vc(e,Ul,Fl);break;case 3:if(sc(e,r),(130023424&r)===r&&10<(n=Kl+500-Ze())){if(0!==fn(e,0))break;if(((o=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(vc.bind(null,e,Ul,Fl),n);break}vc(e,Ul,Fl);break;case 4:if(sc(e,r),(4194240&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var s=31-sn(r);a=1<<s,(s=n[s])>o&&(o=s),r&=~a}if(r=o,10<(r=(120>(r=Ze()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Bl(r/1960))-r)){e.timeoutHandle=ro(vc.bind(null,e,Ul,Fl),r);break}vc(e,Ul,Fl);break;default:throw Error(i(329))}}}return rc(e,Ze()),e.callbackNode===t?oc.bind(null,e):null}function ic(e,n){var t=Ml;return e.current.memoizedState.isDehydrated&&(Ac(e,n).flags|=256),2!==(e=gc(e,n))&&(n=Ul,Ul=t,null!==n&&ac(n)),e}function ac(e){null===Ul?Ul=e:Ul.push.apply(Ul,e)}function sc(e,n){for(n&=~Dl,n&=~Ll,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-sn(n),r=1<<t;e[t]=-1,n&=~r}}function lc(e){if(6&jl)throw Error(i(327));Cc();var n=fn(e,0);if(!(1&n))return rc(e,Ze()),null;var t=gc(e,n);if(0!==e.tag&&2===t){var r=hn(e);0!==r&&(n=r,t=ic(e,r))}if(1===t)throw t=Il,Ac(e,0),sc(e,n),rc(e,Ze()),t;if(6===t)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,vc(e,Ul,Fl),rc(e,Ze()),null}function cc(e,n){var t=jl;jl|=1;try{return e(n)}finally{0===(jl=t)&&($l=Ze()+500,Uo&&Fo())}}function uc(e){null!==Ql&&0===Ql.tag&&!(6&jl)&&Cc();var n=jl;jl|=1;var t=Sl.transition,r=yn;try{if(Sl.transition=null,yn=1,e)return e()}finally{yn=r,Sl.transition=t,!(6&(jl=n))&&Fo()}}function dc(){zl=Ol.current,ko(Ol)}function Ac(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,oo(t)),null!==Nl)for(t=Nl.return;null!==t;){var r=t;switch(ti(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Po();break;case 3:Zi(),ko(No),ko(_o),ra();break;case 5:Ji(r);break;case 4:Zi();break;case 13:case 19:ko(ea);break;case 10:ji(r.type._context);break;case 22:case 23:dc()}t=t.return}if(_l=e,Nl=e=Oc(e.current,null),Tl=zl=n,Pl=0,Il=null,Dl=Ll=Rl=0,Ul=Ml=null,null!==zi){for(n=0;n<zi.length;n++)if(null!==(r=(t=zi[n]).interleaved)){t.interleaved=null;var o=r.next,i=t.pending;if(null!==i){var a=i.next;i.next=o,r.next=a}t.pending=r}zi=null}return e}function fc(e,n){for(;;){var t=Nl;try{if(Si(),oa.current=Xa,ua){for(var r=sa.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}ua=!1}if(aa=0,ca=la=sa=null,da=!1,Aa=0,kl.current=null,null===t||null===t.return){Pl=1,Il=n,Nl=null;break}e:{var a=e,s=t.return,l=t,c=n;if(n=Tl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=l,A=d.tag;if(!(1&d.mode||0!==A&&11!==A&&15!==A)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var p=gs(s);if(null!==p){p.flags&=-257,ms(p,s,l,0,n),1&p.mode&&hs(a,u,n),c=u;var h=(n=p).updateQueue;if(null===h){var g=new Set;g.add(c),n.updateQueue=g}else h.add(c);break e}if(!(1&n)){hs(a,u,n),hc();break e}c=Error(i(426))}else if(ii&&1&l.mode){var m=gs(s);if(null!==m){!(65536&m.flags)&&(m.flags|=256),ms(m,s,l,0,n),hi(cs(c,l));break e}}a=c=cs(c,l),4!==Pl&&(Pl=2),null===Ml?Ml=[a]:Ml.push(a),a=s;do{switch(a.tag){case 3:a.flags|=65536,n&=-n,a.lanes|=n,$i(a,fs(0,c,n));break e;case 1:l=c;var b=a.type,x=a.stateNode;if(!(128&a.flags||"function"!=typeof b.getDerivedStateFromError&&(null===x||"function"!=typeof x.componentDidCatch||null!==Wl&&Wl.has(x)))){a.flags|=65536,n&=-n,a.lanes|=n,$i(a,ps(a,l,n));break e}}a=a.return}while(null!==a)}yc(t)}catch(e){n=e,Nl===t&&null!==t&&(Nl=t=t.return);continue}break}}function pc(){var e=wl.current;return wl.current=Xa,null===e?Xa:e}function hc(){0!==Pl&&3!==Pl&&2!==Pl||(Pl=4),null===_l||!(268435455&Rl)&&!(268435455&Ll)||sc(_l,Tl)}function gc(e,n){var t=jl;jl|=2;var r=pc();for(_l===e&&Tl===n||(Fl=null,Ac(e,n));;)try{mc();break}catch(n){fc(e,n)}if(Si(),jl=t,wl.current=r,null!==Nl)throw Error(i(261));return _l=null,Tl=0,Pl}function mc(){for(;null!==Nl;)xc(Nl)}function bc(){for(;null!==Nl&&!Ve();)xc(Nl)}function xc(e){var n=El(e.alternate,e,zl);e.memoizedProps=e.pendingProps,null===n?yc(e):Nl=n,kl.current=null}function yc(e){var n=e;do{var t=n.alternate;if(e=n.return,32768&n.flags){if(null!==(t=Qs(t,n)))return t.flags&=32767,void(Nl=t);if(null===e)return Pl=6,void(Nl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(t=Gs(t,n,zl)))return void(Nl=t);if(null!==(n=n.sibling))return void(Nl=n);Nl=n=e}while(null!==n);0===Pl&&(Pl=5)}function vc(e,n,t){var r=yn,o=Sl.transition;try{Sl.transition=null,yn=1,function(e,n,t,r){do{Cc()}while(null!==Ql);if(6&jl)throw Error(i(327));t=e.finishedWork;var o=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var a=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var o=31-sn(t),i=1<<o;n[o]=0,r[o]=-1,e[o]=-1,t&=~i}}(e,a),e===_l&&(Nl=_l=null,Tl=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||Gl||(Gl=!0,_c(nn,function(){return Cc(),null})),a=!!(15990&t.flags),15990&t.subtreeFlags||a){a=Sl.transition,Sl.transition=null;var s=yn;yn=1;var l=jl;jl|=4,kl.current=null,function(e,n){if(eo=Yn,fr(e=Ar())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var o=r.anchorOffset,a=r.focusNode;r=r.focusOffset;try{t.nodeType,a.nodeType}catch(e){t=null;break e}var s=0,l=-1,c=-1,u=0,d=0,A=e,f=null;n:for(;;){for(var p;A!==t||0!==o&&3!==A.nodeType||(l=s+o),A!==a||0!==r&&3!==A.nodeType||(c=s+r),3===A.nodeType&&(s+=A.nodeValue.length),null!==(p=A.firstChild);)f=A,A=p;for(;;){if(A===e)break n;if(f===t&&++u===o&&(l=s),f===a&&++d===r&&(c=s),null!==(p=A.nextSibling))break;f=(A=f).parentNode}A=p}t=-1===l||-1===c?null:{start:l,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(no={focusedElem:e,selectionRange:t},Yn=!1,Xs=n;null!==Xs;)if(e=(n=Xs).child,1028&n.subtreeFlags&&null!==e)e.return=n,Xs=e;else for(;null!==Xs;){n=Xs;try{var h=n.alternate;if(1024&n.flags)switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,m=h.memoizedState,b=n.stateNode,x=b.getSnapshotBeforeUpdate(n.elementType===n.type?g:ts(n.type,g),m);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var y=n.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(i(163))}}catch(e){Bc(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Xs=e;break}Xs=n.return}h=nl,nl=!1}(e,t),gl(t,e),pr(no),Yn=!!eo,no=eo=null,e.current=t,bl(t,e,o),He(),jl=l,yn=s,Sl.transition=a}else e.current=t;if(Gl&&(Gl=!1,Ql=e,Vl=o),0===(a=e.pendingLanes)&&(Wl=null),function(e){if(an&&"function"==typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(on,e,void 0,!(128&~e.current.flags))}catch(e){}}(t.stateNode),rc(e,Ze()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((o=n[t]).value,{componentStack:o.stack,digest:o.digest});if(ql)throw ql=!1,e=Yl,Yl=null,e;!!(1&Vl)&&0!==e.tag&&Cc(),1&(a=e.pendingLanes)?e===Zl?Hl++:(Hl=0,Zl=e):Hl=0,Fo()}(e,n,t,r)}finally{Sl.transition=o,yn=r}return null}function Cc(){if(null!==Ql){var e=vn(Vl),n=Sl.transition,t=yn;try{if(Sl.transition=null,yn=16>e?16:e,null===Ql)var r=!1;else{if(e=Ql,Ql=null,Vl=0,6&jl)throw Error(i(331));var o=jl;for(jl|=4,Xs=e.current;null!==Xs;){var a=Xs,s=a.child;if(16&Xs.flags){var l=a.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(Xs=u;null!==Xs;){var d=Xs;switch(d.tag){case 0:case 11:case 15:tl(8,d,a)}var A=d.child;if(null!==A)A.return=d,Xs=A;else for(;null!==Xs;){var f=(d=Xs).sibling,p=d.return;if(il(d),d===u){Xs=null;break}if(null!==f){f.return=p,Xs=f;break}Xs=p}}}var h=a.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var m=g.sibling;g.sibling=null,g=m}while(null!==g)}}Xs=a}}if(2064&a.subtreeFlags&&null!==s)s.return=a,Xs=s;else e:for(;null!==Xs;){if(2048&(a=Xs).flags)switch(a.tag){case 0:case 11:case 15:tl(9,a,a.return)}var b=a.sibling;if(null!==b){b.return=a.return,Xs=b;break e}Xs=a.return}}var x=e.current;for(Xs=x;null!==Xs;){var y=(s=Xs).child;if(2064&s.subtreeFlags&&null!==y)y.return=s,Xs=y;else e:for(s=x;null!==Xs;){if(2048&(l=Xs).flags)try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(e){Bc(l,l.return,e)}if(l===s){Xs=null;break e}var v=l.sibling;if(null!==v){v.return=l.return,Xs=v;break e}Xs=l.return}}if(jl=o,Fo(),an&&"function"==typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(on,e)}catch(e){}r=!0}return r}finally{yn=t,Sl.transition=n}}return!1}function Ec(e,n,t){e=Ui(e,n=fs(0,n=cs(t,n),1),1),n=ec(),null!==e&&(bn(e,1,n),rc(e,n))}function Bc(e,n,t){if(3===e.tag)Ec(e,e,t);else for(;null!==n;){if(3===n.tag){Ec(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){n=Ui(n,e=ps(n,e=cs(t,e),1),1),e=ec(),null!==n&&(bn(n,1,e),rc(n,e));break}}n=n.return}}function wc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ec(),e.pingedLanes|=e.suspendedLanes&t,_l===e&&(Tl&t)===t&&(4===Pl||3===Pl&&(130023424&Tl)===Tl&&500>Ze()-Kl?Ac(e,0):Dl|=t),rc(e,n)}function kc(e,n){0===n&&(1&e.mode?(n=dn,!(130023424&(dn<<=1))&&(dn=4194304)):n=1);var t=ec();null!==(e=Ii(e,n))&&(bn(e,n,t),rc(e,t))}function Sc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),kc(e,t)}function jc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(t=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(n),kc(e,t)}function _c(e,n){return Ge(e,n)}function Nc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Tc(e,n,t,r){return new Nc(e,n,t,r)}function zc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Oc(e,n){var t=e.alternate;return null===t?((t=Tc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Pc(e,n,t,r,o,a){var s=2;if(r=e,"function"==typeof e)zc(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case E:return Ic(t.children,o,a,n);case B:s=8,o|=8;break;case w:return(e=Tc(12,t,n,2|o)).elementType=w,e.lanes=a,e;case _:return(e=Tc(13,t,n,o)).elementType=_,e.lanes=a,e;case N:return(e=Tc(19,t,n,o)).elementType=N,e.lanes=a,e;case O:return Rc(t,o,a,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:s=10;break e;case S:s=9;break e;case j:s=11;break e;case T:s=14;break e;case z:s=16,r=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(n=Tc(s,t,n,o)).elementType=e,n.type=r,n.lanes=a,n}function Ic(e,n,t,r){return(e=Tc(7,e,r,n)).lanes=t,e}function Rc(e,n,t,r){return(e=Tc(22,e,r,n)).elementType=O,e.lanes=t,e.stateNode={isHidden:!1},e}function Lc(e,n,t){return(e=Tc(6,e,null,n)).lanes=t,e}function Dc(e,n,t){return(n=Tc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Mc(e,n,t,r,o){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=mn(0),this.expirationTimes=mn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=mn(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Uc(e,n,t,r,o,i,a,s,l){return e=new Mc(e,n,t,s,l),1===n?(n=1,!0===i&&(n|=8)):n=0,i=Tc(3,null,null,n),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Li(i),e}function Kc(e){if(!e)return jo;e:{if($e(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Oo(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(i(171))}if(1===e.tag){var t=e.type;if(Oo(t))return Ro(e,t,n)}return n}function $c(e,n,t,r,o,i,a,s,l){return(e=Uc(t,r,!0,e,0,i,0,s,l)).context=Kc(null),t=e.current,(i=Mi(r=ec(),o=nc(t))).callback=null!=n?n:null,Ui(t,i,o),e.current.lanes=o,bn(e,o,r),rc(e,r),e}function Fc(e,n,t,r){var o=n.current,i=ec(),a=nc(o);return t=Kc(t),null===n.context?n.context=t:n.pendingContext=t,(n=Mi(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Ui(o,n,a))&&(tc(e,o,a,i),Ki(e,o,a)),a}function qc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Yc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Wc(e,n){Yc(e,n),(e=e.alternate)&&Yc(e,n)}El=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||No.current)xs=!0;else{if(0===(e.lanes&t)&&!(128&n.flags))return xs=!1,function(e,n,t){switch(n.tag){case 3:_s(n),pi();break;case 5:Xi(n);break;case 1:Oo(n.type)&&Lo(n);break;case 4:Hi(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,o=n.memoizedProps.value;So(Ei,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(So(ea,1&ea.current),n.flags|=128,null):0!==(t&n.child.childLanes)?Ls(e,n,t):(So(ea,1&ea.current),null!==(e=qs(e,n,t))?e.sibling:null);So(ea,1&ea.current);break;case 19:if(r=0!==(t&n.childLanes),128&e.flags){if(r)return $s(e,n,t);n.flags|=128}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),So(ea,ea.current),r)break;return null;case 22:case 23:return n.lanes=0,Bs(e,n,t)}return qs(e,n,t)}(e,n,t);xs=!!(131072&e.flags)}else xs=!1,ii&&1048576&n.flags&&ei(n,Go,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Fs(e,n),e=n.pendingProps;var o=zo(n,_o.current);Ni(n,t),o=ga(null,n,r,e,o,t);var a=ma();return n.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Oo(r)?(a=!0,Lo(n)):a=!1,n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,Li(n),o.updater=os,n.stateNode=o,o._reactInternals=n,ls(n,r,e,t),n=js(null,n,r,!0,a,t)):(n.tag=0,ii&&a&&ni(n),ys(null,n,o,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Fs(e,n),e=n.pendingProps,r=(o=r._init)(r._payload),n.type=r,o=n.tag=function(e){if("function"==typeof e)return zc(e)?1:0;if(null!=e){if((e=e.$$typeof)===j)return 11;if(e===T)return 14}return 2}(r),e=ts(r,e),o){case 0:n=ks(null,n,r,e,t);break e;case 1:n=Ss(null,n,r,e,t);break e;case 11:n=vs(null,n,r,e,t);break e;case 14:n=Cs(null,n,r,ts(r.type,e),t);break e}throw Error(i(306,r,""))}return n;case 0:return r=n.type,o=n.pendingProps,ks(e,n,r,o=n.elementType===r?o:ts(r,o),t);case 1:return r=n.type,o=n.pendingProps,Ss(e,n,r,o=n.elementType===r?o:ts(r,o),t);case 3:e:{if(_s(n),null===e)throw Error(i(387));r=n.pendingProps,o=(a=n.memoizedState).element,Di(e,n),Fi(n,r,null,t);var s=n.memoizedState;if(r=s.element,a.isDehydrated){if(a={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},n.updateQueue.baseState=a,n.memoizedState=a,256&n.flags){n=Ns(e,n,r,t,o=cs(Error(i(423)),n));break e}if(r!==o){n=Ns(e,n,r,t,o=cs(Error(i(424)),n));break e}for(oi=co(n.stateNode.containerInfo.firstChild),ri=n,ii=!0,ai=null,t=Ci(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(pi(),r===o){n=qs(e,n,t);break e}ys(e,n,r,t)}n=n.child}return n;case 5:return Xi(n),null===e&&ui(n),r=n.type,o=n.pendingProps,a=null!==e?e.memoizedProps:null,s=o.children,to(r,o)?s=null:null!==a&&to(r,a)&&(n.flags|=32),ws(e,n),ys(e,n,s,t),n.child;case 6:return null===e&&ui(n),null;case 13:return Ls(e,n,t);case 4:return Hi(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=vi(n,null,r,t):ys(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,vs(e,n,r,o=n.elementType===r?o:ts(r,o),t);case 7:return ys(e,n,n.pendingProps,t),n.child;case 8:case 12:return ys(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,o=n.pendingProps,a=n.memoizedProps,s=o.value,So(Ei,r._currentValue),r._currentValue=s,null!==a)if(sr(a.value,s)){if(a.children===o.children&&!No.current){n=qs(e,n,t);break e}}else for(null!==(a=n.child)&&(a.return=n);null!==a;){var l=a.dependencies;if(null!==l){s=a.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===a.tag){(c=Mi(-1,t&-t)).tag=2;var u=a.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}a.lanes|=t,null!==(c=a.alternate)&&(c.lanes|=t),_i(a.return,t,n),l.lanes|=t;break}c=c.next}}else if(10===a.tag)s=a.type===n.type?null:a.child;else if(18===a.tag){if(null===(s=a.return))throw Error(i(341));s.lanes|=t,null!==(l=s.alternate)&&(l.lanes|=t),_i(s,t,n),s=a.sibling}else s=a.child;if(null!==s)s.return=a;else for(s=a;null!==s;){if(s===n){s=null;break}if(null!==(a=s.sibling)){a.return=s.return,s=a;break}s=s.return}a=s}ys(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=n.pendingProps.children,Ni(n,t),r=r(o=Ti(o)),n.flags|=1,ys(e,n,r,t),n.child;case 14:return o=ts(r=n.type,n.pendingProps),Cs(e,n,r,o=ts(r.type,o),t);case 15:return Es(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:ts(r,o),Fs(e,n),n.tag=1,Oo(r)?(e=!0,Lo(n)):e=!1,Ni(n,t),as(n,r,o),ls(n,r,o,t),js(null,n,r,!0,e,t);case 19:return $s(e,n,t);case 22:return Bs(e,n,t)}throw Error(i(156,n.tag))};var Gc="function"==typeof reportError?reportError:function(e){console.error(e)};function Qc(e){this._internalRoot=e}function Vc(e){this._internalRoot=e}function Hc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xc(){}function Jc(e,n,t,r,o){var i=t._reactRootContainer;if(i){var a=i;if("function"==typeof o){var s=o;o=function(){var e=qc(a);s.call(e)}}Fc(n,a,e,o)}else a=function(e,n,t,r,o){if(o){if("function"==typeof r){var i=r;r=function(){var e=qc(a);i.call(e)}}var a=$c(n,r,e,0,null,!1,0,"",Xc);return e._reactRootContainer=a,e[ho]=a.current,$r(8===e.nodeType?e.parentNode:e),uc(),a}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof r){var s=r;r=function(){var e=qc(l);s.call(e)}}var l=Uc(e,0,!1,null,0,!1,0,"",Xc);return e._reactRootContainer=l,e[ho]=l.current,$r(8===e.nodeType?e.parentNode:e),uc(function(){Fc(n,l,t,r)}),l}(t,n,e,o,r);return qc(a)}Vc.prototype.render=Qc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(i(409));Fc(e,n,null,null)},Vc.prototype.unmount=Qc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;uc(function(){Fc(null,e,null,null)}),n[ho]=null}},Vc.prototype.unstable_scheduleHydration=function(e){if(e){var n=wn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Pn.length&&0!==n&&n<Pn[t].priority;t++);Pn.splice(t,0,e),0===t&&Dn(e)}},Cn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=An(n.pendingLanes);0!==t&&(xn(n,1|t),rc(n,Ze()),!(6&jl)&&($l=Ze()+500,Fo()))}break;case 13:uc(function(){var n=Ii(e,1);if(null!==n){var t=ec();tc(n,e,1,t)}}),Wc(e,1)}},En=function(e){if(13===e.tag){var n=Ii(e,134217728);null!==n&&tc(n,e,134217728,ec()),Wc(e,134217728)}},Bn=function(e){if(13===e.tag){var n=nc(e),t=Ii(e,n);null!==t&&tc(t,e,n,ec()),Wc(e,n)}},wn=function(){return yn},kn=function(e,n){var t=yn;try{return yn=e,n()}finally{yn=t}},Ce=function(e,n,t){switch(n){case"input":if(X(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=Co(r);if(!o)throw Error(i(90));G(r),X(r,o)}}}break;case"textarea":ie(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},je=cc,_e=uc;var eu={usingClientEntryPoint:!1,Events:[yo,vo,Co,ke,Se,cc]},nu={findFiberByHostInstance:xo,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tu={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ye(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{on=ru.inject(tu),an=ru}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Hc(n))throw Error(i(200));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:C,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Hc(e))throw Error(i(299));var t=!1,r="",o=Gc;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),n=Uc(e,1,!1,null,0,t,0,r,o),e[ho]=n.current,$r(8===e.nodeType?e.parentNode:e),new Qc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return null===(e=Ye(n))?null:e.stateNode},n.flushSync=function(e){return uc(e)},n.hydrate=function(e,n,t){if(!Zc(n))throw Error(i(200));return Jc(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Hc(e))throw Error(i(405));var r=null!=t&&t.hydratedSources||null,o=!1,a="",s=Gc;if(null!=t&&(!0===t.unstable_strictMode&&(o=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),n=$c(n,null,e,1,null!=t?t:null,o,0,a,s),e[ho]=n.current,$r(e),r)for(e=0;e<r.length;e++)o=(o=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o);return new Vc(n)},n.render=function(e,n,t){if(!Zc(n))throw Error(i(200));return Jc(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Zc(e))throw Error(i(40));return!!e._reactRootContainer&&(uc(function(){Jc(null,null,e,!1,function(){e._reactRootContainer=null,e[ho]=null})}),!0)},n.unstable_batchedUpdates=cc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Zc(t))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return Jc(e,n,t,!1,r)},n.version="18.3.1-next-f1338f8080-20240426"},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},660:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const o=r(t(907)),i=r(t(818));n.default=class{constructor(e){this.shouldThrowOnError=!1,this.method=e.method,this.url=e.url,this.headers=e.headers,this.schema=e.schema,this.body=e.body,this.shouldThrowOnError=e.shouldThrowOnError,this.signal=e.signal,this.isMaybeSingle=e.isMaybeSingle,e.fetch?this.fetch=e.fetch:"undefined"==typeof fetch?this.fetch=o.default:this.fetch=fetch}throwOnError(){return this.shouldThrowOnError=!0,this}setHeader(e,n){return this.headers=Object.assign({},this.headers),this.headers[e]=n,this}then(e,n){void 0===this.schema||(["GET","HEAD"].includes(this.method)?this.headers["Accept-Profile"]=this.schema:this.headers["Content-Profile"]=this.schema),"GET"!==this.method&&"HEAD"!==this.method&&(this.headers["Content-Type"]="application/json");let t=(0,this.fetch)(this.url.toString(),{method:this.method,headers:this.headers,body:JSON.stringify(this.body),signal:this.signal}).then(async e=>{var n,t,r;let o=null,a=null,s=null,l=e.status,c=e.statusText;if(e.ok){if("HEAD"!==this.method){const n=await e.text();""===n||(a="text/csv"===this.headers.Accept||this.headers.Accept&&this.headers.Accept.includes("application/vnd.pgrst.plan+text")?n:JSON.parse(n))}const r=null===(n=this.headers.Prefer)||void 0===n?void 0:n.match(/count=(exact|planned|estimated)/),i=null===(t=e.headers.get("content-range"))||void 0===t?void 0:t.split("/");r&&i&&i.length>1&&(s=parseInt(i[1])),this.isMaybeSingle&&"GET"===this.method&&Array.isArray(a)&&(a.length>1?(o={code:"PGRST116",details:`Results contain ${a.length} rows, application/vnd.pgrst.object+json requires 1 row`,hint:null,message:"JSON object requested, multiple (or no) rows returned"},a=null,s=null,l=406,c="Not Acceptable"):a=1===a.length?a[0]:null)}else{const n=await e.text();try{o=JSON.parse(n),Array.isArray(o)&&404===e.status&&(a=[],o=null,l=200,c="OK")}catch(t){404===e.status&&""===n?(l=204,c="No Content"):o={message:n}}if(o&&this.isMaybeSingle&&(null===(r=null==o?void 0:o.details)||void 0===r?void 0:r.includes("0 rows"))&&(o=null,l=200,c="OK"),o&&this.shouldThrowOnError)throw new i.default(o)}return{error:o,data:a,count:s,status:l,statusText:c}});return this.shouldThrowOnError||(t=t.catch(e=>{var n,t,r;return{error:{message:`${null!==(n=null==e?void 0:e.name)&&void 0!==n?n:"FetchError"}: ${null==e?void 0:e.message}`,details:`${null!==(t=null==e?void 0:e.stack)&&void 0!==t?t:""}`,hint:"",code:`${null!==(r=null==e?void 0:e.code)&&void 0!==r?r:""}`},data:null,count:null,status:0,statusText:""}})),t.then(e,n)}returns(){return this}overrideTypes(){return this}}},818:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});class t extends Error{constructor(e){super(e.message),this.name="PostgrestError",this.details=e.details,this.hint=e.hint,this.code=e.code}}n.default=t},825:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const o=r(t(261));class i extends o.default{eq(e,n){return this.url.searchParams.append(e,`eq.${n}`),this}neq(e,n){return this.url.searchParams.append(e,`neq.${n}`),this}gt(e,n){return this.url.searchParams.append(e,`gt.${n}`),this}gte(e,n){return this.url.searchParams.append(e,`gte.${n}`),this}lt(e,n){return this.url.searchParams.append(e,`lt.${n}`),this}lte(e,n){return this.url.searchParams.append(e,`lte.${n}`),this}like(e,n){return this.url.searchParams.append(e,`like.${n}`),this}likeAllOf(e,n){return this.url.searchParams.append(e,`like(all).{${n.join(",")}}`),this}likeAnyOf(e,n){return this.url.searchParams.append(e,`like(any).{${n.join(",")}}`),this}ilike(e,n){return this.url.searchParams.append(e,`ilike.${n}`),this}ilikeAllOf(e,n){return this.url.searchParams.append(e,`ilike(all).{${n.join(",")}}`),this}ilikeAnyOf(e,n){return this.url.searchParams.append(e,`ilike(any).{${n.join(",")}}`),this}is(e,n){return this.url.searchParams.append(e,`is.${n}`),this}in(e,n){const t=Array.from(new Set(n)).map(e=>"string"==typeof e&&new RegExp("[,()]").test(e)?`"${e}"`:`${e}`).join(",");return this.url.searchParams.append(e,`in.(${t})`),this}contains(e,n){return"string"==typeof n?this.url.searchParams.append(e,`cs.${n}`):Array.isArray(n)?this.url.searchParams.append(e,`cs.{${n.join(",")}}`):this.url.searchParams.append(e,`cs.${JSON.stringify(n)}`),this}containedBy(e,n){return"string"==typeof n?this.url.searchParams.append(e,`cd.${n}`):Array.isArray(n)?this.url.searchParams.append(e,`cd.{${n.join(",")}}`):this.url.searchParams.append(e,`cd.${JSON.stringify(n)}`),this}rangeGt(e,n){return this.url.searchParams.append(e,`sr.${n}`),this}rangeGte(e,n){return this.url.searchParams.append(e,`nxl.${n}`),this}rangeLt(e,n){return this.url.searchParams.append(e,`sl.${n}`),this}rangeLte(e,n){return this.url.searchParams.append(e,`nxr.${n}`),this}rangeAdjacent(e,n){return this.url.searchParams.append(e,`adj.${n}`),this}overlaps(e,n){return"string"==typeof n?this.url.searchParams.append(e,`ov.${n}`):this.url.searchParams.append(e,`ov.{${n.join(",")}}`),this}textSearch(e,n,{config:t,type:r}={}){let o="";"plain"===r?o="pl":"phrase"===r?o="ph":"websearch"===r&&(o="w");const i=void 0===t?"":`(${t})`;return this.url.searchParams.append(e,`${o}fts${i}.${n}`),this}match(e){return Object.entries(e).forEach(([e,n])=>{this.url.searchParams.append(e,`eq.${n}`)}),this}not(e,n,t){return this.url.searchParams.append(e,`not.${n}.${t}`),this}or(e,{foreignTable:n,referencedTable:t=n}={}){const r=t?`${t}.or`:"or";return this.url.searchParams.append(r,`(${e})`),this}filter(e,n,t){return this.url.searchParams.append(e,`${n}.${t}`),this}}n.default=i},848:(e,n,t)=>{e.exports=t(20)},907:(e,n,t)=>{t.r(n),t.d(n,{Headers:()=>a,Request:()=>s,Response:()=>l,default:()=>i,fetch:()=>o});var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("unable to locate global object")}();const o=r.fetch,i=r.fetch.bind(r),a=r.Headers,s=r.Request,l=r.Response},961:(e,n,t)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(551)},982:(e,n,t)=>{e.exports=t(463)}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.nc=void 0;var r=t(540),o=t(338),i={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const a=(e,n)=>{const t=(0,r.forwardRef)(({color:t="currentColor",size:o=24,strokeWidth:a=2,absoluteStrokeWidth:s,className:l="",children:c,...u},d)=>{return(0,r.createElement)("svg",{ref:d,...i,width:o,height:o,stroke:t,strokeWidth:s?24*Number(a)/Number(o):a,className:["lucide",`lucide-${A=e,A.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase().trim()}`,l].join(" "),...u},[...n.map(([e,n])=>(0,r.createElement)(e,n)),...Array.isArray(c)?c:[c]]);var A});return t.displayName=`${e}`,t},s=a("Bookmark",[["path",{d:"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z",key:"1fy3hk"}]]),l=a("TabletSmartphone",[["rect",{width:"10",height:"14",x:"3",y:"8",rx:"2",key:"1vrsiq"}],["path",{d:"M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4",key:"1j4zmg"}],["path",{d:"M8 18h.01",key:"lrp35t"}]]),c=a("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]),u=a("LogOut",[["path",{d:"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4",key:"1uf3rs"}],["polyline",{points:"16 17 21 12 16 7",key:"1gabdz"}],["line",{x1:"21",x2:"9",y1:"12",y2:"12",key:"1uyos4"}]]),d=a("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]),A=a("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]),f=a("Tag",[["path",{d:"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z",key:"14b2ls"}],["path",{d:"M7 7h.01",key:"7u93v4"}]]),p=a("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]]),h=a("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]]),g=a("Inbox",[["polyline",{points:"22 12 16 12 14 15 10 15 8 12 2 12",key:"o97t9d"}],["path",{d:"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",key:"oot6mr"}]]),m=a("CheckSquare",[["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}],["path",{d:"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11",key:"1jnkn4"}]]),b=a("Archive",[["rect",{width:"20",height:"5",x:"2",y:"3",rx:"1",key:"1wp1u1"}],["path",{d:"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8",key:"1s80jp"}],["path",{d:"M10 12h4",key:"a56b0p"}]]),x=a("FolderPlus",[["path",{d:"M12 10v6",key:"1bos4e"}],["path",{d:"M9 13h6",key:"1uhe8q"}],["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),y=a("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);class v extends Error{constructor(e,n="FunctionsError",t){super(e),this.name=n,this.context=t}}class C extends v{constructor(e){super("Failed to send a request to the Edge Function","FunctionsFetchError",e)}}class E extends v{constructor(e){super("Relay Error invoking the Edge Function","FunctionsRelayError",e)}}class B extends v{constructor(e){super("Edge Function returned a non-2xx status code","FunctionsHttpError",e)}}var w;!function(e){e.Any="any",e.ApNortheast1="ap-northeast-1",e.ApNortheast2="ap-northeast-2",e.ApSouth1="ap-south-1",e.ApSoutheast1="ap-southeast-1",e.ApSoutheast2="ap-southeast-2",e.CaCentral1="ca-central-1",e.EuCentral1="eu-central-1",e.EuWest1="eu-west-1",e.EuWest2="eu-west-2",e.EuWest3="eu-west-3",e.SaEast1="sa-east-1",e.UsEast1="us-east-1",e.UsWest1="us-west-1",e.UsWest2="us-west-2"}(w||(w={}));class k{constructor(e,{headers:n={},customFetch:r,region:o=w.Any}={}){this.url=e,this.headers=n,this.region=o,this.fetch=(e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(t.bind(t,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)})(r)}setAuth(e){this.headers.Authorization=`Bearer ${e}`}invoke(e,n={}){var t,r,o,i,a;return r=this,o=void 0,a=function*(){try{const{headers:r,method:o,body:i}=n;let a={},{region:s}=n;s||(s=this.region);const l=new URL(`${this.url}/${e}`);let c;s&&"any"!==s&&(a["x-region"]=s,l.searchParams.set("forceFunctionRegion",s)),i&&(r&&!Object.prototype.hasOwnProperty.call(r,"Content-Type")||!r)&&("undefined"!=typeof Blob&&i instanceof Blob||i instanceof ArrayBuffer?(a["Content-Type"]="application/octet-stream",c=i):"string"==typeof i?(a["Content-Type"]="text/plain",c=i):"undefined"!=typeof FormData&&i instanceof FormData?c=i:(a["Content-Type"]="application/json",c=JSON.stringify(i)));const u=yield this.fetch(l.toString(),{method:o||"POST",headers:Object.assign(Object.assign(Object.assign({},a),this.headers),r),body:c}).catch(e=>{throw new C(e)}),d=u.headers.get("x-relay-error");if(d&&"true"===d)throw new E(u);if(!u.ok)throw new B(u);let A,f=(null!==(t=u.headers.get("Content-Type"))&&void 0!==t?t:"text/plain").split(";")[0].trim();return A="application/json"===f?yield u.json():"application/octet-stream"===f?yield u.blob():"text/event-stream"===f?u:"multipart/form-data"===f?yield u.formData():yield u.text(),{data:A,error:null,response:u}}catch(e){return{data:null,error:e,response:e instanceof B||e instanceof E?e.context:void 0}}},new((i=void 0)||(i=Promise))(function(e,n){function t(e){try{l(a.next(e))}catch(e){n(e)}}function s(e){try{l(a.throw(e))}catch(e){n(e)}}function l(n){var r;n.done?e(n.value):(r=n.value,r instanceof i?r:new i(function(e){e(r)})).then(t,s)}l((a=a.apply(r,o||[])).next())})}}var S=t(279);const{PostgrestClient:j,PostgrestQueryBuilder:_,PostgrestFilterBuilder:N,PostgrestTransformBuilder:T,PostgrestBuilder:z,PostgrestError:O}=S,P=function(){if("undefined"!=typeof WebSocket)return WebSocket;if(void 0!==global.WebSocket)return global.WebSocket;if(void 0!==window.WebSocket)return window.WebSocket;if(void 0!==self.WebSocket)return self.WebSocket;throw new Error("`WebSocket` is not supported in this environment")}();var I,R,L,D,M,U,K;!function(e){e[e.connecting=0]="connecting",e[e.open=1]="open",e[e.closing=2]="closing",e[e.closed=3]="closed"}(I||(I={})),(K=R||(R={})).closed="closed",K.errored="errored",K.joined="joined",K.joining="joining",K.leaving="leaving",function(e){e.close="phx_close",e.error="phx_error",e.join="phx_join",e.reply="phx_reply",e.leave="phx_leave",e.access_token="access_token"}(L||(L={})),function(e){e.websocket="websocket"}(D||(D={})),function(e){e.Connecting="connecting",e.Open="open",e.Closing="closing",e.Closed="closed"}(M||(M={}));class ${constructor(){this.HEADER_LENGTH=1}decode(e,n){return e.constructor===ArrayBuffer?n(this._binaryDecode(e)):n("string"==typeof e?JSON.parse(e):{})}_binaryDecode(e){const n=new DataView(e),t=new TextDecoder;return this._decodeBroadcast(e,n,t)}_decodeBroadcast(e,n,t){const r=n.getUint8(1),o=n.getUint8(2);let i=this.HEADER_LENGTH+2;const a=t.decode(e.slice(i,i+r));i+=r;const s=t.decode(e.slice(i,i+o));return i+=o,{ref:null,topic:a,event:s,payload:JSON.parse(t.decode(e.slice(i,e.byteLength)))}}}class F{constructor(e,n){this.callback=e,this.timerCalc=n,this.timer=void 0,this.tries=0,this.callback=e,this.timerCalc=n}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}}!function(e){e.abstime="abstime",e.bool="bool",e.date="date",e.daterange="daterange",e.float4="float4",e.float8="float8",e.int2="int2",e.int4="int4",e.int4range="int4range",e.int8="int8",e.int8range="int8range",e.json="json",e.jsonb="jsonb",e.money="money",e.numeric="numeric",e.oid="oid",e.reltime="reltime",e.text="text",e.time="time",e.timestamp="timestamp",e.timestamptz="timestamptz",e.timetz="timetz",e.tsrange="tsrange",e.tstzrange="tstzrange"}(U||(U={}));const q=(e,n,t={})=>{var r;const o=null!==(r=t.skipTypes)&&void 0!==r?r:[];return Object.keys(n).reduce((t,r)=>(t[r]=Y(r,e,n,o),t),{})},Y=(e,n,t,r)=>{const o=n.find(n=>n.name===e),i=null==o?void 0:o.type,a=t[e];return i&&!r.includes(i)?W(i,a):G(a)},W=(e,n)=>{if("_"===e.charAt(0)){const t=e.slice(1,e.length);return Z(n,t)}switch(e){case U.bool:return Q(n);case U.float4:case U.float8:case U.int2:case U.int4:case U.int8:case U.numeric:case U.oid:return V(n);case U.json:case U.jsonb:return H(n);case U.timestamp:return X(n);case U.abstime:case U.date:case U.daterange:case U.int4range:case U.int8range:case U.money:case U.reltime:case U.text:case U.time:case U.timestamptz:case U.timetz:case U.tsrange:case U.tstzrange:default:return G(n)}},G=e=>e,Q=e=>{switch(e){case"t":return!0;case"f":return!1;default:return e}},V=e=>{if("string"==typeof e){const n=parseFloat(e);if(!Number.isNaN(n))return n}return e},H=e=>{if("string"==typeof e)try{return JSON.parse(e)}catch(n){return console.log(`JSON parse error: ${n}`),e}return e},Z=(e,n)=>{if("string"!=typeof e)return e;const t=e.length-1,r=e[t];if("{"===e[0]&&"}"===r){let r;const o=e.slice(1,t);try{r=JSON.parse("["+o+"]")}catch(e){r=o?o.split(","):[]}return r.map(e=>W(n,e))}return e},X=e=>"string"==typeof e?e.replace(" ","T"):e,J=e=>{let n=e;return n=n.replace(/^ws/i,"http"),n=n.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i,""),n.replace(/\/+$/,"")};class ee{constructor(e,n,t={},r=1e4){this.channel=e,this.event=n,this.payload=t,this.timeout=r,this.sent=!1,this.timeoutTimer=void 0,this.ref="",this.receivedResp=null,this.recHooks=[],this.refEvent=null}resend(e){this.timeout=e,this._cancelRefEvent(),this.ref="",this.refEvent=null,this.receivedResp=null,this.sent=!1,this.send()}send(){this._hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload,ref:this.ref,join_ref:this.channel._joinRef()}))}updatePayload(e){this.payload=Object.assign(Object.assign({},this.payload),e)}receive(e,n){var t;return this._hasReceived(e)&&n(null===(t=this.receivedResp)||void 0===t?void 0:t.response),this.recHooks.push({status:e,callback:n}),this}startTimeout(){this.timeoutTimer||(this.ref=this.channel.socket._makeRef(),this.refEvent=this.channel._replyEventName(this.ref),this.channel._on(this.refEvent,{},e=>{this._cancelRefEvent(),this._cancelTimeout(),this.receivedResp=e,this._matchReceive(e)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout))}trigger(e,n){this.refEvent&&this.channel._trigger(this.refEvent,{status:e,response:n})}destroy(){this._cancelRefEvent(),this._cancelTimeout()}_cancelRefEvent(){this.refEvent&&this.channel._off(this.refEvent,{})}_cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=void 0}_matchReceive({status:e,response:n}){this.recHooks.filter(n=>n.status===e).forEach(e=>e.callback(n))}_hasReceived(e){return this.receivedResp&&this.receivedResp.status===e}}var ne,te,re,oe;!function(e){e.SYNC="sync",e.JOIN="join",e.LEAVE="leave"}(ne||(ne={}));class ie{constructor(e,n){this.channel=e,this.state={},this.pendingDiffs=[],this.joinRef=null,this.caller={onJoin:()=>{},onLeave:()=>{},onSync:()=>{}};const t=(null==n?void 0:n.events)||{state:"presence_state",diff:"presence_diff"};this.channel._on(t.state,{},e=>{const{onJoin:n,onLeave:t,onSync:r}=this.caller;this.joinRef=this.channel._joinRef(),this.state=ie.syncState(this.state,e,n,t),this.pendingDiffs.forEach(e=>{this.state=ie.syncDiff(this.state,e,n,t)}),this.pendingDiffs=[],r()}),this.channel._on(t.diff,{},e=>{const{onJoin:n,onLeave:t,onSync:r}=this.caller;this.inPendingSyncState()?this.pendingDiffs.push(e):(this.state=ie.syncDiff(this.state,e,n,t),r())}),this.onJoin((e,n,t)=>{this.channel._trigger("presence",{event:"join",key:e,currentPresences:n,newPresences:t})}),this.onLeave((e,n,t)=>{this.channel._trigger("presence",{event:"leave",key:e,currentPresences:n,leftPresences:t})}),this.onSync(()=>{this.channel._trigger("presence",{event:"sync"})})}static syncState(e,n,t,r){const o=this.cloneDeep(e),i=this.transformState(n),a={},s={};return this.map(o,(e,n)=>{i[e]||(s[e]=n)}),this.map(i,(e,n)=>{const t=o[e];if(t){const r=n.map(e=>e.presence_ref),o=t.map(e=>e.presence_ref),i=n.filter(e=>o.indexOf(e.presence_ref)<0),l=t.filter(e=>r.indexOf(e.presence_ref)<0);i.length>0&&(a[e]=i),l.length>0&&(s[e]=l)}else a[e]=n}),this.syncDiff(o,{joins:a,leaves:s},t,r)}static syncDiff(e,n,t,r){const{joins:o,leaves:i}={joins:this.transformState(n.joins),leaves:this.transformState(n.leaves)};return t||(t=()=>{}),r||(r=()=>{}),this.map(o,(n,r)=>{var o;const i=null!==(o=e[n])&&void 0!==o?o:[];if(e[n]=this.cloneDeep(r),i.length>0){const t=e[n].map(e=>e.presence_ref),r=i.filter(e=>t.indexOf(e.presence_ref)<0);e[n].unshift(...r)}t(n,i,r)}),this.map(i,(n,t)=>{let o=e[n];if(!o)return;const i=t.map(e=>e.presence_ref);o=o.filter(e=>i.indexOf(e.presence_ref)<0),e[n]=o,r(n,o,t),0===o.length&&delete e[n]}),e}static map(e,n){return Object.getOwnPropertyNames(e).map(t=>n(t,e[t]))}static transformState(e){return e=this.cloneDeep(e),Object.getOwnPropertyNames(e).reduce((n,t)=>{const r=e[t];return n[t]="metas"in r?r.metas.map(e=>(e.presence_ref=e.phx_ref,delete e.phx_ref,delete e.phx_ref_prev,e)):r,n},{})}static cloneDeep(e){return JSON.parse(JSON.stringify(e))}onJoin(e){this.caller.onJoin=e}onLeave(e){this.caller.onLeave=e}onSync(e){this.caller.onSync=e}inPendingSyncState(){return!this.joinRef||this.joinRef!==this.channel._joinRef()}}!function(e){e.ALL="*",e.INSERT="INSERT",e.UPDATE="UPDATE",e.DELETE="DELETE"}(te||(te={})),function(e){e.BROADCAST="broadcast",e.PRESENCE="presence",e.POSTGRES_CHANGES="postgres_changes",e.SYSTEM="system"}(re||(re={})),function(e){e.SUBSCRIBED="SUBSCRIBED",e.TIMED_OUT="TIMED_OUT",e.CLOSED="CLOSED",e.CHANNEL_ERROR="CHANNEL_ERROR"}(oe||(oe={}));class ae{constructor(e,n={config:{}},t){this.topic=e,this.params=n,this.socket=t,this.bindings={},this.state=R.closed,this.joinedOnce=!1,this.pushBuffer=[],this.subTopic=e.replace(/^realtime:/i,""),this.params.config=Object.assign({broadcast:{ack:!1,self:!1},presence:{key:""},private:!1},n.config),this.timeout=this.socket.timeout,this.joinPush=new ee(this,L.join,this.params,this.timeout),this.rejoinTimer=new F(()=>this._rejoinUntilConnected(),this.socket.reconnectAfterMs),this.joinPush.receive("ok",()=>{this.state=R.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(e=>e.send()),this.pushBuffer=[]}),this._onClose(()=>{this.rejoinTimer.reset(),this.socket.log("channel",`close ${this.topic} ${this._joinRef()}`),this.state=R.closed,this.socket._remove(this)}),this._onError(e=>{this._isLeaving()||this._isClosed()||(this.socket.log("channel",`error ${this.topic}`,e),this.state=R.errored,this.rejoinTimer.scheduleTimeout())}),this.joinPush.receive("timeout",()=>{this._isJoining()&&(this.socket.log("channel",`timeout ${this.topic}`,this.joinPush.timeout),this.state=R.errored,this.rejoinTimer.scheduleTimeout())}),this._on(L.reply,{},(e,n)=>{this._trigger(this._replyEventName(n),e)}),this.presence=new ie(this),this.broadcastEndpointURL=J(this.socket.endPoint)+"/api/broadcast",this.private=this.params.config.private||!1}subscribe(e,n=this.timeout){var t,r;if(this.socket.isConnected()||this.socket.connect(),this.state==R.closed){const{config:{broadcast:o,presence:i,private:a}}=this.params;this._onError(n=>null==e?void 0:e(oe.CHANNEL_ERROR,n)),this._onClose(()=>null==e?void 0:e(oe.CLOSED));const s={},l={broadcast:o,presence:i,postgres_changes:null!==(r=null===(t=this.bindings.postgres_changes)||void 0===t?void 0:t.map(e=>e.filter))&&void 0!==r?r:[],private:a};this.socket.accessTokenValue&&(s.access_token=this.socket.accessTokenValue),this.updateJoinPayload(Object.assign({config:l},s)),this.joinedOnce=!0,this._rejoin(n),this.joinPush.receive("ok",async({postgres_changes:n})=>{var t;if(this.socket.setAuth(),void 0!==n){const r=this.bindings.postgres_changes,o=null!==(t=null==r?void 0:r.length)&&void 0!==t?t:0,i=[];for(let t=0;t<o;t++){const o=r[t],{filter:{event:a,schema:s,table:l,filter:c}}=o,u=n&&n[t];if(!u||u.event!==a||u.schema!==s||u.table!==l||u.filter!==c)return this.unsubscribe(),this.state=R.errored,void(null==e||e(oe.CHANNEL_ERROR,new Error("mismatch between server and client bindings for postgres changes")));i.push(Object.assign(Object.assign({},o),{id:u.id}))}return this.bindings.postgres_changes=i,void(e&&e(oe.SUBSCRIBED))}null==e||e(oe.SUBSCRIBED)}).receive("error",n=>{this.state=R.errored,null==e||e(oe.CHANNEL_ERROR,new Error(JSON.stringify(Object.values(n).join(", ")||"error")))}).receive("timeout",()=>{null==e||e(oe.TIMED_OUT)})}return this}presenceState(){return this.presence.state}async track(e,n={}){return await this.send({type:"presence",event:"track",payload:e},n.timeout||this.timeout)}async untrack(e={}){return await this.send({type:"presence",event:"untrack"},e)}on(e,n,t){return this._on(e,n,t)}async send(e,n={}){var t,r;if(this._canPush()||"broadcast"!==e.type)return new Promise(t=>{var r,o,i;const a=this._push(e.type,e,n.timeout||this.timeout);"broadcast"!==e.type||(null===(i=null===(o=null===(r=this.params)||void 0===r?void 0:r.config)||void 0===o?void 0:o.broadcast)||void 0===i?void 0:i.ack)||t("ok"),a.receive("ok",()=>t("ok")),a.receive("error",()=>t("error")),a.receive("timeout",()=>t("timed out"))});{const{event:o,payload:i}=e,a={method:"POST",headers:{Authorization:this.socket.accessTokenValue?`Bearer ${this.socket.accessTokenValue}`:"",apikey:this.socket.apiKey?this.socket.apiKey:"","Content-Type":"application/json"},body:JSON.stringify({messages:[{topic:this.subTopic,event:o,payload:i,private:this.private}]})};try{const e=await this._fetchWithTimeout(this.broadcastEndpointURL,a,null!==(t=n.timeout)&&void 0!==t?t:this.timeout);return await(null===(r=e.body)||void 0===r?void 0:r.cancel()),e.ok?"ok":"error"}catch(e){return"AbortError"===e.name?"timed out":"error"}}}updateJoinPayload(e){this.joinPush.updatePayload(e)}unsubscribe(e=this.timeout){this.state=R.leaving;const n=()=>{this.socket.log("channel",`leave ${this.topic}`),this._trigger(L.close,"leave",this._joinRef())};this.joinPush.destroy();let t=null;return new Promise(r=>{t=new ee(this,L.leave,{},e),t.receive("ok",()=>{n(),r("ok")}).receive("timeout",()=>{n(),r("timed out")}).receive("error",()=>{r("error")}),t.send(),this._canPush()||t.trigger("ok",{})}).finally(()=>{null==t||t.destroy()})}teardown(){this.pushBuffer.forEach(e=>e.destroy()),this.rejoinTimer&&clearTimeout(this.rejoinTimer.timer),this.joinPush.destroy()}async _fetchWithTimeout(e,n,t){const r=new AbortController,o=setTimeout(()=>r.abort(),t),i=await this.socket.fetch(e,Object.assign(Object.assign({},n),{signal:r.signal}));return clearTimeout(o),i}_push(e,n,t=this.timeout){if(!this.joinedOnce)throw`tried to push '${e}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;let r=new ee(this,e,n,t);return this._canPush()?r.send():(r.startTimeout(),this.pushBuffer.push(r)),r}_onMessage(e,n,t){return n}_isMember(e){return this.topic===e}_joinRef(){return this.joinPush.ref}_trigger(e,n,t){var r,o;const i=e.toLocaleLowerCase(),{close:a,error:s,leave:l,join:c}=L;if(t&&[a,s,l,c].indexOf(i)>=0&&t!==this._joinRef())return;let u=this._onMessage(i,n,t);if(n&&!u)throw"channel onMessage callbacks must return the payload, modified or unmodified";["insert","update","delete"].includes(i)?null===(r=this.bindings.postgres_changes)||void 0===r||r.filter(e=>{var n,t,r;return"*"===(null===(n=e.filter)||void 0===n?void 0:n.event)||(null===(r=null===(t=e.filter)||void 0===t?void 0:t.event)||void 0===r?void 0:r.toLocaleLowerCase())===i}).map(e=>e.callback(u,t)):null===(o=this.bindings[i])||void 0===o||o.filter(e=>{var t,r,o,a,s,l;if(["broadcast","presence","postgres_changes"].includes(i)){if("id"in e){const i=e.id,a=null===(t=e.filter)||void 0===t?void 0:t.event;return i&&(null===(r=n.ids)||void 0===r?void 0:r.includes(i))&&("*"===a||(null==a?void 0:a.toLocaleLowerCase())===(null===(o=n.data)||void 0===o?void 0:o.type.toLocaleLowerCase()))}{const t=null===(s=null===(a=null==e?void 0:e.filter)||void 0===a?void 0:a.event)||void 0===s?void 0:s.toLocaleLowerCase();return"*"===t||t===(null===(l=null==n?void 0:n.event)||void 0===l?void 0:l.toLocaleLowerCase())}}return e.type.toLocaleLowerCase()===i}).map(e=>{if("object"==typeof u&&"ids"in u){const e=u.data,{schema:n,table:t,commit_timestamp:r,type:o,errors:i}=e,a={schema:n,table:t,commit_timestamp:r,eventType:o,new:{},old:{},errors:i};u=Object.assign(Object.assign({},a),this._getPayloadRecords(e))}e.callback(u,t)})}_isClosed(){return this.state===R.closed}_isJoined(){return this.state===R.joined}_isJoining(){return this.state===R.joining}_isLeaving(){return this.state===R.leaving}_replyEventName(e){return`chan_reply_${e}`}_on(e,n,t){const r=e.toLocaleLowerCase(),o={type:r,filter:n,callback:t};return this.bindings[r]?this.bindings[r].push(o):this.bindings[r]=[o],this}_off(e,n){const t=e.toLocaleLowerCase();return this.bindings[t]=this.bindings[t].filter(e=>{var r;return!((null===(r=e.type)||void 0===r?void 0:r.toLocaleLowerCase())===t&&ae.isEqual(e.filter,n))}),this}static isEqual(e,n){if(Object.keys(e).length!==Object.keys(n).length)return!1;for(const t in e)if(e[t]!==n[t])return!1;return!0}_rejoinUntilConnected(){this.rejoinTimer.scheduleTimeout(),this.socket.isConnected()&&this._rejoin()}_onClose(e){this._on(L.close,{},e)}_onError(e){this._on(L.error,{},n=>e(n))}_canPush(){return this.socket.isConnected()&&this._isJoined()}_rejoin(e=this.timeout){this._isLeaving()||(this.socket._leaveOpenTopic(this.topic),this.state=R.joining,this.joinPush.resend(e))}_getPayloadRecords(e){const n={new:{},old:{}};return"INSERT"!==e.type&&"UPDATE"!==e.type||(n.new=q(e.columns,e.record)),"UPDATE"!==e.type&&"DELETE"!==e.type||(n.old=q(e.columns,e.old_record)),n}}const se=()=>{};class le{constructor(e,n){var r;this.accessTokenValue=null,this.apiKey=null,this.channels=new Array,this.endPoint="",this.httpEndpoint="",this.headers={},this.params={},this.timeout=1e4,this.heartbeatIntervalMs=25e3,this.heartbeatTimer=void 0,this.pendingHeartbeatRef=null,this.heartbeatCallback=se,this.ref=0,this.logger=se,this.conn=null,this.sendBuffer=[],this.serializer=new $,this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.accessToken=null,this._resolveFetch=e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(t.bind(t,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)},this.endPoint=`${e}/${D.websocket}`,this.httpEndpoint=J(e),(null==n?void 0:n.transport)?this.transport=n.transport:this.transport=null,(null==n?void 0:n.params)&&(this.params=n.params),(null==n?void 0:n.timeout)&&(this.timeout=n.timeout),(null==n?void 0:n.logger)&&(this.logger=n.logger),((null==n?void 0:n.logLevel)||(null==n?void 0:n.log_level))&&(this.logLevel=n.logLevel||n.log_level,this.params=Object.assign(Object.assign({},this.params),{log_level:this.logLevel})),(null==n?void 0:n.heartbeatIntervalMs)&&(this.heartbeatIntervalMs=n.heartbeatIntervalMs);const o=null===(r=null==n?void 0:n.params)||void 0===r?void 0:r.apikey;if(o&&(this.accessTokenValue=o,this.apiKey=o),this.reconnectAfterMs=(null==n?void 0:n.reconnectAfterMs)?n.reconnectAfterMs:e=>[1e3,2e3,5e3,1e4][e-1]||1e4,this.encode=(null==n?void 0:n.encode)?n.encode:(e,n)=>n(JSON.stringify(e)),this.decode=(null==n?void 0:n.decode)?n.decode:this.serializer.decode.bind(this.serializer),this.reconnectTimer=new F(async()=>{this.disconnect(),this.connect()},this.reconnectAfterMs),this.fetch=this._resolveFetch(null==n?void 0:n.fetch),null==n?void 0:n.worker){if("undefined"!=typeof window&&!window.Worker)throw new Error("Web Worker is not supported");this.worker=(null==n?void 0:n.worker)||!1,this.workerUrl=null==n?void 0:n.workerUrl}this.accessToken=(null==n?void 0:n.accessToken)||null}connect(){if(!this.conn){if(this.transport||(this.transport=P),!this.transport)throw new Error("No transport provided");this.conn=new this.transport(this.endpointURL()),this.setupConnection()}}endpointURL(){return this._appendParams(this.endPoint,Object.assign({},this.params,{vsn:"1.0.0"}))}disconnect(e,n){this.conn&&(this.conn.onclose=function(){},e?this.conn.close(e,null!=n?n:""):this.conn.close(),this.conn=null,this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.reset(),this.channels.forEach(e=>e.teardown()))}getChannels(){return this.channels}async removeChannel(e){const n=await e.unsubscribe();return 0===this.channels.length&&this.disconnect(),n}async removeAllChannels(){const e=await Promise.all(this.channels.map(e=>e.unsubscribe()));return this.channels=[],this.disconnect(),e}log(e,n,t){this.logger(e,n,t)}connectionState(){switch(this.conn&&this.conn.readyState){case I.connecting:return M.Connecting;case I.open:return M.Open;case I.closing:return M.Closing;default:return M.Closed}}isConnected(){return this.connectionState()===M.Open}channel(e,n={config:{}}){const t=`realtime:${e}`,r=this.getChannels().find(e=>e.topic===t);if(r)return r;{const t=new ae(`realtime:${e}`,n,this);return this.channels.push(t),t}}push(e){const{topic:n,event:t,payload:r,ref:o}=e,i=()=>{this.encode(e,e=>{var n;null===(n=this.conn)||void 0===n||n.send(e)})};this.log("push",`${n} ${t} (${o})`,r),this.isConnected()?i():this.sendBuffer.push(i)}async setAuth(e=null){let n=e||this.accessToken&&await this.accessToken()||this.accessTokenValue;this.accessTokenValue!=n&&(this.accessTokenValue=n,this.channels.forEach(e=>{const t={access_token:n,version:"realtime-js/2.11.15"};n&&e.updateJoinPayload(t),e.joinedOnce&&e._isJoined()&&e._push(L.access_token,{access_token:n})}))}async sendHeartbeat(){var e;if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.log("transport","heartbeat timeout. Attempting to re-establish connection"),this.heartbeatCallback("timeout"),void(null===(e=this.conn)||void 0===e||e.close(1e3,"hearbeat timeout"));this.pendingHeartbeatRef=this._makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef}),this.heartbeatCallback("sent"),await this.setAuth()}else this.heartbeatCallback("disconnected")}onHeartbeat(e){this.heartbeatCallback=e}flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(e=>e()),this.sendBuffer=[])}_makeRef(){let e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}_leaveOpenTopic(e){let n=this.channels.find(n=>n.topic===e&&(n._isJoined()||n._isJoining()));n&&(this.log("transport",`leaving duplicate topic "${e}"`),n.unsubscribe())}_remove(e){this.channels=this.channels.filter(n=>n.topic!==e.topic)}setupConnection(){this.conn&&(this.conn.binaryType="arraybuffer",this.conn.onopen=()=>this._onConnOpen(),this.conn.onerror=e=>this._onConnError(e),this.conn.onmessage=e=>this._onConnMessage(e),this.conn.onclose=e=>this._onConnClose(e))}_onConnMessage(e){this.decode(e.data,e=>{let{topic:n,event:t,payload:r,ref:o}=e;"phoenix"===n&&"phx_reply"===t&&this.heartbeatCallback("ok"==e.payload.status?"ok":"error"),o&&o===this.pendingHeartbeatRef&&(this.pendingHeartbeatRef=null),this.log("receive",`${r.status||""} ${n} ${t} ${o&&"("+o+")"||""}`,r),Array.from(this.channels).filter(e=>e._isMember(n)).forEach(e=>e._trigger(t,r,o)),this.stateChangeCallbacks.message.forEach(n=>n(e))})}_onConnOpen(){this.log("transport",`connected to ${this.endpointURL()}`),this.flushSendBuffer(),this.reconnectTimer.reset(),this.worker?this.workerRef||this._startWorkerHeartbeat():this._startHeartbeat(),this.stateChangeCallbacks.open.forEach(e=>e())}_startHeartbeat(){this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(()=>this.sendHeartbeat(),this.heartbeatIntervalMs)}_startWorkerHeartbeat(){this.workerUrl?this.log("worker",`starting worker for from ${this.workerUrl}`):this.log("worker","starting default worker");const e=this._workerObjectUrl(this.workerUrl);this.workerRef=new Worker(e),this.workerRef.onerror=e=>{this.log("worker","worker error",e.message),this.workerRef.terminate()},this.workerRef.onmessage=e=>{"keepAlive"===e.data.event&&this.sendHeartbeat()},this.workerRef.postMessage({event:"start",interval:this.heartbeatIntervalMs})}_onConnClose(e){this.log("transport","close",e),this._triggerChanError(),this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(n=>n(e))}_onConnError(e){this.log("transport",`${e}`),this._triggerChanError(),this.stateChangeCallbacks.error.forEach(n=>n(e))}_triggerChanError(){this.channels.forEach(e=>e._trigger(L.error))}_appendParams(e,n){if(0===Object.keys(n).length)return e;const t=e.match(/\?/)?"&":"?";return`${e}${t}${new URLSearchParams(n)}`}_workerObjectUrl(e){let n;if(e)n=e;else{const e=new Blob(['\n  addEventListener("message", (e) => {\n    if (e.data.event === "start") {\n      setInterval(() => postMessage({ event: "keepAlive" }), e.data.interval);\n    }\n  });'],{type:"application/javascript"});n=URL.createObjectURL(e)}return n}}class ce extends Error{constructor(e){super(e),this.__isStorageError=!0,this.name="StorageError"}}function ue(e){return"object"==typeof e&&null!==e&&"__isStorageError"in e}class de extends ce{constructor(e,n){super(e),this.name="StorageApiError",this.status=n}toJSON(){return{name:this.name,message:this.message,status:this.status}}}class Ae extends ce{constructor(e,n){super(e),this.name="StorageUnknownError",this.originalError=n}}const fe=e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(t.bind(t,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)},pe=e=>{if(Array.isArray(e))return e.map(e=>pe(e));if("function"==typeof e||e!==Object(e))return e;const n={};return Object.entries(e).forEach(([e,t])=>{const r=e.replace(/([-_][a-z])/gi,e=>e.toUpperCase().replace(/[-_]/g,""));n[r]=pe(t)}),n};var he=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(a,s)}l((r=r.apply(e,n||[])).next())})};const ge=e=>e.msg||e.message||e.error_description||e.error||JSON.stringify(e),me=(e,n,r)=>he(void 0,void 0,void 0,function*(){const o=yield(i=void 0,a=void 0,s=void 0,l=function*(){return"undefined"==typeof Response?(yield Promise.resolve().then(t.bind(t,907))).Response:Response},new(s||(s=Promise))(function(e,n){function t(e){try{o(l.next(e))}catch(e){n(e)}}function r(e){try{o(l.throw(e))}catch(e){n(e)}}function o(n){var o;n.done?e(n.value):(o=n.value,o instanceof s?o:new s(function(e){e(o)})).then(t,r)}o((l=l.apply(i,a||[])).next())}));var i,a,s,l;e instanceof o&&!(null==r?void 0:r.noResolveJson)?e.json().then(t=>{n(new de(ge(t),e.status||500))}).catch(e=>{n(new Ae(ge(e),e))}):n(new Ae(ge(e),e))});function be(e,n,t,r,o,i){return he(this,void 0,void 0,function*(){return new Promise((a,s)=>{e(t,((e,n,t,r)=>{const o={method:e,headers:(null==n?void 0:n.headers)||{}};return"GET"===e?o:(o.headers=Object.assign({"Content-Type":"application/json"},null==n?void 0:n.headers),r&&(o.body=JSON.stringify(r)),Object.assign(Object.assign({},o),t))})(n,r,o,i)).then(e=>{if(!e.ok)throw e;return(null==r?void 0:r.noResolveJson)?e:e.json()}).then(e=>a(e)).catch(e=>me(e,s,r))})})}function xe(e,n,t,r){return he(this,void 0,void 0,function*(){return be(e,"GET",n,t,r)})}function ye(e,n,t,r,o){return he(this,void 0,void 0,function*(){return be(e,"POST",n,r,o,t)})}function ve(e,n,t,r,o){return he(this,void 0,void 0,function*(){return be(e,"DELETE",n,r,o,t)})}var Ce=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(a,s)}l((r=r.apply(e,n||[])).next())})};const Ee={limit:100,offset:0,sortBy:{column:"name",order:"asc"}},Be={cacheControl:"3600",contentType:"text/plain;charset=UTF-8",upsert:!1};class we{constructor(e,n={},t,r){this.url=e,this.headers=n,this.bucketId=t,this.fetch=fe(r)}uploadOrUpdate(e,n,t,r){return Ce(this,void 0,void 0,function*(){try{let o;const i=Object.assign(Object.assign({},Be),r);let a=Object.assign(Object.assign({},this.headers),"POST"===e&&{"x-upsert":String(i.upsert)});const s=i.metadata;"undefined"!=typeof Blob&&t instanceof Blob?(o=new FormData,o.append("cacheControl",i.cacheControl),s&&o.append("metadata",this.encodeMetadata(s)),o.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(o=t,o.append("cacheControl",i.cacheControl),s&&o.append("metadata",this.encodeMetadata(s))):(o=t,a["cache-control"]=`max-age=${i.cacheControl}`,a["content-type"]=i.contentType,s&&(a["x-metadata"]=this.toBase64(this.encodeMetadata(s)))),(null==r?void 0:r.headers)&&(a=Object.assign(Object.assign({},a),r.headers));const l=this._removeEmptyFolders(n),c=this._getFinalPath(l),u=yield this.fetch(`${this.url}/object/${c}`,Object.assign({method:e,body:o,headers:a},(null==i?void 0:i.duplex)?{duplex:i.duplex}:{})),d=yield u.json();return u.ok?{data:{path:l,id:d.Id,fullPath:d.Key},error:null}:{data:null,error:d}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}upload(e,n,t){return Ce(this,void 0,void 0,function*(){return this.uploadOrUpdate("POST",e,n,t)})}uploadToSignedUrl(e,n,t,r){return Ce(this,void 0,void 0,function*(){const o=this._removeEmptyFolders(e),i=this._getFinalPath(o),a=new URL(this.url+`/object/upload/sign/${i}`);a.searchParams.set("token",n);try{let e;const n=Object.assign({upsert:Be.upsert},r),i=Object.assign(Object.assign({},this.headers),{"x-upsert":String(n.upsert)});"undefined"!=typeof Blob&&t instanceof Blob?(e=new FormData,e.append("cacheControl",n.cacheControl),e.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(e=t,e.append("cacheControl",n.cacheControl)):(e=t,i["cache-control"]=`max-age=${n.cacheControl}`,i["content-type"]=n.contentType);const s=yield this.fetch(a.toString(),{method:"PUT",body:e,headers:i}),l=yield s.json();return s.ok?{data:{path:o,fullPath:l.Key},error:null}:{data:null,error:l}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}createSignedUploadUrl(e,n){return Ce(this,void 0,void 0,function*(){try{let t=this._getFinalPath(e);const r=Object.assign({},this.headers);(null==n?void 0:n.upsert)&&(r["x-upsert"]="true");const o=yield ye(this.fetch,`${this.url}/object/upload/sign/${t}`,{},{headers:r}),i=new URL(this.url+o.url),a=i.searchParams.get("token");if(!a)throw new ce("No token returned by API");return{data:{signedUrl:i.toString(),path:e,token:a},error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}update(e,n,t){return Ce(this,void 0,void 0,function*(){return this.uploadOrUpdate("PUT",e,n,t)})}move(e,n,t){return Ce(this,void 0,void 0,function*(){try{return{data:yield ye(this.fetch,`${this.url}/object/move`,{bucketId:this.bucketId,sourceKey:e,destinationKey:n,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}copy(e,n,t){return Ce(this,void 0,void 0,function*(){try{return{data:{path:(yield ye(this.fetch,`${this.url}/object/copy`,{bucketId:this.bucketId,sourceKey:e,destinationKey:n,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers})).Key},error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}createSignedUrl(e,n,t){return Ce(this,void 0,void 0,function*(){try{let r=this._getFinalPath(e),o=yield ye(this.fetch,`${this.url}/object/sign/${r}`,Object.assign({expiresIn:n},(null==t?void 0:t.transform)?{transform:t.transform}:{}),{headers:this.headers});const i=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return o={signedUrl:encodeURI(`${this.url}${o.signedURL}${i}`)},{data:o,error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}createSignedUrls(e,n,t){return Ce(this,void 0,void 0,function*(){try{const r=yield ye(this.fetch,`${this.url}/object/sign/${this.bucketId}`,{expiresIn:n,paths:e},{headers:this.headers}),o=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return{data:r.map(e=>Object.assign(Object.assign({},e),{signedUrl:e.signedURL?encodeURI(`${this.url}${e.signedURL}${o}`):null})),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}download(e,n){return Ce(this,void 0,void 0,function*(){const t=void 0!==(null==n?void 0:n.transform)?"render/image/authenticated":"object",r=this.transformOptsToQueryString((null==n?void 0:n.transform)||{}),o=r?`?${r}`:"";try{const n=this._getFinalPath(e),r=yield xe(this.fetch,`${this.url}/${t}/${n}${o}`,{headers:this.headers,noResolveJson:!0});return{data:yield r.blob(),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}info(e){return Ce(this,void 0,void 0,function*(){const n=this._getFinalPath(e);try{const e=yield xe(this.fetch,`${this.url}/object/info/${n}`,{headers:this.headers});return{data:pe(e),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}exists(e){return Ce(this,void 0,void 0,function*(){const n=this._getFinalPath(e);try{return yield function(e,n,t){return he(this,void 0,void 0,function*(){return be(e,"HEAD",n,Object.assign(Object.assign({},t),{noResolveJson:!0}),undefined)})}(this.fetch,`${this.url}/object/${n}`,{headers:this.headers}),{data:!0,error:null}}catch(e){if(ue(e)&&e instanceof Ae){const n=e.originalError;if([400,404].includes(null==n?void 0:n.status))return{data:!1,error:e}}throw e}})}getPublicUrl(e,n){const t=this._getFinalPath(e),r=[],o=(null==n?void 0:n.download)?`download=${!0===n.download?"":n.download}`:"";""!==o&&r.push(o);const i=void 0!==(null==n?void 0:n.transform)?"render/image":"object",a=this.transformOptsToQueryString((null==n?void 0:n.transform)||{});""!==a&&r.push(a);let s=r.join("&");return""!==s&&(s=`?${s}`),{data:{publicUrl:encodeURI(`${this.url}/${i}/public/${t}${s}`)}}}remove(e){return Ce(this,void 0,void 0,function*(){try{return{data:yield ve(this.fetch,`${this.url}/object/${this.bucketId}`,{prefixes:e},{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}list(e,n,t){return Ce(this,void 0,void 0,function*(){try{const r=Object.assign(Object.assign(Object.assign({},Ee),n),{prefix:e||""});return{data:yield ye(this.fetch,`${this.url}/object/list/${this.bucketId}`,r,{headers:this.headers},t),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}encodeMetadata(e){return JSON.stringify(e)}toBase64(e){return"undefined"!=typeof Buffer?Buffer.from(e).toString("base64"):btoa(e)}_getFinalPath(e){return`${this.bucketId}/${e}`}_removeEmptyFolders(e){return e.replace(/^\/|\/$/g,"").replace(/\/+/g,"/")}transformOptsToQueryString(e){const n=[];return e.width&&n.push(`width=${e.width}`),e.height&&n.push(`height=${e.height}`),e.resize&&n.push(`resize=${e.resize}`),e.format&&n.push(`format=${e.format}`),e.quality&&n.push(`quality=${e.quality}`),n.join("&")}}const ke={"X-Client-Info":"storage-js/2.7.1"};var Se=function(e,n,t,r){return new(t||(t=Promise))(function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(a,s)}l((r=r.apply(e,n||[])).next())})};class je{constructor(e,n={},t){this.url=e,this.headers=Object.assign(Object.assign({},ke),n),this.fetch=fe(t)}listBuckets(){return Se(this,void 0,void 0,function*(){try{return{data:yield xe(this.fetch,`${this.url}/bucket`,{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}getBucket(e){return Se(this,void 0,void 0,function*(){try{return{data:yield xe(this.fetch,`${this.url}/bucket/${e}`,{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}createBucket(e,n={public:!1}){return Se(this,void 0,void 0,function*(){try{return{data:yield ye(this.fetch,`${this.url}/bucket`,{id:e,name:e,public:n.public,file_size_limit:n.fileSizeLimit,allowed_mime_types:n.allowedMimeTypes},{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}updateBucket(e,n){return Se(this,void 0,void 0,function*(){try{const t=yield function(e,n,t,r){return he(this,void 0,void 0,function*(){return be(e,"PUT",n,r,undefined,t)})}(this.fetch,`${this.url}/bucket/${e}`,{id:e,name:e,public:n.public,file_size_limit:n.fileSizeLimit,allowed_mime_types:n.allowedMimeTypes},{headers:this.headers});return{data:t,error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}emptyBucket(e){return Se(this,void 0,void 0,function*(){try{return{data:yield ye(this.fetch,`${this.url}/bucket/${e}/empty`,{},{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}deleteBucket(e){return Se(this,void 0,void 0,function*(){try{return{data:yield ve(this.fetch,`${this.url}/bucket/${e}`,{},{headers:this.headers}),error:null}}catch(e){if(ue(e))return{data:null,error:e};throw e}})}}class _e extends je{constructor(e,n={},t){super(e,n,t)}from(e){return new we(this.url,this.headers,e,this.fetch)}}let Ne="";Ne="undefined"!=typeof Deno?"deno":"undefined"!=typeof document?"web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?"react-native":"node";const Te={headers:{"X-Client-Info":`supabase-js-${Ne}/2.50.3`}},ze={schema:"public"},Oe={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},Pe={};var Ie=t(907);const Re=e=>{let n;return n=e||("undefined"==typeof fetch?Ie.default:fetch),(...e)=>n(...e)},Le=(e,n,t)=>{const r=Re(t),o="undefined"==typeof Headers?Ie.Headers:Headers;return(t,i)=>{return a=void 0,s=void 0,c=function*(){var a;const s=null!==(a=yield n())&&void 0!==a?a:e;let l=new o(null==i?void 0:i.headers);return l.has("apikey")||l.set("apikey",e),l.has("Authorization")||l.set("Authorization",`Bearer ${s}`),r(t,Object.assign(Object.assign({},i),{headers:l}))},new((l=void 0)||(l=Promise))(function(e,n){function t(e){try{o(c.next(e))}catch(e){n(e)}}function r(e){try{o(c.throw(e))}catch(e){n(e)}}function o(n){var o;n.done?e(n.value):(o=n.value,o instanceof l?o:new l(function(e){e(o)})).then(t,r)}o((c=c.apply(a,s||[])).next())});var a,s,l,c}};const De="2.70.0",Me=3e4,Ue={"X-Client-Info":`gotrue-js/${De}`},Ke="X-Supabase-Api-Version",$e=Date.parse("2024-01-01T00:00:00.0Z"),Fe="2024-01-01",qe=/^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;class Ye extends Error{constructor(e,n,t){super(e),this.__isAuthError=!0,this.name="AuthError",this.status=n,this.code=t}}function We(e){return"object"==typeof e&&null!==e&&"__isAuthError"in e}class Ge extends Ye{constructor(e,n,t){super(e,n,t),this.name="AuthApiError",this.status=n,this.code=t}}class Qe extends Ye{constructor(e,n){super(e),this.name="AuthUnknownError",this.originalError=n}}class Ve extends Ye{constructor(e,n,t,r){super(e,t,r),this.name=n,this.status=t}}class He extends Ve{constructor(){super("Auth session missing!","AuthSessionMissingError",400,void 0)}}class Ze extends Ve{constructor(){super("Auth session or user missing","AuthInvalidTokenResponseError",500,void 0)}}class Xe extends Ve{constructor(e){super(e,"AuthInvalidCredentialsError",400,void 0)}}class Je extends Ve{constructor(e,n=null){super(e,"AuthImplicitGrantRedirectError",500,void 0),this.details=null,this.details=n}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class en extends Ve{constructor(e,n=null){super(e,"AuthPKCEGrantCodeExchangeError",500,void 0),this.details=null,this.details=n}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class nn extends Ve{constructor(e,n){super(e,"AuthRetryableFetchError",n,void 0)}}function tn(e){return We(e)&&"AuthRetryableFetchError"===e.name}class rn extends Ve{constructor(e,n,t){super(e,"AuthWeakPasswordError",n,"weak_password"),this.reasons=t}}class on extends Ve{constructor(e){super(e,"AuthInvalidJwtError",400,"invalid_jwt")}}const an="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".split(""),sn=" \t\n\r=".split(""),ln=(()=>{const e=new Array(128);for(let n=0;n<e.length;n+=1)e[n]=-1;for(let n=0;n<sn.length;n+=1)e[sn[n].charCodeAt(0)]=-2;for(let n=0;n<an.length;n+=1)e[an[n].charCodeAt(0)]=n;return e})();function cn(e,n,t){if(null!==e)for(n.queue=n.queue<<8|e,n.queuedBits+=8;n.queuedBits>=6;){const e=n.queue>>n.queuedBits-6&63;t(an[e]),n.queuedBits-=6}else if(n.queuedBits>0)for(n.queue=n.queue<<6-n.queuedBits,n.queuedBits=6;n.queuedBits>=6;){const e=n.queue>>n.queuedBits-6&63;t(an[e]),n.queuedBits-=6}}function un(e,n,t){const r=ln[e];if(!(r>-1)){if(-2===r)return;throw new Error(`Invalid Base64-URL character "${String.fromCharCode(e)}"`)}for(n.queue=n.queue<<6|r,n.queuedBits+=6;n.queuedBits>=8;)t(n.queue>>n.queuedBits-8&255),n.queuedBits-=8}function dn(e){const n=[],t=e=>{n.push(String.fromCodePoint(e))},r={utf8seq:0,codepoint:0},o={queue:0,queuedBits:0},i=e=>{!function(e,n,t){if(0===n.utf8seq){if(e<=127)return void t(e);for(let t=1;t<6;t+=1)if(!(e>>7-t&1)){n.utf8seq=t;break}if(2===n.utf8seq)n.codepoint=31&e;else if(3===n.utf8seq)n.codepoint=15&e;else{if(4!==n.utf8seq)throw new Error("Invalid UTF-8 sequence");n.codepoint=7&e}n.utf8seq-=1}else if(n.utf8seq>0){if(e<=127)throw new Error("Invalid UTF-8 sequence");n.codepoint=n.codepoint<<6|63&e,n.utf8seq-=1,0===n.utf8seq&&t(n.codepoint)}}(e,r,t)};for(let n=0;n<e.length;n+=1)un(e.charCodeAt(n),o,i);return n.join("")}function An(e,n){if(!(e<=127)){if(e<=2047)return n(192|e>>6),void n(128|63&e);if(e<=65535)return n(224|e>>12),n(128|e>>6&63),void n(128|63&e);if(e<=1114111)return n(240|e>>18),n(128|e>>12&63),n(128|e>>6&63),void n(128|63&e);throw new Error(`Unrecognized Unicode codepoint: ${e.toString(16)}`)}n(e)}function fn(e){const n=[],t={queue:0,queuedBits:0},r=e=>{n.push(e)};for(let n=0;n<e.length;n+=1)un(e.charCodeAt(n),t,r);return new Uint8Array(n)}function pn(e){const n=[],t={queue:0,queuedBits:0},r=e=>{n.push(e)};return e.forEach(e=>cn(e,t,r)),cn(null,t,r),n.join("")}const hn=()=>"undefined"!=typeof window&&"undefined"!=typeof document,gn={tested:!1,writable:!1},mn=()=>{if(!hn())return!1;try{if("object"!=typeof globalThis.localStorage)return!1}catch(e){return!1}if(gn.tested)return gn.writable;const e=`lswt-${Math.random()}${Math.random()}`;try{globalThis.localStorage.setItem(e,e),globalThis.localStorage.removeItem(e),gn.tested=!0,gn.writable=!0}catch(e){gn.tested=!0,gn.writable=!1}return gn.writable},bn=e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(t.bind(t,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)},xn=async(e,n,t)=>{await e.setItem(n,JSON.stringify(t))},yn=async(e,n)=>{const t=await e.getItem(n);if(!t)return null;try{return JSON.parse(t)}catch(e){return t}},vn=async(e,n)=>{await e.removeItem(n)};class Cn{constructor(){this.promise=new Cn.promiseConstructor((e,n)=>{this.resolve=e,this.reject=n})}}function En(e){const n=e.split(".");if(3!==n.length)throw new on("Invalid JWT structure");for(let e=0;e<n.length;e++)if(!qe.test(n[e]))throw new on("JWT not in base64url format");return{header:JSON.parse(dn(n[0])),payload:JSON.parse(dn(n[1])),signature:fn(n[2]),raw:{header:n[0],payload:n[1]}}}function Bn(e){return("0"+e.toString(16)).substr(-2)}async function wn(e,n,t=!1){const r=function(){const e=new Uint32Array(56);if("undefined"==typeof crypto){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",n=e.length;let t="";for(let r=0;r<56;r++)t+=e.charAt(Math.floor(Math.random()*n));return t}return crypto.getRandomValues(e),Array.from(e,Bn).join("")}();let o=r;t&&(o+="/PASSWORD_RECOVERY"),await xn(e,`${n}-code-verifier`,o);const i=await async function(e){if("undefined"==typeof crypto||void 0===crypto.subtle||"undefined"==typeof TextEncoder)return console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256."),e;const n=await async function(e){const n=(new TextEncoder).encode(e),t=await crypto.subtle.digest("SHA-256",n),r=new Uint8Array(t);return Array.from(r).map(e=>String.fromCharCode(e)).join("")}(e);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}(r);return[i,r===i?"plain":"s256"]}Cn.promiseConstructor=Promise;const kn=/^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i,Sn=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;function jn(e){if(!Sn.test(e))throw new Error("@supabase/auth-js: Expected parameter to be UUID but is not")}const _n=e=>e.msg||e.message||e.error_description||e.error||JSON.stringify(e),Nn=[502,503,504];async function Tn(e){var n,t;if(!("object"==typeof(t=e)&&null!==t&&"status"in t&&"ok"in t&&"json"in t&&"function"==typeof t.json))throw new nn(_n(e),0);if(Nn.includes(e.status))throw new nn(_n(e),e.status);let r,o;try{r=await e.json()}catch(e){throw new Qe(_n(e),e)}const i=function(e){const n=e.headers.get(Ke);if(!n)return null;if(!n.match(kn))return null;try{return new Date(`${n}T00:00:00.0Z`)}catch(e){return null}}(e);if(i&&i.getTime()>=$e&&"object"==typeof r&&r&&"string"==typeof r.code?o=r.code:"object"==typeof r&&r&&"string"==typeof r.error_code&&(o=r.error_code),o){if("weak_password"===o)throw new rn(_n(r),e.status,(null===(n=r.weak_password)||void 0===n?void 0:n.reasons)||[]);if("session_not_found"===o)throw new He}else if("object"==typeof r&&r&&"object"==typeof r.weak_password&&r.weak_password&&Array.isArray(r.weak_password.reasons)&&r.weak_password.reasons.length&&r.weak_password.reasons.reduce((e,n)=>e&&"string"==typeof n,!0))throw new rn(_n(r),e.status,r.weak_password.reasons);throw new Ge(_n(r),e.status||500,o)}async function zn(e,n,t,r){var o;const i=Object.assign({},null==r?void 0:r.headers);i[Ke]||(i[Ke]=Fe),(null==r?void 0:r.jwt)&&(i.Authorization=`Bearer ${r.jwt}`);const a=null!==(o=null==r?void 0:r.query)&&void 0!==o?o:{};(null==r?void 0:r.redirectTo)&&(a.redirect_to=r.redirectTo);const s=Object.keys(a).length?"?"+new URLSearchParams(a).toString():"",l=await async function(e,n,t,r,o,i){const a=((e,n,t,r)=>{const o={method:e,headers:(null==n?void 0:n.headers)||{}};return"GET"===e?o:(o.headers=Object.assign({"Content-Type":"application/json;charset=UTF-8"},null==n?void 0:n.headers),o.body=JSON.stringify(r),Object.assign(Object.assign({},o),t))})(n,r,{},i);let s;try{s=await e(t,Object.assign({},a))}catch(e){throw console.error(e),new nn(_n(e),0)}if(s.ok||await Tn(s),null==r?void 0:r.noResolveJson)return s;try{return await s.json()}catch(e){await Tn(e)}}(e,n,t+s,{headers:i,noResolveJson:null==r?void 0:r.noResolveJson},0,null==r?void 0:r.body);return(null==r?void 0:r.xform)?null==r?void 0:r.xform(l):{data:Object.assign({},l),error:null}}function On(e){var n;let t=null;var r;return function(e){return e.access_token&&e.refresh_token&&e.expires_in}(e)&&(t=Object.assign({},e),e.expires_at||(t.expires_at=(r=e.expires_in,Math.round(Date.now()/1e3)+r))),{data:{session:t,user:null!==(n=e.user)&&void 0!==n?n:e},error:null}}function Pn(e){const n=On(e);return!n.error&&e.weak_password&&"object"==typeof e.weak_password&&Array.isArray(e.weak_password.reasons)&&e.weak_password.reasons.length&&e.weak_password.message&&"string"==typeof e.weak_password.message&&e.weak_password.reasons.reduce((e,n)=>e&&"string"==typeof n,!0)&&(n.data.weak_password=e.weak_password),n}function In(e){var n;return{data:{user:null!==(n=e.user)&&void 0!==n?n:e},error:null}}function Rn(e){return{data:e,error:null}}function Ln(e){const{action_link:n,email_otp:t,hashed_token:r,redirect_to:o,verification_type:i}=e,a=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]])}return t}(e,["action_link","email_otp","hashed_token","redirect_to","verification_type"]);return{data:{properties:{action_link:n,email_otp:t,hashed_token:r,redirect_to:o,verification_type:i},user:Object.assign({},a)},error:null}}function Dn(e){return e}const Mn=["global","local","others"];class Un{constructor({url:e="",headers:n={},fetch:t}){this.url=e,this.headers=n,this.fetch=bn(t),this.mfa={listFactors:this._listFactors.bind(this),deleteFactor:this._deleteFactor.bind(this)}}async signOut(e,n=Mn[0]){if(Mn.indexOf(n)<0)throw new Error(`@supabase/auth-js: Parameter scope must be one of ${Mn.join(", ")}`);try{return await zn(this.fetch,"POST",`${this.url}/logout?scope=${n}`,{headers:this.headers,jwt:e,noResolveJson:!0}),{data:null,error:null}}catch(e){if(We(e))return{data:null,error:e};throw e}}async inviteUserByEmail(e,n={}){try{return await zn(this.fetch,"POST",`${this.url}/invite`,{body:{email:e,data:n.data},headers:this.headers,redirectTo:n.redirectTo,xform:In})}catch(e){if(We(e))return{data:{user:null},error:e};throw e}}async generateLink(e){try{const{options:n}=e,t=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]])}return t}(e,["options"]),r=Object.assign(Object.assign({},t),n);return"newEmail"in t&&(r.new_email=null==t?void 0:t.newEmail,delete r.newEmail),await zn(this.fetch,"POST",`${this.url}/admin/generate_link`,{body:r,headers:this.headers,xform:Ln,redirectTo:null==n?void 0:n.redirectTo})}catch(e){if(We(e))return{data:{properties:null,user:null},error:e};throw e}}async createUser(e){try{return await zn(this.fetch,"POST",`${this.url}/admin/users`,{body:e,headers:this.headers,xform:In})}catch(e){if(We(e))return{data:{user:null},error:e};throw e}}async listUsers(e){var n,t,r,o,i,a,s;try{const l={nextPage:null,lastPage:0,total:0},c=await zn(this.fetch,"GET",`${this.url}/admin/users`,{headers:this.headers,noResolveJson:!0,query:{page:null!==(t=null===(n=null==e?void 0:e.page)||void 0===n?void 0:n.toString())&&void 0!==t?t:"",per_page:null!==(o=null===(r=null==e?void 0:e.perPage)||void 0===r?void 0:r.toString())&&void 0!==o?o:""},xform:Dn});if(c.error)throw c.error;const u=await c.json(),d=null!==(i=c.headers.get("x-total-count"))&&void 0!==i?i:0,A=null!==(s=null===(a=c.headers.get("link"))||void 0===a?void 0:a.split(","))&&void 0!==s?s:[];return A.length>0&&(A.forEach(e=>{const n=parseInt(e.split(";")[0].split("=")[1].substring(0,1)),t=JSON.parse(e.split(";")[1].split("=")[1]);l[`${t}Page`]=n}),l.total=parseInt(d)),{data:Object.assign(Object.assign({},u),l),error:null}}catch(e){if(We(e))return{data:{users:[]},error:e};throw e}}async getUserById(e){jn(e);try{return await zn(this.fetch,"GET",`${this.url}/admin/users/${e}`,{headers:this.headers,xform:In})}catch(e){if(We(e))return{data:{user:null},error:e};throw e}}async updateUserById(e,n){jn(e);try{return await zn(this.fetch,"PUT",`${this.url}/admin/users/${e}`,{body:n,headers:this.headers,xform:In})}catch(e){if(We(e))return{data:{user:null},error:e};throw e}}async deleteUser(e,n=!1){jn(e);try{return await zn(this.fetch,"DELETE",`${this.url}/admin/users/${e}`,{headers:this.headers,body:{should_soft_delete:n},xform:In})}catch(e){if(We(e))return{data:{user:null},error:e};throw e}}async _listFactors(e){jn(e.userId);try{const{data:n,error:t}=await zn(this.fetch,"GET",`${this.url}/admin/users/${e.userId}/factors`,{headers:this.headers,xform:e=>({data:{factors:e},error:null})});return{data:n,error:t}}catch(e){if(We(e))return{data:null,error:e};throw e}}async _deleteFactor(e){jn(e.userId),jn(e.id);try{return{data:await zn(this.fetch,"DELETE",`${this.url}/admin/users/${e.userId}/factors/${e.id}`,{headers:this.headers}),error:null}}catch(e){if(We(e))return{data:null,error:e};throw e}}}const Kn={getItem:e=>mn()?globalThis.localStorage.getItem(e):null,setItem:(e,n)=>{mn()&&globalThis.localStorage.setItem(e,n)},removeItem:e=>{mn()&&globalThis.localStorage.removeItem(e)}};function $n(e={}){return{getItem:n=>e[n]||null,setItem:(n,t)=>{e[n]=t},removeItem:n=>{delete e[n]}}}const Fn=!!(globalThis&&mn()&&globalThis.localStorage&&"true"===globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug"));class qn extends Error{constructor(e){super(e),this.isAcquireTimeout=!0}}class Yn extends qn{}async function Wn(e,n,t){Fn&&console.log("@supabase/gotrue-js: navigatorLock: acquire lock",e,n);const r=new globalThis.AbortController;return n>0&&setTimeout(()=>{r.abort(),Fn&&console.log("@supabase/gotrue-js: navigatorLock acquire timed out",e)},n),await Promise.resolve().then(()=>globalThis.navigator.locks.request(e,0===n?{mode:"exclusive",ifAvailable:!0}:{mode:"exclusive",signal:r.signal},async r=>{if(!r){if(0===n)throw Fn&&console.log("@supabase/gotrue-js: navigatorLock: not immediately available",e),new Yn(`Acquiring an exclusive Navigator LockManager lock "${e}" immediately failed`);if(Fn)try{const e=await globalThis.navigator.locks.query();console.log("@supabase/gotrue-js: Navigator LockManager state",JSON.stringify(e,null,"  "))}catch(e){console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state",e)}return console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"),await t()}Fn&&console.log("@supabase/gotrue-js: navigatorLock: acquired",e,r.name);try{return await t()}finally{Fn&&console.log("@supabase/gotrue-js: navigatorLock: released",e,r.name)}}))}!function(){if("object"!=typeof globalThis)try{Object.defineProperty(Object.prototype,"__magic__",{get:function(){return this},configurable:!0}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__}catch(e){"undefined"!=typeof self&&(self.globalThis=self)}}();const Gn={url:"http://localhost:9999",storageKey:"supabase.auth.token",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,headers:Ue,flowType:"implicit",debug:!1,hasCustomAuthorizationHeader:!1};async function Qn(e,n,t){return await t()}class Vn{constructor(e){var n,t;this.memoryStorage=null,this.stateChangeEmitters=new Map,this.autoRefreshTicker=null,this.visibilityChangedCallback=null,this.refreshingDeferred=null,this.initializePromise=null,this.detectSessionInUrl=!0,this.hasCustomAuthorizationHeader=!1,this.suppressGetSessionWarning=!1,this.lockAcquired=!1,this.pendingInLock=[],this.broadcastChannel=null,this.logger=console.log,this.instanceID=Vn.nextInstanceID,Vn.nextInstanceID+=1,this.instanceID>0&&hn()&&console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");const r=Object.assign(Object.assign({},Gn),e);if(this.logDebugMessages=!!r.debug,"function"==typeof r.debug&&(this.logger=r.debug),this.persistSession=r.persistSession,this.storageKey=r.storageKey,this.autoRefreshToken=r.autoRefreshToken,this.admin=new Un({url:r.url,headers:r.headers,fetch:r.fetch}),this.url=r.url,this.headers=r.headers,this.fetch=bn(r.fetch),this.lock=r.lock||Qn,this.detectSessionInUrl=r.detectSessionInUrl,this.flowType=r.flowType,this.hasCustomAuthorizationHeader=r.hasCustomAuthorizationHeader,r.lock?this.lock=r.lock:hn()&&(null===(n=null===globalThis||void 0===globalThis?void 0:globalThis.navigator)||void 0===n?void 0:n.locks)?this.lock=Wn:this.lock=Qn,this.jwks={keys:[]},this.jwks_cached_at=Number.MIN_SAFE_INTEGER,this.mfa={verify:this._verify.bind(this),enroll:this._enroll.bind(this),unenroll:this._unenroll.bind(this),challenge:this._challenge.bind(this),listFactors:this._listFactors.bind(this),challengeAndVerify:this._challengeAndVerify.bind(this),getAuthenticatorAssuranceLevel:this._getAuthenticatorAssuranceLevel.bind(this)},this.persistSession?r.storage?this.storage=r.storage:mn()?this.storage=Kn:(this.memoryStorage={},this.storage=$n(this.memoryStorage)):(this.memoryStorage={},this.storage=$n(this.memoryStorage)),hn()&&globalThis.BroadcastChannel&&this.persistSession&&this.storageKey){try{this.broadcastChannel=new globalThis.BroadcastChannel(this.storageKey)}catch(e){console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available",e)}null===(t=this.broadcastChannel)||void 0===t||t.addEventListener("message",async e=>{this._debug("received broadcast notification from other tab or client",e),await this._notifyAllSubscribers(e.data.event,e.data.session,!1)})}this.initialize()}_debug(...e){return this.logDebugMessages&&this.logger(`GoTrueClient@${this.instanceID} (${De}) ${(new Date).toISOString()}`,...e),this}async initialize(){return this.initializePromise||(this.initializePromise=(async()=>await this._acquireLock(-1,async()=>await this._initialize()))()),await this.initializePromise}async _initialize(){var e;try{const n=function(e){const n={},t=new URL(e);if(t.hash&&"#"===t.hash[0])try{new URLSearchParams(t.hash.substring(1)).forEach((e,t)=>{n[t]=e})}catch(e){}return t.searchParams.forEach((e,t)=>{n[t]=e}),n}(window.location.href);let t="none";if(this._isImplicitGrantCallback(n)?t="implicit":await this._isPKCECallback(n)&&(t="pkce"),hn()&&this.detectSessionInUrl&&"none"!==t){const{data:r,error:o}=await this._getSessionFromURL(n,t);if(o){if(this._debug("#_initialize()","error detecting session from URL",o),function(e){return We(e)&&"AuthImplicitGrantRedirectError"===e.name}(o)){const n=null===(e=o.details)||void 0===e?void 0:e.code;if("identity_already_exists"===n||"identity_not_found"===n||"single_identity_not_deletable"===n)return{error:o}}return await this._removeSession(),{error:o}}const{session:i,redirectType:a}=r;return this._debug("#_initialize()","detected session in URL",i,"redirect type",a),await this._saveSession(i),setTimeout(async()=>{"recovery"===a?await this._notifyAllSubscribers("PASSWORD_RECOVERY",i):await this._notifyAllSubscribers("SIGNED_IN",i)},0),{error:null}}return await this._recoverAndRefresh(),{error:null}}catch(e){return We(e)?{error:e}:{error:new Qe("Unexpected error during initialization",e)}}finally{await this._handleVisibilityChange(),this._debug("#_initialize()","end")}}async signInAnonymously(e){var n,t,r;try{const o=await zn(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{data:null!==(t=null===(n=null==e?void 0:e.options)||void 0===n?void 0:n.data)&&void 0!==t?t:{},gotrue_meta_security:{captcha_token:null===(r=null==e?void 0:e.options)||void 0===r?void 0:r.captchaToken}},xform:On}),{data:i,error:a}=o;if(a||!i)return{data:{user:null,session:null},error:a};const s=i.session,l=i.user;return i.session&&(await this._saveSession(i.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async signUp(e){var n,t,r;try{let o;if("email"in e){const{email:t,password:r,options:i}=e;let a=null,s=null;"pkce"===this.flowType&&([a,s]=await wn(this.storage,this.storageKey)),o=await zn(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,redirectTo:null==i?void 0:i.emailRedirectTo,body:{email:t,password:r,data:null!==(n=null==i?void 0:i.data)&&void 0!==n?n:{},gotrue_meta_security:{captcha_token:null==i?void 0:i.captchaToken},code_challenge:a,code_challenge_method:s},xform:On})}else{if(!("phone"in e))throw new Xe("You must provide either an email or phone number and a password");{const{phone:n,password:i,options:a}=e;o=await zn(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{phone:n,password:i,data:null!==(t=null==a?void 0:a.data)&&void 0!==t?t:{},channel:null!==(r=null==a?void 0:a.channel)&&void 0!==r?r:"sms",gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:On})}}const{data:i,error:a}=o;if(a||!i)return{data:{user:null,session:null},error:a};const s=i.session,l=i.user;return i.session&&(await this._saveSession(i.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithPassword(e){try{let n;if("email"in e){const{email:t,password:r,options:o}=e;n=await zn(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{email:t,password:r,gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken}},xform:Pn})}else{if(!("phone"in e))throw new Xe("You must provide either an email or phone number and a password");{const{phone:t,password:r,options:o}=e;n=await zn(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{phone:t,password:r,gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken}},xform:Pn})}}const{data:t,error:r}=n;return r?{data:{user:null,session:null},error:r}:t&&t.session&&t.user?(t.session&&(await this._saveSession(t.session),await this._notifyAllSubscribers("SIGNED_IN",t.session)),{data:Object.assign({user:t.user,session:t.session},t.weak_password?{weakPassword:t.weak_password}:null),error:r}):{data:{user:null,session:null},error:new Ze}}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithOAuth(e){var n,t,r,o;return await this._handleProviderSignIn(e.provider,{redirectTo:null===(n=e.options)||void 0===n?void 0:n.redirectTo,scopes:null===(t=e.options)||void 0===t?void 0:t.scopes,queryParams:null===(r=e.options)||void 0===r?void 0:r.queryParams,skipBrowserRedirect:null===(o=e.options)||void 0===o?void 0:o.skipBrowserRedirect})}async exchangeCodeForSession(e){return await this.initializePromise,this._acquireLock(-1,async()=>this._exchangeCodeForSession(e))}async signInWithWeb3(e){const{chain:n}=e;if("solana"===n)return await this.signInWithSolana(e);throw new Error(`@supabase/auth-js: Unsupported chain "${n}"`)}async signInWithSolana(e){var n,t,r,o,i,a,s,l,c,u,d,A;let f,p;if("message"in e)f=e.message,p=e.signature;else{const{chain:d,wallet:A,statement:h,options:g}=e;let m;if(hn())if("object"==typeof A)m=A;else{const e=window;if(!("solana"in e)||"object"!=typeof e.solana||!("signIn"in e.solana&&"function"==typeof e.solana.signIn||"signMessage"in e.solana&&"function"==typeof e.solana.signMessage))throw new Error("@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.");m=e.solana}else{if("object"!=typeof A||!(null==g?void 0:g.url))throw new Error("@supabase/auth-js: Both wallet and url must be specified in non-browser environments.");m=A}const b=new URL(null!==(n=null==g?void 0:g.url)&&void 0!==n?n:window.location.href);if("signIn"in m&&m.signIn){const e=await m.signIn(Object.assign(Object.assign(Object.assign({issuedAt:(new Date).toISOString()},null==g?void 0:g.signInWithSolana),{version:"1",domain:b.host,uri:b.href}),h?{statement:h}:null));let n;if(Array.isArray(e)&&e[0]&&"object"==typeof e[0])n=e[0];else{if(!(e&&"object"==typeof e&&"signedMessage"in e&&"signature"in e))throw new Error("@supabase/auth-js: Wallet method signIn() returned unrecognized value");n=e}if(!("signedMessage"in n&&"signature"in n&&("string"==typeof n.signedMessage||n.signedMessage instanceof Uint8Array)&&n.signature instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields");f="string"==typeof n.signedMessage?n.signedMessage:(new TextDecoder).decode(n.signedMessage),p=n.signature}else{if(!("signMessage"in m&&"function"==typeof m.signMessage&&"publicKey"in m&&"object"==typeof m&&m.publicKey&&"toBase58"in m.publicKey&&"function"==typeof m.publicKey.toBase58))throw new Error("@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API");f=[`${b.host} wants you to sign in with your Solana account:`,m.publicKey.toBase58(),...h?["",h,""]:[""],"Version: 1",`URI: ${b.href}`,`Issued At: ${null!==(r=null===(t=null==g?void 0:g.signInWithSolana)||void 0===t?void 0:t.issuedAt)&&void 0!==r?r:(new Date).toISOString()}`,...(null===(o=null==g?void 0:g.signInWithSolana)||void 0===o?void 0:o.notBefore)?[`Not Before: ${g.signInWithSolana.notBefore}`]:[],...(null===(i=null==g?void 0:g.signInWithSolana)||void 0===i?void 0:i.expirationTime)?[`Expiration Time: ${g.signInWithSolana.expirationTime}`]:[],...(null===(a=null==g?void 0:g.signInWithSolana)||void 0===a?void 0:a.chainId)?[`Chain ID: ${g.signInWithSolana.chainId}`]:[],...(null===(s=null==g?void 0:g.signInWithSolana)||void 0===s?void 0:s.nonce)?[`Nonce: ${g.signInWithSolana.nonce}`]:[],...(null===(l=null==g?void 0:g.signInWithSolana)||void 0===l?void 0:l.requestId)?[`Request ID: ${g.signInWithSolana.requestId}`]:[],...(null===(u=null===(c=null==g?void 0:g.signInWithSolana)||void 0===c?void 0:c.resources)||void 0===u?void 0:u.length)?["Resources",...g.signInWithSolana.resources.map(e=>`- ${e}`)]:[]].join("\n");const e=await m.signMessage((new TextEncoder).encode(f),"utf8");if(!(e&&e instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet signMessage() API returned an recognized value");p=e}}try{const{data:n,error:t}=await zn(this.fetch,"POST",`${this.url}/token?grant_type=web3`,{headers:this.headers,body:Object.assign({chain:"solana",message:f,signature:pn(p)},(null===(d=e.options)||void 0===d?void 0:d.captchaToken)?{gotrue_meta_security:{captcha_token:null===(A=e.options)||void 0===A?void 0:A.captchaToken}}:null),xform:On});if(t)throw t;return n&&n.session&&n.user?(n.session&&(await this._saveSession(n.session),await this._notifyAllSubscribers("SIGNED_IN",n.session)),{data:Object.assign({},n),error:t}):{data:{user:null,session:null},error:new Ze}}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async _exchangeCodeForSession(e){const n=await yn(this.storage,`${this.storageKey}-code-verifier`),[t,r]=(null!=n?n:"").split("/");try{const{data:n,error:o}=await zn(this.fetch,"POST",`${this.url}/token?grant_type=pkce`,{headers:this.headers,body:{auth_code:e,code_verifier:t},xform:On});if(await vn(this.storage,`${this.storageKey}-code-verifier`),o)throw o;return n&&n.session&&n.user?(n.session&&(await this._saveSession(n.session),await this._notifyAllSubscribers("SIGNED_IN",n.session)),{data:Object.assign(Object.assign({},n),{redirectType:null!=r?r:null}),error:o}):{data:{user:null,session:null,redirectType:null},error:new Ze}}catch(e){if(We(e))return{data:{user:null,session:null,redirectType:null},error:e};throw e}}async signInWithIdToken(e){try{const{options:n,provider:t,token:r,access_token:o,nonce:i}=e,a=await zn(this.fetch,"POST",`${this.url}/token?grant_type=id_token`,{headers:this.headers,body:{provider:t,id_token:r,access_token:o,nonce:i,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken}},xform:On}),{data:s,error:l}=a;return l?{data:{user:null,session:null},error:l}:s&&s.session&&s.user?(s.session&&(await this._saveSession(s.session),await this._notifyAllSubscribers("SIGNED_IN",s.session)),{data:s,error:l}):{data:{user:null,session:null},error:new Ze}}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithOtp(e){var n,t,r,o,i;try{if("email"in e){const{email:r,options:o}=e;let i=null,a=null;"pkce"===this.flowType&&([i,a]=await wn(this.storage,this.storageKey));const{error:s}=await zn(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{email:r,data:null!==(n=null==o?void 0:o.data)&&void 0!==n?n:{},create_user:null===(t=null==o?void 0:o.shouldCreateUser)||void 0===t||t,gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken},code_challenge:i,code_challenge_method:a},redirectTo:null==o?void 0:o.emailRedirectTo});return{data:{user:null,session:null},error:s}}if("phone"in e){const{phone:n,options:t}=e,{data:a,error:s}=await zn(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{phone:n,data:null!==(r=null==t?void 0:t.data)&&void 0!==r?r:{},create_user:null===(o=null==t?void 0:t.shouldCreateUser)||void 0===o||o,gotrue_meta_security:{captcha_token:null==t?void 0:t.captchaToken},channel:null!==(i=null==t?void 0:t.channel)&&void 0!==i?i:"sms"}});return{data:{user:null,session:null,messageId:null==a?void 0:a.message_id},error:s}}throw new Xe("You must provide either an email or phone number.")}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async verifyOtp(e){var n,t;try{let r,o;"options"in e&&(r=null===(n=e.options)||void 0===n?void 0:n.redirectTo,o=null===(t=e.options)||void 0===t?void 0:t.captchaToken);const{data:i,error:a}=await zn(this.fetch,"POST",`${this.url}/verify`,{headers:this.headers,body:Object.assign(Object.assign({},e),{gotrue_meta_security:{captcha_token:o}}),redirectTo:r,xform:On});if(a)throw a;if(!i)throw new Error("An error occurred on token verification.");const s=i.session,l=i.user;return(null==s?void 0:s.access_token)&&(await this._saveSession(s),await this._notifyAllSubscribers("recovery"==e.type?"PASSWORD_RECOVERY":"SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithSSO(e){var n,t,r;try{let o=null,i=null;return"pkce"===this.flowType&&([o,i]=await wn(this.storage,this.storageKey)),await zn(this.fetch,"POST",`${this.url}/sso`,{body:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},"providerId"in e?{provider_id:e.providerId}:null),"domain"in e?{domain:e.domain}:null),{redirect_to:null!==(t=null===(n=e.options)||void 0===n?void 0:n.redirectTo)&&void 0!==t?t:void 0}),(null===(r=null==e?void 0:e.options)||void 0===r?void 0:r.captchaToken)?{gotrue_meta_security:{captcha_token:e.options.captchaToken}}:null),{skip_http_redirect:!0,code_challenge:o,code_challenge_method:i}),headers:this.headers,xform:Rn})}catch(e){if(We(e))return{data:null,error:e};throw e}}async reauthenticate(){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._reauthenticate())}async _reauthenticate(){try{return await this._useSession(async e=>{const{data:{session:n},error:t}=e;if(t)throw t;if(!n)throw new He;const{error:r}=await zn(this.fetch,"GET",`${this.url}/reauthenticate`,{headers:this.headers,jwt:n.access_token});return{data:{user:null,session:null},error:r}})}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async resend(e){try{const n=`${this.url}/resend`;if("email"in e){const{email:t,type:r,options:o}=e,{error:i}=await zn(this.fetch,"POST",n,{headers:this.headers,body:{email:t,type:r,gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken}},redirectTo:null==o?void 0:o.emailRedirectTo});return{data:{user:null,session:null},error:i}}if("phone"in e){const{phone:t,type:r,options:o}=e,{data:i,error:a}=await zn(this.fetch,"POST",n,{headers:this.headers,body:{phone:t,type:r,gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken}}});return{data:{user:null,session:null,messageId:null==i?void 0:i.message_id},error:a}}throw new Xe("You must provide either an email or phone number and a type")}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async getSession(){return await this.initializePromise,await this._acquireLock(-1,async()=>this._useSession(async e=>e))}async _acquireLock(e,n){this._debug("#_acquireLock","begin",e);try{if(this.lockAcquired){const e=this.pendingInLock.length?this.pendingInLock[this.pendingInLock.length-1]:Promise.resolve(),t=(async()=>(await e,await n()))();return this.pendingInLock.push((async()=>{try{await t}catch(e){}})()),t}return await this.lock(`lock:${this.storageKey}`,e,async()=>{this._debug("#_acquireLock","lock acquired for storage key",this.storageKey);try{this.lockAcquired=!0;const e=n();for(this.pendingInLock.push((async()=>{try{await e}catch(e){}})()),await e;this.pendingInLock.length;){const e=[...this.pendingInLock];await Promise.all(e),this.pendingInLock.splice(0,e.length)}return await e}finally{this._debug("#_acquireLock","lock released for storage key",this.storageKey),this.lockAcquired=!1}})}finally{this._debug("#_acquireLock","end")}}async _useSession(e){this._debug("#_useSession","begin");try{const n=await this.__loadSession();return await e(n)}finally{this._debug("#_useSession","end")}}async __loadSession(){this._debug("#__loadSession()","begin"),this.lockAcquired||this._debug("#__loadSession()","used outside of an acquired lock!",(new Error).stack);try{let e=null;const n=await yn(this.storage,this.storageKey);if(this._debug("#getSession()","session from storage",n),null!==n&&(this._isValidSession(n)?e=n:(this._debug("#getSession()","session from storage is not valid"),await this._removeSession())),!e)return{data:{session:null},error:null};const t=!!e.expires_at&&1e3*e.expires_at-Date.now()<9e4;if(this._debug("#__loadSession()",`session has${t?"":" not"} expired`,"expires_at",e.expires_at),!t){if(this.storage.isServer){let n=this.suppressGetSessionWarning;e=new Proxy(e,{get:(e,t,r)=>(n||"user"!==t||(console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."),n=!0,this.suppressGetSessionWarning=!0),Reflect.get(e,t,r))})}return{data:{session:e},error:null}}const{session:r,error:o}=await this._callRefreshToken(e.refresh_token);return o?{data:{session:null},error:o}:{data:{session:r},error:null}}finally{this._debug("#__loadSession()","end")}}async getUser(e){return e?await this._getUser(e):(await this.initializePromise,await this._acquireLock(-1,async()=>await this._getUser()))}async _getUser(e){try{return e?await zn(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:e,xform:In}):await this._useSession(async e=>{var n,t,r;const{data:o,error:i}=e;if(i)throw i;return(null===(n=o.session)||void 0===n?void 0:n.access_token)||this.hasCustomAuthorizationHeader?await zn(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:null!==(r=null===(t=o.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0,xform:In}):{data:{user:null},error:new He}})}catch(e){if(We(e))return function(e){return We(e)&&"AuthSessionMissingError"===e.name}(e)&&(await this._removeSession(),await vn(this.storage,`${this.storageKey}-code-verifier`)),{data:{user:null},error:e};throw e}}async updateUser(e,n={}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._updateUser(e,n))}async _updateUser(e,n={}){try{return await this._useSession(async t=>{const{data:r,error:o}=t;if(o)throw o;if(!r.session)throw new He;const i=r.session;let a=null,s=null;"pkce"===this.flowType&&null!=e.email&&([a,s]=await wn(this.storage,this.storageKey));const{data:l,error:c}=await zn(this.fetch,"PUT",`${this.url}/user`,{headers:this.headers,redirectTo:null==n?void 0:n.emailRedirectTo,body:Object.assign(Object.assign({},e),{code_challenge:a,code_challenge_method:s}),jwt:i.access_token,xform:In});if(c)throw c;return i.user=l.user,await this._saveSession(i),await this._notifyAllSubscribers("USER_UPDATED",i),{data:{user:i.user},error:null}})}catch(e){if(We(e))return{data:{user:null},error:e};throw e}}async setSession(e){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._setSession(e))}async _setSession(e){try{if(!e.access_token||!e.refresh_token)throw new He;const n=Date.now()/1e3;let t=n,r=!0,o=null;const{payload:i}=En(e.access_token);if(i.exp&&(t=i.exp,r=t<=n),r){const{session:n,error:t}=await this._callRefreshToken(e.refresh_token);if(t)return{data:{user:null,session:null},error:t};if(!n)return{data:{user:null,session:null},error:null};o=n}else{const{data:r,error:i}=await this._getUser(e.access_token);if(i)throw i;o={access_token:e.access_token,refresh_token:e.refresh_token,user:r.user,token_type:"bearer",expires_in:t-n,expires_at:t},await this._saveSession(o),await this._notifyAllSubscribers("SIGNED_IN",o)}return{data:{user:o.user,session:o},error:null}}catch(e){if(We(e))return{data:{session:null,user:null},error:e};throw e}}async refreshSession(e){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._refreshSession(e))}async _refreshSession(e){try{return await this._useSession(async n=>{var t;if(!e){const{data:r,error:o}=n;if(o)throw o;e=null!==(t=r.session)&&void 0!==t?t:void 0}if(!(null==e?void 0:e.refresh_token))throw new He;const{session:r,error:o}=await this._callRefreshToken(e.refresh_token);return o?{data:{user:null,session:null},error:o}:r?{data:{user:r.user,session:r},error:null}:{data:{user:null,session:null},error:null}})}catch(e){if(We(e))return{data:{user:null,session:null},error:e};throw e}}async _getSessionFromURL(e,n){try{if(!hn())throw new Je("No browser detected.");if(e.error||e.error_description||e.error_code)throw new Je(e.error_description||"Error in URL with unspecified error_description",{error:e.error||"unspecified_error",code:e.error_code||"unspecified_code"});switch(n){case"implicit":if("pkce"===this.flowType)throw new en("Not a valid PKCE flow url.");break;case"pkce":if("implicit"===this.flowType)throw new Je("Not a valid implicit grant flow url.")}if("pkce"===n){if(this._debug("#_initialize()","begin","is PKCE flow",!0),!e.code)throw new en("No code detected.");const{data:n,error:t}=await this._exchangeCodeForSession(e.code);if(t)throw t;const r=new URL(window.location.href);return r.searchParams.delete("code"),window.history.replaceState(window.history.state,"",r.toString()),{data:{session:n.session,redirectType:null},error:null}}const{provider_token:t,provider_refresh_token:r,access_token:o,refresh_token:i,expires_in:a,expires_at:s,token_type:l}=e;if(!(o&&a&&i&&l))throw new Je("No session defined in URL");const c=Math.round(Date.now()/1e3),u=parseInt(a);let d=c+u;s&&(d=parseInt(s));const A=d-c;1e3*A<=Me&&console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${A}s, should have been closer to ${u}s`);const f=d-u;c-f>=120?console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale",f,d,c):c-f<0&&console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew",f,d,c);const{data:p,error:h}=await this._getUser(o);if(h)throw h;const g={provider_token:t,provider_refresh_token:r,access_token:o,expires_in:u,expires_at:d,refresh_token:i,token_type:l,user:p.user};return window.location.hash="",this._debug("#_getSessionFromURL()","clearing window.location.hash"),{data:{session:g,redirectType:e.type},error:null}}catch(e){if(We(e))return{data:{session:null,redirectType:null},error:e};throw e}}_isImplicitGrantCallback(e){return Boolean(e.access_token||e.error_description)}async _isPKCECallback(e){const n=await yn(this.storage,`${this.storageKey}-code-verifier`);return!(!e.code||!n)}async signOut(e={scope:"global"}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._signOut(e))}async _signOut({scope:e}={scope:"global"}){return await this._useSession(async n=>{var t;const{data:r,error:o}=n;if(o)return{error:o};const i=null===(t=r.session)||void 0===t?void 0:t.access_token;if(i){const{error:n}=await this.admin.signOut(i,e);if(n&&(!function(e){return We(e)&&"AuthApiError"===e.name}(n)||404!==n.status&&401!==n.status&&403!==n.status))return{error:n}}return"others"!==e&&(await this._removeSession(),await vn(this.storage,`${this.storageKey}-code-verifier`)),{error:null}})}onAuthStateChange(e){const n="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const n=16*Math.random()|0;return("x"==e?n:3&n|8).toString(16)}),t={id:n,callback:e,unsubscribe:()=>{this._debug("#unsubscribe()","state change callback with id removed",n),this.stateChangeEmitters.delete(n)}};return this._debug("#onAuthStateChange()","registered callback with id",n),this.stateChangeEmitters.set(n,t),(async()=>{await this.initializePromise,await this._acquireLock(-1,async()=>{this._emitInitialSession(n)})})(),{data:{subscription:t}}}async _emitInitialSession(e){return await this._useSession(async n=>{var t,r;try{const{data:{session:r},error:o}=n;if(o)throw o;await(null===(t=this.stateChangeEmitters.get(e))||void 0===t?void 0:t.callback("INITIAL_SESSION",r)),this._debug("INITIAL_SESSION","callback id",e,"session",r)}catch(n){await(null===(r=this.stateChangeEmitters.get(e))||void 0===r?void 0:r.callback("INITIAL_SESSION",null)),this._debug("INITIAL_SESSION","callback id",e,"error",n),console.error(n)}})}async resetPasswordForEmail(e,n={}){let t=null,r=null;"pkce"===this.flowType&&([t,r]=await wn(this.storage,this.storageKey,!0));try{return await zn(this.fetch,"POST",`${this.url}/recover`,{body:{email:e,code_challenge:t,code_challenge_method:r,gotrue_meta_security:{captcha_token:n.captchaToken}},headers:this.headers,redirectTo:n.redirectTo})}catch(e){if(We(e))return{data:null,error:e};throw e}}async getUserIdentities(){var e;try{const{data:n,error:t}=await this.getUser();if(t)throw t;return{data:{identities:null!==(e=n.user.identities)&&void 0!==e?e:[]},error:null}}catch(e){if(We(e))return{data:null,error:e};throw e}}async linkIdentity(e){var n;try{const{data:t,error:r}=await this._useSession(async n=>{var t,r,o,i,a;const{data:s,error:l}=n;if(l)throw l;const c=await this._getUrlForProvider(`${this.url}/user/identities/authorize`,e.provider,{redirectTo:null===(t=e.options)||void 0===t?void 0:t.redirectTo,scopes:null===(r=e.options)||void 0===r?void 0:r.scopes,queryParams:null===(o=e.options)||void 0===o?void 0:o.queryParams,skipBrowserRedirect:!0});return await zn(this.fetch,"GET",c,{headers:this.headers,jwt:null!==(a=null===(i=s.session)||void 0===i?void 0:i.access_token)&&void 0!==a?a:void 0})});if(r)throw r;return hn()&&!(null===(n=e.options)||void 0===n?void 0:n.skipBrowserRedirect)&&window.location.assign(null==t?void 0:t.url),{data:{provider:e.provider,url:null==t?void 0:t.url},error:null}}catch(n){if(We(n))return{data:{provider:e.provider,url:null},error:n};throw n}}async unlinkIdentity(e){try{return await this._useSession(async n=>{var t,r;const{data:o,error:i}=n;if(i)throw i;return await zn(this.fetch,"DELETE",`${this.url}/user/identities/${e.identity_id}`,{headers:this.headers,jwt:null!==(r=null===(t=o.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0})})}catch(e){if(We(e))return{data:null,error:e};throw e}}async _refreshAccessToken(e){const n=`#_refreshAccessToken(${e.substring(0,5)}...)`;this._debug(n,"begin");try{const o=Date.now();return await(t=async t=>(t>0&&await async function(e){return await new Promise(n=>{setTimeout(()=>n(null),e)})}(200*Math.pow(2,t-1)),this._debug(n,"refreshing attempt",t),await zn(this.fetch,"POST",`${this.url}/token?grant_type=refresh_token`,{body:{refresh_token:e},headers:this.headers,xform:On})),r=(e,n)=>{const t=200*Math.pow(2,e);return n&&tn(n)&&Date.now()+t-o<Me},new Promise((e,n)=>{(async()=>{for(let o=0;o<1/0;o++)try{const n=await t(o);if(!r(o,null))return void e(n)}catch(e){if(!r(o,e))return void n(e)}})()}))}catch(e){if(this._debug(n,"error",e),We(e))return{data:{session:null,user:null},error:e};throw e}finally{this._debug(n,"end")}var t,r}_isValidSession(e){return"object"==typeof e&&null!==e&&"access_token"in e&&"refresh_token"in e&&"expires_at"in e}async _handleProviderSignIn(e,n){const t=await this._getUrlForProvider(`${this.url}/authorize`,e,{redirectTo:n.redirectTo,scopes:n.scopes,queryParams:n.queryParams});return this._debug("#_handleProviderSignIn()","provider",e,"options",n,"url",t),hn()&&!n.skipBrowserRedirect&&window.location.assign(t),{data:{provider:e,url:t},error:null}}async _recoverAndRefresh(){var e;const n="#_recoverAndRefresh()";this._debug(n,"begin");try{const t=await yn(this.storage,this.storageKey);if(this._debug(n,"session from storage",t),!this._isValidSession(t))return this._debug(n,"session is not valid"),void(null!==t&&await this._removeSession());const r=1e3*(null!==(e=t.expires_at)&&void 0!==e?e:1/0)-Date.now()<9e4;if(this._debug(n,`session has${r?"":" not"} expired with margin of 90000s`),r){if(this.autoRefreshToken&&t.refresh_token){const{error:e}=await this._callRefreshToken(t.refresh_token);e&&(console.error(e),tn(e)||(this._debug(n,"refresh failed with a non-retryable error, removing the session",e),await this._removeSession()))}}else await this._notifyAllSubscribers("SIGNED_IN",t)}catch(e){return this._debug(n,"error",e),void console.error(e)}finally{this._debug(n,"end")}}async _callRefreshToken(e){var n,t;if(!e)throw new He;if(this.refreshingDeferred)return this.refreshingDeferred.promise;const r=`#_callRefreshToken(${e.substring(0,5)}...)`;this._debug(r,"begin");try{this.refreshingDeferred=new Cn;const{data:n,error:t}=await this._refreshAccessToken(e);if(t)throw t;if(!n.session)throw new He;await this._saveSession(n.session),await this._notifyAllSubscribers("TOKEN_REFRESHED",n.session);const r={session:n.session,error:null};return this.refreshingDeferred.resolve(r),r}catch(e){if(this._debug(r,"error",e),We(e)){const t={session:null,error:e};return tn(e)||await this._removeSession(),null===(n=this.refreshingDeferred)||void 0===n||n.resolve(t),t}throw null===(t=this.refreshingDeferred)||void 0===t||t.reject(e),e}finally{this.refreshingDeferred=null,this._debug(r,"end")}}async _notifyAllSubscribers(e,n,t=!0){const r=`#_notifyAllSubscribers(${e})`;this._debug(r,"begin",n,`broadcast = ${t}`);try{this.broadcastChannel&&t&&this.broadcastChannel.postMessage({event:e,session:n});const r=[],o=Array.from(this.stateChangeEmitters.values()).map(async t=>{try{await t.callback(e,n)}catch(e){r.push(e)}});if(await Promise.all(o),r.length>0){for(let e=0;e<r.length;e+=1)console.error(r[e]);throw r[0]}}finally{this._debug(r,"end")}}async _saveSession(e){this._debug("#_saveSession()",e),this.suppressGetSessionWarning=!0,await xn(this.storage,this.storageKey,e)}async _removeSession(){this._debug("#_removeSession()"),await vn(this.storage,this.storageKey),await this._notifyAllSubscribers("SIGNED_OUT",null)}_removeVisibilityChangedCallback(){this._debug("#_removeVisibilityChangedCallback()");const e=this.visibilityChangedCallback;this.visibilityChangedCallback=null;try{e&&hn()&&(null===window||void 0===window?void 0:window.removeEventListener)&&window.removeEventListener("visibilitychange",e)}catch(e){console.error("removing visibilitychange callback failed",e)}}async _startAutoRefresh(){await this._stopAutoRefresh(),this._debug("#_startAutoRefresh()");const e=setInterval(()=>this._autoRefreshTokenTick(),Me);this.autoRefreshTicker=e,e&&"object"==typeof e&&"function"==typeof e.unref?e.unref():"undefined"!=typeof Deno&&"function"==typeof Deno.unrefTimer&&Deno.unrefTimer(e),setTimeout(async()=>{await this.initializePromise,await this._autoRefreshTokenTick()},0)}async _stopAutoRefresh(){this._debug("#_stopAutoRefresh()");const e=this.autoRefreshTicker;this.autoRefreshTicker=null,e&&clearInterval(e)}async startAutoRefresh(){this._removeVisibilityChangedCallback(),await this._startAutoRefresh()}async stopAutoRefresh(){this._removeVisibilityChangedCallback(),await this._stopAutoRefresh()}async _autoRefreshTokenTick(){this._debug("#_autoRefreshTokenTick()","begin");try{await this._acquireLock(0,async()=>{try{const e=Date.now();try{return await this._useSession(async n=>{const{data:{session:t}}=n;if(!t||!t.refresh_token||!t.expires_at)return void this._debug("#_autoRefreshTokenTick()","no session");const r=Math.floor((1e3*t.expires_at-e)/Me);this._debug("#_autoRefreshTokenTick()",`access token expires in ${r} ticks, a tick lasts 30000ms, refresh threshold is 3 ticks`),r<=3&&await this._callRefreshToken(t.refresh_token)})}catch(e){console.error("Auto refresh tick failed with error. This is likely a transient error.",e)}}finally{this._debug("#_autoRefreshTokenTick()","end")}})}catch(e){if(!(e.isAcquireTimeout||e instanceof qn))throw e;this._debug("auto refresh token tick lock not available")}}async _handleVisibilityChange(){if(this._debug("#_handleVisibilityChange()"),!hn()||!(null===window||void 0===window?void 0:window.addEventListener))return this.autoRefreshToken&&this.startAutoRefresh(),!1;try{this.visibilityChangedCallback=async()=>await this._onVisibilityChanged(!1),null===window||void 0===window||window.addEventListener("visibilitychange",this.visibilityChangedCallback),await this._onVisibilityChanged(!0)}catch(e){console.error("_handleVisibilityChange",e)}}async _onVisibilityChanged(e){const n=`#_onVisibilityChanged(${e})`;this._debug(n,"visibilityState",document.visibilityState),"visible"===document.visibilityState?(this.autoRefreshToken&&this._startAutoRefresh(),e||(await this.initializePromise,await this._acquireLock(-1,async()=>{"visible"===document.visibilityState?await this._recoverAndRefresh():this._debug(n,"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting")}))):"hidden"===document.visibilityState&&this.autoRefreshToken&&this._stopAutoRefresh()}async _getUrlForProvider(e,n,t){const r=[`provider=${encodeURIComponent(n)}`];if((null==t?void 0:t.redirectTo)&&r.push(`redirect_to=${encodeURIComponent(t.redirectTo)}`),(null==t?void 0:t.scopes)&&r.push(`scopes=${encodeURIComponent(t.scopes)}`),"pkce"===this.flowType){const[e,n]=await wn(this.storage,this.storageKey),t=new URLSearchParams({code_challenge:`${encodeURIComponent(e)}`,code_challenge_method:`${encodeURIComponent(n)}`});r.push(t.toString())}if(null==t?void 0:t.queryParams){const e=new URLSearchParams(t.queryParams);r.push(e.toString())}return(null==t?void 0:t.skipBrowserRedirect)&&r.push(`skip_http_redirect=${t.skipBrowserRedirect}`),`${e}?${r.join("&")}`}async _unenroll(e){try{return await this._useSession(async n=>{var t;const{data:r,error:o}=n;return o?{data:null,error:o}:await zn(this.fetch,"DELETE",`${this.url}/factors/${e.factorId}`,{headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(e){if(We(e))return{data:null,error:e};throw e}}async _enroll(e){try{return await this._useSession(async n=>{var t,r;const{data:o,error:i}=n;if(i)return{data:null,error:i};const a=Object.assign({friendly_name:e.friendlyName,factor_type:e.factorType},"phone"===e.factorType?{phone:e.phone}:{issuer:e.issuer}),{data:s,error:l}=await zn(this.fetch,"POST",`${this.url}/factors`,{body:a,headers:this.headers,jwt:null===(t=null==o?void 0:o.session)||void 0===t?void 0:t.access_token});return l?{data:null,error:l}:("totp"===e.factorType&&(null===(r=null==s?void 0:s.totp)||void 0===r?void 0:r.qr_code)&&(s.totp.qr_code=`data:image/svg+xml;utf-8,${s.totp.qr_code}`),{data:s,error:null})})}catch(e){if(We(e))return{data:null,error:e};throw e}}async _verify(e){return this._acquireLock(-1,async()=>{try{return await this._useSession(async n=>{var t;const{data:r,error:o}=n;if(o)return{data:null,error:o};const{data:i,error:a}=await zn(this.fetch,"POST",`${this.url}/factors/${e.factorId}/verify`,{body:{code:e.code,challenge_id:e.challengeId},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token});return a?{data:null,error:a}:(await this._saveSession(Object.assign({expires_at:Math.round(Date.now()/1e3)+i.expires_in},i)),await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED",i),{data:i,error:a})})}catch(e){if(We(e))return{data:null,error:e};throw e}})}async _challenge(e){return this._acquireLock(-1,async()=>{try{return await this._useSession(async n=>{var t;const{data:r,error:o}=n;return o?{data:null,error:o}:await zn(this.fetch,"POST",`${this.url}/factors/${e.factorId}/challenge`,{body:{channel:e.channel},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(e){if(We(e))return{data:null,error:e};throw e}})}async _challengeAndVerify(e){const{data:n,error:t}=await this._challenge({factorId:e.factorId});return t?{data:null,error:t}:await this._verify({factorId:e.factorId,challengeId:n.id,code:e.code})}async _listFactors(){const{data:{user:e},error:n}=await this.getUser();if(n)return{data:null,error:n};const t=(null==e?void 0:e.factors)||[],r=t.filter(e=>"totp"===e.factor_type&&"verified"===e.status),o=t.filter(e=>"phone"===e.factor_type&&"verified"===e.status);return{data:{all:t,totp:r,phone:o},error:null}}async _getAuthenticatorAssuranceLevel(){return this._acquireLock(-1,async()=>await this._useSession(async e=>{var n,t;const{data:{session:r},error:o}=e;if(o)return{data:null,error:o};if(!r)return{data:{currentLevel:null,nextLevel:null,currentAuthenticationMethods:[]},error:null};const{payload:i}=En(r.access_token);let a=null;i.aal&&(a=i.aal);let s=a;return(null!==(t=null===(n=r.user.factors)||void 0===n?void 0:n.filter(e=>"verified"===e.status))&&void 0!==t?t:[]).length>0&&(s="aal2"),{data:{currentLevel:a,nextLevel:s,currentAuthenticationMethods:i.amr||[]},error:null}}))}async fetchJwk(e,n={keys:[]}){let t=n.keys.find(n=>n.kid===e);if(t)return t;if(t=this.jwks.keys.find(n=>n.kid===e),t&&this.jwks_cached_at+6e5>Date.now())return t;const{data:r,error:o}=await zn(this.fetch,"GET",`${this.url}/.well-known/jwks.json`,{headers:this.headers});if(o)throw o;if(!r.keys||0===r.keys.length)throw new on("JWKS is empty");if(this.jwks=r,this.jwks_cached_at=Date.now(),t=r.keys.find(n=>n.kid===e),!t)throw new on("No matching signing key found in JWKS");return t}async getClaims(e,n={keys:[]}){try{let t=e;if(!t){const{data:e,error:n}=await this.getSession();if(n||!e.session)return{data:null,error:n};t=e.session.access_token}const{header:r,payload:o,signature:i,raw:{header:a,payload:s}}=En(t);if(function(e){if(!e)throw new Error("Missing exp claim");if(e<=Math.floor(Date.now()/1e3))throw new Error("JWT has expired")}(o.exp),!r.kid||"HS256"===r.alg||!("crypto"in globalThis)||!("subtle"in globalThis.crypto)){const{error:e}=await this.getUser(t);if(e)throw e;return{data:{claims:o,header:r,signature:i},error:null}}const l=function(e){switch(e){case"RS256":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"ES256":return{name:"ECDSA",namedCurve:"P-256",hash:{name:"SHA-256"}};default:throw new Error("Invalid alg claim")}}(r.alg),c=await this.fetchJwk(r.kid,n),u=await crypto.subtle.importKey("jwk",c,l,!0,["verify"]);if(!await crypto.subtle.verify(l,u,i,function(e){const n=[];return function(e,n){for(let t=0;t<e.length;t+=1){let r=e.charCodeAt(t);if(r>55295&&r<=56319){const n=1024*(r-55296)&65535;r=65536+(e.charCodeAt(t+1)-56320&65535|n),t+=1}An(r,n)}}(e,e=>n.push(e)),new Uint8Array(n)}(`${a}.${s}`)))throw new on("Invalid JWT signature");return{data:{claims:o,header:r,signature:i},error:null}}catch(e){if(We(e))return{data:null,error:e};throw e}}}Vn.nextInstanceID=0;const Hn=Vn;class Zn extends Hn{constructor(e){super(e)}}class Xn{constructor(e,n,t){var r,o,i;if(this.supabaseUrl=e,this.supabaseKey=n,!e)throw new Error("supabaseUrl is required.");if(!n)throw new Error("supabaseKey is required.");const a=(s=e).endsWith("/")?s:s+"/";var s;const l=new URL(a);this.realtimeUrl=new URL("realtime/v1",l),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",l),this.storageUrl=new URL("storage/v1",l),this.functionsUrl=new URL("functions/v1",l);const c=`sb-${l.hostname.split(".")[0]}-auth-token`,u=function(e,n){var t,r;const{db:o,auth:i,realtime:a,global:s}=e,{db:l,auth:c,realtime:u,global:d}=n,A={db:Object.assign(Object.assign({},l),o),auth:Object.assign(Object.assign({},c),i),realtime:Object.assign(Object.assign({},u),a),global:Object.assign(Object.assign(Object.assign({},d),s),{headers:Object.assign(Object.assign({},null!==(t=null==d?void 0:d.headers)&&void 0!==t?t:{}),null!==(r=null==s?void 0:s.headers)&&void 0!==r?r:{})}),accessToken:()=>{return e=this,n=void 0,r=function*(){return""},new((t=void 0)||(t=Promise))(function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(a,s)}l((r=r.apply(e,n||[])).next())});var e,n,t,r}};return e.accessToken?A.accessToken=e.accessToken:delete A.accessToken,A}(null!=t?t:{},{db:ze,realtime:Pe,auth:Object.assign(Object.assign({},Oe),{storageKey:c}),global:Te});this.storageKey=null!==(r=u.auth.storageKey)&&void 0!==r?r:"",this.headers=null!==(o=u.global.headers)&&void 0!==o?o:{},u.accessToken?(this.accessToken=u.accessToken,this.auth=new Proxy({},{get:(e,n)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(n)} is not possible`)}})):this.auth=this._initSupabaseAuthClient(null!==(i=u.auth)&&void 0!==i?i:{},this.headers,u.global.fetch),this.fetch=Le(n,this._getAccessToken.bind(this),u.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},u.realtime)),this.rest=new j(new URL("rest/v1",l).href,{headers:this.headers,schema:u.db.schema,fetch:this.fetch}),u.accessToken||this._listenForAuthEvents()}get functions(){return new k(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}get storage(){return new _e(this.storageUrl.href,this.headers,this.fetch)}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,n={},t={}){return this.rest.rpc(e,n,t)}channel(e,n={config:{}}){return this.realtime.channel(e,n)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,n,t,r,o,i;return t=this,r=void 0,i=function*(){if(this.accessToken)return yield this.accessToken();const{data:t}=yield this.auth.getSession();return null!==(n=null===(e=t.session)||void 0===e?void 0:e.access_token)&&void 0!==n?n:null},new((o=void 0)||(o=Promise))(function(e,n){function a(e){try{l(i.next(e))}catch(e){n(e)}}function s(e){try{l(i.throw(e))}catch(e){n(e)}}function l(n){var t;n.done?e(n.value):(t=n.value,t instanceof o?t:new o(function(e){e(t)})).then(a,s)}l((i=i.apply(t,r||[])).next())})}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:n,detectSessionInUrl:t,storage:r,storageKey:o,flowType:i,lock:a,debug:s},l,c){const u={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new Zn({url:this.authUrl.href,headers:Object.assign(Object.assign({},u),l),storageKey:o,autoRefreshToken:e,persistSession:n,detectSessionInUrl:t,storage:r,flowType:i,lock:a,debug:s,fetch:c,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new le(this.realtimeUrl.href,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},null==e?void 0:e.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((e,n)=>{this._handleTokenChanged(e,"CLIENT",null==n?void 0:n.access_token)})}_handleTokenChanged(e,n,t){"TOKEN_REFRESHED"!==e&&"SIGNED_IN"!==e||this.changedAccessToken===t?"SIGNED_OUT"===e&&(this.realtime.setAuth(),"STORAGE"==n&&this.auth.signOut(),this.changedAccessToken=void 0):this.changedAccessToken=t}}function Jn(e){return Jn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Jn(e)}function et(e,n,t){return(n=function(e){var n=function(e){if("object"!=Jn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Jn(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Jn(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function nt(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return tt(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(tt(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,tt(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,tt(d,"constructor",c),tt(c,"constructor",l),l.displayName="GeneratorFunction",tt(c,o,"GeneratorFunction"),tt(d),tt(d,o,"Generator"),tt(d,r,function(){return this}),tt(d,"toString",function(){return"[object Generator]"}),(nt=function(){return{w:i,m:A}})()}function tt(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}tt=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){tt(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},tt(e,n,t,r)}function rt(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function ot(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){rt(i,r,o,a,s,"next",e)}function s(e){rt(i,r,o,a,s,"throw",e)}a(void 0)})}}var it=((e,n,t)=>new Xn("https://tpjnyiyvpyzzbzhajbjh.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRwam55aXl2cHl6emJ6aGFqYmpoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE2NDA1NTQsImV4cCI6MjA2NzIxNjU1NH0.cflFdHytlTUA_H_AP7E3Kry9-S-xw45pIRoJQtfk4AE",t))(0,0,{auth:{storage:{getItem:function(e){return ot(nt().m(function n(){var t;return nt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,chrome.storage.local.get(e);case 1:return t=n.v,n.a(2,t[e]||null)}},n)}))()},setItem:function(e,n){return ot(nt().m(function t(){return nt().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,chrome.storage.local.set(et({},e,n));case 1:return t.a(2)}},t)}))()},removeItem:function(e){return ot(nt().m(function n(){return nt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,chrome.storage.local.remove(e);case 1:return n.a(2)}},n)}))()}},autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0}});function at(e){return at="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},at(e)}function st(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function lt(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?st(Object(t),!0).forEach(function(n){ct(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):st(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function ct(e,n,t){return(n=mt(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ut(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return dt(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(dt(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,dt(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,dt(d,"constructor",c),dt(c,"constructor",l),l.displayName="GeneratorFunction",dt(c,o,"GeneratorFunction"),dt(d),dt(d,o,"Generator"),dt(d,r,function(){return this}),dt(d,"toString",function(){return"[object Generator]"}),(ut=function(){return{w:i,m:A}})()}function dt(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}dt=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){dt(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},dt(e,n,t,r)}function At(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return ft(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ft(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ft(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function pt(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function ht(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){pt(i,r,o,a,s,"next",e)}function s(e){pt(i,r,o,a,s,"throw",e)}a(void 0)})}}function gt(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,mt(r.key),r)}}function mt(e){var n=function(e){if("object"!=at(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=at(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==at(n)?n:n+""}var bt=new(function(){return e=function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"getData",value:(B=ht(ut().m(function e(){var n,t,r,o,i,a,s,l,c,u;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(n=e.v,t=n.data,!n.error&&t.session){e.n=2;break}return e.a(2,this.getDefaultData());case 2:return r=t.session.user,console.log("Fetching data for user:",r.id),e.n=3,Promise.all([it.from("links").select("*").eq("user_id",r.id),it.from("collections").select("*").eq("user_id",r.id)]);case 3:return o=e.v,i=At(o,2),a=i[0],s=i[1],a.error&&console.error("Error fetching links:",a.error),s.error&&console.error("Error fetching collections:",s.error),l=(a.data||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,isInInbox:e.is_in_inbox||!1,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain}}),c=(s.data||[]).map(function(e){return{id:e.id,name:e.name,description:e.description,color:e.color,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at)}}),u={links:l,collections:c,categories:this.getDefaultCategories(),settings:{defaultCategory:"general",autoSummarize:!0}},console.log("Data fetched from Supabase:",u),e.a(2,u)}},e,this)})),function(){return B.apply(this,arguments)})},{key:"addLink",value:(E=ht(ut().m(function e(n){var t,r,o,i,a,s,l;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(r=e.v,o=r.data,i=null===(t=o.session)||void 0===t?void 0:t.user){e.n=2;break}return console.error("User not logged in"),e.a(2,{success:!1,error:"User not logged in."});case 2:return a={user_id:i.id,collection_id:n.collectionId||null,url:n.url,title:n.title,favicon:n.favicon,domain:n.domain,user_note:n.userNote,ai_summary:n.aiSummary,category:n.category,is_in_inbox:n.isInInbox||!1},e.n=3,it.from("links").insert(a);case 3:if(s=e.v,!(l=s.error)){e.n=4;break}return console.error("Supabase addLink error:",l),e.a(2,{success:!1,error:l.message||"Database error occurred."});case 4:return e.a(2,{success:!0})}},e)})),function(e){return E.apply(this,arguments)})},{key:"updateLink",value:(C=ht(ut().m(function e(n,t){var r,o;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("links").update(lt(lt({},t),{},{updatedAt:new Date})).eq("id",n);case 1:if(r=e.v,!(o=r.error)){e.n=2;break}throw o;case 2:return e.a(2)}},e)})),function(e,n){return C.apply(this,arguments)})},{key:"deleteLink",value:(v=ht(ut().m(function e(n){var t,r;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("links").delete().eq("id",n);case 1:if(t=e.v,!(r=t.error)){e.n=2;break}throw r;case 2:return e.a(2)}},e)})),function(e){return v.apply(this,arguments)})},{key:"addCollection",value:(y=ht(ut().m(function e(n){var t,r,o,i,a,s,l;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(r=e.v,o=r.data,i=null===(t=o.session)||void 0===t?void 0:t.user){e.n=2;break}throw new Error("User not logged in.");case 2:return a={user_id:i.id,name:n.name,description:n.description,color:n.color},e.n=3,it.from("collections").insert(a);case 3:if(s=e.v,!(l=s.error)){e.n=4;break}throw l;case 4:return e.a(2)}},e)})),function(e){return y.apply(this,arguments)})},{key:"updateCollection",value:(x=ht(ut().m(function e(n,t){var r,o;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("collections").update(lt(lt({},t),{},{updatedAt:new Date})).eq("id",n);case 1:if(r=e.v,!(o=r.error)){e.n=2;break}throw o;case 2:return e.a(2)}},e)})),function(e,n){return x.apply(this,arguments)})},{key:"deleteCollection",value:(b=ht(ut().m(function e(n){var t,r;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("collections").delete().eq("id",n);case 1:if(t=e.v,!(r=t.error)){e.n=2;break}throw r;case 2:return e.a(2)}},e)})),function(e){return b.apply(this,arguments)})},{key:"searchLinks",value:(m=ht(ut().m(function e(n){var t,r,o,i,a,s,l,c;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(r=e.v,o=r.data,i=null===(t=o.session)||void 0===t?void 0:t.user){e.n=2;break}return console.error("User not logged in"),e.a(2,[]);case 2:if(n.trim()){e.n=3;break}return e.a(2,[]);case 3:return e.p=3,e.n=4,it.rpc("search_user_links",{search_query:n.trim(),user_uuid:i.id,result_limit:50});case 4:if(a=e.v,s=a.data,!(l=a.error)){e.n=5;break}return console.error("Search error:",l),e.a(2,[]);case 5:return e.a(2,(s||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain,searchRank:e.rank,searchHeadline:e.headline}}));case 6:return e.p=6,c=e.v,console.error("Search failed:",c),e.a(2,[])}},e,null,[[3,6]])})),function(e){return m.apply(this,arguments)})},{key:"getUserTags",value:(g=ht(ut().m(function e(){var n,t,r,o,i,a,s,l;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(t=e.v,r=t.data,o=null===(n=r.session)||void 0===n?void 0:n.user){e.n=2;break}return console.error("User not logged in"),e.a(2,[]);case 2:return e.p=2,e.n=3,it.rpc("get_user_tags_with_counts",{user_uuid:o.id});case 3:if(i=e.v,a=i.data,!(s=i.error)){e.n=4;break}return console.error("Error fetching user tags:",s),e.a(2,[]);case 4:return e.a(2,(a||[]).map(function(e){return{id:e.id,name:e.name,usageCount:e.usage_count||0}}));case 5:return e.p=5,l=e.v,console.error("Failed to get user tags:",l),e.a(2,[])}},e,null,[[2,5]])})),function(){return g.apply(this,arguments)})},{key:"getLinkTags",value:(h=ht(ut().m(function e(n){var t,r,o,i;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,it.rpc("get_link_tags",{link_uuid:n});case 1:if(t=e.v,r=t.data,!(o=t.error)){e.n=2;break}return console.error("Error fetching link tags:",o),e.a(2,[]);case 2:return e.a(2,r||[]);case 3:return e.p=3,i=e.v,console.error("Failed to get link tags:",i),e.a(2,[])}},e,null,[[0,3]])})),function(e){return h.apply(this,arguments)})},{key:"addTagsToLink",value:(p=ht(ut().m(function e(n,t){var r,o,i,a,s,l,c;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(o=e.v,i=o.data,a=null===(r=i.session)||void 0===r?void 0:r.user){e.n=2;break}return e.a(2,{success:!1,error:"User not logged in."});case 2:return e.p=2,e.n=3,it.rpc("add_tags_to_link",{link_uuid:n,tag_names:t,user_uuid:a.id});case 3:if(s=e.v,!(l=s.error)){e.n=4;break}return console.error("Error adding tags to link:",l),e.a(2,{success:!1,error:l.message||"Failed to add tags."});case 4:return e.a(2,{success:!0});case 5:return e.p=5,c=e.v,console.error("Failed to add tags to link:",c),e.a(2,{success:!1,error:c.message})}},e,null,[[2,5]])})),function(e,n){return p.apply(this,arguments)})},{key:"getLinksByTag",value:(f=ht(ut().m(function e(n){var t,r,o,i,a,s,l,c;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(r=e.v,o=r.data,i=null===(t=o.session)||void 0===t?void 0:t.user){e.n=2;break}return console.error("User not logged in"),e.a(2,[]);case 2:return e.p=2,e.n=3,it.rpc("get_links_by_tag",{user_uuid:i.id,tag_name:n});case 3:if(a=e.v,s=a.data,!(l=a.error)){e.n=4;break}return console.error("Error fetching links by tag:",l),e.a(2,[]);case 4:return e.a(2,(s||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain}}));case 5:return e.p=5,c=e.v,console.error("Failed to get links by tag:",c),e.a(2,[])}},e,null,[[2,5]])})),function(e){return f.apply(this,arguments)})},{key:"cleanupUnusedTags",value:(A=ht(ut().m(function e(){var n,t,r,o,i,a,s,l;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(t=e.v,r=t.data,o=null===(n=r.session)||void 0===n?void 0:n.user){e.n=2;break}return e.a(2,0);case 2:return e.p=2,e.n=3,it.rpc("cleanup_unused_tags",{user_uuid:o.id});case 3:if(i=e.v,a=i.data,!(s=i.error)){e.n=4;break}return console.error("Error cleaning up unused tags:",s),e.a(2,0);case 4:return e.a(2,a||0);case 5:return e.p=5,l=e.v,console.error("Failed to cleanup unused tags:",l),e.a(2,0)}},e,null,[[2,5]])})),function(){return A.apply(this,arguments)})},{key:"moveToInbox",value:(d=ht(ut().m(function e(n){var t,r;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("links").update({is_in_inbox:!0,collection_id:null,updated_at:(new Date).toISOString()}).eq("id",n);case 1:if(t=e.v,!(r=t.error)){e.n=2;break}throw r;case 2:return e.a(2)}},e)})),function(e){return d.apply(this,arguments)})},{key:"moveFromInbox",value:(u=ht(ut().m(function e(n,t){var r,o;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).eq("id",n);case 1:if(r=e.v,!(o=r.error)){e.n=2;break}throw o;case 2:return e.a(2)}},e)})),function(e,n){return u.apply(this,arguments)})},{key:"getInboxLinks",value:(c=ht(ut().m(function e(){var n,t,r,o,i,a,s;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(t=e.v,r=t.data,o=null===(n=r.session)||void 0===n?void 0:n.user){e.n=2;break}return e.a(2,[]);case 2:return e.n=3,it.from("links").select("*").eq("user_id",o.id).eq("is_in_inbox",!0).order("created_at",{ascending:!1});case 3:if(i=e.v,a=i.data,!(s=i.error)){e.n=4;break}return console.error("Error fetching inbox links:",s),e.a(2,[]);case 4:return e.a(2,(a||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,isInInbox:e.is_in_inbox||!1,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain}}))}},e)})),function(){return c.apply(this,arguments)})},{key:"bulkMoveFromInbox",value:(l=ht(ut().m(function e(n,t){var r,o;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).in("id",n);case 1:if(r=e.v,!(o=r.error)){e.n=2;break}throw o;case 2:return e.a(2)}},e)})),function(e,n){return l.apply(this,arguments)})},{key:"toggleCollectionSharing",value:(s=ht(ut().m(function e(n,t){var r,o,i,a,s,l,c,u,d;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(o=e.v,i=o.data,a=null===(r=i.session)||void 0===r?void 0:r.user){e.n=2;break}return e.a(2,{success:!1,message:"User not logged in."});case 2:return e.p=2,e.n=3,it.rpc("toggle_collection_sharing",{collection_uuid:n,user_uuid:a.id,make_public:t});case 3:if(s=e.v,l=s.data,!(c=s.error)){e.n=4;break}return console.error("Error toggling collection sharing:",c),e.a(2,{success:!1,message:c.message||"Failed to update sharing settings."});case 4:return u=null==l?void 0:l[0],e.a(2,{success:(null==u?void 0:u.success)||!1,shareToken:null==u?void 0:u.share_token,message:(null==u?void 0:u.message)||"Sharing settings updated."});case 5:return e.p=5,d=e.v,console.error("Failed to toggle collection sharing:",d),e.a(2,{success:!1,message:d.message})}},e,null,[[2,5]])})),function(e,n){return s.apply(this,arguments)})},{key:"getCollectionSharingInfo",value:(a=ht(ut().m(function e(n){var t,r,o,i,a,s,l,c;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.getSession();case 1:if(r=e.v,o=r.data,i=null===(t=o.session)||void 0===t?void 0:t.user){e.n=2;break}return e.a(2,null);case 2:return e.p=2,e.n=3,it.from("collections").select("is_public, share_token, view_count").eq("id",n).eq("user_id",i.id).single();case 3:if(a=e.v,s=a.data,!(l=a.error)){e.n=4;break}return console.error("Error fetching collection sharing info:",l),e.a(2,null);case 4:return e.a(2,{isPublic:s.is_public||!1,shareToken:s.share_token,viewCount:s.view_count||0});case 5:return e.p=5,c=e.v,console.error("Failed to get collection sharing info:",c),e.a(2,null)}},e,null,[[2,5]])})),function(e){return a.apply(this,arguments)})},{key:"getDefaultCategories",value:function(){return[{id:"general",name:"General",color:"#6b7280",isDefault:!0},{id:"work",name:"Work",color:"#3b82f6"},{id:"personal",name:"Personal",color:"#10b981"},{id:"learning",name:"Learning",color:"#f59e0b"}]}},{key:"getDefaultData",value:function(){return{links:[],collections:[],categories:this.getDefaultCategories(),settings:{defaultCategory:"general",autoSummarize:!0}}}}],t=[{key:"getPublicCollection",value:(i=ht(ut().m(function e(n){var t,r,o,i,a;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,it.rpc("get_public_collection",{token:n});case 1:if(t=e.v,r=t.data,!(o=t.error)){e.n=2;break}return console.error("Error fetching public collection:",o),e.a(2,null);case 2:if(i=null==r?void 0:r[0]){e.n=3;break}return e.a(2,null);case 3:return e.a(2,{id:i.id,name:i.name,description:i.description,viewCount:i.view_count||0,createdAt:new Date(i.created_at),ownerEmail:i.owner_email});case 4:return e.p=4,a=e.v,console.error("Failed to get public collection:",a),e.a(2,null)}},e,null,[[0,4]])})),function(e){return i.apply(this,arguments)})},{key:"getPublicCollectionLinks",value:(o=ht(ut().m(function e(n){var t,r,o,i;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,it.rpc("get_public_collection_links",{token:n});case 1:if(t=e.v,r=t.data,!(o=t.error)){e.n=2;break}return console.error("Error fetching public collection links:",o),e.a(2,[]);case 2:return e.a(2,(r||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,domain:e.domain,userNote:e.user_note,aiSummary:e.ai_summary,category:e.category,createdAt:new Date(e.created_at),tags:e.tag_names||[]}}));case 3:return e.p=3,i=e.v,console.error("Failed to get public collection links:",i),e.a(2,[])}},e,null,[[0,3]])})),function(e){return o.apply(this,arguments)})},{key:"incrementViewCount",value:(r=ht(ut().m(function e(n){var t,r,o;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,it.rpc("increment_collection_views",{token:n});case 1:t=e.v,(r=t.error)&&console.error("Error incrementing view count:",r),e.n=3;break;case 2:e.p=2,o=e.v,console.error("Failed to increment view count:",o);case 3:return e.a(2)}},e,null,[[0,2]])})),function(e){return r.apply(this,arguments)})}],n&&gt(e.prototype,n),t&&gt(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n,t,r,o,i,a,s,l,c,u,d,A,f,p,h,g,m,b,x,y,v,C,E,B}());const xt=a("ExternalLink",[["path",{d:"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6",key:"a6xqqp"}],["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["line",{x1:"10",x2:"21",y1:"14",y2:"3",key:"18c3s4"}]]),yt=a("MoreHorizontal",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]),vt=a("PenLine",[["path",{d:"M12 20h9",key:"t2du7b"}],["path",{d:"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z",key:"ymcmye"}]]),Ct=a("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);var Et=t(848);function Bt(e){return function(e){if(Array.isArray(e))return St(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||kt(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function wt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||kt(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function kt(e,n){if(e){if("string"==typeof e)return St(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?St(e,n):void 0}}function St(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const jt=function(e){var n=e.selectedTags,t=e.availableTags,o=e.onTagsChange,i=e.placeholder,a=void 0===i?"Add tags...":i,s=e.maxTags,l=void 0===s?10:s,u=wt((0,r.useState)(""),2),d=u[0],f=u[1],p=wt((0,r.useState)(!1),2),h=p[0],g=p[1],m=wt((0,r.useState)(-1),2),b=m[0],x=m[1],y=(0,r.useRef)(null),v=t.filter(function(e){return e.name.toLowerCase().includes(d.toLowerCase())&&!n.find(function(n){return n.name===e.name})}).slice(0,8),C=function(e){var t;n.length>=l||n.find(function(n){return n.name===e.name})||(o([].concat(Bt(n),[e])),f(""),g(!1),x(-1),null===(t=y.current)||void 0===t||t.focus())},E=function(e){var t;o(n.filter(function(n){return n.name!==e.name})),null===(t=y.current)||void 0===t||t.focus()},B=function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]};return(0,Et.jsxs)("div",{className:"tag-input-container",children:[(0,Et.jsxs)("div",{className:"tag-input-wrapper",children:[n.map(function(e){return(0,Et.jsxs)("div",{className:"tag-chip",style:{backgroundColor:B(e.name)},children:[(0,Et.jsx)("span",{className:"tag-name",children:e.name}),(0,Et.jsx)("button",{onClick:function(){return E(e)},className:"tag-remove",type:"button",title:"Remove ".concat(e.name," tag"),"aria-label":"Remove ".concat(e.name," tag"),children:(0,Et.jsx)(A,{size:12})})]},e.name)}),(0,Et.jsx)("input",{ref:y,type:"text",value:d,onChange:function(e){var n=e.target.value;f(n),g(n.length>0),x(-1)},onKeyDown:function(e){"Enter"===e.key?(e.preventDefault(),b>=0&&v[b]?C(v[b]):d.trim()&&function(e){var t;if(!(n.length>=l||n.find(function(n){return n.name.toLowerCase()===e.toLowerCase()}))){var r={id:"",name:e.toLowerCase()};o([].concat(Bt(n),[r])),f(""),g(!1),x(-1),null===(t=y.current)||void 0===t||t.focus()}}(d.trim())):"ArrowDown"===e.key?(e.preventDefault(),x(function(e){return e<v.length-1?e+1:e})):"ArrowUp"===e.key?(e.preventDefault(),x(function(e){return e>0?e-1:-1})):"Escape"===e.key?(g(!1),x(-1)):"Backspace"===e.key&&!d&&n.length>0&&E(n[n.length-1])},onFocus:function(){return g(d.length>0)},onBlur:function(){return setTimeout(function(){return g(!1)},150)},placeholder:0===n.length?a:"",className:"tag-input",disabled:n.length>=l}),n.length<l&&(0,Et.jsx)("div",{className:"tag-input-icon",children:(0,Et.jsx)(c,{size:14})})]}),h&&v.length>0&&(0,Et.jsx)("div",{className:"tag-suggestions",children:v.map(function(e,n){return(0,Et.jsxs)("button",{onClick:function(){return function(e){C(e)}(e)},className:"tag-suggestion ".concat(n===b?"focused":""),type:"button",children:[(0,Et.jsx)("span",{className:"tag-suggestion-color",style:{backgroundColor:B(e.name)}}),(0,Et.jsx)("span",{className:"tag-suggestion-name",children:e.name}),e.usageCount&&e.usageCount>0&&(0,Et.jsxs)("span",{className:"tag-suggestion-count",children:["(",e.usageCount,")"]})]},e.id)})})]})};function _t(e){return _t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_t(e)}function Nt(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Tt(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Tt(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Tt(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Tt(d,"constructor",c),Tt(c,"constructor",l),l.displayName="GeneratorFunction",Tt(c,o,"GeneratorFunction"),Tt(d),Tt(d,o,"Generator"),Tt(d,r,function(){return this}),Tt(d,"toString",function(){return"[object Generator]"}),(Nt=function(){return{w:i,m:A}})()}function Tt(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}Tt=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){Tt(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},Tt(e,n,t,r)}function zt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function Ot(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?zt(Object(t),!0).forEach(function(n){Pt(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):zt(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function Pt(e,n,t){return(n=function(e){var n=function(e){if("object"!=_t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=_t(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_t(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function It(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function Rt(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){It(i,r,o,a,s,"next",e)}function s(e){It(i,r,o,a,s,"throw",e)}a(void 0)})}}function Lt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Dt(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Dt(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Dt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Mt=function(e){var n=e.link,t=e.collections,o=(e.onUpdate,e.onDelete),i=e.onMoveToCollection,a=e.onAddNote,s=e.onTagsUpdated,l=Lt((0,r.useState)(!1),2),c=l[0],u=l[1],d=Lt((0,r.useState)(!1),2),A=d[0],p=d[1],h=Lt((0,r.useState)(!1),2),g=h[0],m=h[1],b=Lt((0,r.useState)([]),2),y=b[0],v=b[1],C=Lt((0,r.useState)([]),2),E=C[0],B=C[1],w=Lt((0,r.useState)(!1),2),k=w[0],S=w[1];(0,r.useEffect)(function(){g?T():N()},[g,n.id]);var j,_,N=function(){var e=Rt(Nt().m(function e(){var t,r;return Nt().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.getLinkTags(n.id);case 1:t=e.v,v(t.map(function(e){return Ot(Ot({},e),{},{usageCount:0})})),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to load link tags:",r);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),T=function(){var e=Rt(Nt().m(function e(){var t,r,o,i,a;return Nt().w(function(e){for(;;)switch(e.n){case 0:return S(!0),e.p=1,e.n=2,Promise.all([bt.getLinkTags(n.id),bt.getUserTags()]);case 2:t=e.v,r=Lt(t,2),o=r[0],i=r[1],v(o.map(function(e){return Ot(Ot({},e),{},{usageCount:0})})),B(i),e.n=4;break;case 3:e.p=3,a=e.v,console.error("Failed to load tags:",a);case 4:return e.p=4,S(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),z=function(){var e=Rt(Nt().m(function e(t){var r,o,i,a;return Nt().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,r=t.map(function(e){return e.name}),e.n=1,bt.addTagsToLink(n.id,r);case 1:if(!(o=e.v).success){e.n=3;break}return v(t),e.n=2,bt.getUserTags();case 2:i=e.v,B(i),s&&s(),e.n=4;break;case 3:console.error("Failed to update tags:",o.error);case 4:e.n=6;break;case 5:e.p=5,a=e.v,console.error("Failed to update link tags:",a);case 6:return e.a(2)}},e,null,[[0,5]])}));return function(n){return e.apply(this,arguments)}}(),O=function(){chrome.tabs.create({url:n.url})},P=function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]};return(0,Et.jsxs)("div",{className:"link-card",children:[(0,Et.jsxs)("div",{className:"link-header",children:[(0,Et.jsx)("div",{className:"link-favicon",children:n.favicon?(0,Et.jsx)("img",{src:n.favicon,alt:"",width:"16",height:"16"}):(0,Et.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]}(n.domain)},children:n.domain.charAt(0).toUpperCase()})}),(0,Et.jsxs)("div",{className:"link-info",children:[(0,Et.jsx)("h3",{className:"link-title",onClick:O,title:n.title,children:n.title}),(0,Et.jsxs)("div",{className:"link-meta",children:[(0,Et.jsx)("span",{className:"link-domain",children:n.domain}),(0,Et.jsx)("span",{className:"link-date",children:(_=n.createdAt,new Date(_).toLocaleDateString("en-US",{month:"short",day:"numeric"}))})]})]}),(0,Et.jsxs)("div",{className:"link-actions",children:[(0,Et.jsx)("button",{onClick:O,className:"action-button",title:"Open link",children:(0,Et.jsx)(xt,{size:14})}),(0,Et.jsxs)("div",{className:"dropdown",children:[(0,Et.jsx)("button",{onClick:function(){return u(!c)},className:"action-button",title:"More options",children:(0,Et.jsx)(yt,{size:14})}),c&&(0,Et.jsxs)("div",{className:"dropdown-menu",children:[(0,Et.jsxs)("button",{onClick:function(){a(n),u(!1)},children:[(0,Et.jsx)(vt,{size:14}),"Edit note"]}),(0,Et.jsxs)("button",{onClick:function(){m(!g),u(!1)},children:[(0,Et.jsx)(f,{size:14}),"Edit tags"]}),(0,Et.jsxs)("button",{onClick:function(){p(!A)},children:[(0,Et.jsx)(x,{size:14}),"Move to collection"]}),(0,Et.jsxs)("button",{onClick:function(){o(n.id),u(!1)},className:"delete-action",children:[(0,Et.jsx)(Ct,{size:14}),"Delete"]})]})]})]})]}),A&&(0,Et.jsxs)("div",{className:"collections-menu",children:[(0,Et.jsx)("div",{className:"collections-header",children:"Move to:"}),t.map(function(e){return(0,Et.jsx)("button",{onClick:function(){i(n.id,e.id),p(!1),u(!1)},className:"collection-option",children:e.name},e.id)}),(0,Et.jsx)("button",{onClick:function(){i(n.id,""),p(!1),u(!1)},className:"collection-option",children:"Remove from collection"})]}),g&&(0,Et.jsxs)("div",{className:"tag-editor",children:[(0,Et.jsxs)("div",{className:"tag-editor-header",children:[(0,Et.jsx)("span",{children:"Edit Tags"}),(0,Et.jsx)("button",{onClick:function(){return m(!1)},className:"tag-editor-close",title:"Close tag editor",children:"×"})]}),k?(0,Et.jsx)("div",{className:"tag-editor-loading",children:"Loading tags..."}):(0,Et.jsx)(jt,{selectedTags:y,availableTags:E,onTagsChange:z,placeholder:"Add tags to organize this link...",maxTags:8})]}),!g&&y.length>0&&(0,Et.jsx)("div",{className:"link-tags",children:y.map(function(e){return(0,Et.jsx)("span",{className:"link-tag",style:{backgroundColor:P(e.name)},title:"Filter by ".concat(e.name),children:e.name},e.id||e.name)})}),n.userNote&&(0,Et.jsxs)("div",{className:"link-note",children:[(0,Et.jsx)("strong",{children:"Note:"})," ",n.userNote]}),n.aiSummary&&(0,Et.jsxs)("div",{className:"link-summary",children:[(0,Et.jsx)("strong",{children:"Summary:"})," ",n.aiSummary]}),(0,Et.jsx)("div",{className:"link-category",children:(0,Et.jsx)("span",{className:"category-badge",style:{backgroundColor:(j=n.category,{general:"#6b7280",work:"#3b82f6",personal:"#10b981",learning:"#f59e0b"}[j]||"#6b7280")},children:n.category})})]})},Ut=a("Folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),Kt=a("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]),$t=a("Share2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]]),Ft=a("Lock",[["rect",{width:"18",height:"11",x:"3",y:"11",rx:"2",ry:"2",key:"1w4ew1"}],["path",{d:"M7 11V7a5 5 0 0 1 10 0v4",key:"fwvmzm"}]]),qt=a("Link2",[["path",{d:"M9 17H7A5 5 0 0 1 7 7h2",key:"8i5ue5"}],["path",{d:"M15 7h2a5 5 0 1 1 0 10h-2",key:"1b9ql8"}],["line",{x1:"8",x2:"16",y1:"12",y2:"12",key:"1jonct"}]]),Yt=a("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),Wt=a("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]]),Gt=a("Eye",[["path",{d:"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z",key:"rwhkz3"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);function Qt(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Vt(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Vt(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Vt(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Vt(d,"constructor",c),Vt(c,"constructor",l),l.displayName="GeneratorFunction",Vt(c,o,"GeneratorFunction"),Vt(d),Vt(d,o,"Generator"),Vt(d,r,function(){return this}),Vt(d,"toString",function(){return"[object Generator]"}),(Qt=function(){return{w:i,m:A}})()}function Vt(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}Vt=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){Vt(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},Vt(e,n,t,r)}function Ht(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function Zt(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){Ht(i,r,o,a,s,"next",e)}function s(e){Ht(i,r,o,a,s,"throw",e)}a(void 0)})}}function Xt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Jt(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Jt(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Jt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const er=function(e){var n=e.collection,t=e.onClose,o=e.onUpdate,i=Xt((0,r.useState)(!1),2),a=i[0],s=i[1],l=Xt((0,r.useState)(""),2),c=l[0],u=l[1],d=Xt((0,r.useState)(0),2),f=d[0],p=d[1],h=Xt((0,r.useState)(!0),2),g=h[0],m=h[1],b=Xt((0,r.useState)(!1),2),x=b[0],y=b[1],v=Xt((0,r.useState)(""),2),C=v[0],E=v[1],B=Xt((0,r.useState)(!1),2),w=B[0],k=B[1];(0,r.useEffect)(function(){j()},[n.id]);var S,j=function(){var e=Zt(Qt().m(function e(){var t,r;return Qt().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.getCollectionSharingInfo(n.id);case 1:(t=e.v)&&(s(t.isPublic),u(t.shareToken||""),p(t.viewCount)),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to load sharing info:",r);case 3:return e.p=3,m(!1),e.f(3);case 4:return e.a(2)}},e,null,[[0,2,3,4]])}));return function(){return e.apply(this,arguments)}}(),_=function(){var e=Zt(Qt().m(function e(){var t;return Qt().w(function(e){for(;;)switch(e.n){case 0:return y(!0),E(""),e.p=1,e.n=2,bt.toggleCollectionSharing(n.id,!a);case 2:(t=e.v).success?(s(!a),t.shareToken&&u(t.shareToken),E(t.message),o()):E(t.message),e.n=4;break;case 3:e.p=3,e.v,E("Failed to update sharing settings");case 4:return e.p=4,y(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),N=function(){return c?"https://nest-shared.vercel.app/collection/".concat(c):""},T=function(){var e=Zt(Qt().m(function e(){var n,t;return Qt().w(function(e){for(;;)switch(e.n){case 0:if(n=N()){e.n=1;break}return e.a(2);case 1:return e.p=1,e.n=2,navigator.clipboard.writeText(n);case 2:k(!0),setTimeout(function(){return k(!1)},2e3),e.n=4;break;case 3:e.p=3,e.v,(t=document.createElement("textarea")).value=n,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),k(!0),setTimeout(function(){return k(!1)},2e3);case 4:return e.a(2)}},e,null,[[1,3]])}));return function(){return e.apply(this,arguments)}}();return g?(0,Et.jsx)("div",{className:"modal-overlay",children:(0,Et.jsxs)("div",{className:"modal share-modal",children:[(0,Et.jsxs)("div",{className:"modal-header",children:[(0,Et.jsx)("h2",{children:"Share Collection"}),(0,Et.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,Et.jsx)(A,{size:20})})]}),(0,Et.jsx)("div",{className:"modal-content",children:(0,Et.jsx)("div",{className:"loading-spinner",children:"Loading sharing settings..."})})]})}):(0,Et.jsx)("div",{className:"modal-overlay",children:(0,Et.jsxs)("div",{className:"modal share-modal",children:[(0,Et.jsxs)("div",{className:"modal-header",children:[(0,Et.jsx)("h2",{children:"Share Collection"}),(0,Et.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,Et.jsx)(A,{size:20})})]}),(0,Et.jsxs)("div",{className:"modal-content",children:[(0,Et.jsxs)("div",{className:"share-collection-info",children:[(0,Et.jsx)("h3",{className:"collection-name",children:n.name}),n.description&&(0,Et.jsx)("p",{className:"collection-description",children:n.description}),(0,Et.jsx)("div",{className:"collection-meta",children:(0,Et.jsxs)("span",{children:["Created ",(S=n.createdAt,new Date(S).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}))]})})]}),(0,Et.jsx)("div",{className:"share-toggle-section",children:(0,Et.jsxs)("div",{className:"share-toggle-header",children:[(0,Et.jsx)("div",{className:"share-status",children:a?(0,Et.jsxs)(Et.Fragment,{children:[(0,Et.jsx)(Kt,{size:20,className:"status-icon public"}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"status-title",children:"Public Collection"}),(0,Et.jsx)("div",{className:"status-subtitle",children:"Anyone with the link can view this collection"})]})]}):(0,Et.jsxs)(Et.Fragment,{children:[(0,Et.jsx)(Ft,{size:20,className:"status-icon private"}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"status-title",children:"Private Collection"}),(0,Et.jsx)("div",{className:"status-subtitle",children:"Only you can see this collection"})]})]})}),(0,Et.jsx)("button",{onClick:_,disabled:x,className:"toggle-button ".concat(a?"public":"private"),children:x?"Updating...":a?"Make Private":"Make Public"})]})}),a&&c&&(0,Et.jsxs)("div",{className:"share-link-section",children:[(0,Et.jsxs)("div",{className:"share-link-header",children:[(0,Et.jsx)(qt,{size:16}),(0,Et.jsx)("span",{children:"Share Link"})]}),(0,Et.jsxs)("div",{className:"share-link-container",children:[(0,Et.jsx)("input",{type:"text",value:N(),readOnly:!0,className:"share-link-input",title:"Share link URL","aria-label":"Share link URL"}),(0,Et.jsxs)("div",{className:"share-link-actions",children:[(0,Et.jsx)("button",{onClick:T,className:"copy-button ".concat(w?"copied":""),title:"Copy link",children:w?(0,Et.jsx)(Yt,{size:16}):(0,Et.jsx)(Wt,{size:16})}),(0,Et.jsx)("button",{onClick:function(){var e=N();e&&chrome.tabs.create({url:e})},className:"open-button",title:"Open in new tab",children:(0,Et.jsx)(xt,{size:16})})]})]}),(0,Et.jsx)("div",{className:"share-analytics",children:(0,Et.jsxs)("div",{className:"analytics-item",children:[(0,Et.jsx)(Gt,{size:16}),(0,Et.jsxs)("span",{children:[f," ",1===f?"view":"views"]})]})})]}),C&&(0,Et.jsx)("div",{className:"share-message ".concat(C.includes("error")?"error":"success"),children:C}),(0,Et.jsxs)("div",{className:"share-info-box",children:[(0,Et.jsx)("h4",{children:"About Public Collections"}),(0,Et.jsxs)("ul",{children:[(0,Et.jsx)("li",{children:"Public collections can be viewed by anyone with the link"}),(0,Et.jsx)("li",{children:"Viewers don't need an account to see your collection"}),(0,Et.jsx)("li",{children:"Links, notes, summaries, and tags are included"}),(0,Et.jsx)("li",{children:"You can make collections private at any time"}),(0,Et.jsx)("li",{children:"View counts help you track sharing analytics"})]})]})]}),(0,Et.jsx)("div",{className:"modal-footer",children:(0,Et.jsx)("button",{onClick:t,className:"modal-button secondary",children:"Close"})})]})})};function nr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return tr(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(tr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,tr(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,tr(d,"constructor",c),tr(c,"constructor",l),l.displayName="GeneratorFunction",tr(c,o,"GeneratorFunction"),tr(d),tr(d,o,"Generator"),tr(d,r,function(){return this}),tr(d,"toString",function(){return"[object Generator]"}),(nr=function(){return{w:i,m:A}})()}function tr(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}tr=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){tr(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},tr(e,n,t,r)}function rr(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function or(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return ir(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ir(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ir(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const ar=function(e){var n=e.collection,t=e.links,o=e.onUpdateLink,i=e.onDeleteLink,a=e.onAddNote,s=e.onTagsUpdated,l=e.onUpdate,c=or((0,r.useState)(!1),2),u=c[0],d=c[1],A=or((0,r.useState)(!1),2),f=A[0],g=A[1],m=function(){var e,n=(e=nr().m(function e(n,t){return nr().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,o(n,{collectionId:t||void 0});case 1:return e.a(2)}},e)}),function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){rr(i,r,o,a,s,"next",e)}function s(e){rr(i,r,o,a,s,"throw",e)}a(void 0)})});return function(e,t){return n.apply(this,arguments)}}();return(0,Et.jsxs)(Et.Fragment,{children:[(0,Et.jsxs)("div",{className:"collection-card",children:[(0,Et.jsxs)("button",{onClick:function(){return d(!u)},className:"collection-header",children:[u?(0,Et.jsx)(p,{size:16}):(0,Et.jsx)(h,{size:16}),(0,Et.jsx)(Ut,{size:16,className:"collection-icon"}),(0,Et.jsxs)("div",{className:"collection-info",children:[(0,Et.jsxs)("div",{className:"collection-name-row",children:[(0,Et.jsx)("span",{className:"collection-name",children:n.name}),n.isPublic&&(0,Et.jsx)("div",{className:"public-indicator",title:"This collection is public",children:(0,Et.jsx)(Kt,{size:12})})]}),n.description&&(0,Et.jsx)("span",{className:"collection-description",children:n.description})]}),(0,Et.jsxs)("div",{className:"collection-actions",children:[(0,Et.jsx)("span",{className:"collection-count",children:t.length}),(0,Et.jsx)("button",{onClick:function(e){e.stopPropagation(),g(!0)},className:"share-collection-button",title:"Share collection",children:(0,Et.jsx)($t,{size:14})})]})]}),u&&(0,Et.jsx)("div",{className:"collection-content",children:0===t.length?(0,Et.jsx)("div",{className:"empty-collection",children:(0,Et.jsx)("p",{children:"No links in this collection"})}):t.map(function(e){return(0,Et.jsx)(Mt,{link:e,collections:[],onUpdate:o,onDelete:i,onMoveToCollection:m,onAddNote:a,onTagsUpdated:s},e.id)})})]}),f&&(0,Et.jsx)(er,{collection:n,onClose:function(){g(!1)},onUpdate:function(){l&&l()}})]})},sr=function(e){var n,t=e.link,r=e.collections,o=e.onUpdate,i=e.onDelete,a=e.onMoveToCollection,s=e.onAddNote,l=e.onTagsUpdated;return(0,Et.jsxs)("div",{className:"search-result-card",children:[t.searchRank&&(0,Et.jsx)("div",{className:"search-rank-indicator",children:(n=t.searchRank,n?"".concat(Math.round(100*n),"% match"):"")}),t.searchHeadline&&(0,Et.jsx)("div",{className:"search-headline",dangerouslySetInnerHTML:{__html:t.searchHeadline}}),(0,Et.jsx)(Mt,{link:t,collections:r,onUpdate:o,onDelete:i,onMoveToCollection:a,onAddNote:s,onTagsUpdated:l})]})},lr=a("MoreVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]);function cr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return ur(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ur(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ur(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const dr=function(e){var n=e.link,t=e.collections,o=e.onMoveFromInbox,i=e.onDelete,a=(e.onUpdate,e.onAddNote),s=e.onTagsUpdated,l=e.isSelected,c=void 0!==l&&l,u=e.onSelect,d=cr((0,r.useState)(!1),2),p=d[0],h=d[1],g=cr((0,r.useState)(!1),2),m=g[0],y=g[1],v=cr((0,r.useState)(!1),2),C=v[0],E=v[1];return(0,Et.jsx)("div",{className:"inbox-card ".concat(c?"selected":""),onClick:function(e){!u||p||m||C||(e.preventDefault(),u(n.id))},"data-link-id":n.id,children:(0,Et.jsxs)("div",{className:"inbox-card-content",children:[(0,Et.jsxs)("div",{className:"inbox-card-header",children:[(0,Et.jsx)("div",{className:"inbox-card-checkbox",children:(0,Et.jsx)("input",{type:"checkbox",checked:c,onChange:function(){return null==u?void 0:u(n.id)},onClick:function(e){return e.stopPropagation()},"aria-label":"Select ".concat(n.title),title:"Select ".concat(n.title)})}),(0,Et.jsx)("img",{src:n.favicon||"https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=16"),alt:"favicon",className:"inbox-card-favicon",onError:function(e){e.target.src="https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=16")}}),(0,Et.jsxs)("div",{className:"inbox-card-title-section",children:[(0,Et.jsx)("h3",{className:"inbox-card-title",children:n.title}),(0,Et.jsx)("span",{className:"inbox-card-domain",children:n.domain})]}),(0,Et.jsxs)("div",{className:"inbox-card-actions",children:[(0,Et.jsx)("a",{href:n.url,target:"_blank",rel:"noopener noreferrer",className:"inbox-card-link",title:"Open link",onClick:function(e){return e.stopPropagation()},children:(0,Et.jsx)(xt,{size:14})}),(0,Et.jsxs)("div",{className:"inbox-card-menu-container",children:[(0,Et.jsx)("button",{onClick:function(e){e.stopPropagation(),h(!p)},className:"inbox-card-menu-button",title:"More options",children:(0,Et.jsx)(lr,{size:14})}),p&&(0,Et.jsxs)("div",{className:"inbox-card-menu",children:[(0,Et.jsxs)("button",{onClick:function(e){e.stopPropagation(),y(!m)},className:"inbox-card-menu-item",children:[(0,Et.jsx)(x,{size:14}),"Move to Collection"]}),(0,Et.jsxs)("button",{onClick:function(e){e.stopPropagation(),o(n.id),h(!1)},className:"inbox-card-menu-item",children:[(0,Et.jsx)(b,{size:14}),"Move to Holding Area"]}),(0,Et.jsxs)("button",{onClick:function(e){e.stopPropagation(),a(n),h(!1)},className:"inbox-card-menu-item",children:[(0,Et.jsx)(vt,{size:14}),n.userNote?"Edit Note":"Add Note"]}),(0,Et.jsxs)("button",{onClick:function(e){e.stopPropagation(),E(!C),h(!1)},className:"inbox-card-menu-item",children:[(0,Et.jsx)(f,{size:14}),"Manage Tags"]}),(0,Et.jsxs)("button",{onClick:function(e){e.stopPropagation(),confirm("Are you sure you want to delete this link?")&&i(n.id),h(!1)},className:"inbox-card-menu-item delete",children:[(0,Et.jsx)(Ct,{size:14}),"Delete"]})]}),m&&(0,Et.jsxs)("div",{className:"inbox-card-submenu",children:[(0,Et.jsxs)("div",{className:"inbox-card-submenu-header",children:[(0,Et.jsx)("span",{children:"Move to Collection"}),(0,Et.jsx)("button",{onClick:function(e){e.stopPropagation(),y(!1)},className:"inbox-card-submenu-close",title:"Close menu","aria-label":"Close menu",children:(0,Et.jsx)(A,{size:12})})]}),0===t.length?(0,Et.jsx)("div",{className:"inbox-card-submenu-empty",children:"No collections available"}):t.map(function(e){return(0,Et.jsx)("button",{onClick:function(t){var r;t.stopPropagation(),r=e.id,o(n.id,r),y(!1),h(!1)},className:"inbox-card-submenu-item",children:e.name},e.id)})]})]})]})]}),n.aiSummary&&(0,Et.jsx)("div",{className:"inbox-card-summary",children:(0,Et.jsx)("p",{children:n.aiSummary})}),n.userNote&&(0,Et.jsx)("div",{className:"inbox-card-note",children:(0,Et.jsx)("p",{children:n.userNote})}),C&&(0,Et.jsx)("div",{className:"inbox-card-tags",children:(0,Et.jsx)(jt,{linkId:n.id,onTagsUpdated:function(){s(),E(!1)},onCancel:function(){return E(!1)}})})]})})},Ar=a("Command",[["path",{d:"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3",key:"11bfej"}]]),fr=a("ArrowRight",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"m12 5 7 7-7 7",key:"xquz4c"}]]);function pr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return hr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?hr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const gr=function(e){var n=e.isOpen,t=e.onClose,o=e.links,i=e.collections,a=e.onOpenLink,l=e.onAddToCollection,u=e.onCreateCollection,A=e.onSaveCurrentPage,f=e.onAddNote,p=e.onOpenTabSync,h=pr((0,r.useState)(""),2),g=h[0],m=h[1],y=pr((0,r.useState)(0),2),v=y[0],C=y[1],E=pr((0,r.useState)([]),2),B=E[0],w=E[1],k=(0,r.useRef)(null),S=(0,r.useRef)(null),j=(0,r.useCallback)(function(e){var n=[];return n.push({id:"save-current",type:"action",title:"Save Current Page",subtitle:"Add the current browser tab to Nest",icon:(0,Et.jsx)(c,{size:16}),action:function(){A(),t()},keywords:["save","add","current","page","bookmark"]}),n.push({id:"create-collection",type:"action",title:"Create New Collection",subtitle:"Organize your links into collections",icon:(0,Et.jsx)(x,{size:16}),action:function(){u(),t()},keywords:["create","collection","folder","organize"]}),n.push({id:"tab-sync",type:"action",title:"Tab Sync Mode",subtitle:"View and save open browser tabs",icon:(0,Et.jsx)(s,{size:16}),action:function(){p(),t()},keywords:["tab","sync","browser","open","tabs","save"]}),i.forEach(function(e){var r;n.push({id:"collection-".concat(e.id),type:"collection",title:e.name,subtitle:"Collection • ".concat(o.filter(function(n){return n.collectionId===e.id}).length," links"),icon:(0,Et.jsx)(b,{size:16}),action:function(){t()},keywords:["collection",e.name.toLowerCase(),null===(r=e.description)||void 0===r?void 0:r.toLowerCase()],collection:e})}),(e.trim()?_(o,e):o.slice(0,10)).forEach(function(e){var r;n.push({id:"link-".concat(e.id),type:"link",title:e.title,subtitle:"".concat(e.domain," • ").concat(e.userNote?"Has note":"No note"),icon:(0,Et.jsx)(xt,{size:16}),action:function(){a(e.url),t()},keywords:[e.title.toLowerCase(),e.domain.toLowerCase(),e.userNote.toLowerCase(),(null===(r=e.aiSummary)||void 0===r?void 0:r.toLowerCase())||"",e.category.toLowerCase()],link:e})}),e.trim()?n.filter(function(n){var t,r;return n.title.toLowerCase().includes(e.toLowerCase())||(null===(t=n.subtitle)||void 0===t?void 0:t.toLowerCase().includes(e.toLowerCase()))||(null===(r=n.keywords)||void 0===r?void 0:r.some(function(n){return n.includes(e.toLowerCase())}))}):n.slice(0,12)},[o,i,a,l,u,A,f,p,t]),_=function(e,n){var t=n.toLowerCase();return e.map(function(e){var n,r=0,o=e.title.toLowerCase(),i=e.domain.toLowerCase(),a=e.userNote.toLowerCase(),s=(null===(n=e.aiSummary)||void 0===n?void 0:n.toLowerCase())||"";return o.includes(t)&&(r+=10),i.includes(t)&&(r+=5),a.includes(t)&&(r+=8),s.includes(t)&&(r+=6),{link:e,score:r+=N(o,t)}}).filter(function(e){return e.score>0}).sort(function(e,n){return n.score-e.score}).slice(0,8).map(function(e){return e.link})},N=function(e,n){for(var t=0,r=0,o=0;o<n.length;o++){var i=n[o],a=e.indexOf(i,r);if(-1===a)return 0;var s=a-r;t+=Math.max(0,10-s),r=a+1}return t};return(0,r.useEffect)(function(){var e=j(g);w(e),C(0)},[g,j]),(0,r.useEffect)(function(){var e=function(e){if(n)switch(e.key){case"ArrowDown":e.preventDefault(),C(function(e){return Math.min(e+1,B.length-1)});break;case"ArrowUp":e.preventDefault(),C(function(e){return Math.max(e-1,0)});break;case"Enter":e.preventDefault(),B[v]&&B[v].action();break;case"Escape":e.preventDefault(),t()}};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[n,B,v,t]),(0,r.useEffect)(function(){n&&k.current&&(k.current.focus(),m(""),C(0))},[n]),(0,r.useEffect)(function(){if(S.current&&B.length>0){var e=S.current.children[v];e&&e.scrollIntoView({block:"nearest",behavior:"smooth"})}},[v,B]),n?(0,Et.jsx)("div",{className:"command-palette-overlay",onClick:t,children:(0,Et.jsxs)("div",{className:"command-palette",onClick:function(e){return e.stopPropagation()},children:[(0,Et.jsx)("div",{className:"command-palette-header",children:(0,Et.jsxs)("div",{className:"command-palette-search",children:[(0,Et.jsx)(d,{size:16,className:"command-palette-search-icon"}),(0,Et.jsx)("input",{ref:k,type:"text",placeholder:"Search links, collections, or commands...",value:g,onChange:function(e){return m(e.target.value)},className:"command-palette-input"}),(0,Et.jsxs)("div",{className:"command-palette-shortcut",children:[(0,Et.jsx)(Ar,{size:12}),(0,Et.jsx)("span",{children:"K"})]})]})}),(0,Et.jsx)("div",{className:"command-palette-content",ref:S,children:0===B.length?(0,Et.jsxs)("div",{className:"command-palette-empty",children:[(0,Et.jsx)(d,{size:24}),(0,Et.jsx)("p",{children:"No results found"}),(0,Et.jsx)("span",{children:"Try a different search term"})]}):B.map(function(e,n){return(0,Et.jsxs)("div",{className:"command-palette-item ".concat(n===v?"selected":""),onClick:function(){return e.action()},onMouseEnter:function(){return C(n)},children:[(0,Et.jsx)("div",{className:"command-palette-item-icon",children:e.icon}),(0,Et.jsxs)("div",{className:"command-palette-item-content",children:[(0,Et.jsx)("div",{className:"command-palette-item-title",children:e.title}),e.subtitle&&(0,Et.jsx)("div",{className:"command-palette-item-subtitle",children:e.subtitle})]}),(0,Et.jsx)("div",{className:"command-palette-item-action",children:(0,Et.jsx)(fr,{size:14})})]},e.id)})}),(0,Et.jsx)("div",{className:"command-palette-footer",children:(0,Et.jsxs)("div",{className:"command-palette-tips",children:[(0,Et.jsxs)("span",{children:[(0,Et.jsx)("kbd",{children:"↑"}),(0,Et.jsx)("kbd",{children:"↓"})," to navigate"]}),(0,Et.jsxs)("span",{children:[(0,Et.jsx)("kbd",{children:"↵"})," to select"]}),(0,Et.jsxs)("span",{children:[(0,Et.jsx)("kbd",{children:"esc"})," to close"]})]})})]})}):null},mr=a("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]),br=a("Square",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}]]),xr=a("Monitor",[["rect",{width:"20",height:"14",x:"2",y:"3",rx:"2",key:"48i651"}],["line",{x1:"8",x2:"16",y1:"21",y2:"21",key:"1svkeh"}],["line",{x1:"12",x2:"12",y1:"17",y2:"21",key:"vw1qmm"}]]);function yr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return vr(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(vr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,vr(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,vr(d,"constructor",c),vr(c,"constructor",l),l.displayName="GeneratorFunction",vr(c,o,"GeneratorFunction"),vr(d),vr(d,o,"Generator"),vr(d,r,function(){return this}),vr(d,"toString",function(){return"[object Generator]"}),(yr=function(){return{w:i,m:A}})()}function vr(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}vr=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){vr(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},vr(e,n,t,r)}function Cr(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function Er(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){Cr(i,r,o,a,s,"next",e)}function s(e){Cr(i,r,o,a,s,"throw",e)}a(void 0)})}}function Br(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return wr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?wr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function wr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const kr=function(e){var n=e.isOpen,t=e.onClose,o=e.collections,i=e.onSaveTabs,a=Br((0,r.useState)([]),2),s=a[0],c=a[1],u=Br((0,r.useState)(!1),2),d=u[0],f=u[1],p=Br((0,r.useState)(new Set),2),h=p[0],g=p[1],x=Br((0,r.useState)({}),2),y=x[0],v=x[1],C=Br((0,r.useState)(!1),2),E=C[0],B=C[1],w=Br((0,r.useState)(!1),2),k=w[0],S=w[1],j=Br((0,r.useState)(""),2),_=j[0],N=j[1];(0,r.useEffect)(function(){n&&z()},[n]),(0,r.useEffect)(function(){var e=s.reduce(function(e,n){return e[n.windowId]||(e[n.windowId]=[]),e[n.windowId].push(n),e},{});v(e)},[s]);var T,z=function(){var e=Er(yr().m(function e(){var n,t,r;return yr().w(function(e){for(;;)switch(e.n){case 0:return f(!0),e.p=1,e.n=2,chrome.tabs.query({});case 2:n=e.v,t=n.filter(function(e){return e.url&&!e.url.startsWith("chrome://")&&!e.url.startsWith("chrome-extension://")}).map(function(e){return{id:e.id,title:e.title||"Untitled",url:e.url,favicon:e.favIconUrl,windowId:e.windowId,index:e.index,active:e.active,domain:new URL(e.url).hostname,pinned:e.pinned}}),c(t),g(new Set),e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to load tabs:",r);case 4:return e.p=4,f(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),O=function(){return s.filter(function(e){return!(k&&!e.pinned||_&&!e.domain.toLowerCase().includes(_.toLowerCase()))})},P=function(){var e=Er(yr().m(function e(n,t){var r,o;return yr().w(function(e){for(;;)switch(e.n){case 0:if(0!==h.size){e.n=1;break}return e.a(2);case 1:return B(!0),e.p=2,r=s.filter(function(e){return h.has(e.id)}),e.n=3,i(r,n,t);case 3:g(new Set),e.n=5;break;case 4:e.p=4,o=e.v,console.error("Failed to save tabs:",o);case 5:return e.p=5,B(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(n,t){return e.apply(this,arguments)}}(),I=function(){var e=Er(yr().m(function e(n,t,r){var o;return yr().w(function(e){for(;;)switch(e.n){case 0:return B(!0),e.p=1,e.n=2,i([n],t,r);case 2:e.n=4;break;case 3:e.p=3,o=e.v,console.error("Failed to save tab:",o);case 4:return e.p=4,B(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(n,t,r){return e.apply(this,arguments)}}(),R=O(),L=(T={},s.forEach(function(e){T[e.domain]=(T[e.domain]||0)+1}),Object.entries(T).sort(function(e,n){var t=Br(e,2)[1];return Br(n,2)[1]-t}).slice(0,5));return n?(0,Et.jsx)("div",{className:"tab-sync-overlay",onClick:t,children:(0,Et.jsxs)("div",{className:"tab-sync-modal",onClick:function(e){return e.stopPropagation()},children:[(0,Et.jsxs)("div",{className:"tab-sync-header",children:[(0,Et.jsxs)("div",{className:"tab-sync-title",children:[(0,Et.jsx)(l,{size:20}),(0,Et.jsx)("h2",{children:"Tab Sync Mode"}),(0,Et.jsxs)("span",{className:"tab-count",children:[s.length," open tabs"]})]}),(0,Et.jsxs)("div",{className:"tab-sync-actions",children:[(0,Et.jsx)("button",{onClick:z,className:"tab-sync-refresh",disabled:d,title:"Refresh tabs",children:(0,Et.jsx)(mr,{size:16,className:d?"spinning":""})}),(0,Et.jsx)("button",{onClick:t,className:"tab-sync-close",title:"Close",children:(0,Et.jsx)(A,{size:16})})]})]}),(0,Et.jsxs)("div",{className:"tab-sync-filters",children:[(0,Et.jsxs)("div",{className:"tab-sync-filter-row",children:[(0,Et.jsxs)("label",{className:"tab-sync-filter-checkbox",children:[(0,Et.jsx)("input",{type:"checkbox",checked:k,onChange:function(e){return S(e.target.checked)}}),"Show only pinned tabs"]}),(0,Et.jsx)("input",{type:"text",placeholder:"Filter by domain...",value:_,onChange:function(e){return N(e.target.value)},className:"tab-sync-domain-filter"})]}),L.length>0&&(0,Et.jsxs)("div",{className:"tab-sync-domain-pills",children:[(0,Et.jsx)("span",{className:"domain-pills-label",children:"Quick filters:"}),L.map(function(e){var n=Br(e,2),t=n[0],r=n[1];return(0,Et.jsxs)("button",{onClick:function(){return N(_===t?"":t)},className:"domain-pill ".concat(_===t?"active":""),children:[t," (",r,")"]},t)})]})]}),(0,Et.jsxs)("div",{className:"tab-sync-bulk-actions",children:[(0,Et.jsxs)("button",{onClick:function(){var e=O();h.size===e.length?g(new Set):g(new Set(e.map(function(e){return e.id})))},className:"bulk-action-btn",title:h.size===R.length?"Deselect all":"Select all",children:[h.size===R.length?(0,Et.jsx)(br,{size:16}):(0,Et.jsx)(m,{size:16}),h.size===R.length?"Deselect All":"Select All"]}),h.size>0&&(0,Et.jsxs)(Et.Fragment,{children:[(0,Et.jsxs)("button",{onClick:function(){return P(void 0,!0)},className:"bulk-action-btn primary",disabled:E,children:[(0,Et.jsx)(b,{size:16}),"Save to Inbox (",h.size,")"]}),(0,Et.jsxs)("select",{onChange:function(e){e.target.value&&(P(e.target.value),e.target.value="")},className:"bulk-collection-select",disabled:E,title:"Save selected tabs to collection","aria-label":"Save selected tabs to collection",children:[(0,Et.jsx)("option",{value:"",children:"Save to Collection..."}),o.map(function(e){return(0,Et.jsx)("option",{value:e.id,children:e.name},e.id)})]})]})]}),(0,Et.jsx)("div",{className:"tab-sync-content",children:d?(0,Et.jsxs)("div",{className:"tab-sync-loading",children:[(0,Et.jsx)(mr,{size:24,className:"spinning"}),(0,Et.jsx)("p",{children:"Loading tabs..."})]}):0===Object.keys(y).length?(0,Et.jsxs)("div",{className:"tab-sync-empty",children:[(0,Et.jsx)(xr,{size:48}),(0,Et.jsx)("h3",{children:"No tabs found"}),(0,Et.jsx)("p",{children:"Open some tabs and refresh to see them here"})]}):Object.entries(y).map(function(e){var n=Br(e,2),t=n[0],r=n[1];return(0,Et.jsxs)("div",{className:"tab-window-group",children:[(0,Et.jsx)("div",{className:"tab-window-header",children:(0,Et.jsxs)("button",{onClick:function(){return function(e){var n=(y[e]||[]).map(function(e){return e.id}),t=new Set(h);n.every(function(e){return t.has(e)})?n.forEach(function(e){return t.delete(e)}):n.forEach(function(e){return t.add(e)}),g(t)}(parseInt(t))},className:"window-select-btn",children:[(0,Et.jsx)(xr,{size:16}),"Window ",t," (",r.length," tabs)"]})}),(0,Et.jsx)("div",{className:"tab-list",children:r.filter(function(e){return!(k&&!e.pinned||_&&!e.domain.toLowerCase().includes(_.toLowerCase()))}).map(function(e){return(0,Et.jsxs)("div",{className:"tab-item ".concat(h.has(e.id)?"selected":""," ").concat(e.active?"active":""),children:[(0,Et.jsxs)("div",{className:"tab-item-content",children:[(0,Et.jsx)("input",{type:"checkbox",checked:h.has(e.id),onChange:function(){return n=e.id,(t=new Set(h)).has(n)?t.delete(n):t.add(n),void g(t);var n,t},className:"tab-checkbox",title:"Select ".concat(e.title),"aria-label":"Select ".concat(e.title)}),(0,Et.jsx)("img",{src:e.favicon||"https://www.google.com/s2/favicons?domain=".concat(e.domain,"&sz=16"),alt:"favicon",className:"tab-favicon",onError:function(n){n.target.src="https://www.google.com/s2/favicons?domain=".concat(e.domain,"&sz=16")}}),(0,Et.jsxs)("div",{className:"tab-info",children:[(0,Et.jsxs)("div",{className:"tab-title",children:[e.pinned&&(0,Et.jsx)("span",{className:"tab-pin-indicator",children:"📌"}),e.title,e.active&&(0,Et.jsx)("span",{className:"tab-active-indicator",children:"•"})]}),(0,Et.jsx)("div",{className:"tab-url",children:e.domain})]})]}),(0,Et.jsxs)("div",{className:"tab-actions",children:[(0,Et.jsx)("button",{onClick:function(){return I(e,void 0,!0)},className:"tab-action-btn",title:"Save to inbox",disabled:E,children:(0,Et.jsx)(b,{size:14})}),(0,Et.jsxs)("select",{onChange:function(n){n.target.value&&(I(e,n.target.value),n.target.value="")},className:"tab-collection-select",disabled:E,title:"Save to collection","aria-label":"Save to collection",children:[(0,Et.jsx)("option",{value:"",children:"📁"}),o.map(function(e){return(0,Et.jsx)("option",{value:e.id,children:e.name},e.id)})]}),(0,Et.jsx)("a",{href:e.url,target:"_blank",rel:"noopener noreferrer",className:"tab-action-btn",title:"Open tab",children:(0,Et.jsx)(xt,{size:14})})]})]},e.id)})})]},t)})}),(0,Et.jsx)("div",{className:"tab-sync-footer",children:(0,Et.jsxs)("div",{className:"tab-sync-stats",children:[(0,Et.jsxs)("span",{children:[h.size," of ",R.length," tabs selected"]}),_&&(0,Et.jsxs)("span",{children:['• Filtered by "',_,'"']}),k&&(0,Et.jsx)("span",{children:"• Pinned only"})]})})]})}):null};function Sr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const jr=function(e){var n,t,o=e.link,i=e.onSave,a=e.onClose,s=(n=(0,r.useState)(o.userNote||""),t=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(n,t)||function(e,n){if(e){if("string"==typeof e)return Sr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Sr(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=s[0],c=s[1];return(0,Et.jsx)("div",{className:"modal-overlay",onClick:a,children:(0,Et.jsxs)("div",{className:"modal-content",onClick:function(e){return e.stopPropagation()},children:[(0,Et.jsxs)("div",{className:"modal-header",children:[(0,Et.jsx)("h2",{children:"Add Note"}),(0,Et.jsx)("button",{onClick:a,className:"close-button",title:"Close",children:(0,Et.jsx)(A,{size:20})})]}),(0,Et.jsxs)("div",{className:"modal-body",children:[(0,Et.jsxs)("div",{className:"link-preview",children:[(0,Et.jsx)("div",{className:"link-preview-favicon",children:o.favicon?(0,Et.jsx)("img",{src:o.favicon,alt:"",width:"16",height:"16"}):(0,Et.jsx)("div",{className:"favicon-placeholder",children:o.domain.charAt(0).toUpperCase()})}),(0,Et.jsxs)("div",{className:"link-preview-info",children:[(0,Et.jsx)("div",{className:"link-preview-title",children:o.title}),(0,Et.jsx)("div",{className:"link-preview-url",children:o.domain})]})]}),(0,Et.jsxs)("form",{onSubmit:function(e){e.preventDefault(),i(l)},children:[(0,Et.jsxs)("div",{className:"form-group",children:[(0,Et.jsx)("label",{htmlFor:"note",children:"Note:"}),(0,Et.jsx)("textarea",{id:"note",value:l,onChange:function(e){return c(e.target.value)},placeholder:"Add a note about why you saved this link...",rows:4,autoFocus:!0})]}),(0,Et.jsxs)("div",{className:"modal-actions",children:[(0,Et.jsx)("button",{type:"button",onClick:a,className:"button-secondary",children:"Cancel"}),(0,Et.jsx)("button",{type:"submit",className:"button-primary",children:"Save Note"})]})]})]})]})})};function _r(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Nr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Nr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Tr=function(e){var n=e.onSave,t=e.onClose,o=_r((0,r.useState)(""),2),i=o[0],a=o[1],s=_r((0,r.useState)(""),2),l=s[0],c=s[1];return(0,Et.jsx)("div",{className:"modal-overlay",onClick:t,children:(0,Et.jsxs)("div",{className:"modal-content",onClick:function(e){return e.stopPropagation()},children:[(0,Et.jsxs)("div",{className:"modal-header",children:[(0,Et.jsx)("h2",{children:"Create Collection"}),(0,Et.jsx)("button",{onClick:t,className:"close-button",title:"Close",children:(0,Et.jsx)(A,{size:20})})]}),(0,Et.jsx)("div",{className:"modal-body",children:(0,Et.jsxs)("form",{onSubmit:function(e){e.preventDefault(),i.trim()&&n(i.trim(),l.trim()||void 0)},children:[(0,Et.jsxs)("div",{className:"form-group",children:[(0,Et.jsx)("label",{htmlFor:"collection-name",children:"Collection Name:"}),(0,Et.jsx)("input",{id:"collection-name",type:"text",value:i,onChange:function(e){return a(e.target.value)},placeholder:"Enter collection name...",required:!0,autoFocus:!0})]}),(0,Et.jsxs)("div",{className:"form-group",children:[(0,Et.jsx)("label",{htmlFor:"collection-description",children:"Description (optional):"}),(0,Et.jsx)("textarea",{id:"collection-description",value:l,onChange:function(e){return c(e.target.value)},placeholder:"Describe what this collection is for...",rows:3})]}),(0,Et.jsxs)("div",{className:"modal-actions",children:[(0,Et.jsx)("button",{type:"button",onClick:t,className:"button-secondary",children:"Cancel"}),(0,Et.jsx)("button",{type:"submit",className:"button-primary",disabled:!i.trim(),children:"Create Collection"})]})]})})]})})},zr=function(e){var n=e.tags,t=e.selectedTag,r=e.onTagSelect,o=e.loading,i=function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]};return void 0!==o&&o?(0,Et.jsx)("div",{className:"tag-filters",children:(0,Et.jsx)("div",{className:"tag-filter-skeleton",children:"Loading tags..."})}):0===n.length?null:(0,Et.jsxs)("div",{className:"tag-filters",children:[t&&(0,Et.jsxs)("button",{onClick:function(){return r(null)},className:"tag-filter active",title:"Clear tag filter",children:[(0,Et.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:i(t)}}),t,(0,Et.jsx)(A,{size:12})]}),n.filter(function(e){return e.name!==t}).sort(function(e,n){return n.usageCount-e.usageCount}).slice(0,10).map(function(e){return(0,Et.jsxs)("button",{onClick:function(){return r(e.name)},className:"tag-filter",title:"Filter by ".concat(e.name," tag"),children:[(0,Et.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:i(e.name)}}),e.name,(0,Et.jsx)("span",{className:"tag-filter-count",children:e.usageCount})]},e.id)}),n.length>10&&!t&&(0,Et.jsxs)("span",{className:"tag-filter-more",children:["+",n.length-10," more"]})]})},Or=a("User",[["path",{d:"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2",key:"975kel"}],["circle",{cx:"12",cy:"7",r:"4",key:"17ys0d"}]]),Pr=a("Palette",[["circle",{cx:"13.5",cy:"6.5",r:".5",key:"1xcu5"}],["circle",{cx:"17.5",cy:"10.5",r:".5",key:"736e4u"}],["circle",{cx:"8.5",cy:"7.5",r:".5",key:"clrty"}],["circle",{cx:"6.5",cy:"12.5",r:".5",key:"1s4xz9"}],["path",{d:"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",key:"12rzf8"}]]),Ir=a("Database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]),Rr=a("Info",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 16v-4",key:"1dtifu"}],["path",{d:"M12 8h.01",key:"e9boi3"}]]),Lr=a("Mail",[["rect",{width:"20",height:"16",x:"2",y:"4",rx:"2",key:"18n3k1"}],["path",{d:"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7",key:"1ocrg3"}]]),Dr=a("Calendar",[["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",ry:"2",key:"eu3xkr"}],["line",{x1:"16",x2:"16",y1:"2",y2:"6",key:"m3sa8f"}],["line",{x1:"8",x2:"8",y1:"2",y2:"6",key:"18kwsl"}],["line",{x1:"3",x2:"21",y1:"10",y2:"10",key:"xt86sb"}]]),Mr=a("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]),Ur=a("FileText",[["path",{d:"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z",key:"1nnpy2"}],["polyline",{points:"14 2 14 8 20 8",key:"1ew0cm"}],["line",{x1:"16",x2:"8",y1:"13",y2:"13",key:"14keom"}],["line",{x1:"16",x2:"8",y1:"17",y2:"17",key:"17nazh"}],["line",{x1:"10",x2:"8",y1:"9",y2:"9",key:"1a5vjj"}]]),Kr=a("BarChart3",[["path",{d:"M3 3v18h18",key:"1s2lah"}],["path",{d:"M18 17V9",key:"2bz60n"}],["path",{d:"M13 17V5",key:"1frdt8"}],["path",{d:"M8 17v-3",key:"17ska0"}]]),$r=a("HelpCircle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3",key:"1u773s"}],["path",{d:"M12 17h.01",key:"p32p05"}]]);function Fr(e){return Fr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Fr(e)}function qr(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function Yr(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?qr(Object(t),!0).forEach(function(n){Wr(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):qr(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function Wr(e,n,t){return(n=function(e){var n=function(e){if("object"!=Fr(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Fr(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Fr(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Gr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Qr(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Qr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Qr(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Qr(d,"constructor",c),Qr(c,"constructor",l),l.displayName="GeneratorFunction",Qr(c,o,"GeneratorFunction"),Qr(d),Qr(d,o,"Generator"),Qr(d,r,function(){return this}),Qr(d,"toString",function(){return"[object Generator]"}),(Gr=function(){return{w:i,m:A}})()}function Qr(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}Qr=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){Qr(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},Qr(e,n,t,r)}function Vr(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function Hr(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){Vr(i,r,o,a,s,"next",e)}function s(e){Vr(i,r,o,a,s,"throw",e)}a(void 0)})}}function Zr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Xr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Jr=function(e){var n=e.onClose,t=Zr((0,r.useState)("account"),2),o=t[0],i=t[1],a=Zr((0,r.useState)(""),2),s=a[0],l=a[1],c=Zr((0,r.useState)({linkCount:0,collectionCount:0,tagCount:0,publicCollections:0,totalViews:0}),2),u=c[0],d=c[1],p=Zr((0,r.useState)({autoSummarize:!0,defaultCategory:"general",defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1}),2),h=p[0],g=p[1],m=Zr((0,r.useState)(!0),2),b=m[0],x=m[1],y=Zr((0,r.useState)(!1),2),v=y[0],C=y[1],E=Zr((0,r.useState)(""),2),B=E[0],w=E[1];(0,r.useEffect)(function(){k(),S(),j()},[]);var k=function(){var e=Hr(Gr().m(function e(){var n,t,r;return Gr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,it.auth.getUser();case 1:n=e.v,(t=n.data.user)&&l(t.email||"Unknown"),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to load user data:",r);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),S=function(){var e=Hr(Gr().m(function e(){var n,t;return Gr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.getData();case 1:n=e.v,g({autoSummarize:n.settings.autoSummarize,defaultCategory:n.settings.defaultCategory,defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1}),e.n=3;break;case 2:e.p=2,t=e.v,console.error("Failed to load settings:",t);case 3:return e.p=3,x(!1),e.f(3);case 4:return e.a(2)}},e,null,[[0,2,3,4]])}));return function(){return e.apply(this,arguments)}}(),j=function(){var e=Hr(Gr().m(function e(){var n,t,r,o,i,a,s;return Gr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.getData();case 1:return n=e.v,e.n=2,bt.getUserTags();case 2:return t=e.v,e.n=3,it.from("collections").select("view_count").eq("is_public",!0);case 3:r=e.v,o=r.data,i=(null==o?void 0:o.length)||0,a=(null==o?void 0:o.reduce(function(e,n){return e+(n.view_count||0)},0))||0,d({linkCount:n.links.length,collectionCount:n.collections.length,tagCount:t.length,publicCollections:i,totalViews:a}),e.n=5;break;case 4:e.p=4,s=e.v,console.error("Failed to load user stats:",s);case 5:return e.a(2)}},e,null,[[0,4]])}));return function(){return e.apply(this,arguments)}}(),_=function(){var e=Hr(Gr().m(function e(n){return Gr().w(function(e){for(;;)switch(e.n){case 0:C(!0),w("");try{g(n),w("Settings saved successfully!"),setTimeout(function(){return w("")},3e3)}catch(e){w("Failed to save settings")}finally{C(!1)}case 1:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}(),N=function(){var e=Hr(Gr().m(function e(){var n,t,r,o,i,a;return Gr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.getData();case 1:return n=e.v,e.n=2,bt.getUserTags();case 2:t=e.v,r={exported_at:(new Date).toISOString(),user_email:s,links:n.links,collections:n.collections,tags:t,stats:u},o=new Blob([JSON.stringify(r,null,2)],{type:"application/json"}),i=URL.createObjectURL(o),(a=document.createElement("a")).href=i,a.download="nest-export-".concat((new Date).toISOString().split("T")[0],".json"),document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(i),w("Data exported successfully!"),setTimeout(function(){return w("")},3e3),e.n=4;break;case 3:e.p=3,e.v,w("Failed to export data");case 4:return e.a(2)}},e,null,[[0,3]])}));return function(){return e.apply(this,arguments)}}(),T=function(){var e=Hr(Gr().m(function e(){var n;return Gr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.cleanupUnusedTags();case 1:n=e.v,w("Cleaned up ".concat(n," unused tags")),j(),setTimeout(function(){return w("")},3e3),e.n=3;break;case 2:e.p=2,e.v,w("Failed to cleanup tags");case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),z=function(){var e=Hr(Gr().m(function e(){return Gr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,it.auth.signOut();case 1:n(),e.n=3;break;case 2:e.p=2,e.v,w("Failed to logout");case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),O=[{id:"account",label:"Account",icon:Or},{id:"preferences",label:"Preferences",icon:Pr},{id:"data",label:"Data",icon:Ir},{id:"sharing",label:"Sharing",icon:$t},{id:"about",label:"About",icon:Rr}];return b?(0,Et.jsx)("div",{className:"modal-overlay",children:(0,Et.jsxs)("div",{className:"modal settings-modal",children:[(0,Et.jsxs)("div",{className:"modal-header",children:[(0,Et.jsx)("h2",{children:"Settings"}),(0,Et.jsx)("button",{onClick:n,className:"modal-close",title:"Close",children:(0,Et.jsx)(A,{size:20})})]}),(0,Et.jsx)("div",{className:"modal-content",children:(0,Et.jsx)("div",{className:"loading-spinner",children:"Loading settings..."})})]})}):(0,Et.jsx)("div",{className:"modal-overlay",children:(0,Et.jsxs)("div",{className:"modal settings-modal",children:[(0,Et.jsxs)("div",{className:"modal-header",children:[(0,Et.jsx)("h2",{children:"Settings"}),(0,Et.jsx)("button",{onClick:n,className:"modal-close",title:"Close",children:(0,Et.jsx)(A,{size:20})})]}),(0,Et.jsxs)("div",{className:"settings-content",children:[(0,Et.jsx)("div",{className:"settings-tabs",children:O.map(function(e){var n=e.icon;return(0,Et.jsxs)("button",{onClick:function(){return i(e.id)},className:"settings-tab ".concat(o===e.id?"active":""),children:[(0,Et.jsx)(n,{size:16}),(0,Et.jsx)("span",{children:e.label})]},e.id)})}),(0,Et.jsxs)("div",{className:"settings-panel",children:["account"===o&&(0,Et.jsxs)("div",{className:"settings-section",children:[(0,Et.jsx)("h3",{children:"Account Information"}),(0,Et.jsxs)("div",{className:"setting-group",children:[(0,Et.jsx)("div",{className:"setting-item",children:(0,Et.jsxs)("div",{className:"setting-info",children:[(0,Et.jsx)(Lr,{size:16}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Email Address"}),(0,Et.jsx)("div",{className:"setting-description",children:s})]})]})}),(0,Et.jsx)("div",{className:"setting-item",children:(0,Et.jsxs)("div",{className:"setting-info",children:[(0,Et.jsx)(Dr,{size:16}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Account Created"}),(0,Et.jsx)("div",{className:"setting-description",children:"Connected via Supabase"})]})]})})]}),(0,Et.jsxs)("div",{className:"stats-grid",children:[(0,Et.jsxs)("div",{className:"stat-card",children:[(0,Et.jsx)("div",{className:"stat-number",children:u.linkCount}),(0,Et.jsx)("div",{className:"stat-label",children:"Links Saved"})]}),(0,Et.jsxs)("div",{className:"stat-card",children:[(0,Et.jsx)("div",{className:"stat-number",children:u.collectionCount}),(0,Et.jsx)("div",{className:"stat-label",children:"Collections"})]}),(0,Et.jsxs)("div",{className:"stat-card",children:[(0,Et.jsx)("div",{className:"stat-number",children:u.tagCount}),(0,Et.jsx)("div",{className:"stat-label",children:"Tags Used"})]}),(0,Et.jsxs)("div",{className:"stat-card",children:[(0,Et.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,Et.jsx)("div",{className:"stat-label",children:"Total Views"})]})]}),(0,Et.jsx)("div",{className:"setting-actions",children:(0,Et.jsx)("button",{onClick:z,className:"settings-button danger",children:"Logout"})})]}),"preferences"===o&&(0,Et.jsxs)("div",{className:"settings-section",children:[(0,Et.jsx)("h3",{children:"Application Preferences"}),(0,Et.jsxs)("div",{className:"setting-group",children:[(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsx)("div",{className:"setting-info",children:(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Auto-summarize Links"}),(0,Et.jsx)("div",{className:"setting-description",children:"Automatically generate AI summaries for saved links"})]})}),(0,Et.jsxs)("label",{className:"toggle-switch",title:"Toggle auto-summarize",children:[(0,Et.jsx)("input",{type:"checkbox",checked:h.autoSummarize,onChange:function(e){return _(Yr(Yr({},h),{},{autoSummarize:e.target.checked}))},disabled:v,"aria-label":"Auto-summarize links"}),(0,Et.jsx)("span",{className:"toggle-slider"})]})]}),(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsx)("div",{className:"setting-info",children:(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Default Category"}),(0,Et.jsx)("div",{className:"setting-description",children:"Default category for new links"})]})}),(0,Et.jsxs)("select",{value:h.defaultCategory,onChange:function(e){return _(Yr(Yr({},h),{},{defaultCategory:e.target.value}))},className:"settings-select",disabled:v,title:"Select default category","aria-label":"Default category",children:[(0,Et.jsx)("option",{value:"general",children:"General"}),(0,Et.jsx)("option",{value:"work",children:"Work"}),(0,Et.jsx)("option",{value:"personal",children:"Personal"}),(0,Et.jsx)("option",{value:"learning",children:"Learning"})]})]}),(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsx)("div",{className:"setting-info",children:(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Show Tooltips"}),(0,Et.jsx)("div",{className:"setting-description",children:"Display helpful tooltips throughout the interface"})]})}),(0,Et.jsxs)("label",{className:"toggle-switch",title:"Toggle show tooltips",children:[(0,Et.jsx)("input",{type:"checkbox",checked:h.showTooltips,onChange:function(e){return _(Yr(Yr({},h),{},{showTooltips:e.target.checked}))},disabled:v,"aria-label":"Show tooltips"}),(0,Et.jsx)("span",{className:"toggle-slider"})]})]}),(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsx)("div",{className:"setting-info",children:(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Compact View"}),(0,Et.jsx)("div",{className:"setting-description",children:"Use a more compact layout to show more content"})]})}),(0,Et.jsxs)("label",{className:"toggle-switch",title:"Toggle compact view",children:[(0,Et.jsx)("input",{type:"checkbox",checked:h.compactView,onChange:function(e){return _(Yr(Yr({},h),{},{compactView:e.target.checked}))},disabled:v,"aria-label":"Compact view"}),(0,Et.jsx)("span",{className:"toggle-slider"})]})]})]})]}),"data"===o&&(0,Et.jsxs)("div",{className:"settings-section",children:[(0,Et.jsx)("h3",{children:"Data Management"}),(0,Et.jsxs)("div",{className:"setting-group",children:[(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsxs)("div",{className:"setting-info",children:[(0,Et.jsx)(Mr,{size:16}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Export Data"}),(0,Et.jsx)("div",{className:"setting-description",children:"Download all your links, collections, and tags as JSON"})]})]}),(0,Et.jsx)("button",{onClick:N,className:"settings-button",children:"Export"})]}),(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsxs)("div",{className:"setting-info",children:[(0,Et.jsx)(Ct,{size:16}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Cleanup Unused Tags"}),(0,Et.jsx)("div",{className:"setting-description",children:"Remove tags that aren't used by any links"})]})]}),(0,Et.jsx)("button",{onClick:T,className:"settings-button",children:"Cleanup"})]})]}),(0,Et.jsxs)("div",{className:"data-usage",children:[(0,Et.jsx)("h4",{children:"Storage Usage"}),(0,Et.jsxs)("div",{className:"usage-items",children:[(0,Et.jsxs)("div",{className:"usage-item",children:[(0,Et.jsx)(Ur,{size:14}),(0,Et.jsxs)("span",{children:[u.linkCount," links"]})]}),(0,Et.jsxs)("div",{className:"usage-item",children:[(0,Et.jsx)(f,{size:14}),(0,Et.jsxs)("span",{children:[u.tagCount," tags"]})]}),(0,Et.jsxs)("div",{className:"usage-item",children:[(0,Et.jsx)(Kr,{size:14}),(0,Et.jsxs)("span",{children:[u.collectionCount," collections"]})]})]})]})]}),"sharing"===o&&(0,Et.jsxs)("div",{className:"settings-section",children:[(0,Et.jsx)("h3",{children:"Sharing & Privacy"}),(0,Et.jsx)("div",{className:"setting-group",children:(0,Et.jsxs)("div",{className:"setting-item",children:[(0,Et.jsx)("div",{className:"setting-info",children:(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"setting-label",children:"Default Collection Privacy"}),(0,Et.jsx)("div",{className:"setting-description",children:"Make new collections public by default"})]})}),(0,Et.jsxs)("label",{className:"toggle-switch",title:"Toggle default privacy",children:[(0,Et.jsx)("input",{type:"checkbox",checked:h.defaultPrivacy,onChange:function(e){return _(Yr(Yr({},h),{},{defaultPrivacy:e.target.checked}))},disabled:v,"aria-label":"Default collection privacy"}),(0,Et.jsx)("span",{className:"toggle-slider"})]})]})}),(0,Et.jsxs)("div",{className:"sharing-stats",children:[(0,Et.jsx)("h4",{children:"Sharing Analytics"}),(0,Et.jsxs)("div",{className:"stats-row",children:[(0,Et.jsxs)("div",{className:"stat-item",children:[(0,Et.jsx)(Gt,{size:16}),(0,Et.jsxs)("span",{children:[u.publicCollections," public collections"]})]}),(0,Et.jsxs)("div",{className:"stat-item",children:[(0,Et.jsx)(Kr,{size:16}),(0,Et.jsxs)("span",{children:[u.totalViews," total views"]})]})]})]})]}),"about"===o&&(0,Et.jsxs)("div",{className:"settings-section",children:[(0,Et.jsx)("h3",{children:"About Nest"}),(0,Et.jsxs)("div",{className:"about-info",children:[(0,Et.jsxs)("div",{className:"app-info",children:[(0,Et.jsx)("div",{className:"app-logo",children:"N"}),(0,Et.jsxs)("div",{children:[(0,Et.jsx)("div",{className:"app-name",children:"Nest - Smart Bookmarks & Notes"}),(0,Et.jsx)("div",{className:"app-version",children:"Version 1.0.0"})]})]}),(0,Et.jsx)("p",{className:"app-description",children:"Nest is a powerful browser extension that helps you save, organize, and share your bookmarks with AI-powered summaries, flexible tagging, and beautiful collections."})]}),(0,Et.jsxs)("div",{className:"support-links",children:[(0,Et.jsx)("h4",{children:"Support & Resources"}),(0,Et.jsxs)("div",{className:"link-grid",children:[(0,Et.jsxs)("a",{href:"https://github.com",target:"_blank",rel:"noopener",className:"support-link",children:[(0,Et.jsx)(xt,{size:16}),(0,Et.jsx)("span",{children:"Documentation"})]}),(0,Et.jsxs)("a",{href:"https://github.com/issues",target:"_blank",rel:"noopener",className:"support-link",children:[(0,Et.jsx)($r,{size:16}),(0,Et.jsx)("span",{children:"Report Issues"})]}),(0,Et.jsxs)("a",{href:"mailto:support@nest.dev",className:"support-link",children:[(0,Et.jsx)(Lr,{size:16}),(0,Et.jsx)("span",{children:"Contact Support"})]})]})]}),(0,Et.jsxs)("div",{className:"credits",children:[(0,Et.jsx)("p",{children:"Built with ❤️ by the Nest team"}),(0,Et.jsx)("p",{children:"Powered by Supabase, React, and Chrome Extensions API"})]})]})]})]}),B&&(0,Et.jsx)("div",{className:"settings-message ".concat(B.includes("Failed")?"error":"success"),children:B}),(0,Et.jsx)("div",{className:"modal-footer",children:(0,Et.jsx)("button",{onClick:n,className:"modal-button secondary",children:"Close"})})]})})};var eo=t(72),no=t.n(eo),to=t(206),ro=t.n(to),oo=t(659),io=t.n(oo),ao=t(56),so=t.n(ao),lo=t(159),co=t.n(lo),uo=t(113),Ao=t.n(uo),fo=t(182),po={};function ho(e){return ho="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ho(e)}function go(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function mo(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?go(Object(t),!0).forEach(function(n){bo(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):go(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function bo(e,n,t){return(n=function(e){var n=function(e){if("object"!=ho(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ho(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ho(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function xo(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",o=t.toStringTag||"@@toStringTag";function i(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return yo(c,"_invoke",function(t,r,o){var i,s,l,c=0,u=o||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return i=n,s=0,l=e,A.n=t,a}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!o&&n<u.length;n++){var o,i=u[n],f=A.p,p=i[2];t>3?(o=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=e):i[0]<=f&&((o=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(o=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(o||t>1)return a;throw d=!0,r}return function(o,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(n=s<2?e:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(o="next"),n=i[o]){if(!(n=n.call(i,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=i.return)&&n.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),s=1);i=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==a)break}catch(n){i=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,o,i),!0),c}var a={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(yo(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,yo(e,o,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,yo(d,"constructor",c),yo(c,"constructor",l),l.displayName="GeneratorFunction",yo(c,o,"GeneratorFunction"),yo(d),yo(d,o,"Generator"),yo(d,r,function(){return this}),yo(d,"toString",function(){return"[object Generator]"}),(xo=function(){return{w:i,m:A}})()}function yo(e,n,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}yo=function(e,n,t,r){if(n)o?o(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var i=function(n,t){yo(e,n,function(e){return this._invoke(n,t,e)})};i("next",0),i("throw",1),i("return",2)}},yo(e,n,t,r)}function vo(e,n,t,r,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,o)}function Co(e){return function(){var n=this,t=arguments;return new Promise(function(r,o){var i=e.apply(n,t);function a(e){vo(i,r,o,a,s,"next",e)}function s(e){vo(i,r,o,a,s,"throw",e)}a(void 0)})}}function Eo(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i,a,s=[],l=!0,c=!1;try{if(i=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,n)||Bo(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Bo(e,n){if(e){if("string"==typeof e)return wo(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?wo(e,n):void 0}}function wo(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}po.styleTagTransform=Ao(),po.setAttributes=so(),po.insert=io().bind(null,"head"),po.domAPI=ro(),po.insertStyleElement=co(),no()(fo.A,po),fo.A&&fo.A.locals&&fo.A.locals;const ko=function(){var e=Eo((0,r.useState)({links:[],collections:[],categories:[],settings:{defaultCategory:"general",autoSummarize:!0}}),2),n=e[0],t=e[1],o=Eo((0,r.useState)(""),2),i=o[0],a=o[1],v=Eo((0,r.useState)([]),2),C=v[0],E=v[1],B=Eo((0,r.useState)(!1),2),w=B[0],k=B[1],S=Eo((0,r.useState)(!1),2),j=S[0],_=S[1],N=Eo((0,r.useState)(null),2),T=N[0],z=N[1],O=Eo((0,r.useState)([]),2),P=O[0],I=O[1],R=Eo((0,r.useState)([]),2),L=R[0],D=R[1],M=Eo((0,r.useState)(!1),2),U=M[0],K=M[1],$=Eo((0,r.useState)({inbox:!0,holdingArea:!0,collections:!0}),2),F=$[0],q=$[1],Y=Eo((0,r.useState)(null),2),W=Y[0],G=Y[1],Q=Eo((0,r.useState)(!1),2),V=Q[0],H=Q[1],Z=Eo((0,r.useState)(!1),2),X=Z[0],J=Z[1],ee=Eo((0,r.useState)(!1),2),ne=ee[0],te=ee[1],re=Eo((0,r.useState)(!0),2),oe=re[0],ie=re[1],ae=Eo((0,r.useState)(null),2),se=ae[0],le=ae[1],ce=Eo((0,r.useState)(""),2),ue=ce[0],de=ce[1],Ae=Eo((0,r.useState)(!1),2),fe=Ae[0],pe=Ae[1],he=Eo((0,r.useState)(""),2),ge=he[0],me=he[1],be=Eo((0,r.useState)([]),2),xe=be[0],ye=be[1],ve=Eo((0,r.useState)([]),2),Ce=ve[0],Ee=ve[1],Be=Eo((0,r.useState)(!1),2),we=Be[0],ke=Be[1],Se=Eo((0,r.useState)(!1),2),je=Se[0],_e=Se[1],Ne=Eo((0,r.useState)(!1),2),Te=Ne[0],ze=Ne[1];(0,r.useEffect)(function(){it.auth.getSession().then(function(e){var n=e.data.session;le(n),n&&(Ie(),Le())});var e=it.auth.onAuthStateChange(function(e,n){console.log("Auth state changed:",e,n),le(n),n&&(Ie(),Le())}),n=e.data.subscription;return function(){return n.unsubscribe()}},[]),(0,r.useEffect)(function(){Ie()},[]),(0,r.useEffect)(function(){var e=function(e){(e.metaKey||e.ctrlKey)&&"k"===e.key&&(e.preventDefault(),_e(!0))};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[]);var Oe,Pe,Ie=function(){var e=Co(xo().m(function e(){var n,r;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.getData();case 1:return n=e.v,t(n),e.n=2,Re();case 2:e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to load data:",r);case 4:return e.p=4,ie(!1),e.f(4);case 5:return e.a(2)}},e,null,[[0,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),Re=function(){var e=Co(xo().m(function e(){var n,t;return xo().w(function(e){for(;;)switch(e.n){case 0:return ke(!0),e.p=1,e.n=2,bt.getInboxLinks();case 2:n=e.v,ye(n),e.n=4;break;case 3:e.p=3,t=e.v,console.error("Failed to load inbox links:",t);case 4:return e.p=4,ke(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),Le=function(){var e=Co(xo().m(function e(){var n,t;return xo().w(function(e){for(;;)switch(e.n){case 0:return K(!0),e.p=1,e.n=2,bt.getUserTags();case 2:n=e.v,D(n),e.n=4;break;case 3:e.p=3,t=e.v,console.error("Failed to load user tags:",t);case 4:return e.p=4,K(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),De=function(){var e=Co(xo().m(function e(n){var t,r;return xo().w(function(e){for(;;)switch(e.n){case 0:if(n!==T){e.n=1;break}return z(null),I([]),e.a(2);case 1:if(z(n),!n){e.n=6;break}return e.p=2,e.n=3,bt.getLinksByTag(n);case 3:t=e.v,I(t),e.n=5;break;case 4:e.p=4,r=e.v,console.error("Failed to load links by tag:",r),I([]);case 5:e.n=7;break;case 6:I([]);case 7:n&&j&&nn();case 8:return e.a(2)}},e,null,[[2,4]])}));return function(n){return e.apply(this,arguments)}}(),Me=function(){Le(),T&&De(T)},Ue=function(e){q(function(n){return mo(mo({},n),{},bo({},e,!n[e]))})},Ke=function(){var e=Co(xo().m(function e(){var n;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!e.v[0]){e.n=4;break}return e.n=2,chrome.runtime.sendMessage({action:"saveCurrentPage"});case 2:return e.n=3,Ie();case 3:return e.n=4,Le();case 4:e.n=6;break;case 5:e.p=5,n=e.v,console.error("Failed to save page:",n);case 6:return e.a(2)}},e,null,[[0,5]])}));return function(){return e.apply(this,arguments)}}(),$e=function(){var e=Co(xo().m(function e(n,t){var r;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.updateLink(n,t);case 1:return e.n=2,Ie();case 2:e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to update link:",r);case 4:return e.a(2)}},e,null,[[0,3]])}));return function(n,t){return e.apply(this,arguments)}}(),Fe=function(){var e=Co(xo().m(function e(n){var t;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.deleteLink(n);case 1:return e.n=2,Ie();case 2:return e.n=3,Le();case 3:T&&De(T),e.n=5;break;case 4:e.p=4,t=e.v,console.error("Failed to delete link:",t);case 5:return e.a(2)}},e,null,[[0,4]])}));return function(n){return e.apply(this,arguments)}}(),qe=function(){var e=Co(xo().m(function e(n,t){var r;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.updateLink(n,{collectionId:t});case 1:return e.n=2,Ie();case 2:e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to move link:",r);case 4:return e.a(2)}},e,null,[[0,3]])}));return function(n,t){return e.apply(this,arguments)}}(),Ye=function(e){G(e),H(!0)},We=function(){var e=Co(xo().m(function e(n){return xo().w(function(e){for(;;)switch(e.n){case 0:if(!W){e.n=1;break}return e.n=1,$e(W.id,{userNote:n});case 1:H(!1),G(null);case 2:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}(),Ge=function(){var e=Co(xo().m(function e(n,t){var r,o;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,r={id:Date.now().toString(),name:n,description:t,createdAt:new Date,updatedAt:new Date},e.n=1,bt.addCollection(r);case 1:return e.n=2,Ie();case 2:e.n=4;break;case 3:e.p=3,o=e.v,console.error("Failed to create collection:",o);case 4:J(!1);case 5:return e.a(2)}},e,null,[[0,3]])}));return function(n,t){return e.apply(this,arguments)}}(),Qe=function(){var e=Co(xo().m(function e(n,t){var r;return xo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,bt.moveFromInbox(n,t);case 1:return e.n=2,Re();case 2:return e.n=3,Ie();case 3:Ee(function(e){return e.filter(function(e){return e!==n})}),e.n=5;break;case 4:e.p=4,r=e.v,console.error("Failed to move link from inbox:",r);case 5:return e.a(2)}},e,null,[[0,4]])}));return function(n,t){return e.apply(this,arguments)}}(),Ve=function(e){Ee(function(n){return n.includes(e)?n.filter(function(n){return n!==e}):[].concat(function(e){if(Array.isArray(e))return wo(e)}(t=n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||Bo(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[e]);var t})},He=function(){var e=Co(xo().m(function e(n){var t;return xo().w(function(e){for(;;)switch(e.n){case 0:if(0!==Ce.length){e.n=1;break}return e.a(2);case 1:return e.p=1,e.n=2,bt.bulkMoveFromInbox(Ce,n);case 2:return e.n=3,Re();case 3:return e.n=4,Ie();case 4:Ee([]),e.n=6;break;case 5:e.p=5,t=e.v,console.error("Failed to bulk move links from inbox:",t);case 6:return e.a(2)}},e,null,[[1,5]])}));return function(n){return e.apply(this,arguments)}}(),Ze=function(){var e=Co(xo().m(function e(n,t,r){var o;return xo().w(function(e){for(;;)switch(e.n){case 0:return o=n.map(function(){var e=Co(xo().m(function e(n){var o;return xo().w(function(e){for(;;)switch(e.n){case 0:return o={url:n.url,title:n.title,favicon:n.favicon||"https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=32"),userNote:"",aiSummary:"",category:"general",domain:n.domain,isInInbox:r||!1,collectionId:r?void 0:t},e.n=1,bt.addLink(o);case 1:return e.a(2,e.v)}},e)}));return function(n){return e.apply(this,arguments)}}()),e.n=1,Promise.all(o);case 1:return e.n=2,Ie();case 2:return e.n=3,Re();case 3:chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Tabs Saved to Nest",message:"Saved ".concat(n.length," tab(s) ").concat(r?"to inbox":t?"to collection":"to holding area")});case 4:return e.a(2)}},e)}));return function(n,t,r){return e.apply(this,arguments)}}(),Xe=function(){var e=Co(xo().m(function e(n){var t,r,o;return xo().w(function(e){for(;;)switch(e.n){case 0:return n.preventDefault(),pe(!0),me(""),t=chrome.runtime.getURL("auth.html"),console.log("Redirecting to:",t),e.n=1,it.auth.signInWithOtp({email:ue,options:{emailRedirectTo:t}});case 1:r=e.v,o=r.error,me(o?o.message:"Check your email for the login link!"),pe(!1);case 2:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}(),Je=function(){var e=Co(xo().m(function e(){return xo().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,it.auth.signOut();case 1:return e.a(2)}},e)}));return function(){return e.apply(this,arguments)}}(),en=(0,r.useCallback)((Oe=function(){var e=Co(xo().m(function e(n){var t,r;return xo().w(function(e){for(;;)switch(e.n){case 0:if(n.trim()){e.n=1;break}return E([]),_(!1),k(!1),e.a(2);case 1:return k(!0),e.p=2,e.n=3,bt.searchLinks(n);case 3:t=e.v,E(t),_(!0),T&&(z(null),I([])),e.n=5;break;case 4:e.p=4,r=e.v,console.error("Search failed:",r),E([]);case 5:return e.p=5,k(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(n){return e.apply(this,arguments)}}(),function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];clearTimeout(Pe),Pe=setTimeout(function(){return Oe.apply(void 0,n)},300)}),[T]),nn=function(){a(""),E([]),_(!1),k(!1)},tn=function(){nn(),z(null),I([])},rn=j||T?[]:n.links.filter(function(e){return!e.isInInbox}),on=rn.filter(function(e){return!e.collectionId});return se?oe?(0,Et.jsx)("div",{className:"sidepanel loading",children:(0,Et.jsx)("div",{className:"loading-spinner",children:"Loading..."})}):(0,Et.jsxs)("div",{className:"sidepanel",children:[(0,Et.jsxs)("div",{className:"header",children:[(0,Et.jsxs)("div",{className:"header-title",children:[(0,Et.jsx)(s,{className:"header-icon"}),(0,Et.jsx)("h1",{children:"Nest"})]}),(0,Et.jsxs)("div",{className:"header-actions",children:[(0,Et.jsx)("button",{onClick:function(){return ze(!0)},className:"tab-sync-button",title:"Tab Sync Mode",children:(0,Et.jsx)(l,{size:18})}),(0,Et.jsx)("button",{onClick:Ke,className:"save-button",title:"Save current page",children:(0,Et.jsx)(c,{size:18})}),(0,Et.jsx)("button",{onClick:Je,className:"logout-button",title:"Logout",children:(0,Et.jsx)(u,{size:18})})]})]}),(0,Et.jsxs)("div",{className:"search-container",children:[(0,Et.jsx)(d,{className:"search-icon",size:16}),(0,Et.jsx)("input",{type:"text",placeholder:"Search your links... (⌘K for power mode)",value:i,onChange:function(e){var n=e.target.value;a(n),en(n)},className:"search-input",onFocus:function(){}}),i&&(0,Et.jsx)("button",{onClick:nn,className:"search-clear",title:"Clear search",children:(0,Et.jsx)(A,{size:16})}),w&&(0,Et.jsx)("div",{className:"search-spinner",children:"⟳"}),!i&&!w&&(0,Et.jsx)("button",{onClick:function(){return _e(!0)},className:"search-power-mode",title:"Open command palette (⌘K)",children:(0,Et.jsx)(Command,{size:14})})]}),L.length>0&&(0,Et.jsx)(zr,{tags:L,selectedTag:T,onTagSelect:De,loading:U}),(0,Et.jsx)("div",{className:"content",children:j?(0,Et.jsxs)("div",{className:"search-results",children:[(0,Et.jsxs)("div",{className:"search-results-header",children:[(0,Et.jsxs)("h3",{children:["Search Results (",C.length,")"]}),(0,Et.jsx)("button",{onClick:tn,className:"clear-search-btn",children:"Show All Links"})]}),0!==C.length||w?C.map(function(e){return(0,Et.jsx)(sr,{link:e,collections:n.collections,onUpdate:$e,onDelete:Fe,onMoveToCollection:qe,onAddNote:Ye,onTagsUpdated:Me},e.id)}):(0,Et.jsx)("div",{className:"no-results",children:(0,Et.jsxs)("p",{children:['No links found for "',i,'"']})})]}):T?(0,Et.jsxs)("div",{className:"tag-results",children:[(0,Et.jsxs)("div",{className:"tag-results-header",children:[(0,Et.jsxs)("h3",{children:[(0,Et.jsx)(f,{size:16}),'Tagged with "',T,'" (',P.length,")"]}),(0,Et.jsx)("button",{onClick:tn,className:"clear-search-btn",children:"Show All Links"})]}),0===P.length?(0,Et.jsx)("div",{className:"no-results",children:(0,Et.jsxs)("p",{children:['No links found with tag "',T,'"']})}):P.map(function(e){return(0,Et.jsx)(Mt,{link:e,collections:n.collections,onUpdate:$e,onDelete:Fe,onMoveToCollection:qe,onAddNote:Ye,onTagsUpdated:Me},e.id)})]}):(0,Et.jsxs)(Et.Fragment,{children:[(0,Et.jsxs)("div",{className:"section inbox-section",children:[(0,Et.jsxs)("div",{className:"inbox-section-header",children:[(0,Et.jsxs)("div",{className:"inbox-section-title",children:[(0,Et.jsxs)("button",{onClick:function(){return Ue("inbox")},className:"section-header",style:{padding:0,background:"none",border:"none"},children:[F.inbox?(0,Et.jsx)(p,{size:16}):(0,Et.jsx)(h,{size:16}),(0,Et.jsx)(g,{size:16}),(0,Et.jsx)("span",{children:"Inbox"})]}),(0,Et.jsx)("span",{className:"inbox-count",children:xe.length})]}),xe.length>0&&(0,Et.jsxs)("div",{className:"inbox-actions",children:[(0,Et.jsxs)("button",{onClick:function(){Ce.length===xe.length?Ee([]):Ee(xe.map(function(e){return e.id}))},className:"inbox-action-button",title:Ce.length===xe.length?"Deselect all":"Select all",children:[(0,Et.jsx)(m,{size:14}),Ce.length===xe.length?"Deselect All":"Select All"]}),Ce.length>0&&(0,Et.jsxs)(Et.Fragment,{children:[(0,Et.jsxs)("button",{onClick:function(){return He()},className:"inbox-action-button",title:"Move selected to holding area",children:[(0,Et.jsx)(b,{size:14}),"Move to Holding (",Ce.length,")"]}),(0,Et.jsxs)("select",{onChange:function(e){e.target.value&&(He(e.target.value),e.target.value="")},className:"inbox-action-button",style:{padding:"6px 8px"},title:"Move selected links to collection","aria-label":"Move selected links to collection",children:[(0,Et.jsx)("option",{value:"",children:"Move to Collection..."}),n.collections.map(function(e){return(0,Et.jsx)("option",{value:e.id,children:e.name},e.id)})]})]})]})]}),F.inbox&&(0,Et.jsx)("div",{className:"section-content",children:we?(0,Et.jsx)("div",{className:"loading-spinner",children:"Loading inbox..."}):0===xe.length?(0,Et.jsxs)("div",{className:"inbox-empty",children:[(0,Et.jsx)(g,{className:"inbox-empty-icon"}),(0,Et.jsx)("h3",{children:"Inbox is empty"}),(0,Et.jsx)("p",{children:"New saves will appear here for quick organization"})]}):xe.map(function(e){return(0,Et.jsx)(dr,{link:e,collections:n.collections,onMoveFromInbox:Qe,onDelete:Fe,onUpdate:$e,onAddNote:Ye,onTagsUpdated:Me,isSelected:Ce.includes(e.id),onSelect:Ve},e.id)})})]}),(0,Et.jsxs)("div",{className:"section",children:[(0,Et.jsxs)("button",{onClick:function(){return Ue("holdingArea")},className:"section-header",children:[F.holdingArea?(0,Et.jsx)(p,{size:16}):(0,Et.jsx)(h,{size:16}),(0,Et.jsx)("span",{children:"Holding Area"}),(0,Et.jsx)("span",{className:"count",children:on.length})]}),F.holdingArea&&(0,Et.jsx)("div",{className:"section-content",children:0===on.length?(0,Et.jsxs)("div",{className:"empty-state",children:[(0,Et.jsx)("p",{children:"No links saved yet"}),(0,Et.jsx)("button",{onClick:Ke,className:"empty-action",children:"Save current page"})]}):on.map(function(e){return(0,Et.jsx)(Mt,{link:e,collections:n.collections,onUpdate:$e,onDelete:Fe,onMoveToCollection:qe,onAddNote:Ye,onTagsUpdated:Me},e.id)})})]}),(0,Et.jsxs)("div",{className:"section",children:[(0,Et.jsxs)("button",{onClick:function(){return Ue("collections")},className:"section-header",children:[F.collections?(0,Et.jsx)(p,{size:16}):(0,Et.jsx)(h,{size:16}),(0,Et.jsx)("span",{children:"Collections"}),(0,Et.jsx)("span",{className:"count",children:n.collections.length}),(0,Et.jsx)("button",{onClick:function(e){e.stopPropagation(),J(!0)},className:"add-collection-button",title:"Create new collection",children:(0,Et.jsx)(x,{size:14})})]}),F.collections&&(0,Et.jsx)("div",{className:"section-content",children:0===n.collections.length?(0,Et.jsxs)("div",{className:"empty-state",children:[(0,Et.jsx)("p",{children:"No collections yet"}),(0,Et.jsx)("button",{onClick:function(){return J(!0)},className:"empty-action",children:"Create collection"})]}):n.collections.map(function(e){var n,t=(n=e.id,rn.filter(function(e){return e.collectionId===n}));return(0,Et.jsx)(ar,{collection:e,links:t,onUpdateLink:$e,onDeleteLink:Fe,onAddNote:Ye,onTagsUpdated:Me,onUpdate:Ie},e.id)})})]})]})}),(0,Et.jsxs)("div",{className:"footer",children:[(0,Et.jsx)("button",{onClick:function(){return te(!0)},className:"footer-button",title:"Settings",children:(0,Et.jsx)(y,{size:16})}),(0,Et.jsxs)("span",{className:"footer-text",children:[n.links.length," links • ",L.length," tags"]})]}),V&&W&&(0,Et.jsx)(jr,{link:W,onSave:We,onClose:function(){H(!1),G(null)}}),X&&(0,Et.jsx)(Tr,{onSave:Ge,onClose:function(){return J(!1)}}),ne&&(0,Et.jsx)(Jr,{onClose:function(){return te(!1)}}),(0,Et.jsx)(gr,{isOpen:je,onClose:function(){return _e(!1)},links:n.links,collections:n.collections,onOpenLink:function(e){window.open(e,"_blank")},onAddToCollection:qe,onCreateCollection:function(){J(!0)},onSaveCurrentPage:Ke,onAddNote:Ye,onOpenTabSync:function(){return ze(!0)}}),(0,Et.jsx)(kr,{isOpen:Te,onClose:function(){return ze(!1)},collections:n.collections,onSaveTabs:Ze})]}):(0,Et.jsxs)("div",{className:"sidepanel auth-container",children:[(0,Et.jsx)("div",{className:"header",children:(0,Et.jsxs)("div",{className:"header-title",children:[(0,Et.jsx)(s,{className:"header-icon"}),(0,Et.jsx)("h1",{children:"Nest"})]})}),(0,Et.jsxs)("div",{className:"auth-form",children:[(0,Et.jsx)("h2",{children:"Sign In"}),(0,Et.jsx)("p",{children:"Enter your email to receive a magic login link."}),(0,Et.jsxs)("form",{onSubmit:Xe,children:[(0,Et.jsx)("input",{type:"email",placeholder:"Your email",value:ue,onChange:function(e){return de(e.target.value)},className:"auth-input"}),(0,Et.jsx)("button",{type:"submit",className:"auth-button",disabled:fe,children:fe?"Sending...":"Send Magic Link"})]}),ge&&(0,Et.jsx)("p",{className:"auth-message",children:ge})]})]})};var So=document.getElementById("root");(0,o.H)(So).render((0,Et.jsx)(ko,{}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,