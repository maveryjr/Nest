/*! For license information please see sidepanel.js.LICENSE.txt */
(()=>{"use strict";var n,e,t={20:(n,e,t)=>{var r=t(540),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(n,e,t){var r,i={},c=null,u=null;for(r in void 0!==t&&(c=""+t),void 0!==e.key&&(c=""+e.key),void 0!==e.ref&&(u=e.ref),e)o.call(e,r)&&!l.hasOwnProperty(r)&&(i[r]=e[r]);if(n&&n.defaultProps)for(r in e=n.defaultProps)void 0===i[r]&&(i[r]=e[r]);return{$$typeof:a,type:n,key:c,ref:u,props:i,_owner:s.current}}e.Fragment=i,e.jsx=c,e.jsxs=c},45:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(825));e.default=class{constructor(n,{headers:e={},schema:t,fetch:r}){this.url=n,this.headers=e,this.schema=t,this.fetch=r}select(n,{head:e=!1,count:t}={}){const r=e?"HEAD":"GET";let i=!1;const o=(null!=n?n:"*").split("").map(n=>/\s/.test(n)&&!i?"":('"'===n&&(i=!i),n)).join("");return this.url.searchParams.set("select",o),t&&(this.headers.Prefer=`count=${t}`),new a.default({method:r,url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}insert(n,{count:e,defaultToNull:t=!0}={}){const r=[];if(this.headers.Prefer&&r.push(this.headers.Prefer),e&&r.push(`count=${e}`),t||r.push("missing=default"),this.headers.Prefer=r.join(","),Array.isArray(n)){const e=n.reduce((n,e)=>n.concat(Object.keys(e)),[]);if(e.length>0){const n=[...new Set(e)].map(n=>`"${n}"`);this.url.searchParams.set("columns",n.join(","))}}return new a.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:n,fetch:this.fetch,allowEmpty:!1})}upsert(n,{onConflict:e,ignoreDuplicates:t=!1,count:r,defaultToNull:i=!0}={}){const o=[`resolution=${t?"ignore":"merge"}-duplicates`];if(void 0!==e&&this.url.searchParams.set("on_conflict",e),this.headers.Prefer&&o.push(this.headers.Prefer),r&&o.push(`count=${r}`),i||o.push("missing=default"),this.headers.Prefer=o.join(","),Array.isArray(n)){const e=n.reduce((n,e)=>n.concat(Object.keys(e)),[]);if(e.length>0){const n=[...new Set(e)].map(n=>`"${n}"`);this.url.searchParams.set("columns",n.join(","))}}return new a.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:n,fetch:this.fetch,allowEmpty:!1})}update(n,{count:e}={}){const t=[];return this.headers.Prefer&&t.push(this.headers.Prefer),e&&t.push(`count=${e}`),this.headers.Prefer=t.join(","),new a.default({method:"PATCH",url:this.url,headers:this.headers,schema:this.schema,body:n,fetch:this.fetch,allowEmpty:!1})}delete({count:n}={}){const e=[];return n&&e.push(`count=${n}`),this.headers.Prefer&&e.unshift(this.headers.Prefer),this.headers.Prefer=e.join(","),new a.default({method:"DELETE",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],s=0;s<n.length;s++){var l=n[s],c=r.base?l[0]+r.base:l[0],u=i[c]||0,d="".concat(c," ").concat(u);i[c]=u+1;var A=t(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)e[A].references++,e[A].updater(f);else{var p=a(f,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:p,references:1})}o.push(d)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=t(i[o]);e[s].references--}for(var l=r(n,a),c=0;c<i.length;c++){var u=t(i[c]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}i=l}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},159:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},182:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),a=t.n(r),i=t(314),o=t.n(i),s=t(417),l=t.n(s),c=new URL(t(691),t.b),u=o()(a()),d=l()(c);u.push([n.id,`/* Modern Reset and Base Styles */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  /* Brand Colors */\n  --brand-hue: 244;\n  --color-primary: hsl(var(--brand-hue), 81%, 59%); /* #4f46e5 */\n  --color-primary-light: hsl(var(--brand-hue), 85%, 66%); /* #6366f1 */\n  --color-primary-dark: hsl(var(--brand-hue), 79%, 53%); /* #4338ca */\n\n  /* Semantic Colors */\n  --color-success: #10b981;\n  --color-warning: #f59e0b;\n  --color-danger: #ef4444;\n  --color-danger-hover: #d92d20;\n\n  /* Neutral Colors (Cool Gray) */\n  --color-white: #ffffff;\n  --color-gray-50: #f8fafc;\n  --color-gray-100: #f1f5f9;\n  --color-gray-200: #e2e8f0;\n  --color-gray-300: #cbd5e1;\n  --color-gray-400: #94a3b8;\n  --color-gray-500: #64748b;\n  --color-gray-600: #475569;\n  --color-gray-700: #334155;\n  --color-gray-800: #1e293b;\n  --color-gray-900: #0f172a;\n\n  /* UI Colors */\n  --ui-background: var(--color-gray-50);\n  --ui-element-background: var(--color-white);\n  --ui-border: var(--color-gray-200);\n  --ui-border-hover: var(--color-gray-300);\n  --ui-text-primary: var(--color-gray-800);\n  --ui-text-secondary: var(--color-gray-500);\n  --ui-text-tertiary: var(--color-gray-400);\n  --ui-text-interactive: var(--color-primary);\n  --ui-text-interactive-hover: var(--color-primary-dark);\n  \n  /* Spacing System (slightly tweaked) */\n  --space-1: 0.25rem; /* 4px */\n  --space-2: 0.5rem;  /* 8px */\n  --space-3: 0.75rem; /* 12px */\n  --space-4: 1rem;    /* 16px */\n  --space-5: 1.5rem;  /* 24px */\n  --space-6: 2rem;    /* 32px */\n  --space-8: 3rem;    /* 48px */\n  --space-10: 4rem;   /* 64px */\n  --space-12: 5rem;   /* 80px */\n  \n  /* Typography */\n  --font-family: Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-base: 0.9375rem; /* 15px */\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-size-2xl: 1.5rem;\n  --font-size-3xl: 2rem;\n  \n  /* Border Radius */\n  --radius-sm: 0.25rem;\n  --radius-md: 0.5rem;\n  --radius-lg: 0.75rem;\n  --radius-xl: 1rem;\n  --radius-full: 9999px;\n  \n  /* Shadows (more subtle) */\n  --shadow-sm: 0 1px 2px 0 rgba(15, 23, 42, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.1), 0 2px 4px -2px rgba(15, 23, 42, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -4px rgba(15, 23, 42, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.1), 0 8px 10px -6px rgba(15, 23, 42, 0.1);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.05);\n\n  /* Transitions */\n  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Z-index */\n  --z-base: 1;\n  --z-sticky: 10;\n  --z-dropdown: 50;\n  --z-modal: 100;\n  --z-overlay: 90;\n}\n\nbody {\n  font-family: var(--font-family);\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background-color: var(--ui-background);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Main Sidepanel Layout */\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: var(--ui-background);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family);\n  overflow: hidden;\n  position: relative;\n}\n\n/* Modern Header Design */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-sticky);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.header-title h1 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  letter-spacing: -0.025em;\n}\n\n.header-icon {\n  color: var(--color-primary);\n  width: 22px;\n  height: 22px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.save-button,\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.save-button {\n  background: var(--color-primary);\n  color: var(--color-white);\n  box-shadow: var(--shadow-sm);\n}\n\n.save-button:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  background: transparent;\n  color: var(--ui-text-secondary);\n}\n\n.tab-sync-button:hover,\n.logout-button:hover,\n.floating-ai-button:hover,\n.sticky-notes-button:hover,\n.screenshot-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n  transform: none;\n}\n\n.floating-ai-button {\n  color: var(--color-primary);\n}\n\n.floating-ai-button:hover {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.sticky-notes-button {\n  color: var(--color-warning);\n}\n\n.sticky-notes-button:hover {\n  background: var(--color-warning);\n  color: var(--color-white);\n}\n\n.screenshot-button {\n  color: #8b5cf6;\n}\n\n.screenshot-button:hover {\n  background: #8b5cf6;\n  color: var(--color-white);\n}\n\n/* Enhanced Search Design */\n.search-container {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-icon {\n  position: absolute;\n  left: var(--space-2);\n  color: var(--ui-text-tertiary);\n  pointer-events: none;\n  z-index: 1;\n  width: 16px;\n  height: 16px;\n}\n\n.search-input {\n  width: 100%;\n  height: 36px;\n  padding: 0 var(--space-3) 0 36px;\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-base);\n  outline: none;\n}\n\n.search-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.search-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.search-clear,\n.search-power-mode {\n  position: absolute;\n  right: var(--space-2);\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.search-clear:hover,\n.search-power-mode:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.search-spinner {\n  position: absolute;\n  right: var(--space-3);\n  color: var(--color-primary);\n  animation: spin 1s linear infinite;\n}\n\n.command-hint-button {\n  position: absolute;\n  right: var(--space-2);\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background-color: transparent;\n  color: var(--ui-text-tertiary);\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-xs);\n  cursor: pointer;\n  border: none;\n  transition: all var(--transition-fast);\n}\n\n.command-hint-button:hover {\n    background-color: var(--color-gray-100);\n    color: var(--ui-text-secondary);\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* ==========================================================================\n   MODAL STYLES\n   ========================================================================== */\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(15, 23, 42, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-overlay);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: var(--ui-element-background);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n  padding: var(--space-6);\n  animation: modal-fade-in 0.2s var(--transition-base);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n@keyframes modal-fade-in {\n  from { opacity: 0; transform: scale(0.95); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--space-4);\n  padding-bottom: var(--space-3);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.modal-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n}\n\n.modal-close-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.modal-close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.modal-body {\n  /* No specific styles needed for the body wrapper itself */\n}\n\n.modal-footer {\n  margin-top: var(--space-5);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n}\n\n/* Modal form elements */\n.form-group {\n    margin-bottom: var(--space-4);\n}\n.form-group label {\n    display: block;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-2);\n}\n.form-group input[type="text"],\n.form-group textarea {\n    width: 100%;\n    padding: var(--space-2) var(--space-3);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    transition: all var(--transition-fast);\n}\n.form-group input[type="text"]:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n}\n\n.button {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-2) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.button:hover {\n    background: var(--color-gray-300);\n}\n.button.primary {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n.button.primary:hover {\n    background: var(--color-primary-dark);\n}\n\n/* ==========================================================================\n   SETTINGS STYLES\n   ========================================================================== */\n\n.settings-modal .modal-content {\n    max-width: 800px; /* Wider for settings */\n    padding: 0;\n    display: flex;\n    overflow: hidden;\n}\n\n.settings-content {\n    display: flex;\n    width: 100%;\n}\n\n.settings-tabs {\n    width: 200px;\n    flex-shrink: 0;\n    padding: var(--space-4);\n    border-right: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n}\n\n.settings-tab {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.settings-tab:hover {\n    color: var(--ui-text-primary);\n    background: var(--color-gray-200);\n}\n.settings-tab.active {\n    color: var(--ui-text-primary);\n    background: var(--color-white);\n    box-shadow: var(--shadow-sm);\n}\n\n.settings-panel {\n    flex: 1;\n    padding: var(--space-5) var(--space-6);\n    overflow-y: auto;\n    max-height: 80vh;\n}\n\n.settings-panel h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.settings-panel p {\n    color: var(--ui-text-secondary);\n    margin-bottom: var(--space-4);\n}\n\n.setting-group {\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--space-5);\n    overflow: hidden;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--space-3) var(--space-4);\n}\n.setting-item:not(:last-child) {\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.setting-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n}\n.setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.setting-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-4);\n    margin-top: var(--space-4);\n}\n.stat-card {\n    background: var(--color-gray-100);\n    padding: var(--space-4);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--ui-border);\n}\n.stat-number {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n.stat-label {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.settings-message {\n    margin-top: var(--space-4);\n    padding: var(--space-3) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}\n.settings-message.success {\n    background-color: hsl(142.1 76.2% 36.3% / 15%);\n    color: hsl(142.1 70.2% 30.3%);\n}\n.settings-message.error {\n    background-color: hsl(0 72.2% 50.6% / 15%);\n    color: hsl(0 62.2% 45.6%);\n}\n\n.settings-button {\n    /* uses .button styles */\n}\n.settings-button.danger {\n    background-color: var(--color-danger);\n    color: var(--color-white);\n}\n.settings-button.danger:hover {\n    background-color: var(--color-danger-hover);\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n}\n.toggle-switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--color-gray-300);\n  transition: .4s;\n  border-radius: var(--radius-full);\n}\n.toggle-slider:before {\n  position: absolute;\n  content: "";\n  height: 14px;\n  width: 14px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\ninput:checked + .toggle-slider {\n  background-color: var(--color-primary);\n}\ninput:checked + .toggle-slider:before {\n  transform: translateX(16px);\n}\n\n/* ==========================================================================\n   SIDEBAR SETTINGS STYLES\n   ========================================================================== */\n\n.settings-sidebar {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--ui-element-background);\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n}\n\n.settings-header {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3) var(--space-4);\n    background: var(--ui-element-background);\n    border-bottom: 1px solid var(--ui-border);\n    flex-shrink: 0;\n}\n\n.settings-back-button {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.settings-back-button:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n}\n\n.settings-header h2 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin: 0;\n}\n\n.settings-tabs-horizontal {\n    display: flex;\n    padding: var(--space-2) var(--space-4);\n    background: var(--color-gray-50);\n    border-bottom: 1px solid var(--ui-border);\n    gap: var(--space-1);\n    overflow-x: auto;\n    flex-shrink: 0;\n}\n\n.settings-tab-horizontal {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 40px;\n    height: 40px;\n}\n\n.settings-tab-horizontal:hover {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n}\n\n.settings-tab-horizontal.active {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n\n.settings-content-sidebar {\n    flex: 1;\n    overflow-y: auto;\n    padding: var(--space-4);\n}\n\n.settings-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--space-8);\n    color: var(--ui-text-secondary);\n}\n\n.settings-section {\n    margin-bottom: var(--space-6);\n}\n\n.settings-section h3 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-2);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.account-info {\n    margin-bottom: var(--space-5);\n}\n\n.account-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n}\n\n.account-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n}\n\n.account-value {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid-sidebar {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n    margin-bottom: var(--space-5);\n}\n\n.stat-card-sidebar {\n    background: var(--color-gray-50);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    text-align: center;\n    border: 1px solid var(--ui-border);\n}\n\n.stat-card-sidebar .stat-number {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n\n.stat-card-sidebar .stat-label {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.setting-list {\n    space-y: var(--space-1);\n}\n\n.setting-item-sidebar {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-2);\n    gap: var(--space-3);\n}\n\n.setting-item-sidebar .setting-info {\n    flex: 1;\n    min-width: 0;\n}\n\n.setting-item-sidebar .setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n    margin-bottom: var(--space-1);\n}\n\n.setting-item-sidebar .setting-description {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    line-height: 1.4;\n}\n\n.form-control-sidebar {\n    width: 100%;\n    max-width: 200px;\n    padding: var(--space-2);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    background: var(--ui-element-background);\n    color: var(--ui-text-primary);\n}\n\n.form-control-sidebar:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.button-small {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-1) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-xs);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n    flex-shrink: 0;\n}\n\n.button-small:hover {\n    background: var(--color-gray-300);\n}\n\n.button-small.danger {\n    background: var(--color-danger);\n    color: var(--color-white);\n}\n\n.button-small.danger:hover {\n    background: var(--color-danger-hover);\n}\n\n.setting-actions {\n    margin-top: var(--space-5);\n}\n\n.about-info-sidebar {\n    margin-bottom: var(--space-5);\n}\n\n.app-info-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    margin-bottom: var(--space-3);\n}\n\n.app-logo-sidebar {\n    width: 32px;\n    height: 32px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    border-radius: var(--radius-md);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: var(--font-size-lg);\n}\n\n.app-name {\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-base);\n}\n\n.app-version {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n\n.app-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    line-height: 1.5;\n}\n\n.support-links-sidebar h4 {\n    font-size: var(--font-size-sm);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-3);\n}\n\n.support-link-list {\n    display: flex;\n    flex-direction: column;\n    gap: var(--space-2);\n}\n\n.support-link-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-2);\n    padding: var(--space-2) var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    color: var(--ui-text-secondary);\n    text-decoration: none;\n    font-size: var(--font-size-sm);\n    transition: all var(--transition-fast);\n}\n\n.support-link-sidebar:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n}\n\n/* Mobile responsive adjustments */\n@media (max-width: 480px) {\n    .settings-tabs-horizontal {\n        padding: var(--space-2);\n        gap: var(--space-1);\n    }\n    \n    .settings-tab-horizontal {\n        min-width: 36px;\n        height: 36px;\n        padding: var(--space-1);\n    }\n    \n    .settings-content-sidebar {\n        padding: var(--space-3);\n    }\n    \n    .stats-grid-sidebar {\n        grid-template-columns: 1fr;\n    }\n    \n    .setting-item-sidebar {\n        flex-direction: column;\n        align-items: stretch;\n        gap: var(--space-2);\n    }\n    \n    .form-control-sidebar {\n        max-width: none;\n    }\n}\n\n/* TAG EDITOR */\n.tag-editor {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.tag-editor-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.tag-editor-loading {\n  padding: var(--space-3);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n}\n\n/* COLLECTIONS MENU */\n.collections-menu {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.collections-header {\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  transition: background-color var(--transition-fast);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.collection-option:last-child {\n  border-bottom: none;\n}\n\n.collection-option:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* Inbox Actions */\n.inbox-section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping on small screens */\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-section-title .section-header {\n  padding: 0;\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 20px;\n  text-align: center;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button,\n.inbox-actions select {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button:hover,\n.inbox-actions select:hover {\n  background: var(--color-gray-100);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n}\n\n.inbox-actions select {\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url(${d});\n  background-repeat: no-repeat;\n  background-position: right var(--space-2) center;\n  padding-right: var(--space-6);\n}\n\n/* Footer */\n.footer {\n  padding: var(--space-2) var(--space-4);\n  background: var(--ui-element-background);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.footer-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .search-container {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .content {\n    padding: var(--space-2);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-3);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* Content Area */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--space-2) var(--space-3);\n  scroll-behavior: smooth;\n}\n\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n/* Section Headers */\n.section {\n  margin-bottom: var(--space-3);\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-2) 0;\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: color var(--transition-fast);\n  position: relative;\n}\n\n.section-header:hover {\n  color: var(--ui-text-interactive);\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 24px;\n  text-align: center;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.add-collection-button:hover {\n  color: var(--ui-text-interactive);\n  background: var(--color-gray-100);\n  transform: scale(1.1);\n}\n\n.section-content {\n  margin-top: var(--space-2);\n}\n\n/* Modern Card Design Foundation */\n.card-base {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-3);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n}\n\n.card-base:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.card-base::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  opacity: 0;\n  transition: opacity var(--transition-base);\n}\n\n.card-base:hover::before {\n  opacity: 1;\n}\n\n/* Enhanced Favicon System */\n.favicon-container {\n  position: relative;\n  width: 36px;\n  height: 36px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n}\n\n.favicon-container img {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n  transition: transform var(--transition-fast);\n}\n\n.favicon-container:hover img {\n  transform: scale(1.05);\n}\n\n.favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--color-white);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n/* Domain Color System */\n.domain-github { background: linear-gradient(135deg, #24292e, #586069); }\n.domain-stackoverflow { background: linear-gradient(135deg, #f48024, #fe7a15); }\n.domain-medium { background: linear-gradient(135deg, #00ab6c, #00d084); }\n.domain-youtube { background: linear-gradient(135deg, #ff0000, #cc0000); }\n.domain-twitter { background: linear-gradient(135deg, #1da1f2, #0d8bd9); }\n.domain-linkedin { background: linear-gradient(135deg, #0077b5, #005885); }\n.domain-reddit { background: linear-gradient(135deg, #ff4500, #ff6500); }\n.domain-dev { background: linear-gradient(135deg, #0a0a0a, #2d2d2d); }\n\n/* Typography Improvements */\n.link-title,\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  line-height: 1.4;\n  margin-bottom: var(--space-1);\n  cursor: pointer;\n  transition: color var(--transition-fast);\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.link-title:hover,\n.inbox-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-meta,\n.inbox-card-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-bottom: var(--space-2);\n}\n\n.link-domain {\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n}\n\n.link-date::before {\n  content: '•';\n  margin: 0 var(--space-2);\n  color: var(--ui-text-tertiary);\n}\n\n/* Action Buttons */\n.action-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Enhanced Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  min-width: 180px;\n  padding: var(--space-1);\n  margin-top: 0;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu button.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-10);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner {\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-primary);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n/* Empty States */\n.empty-state {\n  text-align: center;\n  padding: var(--space-10) var(--space-4);\n  color: var(--ui-text-secondary);\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--color-gray-300);\n  margin-bottom: var(--space-4);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  max-width: 300px;\n  margin: 0 auto var(--space-4);\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n/* ==========================================================================\n   MODERN CARD SYSTEM - COMPLETE REDESIGN\n   ========================================================================== */\n\n/* ===== INBOX CARD STYLES ===== */\n.inbox-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.inbox-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.inbox-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-md);\n}\n\n.inbox-card-content {\n  padding: var(--space-3);\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-checkbox {\n  padding-top: 5px; /* Align with text */\n}\n\n.inbox-card-checkbox input[type="checkbox"] {\n  width: 18px;\n  height: 18px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:hover {\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: 0px;\n  left: 3px;\n  color: var(--color-white);\n  font-size: 12px;\n  font-weight: 700;\n}\n\n.inbox-card-main-content { /* New wrapper */\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.inbox-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.inbox-card-body {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n}\n\n.inbox-card-domain {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 400;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.inbox-card-link,\n.inbox-card-menu-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--ui-text-secondary);\n  background: transparent;\n}\n\n.inbox-card-link:hover,\n.inbox-card-menu-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n/* Let dropdowns be handled by the global dropdown styles */\n.inbox-card-menu,\n.inbox-card-submenu {\n  /* Styles are now handled by .dropdown-menu */\n  display: none; /* Hide if not actively shown by JS */\n}\n\n.inbox-card-summary,\n.inbox-card-note {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  border-left: 3px solid var(--color-gray-300);\n}\n\n.inbox-card-summary p,\n.inbox-card-note p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.inbox-card-highlights {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.highlights-toggle {\n  background: none;\n  border: none;\n  color: var(--ui-text-interactive);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n  padding: var(--space-1) 0;\n}\n\n.highlights-toggle:hover {\n  color: var(--ui-text-interactive-hover);\n}\n\n.highlights-chevron {\n  transition: transform var(--transition-fast);\n  font-size: 10px;\n}\n\n.highlights-chevron.expanded {\n  transform: rotate(180deg);\n}\n\n/* ===== LINK CARD STYLES ===== */\n.link-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.link-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.link-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n}\n\n.link-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.link-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.link-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.link-card-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-card-info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.link-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.link-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-meta {\n  margin-bottom: var(--space-3);\n}\n\n.link-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n/* TAG STYLES */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-top: var(--space-3);\n}\n\n.link-tag {\n  background: hsl(var(--brand-hue) 81% 59% / 10%);\n  color: var(--ui-text-interactive);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 3px var(--space-2);\n  border-radius: var(--radius-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: none;\n}\n\n.link-tag:hover {\n  background: hsl(var(--brand-hue) 81% 59% / 20%);\n}\n\n/* CATEGORY BADGE */\n.link-category {\n  margin-top: var(--space-3);\n}\n\n.category-badge {\n  background: var(--color-gray-600);\n  color: var(--color-white);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n/* NOTES AND SUMMARIES */\n.link-note,\n.link-summary {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n}\n\n.link-note strong,\n.link-summary strong {\n  color: var(--ui-text-primary);\n  font-weight: 600;\n}\n\n/* HIGHLIGHTS SECTION */\n.link-highlights-section {\n  margin-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-3);\n}\n\n.highlights-header {\n  margin-bottom: var(--space-3);\n}\n\n/* ===== COLLECTION CARD STYLES ===== */\n.collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3) var(--space-4);\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: background-color var(--transition-fast);\n}\n\n.collection-card.expanded .collection-header {\n   border-bottom: 1px solid var(--ui-border);\n}\n\n\n.collection-header:hover {\n  background-color: var(--color-gray-50);\n}\n\n.collection-icon {\n  color: var(--ui-text-tertiary);\n}\n\n.collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-weight: 600;\n}\n\n.public-indicator {\n    color: var(--ui-text-tertiary);\n}\n\n.collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-top: 2px;\n  display: block;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.collection-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n}\n\n.collection-content {\n  padding: var(--space-4);\n}\n\n.empty-collection {\n  padding: var(--space-4);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* ===== SEARCH RESULT CARD STYLES ===== */\n.search-result-card {\n  position: relative;\n  margin-bottom: var(--space-4);\n  border: 1px dashed var(--ui-border-hover);\n  border-radius: var(--radius-xl);\n  padding-top: var(--space-5);\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: var(--space-2);\n  right: var(--space-4);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  color: var(--ui-text-tertiary);\n  background-color: var(--color-gray-100);\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.search-headline {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  padding: 0 var(--space-4) var(--space-3);\n  border-bottom: 1px dashed var(--ui-border);\n  margin-bottom: var(--space-3);\n}\n\n.search-headline em {\n  font-style: normal;\n  background-color: hsl(var(--brand-hue) 81% 59% / 15%);\n  color: var(--ui-text-interactive-hover);\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.search-result-card .link-card {\n    border: none;\n    margin-bottom: 0;\n    box-shadow: none;\n}\n.search-result-card .link-card:hover {\n    transform: none;\n    box-shadow: none;\n}\n\n.about-info {\n    margin-bottom: var(--space-5);\n}\n.app-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-4);\n    margin-bottom: var(--space-4);\n}\n.app-logo {\n    width: 48px;\n    height: 48px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n}\n.app-name {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n}\n.app-version {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.support-links h4 {\n    font-size: var(--font-size-base);\n    font-weight: 600;\n    margin-bottom: var(--space-3);\n}\n.link-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n}\n.support-link {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    background: var(--color-gray-50);\n    border: 1px solid var(--ui-border);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n    transition: all var(--transition-fast);\n}\n.support-link:hover {\n    background: var(--color-gray-100);\n    border-color: var(--ui-border-hover);\n}\n\n/* ==========================================================================\n   COMMAND PALETTE STYLES\n   ========================================================================== */\n.command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.6);\n    display: flex;\n    align-items: flex-start; /* Align to top */\n    justify-content: center;\n    padding-top: 15vh; /* Push it down a bit */\n    z-index: var(--z-overlay);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n}\n.command-palette {\n    background: var(--ui-element-background);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-xl);\n    width: 90%;\n    max-width: 600px;\n    overflow: hidden;\n    animation: command-palette-fade-in 0.2s var(--transition-base);\n}\n@keyframes command-palette-fade-in {\n  from { opacity: 0; transform: translateY(-10px) scale(0.98); }\n  to { opacity: 1; transform: translateY(0) scale(1); }\n}\n\n.command-palette-header {\n    padding: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n.command-palette-search-icon {\n    position: absolute;\n    left: var(--space-3);\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-input {\n    width: 100%;\n    height: 40px;\n    padding: 0 var(--space-3) 0 var(--space-6);\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: var(--font-size-lg);\n    color: var(--ui-text-primary);\n}\n\n.command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: var(--space-2);\n}\n\n.command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background-color var(--transition-fast);\n}\n.command-palette-item.selected {\n    background-color: var(--color-gray-100);\n}\n.command-palette-item-icon {\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n}\n.command-palette-item-title {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.command-palette-item-subtitle {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-action {\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-empty {\n    text-align: center;\n    padding: var(--space-6);\n    color: var(--ui-text-secondary);\n}\n\n.command-palette-footer {\n    padding: var(--space-2) var(--space-3);\n    border-top: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n.command-palette-tips {\n    display: flex;\n    gap: var(--space-4);\n}\n.command-palette-tips kbd {\n    background: var(--color-white);\n    border: 1px solid var(--ui-border);\n    padding: 2px 4px;\n    border-radius: var(--radius-sm);\n    box-shadow: var(--shadow-sm);\n}\n\n@keyframes card-fade-in {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* ==========================================================================\n   TAG FILTERS COMPONENT\n   ========================================================================== */\n\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n  margin-bottom: var(--space-2);\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n.tag-filter {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.tag-filter.active {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.tag-filter.active:hover {\n  background: var(--color-primary-dark);\n  border-color: var(--color-primary-dark);\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: var(--color-white);\n  color: var(--ui-text-secondary);\n  font-size: 10px;\n  font-weight: 600;\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  min-width: 16px;\n  text-align: center;\n  margin-left: var(--space-1);\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--color-primary);\n}\n\n.tag-filter-more {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n  font-style: italic;\n  padding: var(--space-1) var(--space-2);\n}\n\n.tag-filter-skeleton {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-sm);\n  font-style: italic;\n  padding: var(--space-2);\n}\n\n/* ==========================================================================\n   TAG INPUT COMPONENT\n   ========================================================================== */\n\n.tag-input-container {\n  position: relative;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-2);\n  min-height: 40px;\n  transition: all var(--transition-fast);\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  padding: 2px var(--space-2);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  animation: tag-chip-appear 0.2s ease-out;\n}\n\n@keyframes tag-chip-appear {\n  from { opacity: 0; transform: scale(0.8); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.tag-name {\n  white-space: nowrap;\n}\n\n.tag-remove {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: 1px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n  margin-left: 2px;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.tag-input {\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  flex: 1;\n  min-width: 100px;\n  padding: 2px 0;\n}\n\n.tag-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.tag-input:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tag-input-icon {\n  color: var(--ui-text-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  left: 0;\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  max-height: 200px;\n  overflow-y: auto;\n  padding: var(--space-1);\n}\n\n.tag-suggestion {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background: var(--color-gray-100);\n}\n\n.tag-suggestion-color {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.tag-suggestion-count {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS COMPONENT\n   ========================================================================== */\n\n.ai-suggestions {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  overflow: hidden;\n  box-shadow: var(--shadow-sm);\n  animation: ai-suggestions-appear 0.3s ease-out;\n}\n\n@keyframes ai-suggestions-appear {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.ai-suggestions.loading {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-suggestions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.ai-suggestions.loading .ai-suggestions-header {\n  background: var(--color-gray-50);\n  -webkit-backdrop-filter: none;\n  backdrop-filter: none;\n}\n\n.ai-loading-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--ui-text-primary);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n}\n\n.ai-suggestions.loading .ai-loading-content {\n  color: var(--ui-text-secondary);\n}\n\n.ai-icon {\n  width: 14px;\n  height: 14px;\n}\n\n.ai-icon.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.ai-suggestions-close {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions.loading .ai-suggestions-close {\n  color: var(--ui-text-tertiary);\n}\n\n.ai-suggestions-close:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions.loading .ai-suggestions-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions-toggle {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  margin-right: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-toggle:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions-content {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n}\n\n.ai-suggestion-section {\n  margin-bottom: var(--space-4);\n}\n\n.ai-suggestion-section:last-child {\n  margin-bottom: 0;\n}\n\n.suggestion-section-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-category-suggestions,\n.ai-tag-suggestions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.ai-category-chip,\n.ai-tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.ai-category-chip:hover,\n.ai-tag-chip:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.ai-category-chip.selected,\n.ai-tag-chip.selected {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.suggestion-name {\n  font-weight: 500;\n}\n\n.confidence-indicator {\n  font-size: 9px;\n  font-weight: 700;\n  color: var(--color-white);\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  min-width: 20px;\n  text-align: center;\n}\n\n.selected-icon {\n  margin-left: var(--space-1);\n}\n\n.ai-topics-section {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.ai-topics-label {\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-detected-topics {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n}\n\n.ai-topic-pill {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.ai-suggestions-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n  margin-top: var(--space-4);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.ai-action-btn {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.ai-action-btn:hover {\n  background: var(--color-gray-300);\n}\n\n.ai-action-btn.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.ai-action-btn.primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-action-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ai-action-btn.secondary {\n  background: transparent;\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-action-btn.secondary:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   ENHANCED DROPDOWN MENU STYLES\n   ========================================================================== */\n\n.dropdown-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu-item:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu-item:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.dropdown-menu-item.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu-item.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* ==========================================================================\n   INBOX CARD TAG STYLES\n   ========================================================================== */\n\n.inbox-card-tags {\n  margin-top: var(--space-3);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n/* ==========================================================================\n   ENHANCED BUTTON STYLES\n   ========================================================================== */\n\n.action-button {\n  background: none;\n  border: 1px solid transparent;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.action-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--color-gray-100);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n  border-radius: inherit;\n}\n\n.action-button:hover {\n  color: var(--ui-text-primary);\n  border-color: var(--ui-border);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.action-button:hover::before {\n  opacity: 1;\n}\n\n.action-button:active {\n  transform: translateY(0);\n  box-shadow: var(--shadow-inner);\n}\n\n.action-button > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Primary action button variant */\n.action-button.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n}\n\n.action-button.primary::before {\n  background: var(--color-primary-dark);\n}\n\n.action-button.primary:hover {\n  border-color: var(--color-primary-dark);\n  color: var(--color-white);\n}\n\n/* Danger action button variant */\n.action-button.danger {\n  color: var(--color-danger);\n}\n\n.action-button.danger::before {\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.action-button.danger:hover {\n  color: var(--color-danger-hover);\n  border-color: var(--color-danger);\n}\n\n/* ==========================================================================\n   SHARE MODAL STYLES\n   ========================================================================== */\n\n.share-link-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--color-gray-50);\n  color: var(--ui-text-primary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.share-link-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.share-link-input:read-only {\n  cursor: pointer;\n}\n\n.share-link-input:read-only:hover {\n  background: var(--color-gray-100);\n}\n\n/* ==========================================================================\n   TAB SYNC STYLES\n   ========================================================================== */\n\n.tab-sync-filters {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.tab-sync-filter-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.tab-sync-filter-row:last-child {\n  margin-bottom: 0;\n}\n\n.tab-sync-filter-checkbox {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"] {\n  width: 16px;\n  height: 16px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:hover {\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: -1px;\n  left: 2px;\n  color: var(--color-white);\n  font-size: 10px;\n  font-weight: 700;\n}\n\n.tab-sync-domain-filter {\n  flex: 1;\n  min-width: 200px;\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.tab-sync-domain-filter:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tab-sync-domain-filter::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n/* ==========================================================================\n   AUTH INPUT STYLES\n   ========================================================================== */\n\n.auth-input {\n  width: 100%;\n  padding: var(--space-3) var(--space-4);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.auth-input:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.auth-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.auth-input:invalid {\n  border-color: var(--color-danger);\n}\n\n.auth-input:invalid:focus {\n  border-color: var(--color-danger);\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS META STYLES\n   ========================================================================== */\n\n.ai-suggestions-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  color: rgba(255, 255, 255, 0.9);\n  font-size: var(--font-size-xs);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  display: none;\n}\n\n/* ==========================================================================\n   SMART COLLECTIONS STYLES\n   ========================================================================== */\n\n.smart-collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-fast);\n  position: relative;\n  overflow: hidden;\n}\n\n.smart-collection-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, #8b5cf6, #3b82f6, #10b981);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n}\n\n.smart-collection-card:hover::before {\n  opacity: 1;\n}\n\n.smart-collection-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  width: 100%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.smart-collection-header:hover {\n  background: var(--color-gray-50);\n}\n\n.smart-collection-icon {\n  font-size: var(--font-size-lg);\n  min-width: 24px;\n  text-align: center;\n}\n\n.smart-collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.smart-collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-1);\n}\n\n.smart-collection-name {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.smart-collection-badges {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.ai-badge {\n  color: var(--color-primary);\n  opacity: 0.8;\n}\n\n.auto-update-badge {\n  font-size: 10px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  background: var(--color-success);\n  color: white;\n  padding: 2px 6px;\n  border-radius: var(--radius-full);\n  line-height: 1;\n}\n\n.smart-collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin: 0;\n  line-height: 1.4;\n}\n\n.smart-collection-updated {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  margin-top: var(--space-1);\n  display: block;\n}\n\n.smart-collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.smart-collection-count {\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 32px;\n  text-align: center;\n}\n\n.refresh-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.refresh-button:hover:not(:disabled) {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.refresh-button .spinning {\n  animation: spin 1s linear infinite;\n}\n\n.smart-collection-content {\n  border-top: 1px solid var(--ui-border);\n  background: var(--color-gray-50);\n}\n\n.smart-collection-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.smart-collection-loading .loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid var(--color-gray-200);\n  border-top: 2px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.empty-smart-collection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n.empty-smart-collection .empty-icon {\n  color: var(--color-primary);\n  opacity: 0.6;\n  margin-bottom: var(--space-3);\n}\n\n.empty-smart-collection p {\n  font-weight: 500;\n  margin-bottom: var(--space-2);\n  color: var(--ui-text-primary);\n}\n\n.empty-subtitle {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.smart-collection-links {\n  padding: var(--space-3);\n}\n\n.smart-collection-links .link-card {\n  margin-bottom: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.smart-collection-links .link-card:last-child {\n  margin-bottom: 0;\n}\n\n/* Smart Collections Section Header */\n.smart-collections-section .section-header {\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  color: white;\n  border: none;\n}\n\n.smart-collections-section .section-header:hover {\n  background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));\n}\n\n.smart-collections-section .section-header .count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n/* Animation for smart collection expansion */\n.smart-collection-card.expanded {\n  box-shadow: var(--shadow-md);\n}\n\n.smart-collection-card.expanded .smart-collection-header {\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n/* Responsive adjustments for smart collections */\n@media (max-width: 480px) {\n  .smart-collection-header {\n    padding: var(--space-3);\n  }\n  \n  .smart-collection-name {\n    font-size: var(--font-size-sm);\n  }\n  \n  .smart-collection-description {\n    font-size: var(--font-size-xs);\n  }\n  \n  .smart-collection-actions {\n    gap: var(--space-1);\n  }\n  \n  .auto-update-badge {\n    font-size: 8px;\n    padding: 1px 4px;\n  }\n}\n\n/* ==========================================================================\n   SAVE PROMPT MODAL STYLES\n   ========================================================================== */\n\n.save-prompt-modal {\n  max-width: 600px;\n  width: 95%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.save-prompt-modal .modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: var(--space-2);\n}\n\n.save-prompt-modal .modal-footer {\n  flex-shrink: 0;\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-4);\n  margin-top: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n/* Custom scrollbar for save prompt modal */\n.save-prompt-modal .modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-track {\n  background: var(--color-gray-100);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n.save-prompt-link-preview {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-3);\n  margin-bottom: var(--space-4);\n}\n\n.link-preview-title {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n  line-height: 1.4;\n}\n\n.link-preview-url {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-reasons-section {\n  margin-bottom: var(--space-5);\n}\n\n.save-reasons-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.save-reasons-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: var(--space-3);\n}\n\n.save-reason-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-align: left;\n  width: 100%;\n}\n\n.save-reason-card:hover {\n  border-color: var(--color-primary);\n  background: var(--color-gray-50);\n}\n\n.save-reason-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 8%);\n  box-shadow: 0 0 0 1px var(--color-primary);\n}\n\n.save-reason-icon {\n  color: var(--color-primary);\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.save-reason-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.save-reason-label {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.save-reason-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.4;\n}\n\n.custom-reason-section {\n  margin-bottom: var(--space-5);\n}\n\n.custom-reason-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.custom-reason-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  resize: vertical;\n  min-height: 80px;\n  font-family: inherit;\n}\n\n.custom-reason-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.custom-reason-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.suggested-tags-section {\n  margin-bottom: var(--space-5);\n}\n\n.suggested-tags-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.suggested-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.suggested-tag {\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  background: var(--ui-element-background);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.suggested-tag:hover {\n  border-color: var(--color-primary);\n  color: var(--ui-text-primary);\n}\n\n.suggested-tag.selected {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n  color: white;\n}\n\n.save-prompt-tip {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-prompt-tip svg {\n  color: var(--color-warning);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for save prompt modal */\n@media (max-width: 480px) {\n  .save-prompt-modal {\n    max-width: 95%;\n    margin: var(--space-2);\n    max-height: 95vh;\n  }\n  \n  .save-reasons-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .save-reason-card {\n    padding: var(--space-2);\n  }\n  \n  .suggested-tags {\n    justify-content: center;\n  }\n  \n  .save-prompt-modal .modal-body {\n    padding-right: var(--space-1);\n  }\n}\n\n/* ==========================================================================\n   ACTIVITY TRACKER STYLES\n   ========================================================================== */\n\n.activity-tracker-modal {\n  max-width: 650px;\n  width: 95%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.activity-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.activity-loading .loading-spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.streak-section {\n  margin-bottom: var(--space-6);\n}\n\n.streak-card {\n  display: flex;\n  align-items: center;\n  gap: var(--space-4);\n  padding: var(--space-5);\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  border-radius: var(--radius-xl);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.streak-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n  pointer-events: none;\n}\n\n.streak-icon {\n  flex-shrink: 0;\n}\n\n.flame-active {\n  color: #ffd700;\n  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.5));\n}\n\n.flame-inactive {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.streak-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.streak-number {\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: var(--space-1);\n}\n\n.streak-label {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n  opacity: 0.9;\n}\n\n.streak-message {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.4;\n}\n\n.best-streak {\n  position: absolute;\n  top: var(--space-3);\n  right: var(--space-3);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: var(--space-3);\n  margin-bottom: var(--space-6);\n}\n\n.stat-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  transition: all var(--transition-fast);\n}\n\n.stat-card:hover {\n  border-color: var(--color-primary);\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n}\n\n.stat-icon {\n  color: var(--color-primary);\n  margin-bottom: var(--space-2);\n}\n\n.stat-number {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 500;\n}\n\n.weekly-activity {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-6);\n  text-align: center;\n}\n\n.weekly-activity h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.weekly-stat {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: var(--space-2);\n}\n\n.weekly-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.weekly-label {\n  font-size: var(--font-size-base);\n  color: var(--ui-text-secondary);\n}\n\n.recent-activities {\n  margin-bottom: var(--space-6);\n}\n\n.recent-activities h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.no-activities {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n}\n\n.no-activities p {\n  font-weight: 500;\n  margin: var(--space-2) 0;\n  color: var(--ui-text-primary);\n}\n\n.no-activities span {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n}\n\n.activities-list {\n  space-y: var(--space-2);\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n}\n\n.activity-item:hover {\n  background: var(--color-gray-50);\n}\n\n.activity-icon {\n  flex-shrink: 0;\n}\n\n.activity-icon.save { color: var(--color-success); }\n.activity-icon.read { color: var(--color-primary); }\n.activity-icon.highlight { color: var(--color-warning); }\n.activity-icon.organize { color: #8b5cf6; }\n.activity-icon.search { color: var(--ui-text-secondary); }\n.activity-icon.default { color: var(--ui-text-tertiary); }\n\n.activity-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.activity-description {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.activity-time {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n}\n\n.motivation-section {\n  margin-top: var(--space-4);\n}\n\n.motivation-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  color: white;\n}\n\n.motivation-content h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n}\n\n.motivation-content p {\n  font-size: var(--font-size-sm);\n  line-height: 1.5;\n  opacity: 0.9;\n}\n\n.activity-error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* Responsive adjustments for activity tracker */\n@media (max-width: 480px) {\n  .activity-tracker-modal {\n    max-width: 95%;\n    margin: var(--space-4);\n  }\n  \n  .streak-card {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--space-3);\n  }\n  \n  .best-streak {\n    position: static;\n    margin-top: var(--space-2);\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .stat-card {\n    padding: var(--space-3);\n  }\n  \n  .stat-number {\n    font-size: var(--font-size-xl);\n  }\n  \n  .weekly-number {\n    font-size: var(--font-size-2xl);\n  }\n}\n\n/* ==========================================================================\n   DIGEST SETTINGS COMPONENT\n   ========================================================================== */\n\n.digest-settings {\n  padding: 1rem 0;\n}\n\n.digest-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  margin-bottom: 2rem;\n}\n\n.digest-header-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.digest-icon {\n  opacity: 0.9;\n}\n\n.digest-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.digest-header p {\n  margin: 0.25rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.digest-config {\n  space-y: 2rem;\n}\n\n.digest-config .setting-group {\n  margin-bottom: 2rem;\n}\n\n.digest-config h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 0.5rem;\n}\n\n.digest-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.digest-actions .button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.digest-preview {\n  background: #f8fafc;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.digest-preview h4 {\n  margin: 0 0 1rem;\n  color: #1f2937;\n  font-size: 1.125rem;\n}\n\n.preview-content {\n  space-y: 1rem;\n}\n\n.preview-header {\n  text-align: center;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.preview-header h5 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.preview-header p {\n  margin: 0.5rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.preview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.preview-stat {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-stat .stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #667eea;\n  line-height: 1;\n}\n\n.preview-stat .stat-label {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n}\n\n.preview-sections {\n  space-y: 1rem;\n}\n\n.preview-section {\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-section h6 {\n  margin: 0 0 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.preview-section p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.preview-ai-summary {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #0ea5e9;\n}\n\n.preview-ai-summary em {\n  font-size: 0.875rem;\n  color: #0369a1;\n}\n\n.preview-insights {\n  padding: 1rem;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border-radius: 8px;\n  border: 1px solid #bae6fd;\n  margin-top: 1rem;\n}\n\n.preview-insights h6 {\n  margin: 0 0 0.5rem;\n  color: #0369a1;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.preview-insights p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #075985;\n}\n\n.digest-message {\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.digest-message.success {\n  background: #dcfce7;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.digest-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n} \n\n/* Analytics Dashboard Styles */\n.analytics-dashboard {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.dashboard-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.dashboard-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.timeframe-selector {\n  display: flex;\n  gap: 4px;\n  background: #f3f4f6;\n  border-radius: 6px;\n  padding: 2px;\n}\n\n.timeframe-selector button {\n  padding: 6px 12px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.timeframe-selector button.active {\n  background: white;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.dashboard-content {\n  padding: 16px;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.stat-icon {\n  color: #6366f1;\n  margin-bottom: 8px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #111827;\n  margin-bottom: 4px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insights-section,\n.recommendations-section {\n  margin-bottom: 24px;\n}\n\n.insights-section h3,\n.recommendations-section h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.insight-cards,\n.recommendation-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.insight-card,\n.recommendation-card {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 6px;\n  border-left: 3px solid #6366f1;\n}\n\n.recommendation-card {\n  border-left-color: #10b981;\n}\n\n.dashboard-loading,\n.dashboard-empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.empty-icon {\n  color: #9ca3af;\n  margin-bottom: 16px;\n}\n\n/* AI Insights Styles */\n.ai-insights {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.insights-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.insights-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.refresh-button {\n  padding: 8px;\n  border: 1px solid #e5e7eb;\n  background: white;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.refresh-button:hover {\n  background: #f9fafb;\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.spinning {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.insights-tabs {\n  display: flex;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 73px;\n  z-index: 99;\n}\n\n.insights-tabs .tab {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  padding: 12px 8px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 14px;\n  border-bottom: 2px solid transparent;\n}\n\n.insights-tabs .tab:hover {\n  background: #f9fafb;\n}\n\n.insights-tabs .tab.active {\n  color: #6366f1;\n  border-bottom-color: #6366f1;\n  background: #f0f0ff;\n}\n\n.insights-tabs .count {\n  background: #6366f1;\n  color: white;\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 10px;\n  min-width: 18px;\n  text-align: center;\n}\n\n.insights-content {\n  padding: 16px;\n}\n\n.quick-insights {\n  margin-bottom: 24px;\n}\n\n.quick-insights h3 {\n  margin-bottom: 12px;\n  font-size: 14px;\n  font-weight: 600;\n  color: #6b7280;\n}\n\n.recent-items {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.recent-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  font-size: 14px;\n}\n\n.recent-item:hover {\n  background: #e5e7eb;\n}\n\n.recent-item:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.insights-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.insight-card,\n.flashcard,\n.connection-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.insight-header,\n.flashcard-header,\n.connection-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.insight-type {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insight-rating {\n  display: flex;\n  gap: 2px;\n}\n\n.star {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #d1d5db;\n  transition: color 0.2s;\n}\n\n.star.filled {\n  color: #fbbf24;\n}\n\n.insight-content {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #374151;\n}\n\n.insight-meta {\n  margin-top: 8px;\n  display: flex;\n  gap: 8px;\n}\n\n.difficulty {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.difficulty.easy {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.difficulty.medium {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.difficulty.hard {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.confidence {\n  padding: 2px 8px;\n  background: #e0e7ff;\n  color: #3730a3;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.flashcard-content .question {\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.flashcard-content .answer {\n  color: #6b7280;\n}\n\n.relationship {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: capitalize;\n}\n\n.relationship.related {\n  background: #dbeafe;\n  color: #1e40af;\n}\n\n.relationship.supports {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.relationship.contradicts {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.relationship.cites {\n  background: #e0e7ff;\n  color: #3730a3;\n}\n\n.relationship.builds-on {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.strength {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.connection-target {\n  font-size: 14px;\n  margin-bottom: 4px;\n}\n\n.connection-note {\n  font-size: 12px;\n  color: #6b7280;\n  font-style: italic;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #6b7280;\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: #374151;\n}\n\n/* Action buttons styling */\n.analytics-button,\n.ai-insights-button {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.analytics-button:hover,\n.ai-insights-button:hover {\n  background: #e5e7eb;\n}\n\n.ai-insights-button {\n  background: #f0f0ff;\n  border-color: #c7d2fe;\n  color: #4338ca;\n}\n\n.ai-insights-button:hover {\n  background: #e0e7ff;\n}`,"",{version:3,sources:["webpack://./src/sidepanel/sidepanel.css"],names:[],mappings:"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",sourcesContent:["/* Modern Reset and Base Styles */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  /* Brand Colors */\n  --brand-hue: 244;\n  --color-primary: hsl(var(--brand-hue), 81%, 59%); /* #4f46e5 */\n  --color-primary-light: hsl(var(--brand-hue), 85%, 66%); /* #6366f1 */\n  --color-primary-dark: hsl(var(--brand-hue), 79%, 53%); /* #4338ca */\n\n  /* Semantic Colors */\n  --color-success: #10b981;\n  --color-warning: #f59e0b;\n  --color-danger: #ef4444;\n  --color-danger-hover: #d92d20;\n\n  /* Neutral Colors (Cool Gray) */\n  --color-white: #ffffff;\n  --color-gray-50: #f8fafc;\n  --color-gray-100: #f1f5f9;\n  --color-gray-200: #e2e8f0;\n  --color-gray-300: #cbd5e1;\n  --color-gray-400: #94a3b8;\n  --color-gray-500: #64748b;\n  --color-gray-600: #475569;\n  --color-gray-700: #334155;\n  --color-gray-800: #1e293b;\n  --color-gray-900: #0f172a;\n\n  /* UI Colors */\n  --ui-background: var(--color-gray-50);\n  --ui-element-background: var(--color-white);\n  --ui-border: var(--color-gray-200);\n  --ui-border-hover: var(--color-gray-300);\n  --ui-text-primary: var(--color-gray-800);\n  --ui-text-secondary: var(--color-gray-500);\n  --ui-text-tertiary: var(--color-gray-400);\n  --ui-text-interactive: var(--color-primary);\n  --ui-text-interactive-hover: var(--color-primary-dark);\n  \n  /* Spacing System (slightly tweaked) */\n  --space-1: 0.25rem; /* 4px */\n  --space-2: 0.5rem;  /* 8px */\n  --space-3: 0.75rem; /* 12px */\n  --space-4: 1rem;    /* 16px */\n  --space-5: 1.5rem;  /* 24px */\n  --space-6: 2rem;    /* 32px */\n  --space-8: 3rem;    /* 48px */\n  --space-10: 4rem;   /* 64px */\n  --space-12: 5rem;   /* 80px */\n  \n  /* Typography */\n  --font-family: Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-base: 0.9375rem; /* 15px */\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-size-2xl: 1.5rem;\n  --font-size-3xl: 2rem;\n  \n  /* Border Radius */\n  --radius-sm: 0.25rem;\n  --radius-md: 0.5rem;\n  --radius-lg: 0.75rem;\n  --radius-xl: 1rem;\n  --radius-full: 9999px;\n  \n  /* Shadows (more subtle) */\n  --shadow-sm: 0 1px 2px 0 rgba(15, 23, 42, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.1), 0 2px 4px -2px rgba(15, 23, 42, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -4px rgba(15, 23, 42, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.1), 0 8px 10px -6px rgba(15, 23, 42, 0.1);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.05);\n\n  /* Transitions */\n  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Z-index */\n  --z-base: 1;\n  --z-sticky: 10;\n  --z-dropdown: 50;\n  --z-modal: 100;\n  --z-overlay: 90;\n}\n\nbody {\n  font-family: var(--font-family);\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background-color: var(--ui-background);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Main Sidepanel Layout */\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: var(--ui-background);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family);\n  overflow: hidden;\n  position: relative;\n}\n\n/* Modern Header Design */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-sticky);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.header-title h1 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  letter-spacing: -0.025em;\n}\n\n.header-icon {\n  color: var(--color-primary);\n  width: 22px;\n  height: 22px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.save-button,\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.save-button {\n  background: var(--color-primary);\n  color: var(--color-white);\n  box-shadow: var(--shadow-sm);\n}\n\n.save-button:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n.tab-sync-button,\n.logout-button,\n.floating-ai-button,\n.sticky-notes-button,\n.screenshot-button {\n  background: transparent;\n  color: var(--ui-text-secondary);\n}\n\n.tab-sync-button:hover,\n.logout-button:hover,\n.floating-ai-button:hover,\n.sticky-notes-button:hover,\n.screenshot-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n  transform: none;\n}\n\n.floating-ai-button {\n  color: var(--color-primary);\n}\n\n.floating-ai-button:hover {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.sticky-notes-button {\n  color: var(--color-warning);\n}\n\n.sticky-notes-button:hover {\n  background: var(--color-warning);\n  color: var(--color-white);\n}\n\n.screenshot-button {\n  color: #8b5cf6;\n}\n\n.screenshot-button:hover {\n  background: #8b5cf6;\n  color: var(--color-white);\n}\n\n/* Enhanced Search Design */\n.search-container {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-icon {\n  position: absolute;\n  left: var(--space-2);\n  color: var(--ui-text-tertiary);\n  pointer-events: none;\n  z-index: 1;\n  width: 16px;\n  height: 16px;\n}\n\n.search-input {\n  width: 100%;\n  height: 36px;\n  padding: 0 var(--space-3) 0 36px;\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-base);\n  outline: none;\n}\n\n.search-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.search-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.search-clear,\n.search-power-mode {\n  position: absolute;\n  right: var(--space-2);\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.search-clear:hover,\n.search-power-mode:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.search-spinner {\n  position: absolute;\n  right: var(--space-3);\n  color: var(--color-primary);\n  animation: spin 1s linear infinite;\n}\n\n.command-hint-button {\n  position: absolute;\n  right: var(--space-2);\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background-color: transparent;\n  color: var(--ui-text-tertiary);\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-xs);\n  cursor: pointer;\n  border: none;\n  transition: all var(--transition-fast);\n}\n\n.command-hint-button:hover {\n    background-color: var(--color-gray-100);\n    color: var(--ui-text-secondary);\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* ==========================================================================\n   MODAL STYLES\n   ========================================================================== */\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(15, 23, 42, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-overlay);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: var(--ui-element-background);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n  padding: var(--space-6);\n  animation: modal-fade-in 0.2s var(--transition-base);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n@keyframes modal-fade-in {\n  from { opacity: 0; transform: scale(0.95); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--space-4);\n  padding-bottom: var(--space-3);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.modal-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n}\n\n.modal-close-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.modal-close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.modal-body {\n  /* No specific styles needed for the body wrapper itself */\n}\n\n.modal-footer {\n  margin-top: var(--space-5);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n}\n\n/* Modal form elements */\n.form-group {\n    margin-bottom: var(--space-4);\n}\n.form-group label {\n    display: block;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-2);\n}\n.form-group input[type=\"text\"],\n.form-group textarea {\n    width: 100%;\n    padding: var(--space-2) var(--space-3);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    transition: all var(--transition-fast);\n}\n.form-group input[type=\"text\"]:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n}\n\n.button {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-2) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.button:hover {\n    background: var(--color-gray-300);\n}\n.button.primary {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n.button.primary:hover {\n    background: var(--color-primary-dark);\n}\n\n/* ==========================================================================\n   SETTINGS STYLES\n   ========================================================================== */\n\n.settings-modal .modal-content {\n    max-width: 800px; /* Wider for settings */\n    padding: 0;\n    display: flex;\n    overflow: hidden;\n}\n\n.settings-content {\n    display: flex;\n    width: 100%;\n}\n\n.settings-tabs {\n    width: 200px;\n    flex-shrink: 0;\n    padding: var(--space-4);\n    border-right: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n}\n\n.settings-tab {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.settings-tab:hover {\n    color: var(--ui-text-primary);\n    background: var(--color-gray-200);\n}\n.settings-tab.active {\n    color: var(--ui-text-primary);\n    background: var(--color-white);\n    box-shadow: var(--shadow-sm);\n}\n\n.settings-panel {\n    flex: 1;\n    padding: var(--space-5) var(--space-6);\n    overflow-y: auto;\n    max-height: 80vh;\n}\n\n.settings-panel h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.settings-panel p {\n    color: var(--ui-text-secondary);\n    margin-bottom: var(--space-4);\n}\n\n.setting-group {\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--space-5);\n    overflow: hidden;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--space-3) var(--space-4);\n}\n.setting-item:not(:last-child) {\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.setting-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n}\n.setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.setting-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-4);\n    margin-top: var(--space-4);\n}\n.stat-card {\n    background: var(--color-gray-100);\n    padding: var(--space-4);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--ui-border);\n}\n.stat-number {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n.stat-label {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.settings-message {\n    margin-top: var(--space-4);\n    padding: var(--space-3) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}\n.settings-message.success {\n    background-color: hsl(142.1 76.2% 36.3% / 15%);\n    color: hsl(142.1 70.2% 30.3%);\n}\n.settings-message.error {\n    background-color: hsl(0 72.2% 50.6% / 15%);\n    color: hsl(0 62.2% 45.6%);\n}\n\n.settings-button {\n    /* uses .button styles */\n}\n.settings-button.danger {\n    background-color: var(--color-danger);\n    color: var(--color-white);\n}\n.settings-button.danger:hover {\n    background-color: var(--color-danger-hover);\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n}\n.toggle-switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--color-gray-300);\n  transition: .4s;\n  border-radius: var(--radius-full);\n}\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 14px;\n  width: 14px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\ninput:checked + .toggle-slider {\n  background-color: var(--color-primary);\n}\ninput:checked + .toggle-slider:before {\n  transform: translateX(16px);\n}\n\n/* ==========================================================================\n   SIDEBAR SETTINGS STYLES\n   ========================================================================== */\n\n.settings-sidebar {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--ui-element-background);\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n}\n\n.settings-header {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3) var(--space-4);\n    background: var(--ui-element-background);\n    border-bottom: 1px solid var(--ui-border);\n    flex-shrink: 0;\n}\n\n.settings-back-button {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.settings-back-button:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n}\n\n.settings-header h2 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin: 0;\n}\n\n.settings-tabs-horizontal {\n    display: flex;\n    padding: var(--space-2) var(--space-4);\n    background: var(--color-gray-50);\n    border-bottom: 1px solid var(--ui-border);\n    gap: var(--space-1);\n    overflow-x: auto;\n    flex-shrink: 0;\n}\n\n.settings-tab-horizontal {\n    background: none;\n    border: none;\n    color: var(--ui-text-secondary);\n    cursor: pointer;\n    padding: var(--space-2);\n    border-radius: var(--radius-md);\n    transition: all var(--transition-fast);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 40px;\n    height: 40px;\n}\n\n.settings-tab-horizontal:hover {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n}\n\n.settings-tab-horizontal.active {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n\n.settings-content-sidebar {\n    flex: 1;\n    overflow-y: auto;\n    padding: var(--space-4);\n}\n\n.settings-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--space-8);\n    color: var(--ui-text-secondary);\n}\n\n.settings-section {\n    margin-bottom: var(--space-6);\n}\n\n.settings-section h3 {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-2);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.account-info {\n    margin-bottom: var(--space-5);\n}\n\n.account-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n}\n\n.account-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n}\n\n.account-value {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid-sidebar {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n    margin-bottom: var(--space-5);\n}\n\n.stat-card-sidebar {\n    background: var(--color-gray-50);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    text-align: center;\n    border: 1px solid var(--ui-border);\n}\n\n.stat-card-sidebar .stat-number {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n\n.stat-card-sidebar .stat-label {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.setting-list {\n    space-y: var(--space-1);\n}\n\n.setting-item-sidebar {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    padding: var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-2);\n    gap: var(--space-3);\n}\n\n.setting-item-sidebar .setting-info {\n    flex: 1;\n    min-width: 0;\n}\n\n.setting-item-sidebar .setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-sm);\n    margin-bottom: var(--space-1);\n}\n\n.setting-item-sidebar .setting-description {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n    line-height: 1.4;\n}\n\n.form-control-sidebar {\n    width: 100%;\n    max-width: 200px;\n    padding: var(--space-2);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    background: var(--ui-element-background);\n    color: var(--ui-text-primary);\n}\n\n.form-control-sidebar:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.button-small {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-1) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-xs);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n    flex-shrink: 0;\n}\n\n.button-small:hover {\n    background: var(--color-gray-300);\n}\n\n.button-small.danger {\n    background: var(--color-danger);\n    color: var(--color-white);\n}\n\n.button-small.danger:hover {\n    background: var(--color-danger-hover);\n}\n\n.setting-actions {\n    margin-top: var(--space-5);\n}\n\n.about-info-sidebar {\n    margin-bottom: var(--space-5);\n}\n\n.app-info-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    margin-bottom: var(--space-3);\n}\n\n.app-logo-sidebar {\n    width: 32px;\n    height: 32px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    border-radius: var(--radius-md);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: var(--font-size-lg);\n}\n\n.app-name {\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    font-size: var(--font-size-base);\n}\n\n.app-version {\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n\n.app-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    line-height: 1.5;\n}\n\n.support-links-sidebar h4 {\n    font-size: var(--font-size-sm);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-3);\n}\n\n.support-link-list {\n    display: flex;\n    flex-direction: column;\n    gap: var(--space-2);\n}\n\n.support-link-sidebar {\n    display: flex;\n    align-items: center;\n    gap: var(--space-2);\n    padding: var(--space-2) var(--space-3);\n    background: var(--color-gray-50);\n    border-radius: var(--radius-md);\n    color: var(--ui-text-secondary);\n    text-decoration: none;\n    font-size: var(--font-size-sm);\n    transition: all var(--transition-fast);\n}\n\n.support-link-sidebar:hover {\n    background: var(--color-gray-100);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n}\n\n/* Mobile responsive adjustments */\n@media (max-width: 480px) {\n    .settings-tabs-horizontal {\n        padding: var(--space-2);\n        gap: var(--space-1);\n    }\n    \n    .settings-tab-horizontal {\n        min-width: 36px;\n        height: 36px;\n        padding: var(--space-1);\n    }\n    \n    .settings-content-sidebar {\n        padding: var(--space-3);\n    }\n    \n    .stats-grid-sidebar {\n        grid-template-columns: 1fr;\n    }\n    \n    .setting-item-sidebar {\n        flex-direction: column;\n        align-items: stretch;\n        gap: var(--space-2);\n    }\n    \n    .form-control-sidebar {\n        max-width: none;\n    }\n}\n\n/* TAG EDITOR */\n.tag-editor {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.tag-editor-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.tag-editor-loading {\n  padding: var(--space-3);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n}\n\n/* COLLECTIONS MENU */\n.collections-menu {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.collections-header {\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  transition: background-color var(--transition-fast);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.collection-option:last-child {\n  border-bottom: none;\n}\n\n.collection-option:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* Inbox Actions */\n.inbox-section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping on small screens */\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-section-title .section-header {\n  padding: 0;\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 20px;\n  text-align: center;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button,\n.inbox-actions select {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button:hover,\n.inbox-actions select:hover {\n  background: var(--color-gray-100);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n}\n\n.inbox-actions select {\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 24 24' stroke='%2394a3b8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='m6 9 6 6 6-6'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right var(--space-2) center;\n  padding-right: var(--space-6);\n}\n\n/* Footer */\n.footer {\n  padding: var(--space-2) var(--space-4);\n  background: var(--ui-element-background);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.footer-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .search-container {\n    padding: var(--space-2) var(--space-3);\n  }\n  \n  .content {\n    padding: var(--space-2);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-3);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* Content Area */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--space-2) var(--space-3);\n  scroll-behavior: smooth;\n}\n\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n/* Section Headers */\n.section {\n  margin-bottom: var(--space-3);\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-2) 0;\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: color var(--transition-fast);\n  position: relative;\n}\n\n.section-header:hover {\n  color: var(--ui-text-interactive);\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 24px;\n  text-align: center;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.add-collection-button:hover {\n  color: var(--ui-text-interactive);\n  background: var(--color-gray-100);\n  transform: scale(1.1);\n}\n\n.section-content {\n  margin-top: var(--space-2);\n}\n\n/* Modern Card Design Foundation */\n.card-base {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-3);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n}\n\n.card-base:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.card-base::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  opacity: 0;\n  transition: opacity var(--transition-base);\n}\n\n.card-base:hover::before {\n  opacity: 1;\n}\n\n/* Enhanced Favicon System */\n.favicon-container {\n  position: relative;\n  width: 36px;\n  height: 36px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n}\n\n.favicon-container img {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n  transition: transform var(--transition-fast);\n}\n\n.favicon-container:hover img {\n  transform: scale(1.05);\n}\n\n.favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--color-white);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n/* Domain Color System */\n.domain-github { background: linear-gradient(135deg, #24292e, #586069); }\n.domain-stackoverflow { background: linear-gradient(135deg, #f48024, #fe7a15); }\n.domain-medium { background: linear-gradient(135deg, #00ab6c, #00d084); }\n.domain-youtube { background: linear-gradient(135deg, #ff0000, #cc0000); }\n.domain-twitter { background: linear-gradient(135deg, #1da1f2, #0d8bd9); }\n.domain-linkedin { background: linear-gradient(135deg, #0077b5, #005885); }\n.domain-reddit { background: linear-gradient(135deg, #ff4500, #ff6500); }\n.domain-dev { background: linear-gradient(135deg, #0a0a0a, #2d2d2d); }\n\n/* Typography Improvements */\n.link-title,\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  line-height: 1.4;\n  margin-bottom: var(--space-1);\n  cursor: pointer;\n  transition: color var(--transition-fast);\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.link-title:hover,\n.inbox-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-meta,\n.inbox-card-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-bottom: var(--space-2);\n}\n\n.link-domain {\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n}\n\n.link-date::before {\n  content: '•';\n  margin: 0 var(--space-2);\n  color: var(--ui-text-tertiary);\n}\n\n/* Action Buttons */\n.action-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Enhanced Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  min-width: 180px;\n  padding: var(--space-1);\n  margin-top: 0;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu button.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-10);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner {\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-primary);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n/* Empty States */\n.empty-state {\n  text-align: center;\n  padding: var(--space-10) var(--space-4);\n  color: var(--ui-text-secondary);\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--color-gray-300);\n  margin-bottom: var(--space-4);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  max-width: 300px;\n  margin: 0 auto var(--space-4);\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n/* ==========================================================================\n   MODERN CARD SYSTEM - COMPLETE REDESIGN\n   ========================================================================== */\n\n/* ===== INBOX CARD STYLES ===== */\n.inbox-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-2);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.inbox-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.inbox-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-md);\n}\n\n.inbox-card-content {\n  padding: var(--space-3);\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-checkbox {\n  padding-top: 5px; /* Align with text */\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"] {\n  width: 18px;\n  height: 18px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:hover {\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: 0px;\n  left: 3px;\n  color: var(--color-white);\n  font-size: 12px;\n  font-weight: 700;\n}\n\n.inbox-card-main-content { /* New wrapper */\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.inbox-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.inbox-card-body {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n}\n\n.inbox-card-domain {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 400;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.inbox-card-link,\n.inbox-card-menu-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--ui-text-secondary);\n  background: transparent;\n}\n\n.inbox-card-link:hover,\n.inbox-card-menu-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n/* Let dropdowns be handled by the global dropdown styles */\n.inbox-card-menu,\n.inbox-card-submenu {\n  /* Styles are now handled by .dropdown-menu */\n  display: none; /* Hide if not actively shown by JS */\n}\n\n.inbox-card-summary,\n.inbox-card-note {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  border-left: 3px solid var(--color-gray-300);\n}\n\n.inbox-card-summary p,\n.inbox-card-note p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.inbox-card-highlights {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.highlights-toggle {\n  background: none;\n  border: none;\n  color: var(--ui-text-interactive);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n  padding: var(--space-1) 0;\n}\n\n.highlights-toggle:hover {\n  color: var(--ui-text-interactive-hover);\n}\n\n.highlights-chevron {\n  transition: transform var(--transition-fast);\n  font-size: 10px;\n}\n\n.highlights-chevron.expanded {\n  transform: rotate(180deg);\n}\n\n/* ===== LINK CARD STYLES ===== */\n.link-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.link-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.link-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n}\n\n.link-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.link-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.link-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.link-card-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-card-info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.link-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.link-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-meta {\n  margin-bottom: var(--space-3);\n}\n\n.link-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n/* TAG STYLES */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-top: var(--space-3);\n}\n\n.link-tag {\n  background: hsl(var(--brand-hue) 81% 59% / 10%);\n  color: var(--ui-text-interactive);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 3px var(--space-2);\n  border-radius: var(--radius-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: none;\n}\n\n.link-tag:hover {\n  background: hsl(var(--brand-hue) 81% 59% / 20%);\n}\n\n/* CATEGORY BADGE */\n.link-category {\n  margin-top: var(--space-3);\n}\n\n.category-badge {\n  background: var(--color-gray-600);\n  color: var(--color-white);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n/* NOTES AND SUMMARIES */\n.link-note,\n.link-summary {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n}\n\n.link-note strong,\n.link-summary strong {\n  color: var(--ui-text-primary);\n  font-weight: 600;\n}\n\n/* HIGHLIGHTS SECTION */\n.link-highlights-section {\n  margin-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-3);\n}\n\n.highlights-header {\n  margin-bottom: var(--space-3);\n}\n\n/* ===== COLLECTION CARD STYLES ===== */\n.collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3) var(--space-4);\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: background-color var(--transition-fast);\n}\n\n.collection-card.expanded .collection-header {\n   border-bottom: 1px solid var(--ui-border);\n}\n\n\n.collection-header:hover {\n  background-color: var(--color-gray-50);\n}\n\n.collection-icon {\n  color: var(--ui-text-tertiary);\n}\n\n.collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-weight: 600;\n}\n\n.public-indicator {\n    color: var(--ui-text-tertiary);\n}\n\n.collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-top: 2px;\n  display: block;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.collection-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n}\n\n.collection-content {\n  padding: var(--space-4);\n}\n\n.empty-collection {\n  padding: var(--space-4);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* ===== SEARCH RESULT CARD STYLES ===== */\n.search-result-card {\n  position: relative;\n  margin-bottom: var(--space-4);\n  border: 1px dashed var(--ui-border-hover);\n  border-radius: var(--radius-xl);\n  padding-top: var(--space-5);\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: var(--space-2);\n  right: var(--space-4);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  color: var(--ui-text-tertiary);\n  background-color: var(--color-gray-100);\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.search-headline {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  padding: 0 var(--space-4) var(--space-3);\n  border-bottom: 1px dashed var(--ui-border);\n  margin-bottom: var(--space-3);\n}\n\n.search-headline em {\n  font-style: normal;\n  background-color: hsl(var(--brand-hue) 81% 59% / 15%);\n  color: var(--ui-text-interactive-hover);\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.search-result-card .link-card {\n    border: none;\n    margin-bottom: 0;\n    box-shadow: none;\n}\n.search-result-card .link-card:hover {\n    transform: none;\n    box-shadow: none;\n}\n\n.about-info {\n    margin-bottom: var(--space-5);\n}\n.app-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-4);\n    margin-bottom: var(--space-4);\n}\n.app-logo {\n    width: 48px;\n    height: 48px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n}\n.app-name {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n}\n.app-version {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.support-links h4 {\n    font-size: var(--font-size-base);\n    font-weight: 600;\n    margin-bottom: var(--space-3);\n}\n.link-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n}\n.support-link {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    background: var(--color-gray-50);\n    border: 1px solid var(--ui-border);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n    transition: all var(--transition-fast);\n}\n.support-link:hover {\n    background: var(--color-gray-100);\n    border-color: var(--ui-border-hover);\n}\n\n/* ==========================================================================\n   COMMAND PALETTE STYLES\n   ========================================================================== */\n.command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.6);\n    display: flex;\n    align-items: flex-start; /* Align to top */\n    justify-content: center;\n    padding-top: 15vh; /* Push it down a bit */\n    z-index: var(--z-overlay);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n}\n.command-palette {\n    background: var(--ui-element-background);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-xl);\n    width: 90%;\n    max-width: 600px;\n    overflow: hidden;\n    animation: command-palette-fade-in 0.2s var(--transition-base);\n}\n@keyframes command-palette-fade-in {\n  from { opacity: 0; transform: translateY(-10px) scale(0.98); }\n  to { opacity: 1; transform: translateY(0) scale(1); }\n}\n\n.command-palette-header {\n    padding: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n.command-palette-search-icon {\n    position: absolute;\n    left: var(--space-3);\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-input {\n    width: 100%;\n    height: 40px;\n    padding: 0 var(--space-3) 0 var(--space-6);\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: var(--font-size-lg);\n    color: var(--ui-text-primary);\n}\n\n.command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: var(--space-2);\n}\n\n.command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background-color var(--transition-fast);\n}\n.command-palette-item.selected {\n    background-color: var(--color-gray-100);\n}\n.command-palette-item-icon {\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n}\n.command-palette-item-title {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.command-palette-item-subtitle {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-action {\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-empty {\n    text-align: center;\n    padding: var(--space-6);\n    color: var(--ui-text-secondary);\n}\n\n.command-palette-footer {\n    padding: var(--space-2) var(--space-3);\n    border-top: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n.command-palette-tips {\n    display: flex;\n    gap: var(--space-4);\n}\n.command-palette-tips kbd {\n    background: var(--color-white);\n    border: 1px solid var(--ui-border);\n    padding: 2px 4px;\n    border-radius: var(--radius-sm);\n    box-shadow: var(--shadow-sm);\n}\n\n@keyframes card-fade-in {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* ==========================================================================\n   TAG FILTERS COMPONENT\n   ========================================================================== */\n\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n  margin-bottom: var(--space-2);\n  padding: var(--space-2) var(--space-3);\n  background: var(--ui-element-background);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n.tag-filter {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.tag-filter.active {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.tag-filter.active:hover {\n  background: var(--color-primary-dark);\n  border-color: var(--color-primary-dark);\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: var(--color-white);\n  color: var(--ui-text-secondary);\n  font-size: 10px;\n  font-weight: 600;\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  min-width: 16px;\n  text-align: center;\n  margin-left: var(--space-1);\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--color-primary);\n}\n\n.tag-filter-more {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n  font-style: italic;\n  padding: var(--space-1) var(--space-2);\n}\n\n.tag-filter-skeleton {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-sm);\n  font-style: italic;\n  padding: var(--space-2);\n}\n\n/* ==========================================================================\n   TAG INPUT COMPONENT\n   ========================================================================== */\n\n.tag-input-container {\n  position: relative;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-2);\n  min-height: 40px;\n  transition: all var(--transition-fast);\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  padding: 2px var(--space-2);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  animation: tag-chip-appear 0.2s ease-out;\n}\n\n@keyframes tag-chip-appear {\n  from { opacity: 0; transform: scale(0.8); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.tag-name {\n  white-space: nowrap;\n}\n\n.tag-remove {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: 1px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n  margin-left: 2px;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.tag-input {\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  flex: 1;\n  min-width: 100px;\n  padding: 2px 0;\n}\n\n.tag-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.tag-input:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tag-input-icon {\n  color: var(--ui-text-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  left: 0;\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  max-height: 200px;\n  overflow-y: auto;\n  padding: var(--space-1);\n}\n\n.tag-suggestion {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background: var(--color-gray-100);\n}\n\n.tag-suggestion-color {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.tag-suggestion-count {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS COMPONENT\n   ========================================================================== */\n\n.ai-suggestions {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  margin-bottom: var(--space-2);\n  overflow: hidden;\n  box-shadow: var(--shadow-sm);\n  animation: ai-suggestions-appear 0.3s ease-out;\n}\n\n@keyframes ai-suggestions-appear {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.ai-suggestions.loading {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-suggestions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.ai-suggestions.loading .ai-suggestions-header {\n  background: var(--color-gray-50);\n  -webkit-backdrop-filter: none;\n  backdrop-filter: none;\n}\n\n.ai-loading-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--ui-text-primary);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n}\n\n.ai-suggestions.loading .ai-loading-content {\n  color: var(--ui-text-secondary);\n}\n\n.ai-icon {\n  width: 14px;\n  height: 14px;\n}\n\n.ai-icon.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.ai-suggestions-close {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions.loading .ai-suggestions-close {\n  color: var(--ui-text-tertiary);\n}\n\n.ai-suggestions-close:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions.loading .ai-suggestions-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions-toggle {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  margin-right: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-toggle:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions-content {\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n}\n\n.ai-suggestion-section {\n  margin-bottom: var(--space-4);\n}\n\n.ai-suggestion-section:last-child {\n  margin-bottom: 0;\n}\n\n.suggestion-section-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-category-suggestions,\n.ai-tag-suggestions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.ai-category-chip,\n.ai-tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.ai-category-chip:hover,\n.ai-tag-chip:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.ai-category-chip.selected,\n.ai-tag-chip.selected {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.suggestion-name {\n  font-weight: 500;\n}\n\n.confidence-indicator {\n  font-size: 9px;\n  font-weight: 700;\n  color: var(--color-white);\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  min-width: 20px;\n  text-align: center;\n}\n\n.selected-icon {\n  margin-left: var(--space-1);\n}\n\n.ai-topics-section {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.ai-topics-label {\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-detected-topics {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n}\n\n.ai-topic-pill {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.ai-suggestions-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n  margin-top: var(--space-4);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.ai-action-btn {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.ai-action-btn:hover {\n  background: var(--color-gray-300);\n}\n\n.ai-action-btn.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.ai-action-btn.primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-action-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ai-action-btn.secondary {\n  background: transparent;\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-action-btn.secondary:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   ENHANCED DROPDOWN MENU STYLES\n   ========================================================================== */\n\n.dropdown-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu-item:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu-item:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.dropdown-menu-item.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu-item.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* ==========================================================================\n   INBOX CARD TAG STYLES\n   ========================================================================== */\n\n.inbox-card-tags {\n  margin-top: var(--space-3);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n/* ==========================================================================\n   ENHANCED BUTTON STYLES\n   ========================================================================== */\n\n.action-button {\n  background: none;\n  border: 1px solid transparent;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.action-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--color-gray-100);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n  border-radius: inherit;\n}\n\n.action-button:hover {\n  color: var(--ui-text-primary);\n  border-color: var(--ui-border);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.action-button:hover::before {\n  opacity: 1;\n}\n\n.action-button:active {\n  transform: translateY(0);\n  box-shadow: var(--shadow-inner);\n}\n\n.action-button > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Primary action button variant */\n.action-button.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n}\n\n.action-button.primary::before {\n  background: var(--color-primary-dark);\n}\n\n.action-button.primary:hover {\n  border-color: var(--color-primary-dark);\n  color: var(--color-white);\n}\n\n/* Danger action button variant */\n.action-button.danger {\n  color: var(--color-danger);\n}\n\n.action-button.danger::before {\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.action-button.danger:hover {\n  color: var(--color-danger-hover);\n  border-color: var(--color-danger);\n}\n\n/* ==========================================================================\n   SHARE MODAL STYLES\n   ========================================================================== */\n\n.share-link-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--color-gray-50);\n  color: var(--ui-text-primary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.share-link-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.share-link-input:read-only {\n  cursor: pointer;\n}\n\n.share-link-input:read-only:hover {\n  background: var(--color-gray-100);\n}\n\n/* ==========================================================================\n   TAB SYNC STYLES\n   ========================================================================== */\n\n.tab-sync-filters {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.tab-sync-filter-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.tab-sync-filter-row:last-child {\n  margin-bottom: 0;\n}\n\n.tab-sync-filter-checkbox {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:hover {\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: -1px;\n  left: 2px;\n  color: var(--color-white);\n  font-size: 10px;\n  font-weight: 700;\n}\n\n.tab-sync-domain-filter {\n  flex: 1;\n  min-width: 200px;\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.tab-sync-domain-filter:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tab-sync-domain-filter::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n/* ==========================================================================\n   AUTH INPUT STYLES\n   ========================================================================== */\n\n.auth-input {\n  width: 100%;\n  padding: var(--space-3) var(--space-4);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.auth-input:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.auth-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.auth-input:invalid {\n  border-color: var(--color-danger);\n}\n\n.auth-input:invalid:focus {\n  border-color: var(--color-danger);\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS META STYLES\n   ========================================================================== */\n\n.ai-suggestions-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  color: rgba(255, 255, 255, 0.9);\n  font-size: var(--font-size-xs);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  display: none;\n}\n\n/* ==========================================================================\n   SMART COLLECTIONS STYLES\n   ========================================================================== */\n\n.smart-collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-fast);\n  position: relative;\n  overflow: hidden;\n}\n\n.smart-collection-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, #8b5cf6, #3b82f6, #10b981);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n}\n\n.smart-collection-card:hover::before {\n  opacity: 1;\n}\n\n.smart-collection-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  width: 100%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.smart-collection-header:hover {\n  background: var(--color-gray-50);\n}\n\n.smart-collection-icon {\n  font-size: var(--font-size-lg);\n  min-width: 24px;\n  text-align: center;\n}\n\n.smart-collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.smart-collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-1);\n}\n\n.smart-collection-name {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.smart-collection-badges {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.ai-badge {\n  color: var(--color-primary);\n  opacity: 0.8;\n}\n\n.auto-update-badge {\n  font-size: 10px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  background: var(--color-success);\n  color: white;\n  padding: 2px 6px;\n  border-radius: var(--radius-full);\n  line-height: 1;\n}\n\n.smart-collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin: 0;\n  line-height: 1.4;\n}\n\n.smart-collection-updated {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  margin-top: var(--space-1);\n  display: block;\n}\n\n.smart-collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.smart-collection-count {\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 32px;\n  text-align: center;\n}\n\n.refresh-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.refresh-button:hover:not(:disabled) {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.refresh-button .spinning {\n  animation: spin 1s linear infinite;\n}\n\n.smart-collection-content {\n  border-top: 1px solid var(--ui-border);\n  background: var(--color-gray-50);\n}\n\n.smart-collection-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.smart-collection-loading .loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid var(--color-gray-200);\n  border-top: 2px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.empty-smart-collection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n.empty-smart-collection .empty-icon {\n  color: var(--color-primary);\n  opacity: 0.6;\n  margin-bottom: var(--space-3);\n}\n\n.empty-smart-collection p {\n  font-weight: 500;\n  margin-bottom: var(--space-2);\n  color: var(--ui-text-primary);\n}\n\n.empty-subtitle {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.smart-collection-links {\n  padding: var(--space-3);\n}\n\n.smart-collection-links .link-card {\n  margin-bottom: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.smart-collection-links .link-card:last-child {\n  margin-bottom: 0;\n}\n\n/* Smart Collections Section Header */\n.smart-collections-section .section-header {\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  color: white;\n  border: none;\n}\n\n.smart-collections-section .section-header:hover {\n  background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));\n}\n\n.smart-collections-section .section-header .count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n/* Animation for smart collection expansion */\n.smart-collection-card.expanded {\n  box-shadow: var(--shadow-md);\n}\n\n.smart-collection-card.expanded .smart-collection-header {\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n/* Responsive adjustments for smart collections */\n@media (max-width: 480px) {\n  .smart-collection-header {\n    padding: var(--space-3);\n  }\n  \n  .smart-collection-name {\n    font-size: var(--font-size-sm);\n  }\n  \n  .smart-collection-description {\n    font-size: var(--font-size-xs);\n  }\n  \n  .smart-collection-actions {\n    gap: var(--space-1);\n  }\n  \n  .auto-update-badge {\n    font-size: 8px;\n    padding: 1px 4px;\n  }\n}\n\n/* ==========================================================================\n   SAVE PROMPT MODAL STYLES\n   ========================================================================== */\n\n.save-prompt-modal {\n  max-width: 600px;\n  width: 95%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.save-prompt-modal .modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: var(--space-2);\n}\n\n.save-prompt-modal .modal-footer {\n  flex-shrink: 0;\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-4);\n  margin-top: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n/* Custom scrollbar for save prompt modal */\n.save-prompt-modal .modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-track {\n  background: var(--color-gray-100);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n.save-prompt-link-preview {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-3);\n  margin-bottom: var(--space-4);\n}\n\n.link-preview-title {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n  line-height: 1.4;\n}\n\n.link-preview-url {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-reasons-section {\n  margin-bottom: var(--space-5);\n}\n\n.save-reasons-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.save-reasons-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: var(--space-3);\n}\n\n.save-reason-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-align: left;\n  width: 100%;\n}\n\n.save-reason-card:hover {\n  border-color: var(--color-primary);\n  background: var(--color-gray-50);\n}\n\n.save-reason-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 8%);\n  box-shadow: 0 0 0 1px var(--color-primary);\n}\n\n.save-reason-icon {\n  color: var(--color-primary);\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.save-reason-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.save-reason-label {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.save-reason-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.4;\n}\n\n.custom-reason-section {\n  margin-bottom: var(--space-5);\n}\n\n.custom-reason-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.custom-reason-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  resize: vertical;\n  min-height: 80px;\n  font-family: inherit;\n}\n\n.custom-reason-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.custom-reason-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.suggested-tags-section {\n  margin-bottom: var(--space-5);\n}\n\n.suggested-tags-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.suggested-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.suggested-tag {\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  background: var(--ui-element-background);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.suggested-tag:hover {\n  border-color: var(--color-primary);\n  color: var(--ui-text-primary);\n}\n\n.suggested-tag.selected {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n  color: white;\n}\n\n.save-prompt-tip {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-prompt-tip svg {\n  color: var(--color-warning);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for save prompt modal */\n@media (max-width: 480px) {\n  .save-prompt-modal {\n    max-width: 95%;\n    margin: var(--space-2);\n    max-height: 95vh;\n  }\n  \n  .save-reasons-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .save-reason-card {\n    padding: var(--space-2);\n  }\n  \n  .suggested-tags {\n    justify-content: center;\n  }\n  \n  .save-prompt-modal .modal-body {\n    padding-right: var(--space-1);\n  }\n}\n\n/* ==========================================================================\n   ACTIVITY TRACKER STYLES\n   ========================================================================== */\n\n.activity-tracker-modal {\n  max-width: 650px;\n  width: 95%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.activity-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.activity-loading .loading-spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.streak-section {\n  margin-bottom: var(--space-6);\n}\n\n.streak-card {\n  display: flex;\n  align-items: center;\n  gap: var(--space-4);\n  padding: var(--space-5);\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  border-radius: var(--radius-xl);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.streak-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n  pointer-events: none;\n}\n\n.streak-icon {\n  flex-shrink: 0;\n}\n\n.flame-active {\n  color: #ffd700;\n  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.5));\n}\n\n.flame-inactive {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.streak-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.streak-number {\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: var(--space-1);\n}\n\n.streak-label {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n  opacity: 0.9;\n}\n\n.streak-message {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.4;\n}\n\n.best-streak {\n  position: absolute;\n  top: var(--space-3);\n  right: var(--space-3);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: var(--space-3);\n  margin-bottom: var(--space-6);\n}\n\n.stat-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  transition: all var(--transition-fast);\n}\n\n.stat-card:hover {\n  border-color: var(--color-primary);\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n}\n\n.stat-icon {\n  color: var(--color-primary);\n  margin-bottom: var(--space-2);\n}\n\n.stat-number {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 500;\n}\n\n.weekly-activity {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-6);\n  text-align: center;\n}\n\n.weekly-activity h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.weekly-stat {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: var(--space-2);\n}\n\n.weekly-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.weekly-label {\n  font-size: var(--font-size-base);\n  color: var(--ui-text-secondary);\n}\n\n.recent-activities {\n  margin-bottom: var(--space-6);\n}\n\n.recent-activities h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.no-activities {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n}\n\n.no-activities p {\n  font-weight: 500;\n  margin: var(--space-2) 0;\n  color: var(--ui-text-primary);\n}\n\n.no-activities span {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n}\n\n.activities-list {\n  space-y: var(--space-2);\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n}\n\n.activity-item:hover {\n  background: var(--color-gray-50);\n}\n\n.activity-icon {\n  flex-shrink: 0;\n}\n\n.activity-icon.save { color: var(--color-success); }\n.activity-icon.read { color: var(--color-primary); }\n.activity-icon.highlight { color: var(--color-warning); }\n.activity-icon.organize { color: #8b5cf6; }\n.activity-icon.search { color: var(--ui-text-secondary); }\n.activity-icon.default { color: var(--ui-text-tertiary); }\n\n.activity-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.activity-description {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.activity-time {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n}\n\n.motivation-section {\n  margin-top: var(--space-4);\n}\n\n.motivation-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  color: white;\n}\n\n.motivation-content h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n}\n\n.motivation-content p {\n  font-size: var(--font-size-sm);\n  line-height: 1.5;\n  opacity: 0.9;\n}\n\n.activity-error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* Responsive adjustments for activity tracker */\n@media (max-width: 480px) {\n  .activity-tracker-modal {\n    max-width: 95%;\n    margin: var(--space-4);\n  }\n  \n  .streak-card {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--space-3);\n  }\n  \n  .best-streak {\n    position: static;\n    margin-top: var(--space-2);\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .stat-card {\n    padding: var(--space-3);\n  }\n  \n  .stat-number {\n    font-size: var(--font-size-xl);\n  }\n  \n  .weekly-number {\n    font-size: var(--font-size-2xl);\n  }\n}\n\n/* ==========================================================================\n   DIGEST SETTINGS COMPONENT\n   ========================================================================== */\n\n.digest-settings {\n  padding: 1rem 0;\n}\n\n.digest-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  margin-bottom: 2rem;\n}\n\n.digest-header-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.digest-icon {\n  opacity: 0.9;\n}\n\n.digest-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.digest-header p {\n  margin: 0.25rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.digest-config {\n  space-y: 2rem;\n}\n\n.digest-config .setting-group {\n  margin-bottom: 2rem;\n}\n\n.digest-config h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 0.5rem;\n}\n\n.digest-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.digest-actions .button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.digest-preview {\n  background: #f8fafc;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.digest-preview h4 {\n  margin: 0 0 1rem;\n  color: #1f2937;\n  font-size: 1.125rem;\n}\n\n.preview-content {\n  space-y: 1rem;\n}\n\n.preview-header {\n  text-align: center;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.preview-header h5 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.preview-header p {\n  margin: 0.5rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.preview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.preview-stat {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-stat .stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #667eea;\n  line-height: 1;\n}\n\n.preview-stat .stat-label {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n}\n\n.preview-sections {\n  space-y: 1rem;\n}\n\n.preview-section {\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-section h6 {\n  margin: 0 0 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.preview-section p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.preview-ai-summary {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #0ea5e9;\n}\n\n.preview-ai-summary em {\n  font-size: 0.875rem;\n  color: #0369a1;\n}\n\n.preview-insights {\n  padding: 1rem;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border-radius: 8px;\n  border: 1px solid #bae6fd;\n  margin-top: 1rem;\n}\n\n.preview-insights h6 {\n  margin: 0 0 0.5rem;\n  color: #0369a1;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.preview-insights p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #075985;\n}\n\n.digest-message {\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.digest-message.success {\n  background: #dcfce7;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.digest-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n} \n\n/* Analytics Dashboard Styles */\n.analytics-dashboard {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.dashboard-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.dashboard-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.timeframe-selector {\n  display: flex;\n  gap: 4px;\n  background: #f3f4f6;\n  border-radius: 6px;\n  padding: 2px;\n}\n\n.timeframe-selector button {\n  padding: 6px 12px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.timeframe-selector button.active {\n  background: white;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.dashboard-content {\n  padding: 16px;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 12px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n}\n\n.stat-icon {\n  color: #6366f1;\n  margin-bottom: 8px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  color: #111827;\n  margin-bottom: 4px;\n}\n\n.stat-label {\n  font-size: 12px;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insights-section,\n.recommendations-section {\n  margin-bottom: 24px;\n}\n\n.insights-section h3,\n.recommendations-section h3 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.insight-cards,\n.recommendation-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.insight-card,\n.recommendation-card {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 6px;\n  border-left: 3px solid #6366f1;\n}\n\n.recommendation-card {\n  border-left-color: #10b981;\n}\n\n.dashboard-loading,\n.dashboard-empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.empty-icon {\n  color: #9ca3af;\n  margin-bottom: 16px;\n}\n\n/* AI Insights Styles */\n.ai-insights {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10000;\n  overflow-y: auto;\n}\n\n.insights-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.insights-header h2 {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.refresh-button {\n  padding: 8px;\n  border: 1px solid #e5e7eb;\n  background: white;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.refresh-button:hover {\n  background: #f9fafb;\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.spinning {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.insights-tabs {\n  display: flex;\n  border-bottom: 1px solid #e5e7eb;\n  background: white;\n  position: sticky;\n  top: 73px;\n  z-index: 99;\n}\n\n.insights-tabs .tab {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  padding: 12px 8px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 14px;\n  border-bottom: 2px solid transparent;\n}\n\n.insights-tabs .tab:hover {\n  background: #f9fafb;\n}\n\n.insights-tabs .tab.active {\n  color: #6366f1;\n  border-bottom-color: #6366f1;\n  background: #f0f0ff;\n}\n\n.insights-tabs .count {\n  background: #6366f1;\n  color: white;\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 10px;\n  min-width: 18px;\n  text-align: center;\n}\n\n.insights-content {\n  padding: 16px;\n}\n\n.quick-insights {\n  margin-bottom: 24px;\n}\n\n.quick-insights h3 {\n  margin-bottom: 12px;\n  font-size: 14px;\n  font-weight: 600;\n  color: #6b7280;\n}\n\n.recent-items {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.recent-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  font-size: 14px;\n}\n\n.recent-item:hover {\n  background: #e5e7eb;\n}\n\n.recent-item:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.insights-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.insight-card,\n.flashcard,\n.connection-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.insight-header,\n.flashcard-header,\n.connection-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.insight-type {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.insight-rating {\n  display: flex;\n  gap: 2px;\n}\n\n.star {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #d1d5db;\n  transition: color 0.2s;\n}\n\n.star.filled {\n  color: #fbbf24;\n}\n\n.insight-content {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #374151;\n}\n\n.insight-meta {\n  margin-top: 8px;\n  display: flex;\n  gap: 8px;\n}\n\n.difficulty {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.difficulty.easy {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.difficulty.medium {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.difficulty.hard {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.confidence {\n  padding: 2px 8px;\n  background: #e0e7ff;\n  color: #3730a3;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.flashcard-content .question {\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.flashcard-content .answer {\n  color: #6b7280;\n}\n\n.relationship {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: capitalize;\n}\n\n.relationship.related {\n  background: #dbeafe;\n  color: #1e40af;\n}\n\n.relationship.supports {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.relationship.contradicts {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.relationship.cites {\n  background: #e0e7ff;\n  color: #3730a3;\n}\n\n.relationship.builds-on {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.strength {\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.connection-target {\n  font-size: 14px;\n  margin-bottom: 4px;\n}\n\n.connection-note {\n  font-size: 12px;\n  color: #6b7280;\n  font-style: italic;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.loading-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 16px;\n  text-align: center;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #6b7280;\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: #374151;\n}\n\n/* Action buttons styling */\n.analytics-button,\n.ai-insights-button {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  background: #f3f4f6;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.analytics-button:hover,\n.ai-insights-button:hover {\n  background: #e5e7eb;\n}\n\n.ai-insights-button {\n  background: #f0f0ff;\n  border-color: #c7d2fe;\n  color: #4338ca;\n}\n\n.ai-insights-button:hover {\n  background: #e0e7ff;\n}"],sourceRoot:""}]);const A=u},206:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},261:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(660));class i extends a.default{select(n){let e=!1;const t=(null!=n?n:"*").split("").map(n=>/\s/.test(n)&&!e?"":('"'===n&&(e=!e),n)).join("");return this.url.searchParams.set("select",t),this.headers.Prefer&&(this.headers.Prefer+=","),this.headers.Prefer+="return=representation",this}order(n,{ascending:e=!0,nullsFirst:t,foreignTable:r,referencedTable:a=r}={}){const i=a?`${a}.order`:"order",o=this.url.searchParams.get(i);return this.url.searchParams.set(i,`${o?`${o},`:""}${n}.${e?"asc":"desc"}${void 0===t?"":t?".nullsfirst":".nullslast"}`),this}limit(n,{foreignTable:e,referencedTable:t=e}={}){const r=void 0===t?"limit":`${t}.limit`;return this.url.searchParams.set(r,`${n}`),this}range(n,e,{foreignTable:t,referencedTable:r=t}={}){const a=void 0===r?"offset":`${r}.offset`,i=void 0===r?"limit":`${r}.limit`;return this.url.searchParams.set(a,`${n}`),this.url.searchParams.set(i,""+(e-n+1)),this}abortSignal(n){return this.signal=n,this}single(){return this.headers.Accept="application/vnd.pgrst.object+json",this}maybeSingle(){return"GET"===this.method?this.headers.Accept="application/json":this.headers.Accept="application/vnd.pgrst.object+json",this.isMaybeSingle=!0,this}csv(){return this.headers.Accept="text/csv",this}geojson(){return this.headers.Accept="application/geo+json",this}explain({analyze:n=!1,verbose:e=!1,settings:t=!1,buffers:r=!1,wal:a=!1,format:i="text"}={}){var o;const s=[n?"analyze":null,e?"verbose":null,t?"settings":null,r?"buffers":null,a?"wal":null].filter(Boolean).join("|"),l=null!==(o=this.headers.Accept)&&void 0!==o?o:"application/json";return this.headers.Accept=`application/vnd.pgrst.plan+${i}; for="${l}"; options=${s};`,this}rollback(){var n;return(null!==(n=this.headers.Prefer)&&void 0!==n?n:"").trim().length>0?this.headers.Prefer+=",tx=rollback":this.headers.Prefer="tx=rollback",this}returns(){return this}}e.default=i},279:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0}),e.PostgrestError=e.PostgrestBuilder=e.PostgrestTransformBuilder=e.PostgrestFilterBuilder=e.PostgrestQueryBuilder=e.PostgrestClient=void 0;const a=r(t(342));e.PostgrestClient=a.default;const i=r(t(45));e.PostgrestQueryBuilder=i.default;const o=r(t(825));e.PostgrestFilterBuilder=o.default;const s=r(t(261));e.PostgrestTransformBuilder=s.default;const l=r(t(660));e.PostgrestBuilder=l.default;const c=r(t(818));e.PostgrestError=c.default,e.default={PostgrestClient:a.default,PostgrestQueryBuilder:i.default,PostgrestFilterBuilder:o.default,PostgrestTransformBuilder:s.default,PostgrestBuilder:l.default,PostgrestError:c.default}},287:(n,e)=>{var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),A=Symbol.for("react.lazy"),f=Symbol.iterator,p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function m(n,e,t){this.props=n,this.context=e,this.refs=g,this.updater=t||p}function v(){}function b(n,e,t){this.props=n,this.context=e,this.refs=g,this.updater=t||p}m.prototype.isReactComponent={},m.prototype.setState=function(n,e){if("object"!=typeof n&&"function"!=typeof n&&null!=n)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,n,e,"setState")},m.prototype.forceUpdate=function(n){this.updater.enqueueForceUpdate(this,n,"forceUpdate")},v.prototype=m.prototype;var y=b.prototype=new v;y.constructor=b,h(y,m.prototype),y.isPureReactComponent=!0;var C=Array.isArray,B=Object.prototype.hasOwnProperty,E={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function w(n,e,r){var a,i={},o=null,s=null;if(null!=e)for(a in void 0!==e.ref&&(s=e.ref),void 0!==e.key&&(o=""+e.key),e)B.call(e,a)&&!x.hasOwnProperty(a)&&(i[a]=e[a]);var l=arguments.length-2;if(1===l)i.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];i.children=c}if(n&&n.defaultProps)for(a in l=n.defaultProps)void 0===i[a]&&(i[a]=l[a]);return{$$typeof:t,type:n,key:o,ref:s,props:i,_owner:E.current}}function k(n){return"object"==typeof n&&null!==n&&n.$$typeof===t}var j=/\/+/g;function S(n,e){return"object"==typeof n&&null!==n&&null!=n.key?function(n){var e={"=":"=0",":":"=2"};return"$"+n.replace(/[=:]/g,function(n){return e[n]})}(""+n.key):e.toString(36)}function _(n,e,a,i,o){var s=typeof n;"undefined"!==s&&"boolean"!==s||(n=null);var l=!1;if(null===n)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(n.$$typeof){case t:case r:l=!0}}if(l)return o=o(l=n),n=""===i?"."+S(l,0):i,C(o)?(a="",null!=n&&(a=n.replace(j,"$&/")+"/"),_(o,e,a,"",function(n){return n})):null!=o&&(k(o)&&(o=function(n,e){return{$$typeof:t,type:n.type,key:e,ref:n.ref,props:n.props,_owner:n._owner}}(o,a+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(j,"$&/")+"/")+n)),e.push(o)),1;if(l=0,i=""===i?".":i+":",C(n))for(var c=0;c<n.length;c++){var u=i+S(s=n[c],c);l+=_(s,e,a,u,o)}else if(u=function(n){return null===n||"object"!=typeof n?null:"function"==typeof(n=f&&n[f]||n["@@iterator"])?n:null}(n),"function"==typeof u)for(n=u.call(n),c=0;!(s=n.next()).done;)l+=_(s=s.value,e,a,u=i+S(s,c++),o);else if("object"===s)throw e=String(n),Error("Objects are not valid as a React child (found: "+("[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return l}function I(n,e,t){if(null==n)return n;var r=[],a=0;return _(n,r,"","",function(n){return e.call(t,n,a++)}),r}function z(n){if(-1===n._status){var e=n._result;(e=e()).then(function(e){0!==n._status&&-1!==n._status||(n._status=1,n._result=e)},function(e){0!==n._status&&-1!==n._status||(n._status=2,n._result=e)}),-1===n._status&&(n._status=0,n._result=e)}if(1===n._status)return n._result.default;throw n._result}var N={current:null},T={transition:null},O={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:T,ReactCurrentOwner:E};function P(){throw Error("act(...) is not supported in production builds of React.")}e.Children={map:I,forEach:function(n,e,t){I(n,function(){e.apply(this,arguments)},t)},count:function(n){var e=0;return I(n,function(){e++}),e},toArray:function(n){return I(n,function(n){return n})||[]},only:function(n){if(!k(n))throw Error("React.Children.only expected to receive a single React element child.");return n}},e.Component=m,e.Fragment=a,e.Profiler=o,e.PureComponent=b,e.StrictMode=i,e.Suspense=u,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,e.act=P,e.cloneElement=function(n,e,r){if(null==n)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+n+".");var a=h({},n.props),i=n.key,o=n.ref,s=n._owner;if(null!=e){if(void 0!==e.ref&&(o=e.ref,s=E.current),void 0!==e.key&&(i=""+e.key),n.type&&n.type.defaultProps)var l=n.type.defaultProps;for(c in e)B.call(e,c)&&!x.hasOwnProperty(c)&&(a[c]=void 0===e[c]&&void 0!==l?l[c]:e[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];a.children=l}return{$$typeof:t,type:n.type,key:i,ref:o,props:a,_owner:s}},e.createContext=function(n){return(n={$$typeof:l,_currentValue:n,_currentValue2:n,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:n},n.Consumer=n},e.createElement=w,e.createFactory=function(n){var e=w.bind(null,n);return e.type=n,e},e.createRef=function(){return{current:null}},e.forwardRef=function(n){return{$$typeof:c,render:n}},e.isValidElement=k,e.lazy=function(n){return{$$typeof:A,_payload:{_status:-1,_result:n},_init:z}},e.memo=function(n,e){return{$$typeof:d,type:n,compare:void 0===e?null:e}},e.startTransition=function(n){var e=T.transition;T.transition={};try{n()}finally{T.transition=e}},e.unstable_act=P,e.useCallback=function(n,e){return N.current.useCallback(n,e)},e.useContext=function(n){return N.current.useContext(n)},e.useDebugValue=function(){},e.useDeferredValue=function(n){return N.current.useDeferredValue(n)},e.useEffect=function(n,e){return N.current.useEffect(n,e)},e.useId=function(){return N.current.useId()},e.useImperativeHandle=function(n,e,t){return N.current.useImperativeHandle(n,e,t)},e.useInsertionEffect=function(n,e){return N.current.useInsertionEffect(n,e)},e.useLayoutEffect=function(n,e){return N.current.useLayoutEffect(n,e)},e.useMemo=function(n,e){return N.current.useMemo(n,e)},e.useReducer=function(n,e,t){return N.current.useReducer(n,e,t)},e.useRef=function(n){return N.current.useRef(n)},e.useState=function(n){return N.current.useState(n)},e.useSyncExternalStore=function(n,e,t){return N.current.useSyncExternalStore(n,e,t)},e.useTransition=function(){return N.current.useTransition()},e.version="18.3.1"},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t}).join("")},e.i=function(n,t,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var c=0;c<n.length;c++){var u=[].concat(n[c]);r&&o[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),e.push(u))}},e}},338:(n,e,t)=>{var r=t(961);e.createRoot=r.createRoot,r.hydrateRoot},342:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(45)),i=r(t(825)),o=t(530);class s{constructor(n,{headers:e={},schema:t,fetch:r}={}){this.url=n,this.headers=Object.assign(Object.assign({},o.DEFAULT_HEADERS),e),this.schemaName=t,this.fetch=r}from(n){const e=new URL(`${this.url}/${n}`);return new a.default(e,{headers:Object.assign({},this.headers),schema:this.schemaName,fetch:this.fetch})}schema(n){return new s(this.url,{headers:this.headers,schema:n,fetch:this.fetch})}rpc(n,e={},{head:t=!1,get:r=!1,count:a}={}){let o;const s=new URL(`${this.url}/rpc/${n}`);let l;t||r?(o=t?"HEAD":"GET",Object.entries(e).filter(([n,e])=>void 0!==e).map(([n,e])=>[n,Array.isArray(e)?`{${e.join(",")}}`:`${e}`]).forEach(([n,e])=>{s.searchParams.append(n,e)})):(o="POST",l=e);const c=Object.assign({},this.headers);return a&&(c.Prefer=`count=${a}`),new i.default({method:o,url:s,headers:c,schema:this.schemaName,body:l,fetch:this.fetch,allowEmpty:!1})}}e.default=s},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},463:(n,e)=>{function t(n,e){var t=n.length;n.push(e);n:for(;0<t;){var r=t-1>>>1,a=n[r];if(!(0<i(a,e)))break n;n[r]=e,n[t]=a,t=r}}function r(n){return 0===n.length?null:n[0]}function a(n){if(0===n.length)return null;var e=n[0],t=n.pop();if(t!==e){n[0]=t;n:for(var r=0,a=n.length,o=a>>>1;r<o;){var s=2*(r+1)-1,l=n[s],c=s+1,u=n[c];if(0>i(l,t))c<a&&0>i(u,l)?(n[r]=u,n[c]=t,r=c):(n[r]=l,n[s]=t,r=s);else{if(!(c<a&&0>i(u,t)))break n;n[r]=u,n[c]=t,r=c}}}return e}function i(n,e){var t=n.sortIndex-e.sortIndex;return 0!==t?t:n.id-e.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;e.unstable_now=function(){return o.now()}}else{var s=Date,l=s.now();e.unstable_now=function(){return s.now()-l}}var c=[],u=[],d=1,A=null,f=3,p=!1,h=!1,g=!1,m="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function y(n){for(var e=r(u);null!==e;){if(null===e.callback)a(u);else{if(!(e.startTime<=n))break;a(u),e.sortIndex=e.expirationTime,t(c,e)}e=r(u)}}function C(n){if(g=!1,y(n),!h)if(null!==r(c))h=!0,T(B);else{var e=r(u);null!==e&&O(C,e.startTime-n)}}function B(n,t){h=!1,g&&(g=!1,v(k),k=-1),p=!0;var i=f;try{for(y(t),A=r(c);null!==A&&(!(A.expirationTime>t)||n&&!_());){var o=A.callback;if("function"==typeof o){A.callback=null,f=A.priorityLevel;var s=o(A.expirationTime<=t);t=e.unstable_now(),"function"==typeof s?A.callback=s:A===r(c)&&a(c),y(t)}else a(c);A=r(c)}if(null!==A)var l=!0;else{var d=r(u);null!==d&&O(C,d.startTime-t),l=!1}return l}finally{A=null,f=i,p=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,x=!1,w=null,k=-1,j=5,S=-1;function _(){return!(e.unstable_now()-S<j)}function I(){if(null!==w){var n=e.unstable_now();S=n;var t=!0;try{t=w(!0,n)}finally{t?E():(x=!1,w=null)}}else x=!1}if("function"==typeof b)E=function(){b(I)};else if("undefined"!=typeof MessageChannel){var z=new MessageChannel,N=z.port2;z.port1.onmessage=I,E=function(){N.postMessage(null)}}else E=function(){m(I,0)};function T(n){w=n,x||(x=!0,E())}function O(n,t){k=m(function(){n(e.unstable_now())},t)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(n){n.callback=null},e.unstable_continueExecution=function(){h||p||(h=!0,T(B))},e.unstable_forceFrameRate=function(n){0>n||125<n?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):j=0<n?Math.floor(1e3/n):5},e.unstable_getCurrentPriorityLevel=function(){return f},e.unstable_getFirstCallbackNode=function(){return r(c)},e.unstable_next=function(n){switch(f){case 1:case 2:case 3:var e=3;break;default:e=f}var t=f;f=e;try{return n()}finally{f=t}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(n,e){switch(n){case 1:case 2:case 3:case 4:case 5:break;default:n=3}var t=f;f=n;try{return e()}finally{f=t}},e.unstable_scheduleCallback=function(n,a,i){var o=e.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?o+i:o,n){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return n={id:d++,callback:a,priorityLevel:n,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>o?(n.sortIndex=i,t(u,n),null===r(c)&&n===r(u)&&(g?(v(k),k=-1):g=!0,O(C,i-o))):(n.sortIndex=s,t(c,n),h||p||(h=!0,T(B))),n},e.unstable_shouldYield=_,e.unstable_wrapCallback=function(n){var e=f;return function(){var t=f;f=e;try{return n.apply(this,arguments)}finally{f=t}}}},508:(n,e,t)=>{function r(n){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach(function(e){s(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function o(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=u(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,a=function(){};return{s:a,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return o=n.done,n},e:function(n){s=!0,i=n},f:function(){try{o||null==t.return||t.return()}finally{if(s)throw i}}}}function s(n,e,t){return(e=b(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n){return function(n){if(Array.isArray(n))return d(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||u(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||u(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(n,e){if(n){if("string"==typeof n)return d(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?d(n,e):void 0}}function d(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function A(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return f(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(f(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function p(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,f(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,f(d,"constructor",c),f(c,"constructor",l),l.displayName="GeneratorFunction",f(c,a,"GeneratorFunction"),f(d),f(d,a,"Generator"),f(d,r,function(){return this}),f(d,"toString",function(){return"[object Generator]"}),(A=function(){return{w:i,m:p}})()}function f(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}f=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){f(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},f(n,e,t,r)}function p(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function h(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){p(i,r,a,o,s,"next",n)}function s(n){p(i,r,a,o,s,"throw",n)}o(void 0)})}}function g(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function m(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,b(r.key),r)}}function v(n,e,t){return e&&m(n.prototype,e),t&&m(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function b(n){var e=function(n){if("object"!=r(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=r(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==r(e)?e:e+""}t.r(e),t.d(e,{AIService:()=>y,aiService:()=>E,createAIService:()=>C});var y=function(){return v(function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};g(this,n),this.apiKey=e.apiKey||"",this.model=e.model||"gpt-3.5-turbo"},[{key:"analyzeContent",value:(i=h(A().m(function n(e,t,r){var a,i;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,this.generateRuleBasedAnalysis(e,t,r));case 1:return n.p=1,n.n=2,this.callOpenAIForAnalysis(e,t,r);case 2:return a=n.v,n.a(2,a);case 3:return n.p=3,i=n.v,console.error("AI analysis failed, falling back to rule-based:",i),n.a(2,this.generateRuleBasedAnalysis(e,t,r))}},n,this,[[1,3]])})),function(n,e,t){return i.apply(this,arguments)})},{key:"generateSummary",value:(a=h(A().m(function n(e,t,r){var a,i;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,this.generatePlaceholderSummary(e,t,r));case 1:return n.p=1,n.n=2,this.callOpenAI(e,t,r);case 2:return a=n.v,n.a(2,a);case 3:return n.p=3,i=n.v,console.error("AI summary generation failed:",i),n.a(2,this.generatePlaceholderSummary(e,t,r))}},n,this,[[1,3]])})),function(n,e,t){return a.apply(this,arguments)})},{key:"generateRuleBasedAnalysis",value:function(n,e,t){var r=new URL(t).hostname,a=n.toLowerCase(),i=e.toLowerCase(),o="".concat(i," ").concat(a),s=this.detectContentType(r,e,n),l=this.generateRuleBasedTags(o,r,s),c=this.generateRuleBasedCategories(o,r,s),u=this.extractTopics(o),d=this.estimateComplexity(n),A=this.estimateReadingTime(n);return{summary:this.generatePlaceholderSummary(n,e,t),tagSuggestions:l,categorySuggestions:c,contentType:s,topics:u,complexity:d,readingTime:A}}},{key:"detectContentType",value:function(n,e,t){var r=e.toLowerCase(),a=t.toLowerCase();return n.includes("youtube.com")||n.includes("vimeo.com")||n.includes("twitch.tv")?"video":n.includes("docs.")||r.includes("documentation")||a.includes("api reference")||a.includes("getting started")?"documentation":r.includes("tutorial")||r.includes("how to")||r.includes("guide")||a.includes("step by step")?"tutorial":n.includes("news")||n.includes("cnn.com")||n.includes("bbc.com")||n.includes("techcrunch.com")||n.includes("reuters.com")?"news":n.includes("medium.com")||n.includes("blog")||r.includes("thoughts on")||a.includes("published")?"blog":n.includes("arxiv.org")||n.includes("scholar.google")||r.includes("research")||a.includes("abstract")?"research":n.includes("github.com")||r.includes("tool")||r.includes("app")||a.includes("download")?"tool":r.includes("reference")||r.includes("cheat sheet")||a.includes("quick reference")?"reference":"article"}},{key:"generateRuleBasedTags",value:function(n,e,t){for(var r=[],a=0,i=Object.entries({"github.com":[{tag:"github",confidence:.9,reason:"GitHub repository"}],"stackoverflow.com":[{tag:"programming",confidence:.8,reason:"Stack Overflow content"}],"medium.com":[{tag:"blog",confidence:.7,reason:"Medium article"}],"youtube.com":[{tag:"video",confidence:.9,reason:"YouTube video"}],"linkedin.com":[{tag:"career",confidence:.7,reason:"LinkedIn content"}]});a<i.length;a++){var o=c(i[a],2),s=o[0],u=o[1];e.includes(s)&&r.push.apply(r,l(u))}for(var d=0,A=Object.entries({javascript:["javascript","js","node.js","react","vue","angular"],python:["python","django","flask","pandas","numpy"],"web-development":["html","css","frontend","backend","full-stack"],"machine-learning":["ml","ai","neural network","deep learning","tensorflow"],"data-science":["data science","analytics","visualization","statistics"],mobile:["android","ios","react native","flutter","mobile app"],devops:["docker","kubernetes","aws","cloud","deployment"],database:["sql","postgresql","mongodb","database design"],security:["cybersecurity","encryption","vulnerability","penetration testing"]});d<A.length;d++){var f=c(A[d],2),p=f[0],h=f[1].filter(function(e){return n.includes(e)}).length;if(h>0){var g=Math.min(.9,.4+.1*h);r.push({tag:p,confidence:g,reason:"Found ".concat(h," related keyword(s)")})}}r.push({tag:t||"general",confidence:.6,reason:"Detected as ".concat(t," content")}),(n.includes("beginner")||n.includes("getting started"))&&r.push({tag:"beginner",confidence:.7,reason:"Beginner-friendly content"}),(n.includes("advanced")||n.includes("expert"))&&r.push({tag:"advanced",confidence:.7,reason:"Advanced content"});for(var m=0,v=["productivity","business","startup","marketing","sales","finance"];m<v.length;m++){var b=v[m];n.includes(b)&&r.push({tag:b,confidence:.6,reason:"Content related to ".concat(b)})}return r.filter(function(n,e,t){return t.findIndex(function(e){return e.tag===n.tag})===e}).sort(function(n,e){return e.confidence-n.confidence}).slice(0,8)}},{key:"generateRuleBasedCategories",value:function(n,e,t){var r=[];return(n.includes("work")||n.includes("job")||n.includes("career")||n.includes("professional")||n.includes("business"))&&r.push({category:"work",confidence:.8,reason:"Contains work-related content"}),("tutorial"===t||"documentation"===t||n.includes("learn")||n.includes("education")||n.includes("course"))&&r.push({category:"learning",confidence:.9,reason:"Educational content detected"}),(n.includes("hobby")||n.includes("personal")||n.includes("lifestyle")||n.includes("entertainment"))&&r.push({category:"personal",confidence:.7,reason:"Personal interest content"}),(e.includes("github.com")||e.includes("stackoverflow.com")||n.includes("programming")||n.includes("development"))&&r.push({category:"work",confidence:.8,reason:"Technical/development content"}),("news"===t||n.includes("breaking")||n.includes("update"))&&r.push({category:"general",confidence:.7,reason:"News or current events"}),0===r.length&&r.push({category:"general",confidence:.5,reason:"General content"}),r.sort(function(n,e){return e.confidence-n.confidence})}},{key:"extractTopics",value:function(n){return["artificial intelligence","machine learning","web development","mobile development","data science","cybersecurity","cloud computing","blockchain","cryptocurrency","startup","productivity","leadership","design","marketing","sales","programming","software engineering","devops","database","frontend","backend","full-stack","api","microservices","architecture"].filter(function(e){return n.includes(e)}).slice(0,5)}},{key:"estimateComplexity",value:function(n){var e=n.toLowerCase(),t=["algorithm","architecture","optimization","scalability","performance"].filter(function(n){return e.includes(n)}).length,r=["introduction","basics","getting started","beginner","simple"].filter(function(n){return e.includes(n)}).length,a=["advanced","expert","complex","sophisticated","enterprise"].filter(function(n){return e.includes(n)}).length;return r>0||0===t?"beginner":a>1||t>3?"advanced":"intermediate"}},{key:"estimateReadingTime",value:function(n){var e=n.split(/\s+/).length;return Math.max(1,Math.round(e/200))}},{key:"callOpenAIForAnalysis",value:(r=h(A().m(function n(e,t,r){var a,i,o,s,l,c,u;return A().w(function(n){for(;;)switch(n.n){case 0:return i='Analyze this web content and provide a JSON response with the following structure:\n\n{\n  "summary": "1-2 sentence summary",\n  "tagSuggestions": [\n    {"tag": "tag-name", "confidence": 0.8, "reason": "why this tag fits"}\n  ],\n  "categorySuggestions": [\n    {"category": "work|learning|personal|general", "confidence": 0.9, "reason": "explanation"}\n  ],\n  "contentType": "article|tutorial|documentation|video|tool|reference|blog|news|research|other",\n  "topics": ["main", "topics", "covered"],\n  "complexity": "beginner|intermediate|advanced",\n  "readingTime": 5\n}\n\nContent to analyze:\nTitle: '.concat(t,"\nURL: ").concat(r,"\nContent: ").concat(e.substring(0,2e3),"...\n\nFocus on:\n- Relevant, specific tags (technology, skills, domains)\n- Appropriate category (work/learning/personal/general)\n- Content type and complexity\n- Main topics and themes"),n.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:i}],max_tokens:500,temperature:.3})});case 1:return o=n.v,n.n=2,o.json();case 2:if(s=n.v,!(l=null===(a=s.choices[0])||void 0===a||null===(a=a.message)||void 0===a?void 0:a.content)){n.n=5;break}return n.p=3,c=JSON.parse(l),n.a(2,{summary:c.summary,tagSuggestions:c.tagSuggestions||[],categorySuggestions:c.categorySuggestions||[],contentType:c.contentType,topics:c.topics||[],complexity:c.complexity,readingTime:c.readingTime});case 4:n.p=4,u=n.v,console.error("Failed to parse AI response:",u);case 5:return n.a(2,this.generateRuleBasedAnalysis(e,t,r))}},n,this,[[3,4]])})),function(n,e,t){return r.apply(this,arguments)})},{key:"callOpenAI",value:(t=h(A().m(function n(e,t,r){var a,i,o,s;return A().w(function(n){for(;;)switch(n.n){case 0:return i="Summarize this web page in 1-2 sentences:\nTitle: ".concat(t,"\nURL: ").concat(r,"\nContent: ").concat(e.substring(0,1e3),"..."),n.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:i}],max_tokens:100,temperature:.3})});case 1:return o=n.v,n.n=2,o.json();case 2:return s=n.v,n.a(2,(null===(a=s.choices[0])||void 0===a||null===(a=a.message)||void 0===a?void 0:a.content)||this.generatePlaceholderSummary(e,t,r))}},n,this)})),function(n,e,r){return t.apply(this,arguments)})},{key:"generatePlaceholderSummary",value:function(n,e,t){var r=new URL(t).hostname,a=n.length;return r.includes("github.com")?"GitHub repository or project page: ".concat(e):r.includes("stackoverflow.com")?"Stack Overflow discussion about programming or technical topics":r.includes("medium.com")||r.includes("blog")?"Blog article: ".concat(e.substring(0,50),"..."):r.includes("youtube.com")?"Video content: ".concat(e):r.includes("news")||r.includes("article")?"News article from ".concat(r):"Web page from ".concat(r," (").concat(Math.round(a/100)," paragraphs)")}},{key:"updateApiKey",value:function(n){this.apiKey=n}},{key:"generateSmartCollectionSuggestions",value:(e=h(A().m(function n(e){var t,r,a,i,o,s,l,u,d,f,p,h,g,m,v;return A().w(function(n){for(;;)if(0===n.n){for(t=this.analyzeDomains(e),r=this.analyzeTopics(e),a=this.analyzeTimePatterns(e),i=[],o=new Date,s=0,l=Object.entries(t);s<l.length;s++)u=c(l[s],2),d=u[0],(f=u[1])>=3&&i.push({id:"domain-".concat(d.replace(/\./g,"-")),name:"📌 ".concat(this.getDomainDisplayName(d)),description:"Links from ".concat(d," (").concat(f," links)"),query:"domain LIKE '%".concat(d,"%'"),isSystem:!0,autoUpdate:!0,icon:this.getDomainIcon(d),color:this.getDomainColor(d),filters:{domains:[d]},createdAt:o,updatedAt:o});for(p=0,h=Object.entries(r);p<h.length;p++)g=c(h[p],2),m=g[0],(v=g[1])>=2&&i.push({id:"topic-".concat(m.toLowerCase().replace(/\s+/g,"-")),name:"🎯 ".concat(m),description:"Content related to ".concat(m.toLowerCase()," (").concat(v," links)"),query:"title ILIKE '%".concat(m,"%' OR user_note ILIKE '%").concat(m,"%' OR ai_summary ILIKE '%").concat(m,"%'"),isSystem:!0,autoUpdate:!0,icon:this.getTopicIcon(m),color:this.getTopicColor(m),createdAt:o,updatedAt:o});return a.recentActivity>5&&i.push({id:"recent-activity",name:"🔥 Recent Activity",description:"Links saved in the last 3 days",query:"created_at >= now() - interval '3 days'",isSystem:!0,autoUpdate:!0,icon:"🔥",color:"#ef4444",filters:{dateRange:{start:new Date(Date.now()-2592e5)}},createdAt:o,updatedAt:o}),n.a(2,i.slice(0,8))}},n,this)})),function(n){return e.apply(this,arguments)})},{key:"analyzeDomains",value:function(n){var e={};return n.forEach(function(n){var t=n.domain;e[t]=(e[t]||0)+1}),Object.fromEntries(Object.entries(e).sort(function(n,e){var t=c(n,2)[1];return c(e,2)[1]-t}).slice(0,10))}},{key:"analyzeTopics",value:function(n){var e={},t=["React","JavaScript","TypeScript","Python","Node.js","API","Database","Machine Learning","AI","Design","UI/UX","CSS","HTML","Backend","Frontend","DevOps","Cloud","AWS","Docker","Kubernetes","Git","Testing","Security","Performance","Mobile","iOS","Android","Tutorial","Guide","Documentation","Tool","Framework","Library"];return n.forEach(function(n){var r="".concat(n.title," ").concat(n.userNote," ").concat(n.aiSummary||"").toLowerCase();t.forEach(function(n){r.includes(n.toLowerCase())&&(e[n]=(e[n]||0)+1)})}),Object.fromEntries(Object.entries(e).sort(function(n,e){var t=c(n,2)[1];return c(e,2)[1]-t}).slice(0,8))}},{key:"analyzeTimePatterns",value:function(n){var e=new Date,t=new Date(e.getTime()-2592e5),r=n.filter(function(n){return n.createdAt>=t}).length,a={};return n.forEach(function(n){var e=n.createdAt.toLocaleDateString("en-US",{weekday:"long"});a[e]=(a[e]||0)+1}),{recentActivity:r,weeklyPattern:a}}},{key:"getDomainDisplayName",value:function(n){return{"github.com":"GitHub","stackoverflow.com":"Stack Overflow","medium.com":"Medium","youtube.com":"YouTube","twitter.com":"Twitter","linkedin.com":"LinkedIn","reddit.com":"Reddit","dev.to":"Dev.to","hashnode.com":"Hashnode","docs.google.com":"Google Docs"}[n]||n.replace("www.","").split(".")[0]}},{key:"getDomainIcon",value:function(n){return{"github.com":"⭐","stackoverflow.com":"💬","medium.com":"✍️","youtube.com":"📺","twitter.com":"🐦","linkedin.com":"💼","reddit.com":"🤖","dev.to":"👨‍💻","hashnode.com":"📝","docs.google.com":"📄"}[n]||"🌐"}},{key:"getDomainColor",value:function(n){return{"github.com":"#24292e","stackoverflow.com":"#f48024","medium.com":"#00ab6c","youtube.com":"#ff0000","twitter.com":"#1da1f2","linkedin.com":"#0077b5","reddit.com":"#ff4500","dev.to":"#0a0a0a","hashnode.com":"#2962ff","docs.google.com":"#4285f4"}[n]||"#6b7280"}},{key:"getTopicIcon",value:function(n){return{React:"⚛️",JavaScript:"🟨",TypeScript:"🔷",Python:"🐍","Node.js":"🟢",API:"🔌",Database:"🗄️","Machine Learning":"🤖",AI:"🧠",Design:"🎨","UI/UX":"✨",CSS:"🎨",HTML:"📄",Backend:"⚙️",Frontend:"🖥️",DevOps:"🔧",Cloud:"☁️",AWS:"🟠",Docker:"🐳",Security:"🔒",Mobile:"📱",Tutorial:"📚",Tool:"🛠️"}[n]||"🏷️"}},{key:"getTopicColor",value:function(n){return{React:"#61dafb",JavaScript:"#f7df1e",TypeScript:"#3178c6",Python:"#3776ab","Node.js":"#339933",API:"#ff6b6b",Database:"#336791","Machine Learning":"#ff9500",AI:"#8b5cf6",Design:"#e91e63","UI/UX":"#9c27b0",CSS:"#1572b6",HTML:"#e34f26",Backend:"#4caf50",Frontend:"#2196f3",DevOps:"#ff5722",Cloud:"#607d8b",Security:"#795548",Mobile:"#00bcd4",Tutorial:"#ff9800",Tool:"#607d8b"}[n]||"#6b7280"}},{key:"analyzeForSmartCollections",value:(n=h(A().m(function n(e){var t,r,a,i,o,s,l,c;return A().w(function(n){for(;;)if(0===n.n)return t="".concat(e.title," ").concat(e.userNote," ").concat(e.aiSummary||"").toLowerCase(),r=e.domain,a=[],i=[],o={},(s=["ai","artificial intelligence","machine learning","ml","neural","deep learning"].filter(function(n){return t.includes(n)}).length)>0&&(a.push("ai-related"),i.push("AI"),o.ai=s),(l=["tutorial","how to","guide","walkthrough","step by step"].filter(function(n){return t.includes(n)}).length)>0&&(a.push("tutorials"),i.push("tutorial"),o.tutorial=l),r.includes("github.com")&&(a.push("github-repos"),i.push("github","repository"),o.github=1),(c=(Date.now()-e.createdAt.getTime())/864e5)<=7&&(a.push("recent-reads"),o.recent=Math.max(0,7-c)/7),e.userNote&&""!==e.userNote.trim()||(a.push("unread"),o.unread=1),n.a(2,{matchingCollections:a,suggestedTags:i,contentSignals:o})},n)})),function(e){return n.apply(this,arguments)})}]);var n,e,t,r,a,i}(),C=function(n){return n?new B(n):{generateInsights:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},generateQuestions:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},generateFlashcards:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},findCrossReferences:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},generateRecommendations:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},updateKnowledgeGraph:function(n){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,{nodes:[],edges:[],lastUpdated:Date.now()})},n)}))()},extractKeyTopics:function(){return h(A().m(function n(){return A().w(function(n){for(;;)if(0===n.n)return n.a(2,[])},n)}))()},calculateKnowledgeGrowth:function(){return 0}}},B=function(){return v(function n(e){g(this,n),s(this,"baseURL","https://api.openai.com/v1"),this.apiKey=e},[{key:"generateInsights",value:(d=h(A().m(function n(e){var t,r,a,i,o;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,t="text"in e?e.text:"".concat(e.title," - ").concat(e.description||""),r=e.url,a='Analyze this content and generate 3 types of insights:\n1. A thought-provoking question\n2. A key summary point\n3. A potential connection to other topics\n\nContent: "'.concat(t,'"\nURL: ').concat(r,"\n\nReturn as JSON array with objects containing: type, content, metadata"),n.n=2,this.callOpenAI(a);case 2:return i=n.v,n.a(2,this.parseInsights(i));case 3:return n.p=3,o=n.v,console.error("Error generating insights:",o),n.a(2,[])}},n,this,[[1,3]])})),function(n){return d.apply(this,arguments)})},{key:"generateQuestions",value:(u=h(A().m(function n(e){var t,r,a,i,o=arguments;return A().w(function(n){for(;;)switch(n.n){case 0:if(t=o.length>1&&void 0!==o[1]?o[1]:"medium",this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,r="Generate 3 ".concat(t,' level questions based on this content that would help with retention and understanding:\n\nContent: "').concat(e,'"\n\nQuestions should be:\n- ').concat("easy"===t?"Recall-based, asking for basic facts":"","\n- ").concat("medium"===t?"Application-based, asking how concepts apply":"","\n- ").concat("hard"===t?"Analysis-based, asking for evaluation and synthesis":"",'\n\nReturn as JSON array with type: "question", content: "the question", metadata: {difficulty, topic}'),n.n=2,this.callOpenAI(r);case 2:return a=n.v,n.a(2,this.parseInsights(a));case 3:return n.p=3,i=n.v,console.error("Error generating questions:",i),n.a(2,[])}},n,this,[[1,3]])})),function(n){return u.apply(this,arguments)})},{key:"generateFlashcards",value:(l=h(A().m(function n(e){var t,r,a;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,t='Create 3 flashcard pairs from this content. Each should have a question/prompt and answer:\n\nContent: "'.concat(e,'"\n\nReturn as JSON array with type: "flashcard", content: "Question: [question]\nAnswer: [answer]", metadata: {topic}'),n.n=2,this.callOpenAI(t);case 2:return r=n.v,n.a(2,this.parseInsights(r));case 3:return n.p=3,a=n.v,console.error("Error generating flashcards:",a),n.a(2,[])}},n,this,[[1,3]])})),function(n){return l.apply(this,arguments)})},{key:"findCrossReferences",value:(a=h(A().m(function n(e,t){var r,a,i,o,s;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey&&0!==t.length){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,r="text"in e?e.text:"".concat(e.title," - ").concat(e.description||""),a=t.filter(function(n){return n.id!==e.id}).slice(0,10),i='Analyze the main item and find potential relationships with other items:\n\nMain item: "'.concat(r,'"\n\nOther items:\n').concat(a.map(function(n,e){return"".concat(e+1,". ").concat(n.id,": ").concat("text"in n?n.text:"".concat(n.title," - ").concat(n.description||""))}).join("\n"),'\n\nFor each relationship found, return JSON with:\n- targetId: the item ID\n- relationshipType: "related" | "contradicts" | "supports" | "cites" | "builds-on"\n- strength: 0-1 confidence score\n- note: brief explanation\n\nOnly return relationships with strength > 0.3'),n.n=2,this.callOpenAI(i);case 2:return o=n.v,n.a(2,this.parseCrossReferences(o,e.id));case 3:return n.p=3,s=n.v,console.error("Error finding cross references:",s),n.a(2,[])}},n,this,[[1,3]])})),function(n,e){return a.apply(this,arguments)})},{key:"generateRecommendations",value:(r=h(A().m(function n(e){var t,r,a,i,o;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return n.a(2,[]);case 1:return n.p=1,t=e.slice(-10),n.n=2,this.extractKeyTopics(t.map(function(n){return"text"in n?n.text:"".concat(n.title," - ").concat(n.description||"")}).join(" "));case 2:return r=n.v,a="Based on the user's reading history and interests, suggest 5 content recommendations:\n\nRecent reading topics: ".concat(r.join(", "),"\n\nRecent items:\n").concat(t.map(function(n){return"text"in n?'Highlight: "'.concat(n.text,'"'):'Link: "'.concat(n.title,'"')}).join("\n"),'\n\nSuggest:\n1. Specific topics to explore next\n2. Types of content that would complement their reading\n3. Areas for deeper study\n\nReturn as JSON array with type: "recommendation", content: suggestion, metadata: {topic, confidence}'),n.n=3,this.callOpenAI(a);case 3:return i=n.v,n.a(2,this.parseInsights(i));case 4:return n.p=4,o=n.v,console.error("Error generating recommendations:",o),n.a(2,[])}},n,this,[[1,4]])})),function(n){return r.apply(this,arguments)})},{key:"updateKnowledgeGraph",value:(t=h(A().m(function n(e){var t,r,a,i,s,l,c,u,d;return A().w(function(n){for(;;)switch(n.n){case 0:t=[],r=[],a=new Map,i=o(e),n.p=1,i.s();case 2:if((s=i.n()).done){n.n=5;break}return l=s.value,c="text"in l?l.text:"".concat(l.title," - ").concat(l.description||""),n.n=3,this.extractKeyTopics(c);case 3:u=n.v,t.push({id:l.id,type:"text"in l?"highlight":"link",label:"text"in l?l.text.slice(0,50)+"...":l.title,weight:1,metadata:{topics:u}}),u.forEach(function(n){a.set(n,(a.get(n)||0)+1)});case 4:n.n=2;break;case 5:n.n=7;break;case 6:n.p=6,d=n.v,i.e(d);case 7:return n.p=7,i.f(),n.f(7);case 8:return a.forEach(function(n,e){n>1&&t.push({id:"topic-".concat(e),type:"topic",label:e,weight:n,metadata:{frequency:n}})}),n.a(2,{nodes:t,edges:r,lastUpdated:Date.now()})}},n,this,[[1,6,7,8]])})),function(n){return t.apply(this,arguments)})},{key:"extractKeyTopics",value:(e=h(A().m(function n(e){var t,r,a,i,o;return A().w(function(n){for(;;)switch(n.n){case 0:if(this.apiKey){n.n=1;break}return t=e.toLowerCase().match(/\b\w+\b/g)||[],r=new Map,t.forEach(function(n){n.length>4&&r.set(n,(r.get(n)||0)+1)}),n.a(2,Array.from(r.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,5).map(function(n){return c(n,1)[0]}));case 1:return n.p=1,a='Extract 3-5 key topics/themes from this content. Return as comma-separated list:\n\nContent: "'.concat(e.slice(0,1e3),'"'),n.n=2,this.callOpenAI(a);case 2:return i=n.v,n.a(2,i.split(",").map(function(n){return n.trim()}).filter(function(n){return n.length>0}));case 3:return n.p=3,o=n.v,console.error("Error extracting topics:",o),n.a(2,[])}},n,this,[[1,3]])})),function(n){return e.apply(this,arguments)})},{key:"calculateKnowledgeGrowth",value:function(n){if(0===n.length)return 0;var e=n.slice(-7),t=n.slice(-14,-7),r=e.reduce(function(n,e){return n+(e.linksRead||0)+(e.highlightsMade||0)},0),a=t.reduce(function(n,e){return n+(e.linksRead||0)+(e.highlightsMade||0)},0);return 0===a?r>0?1:0:Math.max(0,Math.min(2,r/a))}},{key:"callOpenAI",value:(n=h(A().m(function n(e){var t,r,a;return A().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,fetch("".concat(this.baseURL,"/chat/completions"),{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"user",content:e}],temperature:.7,max_tokens:500})});case 1:if((r=n.v).ok){n.n=2;break}throw new Error("OpenAI API error: ".concat(r.statusText));case 2:return n.n=3,r.json();case 3:return a=n.v,n.a(2,(null===(t=a.choices[0])||void 0===t||null===(t=t.message)||void 0===t?void 0:t.content)||"")}},n,this)})),function(e){return n.apply(this,arguments)})},{key:"parseInsights",value:function(n){try{var e=JSON.parse(n);return Array.isArray(e)?e.map(function(n){return i(i({id:"insight-".concat(Date.now(),"-").concat(Math.random())},n),{},{createdAt:Date.now()})}):[]}catch(e){return[{id:"insight-".concat(Date.now()),type:"summary",content:n.slice(0,200),createdAt:Date.now()}]}}},{key:"parseCrossReferences",value:function(n,e){try{var t=JSON.parse(n);return Array.isArray(t)?t.map(function(n){return i(i({id:"ref-".concat(Date.now(),"-").concat(Math.random())},n),{},{createdAt:Date.now()})}):[]}catch(n){return[]}}}]);var n,e,t,r,a,l,u,d}(),E=new y({apiKey:""})},519:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.version=void 0,e.version="0.0.0-automated"},530:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DEFAULT_HEADERS=void 0;const r=t(519);e.DEFAULT_HEADERS={"X-Client-Info":`postgrest-js/${r.version}`}},540:(n,e,t)=>{n.exports=t(287)},551:(n,e,t)=>{var r=t(540),a=t(982);function i(n){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+n,t=1;t<arguments.length;t++)e+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+n+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,s={};function l(n,e){c(n,e),c(n+"Capture",e)}function c(n,e){for(s[n]=e,n=0;n<e.length;n++)o.add(e[n])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,A=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},p={};function h(n,e,t,r,a,i,o){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=n,this.type=e,this.sanitizeURL=i,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(n){g[n]=new h(n,0,!1,n,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(n){var e=n[0];g[e]=new h(e,1,!1,n[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(n){g[n]=new h(n,2,!1,n.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(n){g[n]=new h(n,2,!1,n,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(n){g[n]=new h(n,3,!1,n.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(n){g[n]=new h(n,3,!0,n,null,!1,!1)}),["capture","download"].forEach(function(n){g[n]=new h(n,4,!1,n,null,!1,!1)}),["cols","rows","size","span"].forEach(function(n){g[n]=new h(n,6,!1,n,null,!1,!1)}),["rowSpan","start"].forEach(function(n){g[n]=new h(n,5,!1,n.toLowerCase(),null,!1,!1)});var m=/[\-:]([a-z])/g;function v(n){return n[1].toUpperCase()}function b(n,e,t,r){var a=g.hasOwnProperty(e)?g[e]:null;(null!==a?0!==a.type:r||!(2<e.length)||"o"!==e[0]&&"O"!==e[0]||"n"!==e[1]&&"N"!==e[1])&&(function(n,e,t,r){if(null==e||function(n,e,t,r){if(null!==t&&0===t.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(n=n.toLowerCase().slice(0,5))&&"aria-"!==n);default:return!1}}(n,e,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,t,a,r)&&(t=null),r||null===a?function(n){return!!d.call(p,n)||!d.call(f,n)&&(A.test(n)?p[n]=!0:(f[n]=!0,!1))}(e)&&(null===t?n.removeAttribute(e):n.setAttribute(e,""+t)):a.mustUseProperty?n[a.propertyName]=null===t?3!==a.type&&"":t:(e=a.attributeName,r=a.attributeNamespace,null===t?n.removeAttribute(e):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?n.setAttributeNS(r,e,t):n.setAttribute(e,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(n){var e=n.replace(m,v);g[e]=new h(e,1,!1,n,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(n){var e=n.replace(m,v);g[e]=new h(e,1,!1,n,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(n){var e=n.replace(m,v);g[e]=new h(e,1,!1,n,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(n){g[n]=new h(n,1,!1,n.toLowerCase(),null,!1,!1)}),g.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(n){g[n]=new h(n,1,!1,n.toLowerCase(),null,!0,!0)});var y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=Symbol.for("react.element"),B=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),w=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),j=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),z=Symbol.for("react.memo"),N=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var T=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function P(n){return null===n||"object"!=typeof n?null:"function"==typeof(n=O&&n[O]||n["@@iterator"])?n:null}var D,L=Object.assign;function R(n){if(void 0===D)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);D=e&&e[1]||""}return"\n"+D+n}var M=!1;function U(n,e){if(!n||M)return"";M=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(e,[])}catch(n){var r=n}Reflect.construct(n,[],e)}else{try{e.call()}catch(n){r=n}n.call(e.prototype)}else{try{throw Error()}catch(n){r=n}n()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),i=r.stack.split("\n"),o=a.length-1,s=i.length-1;1<=o&&0<=s&&a[o]!==i[s];)s--;for(;1<=o&&0<=s;o--,s--)if(a[o]!==i[s]){if(1!==o||1!==s)do{if(o--,0>--s||a[o]!==i[s]){var l="\n"+a[o].replace(" at new "," at ");return n.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",n.displayName)),l}}while(1<=o&&0<=s);break}}}finally{M=!1,Error.prepareStackTrace=t}return(n=n?n.displayName||n.name:"")?R(n):""}function F(n){switch(n.tag){case 5:return R(n.type);case 16:return R("Lazy");case 13:return R("Suspense");case 19:return R("SuspenseList");case 0:case 2:case 15:return U(n.type,!1);case 11:return U(n.type.render,!1);case 1:return U(n.type,!0);default:return""}}function $(n){if(null==n)return null;if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n;switch(n){case E:return"Fragment";case B:return"Portal";case w:return"Profiler";case x:return"StrictMode";case _:return"Suspense";case I:return"SuspenseList"}if("object"==typeof n)switch(n.$$typeof){case j:return(n.displayName||"Context")+".Consumer";case k:return(n._context.displayName||"Context")+".Provider";case S:var e=n.render;return(n=n.displayName)||(n=""!==(n=e.displayName||e.name||"")?"ForwardRef("+n+")":"ForwardRef"),n;case z:return null!==(e=n.displayName||null)?e:$(n.type)||"Memo";case N:e=n._payload,n=n._init;try{return $(n(e))}catch(n){}}return null}function Y(n){var e=n.type;switch(n.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return n=(n=e.render).displayName||n.name||"",e.displayName||(""!==n?"ForwardRef("+n+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return $(e);case 8:return e===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e}return null}function q(n){switch(typeof n){case"boolean":case"number":case"string":case"undefined":case"object":return n;default:return""}}function W(n){var e=n.type;return(n=n.nodeName)&&"input"===n.toLowerCase()&&("checkbox"===e||"radio"===e)}function G(n){n._valueTracker||(n._valueTracker=function(n){var e=W(n)?"checked":"value",t=Object.getOwnPropertyDescriptor(n.constructor.prototype,e),r=""+n[e];if(!n.hasOwnProperty(e)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,i=t.set;return Object.defineProperty(n,e,{configurable:!0,get:function(){return a.call(this)},set:function(n){r=""+n,i.call(this,n)}}),Object.defineProperty(n,e,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(n){r=""+n},stopTracking:function(){n._valueTracker=null,delete n[e]}}}}(n))}function H(n){if(!n)return!1;var e=n._valueTracker;if(!e)return!0;var t=e.getValue(),r="";return n&&(r=W(n)?n.checked?"true":"false":n.value),(n=r)!==t&&(e.setValue(n),!0)}function K(n){if(void 0===(n=n||("undefined"!=typeof document?document:void 0)))return null;try{return n.activeElement||n.body}catch(e){return n.body}}function V(n,e){var t=e.checked;return L({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:n._wrapperState.initialChecked})}function Q(n,e){var t=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;t=q(null!=e.value?e.value:t),n._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Z(n,e){null!=(e=e.checked)&&b(n,"checked",e,!1)}function J(n,e){Z(n,e);var t=q(e.value),r=e.type;if(null!=t)"number"===r?(0===t&&""===n.value||n.value!=t)&&(n.value=""+t):n.value!==""+t&&(n.value=""+t);else if("submit"===r||"reset"===r)return void n.removeAttribute("value");e.hasOwnProperty("value")?nn(n,e.type,t):e.hasOwnProperty("defaultValue")&&nn(n,e.type,q(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(n.defaultChecked=!!e.defaultChecked)}function X(n,e,t){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+n._wrapperState.initialValue,t||e===n.value||(n.value=e),n.defaultValue=e}""!==(t=n.name)&&(n.name=""),n.defaultChecked=!!n._wrapperState.initialChecked,""!==t&&(n.name=t)}function nn(n,e,t){"number"===e&&K(n.ownerDocument)===n||(null==t?n.defaultValue=""+n._wrapperState.initialValue:n.defaultValue!==""+t&&(n.defaultValue=""+t))}var en=Array.isArray;function tn(n,e,t,r){if(n=n.options,e){e={};for(var a=0;a<t.length;a++)e["$"+t[a]]=!0;for(t=0;t<n.length;t++)a=e.hasOwnProperty("$"+n[t].value),n[t].selected!==a&&(n[t].selected=a),a&&r&&(n[t].defaultSelected=!0)}else{for(t=""+q(t),e=null,a=0;a<n.length;a++){if(n[a].value===t)return n[a].selected=!0,void(r&&(n[a].defaultSelected=!0));null!==e||n[a].disabled||(e=n[a])}null!==e&&(e.selected=!0)}}function rn(n,e){if(null!=e.dangerouslySetInnerHTML)throw Error(i(91));return L({},e,{value:void 0,defaultValue:void 0,children:""+n._wrapperState.initialValue})}function an(n,e){var t=e.value;if(null==t){if(t=e.children,e=e.defaultValue,null!=t){if(null!=e)throw Error(i(92));if(en(t)){if(1<t.length)throw Error(i(93));t=t[0]}e=t}null==e&&(e=""),t=e}n._wrapperState={initialValue:q(t)}}function on(n,e){var t=q(e.value),r=q(e.defaultValue);null!=t&&((t=""+t)!==n.value&&(n.value=t),null==e.defaultValue&&n.defaultValue!==t&&(n.defaultValue=t)),null!=r&&(n.defaultValue=""+r)}function sn(n){var e=n.textContent;e===n._wrapperState.initialValue&&""!==e&&null!==e&&(n.value=e)}function ln(n){switch(n){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function cn(n,e){return null==n||"http://www.w3.org/1999/xhtml"===n?ln(e):"http://www.w3.org/2000/svg"===n&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":n}var un,dn,An=(dn=function(n,e){if("http://www.w3.org/2000/svg"!==n.namespaceURI||"innerHTML"in n)n.innerHTML=e;else{for((un=un||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=un.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;e.firstChild;)n.appendChild(e.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(n,e,t,r){MSApp.execUnsafeLocalFunction(function(){return dn(n,e)})}:dn);function fn(n,e){if(e){var t=n.firstChild;if(t&&t===n.lastChild&&3===t.nodeType)return void(t.nodeValue=e)}n.textContent=e}var pn={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},hn=["Webkit","ms","Moz","O"];function gn(n,e,t){return null==e||"boolean"==typeof e||""===e?"":t||"number"!=typeof e||0===e||pn.hasOwnProperty(n)&&pn[n]?(""+e).trim():e+"px"}function mn(n,e){for(var t in n=n.style,e)if(e.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=gn(t,e[t],r);"float"===t&&(t="cssFloat"),r?n.setProperty(t,a):n[t]=a}}Object.keys(pn).forEach(function(n){hn.forEach(function(e){e=e+n.charAt(0).toUpperCase()+n.substring(1),pn[e]=pn[n]})});var vn=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function bn(n,e){if(e){if(vn[n]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(i(137,n));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(i(60));if("object"!=typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=e.style&&"object"!=typeof e.style)throw Error(i(62))}}function yn(n,e){if(-1===n.indexOf("-"))return"string"==typeof e.is;switch(n){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Cn=null;function Bn(n){return(n=n.target||n.srcElement||window).correspondingUseElement&&(n=n.correspondingUseElement),3===n.nodeType?n.parentNode:n}var En=null,xn=null,wn=null;function kn(n){if(n=ba(n)){if("function"!=typeof En)throw Error(i(280));var e=n.stateNode;e&&(e=Ca(e),En(n.stateNode,n.type,e))}}function jn(n){xn?wn?wn.push(n):wn=[n]:xn=n}function Sn(){if(xn){var n=xn,e=wn;if(wn=xn=null,kn(n),e)for(n=0;n<e.length;n++)kn(e[n])}}function _n(n,e){return n(e)}function In(){}var zn=!1;function Nn(n,e,t){if(zn)return n(e,t);zn=!0;try{return _n(n,e,t)}finally{zn=!1,(null!==xn||null!==wn)&&(In(),Sn())}}function Tn(n,e){var t=n.stateNode;if(null===t)return null;var r=Ca(t);if(null===r)return null;t=r[e];n:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(n=n.type)||"input"===n||"select"===n||"textarea"===n)),n=!r;break n;default:n=!1}if(n)return null;if(t&&"function"!=typeof t)throw Error(i(231,e,typeof t));return t}var On=!1;if(u)try{var Pn={};Object.defineProperty(Pn,"passive",{get:function(){On=!0}}),window.addEventListener("test",Pn,Pn),window.removeEventListener("test",Pn,Pn)}catch(dn){On=!1}function Dn(n,e,t,r,a,i,o,s,l){var c=Array.prototype.slice.call(arguments,3);try{e.apply(t,c)}catch(n){this.onError(n)}}var Ln=!1,Rn=null,Mn=!1,Un=null,Fn={onError:function(n){Ln=!0,Rn=n}};function $n(n,e,t,r,a,i,o,s,l){Ln=!1,Rn=null,Dn.apply(Fn,arguments)}function Yn(n){var e=n,t=n;if(n.alternate)for(;e.return;)e=e.return;else{n=e;do{!!(4098&(e=n).flags)&&(t=e.return),n=e.return}while(n)}return 3===e.tag?t:null}function qn(n){if(13===n.tag){var e=n.memoizedState;if(null===e&&null!==(n=n.alternate)&&(e=n.memoizedState),null!==e)return e.dehydrated}return null}function Wn(n){if(Yn(n)!==n)throw Error(i(188))}function Gn(n){return null!==(n=function(n){var e=n.alternate;if(!e){if(null===(e=Yn(n)))throw Error(i(188));return e!==n?null:n}for(var t=n,r=e;;){var a=t.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){t=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===t)return Wn(a),n;if(o===r)return Wn(a),e;o=o.sibling}throw Error(i(188))}if(t.return!==r.return)t=a,r=o;else{for(var s=!1,l=a.child;l;){if(l===t){s=!0,t=a,r=o;break}if(l===r){s=!0,r=a,t=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===t){s=!0,t=o,r=a;break}if(l===r){s=!0,r=o,t=a;break}l=l.sibling}if(!s)throw Error(i(189))}}if(t.alternate!==r)throw Error(i(190))}if(3!==t.tag)throw Error(i(188));return t.stateNode.current===t?n:e}(n))?Hn(n):null}function Hn(n){if(5===n.tag||6===n.tag)return n;for(n=n.child;null!==n;){var e=Hn(n);if(null!==e)return e;n=n.sibling}return null}var Kn=a.unstable_scheduleCallback,Vn=a.unstable_cancelCallback,Qn=a.unstable_shouldYield,Zn=a.unstable_requestPaint,Jn=a.unstable_now,Xn=a.unstable_getCurrentPriorityLevel,ne=a.unstable_ImmediatePriority,ee=a.unstable_UserBlockingPriority,te=a.unstable_NormalPriority,re=a.unstable_LowPriority,ae=a.unstable_IdlePriority,ie=null,oe=null,se=Math.clz32?Math.clz32:function(n){return 0===(n>>>=0)?32:31-(le(n)/ce|0)|0},le=Math.log,ce=Math.LN2,ue=64,de=4194304;function Ae(n){switch(n&-n){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&n;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&n;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return n}}function fe(n,e){var t=n.pendingLanes;if(0===t)return 0;var r=0,a=n.suspendedLanes,i=n.pingedLanes,o=268435455&t;if(0!==o){var s=o&~a;0!==s?r=Ae(s):0!==(i&=o)&&(r=Ae(i))}else 0!==(o=t&~a)?r=Ae(o):0!==i&&(r=Ae(i));if(0===r)return 0;if(0!==e&&e!==r&&0===(e&a)&&((a=r&-r)>=(i=e&-e)||16===a&&4194240&i))return e;if(4&r&&(r|=16&t),0!==(e=n.entangledLanes))for(n=n.entanglements,e&=r;0<e;)a=1<<(t=31-se(e)),r|=n[t],e&=~a;return r}function pe(n,e){switch(n){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;default:return-1}}function he(n){return 0!=(n=-1073741825&n.pendingLanes)?n:1073741824&n?1073741824:0}function ge(){var n=ue;return!(4194240&(ue<<=1))&&(ue=64),n}function me(n){for(var e=[],t=0;31>t;t++)e.push(n);return e}function ve(n,e,t){n.pendingLanes|=e,536870912!==e&&(n.suspendedLanes=0,n.pingedLanes=0),(n=n.eventTimes)[e=31-se(e)]=t}function be(n,e){var t=n.entangledLanes|=e;for(n=n.entanglements;t;){var r=31-se(t),a=1<<r;a&e|n[r]&e&&(n[r]|=e),t&=~a}}var ye=0;function Ce(n){return 1<(n&=-n)?4<n?268435455&n?16:536870912:4:1}var Be,Ee,xe,we,ke,je=!1,Se=[],_e=null,Ie=null,ze=null,Ne=new Map,Te=new Map,Oe=[],Pe="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function De(n,e){switch(n){case"focusin":case"focusout":_e=null;break;case"dragenter":case"dragleave":Ie=null;break;case"mouseover":case"mouseout":ze=null;break;case"pointerover":case"pointerout":Ne.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Te.delete(e.pointerId)}}function Le(n,e,t,r,a,i){return null===n||n.nativeEvent!==i?(n={blockedOn:e,domEventName:t,eventSystemFlags:r,nativeEvent:i,targetContainers:[a]},null!==e&&null!==(e=ba(e))&&Ee(e),n):(n.eventSystemFlags|=r,e=n.targetContainers,null!==a&&-1===e.indexOf(a)&&e.push(a),n)}function Re(n){var e=va(n.target);if(null!==e){var t=Yn(e);if(null!==t)if(13===(e=t.tag)){if(null!==(e=qn(t)))return n.blockedOn=e,void ke(n.priority,function(){xe(t)})}else if(3===e&&t.stateNode.current.memoizedState.isDehydrated)return void(n.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}n.blockedOn=null}function Me(n){if(null!==n.blockedOn)return!1;for(var e=n.targetContainers;0<e.length;){var t=Qe(n.domEventName,n.eventSystemFlags,e[0],n.nativeEvent);if(null!==t)return null!==(e=ba(t))&&Ee(e),n.blockedOn=t,!1;var r=new(t=n.nativeEvent).constructor(t.type,t);Cn=r,t.target.dispatchEvent(r),Cn=null,e.shift()}return!0}function Ue(n,e,t){Me(n)&&t.delete(e)}function Fe(){je=!1,null!==_e&&Me(_e)&&(_e=null),null!==Ie&&Me(Ie)&&(Ie=null),null!==ze&&Me(ze)&&(ze=null),Ne.forEach(Ue),Te.forEach(Ue)}function $e(n,e){n.blockedOn===e&&(n.blockedOn=null,je||(je=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Fe)))}function Ye(n){function e(e){return $e(e,n)}if(0<Se.length){$e(Se[0],n);for(var t=1;t<Se.length;t++){var r=Se[t];r.blockedOn===n&&(r.blockedOn=null)}}for(null!==_e&&$e(_e,n),null!==Ie&&$e(Ie,n),null!==ze&&$e(ze,n),Ne.forEach(e),Te.forEach(e),t=0;t<Oe.length;t++)(r=Oe[t]).blockedOn===n&&(r.blockedOn=null);for(;0<Oe.length&&null===(t=Oe[0]).blockedOn;)Re(t),null===t.blockedOn&&Oe.shift()}var qe=y.ReactCurrentBatchConfig,We=!0;function Ge(n,e,t,r){var a=ye,i=qe.transition;qe.transition=null;try{ye=1,Ke(n,e,t,r)}finally{ye=a,qe.transition=i}}function He(n,e,t,r){var a=ye,i=qe.transition;qe.transition=null;try{ye=4,Ke(n,e,t,r)}finally{ye=a,qe.transition=i}}function Ke(n,e,t,r){if(We){var a=Qe(n,e,t,r);if(null===a)qr(n,e,r,Ve,t),De(n,r);else if(function(n,e,t,r,a){switch(e){case"focusin":return _e=Le(_e,n,e,t,r,a),!0;case"dragenter":return Ie=Le(Ie,n,e,t,r,a),!0;case"mouseover":return ze=Le(ze,n,e,t,r,a),!0;case"pointerover":var i=a.pointerId;return Ne.set(i,Le(Ne.get(i)||null,n,e,t,r,a)),!0;case"gotpointercapture":return i=a.pointerId,Te.set(i,Le(Te.get(i)||null,n,e,t,r,a)),!0}return!1}(a,n,e,t,r))r.stopPropagation();else if(De(n,r),4&e&&-1<Pe.indexOf(n)){for(;null!==a;){var i=ba(a);if(null!==i&&Be(i),null===(i=Qe(n,e,t,r))&&qr(n,e,r,Ve,t),i===a)break;a=i}null!==a&&r.stopPropagation()}else qr(n,e,r,null,t)}}var Ve=null;function Qe(n,e,t,r){if(Ve=null,null!==(n=va(n=Bn(r))))if(null===(e=Yn(n)))n=null;else if(13===(t=e.tag)){if(null!==(n=qn(e)))return n;n=null}else if(3===t){if(e.stateNode.current.memoizedState.isDehydrated)return 3===e.tag?e.stateNode.containerInfo:null;n=null}else e!==n&&(n=null);return Ve=n,null}function Ze(n){switch(n){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xn()){case ne:return 1;case ee:return 4;case te:case re:return 16;case ae:return 536870912;default:return 16}default:return 16}}var Je=null,Xe=null,nt=null;function et(){if(nt)return nt;var n,e,t=Xe,r=t.length,a="value"in Je?Je.value:Je.textContent,i=a.length;for(n=0;n<r&&t[n]===a[n];n++);var o=r-n;for(e=1;e<=o&&t[r-e]===a[i-e];e++);return nt=a.slice(n,1<e?1-e:void 0)}function tt(n){var e=n.keyCode;return"charCode"in n?0===(n=n.charCode)&&13===e&&(n=13):n=e,10===n&&(n=13),32<=n||13===n?n:0}function rt(){return!0}function at(){return!1}function it(n){function e(e,t,r,a,i){for(var o in this._reactName=e,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=i,this.currentTarget=null,n)n.hasOwnProperty(o)&&(e=n[o],this[o]=e?e(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return L(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():"unknown"!=typeof n.returnValue&&(n.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():"unknown"!=typeof n.cancelBubble&&(n.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),e}var ot,st,lt,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(n){return n.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=it(ct),dt=L({},ct,{view:0,detail:0}),At=it(dt),ft=L({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:wt,button:0,buttons:0,relatedTarget:function(n){return void 0===n.relatedTarget?n.fromElement===n.srcElement?n.toElement:n.fromElement:n.relatedTarget},movementX:function(n){return"movementX"in n?n.movementX:(n!==lt&&(lt&&"mousemove"===n.type?(ot=n.screenX-lt.screenX,st=n.screenY-lt.screenY):st=ot=0,lt=n),ot)},movementY:function(n){return"movementY"in n?n.movementY:st}}),pt=it(ft),ht=it(L({},ft,{dataTransfer:0})),gt=it(L({},dt,{relatedTarget:0})),mt=it(L({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=L({},ct,{clipboardData:function(n){return"clipboardData"in n?n.clipboardData:window.clipboardData}}),bt=it(vt),yt=it(L({},ct,{data:0})),Ct={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Bt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Et={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xt(n){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(n):!!(n=Et[n])&&!!e[n]}function wt(){return xt}var kt=L({},dt,{key:function(n){if(n.key){var e=Ct[n.key]||n.key;if("Unidentified"!==e)return e}return"keypress"===n.type?13===(n=tt(n))?"Enter":String.fromCharCode(n):"keydown"===n.type||"keyup"===n.type?Bt[n.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:wt,charCode:function(n){return"keypress"===n.type?tt(n):0},keyCode:function(n){return"keydown"===n.type||"keyup"===n.type?n.keyCode:0},which:function(n){return"keypress"===n.type?tt(n):"keydown"===n.type||"keyup"===n.type?n.keyCode:0}}),jt=it(kt),St=it(L({},ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_t=it(L({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:wt})),It=it(L({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),zt=L({},ft,{deltaX:function(n){return"deltaX"in n?n.deltaX:"wheelDeltaX"in n?-n.wheelDeltaX:0},deltaY:function(n){return"deltaY"in n?n.deltaY:"wheelDeltaY"in n?-n.wheelDeltaY:"wheelDelta"in n?-n.wheelDelta:0},deltaZ:0,deltaMode:0}),Nt=it(zt),Tt=[9,13,27,32],Ot=u&&"CompositionEvent"in window,Pt=null;u&&"documentMode"in document&&(Pt=document.documentMode);var Dt=u&&"TextEvent"in window&&!Pt,Lt=u&&(!Ot||Pt&&8<Pt&&11>=Pt),Rt=String.fromCharCode(32),Mt=!1;function Ut(n,e){switch(n){case"keyup":return-1!==Tt.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ft(n){return"object"==typeof(n=n.detail)&&"data"in n?n.data:null}var $t=!1,Yt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qt(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return"input"===e?!!Yt[n.type]:"textarea"===e}function Wt(n,e,t,r){jn(r),0<(e=Gr(e,"onChange")).length&&(t=new ut("onChange","change",null,t,r),n.push({event:t,listeners:e}))}var Gt=null,Ht=null;function Kt(n){Rr(n,0)}function Vt(n){if(H(ya(n)))return n}function Qt(n,e){if("change"===n)return e}var Zt=!1;if(u){var Jt;if(u){var Xt="oninput"in document;if(!Xt){var nr=document.createElement("div");nr.setAttribute("oninput","return;"),Xt="function"==typeof nr.oninput}Jt=Xt}else Jt=!1;Zt=Jt&&(!document.documentMode||9<document.documentMode)}function er(){Gt&&(Gt.detachEvent("onpropertychange",tr),Ht=Gt=null)}function tr(n){if("value"===n.propertyName&&Vt(Ht)){var e=[];Wt(e,Ht,n,Bn(n)),Nn(Kt,e)}}function rr(n,e,t){"focusin"===n?(er(),Ht=t,(Gt=e).attachEvent("onpropertychange",tr)):"focusout"===n&&er()}function ar(n){if("selectionchange"===n||"keyup"===n||"keydown"===n)return Vt(Ht)}function ir(n,e){if("click"===n)return Vt(e)}function or(n,e){if("input"===n||"change"===n)return Vt(e)}var sr="function"==typeof Object.is?Object.is:function(n,e){return n===e&&(0!==n||1/n==1/e)||n!=n&&e!=e};function lr(n,e){if(sr(n,e))return!0;if("object"!=typeof n||null===n||"object"!=typeof e||null===e)return!1;var t=Object.keys(n),r=Object.keys(e);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!d.call(e,a)||!sr(n[a],e[a]))return!1}return!0}function cr(n){for(;n&&n.firstChild;)n=n.firstChild;return n}function ur(n,e){var t,r=cr(n);for(n=0;r;){if(3===r.nodeType){if(t=n+r.textContent.length,n<=e&&t>=e)return{node:r,offset:e-n};n=t}n:{for(;r;){if(r.nextSibling){r=r.nextSibling;break n}r=r.parentNode}r=void 0}r=cr(r)}}function dr(n,e){return!(!n||!e)&&(n===e||(!n||3!==n.nodeType)&&(e&&3===e.nodeType?dr(n,e.parentNode):"contains"in n?n.contains(e):!!n.compareDocumentPosition&&!!(16&n.compareDocumentPosition(e))))}function Ar(){for(var n=window,e=K();e instanceof n.HTMLIFrameElement;){try{var t="string"==typeof e.contentWindow.location.href}catch(n){t=!1}if(!t)break;e=K((n=e.contentWindow).document)}return e}function fr(n){var e=n&&n.nodeName&&n.nodeName.toLowerCase();return e&&("input"===e&&("text"===n.type||"search"===n.type||"tel"===n.type||"url"===n.type||"password"===n.type)||"textarea"===e||"true"===n.contentEditable)}function pr(n){var e=Ar(),t=n.focusedElem,r=n.selectionRange;if(e!==t&&t&&t.ownerDocument&&dr(t.ownerDocument.documentElement,t)){if(null!==r&&fr(t))if(e=r.start,void 0===(n=r.end)&&(n=e),"selectionStart"in t)t.selectionStart=e,t.selectionEnd=Math.min(n,t.value.length);else if((n=(e=t.ownerDocument||document)&&e.defaultView||window).getSelection){n=n.getSelection();var a=t.textContent.length,i=Math.min(r.start,a);r=void 0===r.end?i:Math.min(r.end,a),!n.extend&&i>r&&(a=r,r=i,i=a),a=ur(t,i);var o=ur(t,r);a&&o&&(1!==n.rangeCount||n.anchorNode!==a.node||n.anchorOffset!==a.offset||n.focusNode!==o.node||n.focusOffset!==o.offset)&&((e=e.createRange()).setStart(a.node,a.offset),n.removeAllRanges(),i>r?(n.addRange(e),n.extend(o.node,o.offset)):(e.setEnd(o.node,o.offset),n.addRange(e)))}for(e=[],n=t;n=n.parentNode;)1===n.nodeType&&e.push({element:n,left:n.scrollLeft,top:n.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<e.length;t++)(n=e[t]).element.scrollLeft=n.left,n.element.scrollTop=n.top}}var hr=u&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,vr=null,br=!1;function yr(n,e,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;br||null==gr||gr!==K(r)||(r="selectionStart"in(r=gr)&&fr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&lr(vr,r)||(vr=r,0<(r=Gr(mr,"onSelect")).length&&(e=new ut("onSelect","select",null,e,t),n.push({event:e,listeners:r}),e.target=gr)))}function Cr(n,e){var t={};return t[n.toLowerCase()]=e.toLowerCase(),t["Webkit"+n]="webkit"+e,t["Moz"+n]="moz"+e,t}var Br={animationend:Cr("Animation","AnimationEnd"),animationiteration:Cr("Animation","AnimationIteration"),animationstart:Cr("Animation","AnimationStart"),transitionend:Cr("Transition","TransitionEnd")},Er={},xr={};function wr(n){if(Er[n])return Er[n];if(!Br[n])return n;var e,t=Br[n];for(e in t)if(t.hasOwnProperty(e)&&e in xr)return Er[n]=t[e];return n}u&&(xr=document.createElement("div").style,"AnimationEvent"in window||(delete Br.animationend.animation,delete Br.animationiteration.animation,delete Br.animationstart.animation),"TransitionEvent"in window||delete Br.transitionend.transition);var kr=wr("animationend"),jr=wr("animationiteration"),Sr=wr("animationstart"),_r=wr("transitionend"),Ir=new Map,zr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Nr(n,e){Ir.set(n,e),l(e,[n])}for(var Tr=0;Tr<zr.length;Tr++){var Or=zr[Tr];Nr(Or.toLowerCase(),"on"+(Or[0].toUpperCase()+Or.slice(1)))}Nr(kr,"onAnimationEnd"),Nr(jr,"onAnimationIteration"),Nr(Sr,"onAnimationStart"),Nr("dblclick","onDoubleClick"),Nr("focusin","onFocus"),Nr("focusout","onBlur"),Nr(_r,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Pr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Pr));function Lr(n,e,t){var r=n.type||"unknown-event";n.currentTarget=t,function(n,e,t,r,a,o,s,l,c){if($n.apply(this,arguments),Ln){if(!Ln)throw Error(i(198));var u=Rn;Ln=!1,Rn=null,Mn||(Mn=!0,Un=u)}}(r,e,void 0,n),n.currentTarget=null}function Rr(n,e){e=!!(4&e);for(var t=0;t<n.length;t++){var r=n[t],a=r.event;r=r.listeners;n:{var i=void 0;if(e)for(var o=r.length-1;0<=o;o--){var s=r[o],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==i&&a.isPropagationStopped())break n;Lr(a,s,c),i=l}else for(o=0;o<r.length;o++){if(l=(s=r[o]).instance,c=s.currentTarget,s=s.listener,l!==i&&a.isPropagationStopped())break n;Lr(a,s,c),i=l}}}if(Mn)throw n=Un,Mn=!1,Un=null,n}function Mr(n,e){var t=e[ha];void 0===t&&(t=e[ha]=new Set);var r=n+"__bubble";t.has(r)||(Yr(e,n,2,!1),t.add(r))}function Ur(n,e,t){var r=0;e&&(r|=4),Yr(t,n,r,e)}var Fr="_reactListening"+Math.random().toString(36).slice(2);function $r(n){if(!n[Fr]){n[Fr]=!0,o.forEach(function(e){"selectionchange"!==e&&(Dr.has(e)||Ur(e,!1,n),Ur(e,!0,n))});var e=9===n.nodeType?n:n.ownerDocument;null===e||e[Fr]||(e[Fr]=!0,Ur("selectionchange",!1,e))}}function Yr(n,e,t,r){switch(Ze(e)){case 1:var a=Ge;break;case 4:a=He;break;default:a=Ke}t=a.bind(null,e,t,n),a=void 0,!On||"touchstart"!==e&&"touchmove"!==e&&"wheel"!==e||(a=!0),r?void 0!==a?n.addEventListener(e,t,{capture:!0,passive:a}):n.addEventListener(e,t,!0):void 0!==a?n.addEventListener(e,t,{passive:a}):n.addEventListener(e,t,!1)}function qr(n,e,t,r,a){var i=r;if(!(1&e||2&e||null===r))n:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;o=o.return}for(;null!==s;){if(null===(o=va(s)))return;if(5===(l=o.tag)||6===l){r=i=o;continue n}s=s.parentNode}}r=r.return}Nn(function(){var r=i,a=Bn(t),o=[];n:{var s=Ir.get(n);if(void 0!==s){var l=ut,c=n;switch(n){case"keypress":if(0===tt(t))break n;case"keydown":case"keyup":l=jt;break;case"focusin":c="focus",l=gt;break;case"focusout":c="blur",l=gt;break;case"beforeblur":case"afterblur":l=gt;break;case"click":if(2===t.button)break n;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=pt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=ht;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=_t;break;case kr:case jr:case Sr:l=mt;break;case _r:l=It;break;case"scroll":l=At;break;case"wheel":l=Nt;break;case"copy":case"cut":case"paste":l=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=St}var u=!!(4&e),d=!u&&"scroll"===n,A=u?null!==s?s+"Capture":null:s;u=[];for(var f,p=r;null!==p;){var h=(f=p).stateNode;if(5===f.tag&&null!==h&&(f=h,null!==A&&null!=(h=Tn(p,A))&&u.push(Wr(p,h,f))),d)break;p=p.return}0<u.length&&(s=new l(s,c,null,t,a),o.push({event:s,listeners:u}))}}if(!(7&e)){if(l="mouseout"===n||"pointerout"===n,(!(s="mouseover"===n||"pointerover"===n)||t===Cn||!(c=t.relatedTarget||t.fromElement)||!va(c)&&!c[pa])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(c=(c=t.relatedTarget||t.toElement)?va(c):null)&&(c!==(d=Yn(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(u=pt,h="onMouseLeave",A="onMouseEnter",p="mouse","pointerout"!==n&&"pointerover"!==n||(u=St,h="onPointerLeave",A="onPointerEnter",p="pointer"),d=null==l?s:ya(l),f=null==c?s:ya(c),(s=new u(h,p+"leave",l,t,a)).target=d,s.relatedTarget=f,h=null,va(a)===r&&((u=new u(A,p+"enter",c,t,a)).target=f,u.relatedTarget=d,h=u),d=h,l&&c)n:{for(A=c,p=0,f=u=l;f;f=Hr(f))p++;for(f=0,h=A;h;h=Hr(h))f++;for(;0<p-f;)u=Hr(u),p--;for(;0<f-p;)A=Hr(A),f--;for(;p--;){if(u===A||null!==A&&u===A.alternate)break n;u=Hr(u),A=Hr(A)}u=null}else u=null;null!==l&&Kr(o,s,l,u,!1),null!==c&&null!==d&&Kr(o,d,c,u,!0)}if("select"===(l=(s=r?ya(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=Qt;else if(qt(s))if(Zt)g=or;else{g=ar;var m=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=ir);switch(g&&(g=g(n,r))?Wt(o,g,t,a):(m&&m(n,s,r),"focusout"===n&&(m=s._wrapperState)&&m.controlled&&"number"===s.type&&nn(s,"number",s.value)),m=r?ya(r):window,n){case"focusin":(qt(m)||"true"===m.contentEditable)&&(gr=m,mr=r,vr=null);break;case"focusout":vr=mr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,yr(o,t,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":yr(o,t,a)}var v;if(Ot)n:{switch(n){case"compositionstart":var b="onCompositionStart";break n;case"compositionend":b="onCompositionEnd";break n;case"compositionupdate":b="onCompositionUpdate";break n}b=void 0}else $t?Ut(n,t)&&(b="onCompositionEnd"):"keydown"===n&&229===t.keyCode&&(b="onCompositionStart");b&&(Lt&&"ko"!==t.locale&&($t||"onCompositionStart"!==b?"onCompositionEnd"===b&&$t&&(v=et()):(Xe="value"in(Je=a)?Je.value:Je.textContent,$t=!0)),0<(m=Gr(r,b)).length&&(b=new yt(b,n,null,t,a),o.push({event:b,listeners:m}),(v||null!==(v=Ft(t)))&&(b.data=v))),(v=Dt?function(n,e){switch(n){case"compositionend":return Ft(e);case"keypress":return 32!==e.which?null:(Mt=!0,Rt);case"textInput":return(n=e.data)===Rt&&Mt?null:n;default:return null}}(n,t):function(n,e){if($t)return"compositionend"===n||!Ot&&Ut(n,e)?(n=et(),nt=Xe=Je=null,$t=!1,n):null;switch(n){case"paste":default:return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return Lt&&"ko"!==e.locale?null:e.data}}(n,t))&&0<(r=Gr(r,"onBeforeInput")).length&&(a=new yt("onBeforeInput","beforeinput",null,t,a),o.push({event:a,listeners:r}),a.data=v)}Rr(o,e)})}function Wr(n,e,t){return{instance:n,listener:e,currentTarget:t}}function Gr(n,e){for(var t=e+"Capture",r=[];null!==n;){var a=n,i=a.stateNode;5===a.tag&&null!==i&&(a=i,null!=(i=Tn(n,t))&&r.unshift(Wr(n,i,a)),null!=(i=Tn(n,e))&&r.push(Wr(n,i,a))),n=n.return}return r}function Hr(n){if(null===n)return null;do{n=n.return}while(n&&5!==n.tag);return n||null}function Kr(n,e,t,r,a){for(var i=e._reactName,o=[];null!==t&&t!==r;){var s=t,l=s.alternate,c=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==c&&(s=c,a?null!=(l=Tn(t,i))&&o.unshift(Wr(t,l,s)):a||null!=(l=Tn(t,i))&&o.push(Wr(t,l,s))),t=t.return}0!==o.length&&n.push({event:e,listeners:o})}var Vr=/\r\n?/g,Qr=/\u0000|\uFFFD/g;function Zr(n){return("string"==typeof n?n:""+n).replace(Vr,"\n").replace(Qr,"")}function Jr(n,e,t){if(e=Zr(e),Zr(n)!==e&&t)throw Error(i(425))}function Xr(){}var na=null,ea=null;function ta(n,e){return"textarea"===n||"noscript"===n||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,ia="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==ia?function(n){return ia.resolve(null).then(n).catch(sa)}:ra;function sa(n){setTimeout(function(){throw n})}function la(n,e){var t=e,r=0;do{var a=t.nextSibling;if(n.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return n.removeChild(a),void Ye(e);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);Ye(e)}function ca(n){for(;null!=n;n=n.nextSibling){var e=n.nodeType;if(1===e||3===e)break;if(8===e){if("$"===(e=n.data)||"$!"===e||"$?"===e)break;if("/$"===e)return null}}return n}function ua(n){n=n.previousSibling;for(var e=0;n;){if(8===n.nodeType){var t=n.data;if("$"===t||"$!"===t||"$?"===t){if(0===e)return n;e--}else"/$"===t&&e++}n=n.previousSibling}return null}var da=Math.random().toString(36).slice(2),Aa="__reactFiber$"+da,fa="__reactProps$"+da,pa="__reactContainer$"+da,ha="__reactEvents$"+da,ga="__reactListeners$"+da,ma="__reactHandles$"+da;function va(n){var e=n[Aa];if(e)return e;for(var t=n.parentNode;t;){if(e=t[pa]||t[Aa]){if(t=e.alternate,null!==e.child||null!==t&&null!==t.child)for(n=ua(n);null!==n;){if(t=n[Aa])return t;n=ua(n)}return e}t=(n=t).parentNode}return null}function ba(n){return!(n=n[Aa]||n[pa])||5!==n.tag&&6!==n.tag&&13!==n.tag&&3!==n.tag?null:n}function ya(n){if(5===n.tag||6===n.tag)return n.stateNode;throw Error(i(33))}function Ca(n){return n[fa]||null}var Ba=[],Ea=-1;function xa(n){return{current:n}}function wa(n){0>Ea||(n.current=Ba[Ea],Ba[Ea]=null,Ea--)}function ka(n,e){Ea++,Ba[Ea]=n.current,n.current=e}var ja={},Sa=xa(ja),_a=xa(!1),Ia=ja;function za(n,e){var t=n.type.contextTypes;if(!t)return ja;var r=n.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in t)i[a]=e[a];return r&&((n=n.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,n.__reactInternalMemoizedMaskedChildContext=i),i}function Na(n){return null!=n.childContextTypes}function Ta(){wa(_a),wa(Sa)}function Oa(n,e,t){if(Sa.current!==ja)throw Error(i(168));ka(Sa,e),ka(_a,t)}function Pa(n,e,t){var r=n.stateNode;if(e=e.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,Y(n)||"Unknown",a));return L({},t,r)}function Da(n){return n=(n=n.stateNode)&&n.__reactInternalMemoizedMergedChildContext||ja,Ia=Sa.current,ka(Sa,n),ka(_a,_a.current),!0}function La(n,e,t){var r=n.stateNode;if(!r)throw Error(i(169));t?(n=Pa(n,e,Ia),r.__reactInternalMemoizedMergedChildContext=n,wa(_a),wa(Sa),ka(Sa,n)):wa(_a),ka(_a,t)}var Ra=null,Ma=!1,Ua=!1;function Fa(n){null===Ra?Ra=[n]:Ra.push(n)}function $a(){if(!Ua&&null!==Ra){Ua=!0;var n=0,e=ye;try{var t=Ra;for(ye=1;n<t.length;n++){var r=t[n];do{r=r(!0)}while(null!==r)}Ra=null,Ma=!1}catch(e){throw null!==Ra&&(Ra=Ra.slice(n+1)),Kn(ne,$a),e}finally{ye=e,Ua=!1}}return null}var Ya=[],qa=0,Wa=null,Ga=0,Ha=[],Ka=0,Va=null,Qa=1,Za="";function Ja(n,e){Ya[qa++]=Ga,Ya[qa++]=Wa,Wa=n,Ga=e}function Xa(n,e,t){Ha[Ka++]=Qa,Ha[Ka++]=Za,Ha[Ka++]=Va,Va=n;var r=Qa;n=Za;var a=32-se(r)-1;r&=~(1<<a),t+=1;var i=32-se(e)+a;if(30<i){var o=a-a%5;i=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Qa=1<<32-se(e)+a|t<<a|r,Za=i+n}else Qa=1<<i|t<<a|r,Za=n}function ni(n){null!==n.return&&(Ja(n,1),Xa(n,1,0))}function ei(n){for(;n===Wa;)Wa=Ya[--qa],Ya[qa]=null,Ga=Ya[--qa],Ya[qa]=null;for(;n===Va;)Va=Ha[--Ka],Ha[Ka]=null,Za=Ha[--Ka],Ha[Ka]=null,Qa=Ha[--Ka],Ha[Ka]=null}var ti=null,ri=null,ai=!1,ii=null;function oi(n,e){var t=zc(5,null,null,0);t.elementType="DELETED",t.stateNode=e,t.return=n,null===(e=n.deletions)?(n.deletions=[t],n.flags|=16):e.push(t)}function si(n,e){switch(n.tag){case 5:var t=n.type;return null!==(e=1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(n.stateNode=e,ti=n,ri=ca(e.firstChild),!0);case 6:return null!==(e=""===n.pendingProps||3!==e.nodeType?null:e)&&(n.stateNode=e,ti=n,ri=null,!0);case 13:return null!==(e=8!==e.nodeType?null:e)&&(t=null!==Va?{id:Qa,overflow:Za}:null,n.memoizedState={dehydrated:e,treeContext:t,retryLane:1073741824},(t=zc(18,null,null,0)).stateNode=e,t.return=n,n.child=t,ti=n,ri=null,!0);default:return!1}}function li(n){return!(!(1&n.mode)||128&n.flags)}function ci(n){if(ai){var e=ri;if(e){var t=e;if(!si(n,e)){if(li(n))throw Error(i(418));e=ca(t.nextSibling);var r=ti;e&&si(n,e)?oi(r,t):(n.flags=-4097&n.flags|2,ai=!1,ti=n)}}else{if(li(n))throw Error(i(418));n.flags=-4097&n.flags|2,ai=!1,ti=n}}}function ui(n){for(n=n.return;null!==n&&5!==n.tag&&3!==n.tag&&13!==n.tag;)n=n.return;ti=n}function di(n){if(n!==ti)return!1;if(!ai)return ui(n),ai=!0,!1;var e;if((e=3!==n.tag)&&!(e=5!==n.tag)&&(e="head"!==(e=n.type)&&"body"!==e&&!ta(n.type,n.memoizedProps)),e&&(e=ri)){if(li(n))throw Ai(),Error(i(418));for(;e;)oi(n,e),e=ca(e.nextSibling)}if(ui(n),13===n.tag){if(!(n=null!==(n=n.memoizedState)?n.dehydrated:null))throw Error(i(317));n:{for(n=n.nextSibling,e=0;n;){if(8===n.nodeType){var t=n.data;if("/$"===t){if(0===e){ri=ca(n.nextSibling);break n}e--}else"$"!==t&&"$!"!==t&&"$?"!==t||e++}n=n.nextSibling}ri=null}}else ri=ti?ca(n.stateNode.nextSibling):null;return!0}function Ai(){for(var n=ri;n;)n=ca(n.nextSibling)}function fi(){ri=ti=null,ai=!1}function pi(n){null===ii?ii=[n]:ii.push(n)}var hi=y.ReactCurrentBatchConfig;function gi(n,e,t){if(null!==(n=t.ref)&&"function"!=typeof n&&"object"!=typeof n){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(i(309));var r=t.stateNode}if(!r)throw Error(i(147,n));var a=r,o=""+n;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===o?e.ref:(e=function(n){var e=a.refs;null===n?delete e[o]:e[o]=n},e._stringRef=o,e)}if("string"!=typeof n)throw Error(i(284));if(!t._owner)throw Error(i(290,n))}return n}function mi(n,e){throw n=Object.prototype.toString.call(e),Error(i(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n))}function vi(n){return(0,n._init)(n._payload)}function bi(n){function e(e,t){if(n){var r=e.deletions;null===r?(e.deletions=[t],e.flags|=16):r.push(t)}}function t(t,r){if(!n)return null;for(;null!==r;)e(t,r),r=r.sibling;return null}function r(n,e){for(n=new Map;null!==e;)null!==e.key?n.set(e.key,e):n.set(e.index,e),e=e.sibling;return n}function a(n,e){return(n=Tc(n,e)).index=0,n.sibling=null,n}function o(e,t,r){return e.index=r,n?null!==(r=e.alternate)?(r=r.index)<t?(e.flags|=2,t):r:(e.flags|=2,t):(e.flags|=1048576,t)}function s(e){return n&&null===e.alternate&&(e.flags|=2),e}function l(n,e,t,r){return null===e||6!==e.tag?((e=Lc(t,n.mode,r)).return=n,e):((e=a(e,t)).return=n,e)}function c(n,e,t,r){var i=t.type;return i===E?d(n,e,t.props.children,r,t.key):null!==e&&(e.elementType===i||"object"==typeof i&&null!==i&&i.$$typeof===N&&vi(i)===e.type)?((r=a(e,t.props)).ref=gi(n,e,t),r.return=n,r):((r=Oc(t.type,t.key,t.props,null,n.mode,r)).ref=gi(n,e,t),r.return=n,r)}function u(n,e,t,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==t.containerInfo||e.stateNode.implementation!==t.implementation?((e=Rc(t,n.mode,r)).return=n,e):((e=a(e,t.children||[])).return=n,e)}function d(n,e,t,r,i){return null===e||7!==e.tag?((e=Pc(t,n.mode,r,i)).return=n,e):((e=a(e,t)).return=n,e)}function A(n,e,t){if("string"==typeof e&&""!==e||"number"==typeof e)return(e=Lc(""+e,n.mode,t)).return=n,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case C:return(t=Oc(e.type,e.key,e.props,null,n.mode,t)).ref=gi(n,null,e),t.return=n,t;case B:return(e=Rc(e,n.mode,t)).return=n,e;case N:return A(n,(0,e._init)(e._payload),t)}if(en(e)||P(e))return(e=Pc(e,n.mode,t,null)).return=n,e;mi(n,e)}return null}function f(n,e,t,r){var a=null!==e?e.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==a?null:l(n,e,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return t.key===a?c(n,e,t,r):null;case B:return t.key===a?u(n,e,t,r):null;case N:return f(n,e,(a=t._init)(t._payload),r)}if(en(t)||P(t))return null!==a?null:d(n,e,t,r,null);mi(n,t)}return null}function p(n,e,t,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return l(e,n=n.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return c(e,n=n.get(null===r.key?t:r.key)||null,r,a);case B:return u(e,n=n.get(null===r.key?t:r.key)||null,r,a);case N:return p(n,e,t,(0,r._init)(r._payload),a)}if(en(r)||P(r))return d(e,n=n.get(t)||null,r,a,null);mi(e,r)}return null}function h(a,i,s,l){for(var c=null,u=null,d=i,h=i=0,g=null;null!==d&&h<s.length;h++){d.index>h?(g=d,d=null):g=d.sibling;var m=f(a,d,s[h],l);if(null===m){null===d&&(d=g);break}n&&d&&null===m.alternate&&e(a,d),i=o(m,i,h),null===u?c=m:u.sibling=m,u=m,d=g}if(h===s.length)return t(a,d),ai&&Ja(a,h),c;if(null===d){for(;h<s.length;h++)null!==(d=A(a,s[h],l))&&(i=o(d,i,h),null===u?c=d:u.sibling=d,u=d);return ai&&Ja(a,h),c}for(d=r(a,d);h<s.length;h++)null!==(g=p(d,a,h,s[h],l))&&(n&&null!==g.alternate&&d.delete(null===g.key?h:g.key),i=o(g,i,h),null===u?c=g:u.sibling=g,u=g);return n&&d.forEach(function(n){return e(a,n)}),ai&&Ja(a,h),c}function g(a,s,l,c){var u=P(l);if("function"!=typeof u)throw Error(i(150));if(null==(l=u.call(l)))throw Error(i(151));for(var d=u=null,h=s,g=s=0,m=null,v=l.next();null!==h&&!v.done;g++,v=l.next()){h.index>g?(m=h,h=null):m=h.sibling;var b=f(a,h,v.value,c);if(null===b){null===h&&(h=m);break}n&&h&&null===b.alternate&&e(a,h),s=o(b,s,g),null===d?u=b:d.sibling=b,d=b,h=m}if(v.done)return t(a,h),ai&&Ja(a,g),u;if(null===h){for(;!v.done;g++,v=l.next())null!==(v=A(a,v.value,c))&&(s=o(v,s,g),null===d?u=v:d.sibling=v,d=v);return ai&&Ja(a,g),u}for(h=r(a,h);!v.done;g++,v=l.next())null!==(v=p(h,a,g,v.value,c))&&(n&&null!==v.alternate&&h.delete(null===v.key?g:v.key),s=o(v,s,g),null===d?u=v:d.sibling=v,d=v);return n&&h.forEach(function(n){return e(a,n)}),ai&&Ja(a,g),u}return function n(r,i,o,l){if("object"==typeof o&&null!==o&&o.type===E&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case C:n:{for(var c=o.key,u=i;null!==u;){if(u.key===c){if((c=o.type)===E){if(7===u.tag){t(r,u.sibling),(i=a(u,o.props.children)).return=r,r=i;break n}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===N&&vi(c)===u.type){t(r,u.sibling),(i=a(u,o.props)).ref=gi(r,u,o),i.return=r,r=i;break n}t(r,u);break}e(r,u),u=u.sibling}o.type===E?((i=Pc(o.props.children,r.mode,l,o.key)).return=r,r=i):((l=Oc(o.type,o.key,o.props,null,r.mode,l)).ref=gi(r,i,o),l.return=r,r=l)}return s(r);case B:n:{for(u=o.key;null!==i;){if(i.key===u){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){t(r,i.sibling),(i=a(i,o.children||[])).return=r,r=i;break n}t(r,i);break}e(r,i),i=i.sibling}(i=Rc(o,r.mode,l)).return=r,r=i}return s(r);case N:return n(r,i,(u=o._init)(o._payload),l)}if(en(o))return h(r,i,o,l);if(P(o))return g(r,i,o,l);mi(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==i&&6===i.tag?(t(r,i.sibling),(i=a(i,o)).return=r,r=i):(t(r,i),(i=Lc(o,r.mode,l)).return=r,r=i),s(r)):t(r,i)}}var yi=bi(!0),Ci=bi(!1),Bi=xa(null),Ei=null,xi=null,wi=null;function ki(){wi=xi=Ei=null}function ji(n){var e=Bi.current;wa(Bi),n._currentValue=e}function Si(n,e,t){for(;null!==n;){var r=n.alternate;if((n.childLanes&e)!==e?(n.childLanes|=e,null!==r&&(r.childLanes|=e)):null!==r&&(r.childLanes&e)!==e&&(r.childLanes|=e),n===t)break;n=n.return}}function _i(n,e){Ei=n,wi=xi=null,null!==(n=n.dependencies)&&null!==n.firstContext&&(0!==(n.lanes&e)&&(bs=!0),n.firstContext=null)}function Ii(n){var e=n._currentValue;if(wi!==n)if(n={context:n,memoizedValue:e,next:null},null===xi){if(null===Ei)throw Error(i(308));xi=n,Ei.dependencies={lanes:0,firstContext:n}}else xi=xi.next=n;return e}var zi=null;function Ni(n){null===zi?zi=[n]:zi.push(n)}function Ti(n,e,t,r){var a=e.interleaved;return null===a?(t.next=t,Ni(e)):(t.next=a.next,a.next=t),e.interleaved=t,Oi(n,r)}function Oi(n,e){n.lanes|=e;var t=n.alternate;for(null!==t&&(t.lanes|=e),t=n,n=n.return;null!==n;)n.childLanes|=e,null!==(t=n.alternate)&&(t.childLanes|=e),t=n,n=n.return;return 3===t.tag?t.stateNode:null}var Pi=!1;function Di(n){n.updateQueue={baseState:n.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Li(n,e){n=n.updateQueue,e.updateQueue===n&&(e.updateQueue={baseState:n.baseState,firstBaseUpdate:n.firstBaseUpdate,lastBaseUpdate:n.lastBaseUpdate,shared:n.shared,effects:n.effects})}function Ri(n,e){return{eventTime:n,lane:e,tag:0,payload:null,callback:null,next:null}}function Mi(n,e,t){var r=n.updateQueue;if(null===r)return null;if(r=r.shared,2&Sl){var a=r.pending;return null===a?e.next=e:(e.next=a.next,a.next=e),r.pending=e,Oi(n,t)}return null===(a=r.interleaved)?(e.next=e,Ni(r)):(e.next=a.next,a.next=e),r.interleaved=e,Oi(n,t)}function Ui(n,e,t){if(null!==(e=e.updateQueue)&&(e=e.shared,4194240&t)){var r=e.lanes;t|=r&=n.pendingLanes,e.lanes=t,be(n,t)}}function Fi(n,e){var t=n.updateQueue,r=n.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,i=null;if(null!==(t=t.firstBaseUpdate)){do{var o={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===i?a=i=o:i=i.next=o,t=t.next}while(null!==t);null===i?a=i=e:i=i.next=e}else a=i=e;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(n.updateQueue=t)}null===(n=t.lastBaseUpdate)?t.firstBaseUpdate=e:n.next=e,t.lastBaseUpdate=e}function $i(n,e,t,r){var a=n.updateQueue;Pi=!1;var i=a.firstBaseUpdate,o=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,c=l.next;l.next=null,null===o?i=c:o.next=c,o=l;var u=n.alternate;null!==u&&(s=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l)}if(null!==i){var d=a.baseState;for(o=0,u=c=l=null,s=i;;){var A=s.lane,f=s.eventTime;if((r&A)===A){null!==u&&(u=u.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});n:{var p=n,h=s;switch(A=e,f=t,h.tag){case 1:if("function"==typeof(p=h.payload)){d=p.call(f,d,A);break n}d=p;break n;case 3:p.flags=-65537&p.flags|128;case 0:if(null==(A="function"==typeof(p=h.payload)?p.call(f,d,A):p))break n;d=L({},d,A);break n;case 2:Pi=!0}}null!==s.callback&&0!==s.lane&&(n.flags|=64,null===(A=a.effects)?a.effects=[s]:A.push(s))}else f={eventTime:f,lane:A,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=f,l=d):u=u.next=f,o|=A;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(A=s).next,A.next=null,a.lastBaseUpdate=A,a.shared.pending=null}}if(null===u&&(l=d),a.baseState=l,a.firstBaseUpdate=c,a.lastBaseUpdate=u,null!==(e=a.shared.interleaved)){a=e;do{o|=a.lane,a=a.next}while(a!==e)}else null===i&&(a.shared.lanes=0);Dl|=o,n.lanes=o,n.memoizedState=d}}function Yi(n,e,t){if(n=e.effects,e.effects=null,null!==n)for(e=0;e<n.length;e++){var r=n[e],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var qi={},Wi=xa(qi),Gi=xa(qi),Hi=xa(qi);function Ki(n){if(n===qi)throw Error(i(174));return n}function Vi(n,e){switch(ka(Hi,e),ka(Gi,n),ka(Wi,qi),n=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:cn(null,"");break;default:e=cn(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}wa(Wi),ka(Wi,e)}function Qi(){wa(Wi),wa(Gi),wa(Hi)}function Zi(n){Ki(Hi.current);var e=Ki(Wi.current),t=cn(e,n.type);e!==t&&(ka(Gi,n),ka(Wi,t))}function Ji(n){Gi.current===n&&(wa(Wi),wa(Gi))}var Xi=xa(0);function no(n){for(var e=n;null!==e;){if(13===e.tag){var t=e.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(128&e.flags)return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var eo=[];function to(){for(var n=0;n<eo.length;n++)eo[n]._workInProgressVersionPrimary=null;eo.length=0}var ro=y.ReactCurrentDispatcher,ao=y.ReactCurrentBatchConfig,io=0,oo=null,so=null,lo=null,co=!1,uo=!1,Ao=0,fo=0;function po(){throw Error(i(321))}function ho(n,e){if(null===e)return!1;for(var t=0;t<e.length&&t<n.length;t++)if(!sr(n[t],e[t]))return!1;return!0}function go(n,e,t,r,a,o){if(io=o,oo=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,ro.current=null===n||null===n.memoizedState?Xo:ns,n=t(r,a),uo){o=0;do{if(uo=!1,Ao=0,25<=o)throw Error(i(301));o+=1,lo=so=null,e.updateQueue=null,ro.current=es,n=t(r,a)}while(uo)}if(ro.current=Jo,e=null!==so&&null!==so.next,io=0,lo=so=oo=null,co=!1,e)throw Error(i(300));return n}function mo(){var n=0!==Ao;return Ao=0,n}function vo(){var n={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===lo?oo.memoizedState=lo=n:lo=lo.next=n,lo}function bo(){if(null===so){var n=oo.alternate;n=null!==n?n.memoizedState:null}else n=so.next;var e=null===lo?oo.memoizedState:lo.next;if(null!==e)lo=e,so=n;else{if(null===n)throw Error(i(310));n={memoizedState:(so=n).memoizedState,baseState:so.baseState,baseQueue:so.baseQueue,queue:so.queue,next:null},null===lo?oo.memoizedState=lo=n:lo=lo.next=n}return lo}function yo(n,e){return"function"==typeof e?e(n):e}function Co(n){var e=bo(),t=e.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=n;var r=so,a=r.baseQueue,o=t.pending;if(null!==o){if(null!==a){var s=a.next;a.next=o.next,o.next=s}r.baseQueue=a=o,t.pending=null}if(null!==a){o=a.next,r=r.baseState;var l=s=null,c=null,u=o;do{var d=u.lane;if((io&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:n(r,u.action);else{var A={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=A,s=r):c=c.next=A,oo.lanes|=d,Dl|=d}u=u.next}while(null!==u&&u!==o);null===c?s=r:c.next=l,sr(r,e.memoizedState)||(bs=!0),e.memoizedState=r,e.baseState=s,e.baseQueue=c,t.lastRenderedState=r}if(null!==(n=t.interleaved)){a=n;do{o=a.lane,oo.lanes|=o,Dl|=o,a=a.next}while(a!==n)}else null===a&&(t.lanes=0);return[e.memoizedState,t.dispatch]}function Bo(n){var e=bo(),t=e.queue;if(null===t)throw Error(i(311));t.lastRenderedReducer=n;var r=t.dispatch,a=t.pending,o=e.memoizedState;if(null!==a){t.pending=null;var s=a=a.next;do{o=n(o,s.action),s=s.next}while(s!==a);sr(o,e.memoizedState)||(bs=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),t.lastRenderedState=o}return[o,r]}function Eo(){}function xo(n,e){var t=oo,r=bo(),a=e(),o=!sr(r.memoizedState,a);if(o&&(r.memoizedState=a,bs=!0),r=r.queue,Do(jo.bind(null,t,r,n),[n]),r.getSnapshot!==e||o||null!==lo&&1&lo.memoizedState.tag){if(t.flags|=2048,zo(9,ko.bind(null,t,r,a,e),void 0,null),null===_l)throw Error(i(349));30&io||wo(t,e,a)}return a}function wo(n,e,t){n.flags|=16384,n={getSnapshot:e,value:t},null===(e=oo.updateQueue)?(e={lastEffect:null,stores:null},oo.updateQueue=e,e.stores=[n]):null===(t=e.stores)?e.stores=[n]:t.push(n)}function ko(n,e,t,r){e.value=t,e.getSnapshot=r,So(e)&&_o(n)}function jo(n,e,t){return t(function(){So(e)&&_o(n)})}function So(n){var e=n.getSnapshot;n=n.value;try{var t=e();return!sr(n,t)}catch(n){return!0}}function _o(n){var e=Oi(n,1);null!==e&&tc(e,n,1,-1)}function Io(n){var e=vo();return"function"==typeof n&&(n=n()),e.memoizedState=e.baseState=n,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:yo,lastRenderedState:n},e.queue=n,n=n.dispatch=Ko.bind(null,oo,n),[e.memoizedState,n]}function zo(n,e,t,r){return n={tag:n,create:e,destroy:t,deps:r,next:null},null===(e=oo.updateQueue)?(e={lastEffect:null,stores:null},oo.updateQueue=e,e.lastEffect=n.next=n):null===(t=e.lastEffect)?e.lastEffect=n.next=n:(r=t.next,t.next=n,n.next=r,e.lastEffect=n),n}function No(){return bo().memoizedState}function To(n,e,t,r){var a=vo();oo.flags|=n,a.memoizedState=zo(1|e,t,void 0,void 0===r?null:r)}function Oo(n,e,t,r){var a=bo();r=void 0===r?null:r;var i=void 0;if(null!==so){var o=so.memoizedState;if(i=o.destroy,null!==r&&ho(r,o.deps))return void(a.memoizedState=zo(e,t,i,r))}oo.flags|=n,a.memoizedState=zo(1|e,t,i,r)}function Po(n,e){return To(8390656,8,n,e)}function Do(n,e){return Oo(2048,8,n,e)}function Lo(n,e){return Oo(4,2,n,e)}function Ro(n,e){return Oo(4,4,n,e)}function Mo(n,e){return"function"==typeof e?(n=n(),e(n),function(){e(null)}):null!=e?(n=n(),e.current=n,function(){e.current=null}):void 0}function Uo(n,e,t){return t=null!=t?t.concat([n]):null,Oo(4,4,Mo.bind(null,e,n),t)}function Fo(){}function $o(n,e){var t=bo();e=void 0===e?null:e;var r=t.memoizedState;return null!==r&&null!==e&&ho(e,r[1])?r[0]:(t.memoizedState=[n,e],n)}function Yo(n,e){var t=bo();e=void 0===e?null:e;var r=t.memoizedState;return null!==r&&null!==e&&ho(e,r[1])?r[0]:(n=n(),t.memoizedState=[n,e],n)}function qo(n,e,t){return 21&io?(sr(t,e)||(t=ge(),oo.lanes|=t,Dl|=t,n.baseState=!0),e):(n.baseState&&(n.baseState=!1,bs=!0),n.memoizedState=t)}function Wo(n,e){var t=ye;ye=0!==t&&4>t?t:4,n(!0);var r=ao.transition;ao.transition={};try{n(!1),e()}finally{ye=t,ao.transition=r}}function Go(){return bo().memoizedState}function Ho(n,e,t){var r=ec(n);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},Vo(n)?Qo(e,t):null!==(t=Ti(n,e,t,r))&&(tc(t,n,r,nc()),Zo(t,e,r))}function Ko(n,e,t){var r=ec(n),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(Vo(n))Qo(e,a);else{var i=n.alternate;if(0===n.lanes&&(null===i||0===i.lanes)&&null!==(i=e.lastRenderedReducer))try{var o=e.lastRenderedState,s=i(o,t);if(a.hasEagerState=!0,a.eagerState=s,sr(s,o)){var l=e.interleaved;return null===l?(a.next=a,Ni(e)):(a.next=l.next,l.next=a),void(e.interleaved=a)}}catch(n){}null!==(t=Ti(n,e,a,r))&&(tc(t,n,r,a=nc()),Zo(t,e,r))}}function Vo(n){var e=n.alternate;return n===oo||null!==e&&e===oo}function Qo(n,e){uo=co=!0;var t=n.pending;null===t?e.next=e:(e.next=t.next,t.next=e),n.pending=e}function Zo(n,e,t){if(4194240&t){var r=e.lanes;t|=r&=n.pendingLanes,e.lanes=t,be(n,t)}}var Jo={readContext:Ii,useCallback:po,useContext:po,useEffect:po,useImperativeHandle:po,useInsertionEffect:po,useLayoutEffect:po,useMemo:po,useReducer:po,useRef:po,useState:po,useDebugValue:po,useDeferredValue:po,useTransition:po,useMutableSource:po,useSyncExternalStore:po,useId:po,unstable_isNewReconciler:!1},Xo={readContext:Ii,useCallback:function(n,e){return vo().memoizedState=[n,void 0===e?null:e],n},useContext:Ii,useEffect:Po,useImperativeHandle:function(n,e,t){return t=null!=t?t.concat([n]):null,To(4194308,4,Mo.bind(null,e,n),t)},useLayoutEffect:function(n,e){return To(4194308,4,n,e)},useInsertionEffect:function(n,e){return To(4,2,n,e)},useMemo:function(n,e){var t=vo();return e=void 0===e?null:e,n=n(),t.memoizedState=[n,e],n},useReducer:function(n,e,t){var r=vo();return e=void 0!==t?t(e):e,r.memoizedState=r.baseState=e,n={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:n,lastRenderedState:e},r.queue=n,n=n.dispatch=Ho.bind(null,oo,n),[r.memoizedState,n]},useRef:function(n){return n={current:n},vo().memoizedState=n},useState:Io,useDebugValue:Fo,useDeferredValue:function(n){return vo().memoizedState=n},useTransition:function(){var n=Io(!1),e=n[0];return n=Wo.bind(null,n[1]),vo().memoizedState=n,[e,n]},useMutableSource:function(){},useSyncExternalStore:function(n,e,t){var r=oo,a=vo();if(ai){if(void 0===t)throw Error(i(407));t=t()}else{if(t=e(),null===_l)throw Error(i(349));30&io||wo(r,e,t)}a.memoizedState=t;var o={value:t,getSnapshot:e};return a.queue=o,Po(jo.bind(null,r,o,n),[n]),r.flags|=2048,zo(9,ko.bind(null,r,o,t,e),void 0,null),t},useId:function(){var n=vo(),e=_l.identifierPrefix;if(ai){var t=Za;e=":"+e+"R"+(t=(Qa&~(1<<32-se(Qa)-1)).toString(32)+t),0<(t=Ao++)&&(e+="H"+t.toString(32)),e+=":"}else e=":"+e+"r"+(t=fo++).toString(32)+":";return n.memoizedState=e},unstable_isNewReconciler:!1},ns={readContext:Ii,useCallback:$o,useContext:Ii,useEffect:Do,useImperativeHandle:Uo,useInsertionEffect:Lo,useLayoutEffect:Ro,useMemo:Yo,useReducer:Co,useRef:No,useState:function(){return Co(yo)},useDebugValue:Fo,useDeferredValue:function(n){return qo(bo(),so.memoizedState,n)},useTransition:function(){return[Co(yo)[0],bo().memoizedState]},useMutableSource:Eo,useSyncExternalStore:xo,useId:Go,unstable_isNewReconciler:!1},es={readContext:Ii,useCallback:$o,useContext:Ii,useEffect:Do,useImperativeHandle:Uo,useInsertionEffect:Lo,useLayoutEffect:Ro,useMemo:Yo,useReducer:Bo,useRef:No,useState:function(){return Bo(yo)},useDebugValue:Fo,useDeferredValue:function(n){var e=bo();return null===so?e.memoizedState=n:qo(e,so.memoizedState,n)},useTransition:function(){return[Bo(yo)[0],bo().memoizedState]},useMutableSource:Eo,useSyncExternalStore:xo,useId:Go,unstable_isNewReconciler:!1};function ts(n,e){if(n&&n.defaultProps){for(var t in e=L({},e),n=n.defaultProps)void 0===e[t]&&(e[t]=n[t]);return e}return e}function rs(n,e,t,r){t=null==(t=t(r,e=n.memoizedState))?e:L({},e,t),n.memoizedState=t,0===n.lanes&&(n.updateQueue.baseState=t)}var as={isMounted:function(n){return!!(n=n._reactInternals)&&Yn(n)===n},enqueueSetState:function(n,e,t){n=n._reactInternals;var r=nc(),a=ec(n),i=Ri(r,a);i.payload=e,null!=t&&(i.callback=t),null!==(e=Mi(n,i,a))&&(tc(e,n,a,r),Ui(e,n,a))},enqueueReplaceState:function(n,e,t){n=n._reactInternals;var r=nc(),a=ec(n),i=Ri(r,a);i.tag=1,i.payload=e,null!=t&&(i.callback=t),null!==(e=Mi(n,i,a))&&(tc(e,n,a,r),Ui(e,n,a))},enqueueForceUpdate:function(n,e){n=n._reactInternals;var t=nc(),r=ec(n),a=Ri(t,r);a.tag=2,null!=e&&(a.callback=e),null!==(e=Mi(n,a,r))&&(tc(e,n,r,t),Ui(e,n,r))}};function is(n,e,t,r,a,i,o){return"function"==typeof(n=n.stateNode).shouldComponentUpdate?n.shouldComponentUpdate(r,i,o):!(e.prototype&&e.prototype.isPureReactComponent&&lr(t,r)&&lr(a,i))}function os(n,e,t){var r=!1,a=ja,i=e.contextType;return"object"==typeof i&&null!==i?i=Ii(i):(a=Na(e)?Ia:Sa.current,i=(r=null!=(r=e.contextTypes))?za(n,a):ja),e=new e(t,i),n.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=as,n.stateNode=e,e._reactInternals=n,r&&((n=n.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,n.__reactInternalMemoizedMaskedChildContext=i),e}function ss(n,e,t,r){n=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(t,r),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(t,r),e.state!==n&&as.enqueueReplaceState(e,e.state,null)}function ls(n,e,t,r){var a=n.stateNode;a.props=t,a.state=n.memoizedState,a.refs={},Di(n);var i=e.contextType;"object"==typeof i&&null!==i?a.context=Ii(i):(i=Na(e)?Ia:Sa.current,a.context=za(n,i)),a.state=n.memoizedState,"function"==typeof(i=e.getDerivedStateFromProps)&&(rs(n,e,i,t),a.state=n.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(e=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),e!==a.state&&as.enqueueReplaceState(a,a.state,null),$i(n,t,a,r),a.state=n.memoizedState),"function"==typeof a.componentDidMount&&(n.flags|=4194308)}function cs(n,e){try{var t="",r=e;do{t+=F(r),r=r.return}while(r);var a=t}catch(n){a="\nError generating stack: "+n.message+"\n"+n.stack}return{value:n,source:e,stack:a,digest:null}}function us(n,e,t){return{value:n,source:null,stack:null!=t?t:null,digest:null!=e?e:null}}function ds(n,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var As="function"==typeof WeakMap?WeakMap:Map;function fs(n,e,t){(t=Ri(-1,t)).tag=3,t.payload={element:null};var r=e.value;return t.callback=function(){ql||(ql=!0,Wl=r),ds(0,e)},t}function ps(n,e,t){(t=Ri(-1,t)).tag=3;var r=n.type.getDerivedStateFromError;if("function"==typeof r){var a=e.value;t.payload=function(){return r(a)},t.callback=function(){ds(0,e)}}var i=n.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(t.callback=function(){ds(0,e),"function"!=typeof r&&(null===Gl?Gl=new Set([this]):Gl.add(this));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),t}function hs(n,e,t){var r=n.pingCache;if(null===r){r=n.pingCache=new As;var a=new Set;r.set(e,a)}else void 0===(a=r.get(e))&&(a=new Set,r.set(e,a));a.has(t)||(a.add(t),n=wc.bind(null,n,e,t),e.then(n,n))}function gs(n){do{var e;if((e=13===n.tag)&&(e=null===(e=n.memoizedState)||null!==e.dehydrated),e)return n;n=n.return}while(null!==n);return null}function ms(n,e,t,r,a){return 1&n.mode?(n.flags|=65536,n.lanes=a,n):(n===e?n.flags|=65536:(n.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((e=Ri(-1,1)).tag=2,Mi(t,e,1))),t.lanes|=1),n)}var vs=y.ReactCurrentOwner,bs=!1;function ys(n,e,t,r){e.child=null===n?Ci(e,null,t,r):yi(e,n.child,t,r)}function Cs(n,e,t,r,a){t=t.render;var i=e.ref;return _i(e,a),r=go(n,e,t,r,i,a),t=mo(),null===n||bs?(ai&&t&&ni(e),e.flags|=1,ys(n,e,r,a),e.child):(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~a,qs(n,e,a))}function Bs(n,e,t,r,a){if(null===n){var i=t.type;return"function"!=typeof i||Nc(i)||void 0!==i.defaultProps||null!==t.compare||void 0!==t.defaultProps?((n=Oc(t.type,null,r,e,e.mode,a)).ref=e.ref,n.return=e,e.child=n):(e.tag=15,e.type=i,Es(n,e,i,r,a))}if(i=n.child,0===(n.lanes&a)){var o=i.memoizedProps;if((t=null!==(t=t.compare)?t:lr)(o,r)&&n.ref===e.ref)return qs(n,e,a)}return e.flags|=1,(n=Tc(i,r)).ref=e.ref,n.return=e,e.child=n}function Es(n,e,t,r,a){if(null!==n){var i=n.memoizedProps;if(lr(i,r)&&n.ref===e.ref){if(bs=!1,e.pendingProps=r=i,0===(n.lanes&a))return e.lanes=n.lanes,qs(n,e,a);131072&n.flags&&(bs=!0)}}return ks(n,e,t,r,a)}function xs(n,e,t){var r=e.pendingProps,a=r.children,i=null!==n?n.memoizedState:null;if("hidden"===r.mode)if(1&e.mode){if(!(1073741824&t))return n=null!==i?i.baseLanes|t:t,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:n,cachePool:null,transitions:null},e.updateQueue=null,ka(Tl,Nl),Nl|=n,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==i?i.baseLanes:t,ka(Tl,Nl),Nl|=r}else e.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Tl,Nl),Nl|=t;else null!==i?(r=i.baseLanes|t,e.memoizedState=null):r=t,ka(Tl,Nl),Nl|=r;return ys(n,e,a,t),e.child}function ws(n,e){var t=e.ref;(null===n&&null!==t||null!==n&&n.ref!==t)&&(e.flags|=512,e.flags|=2097152)}function ks(n,e,t,r,a){var i=Na(t)?Ia:Sa.current;return i=za(e,i),_i(e,a),t=go(n,e,t,r,i,a),r=mo(),null===n||bs?(ai&&r&&ni(e),e.flags|=1,ys(n,e,t,a),e.child):(e.updateQueue=n.updateQueue,e.flags&=-2053,n.lanes&=~a,qs(n,e,a))}function js(n,e,t,r,a){if(Na(t)){var i=!0;Da(e)}else i=!1;if(_i(e,a),null===e.stateNode)Ys(n,e),os(e,t,r),ls(e,t,r,a),r=!0;else if(null===n){var o=e.stateNode,s=e.memoizedProps;o.props=s;var l=o.context,c=t.contextType;c="object"==typeof c&&null!==c?Ii(c):za(e,c=Na(t)?Ia:Sa.current);var u=t.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof o.getSnapshotBeforeUpdate;d||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(s!==r||l!==c)&&ss(e,o,r,c),Pi=!1;var A=e.memoizedState;o.state=A,$i(e,r,o,a),l=e.memoizedState,s!==r||A!==l||_a.current||Pi?("function"==typeof u&&(rs(e,t,u,r),l=e.memoizedState),(s=Pi||is(e,t,s,r,A,l,c))?(d||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(e.flags|=4194308)):("function"==typeof o.componentDidMount&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=l),o.props=r,o.state=l,o.context=c,r=s):("function"==typeof o.componentDidMount&&(e.flags|=4194308),r=!1)}else{o=e.stateNode,Li(n,e),s=e.memoizedProps,c=e.type===e.elementType?s:ts(e.type,s),o.props=c,d=e.pendingProps,A=o.context,l="object"==typeof(l=t.contextType)&&null!==l?Ii(l):za(e,l=Na(t)?Ia:Sa.current);var f=t.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(s!==d||A!==l)&&ss(e,o,r,l),Pi=!1,A=e.memoizedState,o.state=A,$i(e,r,o,a);var p=e.memoizedState;s!==d||A!==p||_a.current||Pi?("function"==typeof f&&(rs(e,t,f,r),p=e.memoizedState),(c=Pi||is(e,t,c,r,A,p,l)||!1)?(u||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,p,l),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,p,l)),"function"==typeof o.componentDidUpdate&&(e.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(e.flags|=1024)):("function"!=typeof o.componentDidUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=p),o.props=r,o.state=p,o.context=l,r=c):("function"!=typeof o.componentDidUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||s===n.memoizedProps&&A===n.memoizedState||(e.flags|=1024),r=!1)}return Ss(n,e,t,r,i,a)}function Ss(n,e,t,r,a,i){ws(n,e);var o=!!(128&e.flags);if(!r&&!o)return a&&La(e,t,!1),qs(n,e,i);r=e.stateNode,vs.current=e;var s=o&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return e.flags|=1,null!==n&&o?(e.child=yi(e,n.child,null,i),e.child=yi(e,null,s,i)):ys(n,e,s,i),e.memoizedState=r.state,a&&La(e,t,!0),e.child}function _s(n){var e=n.stateNode;e.pendingContext?Oa(0,e.pendingContext,e.pendingContext!==e.context):e.context&&Oa(0,e.context,!1),Vi(n,e.containerInfo)}function Is(n,e,t,r,a){return fi(),pi(a),e.flags|=256,ys(n,e,t,r),e.child}var zs,Ns,Ts,Os,Ps={dehydrated:null,treeContext:null,retryLane:0};function Ds(n){return{baseLanes:n,cachePool:null,transitions:null}}function Ls(n,e,t){var r,a=e.pendingProps,o=Xi.current,s=!1,l=!!(128&e.flags);if((r=l)||(r=(null===n||null!==n.memoizedState)&&!!(2&o)),r?(s=!0,e.flags&=-129):null!==n&&null===n.memoizedState||(o|=1),ka(Xi,1&o),null===n)return ci(e),null!==(n=e.memoizedState)&&null!==(n=n.dehydrated)?(1&e.mode?"$!"===n.data?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(l=a.children,n=a.fallback,s?(a=e.mode,s=e.child,l={mode:"hidden",children:l},1&a||null===s?s=Dc(l,a,0,null):(s.childLanes=0,s.pendingProps=l),n=Pc(n,a,t,null),s.return=e,n.return=e,s.sibling=n,e.child=s,e.child.memoizedState=Ds(t),e.memoizedState=Ps,n):Rs(e,l));if(null!==(o=n.memoizedState)&&null!==(r=o.dehydrated))return function(n,e,t,r,a,o,s){if(t)return 256&e.flags?(e.flags&=-257,Ms(n,e,s,r=us(Error(i(422))))):null!==e.memoizedState?(e.child=n.child,e.flags|=128,null):(o=r.fallback,a=e.mode,r=Dc({mode:"visible",children:r.children},a,0,null),(o=Pc(o,a,s,null)).flags|=2,r.return=e,o.return=e,r.sibling=o,e.child=r,1&e.mode&&yi(e,n.child,null,s),e.child.memoizedState=Ds(s),e.memoizedState=Ps,o);if(!(1&e.mode))return Ms(n,e,s,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var l=r.dgst;return r=l,Ms(n,e,s,r=us(o=Error(i(419)),r,void 0))}if(l=0!==(s&n.childLanes),bs||l){if(null!==(r=_l)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|s))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Oi(n,a),tc(r,n,a,-1))}return hc(),Ms(n,e,s,r=us(Error(i(421))))}return"$?"===a.data?(e.flags|=128,e.child=n.child,e=jc.bind(null,n),a._reactRetry=e,null):(n=o.treeContext,ri=ca(a.nextSibling),ti=e,ai=!0,ii=null,null!==n&&(Ha[Ka++]=Qa,Ha[Ka++]=Za,Ha[Ka++]=Va,Qa=n.id,Za=n.overflow,Va=e),(e=Rs(e,r.children)).flags|=4096,e)}(n,e,l,a,r,o,t);if(s){s=a.fallback,l=e.mode,r=(o=n.child).sibling;var c={mode:"hidden",children:a.children};return 1&l||e.child===o?(a=Tc(o,c)).subtreeFlags=14680064&o.subtreeFlags:((a=e.child).childLanes=0,a.pendingProps=c,e.deletions=null),null!==r?s=Tc(r,s):(s=Pc(s,l,t,null)).flags|=2,s.return=e,a.return=e,a.sibling=s,e.child=a,a=s,s=e.child,l=null===(l=n.child.memoizedState)?Ds(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=n.childLanes&~t,e.memoizedState=Ps,a}return n=(s=n.child).sibling,a=Tc(s,{mode:"visible",children:a.children}),!(1&e.mode)&&(a.lanes=t),a.return=e,a.sibling=null,null!==n&&(null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)),e.child=a,e.memoizedState=null,a}function Rs(n,e){return(e=Dc({mode:"visible",children:e},n.mode,0,null)).return=n,n.child=e}function Ms(n,e,t,r){return null!==r&&pi(r),yi(e,n.child,null,t),(n=Rs(e,e.pendingProps.children)).flags|=2,e.memoizedState=null,n}function Us(n,e,t){n.lanes|=e;var r=n.alternate;null!==r&&(r.lanes|=e),Si(n.return,e,t)}function Fs(n,e,t,r,a){var i=n.memoizedState;null===i?n.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(i.isBackwards=e,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=t,i.tailMode=a)}function $s(n,e,t){var r=e.pendingProps,a=r.revealOrder,i=r.tail;if(ys(n,e,r.children,t),2&(r=Xi.current))r=1&r|2,e.flags|=128;else{if(null!==n&&128&n.flags)n:for(n=e.child;null!==n;){if(13===n.tag)null!==n.memoizedState&&Us(n,t,e);else if(19===n.tag)Us(n,t,e);else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break n;for(;null===n.sibling;){if(null===n.return||n.return===e)break n;n=n.return}n.sibling.return=n.return,n=n.sibling}r&=1}if(ka(Xi,r),1&e.mode)switch(a){case"forwards":for(t=e.child,a=null;null!==t;)null!==(n=t.alternate)&&null===no(n)&&(a=t),t=t.sibling;null===(t=a)?(a=e.child,e.child=null):(a=t.sibling,t.sibling=null),Fs(e,!1,a,t,i);break;case"backwards":for(t=null,a=e.child,e.child=null;null!==a;){if(null!==(n=a.alternate)&&null===no(n)){e.child=a;break}n=a.sibling,a.sibling=t,t=a,a=n}Fs(e,!0,t,null,i);break;case"together":Fs(e,!1,null,null,void 0);break;default:e.memoizedState=null}else e.memoizedState=null;return e.child}function Ys(n,e){!(1&e.mode)&&null!==n&&(n.alternate=null,e.alternate=null,e.flags|=2)}function qs(n,e,t){if(null!==n&&(e.dependencies=n.dependencies),Dl|=e.lanes,0===(t&e.childLanes))return null;if(null!==n&&e.child!==n.child)throw Error(i(153));if(null!==e.child){for(t=Tc(n=e.child,n.pendingProps),e.child=t,t.return=e;null!==n.sibling;)n=n.sibling,(t=t.sibling=Tc(n,n.pendingProps)).return=e;t.sibling=null}return e.child}function Ws(n,e){if(!ai)switch(n.tailMode){case"hidden":e=n.tail;for(var t=null;null!==e;)null!==e.alternate&&(t=e),e=e.sibling;null===t?n.tail=null:t.sibling=null;break;case"collapsed":t=n.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e||null===n.tail?n.tail=null:n.tail.sibling=null:r.sibling=null}}function Gs(n){var e=null!==n.alternate&&n.alternate.child===n.child,t=0,r=0;if(e)for(var a=n.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=n,a=a.sibling;else for(a=n.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=n,a=a.sibling;return n.subtreeFlags|=r,n.childLanes=t,e}function Hs(n,e,t){var r=e.pendingProps;switch(ei(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Gs(e),null;case 1:case 17:return Na(e.type)&&Ta(),Gs(e),null;case 3:return r=e.stateNode,Qi(),wa(_a),wa(Sa),to(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==n&&null!==n.child||(di(e)?e.flags|=4:null===n||n.memoizedState.isDehydrated&&!(256&e.flags)||(e.flags|=1024,null!==ii&&(oc(ii),ii=null))),Ns(n,e),Gs(e),null;case 5:Ji(e);var a=Ki(Hi.current);if(t=e.type,null!==n&&null!=e.stateNode)Ts(n,e,t,r,a),n.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(null===e.stateNode)throw Error(i(166));return Gs(e),null}if(n=Ki(Wi.current),di(e)){r=e.stateNode,t=e.type;var o=e.memoizedProps;switch(r[Aa]=e,r[fa]=o,n=!!(1&e.mode),t){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(a=0;a<Pr.length;a++)Mr(Pr[a],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":Q(r,o),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Mr("invalid",r);break;case"textarea":an(r,o),Mr("invalid",r)}for(var l in bn(t,o),a=null,o)if(o.hasOwnProperty(l)){var c=o[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==o.suppressHydrationWarning&&Jr(r.textContent,c,n),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Jr(r.textContent,c,n),a=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Mr("scroll",r)}switch(t){case"input":G(r),X(r,o,!0);break;case"textarea":G(r),sn(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Xr)}r=a,e.updateQueue=r,null!==r&&(e.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===n&&(n=ln(t)),"http://www.w3.org/1999/xhtml"===n?"script"===t?((n=l.createElement("div")).innerHTML="<script><\/script>",n=n.removeChild(n.firstChild)):"string"==typeof r.is?n=l.createElement(t,{is:r.is}):(n=l.createElement(t),"select"===t&&(l=n,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):n=l.createElementNS(n,t),n[Aa]=e,n[fa]=r,zs(n,e,!1,!1),e.stateNode=n;n:{switch(l=yn(t,r),t){case"dialog":Mr("cancel",n),Mr("close",n),a=r;break;case"iframe":case"object":case"embed":Mr("load",n),a=r;break;case"video":case"audio":for(a=0;a<Pr.length;a++)Mr(Pr[a],n);a=r;break;case"source":Mr("error",n),a=r;break;case"img":case"image":case"link":Mr("error",n),Mr("load",n),a=r;break;case"details":Mr("toggle",n),a=r;break;case"input":Q(n,r),a=V(n,r),Mr("invalid",n);break;case"option":default:a=r;break;case"select":n._wrapperState={wasMultiple:!!r.multiple},a=L({},r,{value:void 0}),Mr("invalid",n);break;case"textarea":an(n,r),a=rn(n,r),Mr("invalid",n)}for(o in bn(t,a),c=a)if(c.hasOwnProperty(o)){var u=c[o];"style"===o?mn(n,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&An(n,u):"children"===o?"string"==typeof u?("textarea"!==t||""!==u)&&fn(n,u):"number"==typeof u&&fn(n,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(s.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Mr("scroll",n):null!=u&&b(n,o,u,l))}switch(t){case"input":G(n),X(n,r,!1);break;case"textarea":G(n),sn(n);break;case"option":null!=r.value&&n.setAttribute("value",""+q(r.value));break;case"select":n.multiple=!!r.multiple,null!=(o=r.value)?tn(n,!!r.multiple,o,!1):null!=r.defaultValue&&tn(n,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(n.onclick=Xr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break n;case"img":r=!0;break n;default:r=!1}}r&&(e.flags|=4)}null!==e.ref&&(e.flags|=512,e.flags|=2097152)}return Gs(e),null;case 6:if(n&&null!=e.stateNode)Os(n,e,n.memoizedProps,r);else{if("string"!=typeof r&&null===e.stateNode)throw Error(i(166));if(t=Ki(Hi.current),Ki(Wi.current),di(e)){if(r=e.stateNode,t=e.memoizedProps,r[Aa]=e,(o=r.nodeValue!==t)&&null!==(n=ti))switch(n.tag){case 3:Jr(r.nodeValue,t,!!(1&n.mode));break;case 5:!0!==n.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,t,!!(1&n.mode))}o&&(e.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Aa]=e,e.stateNode=r}return Gs(e),null;case 13:if(wa(Xi),r=e.memoizedState,null===n||null!==n.memoizedState&&null!==n.memoizedState.dehydrated){if(ai&&null!==ri&&1&e.mode&&!(128&e.flags))Ai(),fi(),e.flags|=98560,o=!1;else if(o=di(e),null!==r&&null!==r.dehydrated){if(null===n){if(!o)throw Error(i(318));if(!(o=null!==(o=e.memoizedState)?o.dehydrated:null))throw Error(i(317));o[Aa]=e}else fi(),!(128&e.flags)&&(e.memoizedState=null),e.flags|=4;Gs(e),o=!1}else null!==ii&&(oc(ii),ii=null),o=!0;if(!o)return 65536&e.flags?e:null}return 128&e.flags?(e.lanes=t,e):((r=null!==r)!=(null!==n&&null!==n.memoizedState)&&r&&(e.child.flags|=8192,1&e.mode&&(null===n||1&Xi.current?0===Ol&&(Ol=3):hc())),null!==e.updateQueue&&(e.flags|=4),Gs(e),null);case 4:return Qi(),Ns(n,e),null===n&&$r(e.stateNode.containerInfo),Gs(e),null;case 10:return ji(e.type._context),Gs(e),null;case 19:if(wa(Xi),null===(o=e.memoizedState))return Gs(e),null;if(r=!!(128&e.flags),null===(l=o.rendering))if(r)Ws(o,!1);else{if(0!==Ol||null!==n&&128&n.flags)for(n=e.child;null!==n;){if(null!==(l=no(n))){for(e.flags|=128,Ws(o,!1),null!==(r=l.updateQueue)&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=t,t=e.child;null!==t;)n=r,(o=t).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=n,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,n=l.dependencies,o.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext}),t=t.sibling;return ka(Xi,1&Xi.current|2),e.child}n=n.sibling}null!==o.tail&&Jn()>$l&&(e.flags|=128,r=!0,Ws(o,!1),e.lanes=4194304)}else{if(!r)if(null!==(n=no(l))){if(e.flags|=128,r=!0,null!==(t=n.updateQueue)&&(e.updateQueue=t,e.flags|=4),Ws(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ai)return Gs(e),null}else 2*Jn()-o.renderingStartTime>$l&&1073741824!==t&&(e.flags|=128,r=!0,Ws(o,!1),e.lanes=4194304);o.isBackwards?(l.sibling=e.child,e.child=l):(null!==(t=o.last)?t.sibling=l:e.child=l,o.last=l)}return null!==o.tail?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=Jn(),e.sibling=null,t=Xi.current,ka(Xi,r?1&t|2:1&t),e):(Gs(e),null);case 22:case 23:return dc(),r=null!==e.memoizedState,null!==n&&null!==n.memoizedState!==r&&(e.flags|=8192),r&&1&e.mode?!!(1073741824&Nl)&&(Gs(e),6&e.subtreeFlags&&(e.flags|=8192)):Gs(e),null;case 24:case 25:return null}throw Error(i(156,e.tag))}function Ks(n,e){switch(ei(e),e.tag){case 1:return Na(e.type)&&Ta(),65536&(n=e.flags)?(e.flags=-65537&n|128,e):null;case 3:return Qi(),wa(_a),wa(Sa),to(),65536&(n=e.flags)&&!(128&n)?(e.flags=-65537&n|128,e):null;case 5:return Ji(e),null;case 13:if(wa(Xi),null!==(n=e.memoizedState)&&null!==n.dehydrated){if(null===e.alternate)throw Error(i(340));fi()}return 65536&(n=e.flags)?(e.flags=-65537&n|128,e):null;case 19:return wa(Xi),null;case 4:return Qi(),null;case 10:return ji(e.type._context),null;case 22:case 23:return dc(),null;default:return null}}zs=function(n,e){for(var t=e.child;null!==t;){if(5===t.tag||6===t.tag)n.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Ns=function(){},Ts=function(n,e,t,r){var a=n.memoizedProps;if(a!==r){n=e.stateNode,Ki(Wi.current);var i,o=null;switch(t){case"input":a=V(n,a),r=V(n,r),o=[];break;case"select":a=L({},a,{value:void 0}),r=L({},r,{value:void 0}),o=[];break;case"textarea":a=rn(n,a),r=rn(n,r),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(n.onclick=Xr)}for(u in bn(t,r),t=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var l=a[u];for(i in l)l.hasOwnProperty(i)&&(t||(t={}),t[i]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in r){var c=r[u];if(l=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(i in l)!l.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(t||(t={}),t[i]="");for(i in c)c.hasOwnProperty(i)&&l[i]!==c[i]&&(t||(t={}),t[i]=c[i])}else t||(o||(o=[]),o.push(u,t)),t=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(o=o||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(o=o||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Mr("scroll",n),o||l===c||(o=[])):(o=o||[]).push(u,c))}t&&(o=o||[]).push("style",t);var u=o;(e.updateQueue=u)&&(e.flags|=4)}},Os=function(n,e,t,r){t!==r&&(e.flags|=4)};var Vs=!1,Qs=!1,Zs="function"==typeof WeakSet?WeakSet:Set,Js=null;function Xs(n,e){var t=n.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){xc(n,e,t)}else t.current=null}function nl(n,e,t){try{t()}catch(t){xc(n,e,t)}}var el=!1;function tl(n,e,t){var r=e.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&n)===n){var i=a.destroy;a.destroy=void 0,void 0!==i&&nl(e,t,i)}a=a.next}while(a!==r)}}function rl(n,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var t=e=e.next;do{if((t.tag&n)===n){var r=t.create;t.destroy=r()}t=t.next}while(t!==e)}}function al(n){var e=n.ref;if(null!==e){var t=n.stateNode;n.tag,n=t,"function"==typeof e?e(n):e.current=n}}function il(n){var e=n.alternate;null!==e&&(n.alternate=null,il(e)),n.child=null,n.deletions=null,n.sibling=null,5===n.tag&&null!==(e=n.stateNode)&&(delete e[Aa],delete e[fa],delete e[ha],delete e[ga],delete e[ma]),n.stateNode=null,n.return=null,n.dependencies=null,n.memoizedProps=null,n.memoizedState=null,n.pendingProps=null,n.stateNode=null,n.updateQueue=null}function ol(n){return 5===n.tag||3===n.tag||4===n.tag}function sl(n){n:for(;;){for(;null===n.sibling;){if(null===n.return||ol(n.return))return null;n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue n;if(null===n.child||4===n.tag)continue n;n.child.return=n,n=n.child}if(!(2&n.flags))return n.stateNode}}function ll(n,e,t){var r=n.tag;if(5===r||6===r)n=n.stateNode,e?8===t.nodeType?t.parentNode.insertBefore(n,e):t.insertBefore(n,e):(8===t.nodeType?(e=t.parentNode).insertBefore(n,t):(e=t).appendChild(n),null!=(t=t._reactRootContainer)||null!==e.onclick||(e.onclick=Xr));else if(4!==r&&null!==(n=n.child))for(ll(n,e,t),n=n.sibling;null!==n;)ll(n,e,t),n=n.sibling}function cl(n,e,t){var r=n.tag;if(5===r||6===r)n=n.stateNode,e?t.insertBefore(n,e):t.appendChild(n);else if(4!==r&&null!==(n=n.child))for(cl(n,e,t),n=n.sibling;null!==n;)cl(n,e,t),n=n.sibling}var ul=null,dl=!1;function Al(n,e,t){for(t=t.child;null!==t;)fl(n,e,t),t=t.sibling}function fl(n,e,t){if(oe&&"function"==typeof oe.onCommitFiberUnmount)try{oe.onCommitFiberUnmount(ie,t)}catch(n){}switch(t.tag){case 5:Qs||Xs(t,e);case 6:var r=ul,a=dl;ul=null,Al(n,e,t),dl=a,null!==(ul=r)&&(dl?(n=ul,t=t.stateNode,8===n.nodeType?n.parentNode.removeChild(t):n.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(dl?(n=ul,t=t.stateNode,8===n.nodeType?la(n.parentNode,t):1===n.nodeType&&la(n,t),Ye(n)):la(ul,t.stateNode));break;case 4:r=ul,a=dl,ul=t.stateNode.containerInfo,dl=!0,Al(n,e,t),ul=r,dl=a;break;case 0:case 11:case 14:case 15:if(!Qs&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var i=a,o=i.destroy;i=i.tag,void 0!==o&&(2&i||4&i)&&nl(t,e,o),a=a.next}while(a!==r)}Al(n,e,t);break;case 1:if(!Qs&&(Xs(t,e),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(n){xc(t,e,n)}Al(n,e,t);break;case 21:Al(n,e,t);break;case 22:1&t.mode?(Qs=(r=Qs)||null!==t.memoizedState,Al(n,e,t),Qs=r):Al(n,e,t);break;default:Al(n,e,t)}}function pl(n){var e=n.updateQueue;if(null!==e){n.updateQueue=null;var t=n.stateNode;null===t&&(t=n.stateNode=new Zs),e.forEach(function(e){var r=Sc.bind(null,n,e);t.has(e)||(t.add(e),e.then(r,r))})}}function hl(n,e){var t=e.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var o=n,s=e,l=s;n:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,dl=!1;break n;case 3:case 4:ul=l.stateNode.containerInfo,dl=!0;break n}l=l.return}if(null===ul)throw Error(i(160));fl(o,s,a),ul=null,dl=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(n){xc(a,e,n)}}if(12854&e.subtreeFlags)for(e=e.child;null!==e;)gl(e,n),e=e.sibling}function gl(n,e){var t=n.alternate,r=n.flags;switch(n.tag){case 0:case 11:case 14:case 15:if(hl(e,n),ml(n),4&r){try{tl(3,n,n.return),rl(3,n)}catch(e){xc(n,n.return,e)}try{tl(5,n,n.return)}catch(e){xc(n,n.return,e)}}break;case 1:hl(e,n),ml(n),512&r&&null!==t&&Xs(t,t.return);break;case 5:if(hl(e,n),ml(n),512&r&&null!==t&&Xs(t,t.return),32&n.flags){var a=n.stateNode;try{fn(a,"")}catch(e){xc(n,n.return,e)}}if(4&r&&null!=(a=n.stateNode)){var o=n.memoizedProps,s=null!==t?t.memoizedProps:o,l=n.type,c=n.updateQueue;if(n.updateQueue=null,null!==c)try{"input"===l&&"radio"===o.type&&null!=o.name&&Z(a,o),yn(l,s);var u=yn(l,o);for(s=0;s<c.length;s+=2){var d=c[s],A=c[s+1];"style"===d?mn(a,A):"dangerouslySetInnerHTML"===d?An(a,A):"children"===d?fn(a,A):b(a,d,A,u)}switch(l){case"input":J(a,o);break;case"textarea":on(a,o);break;case"select":var f=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var p=o.value;null!=p?tn(a,!!o.multiple,p,!1):f!==!!o.multiple&&(null!=o.defaultValue?tn(a,!!o.multiple,o.defaultValue,!0):tn(a,!!o.multiple,o.multiple?[]:"",!1))}a[fa]=o}catch(e){xc(n,n.return,e)}}break;case 6:if(hl(e,n),ml(n),4&r){if(null===n.stateNode)throw Error(i(162));a=n.stateNode,o=n.memoizedProps;try{a.nodeValue=o}catch(e){xc(n,n.return,e)}}break;case 3:if(hl(e,n),ml(n),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Ye(e.containerInfo)}catch(e){xc(n,n.return,e)}break;case 4:default:hl(e,n),ml(n);break;case 13:hl(e,n),ml(n),8192&(a=n.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Fl=Jn())),4&r&&pl(n);break;case 22:if(d=null!==t&&null!==t.memoizedState,1&n.mode?(Qs=(u=Qs)||d,hl(e,n),Qs=u):hl(e,n),ml(n),8192&r){if(u=null!==n.memoizedState,(n.stateNode.isHidden=u)&&!d&&1&n.mode)for(Js=n,d=n.child;null!==d;){for(A=Js=d;null!==Js;){switch(p=(f=Js).child,f.tag){case 0:case 11:case 14:case 15:tl(4,f,f.return);break;case 1:Xs(f,f.return);var h=f.stateNode;if("function"==typeof h.componentWillUnmount){r=f,t=f.return;try{e=r,h.props=e.memoizedProps,h.state=e.memoizedState,h.componentWillUnmount()}catch(n){xc(r,t,n)}}break;case 5:Xs(f,f.return);break;case 22:if(null!==f.memoizedState){Cl(A);continue}}null!==p?(p.return=f,Js=p):Cl(A)}d=d.sibling}n:for(d=null,A=n;;){if(5===A.tag){if(null===d){d=A;try{a=A.stateNode,u?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=A.stateNode,s=null!=(c=A.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=gn("display",s))}catch(e){xc(n,n.return,e)}}}else if(6===A.tag){if(null===d)try{A.stateNode.nodeValue=u?"":A.memoizedProps}catch(e){xc(n,n.return,e)}}else if((22!==A.tag&&23!==A.tag||null===A.memoizedState||A===n)&&null!==A.child){A.child.return=A,A=A.child;continue}if(A===n)break n;for(;null===A.sibling;){if(null===A.return||A.return===n)break n;d===A&&(d=null),A=A.return}d===A&&(d=null),A.sibling.return=A.return,A=A.sibling}}break;case 19:hl(e,n),ml(n),4&r&&pl(n);case 21:}}function ml(n){var e=n.flags;if(2&e){try{n:{for(var t=n.return;null!==t;){if(ol(t)){var r=t;break n}t=t.return}throw Error(i(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(fn(a,""),r.flags&=-33),cl(n,sl(n),a);break;case 3:case 4:var o=r.stateNode.containerInfo;ll(n,sl(n),o);break;default:throw Error(i(161))}}catch(e){xc(n,n.return,e)}n.flags&=-3}4096&e&&(n.flags&=-4097)}function vl(n,e,t){Js=n,bl(n,e,t)}function bl(n,e,t){for(var r=!!(1&n.mode);null!==Js;){var a=Js,i=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Vs;if(!o){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Qs;s=Vs;var c=Qs;if(Vs=o,(Qs=l)&&!c)for(Js=a;null!==Js;)l=(o=Js).child,22===o.tag&&null!==o.memoizedState?Bl(a):null!==l?(l.return=o,Js=l):Bl(a);for(;null!==i;)Js=i,bl(i,e,t),i=i.sibling;Js=a,Vs=s,Qs=c}yl(n)}else 8772&a.subtreeFlags&&null!==i?(i.return=a,Js=i):yl(n)}}function yl(n){for(;null!==Js;){var e=Js;if(8772&e.flags){var t=e.alternate;try{if(8772&e.flags)switch(e.tag){case 0:case 11:case 15:Qs||rl(5,e);break;case 1:var r=e.stateNode;if(4&e.flags&&!Qs)if(null===t)r.componentDidMount();else{var a=e.elementType===e.type?t.memoizedProps:ts(e.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;null!==o&&Yi(e,o,r);break;case 3:var s=e.updateQueue;if(null!==s){if(t=null,null!==e.child)switch(e.child.tag){case 5:case 1:t=e.child.stateNode}Yi(e,s,t)}break;case 5:var l=e.stateNode;if(null===t&&4&e.flags){t=l;var c=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===e.memoizedState){var u=e.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var A=d.dehydrated;null!==A&&Ye(A)}}}break;default:throw Error(i(163))}Qs||512&e.flags&&al(e)}catch(n){xc(e,e.return,n)}}if(e===n){Js=null;break}if(null!==(t=e.sibling)){t.return=e.return,Js=t;break}Js=e.return}}function Cl(n){for(;null!==Js;){var e=Js;if(e===n){Js=null;break}var t=e.sibling;if(null!==t){t.return=e.return,Js=t;break}Js=e.return}}function Bl(n){for(;null!==Js;){var e=Js;try{switch(e.tag){case 0:case 11:case 15:var t=e.return;try{rl(4,e)}catch(n){xc(e,t,n)}break;case 1:var r=e.stateNode;if("function"==typeof r.componentDidMount){var a=e.return;try{r.componentDidMount()}catch(n){xc(e,a,n)}}var i=e.return;try{al(e)}catch(n){xc(e,i,n)}break;case 5:var o=e.return;try{al(e)}catch(n){xc(e,o,n)}}}catch(n){xc(e,e.return,n)}if(e===n){Js=null;break}var s=e.sibling;if(null!==s){s.return=e.return,Js=s;break}Js=e.return}}var El,xl=Math.ceil,wl=y.ReactCurrentDispatcher,kl=y.ReactCurrentOwner,jl=y.ReactCurrentBatchConfig,Sl=0,_l=null,Il=null,zl=0,Nl=0,Tl=xa(0),Ol=0,Pl=null,Dl=0,Ll=0,Rl=0,Ml=null,Ul=null,Fl=0,$l=1/0,Yl=null,ql=!1,Wl=null,Gl=null,Hl=!1,Kl=null,Vl=0,Ql=0,Zl=null,Jl=-1,Xl=0;function nc(){return 6&Sl?Jn():-1!==Jl?Jl:Jl=Jn()}function ec(n){return 1&n.mode?2&Sl&&0!==zl?zl&-zl:null!==hi.transition?(0===Xl&&(Xl=ge()),Xl):0!==(n=ye)?n:n=void 0===(n=window.event)?16:Ze(n.type):1}function tc(n,e,t,r){if(50<Ql)throw Ql=0,Zl=null,Error(i(185));ve(n,t,r),2&Sl&&n===_l||(n===_l&&(!(2&Sl)&&(Ll|=t),4===Ol&&sc(n,zl)),rc(n,r),1===t&&0===Sl&&!(1&e.mode)&&($l=Jn()+500,Ma&&$a()))}function rc(n,e){var t=n.callbackNode;!function(n,e){for(var t=n.suspendedLanes,r=n.pingedLanes,a=n.expirationTimes,i=n.pendingLanes;0<i;){var o=31-se(i),s=1<<o,l=a[o];-1===l?0!==(s&t)&&0===(s&r)||(a[o]=pe(s,e)):l<=e&&(n.expiredLanes|=s),i&=~s}}(n,e);var r=fe(n,n===_l?zl:0);if(0===r)null!==t&&Vn(t),n.callbackNode=null,n.callbackPriority=0;else if(e=r&-r,n.callbackPriority!==e){if(null!=t&&Vn(t),1===e)0===n.tag?function(n){Ma=!0,Fa(n)}(lc.bind(null,n)):Fa(lc.bind(null,n)),oa(function(){!(6&Sl)&&$a()}),t=null;else{switch(Ce(r)){case 1:t=ne;break;case 4:t=ee;break;case 16:default:t=te;break;case 536870912:t=ae}t=_c(t,ac.bind(null,n))}n.callbackPriority=e,n.callbackNode=t}}function ac(n,e){if(Jl=-1,Xl=0,6&Sl)throw Error(i(327));var t=n.callbackNode;if(Bc()&&n.callbackNode!==t)return null;var r=fe(n,n===_l?zl:0);if(0===r)return null;if(30&r||0!==(r&n.expiredLanes)||e)e=gc(n,r);else{e=r;var a=Sl;Sl|=2;var o=pc();for(_l===n&&zl===e||(Yl=null,$l=Jn()+500,Ac(n,e));;)try{vc();break}catch(e){fc(n,e)}ki(),wl.current=o,Sl=a,null!==Il?e=0:(_l=null,zl=0,e=Ol)}if(0!==e){if(2===e&&0!==(a=he(n))&&(r=a,e=ic(n,a)),1===e)throw t=Pl,Ac(n,0),sc(n,r),rc(n,Jn()),t;if(6===e)sc(n,r);else{if(a=n.current.alternate,!(30&r||function(n){for(var e=n;;){if(16384&e.flags){var t=e.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],i=a.getSnapshot;a=a.value;try{if(!sr(i(),a))return!1}catch(n){return!1}}}if(t=e.child,16384&e.subtreeFlags&&null!==t)t.return=e,e=t;else{if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}(a)||(e=gc(n,r),2===e&&(o=he(n),0!==o&&(r=o,e=ic(n,o))),1!==e)))throw t=Pl,Ac(n,0),sc(n,r),rc(n,Jn()),t;switch(n.finishedWork=a,n.finishedLanes=r,e){case 0:case 1:throw Error(i(345));case 2:case 5:Cc(n,Ul,Yl);break;case 3:if(sc(n,r),(130023424&r)===r&&10<(e=Fl+500-Jn())){if(0!==fe(n,0))break;if(((a=n.suspendedLanes)&r)!==r){nc(),n.pingedLanes|=n.suspendedLanes&a;break}n.timeoutHandle=ra(Cc.bind(null,n,Ul,Yl),e);break}Cc(n,Ul,Yl);break;case 4:if(sc(n,r),(4194240&r)===r)break;for(e=n.eventTimes,a=-1;0<r;){var s=31-se(r);o=1<<s,(s=e[s])>a&&(a=s),r&=~o}if(r=a,10<(r=(120>(r=Jn()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xl(r/1960))-r)){n.timeoutHandle=ra(Cc.bind(null,n,Ul,Yl),r);break}Cc(n,Ul,Yl);break;default:throw Error(i(329))}}}return rc(n,Jn()),n.callbackNode===t?ac.bind(null,n):null}function ic(n,e){var t=Ml;return n.current.memoizedState.isDehydrated&&(Ac(n,e).flags|=256),2!==(n=gc(n,e))&&(e=Ul,Ul=t,null!==e&&oc(e)),n}function oc(n){null===Ul?Ul=n:Ul.push.apply(Ul,n)}function sc(n,e){for(e&=~Rl,e&=~Ll,n.suspendedLanes|=e,n.pingedLanes&=~e,n=n.expirationTimes;0<e;){var t=31-se(e),r=1<<t;n[t]=-1,e&=~r}}function lc(n){if(6&Sl)throw Error(i(327));Bc();var e=fe(n,0);if(!(1&e))return rc(n,Jn()),null;var t=gc(n,e);if(0!==n.tag&&2===t){var r=he(n);0!==r&&(e=r,t=ic(n,r))}if(1===t)throw t=Pl,Ac(n,0),sc(n,e),rc(n,Jn()),t;if(6===t)throw Error(i(345));return n.finishedWork=n.current.alternate,n.finishedLanes=e,Cc(n,Ul,Yl),rc(n,Jn()),null}function cc(n,e){var t=Sl;Sl|=1;try{return n(e)}finally{0===(Sl=t)&&($l=Jn()+500,Ma&&$a())}}function uc(n){null!==Kl&&0===Kl.tag&&!(6&Sl)&&Bc();var e=Sl;Sl|=1;var t=jl.transition,r=ye;try{if(jl.transition=null,ye=1,n)return n()}finally{ye=r,jl.transition=t,!(6&(Sl=e))&&$a()}}function dc(){Nl=Tl.current,wa(Tl)}function Ac(n,e){n.finishedWork=null,n.finishedLanes=0;var t=n.timeoutHandle;if(-1!==t&&(n.timeoutHandle=-1,aa(t)),null!==Il)for(t=Il.return;null!==t;){var r=t;switch(ei(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ta();break;case 3:Qi(),wa(_a),wa(Sa),to();break;case 5:Ji(r);break;case 4:Qi();break;case 13:case 19:wa(Xi);break;case 10:ji(r.type._context);break;case 22:case 23:dc()}t=t.return}if(_l=n,Il=n=Tc(n.current,null),zl=Nl=e,Ol=0,Pl=null,Rl=Ll=Dl=0,Ul=Ml=null,null!==zi){for(e=0;e<zi.length;e++)if(null!==(r=(t=zi[e]).interleaved)){t.interleaved=null;var a=r.next,i=t.pending;if(null!==i){var o=i.next;i.next=a,r.next=o}t.pending=r}zi=null}return n}function fc(n,e){for(;;){var t=Il;try{if(ki(),ro.current=Jo,co){for(var r=oo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}co=!1}if(io=0,lo=so=oo=null,uo=!1,Ao=0,kl.current=null,null===t||null===t.return){Ol=1,Pl=e,Il=null;break}n:{var o=n,s=t.return,l=t,c=e;if(e=zl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=l,A=d.tag;if(!(1&d.mode||0!==A&&11!==A&&15!==A)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var p=gs(s);if(null!==p){p.flags&=-257,ms(p,s,l,0,e),1&p.mode&&hs(o,u,e),c=u;var h=(e=p).updateQueue;if(null===h){var g=new Set;g.add(c),e.updateQueue=g}else h.add(c);break n}if(!(1&e)){hs(o,u,e),hc();break n}c=Error(i(426))}else if(ai&&1&l.mode){var m=gs(s);if(null!==m){!(65536&m.flags)&&(m.flags|=256),ms(m,s,l,0,e),pi(cs(c,l));break n}}o=c=cs(c,l),4!==Ol&&(Ol=2),null===Ml?Ml=[o]:Ml.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e,Fi(o,fs(0,c,e));break n;case 1:l=c;var v=o.type,b=o.stateNode;if(!(128&o.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==Gl&&Gl.has(b)))){o.flags|=65536,e&=-e,o.lanes|=e,Fi(o,ps(o,l,e));break n}}o=o.return}while(null!==o)}yc(t)}catch(n){e=n,Il===t&&null!==t&&(Il=t=t.return);continue}break}}function pc(){var n=wl.current;return wl.current=Jo,null===n?Jo:n}function hc(){0!==Ol&&3!==Ol&&2!==Ol||(Ol=4),null===_l||!(268435455&Dl)&&!(268435455&Ll)||sc(_l,zl)}function gc(n,e){var t=Sl;Sl|=2;var r=pc();for(_l===n&&zl===e||(Yl=null,Ac(n,e));;)try{mc();break}catch(e){fc(n,e)}if(ki(),Sl=t,wl.current=r,null!==Il)throw Error(i(261));return _l=null,zl=0,Ol}function mc(){for(;null!==Il;)bc(Il)}function vc(){for(;null!==Il&&!Qn();)bc(Il)}function bc(n){var e=El(n.alternate,n,Nl);n.memoizedProps=n.pendingProps,null===e?yc(n):Il=e,kl.current=null}function yc(n){var e=n;do{var t=e.alternate;if(n=e.return,32768&e.flags){if(null!==(t=Ks(t,e)))return t.flags&=32767,void(Il=t);if(null===n)return Ol=6,void(Il=null);n.flags|=32768,n.subtreeFlags=0,n.deletions=null}else if(null!==(t=Hs(t,e,Nl)))return void(Il=t);if(null!==(e=e.sibling))return void(Il=e);Il=e=n}while(null!==e);0===Ol&&(Ol=5)}function Cc(n,e,t){var r=ye,a=jl.transition;try{jl.transition=null,ye=1,function(n,e,t,r){do{Bc()}while(null!==Kl);if(6&Sl)throw Error(i(327));t=n.finishedWork;var a=n.finishedLanes;if(null===t)return null;if(n.finishedWork=null,n.finishedLanes=0,t===n.current)throw Error(i(177));n.callbackNode=null,n.callbackPriority=0;var o=t.lanes|t.childLanes;if(function(n,e){var t=n.pendingLanes&~e;n.pendingLanes=e,n.suspendedLanes=0,n.pingedLanes=0,n.expiredLanes&=e,n.mutableReadLanes&=e,n.entangledLanes&=e,e=n.entanglements;var r=n.eventTimes;for(n=n.expirationTimes;0<t;){var a=31-se(t),i=1<<a;e[a]=0,r[a]=-1,n[a]=-1,t&=~i}}(n,o),n===_l&&(Il=_l=null,zl=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||Hl||(Hl=!0,_c(te,function(){return Bc(),null})),o=!!(15990&t.flags),15990&t.subtreeFlags||o){o=jl.transition,jl.transition=null;var s=ye;ye=1;var l=Sl;Sl|=4,kl.current=null,function(n,e){if(na=We,fr(n=Ar())){if("selectionStart"in n)var t={start:n.selectionStart,end:n.selectionEnd};else n:{var r=(t=(t=n.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{t.nodeType,o.nodeType}catch(n){t=null;break n}var s=0,l=-1,c=-1,u=0,d=0,A=n,f=null;e:for(;;){for(var p;A!==t||0!==a&&3!==A.nodeType||(l=s+a),A!==o||0!==r&&3!==A.nodeType||(c=s+r),3===A.nodeType&&(s+=A.nodeValue.length),null!==(p=A.firstChild);)f=A,A=p;for(;;){if(A===n)break e;if(f===t&&++u===a&&(l=s),f===o&&++d===r&&(c=s),null!==(p=A.nextSibling))break;f=(A=f).parentNode}A=p}t=-1===l||-1===c?null:{start:l,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(ea={focusedElem:n,selectionRange:t},We=!1,Js=e;null!==Js;)if(n=(e=Js).child,1028&e.subtreeFlags&&null!==n)n.return=e,Js=n;else for(;null!==Js;){e=Js;try{var h=e.alternate;if(1024&e.flags)switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var g=h.memoizedProps,m=h.memoizedState,v=e.stateNode,b=v.getSnapshotBeforeUpdate(e.elementType===e.type?g:ts(e.type,g),m);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var y=e.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(i(163))}}catch(n){xc(e,e.return,n)}if(null!==(n=e.sibling)){n.return=e.return,Js=n;break}Js=e.return}h=el,el=!1}(n,t),gl(t,n),pr(ea),We=!!na,ea=na=null,n.current=t,vl(t,n,a),Zn(),Sl=l,ye=s,jl.transition=o}else n.current=t;if(Hl&&(Hl=!1,Kl=n,Vl=a),0===(o=n.pendingLanes)&&(Gl=null),function(n){if(oe&&"function"==typeof oe.onCommitFiberRoot)try{oe.onCommitFiberRoot(ie,n,void 0,!(128&~n.current.flags))}catch(n){}}(t.stateNode),rc(n,Jn()),null!==e)for(r=n.onRecoverableError,t=0;t<e.length;t++)r((a=e[t]).value,{componentStack:a.stack,digest:a.digest});if(ql)throw ql=!1,n=Wl,Wl=null,n;!!(1&Vl)&&0!==n.tag&&Bc(),1&(o=n.pendingLanes)?n===Zl?Ql++:(Ql=0,Zl=n):Ql=0,$a()}(n,e,t,r)}finally{jl.transition=a,ye=r}return null}function Bc(){if(null!==Kl){var n=Ce(Vl),e=jl.transition,t=ye;try{if(jl.transition=null,ye=16>n?16:n,null===Kl)var r=!1;else{if(n=Kl,Kl=null,Vl=0,6&Sl)throw Error(i(331));var a=Sl;for(Sl|=4,Js=n.current;null!==Js;){var o=Js,s=o.child;if(16&Js.flags){var l=o.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(Js=u;null!==Js;){var d=Js;switch(d.tag){case 0:case 11:case 15:tl(8,d,o)}var A=d.child;if(null!==A)A.return=d,Js=A;else for(;null!==Js;){var f=(d=Js).sibling,p=d.return;if(il(d),d===u){Js=null;break}if(null!==f){f.return=p,Js=f;break}Js=p}}}var h=o.alternate;if(null!==h){var g=h.child;if(null!==g){h.child=null;do{var m=g.sibling;g.sibling=null,g=m}while(null!==g)}}Js=o}}if(2064&o.subtreeFlags&&null!==s)s.return=o,Js=s;else n:for(;null!==Js;){if(2048&(o=Js).flags)switch(o.tag){case 0:case 11:case 15:tl(9,o,o.return)}var v=o.sibling;if(null!==v){v.return=o.return,Js=v;break n}Js=o.return}}var b=n.current;for(Js=b;null!==Js;){var y=(s=Js).child;if(2064&s.subtreeFlags&&null!==y)y.return=s,Js=y;else n:for(s=b;null!==Js;){if(2048&(l=Js).flags)try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(n){xc(l,l.return,n)}if(l===s){Js=null;break n}var C=l.sibling;if(null!==C){C.return=l.return,Js=C;break n}Js=l.return}}if(Sl=a,$a(),oe&&"function"==typeof oe.onPostCommitFiberRoot)try{oe.onPostCommitFiberRoot(ie,n)}catch(n){}r=!0}return r}finally{ye=t,jl.transition=e}}return!1}function Ec(n,e,t){n=Mi(n,e=fs(0,e=cs(t,e),1),1),e=nc(),null!==n&&(ve(n,1,e),rc(n,e))}function xc(n,e,t){if(3===n.tag)Ec(n,n,t);else for(;null!==e;){if(3===e.tag){Ec(e,n,t);break}if(1===e.tag){var r=e.stateNode;if("function"==typeof e.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Gl||!Gl.has(r))){e=Mi(e,n=ps(e,n=cs(t,n),1),1),n=nc(),null!==e&&(ve(e,1,n),rc(e,n));break}}e=e.return}}function wc(n,e,t){var r=n.pingCache;null!==r&&r.delete(e),e=nc(),n.pingedLanes|=n.suspendedLanes&t,_l===n&&(zl&t)===t&&(4===Ol||3===Ol&&(130023424&zl)===zl&&500>Jn()-Fl?Ac(n,0):Rl|=t),rc(n,e)}function kc(n,e){0===e&&(1&n.mode?(e=de,!(130023424&(de<<=1))&&(de=4194304)):e=1);var t=nc();null!==(n=Oi(n,e))&&(ve(n,e,t),rc(n,t))}function jc(n){var e=n.memoizedState,t=0;null!==e&&(t=e.retryLane),kc(n,t)}function Sc(n,e){var t=0;switch(n.tag){case 13:var r=n.stateNode,a=n.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=n.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(e),kc(n,t)}function _c(n,e){return Kn(n,e)}function Ic(n,e,t,r){this.tag=n,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function zc(n,e,t,r){return new Ic(n,e,t,r)}function Nc(n){return!(!(n=n.prototype)||!n.isReactComponent)}function Tc(n,e){var t=n.alternate;return null===t?((t=zc(n.tag,e,n.key,n.mode)).elementType=n.elementType,t.type=n.type,t.stateNode=n.stateNode,t.alternate=n,n.alternate=t):(t.pendingProps=e,t.type=n.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&n.flags,t.childLanes=n.childLanes,t.lanes=n.lanes,t.child=n.child,t.memoizedProps=n.memoizedProps,t.memoizedState=n.memoizedState,t.updateQueue=n.updateQueue,e=n.dependencies,t.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext},t.sibling=n.sibling,t.index=n.index,t.ref=n.ref,t}function Oc(n,e,t,r,a,o){var s=2;if(r=n,"function"==typeof n)Nc(n)&&(s=1);else if("string"==typeof n)s=5;else n:switch(n){case E:return Pc(t.children,a,o,e);case x:s=8,a|=8;break;case w:return(n=zc(12,t,e,2|a)).elementType=w,n.lanes=o,n;case _:return(n=zc(13,t,e,a)).elementType=_,n.lanes=o,n;case I:return(n=zc(19,t,e,a)).elementType=I,n.lanes=o,n;case T:return Dc(t,a,o,e);default:if("object"==typeof n&&null!==n)switch(n.$$typeof){case k:s=10;break n;case j:s=9;break n;case S:s=11;break n;case z:s=14;break n;case N:s=16,r=null;break n}throw Error(i(130,null==n?n:typeof n,""))}return(e=zc(s,t,e,a)).elementType=n,e.type=r,e.lanes=o,e}function Pc(n,e,t,r){return(n=zc(7,n,r,e)).lanes=t,n}function Dc(n,e,t,r){return(n=zc(22,n,r,e)).elementType=T,n.lanes=t,n.stateNode={isHidden:!1},n}function Lc(n,e,t){return(n=zc(6,n,null,e)).lanes=t,n}function Rc(n,e,t){return(e=zc(4,null!==n.children?n.children:[],n.key,e)).lanes=t,e.stateNode={containerInfo:n.containerInfo,pendingChildren:null,implementation:n.implementation},e}function Mc(n,e,t,r,a){this.tag=e,this.containerInfo=n,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=me(0),this.expirationTimes=me(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=me(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Uc(n,e,t,r,a,i,o,s,l){return n=new Mc(n,e,t,s,l),1===e?(e=1,!0===i&&(e|=8)):e=0,i=zc(3,null,null,e),n.current=i,i.stateNode=n,i.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Di(i),n}function Fc(n){if(!n)return ja;n:{if(Yn(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var e=n;do{switch(e.tag){case 3:e=e.stateNode.context;break n;case 1:if(Na(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break n}}e=e.return}while(null!==e);throw Error(i(171))}if(1===n.tag){var t=n.type;if(Na(t))return Pa(n,t,e)}return e}function $c(n,e,t,r,a,i,o,s,l){return(n=Uc(t,r,!0,n,0,i,0,s,l)).context=Fc(null),t=n.current,(i=Ri(r=nc(),a=ec(t))).callback=null!=e?e:null,Mi(t,i,a),n.current.lanes=a,ve(n,a,r),rc(n,r),n}function Yc(n,e,t,r){var a=e.current,i=nc(),o=ec(a);return t=Fc(t),null===e.context?e.context=t:e.pendingContext=t,(e=Ri(i,o)).payload={element:n},null!==(r=void 0===r?null:r)&&(e.callback=r),null!==(n=Mi(a,e,o))&&(tc(n,a,o,i),Ui(n,a,o)),o}function qc(n){return(n=n.current).child?(n.child.tag,n.child.stateNode):null}function Wc(n,e){if(null!==(n=n.memoizedState)&&null!==n.dehydrated){var t=n.retryLane;n.retryLane=0!==t&&t<e?t:e}}function Gc(n,e){Wc(n,e),(n=n.alternate)&&Wc(n,e)}El=function(n,e,t){if(null!==n)if(n.memoizedProps!==e.pendingProps||_a.current)bs=!0;else{if(0===(n.lanes&t)&&!(128&e.flags))return bs=!1,function(n,e,t){switch(e.tag){case 3:_s(e),fi();break;case 5:Zi(e);break;case 1:Na(e.type)&&Da(e);break;case 4:Vi(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,a=e.memoizedProps.value;ka(Bi,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=e.memoizedState))return null!==r.dehydrated?(ka(Xi,1&Xi.current),e.flags|=128,null):0!==(t&e.child.childLanes)?Ls(n,e,t):(ka(Xi,1&Xi.current),null!==(n=qs(n,e,t))?n.sibling:null);ka(Xi,1&Xi.current);break;case 19:if(r=0!==(t&e.childLanes),128&n.flags){if(r)return $s(n,e,t);e.flags|=128}if(null!==(a=e.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(Xi,Xi.current),r)break;return null;case 22:case 23:return e.lanes=0,xs(n,e,t)}return qs(n,e,t)}(n,e,t);bs=!!(131072&n.flags)}else bs=!1,ai&&1048576&e.flags&&Xa(e,Ga,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;Ys(n,e),n=e.pendingProps;var a=za(e,Sa.current);_i(e,t),a=go(null,e,r,n,a,t);var o=mo();return e.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(e.tag=1,e.memoizedState=null,e.updateQueue=null,Na(r)?(o=!0,Da(e)):o=!1,e.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Di(e),a.updater=as,e.stateNode=a,a._reactInternals=e,ls(e,r,n,t),e=Ss(null,e,r,!0,o,t)):(e.tag=0,ai&&o&&ni(e),ys(null,e,a,t),e=e.child),e;case 16:r=e.elementType;n:{switch(Ys(n,e),n=e.pendingProps,r=(a=r._init)(r._payload),e.type=r,a=e.tag=function(n){if("function"==typeof n)return Nc(n)?1:0;if(null!=n){if((n=n.$$typeof)===S)return 11;if(n===z)return 14}return 2}(r),n=ts(r,n),a){case 0:e=ks(null,e,r,n,t);break n;case 1:e=js(null,e,r,n,t);break n;case 11:e=Cs(null,e,r,n,t);break n;case 14:e=Bs(null,e,r,ts(r.type,n),t);break n}throw Error(i(306,r,""))}return e;case 0:return r=e.type,a=e.pendingProps,ks(n,e,r,a=e.elementType===r?a:ts(r,a),t);case 1:return r=e.type,a=e.pendingProps,js(n,e,r,a=e.elementType===r?a:ts(r,a),t);case 3:n:{if(_s(e),null===n)throw Error(i(387));r=e.pendingProps,a=(o=e.memoizedState).element,Li(n,e),$i(e,r,null,t);var s=e.memoizedState;if(r=s.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},e.updateQueue.baseState=o,e.memoizedState=o,256&e.flags){e=Is(n,e,r,t,a=cs(Error(i(423)),e));break n}if(r!==a){e=Is(n,e,r,t,a=cs(Error(i(424)),e));break n}for(ri=ca(e.stateNode.containerInfo.firstChild),ti=e,ai=!0,ii=null,t=Ci(e,null,r,t),e.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(fi(),r===a){e=qs(n,e,t);break n}ys(n,e,r,t)}e=e.child}return e;case 5:return Zi(e),null===n&&ci(e),r=e.type,a=e.pendingProps,o=null!==n?n.memoizedProps:null,s=a.children,ta(r,a)?s=null:null!==o&&ta(r,o)&&(e.flags|=32),ws(n,e),ys(n,e,s,t),e.child;case 6:return null===n&&ci(e),null;case 13:return Ls(n,e,t);case 4:return Vi(e,e.stateNode.containerInfo),r=e.pendingProps,null===n?e.child=yi(e,null,r,t):ys(n,e,r,t),e.child;case 11:return r=e.type,a=e.pendingProps,Cs(n,e,r,a=e.elementType===r?a:ts(r,a),t);case 7:return ys(n,e,e.pendingProps,t),e.child;case 8:case 12:return ys(n,e,e.pendingProps.children,t),e.child;case 10:n:{if(r=e.type._context,a=e.pendingProps,o=e.memoizedProps,s=a.value,ka(Bi,r._currentValue),r._currentValue=s,null!==o)if(sr(o.value,s)){if(o.children===a.children&&!_a.current){e=qs(n,e,t);break n}}else for(null!==(o=e.child)&&(o.return=e);null!==o;){var l=o.dependencies;if(null!==l){s=o.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===o.tag){(c=Ri(-1,t&-t)).tag=2;var u=o.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}o.lanes|=t,null!==(c=o.alternate)&&(c.lanes|=t),Si(o.return,t,e),l.lanes|=t;break}c=c.next}}else if(10===o.tag)s=o.type===e.type?null:o.child;else if(18===o.tag){if(null===(s=o.return))throw Error(i(341));s.lanes|=t,null!==(l=s.alternate)&&(l.lanes|=t),Si(s,t,e),s=o.sibling}else s=o.child;if(null!==s)s.return=o;else for(s=o;null!==s;){if(s===e){s=null;break}if(null!==(o=s.sibling)){o.return=s.return,s=o;break}s=s.return}o=s}ys(n,e,a.children,t),e=e.child}return e;case 9:return a=e.type,r=e.pendingProps.children,_i(e,t),r=r(a=Ii(a)),e.flags|=1,ys(n,e,r,t),e.child;case 14:return a=ts(r=e.type,e.pendingProps),Bs(n,e,r,a=ts(r.type,a),t);case 15:return Es(n,e,e.type,e.pendingProps,t);case 17:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:ts(r,a),Ys(n,e),e.tag=1,Na(r)?(n=!0,Da(e)):n=!1,_i(e,t),os(e,r,a),ls(e,r,a,t),Ss(null,e,r,!0,n,t);case 19:return $s(n,e,t);case 22:return xs(n,e,t)}throw Error(i(156,e.tag))};var Hc="function"==typeof reportError?reportError:function(n){console.error(n)};function Kc(n){this._internalRoot=n}function Vc(n){this._internalRoot=n}function Qc(n){return!(!n||1!==n.nodeType&&9!==n.nodeType&&11!==n.nodeType)}function Zc(n){return!(!n||1!==n.nodeType&&9!==n.nodeType&&11!==n.nodeType&&(8!==n.nodeType||" react-mount-point-unstable "!==n.nodeValue))}function Jc(){}function Xc(n,e,t,r,a){var i=t._reactRootContainer;if(i){var o=i;if("function"==typeof a){var s=a;a=function(){var n=qc(o);s.call(n)}}Yc(e,o,n,a)}else o=function(n,e,t,r,a){if(a){if("function"==typeof r){var i=r;r=function(){var n=qc(o);i.call(n)}}var o=$c(e,r,n,0,null,!1,0,"",Jc);return n._reactRootContainer=o,n[pa]=o.current,$r(8===n.nodeType?n.parentNode:n),uc(),o}for(;a=n.lastChild;)n.removeChild(a);if("function"==typeof r){var s=r;r=function(){var n=qc(l);s.call(n)}}var l=Uc(n,0,!1,null,0,!1,0,"",Jc);return n._reactRootContainer=l,n[pa]=l.current,$r(8===n.nodeType?n.parentNode:n),uc(function(){Yc(e,l,t,r)}),l}(t,e,n,a,r);return qc(o)}Vc.prototype.render=Kc.prototype.render=function(n){var e=this._internalRoot;if(null===e)throw Error(i(409));Yc(n,e,null,null)},Vc.prototype.unmount=Kc.prototype.unmount=function(){var n=this._internalRoot;if(null!==n){this._internalRoot=null;var e=n.containerInfo;uc(function(){Yc(null,n,null,null)}),e[pa]=null}},Vc.prototype.unstable_scheduleHydration=function(n){if(n){var e=we();n={blockedOn:null,target:n,priority:e};for(var t=0;t<Oe.length&&0!==e&&e<Oe[t].priority;t++);Oe.splice(t,0,n),0===t&&Re(n)}},Be=function(n){switch(n.tag){case 3:var e=n.stateNode;if(e.current.memoizedState.isDehydrated){var t=Ae(e.pendingLanes);0!==t&&(be(e,1|t),rc(e,Jn()),!(6&Sl)&&($l=Jn()+500,$a()))}break;case 13:uc(function(){var e=Oi(n,1);if(null!==e){var t=nc();tc(e,n,1,t)}}),Gc(n,1)}},Ee=function(n){if(13===n.tag){var e=Oi(n,134217728);null!==e&&tc(e,n,134217728,nc()),Gc(n,134217728)}},xe=function(n){if(13===n.tag){var e=ec(n),t=Oi(n,e);null!==t&&tc(t,n,e,nc()),Gc(n,e)}},we=function(){return ye},ke=function(n,e){var t=ye;try{return ye=n,e()}finally{ye=t}},En=function(n,e,t){switch(e){case"input":if(J(n,t),e=t.name,"radio"===t.type&&null!=e){for(t=n;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<t.length;e++){var r=t[e];if(r!==n&&r.form===n.form){var a=Ca(r);if(!a)throw Error(i(90));H(r),J(r,a)}}}break;case"textarea":on(n,t);break;case"select":null!=(e=t.value)&&tn(n,!!t.multiple,e,!1)}},_n=cc,In=uc;var nu={usingClientEntryPoint:!1,Events:[ba,ya,Ca,jn,Sn,cc]},eu={findFiberByHostInstance:va,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tu={bundleType:eu.bundleType,version:eu.version,rendererPackageName:eu.rendererPackageName,rendererConfig:eu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(n){return null===(n=Gn(n))?null:n.stateNode},findFiberByHostInstance:eu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{ie=ru.inject(tu),oe=ru}catch(dn){}}e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu,e.createPortal=function(n,e){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(e))throw Error(i(200));return function(n,e,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:B,key:null==r?null:""+r,children:n,containerInfo:e,implementation:t}}(n,e,null,t)},e.createRoot=function(n,e){if(!Qc(n))throw Error(i(299));var t=!1,r="",a=Hc;return null!=e&&(!0===e.unstable_strictMode&&(t=!0),void 0!==e.identifierPrefix&&(r=e.identifierPrefix),void 0!==e.onRecoverableError&&(a=e.onRecoverableError)),e=Uc(n,1,!1,null,0,t,0,r,a),n[pa]=e.current,$r(8===n.nodeType?n.parentNode:n),new Kc(e)},e.findDOMNode=function(n){if(null==n)return null;if(1===n.nodeType)return n;var e=n._reactInternals;if(void 0===e){if("function"==typeof n.render)throw Error(i(188));throw n=Object.keys(n).join(","),Error(i(268,n))}return null===(n=Gn(e))?null:n.stateNode},e.flushSync=function(n){return uc(n)},e.hydrate=function(n,e,t){if(!Zc(e))throw Error(i(200));return Xc(null,n,e,!0,t)},e.hydrateRoot=function(n,e,t){if(!Qc(n))throw Error(i(405));var r=null!=t&&t.hydratedSources||null,a=!1,o="",s=Hc;if(null!=t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(o=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),e=$c(e,null,n,1,null!=t?t:null,a,0,o,s),n[pa]=e.current,$r(n),r)for(n=0;n<r.length;n++)a=(a=(t=r[n])._getVersion)(t._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[t,a]:e.mutableSourceEagerHydrationData.push(t,a);return new Vc(e)},e.render=function(n,e,t){if(!Zc(e))throw Error(i(200));return Xc(null,n,e,!1,t)},e.unmountComponentAtNode=function(n){if(!Zc(n))throw Error(i(40));return!!n._reactRootContainer&&(uc(function(){Xc(null,null,n,!1,function(){n._reactRootContainer=null,n[pa]=null})}),!0)},e.unstable_batchedUpdates=cc,e.unstable_renderSubtreeIntoContainer=function(n,e,t,r){if(!Zc(t))throw Error(i(200));if(null==n||void 0===n._reactInternals)throw Error(i(38));return Xc(n,e,t,!1,r)},e.version="18.3.1-next-f1338f8080-20240426"},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},660:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(907)),i=r(t(818));e.default=class{constructor(n){this.shouldThrowOnError=!1,this.method=n.method,this.url=n.url,this.headers=n.headers,this.schema=n.schema,this.body=n.body,this.shouldThrowOnError=n.shouldThrowOnError,this.signal=n.signal,this.isMaybeSingle=n.isMaybeSingle,n.fetch?this.fetch=n.fetch:"undefined"==typeof fetch?this.fetch=a.default:this.fetch=fetch}throwOnError(){return this.shouldThrowOnError=!0,this}setHeader(n,e){return this.headers=Object.assign({},this.headers),this.headers[n]=e,this}then(n,e){void 0===this.schema||(["GET","HEAD"].includes(this.method)?this.headers["Accept-Profile"]=this.schema:this.headers["Content-Profile"]=this.schema),"GET"!==this.method&&"HEAD"!==this.method&&(this.headers["Content-Type"]="application/json");let t=(0,this.fetch)(this.url.toString(),{method:this.method,headers:this.headers,body:JSON.stringify(this.body),signal:this.signal}).then(async n=>{var e,t,r;let a=null,o=null,s=null,l=n.status,c=n.statusText;if(n.ok){if("HEAD"!==this.method){const e=await n.text();""===e||(o="text/csv"===this.headers.Accept||this.headers.Accept&&this.headers.Accept.includes("application/vnd.pgrst.plan+text")?e:JSON.parse(e))}const r=null===(e=this.headers.Prefer)||void 0===e?void 0:e.match(/count=(exact|planned|estimated)/),i=null===(t=n.headers.get("content-range"))||void 0===t?void 0:t.split("/");r&&i&&i.length>1&&(s=parseInt(i[1])),this.isMaybeSingle&&"GET"===this.method&&Array.isArray(o)&&(o.length>1?(a={code:"PGRST116",details:`Results contain ${o.length} rows, application/vnd.pgrst.object+json requires 1 row`,hint:null,message:"JSON object requested, multiple (or no) rows returned"},o=null,s=null,l=406,c="Not Acceptable"):o=1===o.length?o[0]:null)}else{const e=await n.text();try{a=JSON.parse(e),Array.isArray(a)&&404===n.status&&(o=[],a=null,l=200,c="OK")}catch(t){404===n.status&&""===e?(l=204,c="No Content"):a={message:e}}if(a&&this.isMaybeSingle&&(null===(r=null==a?void 0:a.details)||void 0===r?void 0:r.includes("0 rows"))&&(a=null,l=200,c="OK"),a&&this.shouldThrowOnError)throw new i.default(a)}return{error:a,data:o,count:s,status:l,statusText:c}});return this.shouldThrowOnError||(t=t.catch(n=>{var e,t,r;return{error:{message:`${null!==(e=null==n?void 0:n.name)&&void 0!==e?e:"FetchError"}: ${null==n?void 0:n.message}`,details:`${null!==(t=null==n?void 0:n.stack)&&void 0!==t?t:""}`,hint:"",code:`${null!==(r=null==n?void 0:n.code)&&void 0!==r?r:""}`},data:null,count:null,status:0,statusText:""}})),t.then(n,e)}returns(){return this}overrideTypes(){return this}}},691:n=>{n.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2716%27 height=%2716%27 fill=%27none%27 viewBox=%270 0 24 24%27 stroke=%27%2394a3b8%27 stroke-width=%272%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3E%3Cpath d=%27m6 9 6 6 6-6%27/%3E%3C/svg%3E"},818:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends Error{constructor(n){super(n.message),this.name="PostgrestError",this.details=n.details,this.hint=n.hint,this.code=n.code}}e.default=t},825:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=r(t(261));class i extends a.default{eq(n,e){return this.url.searchParams.append(n,`eq.${e}`),this}neq(n,e){return this.url.searchParams.append(n,`neq.${e}`),this}gt(n,e){return this.url.searchParams.append(n,`gt.${e}`),this}gte(n,e){return this.url.searchParams.append(n,`gte.${e}`),this}lt(n,e){return this.url.searchParams.append(n,`lt.${e}`),this}lte(n,e){return this.url.searchParams.append(n,`lte.${e}`),this}like(n,e){return this.url.searchParams.append(n,`like.${e}`),this}likeAllOf(n,e){return this.url.searchParams.append(n,`like(all).{${e.join(",")}}`),this}likeAnyOf(n,e){return this.url.searchParams.append(n,`like(any).{${e.join(",")}}`),this}ilike(n,e){return this.url.searchParams.append(n,`ilike.${e}`),this}ilikeAllOf(n,e){return this.url.searchParams.append(n,`ilike(all).{${e.join(",")}}`),this}ilikeAnyOf(n,e){return this.url.searchParams.append(n,`ilike(any).{${e.join(",")}}`),this}is(n,e){return this.url.searchParams.append(n,`is.${e}`),this}in(n,e){const t=Array.from(new Set(e)).map(n=>"string"==typeof n&&new RegExp("[,()]").test(n)?`"${n}"`:`${n}`).join(",");return this.url.searchParams.append(n,`in.(${t})`),this}contains(n,e){return"string"==typeof e?this.url.searchParams.append(n,`cs.${e}`):Array.isArray(e)?this.url.searchParams.append(n,`cs.{${e.join(",")}}`):this.url.searchParams.append(n,`cs.${JSON.stringify(e)}`),this}containedBy(n,e){return"string"==typeof e?this.url.searchParams.append(n,`cd.${e}`):Array.isArray(e)?this.url.searchParams.append(n,`cd.{${e.join(",")}}`):this.url.searchParams.append(n,`cd.${JSON.stringify(e)}`),this}rangeGt(n,e){return this.url.searchParams.append(n,`sr.${e}`),this}rangeGte(n,e){return this.url.searchParams.append(n,`nxl.${e}`),this}rangeLt(n,e){return this.url.searchParams.append(n,`sl.${e}`),this}rangeLte(n,e){return this.url.searchParams.append(n,`nxr.${e}`),this}rangeAdjacent(n,e){return this.url.searchParams.append(n,`adj.${e}`),this}overlaps(n,e){return"string"==typeof e?this.url.searchParams.append(n,`ov.${e}`):this.url.searchParams.append(n,`ov.{${e.join(",")}}`),this}textSearch(n,e,{config:t,type:r}={}){let a="";"plain"===r?a="pl":"phrase"===r?a="ph":"websearch"===r&&(a="w");const i=void 0===t?"":`(${t})`;return this.url.searchParams.append(n,`${a}fts${i}.${e}`),this}match(n){return Object.entries(n).forEach(([n,e])=>{this.url.searchParams.append(n,`eq.${e}`)}),this}not(n,e,t){return this.url.searchParams.append(n,`not.${e}.${t}`),this}or(n,{foreignTable:e,referencedTable:t=e}={}){const r=t?`${t}.or`:"or";return this.url.searchParams.append(r,`(${n})`),this}filter(n,e,t){return this.url.searchParams.append(n,`${e}.${t}`),this}}e.default=i},848:(n,e,t)=>{n.exports=t(20)},907:(n,e,t)=>{t.r(e),t.d(e,{Headers:()=>o,Request:()=>s,Response:()=>l,default:()=>i,fetch:()=>a});var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("unable to locate global object")}();const a=r.fetch,i=r.fetch.bind(r),o=r.Headers,s=r.Request,l=r.Response},961:(n,e,t)=>{!function n(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(n){console.error(n)}}(),n.exports=t(551)},982:(n,e,t)=>{n.exports=t(463)}},r={};function a(n){var e=r[n];if(void 0!==e)return e.exports;var i=r[n]={id:n,exports:{}};return t[n].call(i.exports,i,i.exports,a),i.exports}a.m=t,a.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return a.d(e,{a:e}),e},a.d=(n,e)=>{for(var t in e)a.o(e,t)&&!a.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},a.f={},a.e=n=>Promise.all(Object.keys(a.f).reduce((e,t)=>(a.f[t](n,e),e),[])),a.u=n=>n+".js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),a.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),n={},e="nest-chrome-extension:",a.l=(t,r,i,o)=>{if(n[t])n[t].push(r);else{var s,l;if(void 0!==i)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==t||d.getAttribute("data-webpack")==e+i){s=d;break}}s||(l=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",e+i),s.src=t),n[t]=[r];var A=(e,r)=>{s.onerror=s.onload=null,clearTimeout(f);var a=n[t];if(delete n[t],s.parentNode&&s.parentNode.removeChild(s),a&&a.forEach(n=>n(r)),e)return e(r)},f=setTimeout(A.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=A.bind(null,s.onerror),s.onload=A.bind(null,s.onload),l&&document.head.appendChild(s)}},a.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;a.g.importScripts&&(n=a.g.location+"");var e=a.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=n})(),(()=>{a.b=document.baseURI||self.location.href;var n={508:0,796:0};a.f.j=(e,t)=>{var r=a.o(n,e)?n[e]:void 0;if(0!==r)if(r)t.push(r[2]);else{var i=new Promise((t,a)=>r=n[e]=[t,a]);t.push(r[2]=i);var o=a.p+a.u(e),s=new Error;a.l(o,t=>{if(a.o(n,e)&&(0!==(r=n[e])&&(n[e]=void 0),r)){var i=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;s.message="Loading chunk "+e+" failed.\n("+i+": "+o+")",s.name="ChunkLoadError",s.type=i,s.request=o,r[1](s)}},"chunk-"+e,e)}};var e=(e,t)=>{var r,i,[o,s,l]=t,c=0;if(o.some(e=>0!==n[e])){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);l&&l(a)}for(e&&e(t);c<o.length;c++)i=o[c],a.o(n,i)&&n[i]&&n[i][0](),n[i]=0},t=self.webpackChunknest_chrome_extension=self.webpackChunknest_chrome_extension||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})(),a.nc=void 0;var i=a(540),o=a(338),s={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const l=(n,e)=>{const t=(0,i.forwardRef)(({color:t="currentColor",size:r=24,strokeWidth:a=2,absoluteStrokeWidth:o,className:l="",children:c,...u},d)=>{return(0,i.createElement)("svg",{ref:d,...s,width:r,height:r,stroke:t,strokeWidth:o?24*Number(a)/Number(r):a,className:["lucide",`lucide-${A=n,A.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase().trim()}`,l].join(" "),...u},[...e.map(([n,e])=>(0,i.createElement)(n,e)),...Array.isArray(c)?c:[c]]);var A});return t.displayName=`${n}`,t},c=l("Bookmark",[["path",{d:"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z",key:"1fy3hk"}]]),u=l("Camera",[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]]),d=l("StickyNote",[["path",{d:"M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z",key:"1wis1t"}],["path",{d:"M15 3v6h6",key:"edgan2"}]]),A=l("MessageCircle",[["path",{d:"m3 21 1.9-5.7a8.5 8.5 0 1 1 3.8 3.8z",key:"v2veuj"}]]),f=l("TabletSmartphone",[["rect",{width:"10",height:"14",x:"3",y:"8",rx:"2",key:"1vrsiq"}],["path",{d:"M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4",key:"1j4zmg"}],["path",{d:"M8 18h.01",key:"lrp35t"}]]),p=l("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]),h=l("BarChart3",[["path",{d:"M3 3v18h18",key:"1s2lah"}],["path",{d:"M18 17V9",key:"2bz60n"}],["path",{d:"M13 17V5",key:"1frdt8"}],["path",{d:"M8 17v-3",key:"17ska0"}]]),g=l("Brain",[["path",{d:"M9.5 2A2.5 2.5 0 0 1 12 4.5v15a2.5 2.5 0 0 1-4.96.44 2.5 2.5 0 0 1-2.96-3.08 3 3 0 0 1-.34-5.58 2.5 2.5 0 0 1 1.32-4.24 2.5 2.5 0 0 1 1.98-3A2.5 2.5 0 0 1 9.5 2Z",key:"1mhkh5"}],["path",{d:"M14.5 2A2.5 2.5 0 0 0 12 4.5v15a2.5 2.5 0 0 0 4.96.44 2.5 2.5 0 0 0 2.96-3.08 3 3 0 0 0 .34-5.58 2.5 2.5 0 0 0-1.32-4.24 2.5 2.5 0 0 0-1.98-3A2.5 2.5 0 0 0 14.5 2Z",key:"1d6s00"}]]),m=l("LogOut",[["path",{d:"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4",key:"1uf3rs"}],["polyline",{points:"16 17 21 12 16 7",key:"1gabdz"}],["line",{x1:"21",x2:"9",y1:"12",y2:"12",key:"1uyos4"}]]),v=l("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]),b=l("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]),y=l("Command",[["path",{d:"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3",key:"11bfej"}]]),C=l("Tag",[["path",{d:"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z",key:"14b2ls"}],["path",{d:"M7 7h.01",key:"7u93v4"}]]),B=l("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]]),E=l("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]]),x=l("Inbox",[["polyline",{points:"22 12 16 12 14 15 10 15 8 12 2 12",key:"o97t9d"}],["path",{d:"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",key:"oot6mr"}]]),w=l("CheckSquare",[["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}],["path",{d:"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11",key:"1jnkn4"}]]),k=l("Archive",[["rect",{width:"20",height:"5",x:"2",y:"3",rx:"1",key:"1wp1u1"}],["path",{d:"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8",key:"1s80jp"}],["path",{d:"M10 12h4",key:"a56b0p"}]]),j=l("Sparkles",[["path",{d:"m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z",key:"17u4zn"}],["path",{d:"M5 3v4",key:"bklmnn"}],["path",{d:"M19 17v4",key:"iiml17"}],["path",{d:"M3 5h4",key:"nem4j1"}],["path",{d:"M17 19h4",key:"lbex7p"}]]),S=l("FolderPlus",[["path",{d:"M12 10v6",key:"1bos4e"}],["path",{d:"M9 13h6",key:"1uhe8q"}],["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),_=l("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);class I extends Error{constructor(n,e="FunctionsError",t){super(n),this.name=e,this.context=t}}class z extends I{constructor(n){super("Failed to send a request to the Edge Function","FunctionsFetchError",n)}}class N extends I{constructor(n){super("Relay Error invoking the Edge Function","FunctionsRelayError",n)}}class T extends I{constructor(n){super("Edge Function returned a non-2xx status code","FunctionsHttpError",n)}}var O;!function(n){n.Any="any",n.ApNortheast1="ap-northeast-1",n.ApNortheast2="ap-northeast-2",n.ApSouth1="ap-south-1",n.ApSoutheast1="ap-southeast-1",n.ApSoutheast2="ap-southeast-2",n.CaCentral1="ca-central-1",n.EuCentral1="eu-central-1",n.EuWest1="eu-west-1",n.EuWest2="eu-west-2",n.EuWest3="eu-west-3",n.SaEast1="sa-east-1",n.UsEast1="us-east-1",n.UsWest1="us-west-1",n.UsWest2="us-west-2"}(O||(O={}));class P{constructor(n,{headers:e={},customFetch:t,region:r=O.Any}={}){this.url=n,this.headers=e,this.region=r,this.fetch=(n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)})(t)}setAuth(n){this.headers.Authorization=`Bearer ${n}`}invoke(n,e={}){var t,r,a,i,o;return r=this,a=void 0,o=function*(){try{const{headers:r,method:a,body:i}=e;let o={},{region:s}=e;s||(s=this.region);const l=new URL(`${this.url}/${n}`);let c;s&&"any"!==s&&(o["x-region"]=s,l.searchParams.set("forceFunctionRegion",s)),i&&(r&&!Object.prototype.hasOwnProperty.call(r,"Content-Type")||!r)&&("undefined"!=typeof Blob&&i instanceof Blob||i instanceof ArrayBuffer?(o["Content-Type"]="application/octet-stream",c=i):"string"==typeof i?(o["Content-Type"]="text/plain",c=i):"undefined"!=typeof FormData&&i instanceof FormData?c=i:(o["Content-Type"]="application/json",c=JSON.stringify(i)));const u=yield this.fetch(l.toString(),{method:a||"POST",headers:Object.assign(Object.assign(Object.assign({},o),this.headers),r),body:c}).catch(n=>{throw new z(n)}),d=u.headers.get("x-relay-error");if(d&&"true"===d)throw new N(u);if(!u.ok)throw new T(u);let A,f=(null!==(t=u.headers.get("Content-Type"))&&void 0!==t?t:"text/plain").split(";")[0].trim();return A="application/json"===f?yield u.json():"application/octet-stream"===f?yield u.blob():"text/event-stream"===f?u:"multipart/form-data"===f?yield u.formData():yield u.text(),{data:A,error:null,response:u}}catch(n){return{data:null,error:n,response:n instanceof T||n instanceof N?n.context:void 0}}},new((i=void 0)||(i=Promise))(function(n,e){function t(n){try{l(o.next(n))}catch(n){e(n)}}function s(n){try{l(o.throw(n))}catch(n){e(n)}}function l(e){var r;e.done?n(e.value):(r=e.value,r instanceof i?r:new i(function(n){n(r)})).then(t,s)}l((o=o.apply(r,a||[])).next())})}}var D=a(279);const{PostgrestClient:L,PostgrestQueryBuilder:R,PostgrestFilterBuilder:M,PostgrestTransformBuilder:U,PostgrestBuilder:F,PostgrestError:$}=D,Y=function(){if("undefined"!=typeof WebSocket)return WebSocket;if(void 0!==global.WebSocket)return global.WebSocket;if(void 0!==window.WebSocket)return window.WebSocket;if(void 0!==self.WebSocket)return self.WebSocket;throw new Error("`WebSocket` is not supported in this environment")}();var q,W,G,H,K,V,Q;!function(n){n[n.connecting=0]="connecting",n[n.open=1]="open",n[n.closing=2]="closing",n[n.closed=3]="closed"}(q||(q={})),(Q=W||(W={})).closed="closed",Q.errored="errored",Q.joined="joined",Q.joining="joining",Q.leaving="leaving",function(n){n.close="phx_close",n.error="phx_error",n.join="phx_join",n.reply="phx_reply",n.leave="phx_leave",n.access_token="access_token"}(G||(G={})),function(n){n.websocket="websocket"}(H||(H={})),function(n){n.Connecting="connecting",n.Open="open",n.Closing="closing",n.Closed="closed"}(K||(K={}));class Z{constructor(){this.HEADER_LENGTH=1}decode(n,e){return n.constructor===ArrayBuffer?e(this._binaryDecode(n)):e("string"==typeof n?JSON.parse(n):{})}_binaryDecode(n){const e=new DataView(n),t=new TextDecoder;return this._decodeBroadcast(n,e,t)}_decodeBroadcast(n,e,t){const r=e.getUint8(1),a=e.getUint8(2);let i=this.HEADER_LENGTH+2;const o=t.decode(n.slice(i,i+r));i+=r;const s=t.decode(n.slice(i,i+a));return i+=a,{ref:null,topic:o,event:s,payload:JSON.parse(t.decode(n.slice(i,n.byteLength)))}}}class J{constructor(n,e){this.callback=n,this.timerCalc=e,this.timer=void 0,this.tries=0,this.callback=n,this.timerCalc=e}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}}!function(n){n.abstime="abstime",n.bool="bool",n.date="date",n.daterange="daterange",n.float4="float4",n.float8="float8",n.int2="int2",n.int4="int4",n.int4range="int4range",n.int8="int8",n.int8range="int8range",n.json="json",n.jsonb="jsonb",n.money="money",n.numeric="numeric",n.oid="oid",n.reltime="reltime",n.text="text",n.time="time",n.timestamp="timestamp",n.timestamptz="timestamptz",n.timetz="timetz",n.tsrange="tsrange",n.tstzrange="tstzrange"}(V||(V={}));const X=(n,e,t={})=>{var r;const a=null!==(r=t.skipTypes)&&void 0!==r?r:[];return Object.keys(e).reduce((t,r)=>(t[r]=nn(r,n,e,a),t),{})},nn=(n,e,t,r)=>{const a=e.find(e=>e.name===n),i=null==a?void 0:a.type,o=t[n];return i&&!r.includes(i)?en(i,o):tn(o)},en=(n,e)=>{if("_"===n.charAt(0)){const t=n.slice(1,n.length);return sn(e,t)}switch(n){case V.bool:return rn(e);case V.float4:case V.float8:case V.int2:case V.int4:case V.int8:case V.numeric:case V.oid:return an(e);case V.json:case V.jsonb:return on(e);case V.timestamp:return ln(e);case V.abstime:case V.date:case V.daterange:case V.int4range:case V.int8range:case V.money:case V.reltime:case V.text:case V.time:case V.timestamptz:case V.timetz:case V.tsrange:case V.tstzrange:default:return tn(e)}},tn=n=>n,rn=n=>{switch(n){case"t":return!0;case"f":return!1;default:return n}},an=n=>{if("string"==typeof n){const e=parseFloat(n);if(!Number.isNaN(e))return e}return n},on=n=>{if("string"==typeof n)try{return JSON.parse(n)}catch(e){return console.log(`JSON parse error: ${e}`),n}return n},sn=(n,e)=>{if("string"!=typeof n)return n;const t=n.length-1,r=n[t];if("{"===n[0]&&"}"===r){let r;const a=n.slice(1,t);try{r=JSON.parse("["+a+"]")}catch(n){r=a?a.split(","):[]}return r.map(n=>en(e,n))}return n},ln=n=>"string"==typeof n?n.replace(" ","T"):n,cn=n=>{let e=n;return e=e.replace(/^ws/i,"http"),e=e.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i,""),e.replace(/\/+$/,"")};class un{constructor(n,e,t={},r=1e4){this.channel=n,this.event=e,this.payload=t,this.timeout=r,this.sent=!1,this.timeoutTimer=void 0,this.ref="",this.receivedResp=null,this.recHooks=[],this.refEvent=null}resend(n){this.timeout=n,this._cancelRefEvent(),this.ref="",this.refEvent=null,this.receivedResp=null,this.sent=!1,this.send()}send(){this._hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload,ref:this.ref,join_ref:this.channel._joinRef()}))}updatePayload(n){this.payload=Object.assign(Object.assign({},this.payload),n)}receive(n,e){var t;return this._hasReceived(n)&&e(null===(t=this.receivedResp)||void 0===t?void 0:t.response),this.recHooks.push({status:n,callback:e}),this}startTimeout(){this.timeoutTimer||(this.ref=this.channel.socket._makeRef(),this.refEvent=this.channel._replyEventName(this.ref),this.channel._on(this.refEvent,{},n=>{this._cancelRefEvent(),this._cancelTimeout(),this.receivedResp=n,this._matchReceive(n)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout))}trigger(n,e){this.refEvent&&this.channel._trigger(this.refEvent,{status:n,response:e})}destroy(){this._cancelRefEvent(),this._cancelTimeout()}_cancelRefEvent(){this.refEvent&&this.channel._off(this.refEvent,{})}_cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=void 0}_matchReceive({status:n,response:e}){this.recHooks.filter(e=>e.status===n).forEach(n=>n.callback(e))}_hasReceived(n){return this.receivedResp&&this.receivedResp.status===n}}var dn,An,fn,pn;!function(n){n.SYNC="sync",n.JOIN="join",n.LEAVE="leave"}(dn||(dn={}));class hn{constructor(n,e){this.channel=n,this.state={},this.pendingDiffs=[],this.joinRef=null,this.caller={onJoin:()=>{},onLeave:()=>{},onSync:()=>{}};const t=(null==e?void 0:e.events)||{state:"presence_state",diff:"presence_diff"};this.channel._on(t.state,{},n=>{const{onJoin:e,onLeave:t,onSync:r}=this.caller;this.joinRef=this.channel._joinRef(),this.state=hn.syncState(this.state,n,e,t),this.pendingDiffs.forEach(n=>{this.state=hn.syncDiff(this.state,n,e,t)}),this.pendingDiffs=[],r()}),this.channel._on(t.diff,{},n=>{const{onJoin:e,onLeave:t,onSync:r}=this.caller;this.inPendingSyncState()?this.pendingDiffs.push(n):(this.state=hn.syncDiff(this.state,n,e,t),r())}),this.onJoin((n,e,t)=>{this.channel._trigger("presence",{event:"join",key:n,currentPresences:e,newPresences:t})}),this.onLeave((n,e,t)=>{this.channel._trigger("presence",{event:"leave",key:n,currentPresences:e,leftPresences:t})}),this.onSync(()=>{this.channel._trigger("presence",{event:"sync"})})}static syncState(n,e,t,r){const a=this.cloneDeep(n),i=this.transformState(e),o={},s={};return this.map(a,(n,e)=>{i[n]||(s[n]=e)}),this.map(i,(n,e)=>{const t=a[n];if(t){const r=e.map(n=>n.presence_ref),a=t.map(n=>n.presence_ref),i=e.filter(n=>a.indexOf(n.presence_ref)<0),l=t.filter(n=>r.indexOf(n.presence_ref)<0);i.length>0&&(o[n]=i),l.length>0&&(s[n]=l)}else o[n]=e}),this.syncDiff(a,{joins:o,leaves:s},t,r)}static syncDiff(n,e,t,r){const{joins:a,leaves:i}={joins:this.transformState(e.joins),leaves:this.transformState(e.leaves)};return t||(t=()=>{}),r||(r=()=>{}),this.map(a,(e,r)=>{var a;const i=null!==(a=n[e])&&void 0!==a?a:[];if(n[e]=this.cloneDeep(r),i.length>0){const t=n[e].map(n=>n.presence_ref),r=i.filter(n=>t.indexOf(n.presence_ref)<0);n[e].unshift(...r)}t(e,i,r)}),this.map(i,(e,t)=>{let a=n[e];if(!a)return;const i=t.map(n=>n.presence_ref);a=a.filter(n=>i.indexOf(n.presence_ref)<0),n[e]=a,r(e,a,t),0===a.length&&delete n[e]}),n}static map(n,e){return Object.getOwnPropertyNames(n).map(t=>e(t,n[t]))}static transformState(n){return n=this.cloneDeep(n),Object.getOwnPropertyNames(n).reduce((e,t)=>{const r=n[t];return e[t]="metas"in r?r.metas.map(n=>(n.presence_ref=n.phx_ref,delete n.phx_ref,delete n.phx_ref_prev,n)):r,e},{})}static cloneDeep(n){return JSON.parse(JSON.stringify(n))}onJoin(n){this.caller.onJoin=n}onLeave(n){this.caller.onLeave=n}onSync(n){this.caller.onSync=n}inPendingSyncState(){return!this.joinRef||this.joinRef!==this.channel._joinRef()}}!function(n){n.ALL="*",n.INSERT="INSERT",n.UPDATE="UPDATE",n.DELETE="DELETE"}(An||(An={})),function(n){n.BROADCAST="broadcast",n.PRESENCE="presence",n.POSTGRES_CHANGES="postgres_changes",n.SYSTEM="system"}(fn||(fn={})),function(n){n.SUBSCRIBED="SUBSCRIBED",n.TIMED_OUT="TIMED_OUT",n.CLOSED="CLOSED",n.CHANNEL_ERROR="CHANNEL_ERROR"}(pn||(pn={}));class gn{constructor(n,e={config:{}},t){this.topic=n,this.params=e,this.socket=t,this.bindings={},this.state=W.closed,this.joinedOnce=!1,this.pushBuffer=[],this.subTopic=n.replace(/^realtime:/i,""),this.params.config=Object.assign({broadcast:{ack:!1,self:!1},presence:{key:""},private:!1},e.config),this.timeout=this.socket.timeout,this.joinPush=new un(this,G.join,this.params,this.timeout),this.rejoinTimer=new J(()=>this._rejoinUntilConnected(),this.socket.reconnectAfterMs),this.joinPush.receive("ok",()=>{this.state=W.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(n=>n.send()),this.pushBuffer=[]}),this._onClose(()=>{this.rejoinTimer.reset(),this.socket.log("channel",`close ${this.topic} ${this._joinRef()}`),this.state=W.closed,this.socket._remove(this)}),this._onError(n=>{this._isLeaving()||this._isClosed()||(this.socket.log("channel",`error ${this.topic}`,n),this.state=W.errored,this.rejoinTimer.scheduleTimeout())}),this.joinPush.receive("timeout",()=>{this._isJoining()&&(this.socket.log("channel",`timeout ${this.topic}`,this.joinPush.timeout),this.state=W.errored,this.rejoinTimer.scheduleTimeout())}),this._on(G.reply,{},(n,e)=>{this._trigger(this._replyEventName(e),n)}),this.presence=new hn(this),this.broadcastEndpointURL=cn(this.socket.endPoint)+"/api/broadcast",this.private=this.params.config.private||!1}subscribe(n,e=this.timeout){var t,r;if(this.socket.isConnected()||this.socket.connect(),this.state==W.closed){const{config:{broadcast:a,presence:i,private:o}}=this.params;this._onError(e=>null==n?void 0:n(pn.CHANNEL_ERROR,e)),this._onClose(()=>null==n?void 0:n(pn.CLOSED));const s={},l={broadcast:a,presence:i,postgres_changes:null!==(r=null===(t=this.bindings.postgres_changes)||void 0===t?void 0:t.map(n=>n.filter))&&void 0!==r?r:[],private:o};this.socket.accessTokenValue&&(s.access_token=this.socket.accessTokenValue),this.updateJoinPayload(Object.assign({config:l},s)),this.joinedOnce=!0,this._rejoin(e),this.joinPush.receive("ok",async({postgres_changes:e})=>{var t;if(this.socket.setAuth(),void 0!==e){const r=this.bindings.postgres_changes,a=null!==(t=null==r?void 0:r.length)&&void 0!==t?t:0,i=[];for(let t=0;t<a;t++){const a=r[t],{filter:{event:o,schema:s,table:l,filter:c}}=a,u=e&&e[t];if(!u||u.event!==o||u.schema!==s||u.table!==l||u.filter!==c)return this.unsubscribe(),this.state=W.errored,void(null==n||n(pn.CHANNEL_ERROR,new Error("mismatch between server and client bindings for postgres changes")));i.push(Object.assign(Object.assign({},a),{id:u.id}))}return this.bindings.postgres_changes=i,void(n&&n(pn.SUBSCRIBED))}null==n||n(pn.SUBSCRIBED)}).receive("error",e=>{this.state=W.errored,null==n||n(pn.CHANNEL_ERROR,new Error(JSON.stringify(Object.values(e).join(", ")||"error")))}).receive("timeout",()=>{null==n||n(pn.TIMED_OUT)})}return this}presenceState(){return this.presence.state}async track(n,e={}){return await this.send({type:"presence",event:"track",payload:n},e.timeout||this.timeout)}async untrack(n={}){return await this.send({type:"presence",event:"untrack"},n)}on(n,e,t){return this._on(n,e,t)}async send(n,e={}){var t,r;if(this._canPush()||"broadcast"!==n.type)return new Promise(t=>{var r,a,i;const o=this._push(n.type,n,e.timeout||this.timeout);"broadcast"!==n.type||(null===(i=null===(a=null===(r=this.params)||void 0===r?void 0:r.config)||void 0===a?void 0:a.broadcast)||void 0===i?void 0:i.ack)||t("ok"),o.receive("ok",()=>t("ok")),o.receive("error",()=>t("error")),o.receive("timeout",()=>t("timed out"))});{const{event:a,payload:i}=n,o={method:"POST",headers:{Authorization:this.socket.accessTokenValue?`Bearer ${this.socket.accessTokenValue}`:"",apikey:this.socket.apiKey?this.socket.apiKey:"","Content-Type":"application/json"},body:JSON.stringify({messages:[{topic:this.subTopic,event:a,payload:i,private:this.private}]})};try{const n=await this._fetchWithTimeout(this.broadcastEndpointURL,o,null!==(t=e.timeout)&&void 0!==t?t:this.timeout);return await(null===(r=n.body)||void 0===r?void 0:r.cancel()),n.ok?"ok":"error"}catch(n){return"AbortError"===n.name?"timed out":"error"}}}updateJoinPayload(n){this.joinPush.updatePayload(n)}unsubscribe(n=this.timeout){this.state=W.leaving;const e=()=>{this.socket.log("channel",`leave ${this.topic}`),this._trigger(G.close,"leave",this._joinRef())};this.joinPush.destroy();let t=null;return new Promise(r=>{t=new un(this,G.leave,{},n),t.receive("ok",()=>{e(),r("ok")}).receive("timeout",()=>{e(),r("timed out")}).receive("error",()=>{r("error")}),t.send(),this._canPush()||t.trigger("ok",{})}).finally(()=>{null==t||t.destroy()})}teardown(){this.pushBuffer.forEach(n=>n.destroy()),this.rejoinTimer&&clearTimeout(this.rejoinTimer.timer),this.joinPush.destroy()}async _fetchWithTimeout(n,e,t){const r=new AbortController,a=setTimeout(()=>r.abort(),t),i=await this.socket.fetch(n,Object.assign(Object.assign({},e),{signal:r.signal}));return clearTimeout(a),i}_push(n,e,t=this.timeout){if(!this.joinedOnce)throw`tried to push '${n}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;let r=new un(this,n,e,t);return this._canPush()?r.send():(r.startTimeout(),this.pushBuffer.push(r)),r}_onMessage(n,e,t){return e}_isMember(n){return this.topic===n}_joinRef(){return this.joinPush.ref}_trigger(n,e,t){var r,a;const i=n.toLocaleLowerCase(),{close:o,error:s,leave:l,join:c}=G;if(t&&[o,s,l,c].indexOf(i)>=0&&t!==this._joinRef())return;let u=this._onMessage(i,e,t);if(e&&!u)throw"channel onMessage callbacks must return the payload, modified or unmodified";["insert","update","delete"].includes(i)?null===(r=this.bindings.postgres_changes)||void 0===r||r.filter(n=>{var e,t,r;return"*"===(null===(e=n.filter)||void 0===e?void 0:e.event)||(null===(r=null===(t=n.filter)||void 0===t?void 0:t.event)||void 0===r?void 0:r.toLocaleLowerCase())===i}).map(n=>n.callback(u,t)):null===(a=this.bindings[i])||void 0===a||a.filter(n=>{var t,r,a,o,s,l;if(["broadcast","presence","postgres_changes"].includes(i)){if("id"in n){const i=n.id,o=null===(t=n.filter)||void 0===t?void 0:t.event;return i&&(null===(r=e.ids)||void 0===r?void 0:r.includes(i))&&("*"===o||(null==o?void 0:o.toLocaleLowerCase())===(null===(a=e.data)||void 0===a?void 0:a.type.toLocaleLowerCase()))}{const t=null===(s=null===(o=null==n?void 0:n.filter)||void 0===o?void 0:o.event)||void 0===s?void 0:s.toLocaleLowerCase();return"*"===t||t===(null===(l=null==e?void 0:e.event)||void 0===l?void 0:l.toLocaleLowerCase())}}return n.type.toLocaleLowerCase()===i}).map(n=>{if("object"==typeof u&&"ids"in u){const n=u.data,{schema:e,table:t,commit_timestamp:r,type:a,errors:i}=n,o={schema:e,table:t,commit_timestamp:r,eventType:a,new:{},old:{},errors:i};u=Object.assign(Object.assign({},o),this._getPayloadRecords(n))}n.callback(u,t)})}_isClosed(){return this.state===W.closed}_isJoined(){return this.state===W.joined}_isJoining(){return this.state===W.joining}_isLeaving(){return this.state===W.leaving}_replyEventName(n){return`chan_reply_${n}`}_on(n,e,t){const r=n.toLocaleLowerCase(),a={type:r,filter:e,callback:t};return this.bindings[r]?this.bindings[r].push(a):this.bindings[r]=[a],this}_off(n,e){const t=n.toLocaleLowerCase();return this.bindings[t]=this.bindings[t].filter(n=>{var r;return!((null===(r=n.type)||void 0===r?void 0:r.toLocaleLowerCase())===t&&gn.isEqual(n.filter,e))}),this}static isEqual(n,e){if(Object.keys(n).length!==Object.keys(e).length)return!1;for(const t in n)if(n[t]!==e[t])return!1;return!0}_rejoinUntilConnected(){this.rejoinTimer.scheduleTimeout(),this.socket.isConnected()&&this._rejoin()}_onClose(n){this._on(G.close,{},n)}_onError(n){this._on(G.error,{},e=>n(e))}_canPush(){return this.socket.isConnected()&&this._isJoined()}_rejoin(n=this.timeout){this._isLeaving()||(this.socket._leaveOpenTopic(this.topic),this.state=W.joining,this.joinPush.resend(n))}_getPayloadRecords(n){const e={new:{},old:{}};return"INSERT"!==n.type&&"UPDATE"!==n.type||(e.new=X(n.columns,n.record)),"UPDATE"!==n.type&&"DELETE"!==n.type||(e.old=X(n.columns,n.old_record)),e}}const mn=()=>{};class vn{constructor(n,e){var t;this.accessTokenValue=null,this.apiKey=null,this.channels=new Array,this.endPoint="",this.httpEndpoint="",this.headers={},this.params={},this.timeout=1e4,this.heartbeatIntervalMs=25e3,this.heartbeatTimer=void 0,this.pendingHeartbeatRef=null,this.heartbeatCallback=mn,this.ref=0,this.logger=mn,this.conn=null,this.sendBuffer=[],this.serializer=new Z,this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.accessToken=null,this._resolveFetch=n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)},this.endPoint=`${n}/${H.websocket}`,this.httpEndpoint=cn(n),(null==e?void 0:e.transport)?this.transport=e.transport:this.transport=null,(null==e?void 0:e.params)&&(this.params=e.params),(null==e?void 0:e.timeout)&&(this.timeout=e.timeout),(null==e?void 0:e.logger)&&(this.logger=e.logger),((null==e?void 0:e.logLevel)||(null==e?void 0:e.log_level))&&(this.logLevel=e.logLevel||e.log_level,this.params=Object.assign(Object.assign({},this.params),{log_level:this.logLevel})),(null==e?void 0:e.heartbeatIntervalMs)&&(this.heartbeatIntervalMs=e.heartbeatIntervalMs);const r=null===(t=null==e?void 0:e.params)||void 0===t?void 0:t.apikey;if(r&&(this.accessTokenValue=r,this.apiKey=r),this.reconnectAfterMs=(null==e?void 0:e.reconnectAfterMs)?e.reconnectAfterMs:n=>[1e3,2e3,5e3,1e4][n-1]||1e4,this.encode=(null==e?void 0:e.encode)?e.encode:(n,e)=>e(JSON.stringify(n)),this.decode=(null==e?void 0:e.decode)?e.decode:this.serializer.decode.bind(this.serializer),this.reconnectTimer=new J(async()=>{this.disconnect(),this.connect()},this.reconnectAfterMs),this.fetch=this._resolveFetch(null==e?void 0:e.fetch),null==e?void 0:e.worker){if("undefined"!=typeof window&&!window.Worker)throw new Error("Web Worker is not supported");this.worker=(null==e?void 0:e.worker)||!1,this.workerUrl=null==e?void 0:e.workerUrl}this.accessToken=(null==e?void 0:e.accessToken)||null}connect(){if(!this.conn){if(this.transport||(this.transport=Y),!this.transport)throw new Error("No transport provided");this.conn=new this.transport(this.endpointURL()),this.setupConnection()}}endpointURL(){return this._appendParams(this.endPoint,Object.assign({},this.params,{vsn:"1.0.0"}))}disconnect(n,e){this.conn&&(this.conn.onclose=function(){},n?this.conn.close(n,null!=e?e:""):this.conn.close(),this.conn=null,this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.reset(),this.channels.forEach(n=>n.teardown()))}getChannels(){return this.channels}async removeChannel(n){const e=await n.unsubscribe();return 0===this.channels.length&&this.disconnect(),e}async removeAllChannels(){const n=await Promise.all(this.channels.map(n=>n.unsubscribe()));return this.channels=[],this.disconnect(),n}log(n,e,t){this.logger(n,e,t)}connectionState(){switch(this.conn&&this.conn.readyState){case q.connecting:return K.Connecting;case q.open:return K.Open;case q.closing:return K.Closing;default:return K.Closed}}isConnected(){return this.connectionState()===K.Open}channel(n,e={config:{}}){const t=`realtime:${n}`,r=this.getChannels().find(n=>n.topic===t);if(r)return r;{const t=new gn(`realtime:${n}`,e,this);return this.channels.push(t),t}}push(n){const{topic:e,event:t,payload:r,ref:a}=n,i=()=>{this.encode(n,n=>{var e;null===(e=this.conn)||void 0===e||e.send(n)})};this.log("push",`${e} ${t} (${a})`,r),this.isConnected()?i():this.sendBuffer.push(i)}async setAuth(n=null){let e=n||this.accessToken&&await this.accessToken()||this.accessTokenValue;this.accessTokenValue!=e&&(this.accessTokenValue=e,this.channels.forEach(n=>{const t={access_token:e,version:"realtime-js/2.11.15"};e&&n.updateJoinPayload(t),n.joinedOnce&&n._isJoined()&&n._push(G.access_token,{access_token:e})}))}async sendHeartbeat(){var n;if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.log("transport","heartbeat timeout. Attempting to re-establish connection"),this.heartbeatCallback("timeout"),void(null===(n=this.conn)||void 0===n||n.close(1e3,"hearbeat timeout"));this.pendingHeartbeatRef=this._makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef}),this.heartbeatCallback("sent"),await this.setAuth()}else this.heartbeatCallback("disconnected")}onHeartbeat(n){this.heartbeatCallback=n}flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(n=>n()),this.sendBuffer=[])}_makeRef(){let n=this.ref+1;return n===this.ref?this.ref=0:this.ref=n,this.ref.toString()}_leaveOpenTopic(n){let e=this.channels.find(e=>e.topic===n&&(e._isJoined()||e._isJoining()));e&&(this.log("transport",`leaving duplicate topic "${n}"`),e.unsubscribe())}_remove(n){this.channels=this.channels.filter(e=>e.topic!==n.topic)}setupConnection(){this.conn&&(this.conn.binaryType="arraybuffer",this.conn.onopen=()=>this._onConnOpen(),this.conn.onerror=n=>this._onConnError(n),this.conn.onmessage=n=>this._onConnMessage(n),this.conn.onclose=n=>this._onConnClose(n))}_onConnMessage(n){this.decode(n.data,n=>{let{topic:e,event:t,payload:r,ref:a}=n;"phoenix"===e&&"phx_reply"===t&&this.heartbeatCallback("ok"==n.payload.status?"ok":"error"),a&&a===this.pendingHeartbeatRef&&(this.pendingHeartbeatRef=null),this.log("receive",`${r.status||""} ${e} ${t} ${a&&"("+a+")"||""}`,r),Array.from(this.channels).filter(n=>n._isMember(e)).forEach(n=>n._trigger(t,r,a)),this.stateChangeCallbacks.message.forEach(e=>e(n))})}_onConnOpen(){this.log("transport",`connected to ${this.endpointURL()}`),this.flushSendBuffer(),this.reconnectTimer.reset(),this.worker?this.workerRef||this._startWorkerHeartbeat():this._startHeartbeat(),this.stateChangeCallbacks.open.forEach(n=>n())}_startHeartbeat(){this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(()=>this.sendHeartbeat(),this.heartbeatIntervalMs)}_startWorkerHeartbeat(){this.workerUrl?this.log("worker",`starting worker for from ${this.workerUrl}`):this.log("worker","starting default worker");const n=this._workerObjectUrl(this.workerUrl);this.workerRef=new Worker(n),this.workerRef.onerror=n=>{this.log("worker","worker error",n.message),this.workerRef.terminate()},this.workerRef.onmessage=n=>{"keepAlive"===n.data.event&&this.sendHeartbeat()},this.workerRef.postMessage({event:"start",interval:this.heartbeatIntervalMs})}_onConnClose(n){this.log("transport","close",n),this._triggerChanError(),this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(e=>e(n))}_onConnError(n){this.log("transport",`${n}`),this._triggerChanError(),this.stateChangeCallbacks.error.forEach(e=>e(n))}_triggerChanError(){this.channels.forEach(n=>n._trigger(G.error))}_appendParams(n,e){if(0===Object.keys(e).length)return n;const t=n.match(/\?/)?"&":"?";return`${n}${t}${new URLSearchParams(e)}`}_workerObjectUrl(n){let e;if(n)e=n;else{const n=new Blob(['\n  addEventListener("message", (e) => {\n    if (e.data.event === "start") {\n      setInterval(() => postMessage({ event: "keepAlive" }), e.data.interval);\n    }\n  });'],{type:"application/javascript"});e=URL.createObjectURL(n)}return e}}class bn extends Error{constructor(n){super(n),this.__isStorageError=!0,this.name="StorageError"}}function yn(n){return"object"==typeof n&&null!==n&&"__isStorageError"in n}class Cn extends bn{constructor(n,e){super(n),this.name="StorageApiError",this.status=e}toJSON(){return{name:this.name,message:this.message,status:this.status}}}class Bn extends bn{constructor(n,e){super(n),this.name="StorageUnknownError",this.originalError=e}}const En=n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)},xn=n=>{if(Array.isArray(n))return n.map(n=>xn(n));if("function"==typeof n||n!==Object(n))return n;const e={};return Object.entries(n).forEach(([n,t])=>{const r=n.replace(/([-_][a-z])/gi,n=>n.toUpperCase().replace(/[-_]/g,""));e[r]=xn(t)}),e};var wn=function(n,e,t,r){return new(t||(t=Promise))(function(a,i){function o(n){try{l(r.next(n))}catch(n){i(n)}}function s(n){try{l(r.throw(n))}catch(n){i(n)}}function l(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(o,s)}l((r=r.apply(n,e||[])).next())})};const kn=n=>n.msg||n.message||n.error_description||n.error||JSON.stringify(n),jn=(n,e,t)=>wn(void 0,void 0,void 0,function*(){const r=yield(i=void 0,o=void 0,s=void 0,l=function*(){return"undefined"==typeof Response?(yield Promise.resolve().then(a.bind(a,907))).Response:Response},new(s||(s=Promise))(function(n,e){function t(n){try{a(l.next(n))}catch(n){e(n)}}function r(n){try{a(l.throw(n))}catch(n){e(n)}}function a(e){var a;e.done?n(e.value):(a=e.value,a instanceof s?a:new s(function(n){n(a)})).then(t,r)}a((l=l.apply(i,o||[])).next())}));var i,o,s,l;n instanceof r&&!(null==t?void 0:t.noResolveJson)?n.json().then(t=>{e(new Cn(kn(t),n.status||500))}).catch(n=>{e(new Bn(kn(n),n))}):e(new Bn(kn(n),n))});function Sn(n,e,t,r,a,i){return wn(this,void 0,void 0,function*(){return new Promise((o,s)=>{n(t,((n,e,t,r)=>{const a={method:n,headers:(null==e?void 0:e.headers)||{}};return"GET"===n?a:(a.headers=Object.assign({"Content-Type":"application/json"},null==e?void 0:e.headers),r&&(a.body=JSON.stringify(r)),Object.assign(Object.assign({},a),t))})(e,r,a,i)).then(n=>{if(!n.ok)throw n;return(null==r?void 0:r.noResolveJson)?n:n.json()}).then(n=>o(n)).catch(n=>jn(n,s,r))})})}function _n(n,e,t,r){return wn(this,void 0,void 0,function*(){return Sn(n,"GET",e,t,r)})}function In(n,e,t,r,a){return wn(this,void 0,void 0,function*(){return Sn(n,"POST",e,r,a,t)})}function zn(n,e,t,r,a){return wn(this,void 0,void 0,function*(){return Sn(n,"DELETE",e,r,a,t)})}var Nn=function(n,e,t,r){return new(t||(t=Promise))(function(a,i){function o(n){try{l(r.next(n))}catch(n){i(n)}}function s(n){try{l(r.throw(n))}catch(n){i(n)}}function l(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(o,s)}l((r=r.apply(n,e||[])).next())})};const Tn={limit:100,offset:0,sortBy:{column:"name",order:"asc"}},On={cacheControl:"3600",contentType:"text/plain;charset=UTF-8",upsert:!1};class Pn{constructor(n,e={},t,r){this.url=n,this.headers=e,this.bucketId=t,this.fetch=En(r)}uploadOrUpdate(n,e,t,r){return Nn(this,void 0,void 0,function*(){try{let a;const i=Object.assign(Object.assign({},On),r);let o=Object.assign(Object.assign({},this.headers),"POST"===n&&{"x-upsert":String(i.upsert)});const s=i.metadata;"undefined"!=typeof Blob&&t instanceof Blob?(a=new FormData,a.append("cacheControl",i.cacheControl),s&&a.append("metadata",this.encodeMetadata(s)),a.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(a=t,a.append("cacheControl",i.cacheControl),s&&a.append("metadata",this.encodeMetadata(s))):(a=t,o["cache-control"]=`max-age=${i.cacheControl}`,o["content-type"]=i.contentType,s&&(o["x-metadata"]=this.toBase64(this.encodeMetadata(s)))),(null==r?void 0:r.headers)&&(o=Object.assign(Object.assign({},o),r.headers));const l=this._removeEmptyFolders(e),c=this._getFinalPath(l),u=yield this.fetch(`${this.url}/object/${c}`,Object.assign({method:n,body:a,headers:o},(null==i?void 0:i.duplex)?{duplex:i.duplex}:{})),d=yield u.json();return u.ok?{data:{path:l,id:d.Id,fullPath:d.Key},error:null}:{data:null,error:d}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}upload(n,e,t){return Nn(this,void 0,void 0,function*(){return this.uploadOrUpdate("POST",n,e,t)})}uploadToSignedUrl(n,e,t,r){return Nn(this,void 0,void 0,function*(){const a=this._removeEmptyFolders(n),i=this._getFinalPath(a),o=new URL(this.url+`/object/upload/sign/${i}`);o.searchParams.set("token",e);try{let n;const e=Object.assign({upsert:On.upsert},r),i=Object.assign(Object.assign({},this.headers),{"x-upsert":String(e.upsert)});"undefined"!=typeof Blob&&t instanceof Blob?(n=new FormData,n.append("cacheControl",e.cacheControl),n.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(n=t,n.append("cacheControl",e.cacheControl)):(n=t,i["cache-control"]=`max-age=${e.cacheControl}`,i["content-type"]=e.contentType);const s=yield this.fetch(o.toString(),{method:"PUT",body:n,headers:i}),l=yield s.json();return s.ok?{data:{path:a,fullPath:l.Key},error:null}:{data:null,error:l}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}createSignedUploadUrl(n,e){return Nn(this,void 0,void 0,function*(){try{let t=this._getFinalPath(n);const r=Object.assign({},this.headers);(null==e?void 0:e.upsert)&&(r["x-upsert"]="true");const a=yield In(this.fetch,`${this.url}/object/upload/sign/${t}`,{},{headers:r}),i=new URL(this.url+a.url),o=i.searchParams.get("token");if(!o)throw new bn("No token returned by API");return{data:{signedUrl:i.toString(),path:n,token:o},error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}update(n,e,t){return Nn(this,void 0,void 0,function*(){return this.uploadOrUpdate("PUT",n,e,t)})}move(n,e,t){return Nn(this,void 0,void 0,function*(){try{return{data:yield In(this.fetch,`${this.url}/object/move`,{bucketId:this.bucketId,sourceKey:n,destinationKey:e,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}copy(n,e,t){return Nn(this,void 0,void 0,function*(){try{return{data:{path:(yield In(this.fetch,`${this.url}/object/copy`,{bucketId:this.bucketId,sourceKey:n,destinationKey:e,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers})).Key},error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}createSignedUrl(n,e,t){return Nn(this,void 0,void 0,function*(){try{let r=this._getFinalPath(n),a=yield In(this.fetch,`${this.url}/object/sign/${r}`,Object.assign({expiresIn:e},(null==t?void 0:t.transform)?{transform:t.transform}:{}),{headers:this.headers});const i=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return a={signedUrl:encodeURI(`${this.url}${a.signedURL}${i}`)},{data:a,error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}createSignedUrls(n,e,t){return Nn(this,void 0,void 0,function*(){try{const r=yield In(this.fetch,`${this.url}/object/sign/${this.bucketId}`,{expiresIn:e,paths:n},{headers:this.headers}),a=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return{data:r.map(n=>Object.assign(Object.assign({},n),{signedUrl:n.signedURL?encodeURI(`${this.url}${n.signedURL}${a}`):null})),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}download(n,e){return Nn(this,void 0,void 0,function*(){const t=void 0!==(null==e?void 0:e.transform)?"render/image/authenticated":"object",r=this.transformOptsToQueryString((null==e?void 0:e.transform)||{}),a=r?`?${r}`:"";try{const e=this._getFinalPath(n),r=yield _n(this.fetch,`${this.url}/${t}/${e}${a}`,{headers:this.headers,noResolveJson:!0});return{data:yield r.blob(),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}info(n){return Nn(this,void 0,void 0,function*(){const e=this._getFinalPath(n);try{const n=yield _n(this.fetch,`${this.url}/object/info/${e}`,{headers:this.headers});return{data:xn(n),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}exists(n){return Nn(this,void 0,void 0,function*(){const e=this._getFinalPath(n);try{return yield function(n,e,t){return wn(this,void 0,void 0,function*(){return Sn(n,"HEAD",e,Object.assign(Object.assign({},t),{noResolveJson:!0}),undefined)})}(this.fetch,`${this.url}/object/${e}`,{headers:this.headers}),{data:!0,error:null}}catch(n){if(yn(n)&&n instanceof Bn){const e=n.originalError;if([400,404].includes(null==e?void 0:e.status))return{data:!1,error:n}}throw n}})}getPublicUrl(n,e){const t=this._getFinalPath(n),r=[],a=(null==e?void 0:e.download)?`download=${!0===e.download?"":e.download}`:"";""!==a&&r.push(a);const i=void 0!==(null==e?void 0:e.transform)?"render/image":"object",o=this.transformOptsToQueryString((null==e?void 0:e.transform)||{});""!==o&&r.push(o);let s=r.join("&");return""!==s&&(s=`?${s}`),{data:{publicUrl:encodeURI(`${this.url}/${i}/public/${t}${s}`)}}}remove(n){return Nn(this,void 0,void 0,function*(){try{return{data:yield zn(this.fetch,`${this.url}/object/${this.bucketId}`,{prefixes:n},{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}list(n,e,t){return Nn(this,void 0,void 0,function*(){try{const r=Object.assign(Object.assign(Object.assign({},Tn),e),{prefix:n||""});return{data:yield In(this.fetch,`${this.url}/object/list/${this.bucketId}`,r,{headers:this.headers},t),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}encodeMetadata(n){return JSON.stringify(n)}toBase64(n){return"undefined"!=typeof Buffer?Buffer.from(n).toString("base64"):btoa(n)}_getFinalPath(n){return`${this.bucketId}/${n}`}_removeEmptyFolders(n){return n.replace(/^\/|\/$/g,"").replace(/\/+/g,"/")}transformOptsToQueryString(n){const e=[];return n.width&&e.push(`width=${n.width}`),n.height&&e.push(`height=${n.height}`),n.resize&&e.push(`resize=${n.resize}`),n.format&&e.push(`format=${n.format}`),n.quality&&e.push(`quality=${n.quality}`),e.join("&")}}const Dn={"X-Client-Info":"storage-js/2.7.1"};var Ln=function(n,e,t,r){return new(t||(t=Promise))(function(a,i){function o(n){try{l(r.next(n))}catch(n){i(n)}}function s(n){try{l(r.throw(n))}catch(n){i(n)}}function l(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(o,s)}l((r=r.apply(n,e||[])).next())})};class Rn{constructor(n,e={},t){this.url=n,this.headers=Object.assign(Object.assign({},Dn),e),this.fetch=En(t)}listBuckets(){return Ln(this,void 0,void 0,function*(){try{return{data:yield _n(this.fetch,`${this.url}/bucket`,{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}getBucket(n){return Ln(this,void 0,void 0,function*(){try{return{data:yield _n(this.fetch,`${this.url}/bucket/${n}`,{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}createBucket(n,e={public:!1}){return Ln(this,void 0,void 0,function*(){try{return{data:yield In(this.fetch,`${this.url}/bucket`,{id:n,name:n,public:e.public,file_size_limit:e.fileSizeLimit,allowed_mime_types:e.allowedMimeTypes},{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}updateBucket(n,e){return Ln(this,void 0,void 0,function*(){try{const t=yield function(n,e,t,r){return wn(this,void 0,void 0,function*(){return Sn(n,"PUT",e,r,undefined,t)})}(this.fetch,`${this.url}/bucket/${n}`,{id:n,name:n,public:e.public,file_size_limit:e.fileSizeLimit,allowed_mime_types:e.allowedMimeTypes},{headers:this.headers});return{data:t,error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}emptyBucket(n){return Ln(this,void 0,void 0,function*(){try{return{data:yield In(this.fetch,`${this.url}/bucket/${n}/empty`,{},{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}deleteBucket(n){return Ln(this,void 0,void 0,function*(){try{return{data:yield zn(this.fetch,`${this.url}/bucket/${n}`,{},{headers:this.headers}),error:null}}catch(n){if(yn(n))return{data:null,error:n};throw n}})}}class Mn extends Rn{constructor(n,e={},t){super(n,e,t)}from(n){return new Pn(this.url,this.headers,n,this.fetch)}}let Un="";Un="undefined"!=typeof Deno?"deno":"undefined"!=typeof document?"web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?"react-native":"node";const Fn={headers:{"X-Client-Info":`supabase-js-${Un}/2.50.3`}},$n={schema:"public"},Yn={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},qn={};var Wn=a(907);const Gn=n=>{let e;return e=n||("undefined"==typeof fetch?Wn.default:fetch),(...n)=>e(...n)},Hn=(n,e,t)=>{const r=Gn(t),a="undefined"==typeof Headers?Wn.Headers:Headers;return(t,i)=>{return o=void 0,s=void 0,c=function*(){var o;const s=null!==(o=yield e())&&void 0!==o?o:n;let l=new a(null==i?void 0:i.headers);return l.has("apikey")||l.set("apikey",n),l.has("Authorization")||l.set("Authorization",`Bearer ${s}`),r(t,Object.assign(Object.assign({},i),{headers:l}))},new((l=void 0)||(l=Promise))(function(n,e){function t(n){try{a(c.next(n))}catch(n){e(n)}}function r(n){try{a(c.throw(n))}catch(n){e(n)}}function a(e){var a;e.done?n(e.value):(a=e.value,a instanceof l?a:new l(function(n){n(a)})).then(t,r)}a((c=c.apply(o,s||[])).next())});var o,s,l,c}};const Kn="2.70.0",Vn=3e4,Qn={"X-Client-Info":`gotrue-js/${Kn}`},Zn="X-Supabase-Api-Version",Jn=Date.parse("2024-01-01T00:00:00.0Z"),Xn="2024-01-01",ne=/^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;class ee extends Error{constructor(n,e,t){super(n),this.__isAuthError=!0,this.name="AuthError",this.status=e,this.code=t}}function te(n){return"object"==typeof n&&null!==n&&"__isAuthError"in n}class re extends ee{constructor(n,e,t){super(n,e,t),this.name="AuthApiError",this.status=e,this.code=t}}class ae extends ee{constructor(n,e){super(n),this.name="AuthUnknownError",this.originalError=e}}class ie extends ee{constructor(n,e,t,r){super(n,t,r),this.name=e,this.status=t}}class oe extends ie{constructor(){super("Auth session missing!","AuthSessionMissingError",400,void 0)}}class se extends ie{constructor(){super("Auth session or user missing","AuthInvalidTokenResponseError",500,void 0)}}class le extends ie{constructor(n){super(n,"AuthInvalidCredentialsError",400,void 0)}}class ce extends ie{constructor(n,e=null){super(n,"AuthImplicitGrantRedirectError",500,void 0),this.details=null,this.details=e}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class ue extends ie{constructor(n,e=null){super(n,"AuthPKCEGrantCodeExchangeError",500,void 0),this.details=null,this.details=e}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class de extends ie{constructor(n,e){super(n,"AuthRetryableFetchError",e,void 0)}}function Ae(n){return te(n)&&"AuthRetryableFetchError"===n.name}class fe extends ie{constructor(n,e,t){super(n,"AuthWeakPasswordError",e,"weak_password"),this.reasons=t}}class pe extends ie{constructor(n){super(n,"AuthInvalidJwtError",400,"invalid_jwt")}}const he="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".split(""),ge=" \t\n\r=".split(""),me=(()=>{const n=new Array(128);for(let e=0;e<n.length;e+=1)n[e]=-1;for(let e=0;e<ge.length;e+=1)n[ge[e].charCodeAt(0)]=-2;for(let e=0;e<he.length;e+=1)n[he[e].charCodeAt(0)]=e;return n})();function ve(n,e,t){if(null!==n)for(e.queue=e.queue<<8|n,e.queuedBits+=8;e.queuedBits>=6;){const n=e.queue>>e.queuedBits-6&63;t(he[n]),e.queuedBits-=6}else if(e.queuedBits>0)for(e.queue=e.queue<<6-e.queuedBits,e.queuedBits=6;e.queuedBits>=6;){const n=e.queue>>e.queuedBits-6&63;t(he[n]),e.queuedBits-=6}}function be(n,e,t){const r=me[n];if(!(r>-1)){if(-2===r)return;throw new Error(`Invalid Base64-URL character "${String.fromCharCode(n)}"`)}for(e.queue=e.queue<<6|r,e.queuedBits+=6;e.queuedBits>=8;)t(e.queue>>e.queuedBits-8&255),e.queuedBits-=8}function ye(n){const e=[],t=n=>{e.push(String.fromCodePoint(n))},r={utf8seq:0,codepoint:0},a={queue:0,queuedBits:0},i=n=>{!function(n,e,t){if(0===e.utf8seq){if(n<=127)return void t(n);for(let t=1;t<6;t+=1)if(!(n>>7-t&1)){e.utf8seq=t;break}if(2===e.utf8seq)e.codepoint=31&n;else if(3===e.utf8seq)e.codepoint=15&n;else{if(4!==e.utf8seq)throw new Error("Invalid UTF-8 sequence");e.codepoint=7&n}e.utf8seq-=1}else if(e.utf8seq>0){if(n<=127)throw new Error("Invalid UTF-8 sequence");e.codepoint=e.codepoint<<6|63&n,e.utf8seq-=1,0===e.utf8seq&&t(e.codepoint)}}(n,r,t)};for(let e=0;e<n.length;e+=1)be(n.charCodeAt(e),a,i);return e.join("")}function Ce(n,e){if(!(n<=127)){if(n<=2047)return e(192|n>>6),void e(128|63&n);if(n<=65535)return e(224|n>>12),e(128|n>>6&63),void e(128|63&n);if(n<=1114111)return e(240|n>>18),e(128|n>>12&63),e(128|n>>6&63),void e(128|63&n);throw new Error(`Unrecognized Unicode codepoint: ${n.toString(16)}`)}e(n)}function Be(n){const e=[],t={queue:0,queuedBits:0},r=n=>{e.push(n)};for(let e=0;e<n.length;e+=1)be(n.charCodeAt(e),t,r);return new Uint8Array(e)}function Ee(n){const e=[],t={queue:0,queuedBits:0},r=n=>{e.push(n)};return n.forEach(n=>ve(n,t,r)),ve(null,t,r),e.join("")}const xe=()=>"undefined"!=typeof window&&"undefined"!=typeof document,we={tested:!1,writable:!1},ke=()=>{if(!xe())return!1;try{if("object"!=typeof globalThis.localStorage)return!1}catch(n){return!1}if(we.tested)return we.writable;const n=`lswt-${Math.random()}${Math.random()}`;try{globalThis.localStorage.setItem(n,n),globalThis.localStorage.removeItem(n),we.tested=!0,we.writable=!0}catch(n){we.tested=!0,we.writable=!1}return we.writable},je=n=>{let e;return e=n||("undefined"==typeof fetch?(...n)=>Promise.resolve().then(a.bind(a,907)).then(({default:e})=>e(...n)):fetch),(...n)=>e(...n)},Se=async(n,e,t)=>{await n.setItem(e,JSON.stringify(t))},_e=async(n,e)=>{const t=await n.getItem(e);if(!t)return null;try{return JSON.parse(t)}catch(n){return t}},Ie=async(n,e)=>{await n.removeItem(e)};class ze{constructor(){this.promise=new ze.promiseConstructor((n,e)=>{this.resolve=n,this.reject=e})}}function Ne(n){const e=n.split(".");if(3!==e.length)throw new pe("Invalid JWT structure");for(let n=0;n<e.length;n++)if(!ne.test(e[n]))throw new pe("JWT not in base64url format");return{header:JSON.parse(ye(e[0])),payload:JSON.parse(ye(e[1])),signature:Be(e[2]),raw:{header:e[0],payload:e[1]}}}function Te(n){return("0"+n.toString(16)).substr(-2)}async function Oe(n,e,t=!1){const r=function(){const n=new Uint32Array(56);if("undefined"==typeof crypto){const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",e=n.length;let t="";for(let r=0;r<56;r++)t+=n.charAt(Math.floor(Math.random()*e));return t}return crypto.getRandomValues(n),Array.from(n,Te).join("")}();let a=r;t&&(a+="/PASSWORD_RECOVERY"),await Se(n,`${e}-code-verifier`,a);const i=await async function(n){if("undefined"==typeof crypto||void 0===crypto.subtle||"undefined"==typeof TextEncoder)return console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256."),n;const e=await async function(n){const e=(new TextEncoder).encode(n),t=await crypto.subtle.digest("SHA-256",e),r=new Uint8Array(t);return Array.from(r).map(n=>String.fromCharCode(n)).join("")}(n);return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}(r);return[i,r===i?"plain":"s256"]}ze.promiseConstructor=Promise;const Pe=/^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i,De=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;function Le(n){if(!De.test(n))throw new Error("@supabase/auth-js: Expected parameter to be UUID but is not")}const Re=n=>n.msg||n.message||n.error_description||n.error||JSON.stringify(n),Me=[502,503,504];async function Ue(n){var e,t;if(!("object"==typeof(t=n)&&null!==t&&"status"in t&&"ok"in t&&"json"in t&&"function"==typeof t.json))throw new de(Re(n),0);if(Me.includes(n.status))throw new de(Re(n),n.status);let r,a;try{r=await n.json()}catch(n){throw new ae(Re(n),n)}const i=function(n){const e=n.headers.get(Zn);if(!e)return null;if(!e.match(Pe))return null;try{return new Date(`${e}T00:00:00.0Z`)}catch(n){return null}}(n);if(i&&i.getTime()>=Jn&&"object"==typeof r&&r&&"string"==typeof r.code?a=r.code:"object"==typeof r&&r&&"string"==typeof r.error_code&&(a=r.error_code),a){if("weak_password"===a)throw new fe(Re(r),n.status,(null===(e=r.weak_password)||void 0===e?void 0:e.reasons)||[]);if("session_not_found"===a)throw new oe}else if("object"==typeof r&&r&&"object"==typeof r.weak_password&&r.weak_password&&Array.isArray(r.weak_password.reasons)&&r.weak_password.reasons.length&&r.weak_password.reasons.reduce((n,e)=>n&&"string"==typeof e,!0))throw new fe(Re(r),n.status,r.weak_password.reasons);throw new re(Re(r),n.status||500,a)}async function Fe(n,e,t,r){var a;const i=Object.assign({},null==r?void 0:r.headers);i[Zn]||(i[Zn]=Xn),(null==r?void 0:r.jwt)&&(i.Authorization=`Bearer ${r.jwt}`);const o=null!==(a=null==r?void 0:r.query)&&void 0!==a?a:{};(null==r?void 0:r.redirectTo)&&(o.redirect_to=r.redirectTo);const s=Object.keys(o).length?"?"+new URLSearchParams(o).toString():"",l=await async function(n,e,t,r,a,i){const o=((n,e,t,r)=>{const a={method:n,headers:(null==e?void 0:e.headers)||{}};return"GET"===n?a:(a.headers=Object.assign({"Content-Type":"application/json;charset=UTF-8"},null==e?void 0:e.headers),a.body=JSON.stringify(r),Object.assign(Object.assign({},a),t))})(e,r,{},i);let s;try{s=await n(t,Object.assign({},o))}catch(n){throw console.error(n),new de(Re(n),0)}if(s.ok||await Ue(s),null==r?void 0:r.noResolveJson)return s;try{return await s.json()}catch(n){await Ue(n)}}(n,e,t+s,{headers:i,noResolveJson:null==r?void 0:r.noResolveJson},0,null==r?void 0:r.body);return(null==r?void 0:r.xform)?null==r?void 0:r.xform(l):{data:Object.assign({},l),error:null}}function $e(n){var e;let t=null;var r;return function(n){return n.access_token&&n.refresh_token&&n.expires_in}(n)&&(t=Object.assign({},n),n.expires_at||(t.expires_at=(r=n.expires_in,Math.round(Date.now()/1e3)+r))),{data:{session:t,user:null!==(e=n.user)&&void 0!==e?e:n},error:null}}function Ye(n){const e=$e(n);return!e.error&&n.weak_password&&"object"==typeof n.weak_password&&Array.isArray(n.weak_password.reasons)&&n.weak_password.reasons.length&&n.weak_password.message&&"string"==typeof n.weak_password.message&&n.weak_password.reasons.reduce((n,e)=>n&&"string"==typeof e,!0)&&(e.data.weak_password=n.weak_password),e}function qe(n){var e;return{data:{user:null!==(e=n.user)&&void 0!==e?e:n},error:null}}function We(n){return{data:n,error:null}}function Ge(n){const{action_link:e,email_otp:t,hashed_token:r,redirect_to:a,verification_type:i}=n,o=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t}(n,["action_link","email_otp","hashed_token","redirect_to","verification_type"]);return{data:{properties:{action_link:e,email_otp:t,hashed_token:r,redirect_to:a,verification_type:i},user:Object.assign({},o)},error:null}}function He(n){return n}const Ke=["global","local","others"];class Ve{constructor({url:n="",headers:e={},fetch:t}){this.url=n,this.headers=e,this.fetch=je(t),this.mfa={listFactors:this._listFactors.bind(this),deleteFactor:this._deleteFactor.bind(this)}}async signOut(n,e=Ke[0]){if(Ke.indexOf(e)<0)throw new Error(`@supabase/auth-js: Parameter scope must be one of ${Ke.join(", ")}`);try{return await Fe(this.fetch,"POST",`${this.url}/logout?scope=${e}`,{headers:this.headers,jwt:n,noResolveJson:!0}),{data:null,error:null}}catch(n){if(te(n))return{data:null,error:n};throw n}}async inviteUserByEmail(n,e={}){try{return await Fe(this.fetch,"POST",`${this.url}/invite`,{body:{email:n,data:e.data},headers:this.headers,redirectTo:e.redirectTo,xform:qe})}catch(n){if(te(n))return{data:{user:null},error:n};throw n}}async generateLink(n){try{const{options:e}=n,t=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(n);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(n,r[a])&&(t[r[a]]=n[r[a]])}return t}(n,["options"]),r=Object.assign(Object.assign({},t),e);return"newEmail"in t&&(r.new_email=null==t?void 0:t.newEmail,delete r.newEmail),await Fe(this.fetch,"POST",`${this.url}/admin/generate_link`,{body:r,headers:this.headers,xform:Ge,redirectTo:null==e?void 0:e.redirectTo})}catch(n){if(te(n))return{data:{properties:null,user:null},error:n};throw n}}async createUser(n){try{return await Fe(this.fetch,"POST",`${this.url}/admin/users`,{body:n,headers:this.headers,xform:qe})}catch(n){if(te(n))return{data:{user:null},error:n};throw n}}async listUsers(n){var e,t,r,a,i,o,s;try{const l={nextPage:null,lastPage:0,total:0},c=await Fe(this.fetch,"GET",`${this.url}/admin/users`,{headers:this.headers,noResolveJson:!0,query:{page:null!==(t=null===(e=null==n?void 0:n.page)||void 0===e?void 0:e.toString())&&void 0!==t?t:"",per_page:null!==(a=null===(r=null==n?void 0:n.perPage)||void 0===r?void 0:r.toString())&&void 0!==a?a:""},xform:He});if(c.error)throw c.error;const u=await c.json(),d=null!==(i=c.headers.get("x-total-count"))&&void 0!==i?i:0,A=null!==(s=null===(o=c.headers.get("link"))||void 0===o?void 0:o.split(","))&&void 0!==s?s:[];return A.length>0&&(A.forEach(n=>{const e=parseInt(n.split(";")[0].split("=")[1].substring(0,1)),t=JSON.parse(n.split(";")[1].split("=")[1]);l[`${t}Page`]=e}),l.total=parseInt(d)),{data:Object.assign(Object.assign({},u),l),error:null}}catch(n){if(te(n))return{data:{users:[]},error:n};throw n}}async getUserById(n){Le(n);try{return await Fe(this.fetch,"GET",`${this.url}/admin/users/${n}`,{headers:this.headers,xform:qe})}catch(n){if(te(n))return{data:{user:null},error:n};throw n}}async updateUserById(n,e){Le(n);try{return await Fe(this.fetch,"PUT",`${this.url}/admin/users/${n}`,{body:e,headers:this.headers,xform:qe})}catch(n){if(te(n))return{data:{user:null},error:n};throw n}}async deleteUser(n,e=!1){Le(n);try{return await Fe(this.fetch,"DELETE",`${this.url}/admin/users/${n}`,{headers:this.headers,body:{should_soft_delete:e},xform:qe})}catch(n){if(te(n))return{data:{user:null},error:n};throw n}}async _listFactors(n){Le(n.userId);try{const{data:e,error:t}=await Fe(this.fetch,"GET",`${this.url}/admin/users/${n.userId}/factors`,{headers:this.headers,xform:n=>({data:{factors:n},error:null})});return{data:e,error:t}}catch(n){if(te(n))return{data:null,error:n};throw n}}async _deleteFactor(n){Le(n.userId),Le(n.id);try{return{data:await Fe(this.fetch,"DELETE",`${this.url}/admin/users/${n.userId}/factors/${n.id}`,{headers:this.headers}),error:null}}catch(n){if(te(n))return{data:null,error:n};throw n}}}const Qe={getItem:n=>ke()?globalThis.localStorage.getItem(n):null,setItem:(n,e)=>{ke()&&globalThis.localStorage.setItem(n,e)},removeItem:n=>{ke()&&globalThis.localStorage.removeItem(n)}};function Ze(n={}){return{getItem:e=>n[e]||null,setItem:(e,t)=>{n[e]=t},removeItem:e=>{delete n[e]}}}const Je=!!(globalThis&&ke()&&globalThis.localStorage&&"true"===globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug"));class Xe extends Error{constructor(n){super(n),this.isAcquireTimeout=!0}}class nt extends Xe{}async function et(n,e,t){Je&&console.log("@supabase/gotrue-js: navigatorLock: acquire lock",n,e);const r=new globalThis.AbortController;return e>0&&setTimeout(()=>{r.abort(),Je&&console.log("@supabase/gotrue-js: navigatorLock acquire timed out",n)},e),await Promise.resolve().then(()=>globalThis.navigator.locks.request(n,0===e?{mode:"exclusive",ifAvailable:!0}:{mode:"exclusive",signal:r.signal},async r=>{if(!r){if(0===e)throw Je&&console.log("@supabase/gotrue-js: navigatorLock: not immediately available",n),new nt(`Acquiring an exclusive Navigator LockManager lock "${n}" immediately failed`);if(Je)try{const n=await globalThis.navigator.locks.query();console.log("@supabase/gotrue-js: Navigator LockManager state",JSON.stringify(n,null,"  "))}catch(n){console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state",n)}return console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"),await t()}Je&&console.log("@supabase/gotrue-js: navigatorLock: acquired",n,r.name);try{return await t()}finally{Je&&console.log("@supabase/gotrue-js: navigatorLock: released",n,r.name)}}))}!function(){if("object"!=typeof globalThis)try{Object.defineProperty(Object.prototype,"__magic__",{get:function(){return this},configurable:!0}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__}catch(n){"undefined"!=typeof self&&(self.globalThis=self)}}();const tt={url:"http://localhost:9999",storageKey:"supabase.auth.token",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,headers:Qn,flowType:"implicit",debug:!1,hasCustomAuthorizationHeader:!1};async function rt(n,e,t){return await t()}class at{constructor(n){var e,t;this.memoryStorage=null,this.stateChangeEmitters=new Map,this.autoRefreshTicker=null,this.visibilityChangedCallback=null,this.refreshingDeferred=null,this.initializePromise=null,this.detectSessionInUrl=!0,this.hasCustomAuthorizationHeader=!1,this.suppressGetSessionWarning=!1,this.lockAcquired=!1,this.pendingInLock=[],this.broadcastChannel=null,this.logger=console.log,this.instanceID=at.nextInstanceID,at.nextInstanceID+=1,this.instanceID>0&&xe()&&console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");const r=Object.assign(Object.assign({},tt),n);if(this.logDebugMessages=!!r.debug,"function"==typeof r.debug&&(this.logger=r.debug),this.persistSession=r.persistSession,this.storageKey=r.storageKey,this.autoRefreshToken=r.autoRefreshToken,this.admin=new Ve({url:r.url,headers:r.headers,fetch:r.fetch}),this.url=r.url,this.headers=r.headers,this.fetch=je(r.fetch),this.lock=r.lock||rt,this.detectSessionInUrl=r.detectSessionInUrl,this.flowType=r.flowType,this.hasCustomAuthorizationHeader=r.hasCustomAuthorizationHeader,r.lock?this.lock=r.lock:xe()&&(null===(e=null===globalThis||void 0===globalThis?void 0:globalThis.navigator)||void 0===e?void 0:e.locks)?this.lock=et:this.lock=rt,this.jwks={keys:[]},this.jwks_cached_at=Number.MIN_SAFE_INTEGER,this.mfa={verify:this._verify.bind(this),enroll:this._enroll.bind(this),unenroll:this._unenroll.bind(this),challenge:this._challenge.bind(this),listFactors:this._listFactors.bind(this),challengeAndVerify:this._challengeAndVerify.bind(this),getAuthenticatorAssuranceLevel:this._getAuthenticatorAssuranceLevel.bind(this)},this.persistSession?r.storage?this.storage=r.storage:ke()?this.storage=Qe:(this.memoryStorage={},this.storage=Ze(this.memoryStorage)):(this.memoryStorage={},this.storage=Ze(this.memoryStorage)),xe()&&globalThis.BroadcastChannel&&this.persistSession&&this.storageKey){try{this.broadcastChannel=new globalThis.BroadcastChannel(this.storageKey)}catch(n){console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available",n)}null===(t=this.broadcastChannel)||void 0===t||t.addEventListener("message",async n=>{this._debug("received broadcast notification from other tab or client",n),await this._notifyAllSubscribers(n.data.event,n.data.session,!1)})}this.initialize()}_debug(...n){return this.logDebugMessages&&this.logger(`GoTrueClient@${this.instanceID} (${Kn}) ${(new Date).toISOString()}`,...n),this}async initialize(){return this.initializePromise||(this.initializePromise=(async()=>await this._acquireLock(-1,async()=>await this._initialize()))()),await this.initializePromise}async _initialize(){var n;try{const e=function(n){const e={},t=new URL(n);if(t.hash&&"#"===t.hash[0])try{new URLSearchParams(t.hash.substring(1)).forEach((n,t)=>{e[t]=n})}catch(n){}return t.searchParams.forEach((n,t)=>{e[t]=n}),e}(window.location.href);let t="none";if(this._isImplicitGrantCallback(e)?t="implicit":await this._isPKCECallback(e)&&(t="pkce"),xe()&&this.detectSessionInUrl&&"none"!==t){const{data:r,error:a}=await this._getSessionFromURL(e,t);if(a){if(this._debug("#_initialize()","error detecting session from URL",a),function(n){return te(n)&&"AuthImplicitGrantRedirectError"===n.name}(a)){const e=null===(n=a.details)||void 0===n?void 0:n.code;if("identity_already_exists"===e||"identity_not_found"===e||"single_identity_not_deletable"===e)return{error:a}}return await this._removeSession(),{error:a}}const{session:i,redirectType:o}=r;return this._debug("#_initialize()","detected session in URL",i,"redirect type",o),await this._saveSession(i),setTimeout(async()=>{"recovery"===o?await this._notifyAllSubscribers("PASSWORD_RECOVERY",i):await this._notifyAllSubscribers("SIGNED_IN",i)},0),{error:null}}return await this._recoverAndRefresh(),{error:null}}catch(n){return te(n)?{error:n}:{error:new ae("Unexpected error during initialization",n)}}finally{await this._handleVisibilityChange(),this._debug("#_initialize()","end")}}async signInAnonymously(n){var e,t,r;try{const a=await Fe(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{data:null!==(t=null===(e=null==n?void 0:n.options)||void 0===e?void 0:e.data)&&void 0!==t?t:{},gotrue_meta_security:{captcha_token:null===(r=null==n?void 0:n.options)||void 0===r?void 0:r.captchaToken}},xform:$e}),{data:i,error:o}=a;if(o||!i)return{data:{user:null,session:null},error:o};const s=i.session,l=i.user;return i.session&&(await this._saveSession(i.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async signUp(n){var e,t,r;try{let a;if("email"in n){const{email:t,password:r,options:i}=n;let o=null,s=null;"pkce"===this.flowType&&([o,s]=await Oe(this.storage,this.storageKey)),a=await Fe(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,redirectTo:null==i?void 0:i.emailRedirectTo,body:{email:t,password:r,data:null!==(e=null==i?void 0:i.data)&&void 0!==e?e:{},gotrue_meta_security:{captcha_token:null==i?void 0:i.captchaToken},code_challenge:o,code_challenge_method:s},xform:$e})}else{if(!("phone"in n))throw new le("You must provide either an email or phone number and a password");{const{phone:e,password:i,options:o}=n;a=await Fe(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{phone:e,password:i,data:null!==(t=null==o?void 0:o.data)&&void 0!==t?t:{},channel:null!==(r=null==o?void 0:o.channel)&&void 0!==r?r:"sms",gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken}},xform:$e})}}const{data:i,error:o}=a;if(o||!i)return{data:{user:null,session:null},error:o};const s=i.session,l=i.user;return i.session&&(await this._saveSession(i.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithPassword(n){try{let e;if("email"in n){const{email:t,password:r,options:a}=n;e=await Fe(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{email:t,password:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:Ye})}else{if(!("phone"in n))throw new le("You must provide either an email or phone number and a password");{const{phone:t,password:r,options:a}=n;e=await Fe(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{phone:t,password:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:Ye})}}const{data:t,error:r}=e;return r?{data:{user:null,session:null},error:r}:t&&t.session&&t.user?(t.session&&(await this._saveSession(t.session),await this._notifyAllSubscribers("SIGNED_IN",t.session)),{data:Object.assign({user:t.user,session:t.session},t.weak_password?{weakPassword:t.weak_password}:null),error:r}):{data:{user:null,session:null},error:new se}}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithOAuth(n){var e,t,r,a;return await this._handleProviderSignIn(n.provider,{redirectTo:null===(e=n.options)||void 0===e?void 0:e.redirectTo,scopes:null===(t=n.options)||void 0===t?void 0:t.scopes,queryParams:null===(r=n.options)||void 0===r?void 0:r.queryParams,skipBrowserRedirect:null===(a=n.options)||void 0===a?void 0:a.skipBrowserRedirect})}async exchangeCodeForSession(n){return await this.initializePromise,this._acquireLock(-1,async()=>this._exchangeCodeForSession(n))}async signInWithWeb3(n){const{chain:e}=n;if("solana"===e)return await this.signInWithSolana(n);throw new Error(`@supabase/auth-js: Unsupported chain "${e}"`)}async signInWithSolana(n){var e,t,r,a,i,o,s,l,c,u,d,A;let f,p;if("message"in n)f=n.message,p=n.signature;else{const{chain:d,wallet:A,statement:h,options:g}=n;let m;if(xe())if("object"==typeof A)m=A;else{const n=window;if(!("solana"in n)||"object"!=typeof n.solana||!("signIn"in n.solana&&"function"==typeof n.solana.signIn||"signMessage"in n.solana&&"function"==typeof n.solana.signMessage))throw new Error("@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.");m=n.solana}else{if("object"!=typeof A||!(null==g?void 0:g.url))throw new Error("@supabase/auth-js: Both wallet and url must be specified in non-browser environments.");m=A}const v=new URL(null!==(e=null==g?void 0:g.url)&&void 0!==e?e:window.location.href);if("signIn"in m&&m.signIn){const n=await m.signIn(Object.assign(Object.assign(Object.assign({issuedAt:(new Date).toISOString()},null==g?void 0:g.signInWithSolana),{version:"1",domain:v.host,uri:v.href}),h?{statement:h}:null));let e;if(Array.isArray(n)&&n[0]&&"object"==typeof n[0])e=n[0];else{if(!(n&&"object"==typeof n&&"signedMessage"in n&&"signature"in n))throw new Error("@supabase/auth-js: Wallet method signIn() returned unrecognized value");e=n}if(!("signedMessage"in e&&"signature"in e&&("string"==typeof e.signedMessage||e.signedMessage instanceof Uint8Array)&&e.signature instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields");f="string"==typeof e.signedMessage?e.signedMessage:(new TextDecoder).decode(e.signedMessage),p=e.signature}else{if(!("signMessage"in m&&"function"==typeof m.signMessage&&"publicKey"in m&&"object"==typeof m&&m.publicKey&&"toBase58"in m.publicKey&&"function"==typeof m.publicKey.toBase58))throw new Error("@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API");f=[`${v.host} wants you to sign in with your Solana account:`,m.publicKey.toBase58(),...h?["",h,""]:[""],"Version: 1",`URI: ${v.href}`,`Issued At: ${null!==(r=null===(t=null==g?void 0:g.signInWithSolana)||void 0===t?void 0:t.issuedAt)&&void 0!==r?r:(new Date).toISOString()}`,...(null===(a=null==g?void 0:g.signInWithSolana)||void 0===a?void 0:a.notBefore)?[`Not Before: ${g.signInWithSolana.notBefore}`]:[],...(null===(i=null==g?void 0:g.signInWithSolana)||void 0===i?void 0:i.expirationTime)?[`Expiration Time: ${g.signInWithSolana.expirationTime}`]:[],...(null===(o=null==g?void 0:g.signInWithSolana)||void 0===o?void 0:o.chainId)?[`Chain ID: ${g.signInWithSolana.chainId}`]:[],...(null===(s=null==g?void 0:g.signInWithSolana)||void 0===s?void 0:s.nonce)?[`Nonce: ${g.signInWithSolana.nonce}`]:[],...(null===(l=null==g?void 0:g.signInWithSolana)||void 0===l?void 0:l.requestId)?[`Request ID: ${g.signInWithSolana.requestId}`]:[],...(null===(u=null===(c=null==g?void 0:g.signInWithSolana)||void 0===c?void 0:c.resources)||void 0===u?void 0:u.length)?["Resources",...g.signInWithSolana.resources.map(n=>`- ${n}`)]:[]].join("\n");const n=await m.signMessage((new TextEncoder).encode(f),"utf8");if(!(n&&n instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet signMessage() API returned an recognized value");p=n}}try{const{data:e,error:t}=await Fe(this.fetch,"POST",`${this.url}/token?grant_type=web3`,{headers:this.headers,body:Object.assign({chain:"solana",message:f,signature:Ee(p)},(null===(d=n.options)||void 0===d?void 0:d.captchaToken)?{gotrue_meta_security:{captcha_token:null===(A=n.options)||void 0===A?void 0:A.captchaToken}}:null),xform:$e});if(t)throw t;return e&&e.session&&e.user?(e.session&&(await this._saveSession(e.session),await this._notifyAllSubscribers("SIGNED_IN",e.session)),{data:Object.assign({},e),error:t}):{data:{user:null,session:null},error:new se}}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async _exchangeCodeForSession(n){const e=await _e(this.storage,`${this.storageKey}-code-verifier`),[t,r]=(null!=e?e:"").split("/");try{const{data:e,error:a}=await Fe(this.fetch,"POST",`${this.url}/token?grant_type=pkce`,{headers:this.headers,body:{auth_code:n,code_verifier:t},xform:$e});if(await Ie(this.storage,`${this.storageKey}-code-verifier`),a)throw a;return e&&e.session&&e.user?(e.session&&(await this._saveSession(e.session),await this._notifyAllSubscribers("SIGNED_IN",e.session)),{data:Object.assign(Object.assign({},e),{redirectType:null!=r?r:null}),error:a}):{data:{user:null,session:null,redirectType:null},error:new se}}catch(n){if(te(n))return{data:{user:null,session:null,redirectType:null},error:n};throw n}}async signInWithIdToken(n){try{const{options:e,provider:t,token:r,access_token:a,nonce:i}=n,o=await Fe(this.fetch,"POST",`${this.url}/token?grant_type=id_token`,{headers:this.headers,body:{provider:t,id_token:r,access_token:a,nonce:i,gotrue_meta_security:{captcha_token:null==e?void 0:e.captchaToken}},xform:$e}),{data:s,error:l}=o;return l?{data:{user:null,session:null},error:l}:s&&s.session&&s.user?(s.session&&(await this._saveSession(s.session),await this._notifyAllSubscribers("SIGNED_IN",s.session)),{data:s,error:l}):{data:{user:null,session:null},error:new se}}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithOtp(n){var e,t,r,a,i;try{if("email"in n){const{email:r,options:a}=n;let i=null,o=null;"pkce"===this.flowType&&([i,o]=await Oe(this.storage,this.storageKey));const{error:s}=await Fe(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{email:r,data:null!==(e=null==a?void 0:a.data)&&void 0!==e?e:{},create_user:null===(t=null==a?void 0:a.shouldCreateUser)||void 0===t||t,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken},code_challenge:i,code_challenge_method:o},redirectTo:null==a?void 0:a.emailRedirectTo});return{data:{user:null,session:null},error:s}}if("phone"in n){const{phone:e,options:t}=n,{data:o,error:s}=await Fe(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{phone:e,data:null!==(r=null==t?void 0:t.data)&&void 0!==r?r:{},create_user:null===(a=null==t?void 0:t.shouldCreateUser)||void 0===a||a,gotrue_meta_security:{captcha_token:null==t?void 0:t.captchaToken},channel:null!==(i=null==t?void 0:t.channel)&&void 0!==i?i:"sms"}});return{data:{user:null,session:null,messageId:null==o?void 0:o.message_id},error:s}}throw new le("You must provide either an email or phone number.")}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async verifyOtp(n){var e,t;try{let r,a;"options"in n&&(r=null===(e=n.options)||void 0===e?void 0:e.redirectTo,a=null===(t=n.options)||void 0===t?void 0:t.captchaToken);const{data:i,error:o}=await Fe(this.fetch,"POST",`${this.url}/verify`,{headers:this.headers,body:Object.assign(Object.assign({},n),{gotrue_meta_security:{captcha_token:a}}),redirectTo:r,xform:$e});if(o)throw o;if(!i)throw new Error("An error occurred on token verification.");const s=i.session,l=i.user;return(null==s?void 0:s.access_token)&&(await this._saveSession(s),await this._notifyAllSubscribers("recovery"==n.type?"PASSWORD_RECOVERY":"SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async signInWithSSO(n){var e,t,r;try{let a=null,i=null;return"pkce"===this.flowType&&([a,i]=await Oe(this.storage,this.storageKey)),await Fe(this.fetch,"POST",`${this.url}/sso`,{body:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},"providerId"in n?{provider_id:n.providerId}:null),"domain"in n?{domain:n.domain}:null),{redirect_to:null!==(t=null===(e=n.options)||void 0===e?void 0:e.redirectTo)&&void 0!==t?t:void 0}),(null===(r=null==n?void 0:n.options)||void 0===r?void 0:r.captchaToken)?{gotrue_meta_security:{captcha_token:n.options.captchaToken}}:null),{skip_http_redirect:!0,code_challenge:a,code_challenge_method:i}),headers:this.headers,xform:We})}catch(n){if(te(n))return{data:null,error:n};throw n}}async reauthenticate(){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._reauthenticate())}async _reauthenticate(){try{return await this._useSession(async n=>{const{data:{session:e},error:t}=n;if(t)throw t;if(!e)throw new oe;const{error:r}=await Fe(this.fetch,"GET",`${this.url}/reauthenticate`,{headers:this.headers,jwt:e.access_token});return{data:{user:null,session:null},error:r}})}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async resend(n){try{const e=`${this.url}/resend`;if("email"in n){const{email:t,type:r,options:a}=n,{error:i}=await Fe(this.fetch,"POST",e,{headers:this.headers,body:{email:t,type:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},redirectTo:null==a?void 0:a.emailRedirectTo});return{data:{user:null,session:null},error:i}}if("phone"in n){const{phone:t,type:r,options:a}=n,{data:i,error:o}=await Fe(this.fetch,"POST",e,{headers:this.headers,body:{phone:t,type:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}}});return{data:{user:null,session:null,messageId:null==i?void 0:i.message_id},error:o}}throw new le("You must provide either an email or phone number and a type")}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async getSession(){return await this.initializePromise,await this._acquireLock(-1,async()=>this._useSession(async n=>n))}async _acquireLock(n,e){this._debug("#_acquireLock","begin",n);try{if(this.lockAcquired){const n=this.pendingInLock.length?this.pendingInLock[this.pendingInLock.length-1]:Promise.resolve(),t=(async()=>(await n,await e()))();return this.pendingInLock.push((async()=>{try{await t}catch(n){}})()),t}return await this.lock(`lock:${this.storageKey}`,n,async()=>{this._debug("#_acquireLock","lock acquired for storage key",this.storageKey);try{this.lockAcquired=!0;const n=e();for(this.pendingInLock.push((async()=>{try{await n}catch(n){}})()),await n;this.pendingInLock.length;){const n=[...this.pendingInLock];await Promise.all(n),this.pendingInLock.splice(0,n.length)}return await n}finally{this._debug("#_acquireLock","lock released for storage key",this.storageKey),this.lockAcquired=!1}})}finally{this._debug("#_acquireLock","end")}}async _useSession(n){this._debug("#_useSession","begin");try{const e=await this.__loadSession();return await n(e)}finally{this._debug("#_useSession","end")}}async __loadSession(){this._debug("#__loadSession()","begin"),this.lockAcquired||this._debug("#__loadSession()","used outside of an acquired lock!",(new Error).stack);try{let n=null;const e=await _e(this.storage,this.storageKey);if(this._debug("#getSession()","session from storage",e),null!==e&&(this._isValidSession(e)?n=e:(this._debug("#getSession()","session from storage is not valid"),await this._removeSession())),!n)return{data:{session:null},error:null};const t=!!n.expires_at&&1e3*n.expires_at-Date.now()<9e4;if(this._debug("#__loadSession()",`session has${t?"":" not"} expired`,"expires_at",n.expires_at),!t){if(this.storage.isServer){let e=this.suppressGetSessionWarning;n=new Proxy(n,{get:(n,t,r)=>(e||"user"!==t||(console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."),e=!0,this.suppressGetSessionWarning=!0),Reflect.get(n,t,r))})}return{data:{session:n},error:null}}const{session:r,error:a}=await this._callRefreshToken(n.refresh_token);return a?{data:{session:null},error:a}:{data:{session:r},error:null}}finally{this._debug("#__loadSession()","end")}}async getUser(n){return n?await this._getUser(n):(await this.initializePromise,await this._acquireLock(-1,async()=>await this._getUser()))}async _getUser(n){try{return n?await Fe(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:n,xform:qe}):await this._useSession(async n=>{var e,t,r;const{data:a,error:i}=n;if(i)throw i;return(null===(e=a.session)||void 0===e?void 0:e.access_token)||this.hasCustomAuthorizationHeader?await Fe(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:null!==(r=null===(t=a.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0,xform:qe}):{data:{user:null},error:new oe}})}catch(n){if(te(n))return function(n){return te(n)&&"AuthSessionMissingError"===n.name}(n)&&(await this._removeSession(),await Ie(this.storage,`${this.storageKey}-code-verifier`)),{data:{user:null},error:n};throw n}}async updateUser(n,e={}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._updateUser(n,e))}async _updateUser(n,e={}){try{return await this._useSession(async t=>{const{data:r,error:a}=t;if(a)throw a;if(!r.session)throw new oe;const i=r.session;let o=null,s=null;"pkce"===this.flowType&&null!=n.email&&([o,s]=await Oe(this.storage,this.storageKey));const{data:l,error:c}=await Fe(this.fetch,"PUT",`${this.url}/user`,{headers:this.headers,redirectTo:null==e?void 0:e.emailRedirectTo,body:Object.assign(Object.assign({},n),{code_challenge:o,code_challenge_method:s}),jwt:i.access_token,xform:qe});if(c)throw c;return i.user=l.user,await this._saveSession(i),await this._notifyAllSubscribers("USER_UPDATED",i),{data:{user:i.user},error:null}})}catch(n){if(te(n))return{data:{user:null},error:n};throw n}}async setSession(n){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._setSession(n))}async _setSession(n){try{if(!n.access_token||!n.refresh_token)throw new oe;const e=Date.now()/1e3;let t=e,r=!0,a=null;const{payload:i}=Ne(n.access_token);if(i.exp&&(t=i.exp,r=t<=e),r){const{session:e,error:t}=await this._callRefreshToken(n.refresh_token);if(t)return{data:{user:null,session:null},error:t};if(!e)return{data:{user:null,session:null},error:null};a=e}else{const{data:r,error:i}=await this._getUser(n.access_token);if(i)throw i;a={access_token:n.access_token,refresh_token:n.refresh_token,user:r.user,token_type:"bearer",expires_in:t-e,expires_at:t},await this._saveSession(a),await this._notifyAllSubscribers("SIGNED_IN",a)}return{data:{user:a.user,session:a},error:null}}catch(n){if(te(n))return{data:{session:null,user:null},error:n};throw n}}async refreshSession(n){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._refreshSession(n))}async _refreshSession(n){try{return await this._useSession(async e=>{var t;if(!n){const{data:r,error:a}=e;if(a)throw a;n=null!==(t=r.session)&&void 0!==t?t:void 0}if(!(null==n?void 0:n.refresh_token))throw new oe;const{session:r,error:a}=await this._callRefreshToken(n.refresh_token);return a?{data:{user:null,session:null},error:a}:r?{data:{user:r.user,session:r},error:null}:{data:{user:null,session:null},error:null}})}catch(n){if(te(n))return{data:{user:null,session:null},error:n};throw n}}async _getSessionFromURL(n,e){try{if(!xe())throw new ce("No browser detected.");if(n.error||n.error_description||n.error_code)throw new ce(n.error_description||"Error in URL with unspecified error_description",{error:n.error||"unspecified_error",code:n.error_code||"unspecified_code"});switch(e){case"implicit":if("pkce"===this.flowType)throw new ue("Not a valid PKCE flow url.");break;case"pkce":if("implicit"===this.flowType)throw new ce("Not a valid implicit grant flow url.")}if("pkce"===e){if(this._debug("#_initialize()","begin","is PKCE flow",!0),!n.code)throw new ue("No code detected.");const{data:e,error:t}=await this._exchangeCodeForSession(n.code);if(t)throw t;const r=new URL(window.location.href);return r.searchParams.delete("code"),window.history.replaceState(window.history.state,"",r.toString()),{data:{session:e.session,redirectType:null},error:null}}const{provider_token:t,provider_refresh_token:r,access_token:a,refresh_token:i,expires_in:o,expires_at:s,token_type:l}=n;if(!(a&&o&&i&&l))throw new ce("No session defined in URL");const c=Math.round(Date.now()/1e3),u=parseInt(o);let d=c+u;s&&(d=parseInt(s));const A=d-c;1e3*A<=Vn&&console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${A}s, should have been closer to ${u}s`);const f=d-u;c-f>=120?console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale",f,d,c):c-f<0&&console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew",f,d,c);const{data:p,error:h}=await this._getUser(a);if(h)throw h;const g={provider_token:t,provider_refresh_token:r,access_token:a,expires_in:u,expires_at:d,refresh_token:i,token_type:l,user:p.user};return window.location.hash="",this._debug("#_getSessionFromURL()","clearing window.location.hash"),{data:{session:g,redirectType:n.type},error:null}}catch(n){if(te(n))return{data:{session:null,redirectType:null},error:n};throw n}}_isImplicitGrantCallback(n){return Boolean(n.access_token||n.error_description)}async _isPKCECallback(n){const e=await _e(this.storage,`${this.storageKey}-code-verifier`);return!(!n.code||!e)}async signOut(n={scope:"global"}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._signOut(n))}async _signOut({scope:n}={scope:"global"}){return await this._useSession(async e=>{var t;const{data:r,error:a}=e;if(a)return{error:a};const i=null===(t=r.session)||void 0===t?void 0:t.access_token;if(i){const{error:e}=await this.admin.signOut(i,n);if(e&&(!function(n){return te(n)&&"AuthApiError"===n.name}(e)||404!==e.status&&401!==e.status&&403!==e.status))return{error:e}}return"others"!==n&&(await this._removeSession(),await Ie(this.storage,`${this.storageKey}-code-verifier`)),{error:null}})}onAuthStateChange(n){const e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){const e=16*Math.random()|0;return("x"==n?e:3&e|8).toString(16)}),t={id:e,callback:n,unsubscribe:()=>{this._debug("#unsubscribe()","state change callback with id removed",e),this.stateChangeEmitters.delete(e)}};return this._debug("#onAuthStateChange()","registered callback with id",e),this.stateChangeEmitters.set(e,t),(async()=>{await this.initializePromise,await this._acquireLock(-1,async()=>{this._emitInitialSession(e)})})(),{data:{subscription:t}}}async _emitInitialSession(n){return await this._useSession(async e=>{var t,r;try{const{data:{session:r},error:a}=e;if(a)throw a;await(null===(t=this.stateChangeEmitters.get(n))||void 0===t?void 0:t.callback("INITIAL_SESSION",r)),this._debug("INITIAL_SESSION","callback id",n,"session",r)}catch(e){await(null===(r=this.stateChangeEmitters.get(n))||void 0===r?void 0:r.callback("INITIAL_SESSION",null)),this._debug("INITIAL_SESSION","callback id",n,"error",e),console.error(e)}})}async resetPasswordForEmail(n,e={}){let t=null,r=null;"pkce"===this.flowType&&([t,r]=await Oe(this.storage,this.storageKey,!0));try{return await Fe(this.fetch,"POST",`${this.url}/recover`,{body:{email:n,code_challenge:t,code_challenge_method:r,gotrue_meta_security:{captcha_token:e.captchaToken}},headers:this.headers,redirectTo:e.redirectTo})}catch(n){if(te(n))return{data:null,error:n};throw n}}async getUserIdentities(){var n;try{const{data:e,error:t}=await this.getUser();if(t)throw t;return{data:{identities:null!==(n=e.user.identities)&&void 0!==n?n:[]},error:null}}catch(n){if(te(n))return{data:null,error:n};throw n}}async linkIdentity(n){var e;try{const{data:t,error:r}=await this._useSession(async e=>{var t,r,a,i,o;const{data:s,error:l}=e;if(l)throw l;const c=await this._getUrlForProvider(`${this.url}/user/identities/authorize`,n.provider,{redirectTo:null===(t=n.options)||void 0===t?void 0:t.redirectTo,scopes:null===(r=n.options)||void 0===r?void 0:r.scopes,queryParams:null===(a=n.options)||void 0===a?void 0:a.queryParams,skipBrowserRedirect:!0});return await Fe(this.fetch,"GET",c,{headers:this.headers,jwt:null!==(o=null===(i=s.session)||void 0===i?void 0:i.access_token)&&void 0!==o?o:void 0})});if(r)throw r;return xe()&&!(null===(e=n.options)||void 0===e?void 0:e.skipBrowserRedirect)&&window.location.assign(null==t?void 0:t.url),{data:{provider:n.provider,url:null==t?void 0:t.url},error:null}}catch(e){if(te(e))return{data:{provider:n.provider,url:null},error:e};throw e}}async unlinkIdentity(n){try{return await this._useSession(async e=>{var t,r;const{data:a,error:i}=e;if(i)throw i;return await Fe(this.fetch,"DELETE",`${this.url}/user/identities/${n.identity_id}`,{headers:this.headers,jwt:null!==(r=null===(t=a.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0})})}catch(n){if(te(n))return{data:null,error:n};throw n}}async _refreshAccessToken(n){const e=`#_refreshAccessToken(${n.substring(0,5)}...)`;this._debug(e,"begin");try{const a=Date.now();return await(t=async t=>(t>0&&await async function(n){return await new Promise(e=>{setTimeout(()=>e(null),n)})}(200*Math.pow(2,t-1)),this._debug(e,"refreshing attempt",t),await Fe(this.fetch,"POST",`${this.url}/token?grant_type=refresh_token`,{body:{refresh_token:n},headers:this.headers,xform:$e})),r=(n,e)=>{const t=200*Math.pow(2,n);return e&&Ae(e)&&Date.now()+t-a<Vn},new Promise((n,e)=>{(async()=>{for(let a=0;a<1/0;a++)try{const e=await t(a);if(!r(a,null))return void n(e)}catch(n){if(!r(a,n))return void e(n)}})()}))}catch(n){if(this._debug(e,"error",n),te(n))return{data:{session:null,user:null},error:n};throw n}finally{this._debug(e,"end")}var t,r}_isValidSession(n){return"object"==typeof n&&null!==n&&"access_token"in n&&"refresh_token"in n&&"expires_at"in n}async _handleProviderSignIn(n,e){const t=await this._getUrlForProvider(`${this.url}/authorize`,n,{redirectTo:e.redirectTo,scopes:e.scopes,queryParams:e.queryParams});return this._debug("#_handleProviderSignIn()","provider",n,"options",e,"url",t),xe()&&!e.skipBrowserRedirect&&window.location.assign(t),{data:{provider:n,url:t},error:null}}async _recoverAndRefresh(){var n;const e="#_recoverAndRefresh()";this._debug(e,"begin");try{const t=await _e(this.storage,this.storageKey);if(this._debug(e,"session from storage",t),!this._isValidSession(t))return this._debug(e,"session is not valid"),void(null!==t&&await this._removeSession());const r=1e3*(null!==(n=t.expires_at)&&void 0!==n?n:1/0)-Date.now()<9e4;if(this._debug(e,`session has${r?"":" not"} expired with margin of 90000s`),r){if(this.autoRefreshToken&&t.refresh_token){const{error:n}=await this._callRefreshToken(t.refresh_token);n&&(console.error(n),Ae(n)||(this._debug(e,"refresh failed with a non-retryable error, removing the session",n),await this._removeSession()))}}else await this._notifyAllSubscribers("SIGNED_IN",t)}catch(n){return this._debug(e,"error",n),void console.error(n)}finally{this._debug(e,"end")}}async _callRefreshToken(n){var e,t;if(!n)throw new oe;if(this.refreshingDeferred)return this.refreshingDeferred.promise;const r=`#_callRefreshToken(${n.substring(0,5)}...)`;this._debug(r,"begin");try{this.refreshingDeferred=new ze;const{data:e,error:t}=await this._refreshAccessToken(n);if(t)throw t;if(!e.session)throw new oe;await this._saveSession(e.session),await this._notifyAllSubscribers("TOKEN_REFRESHED",e.session);const r={session:e.session,error:null};return this.refreshingDeferred.resolve(r),r}catch(n){if(this._debug(r,"error",n),te(n)){const t={session:null,error:n};return Ae(n)||await this._removeSession(),null===(e=this.refreshingDeferred)||void 0===e||e.resolve(t),t}throw null===(t=this.refreshingDeferred)||void 0===t||t.reject(n),n}finally{this.refreshingDeferred=null,this._debug(r,"end")}}async _notifyAllSubscribers(n,e,t=!0){const r=`#_notifyAllSubscribers(${n})`;this._debug(r,"begin",e,`broadcast = ${t}`);try{this.broadcastChannel&&t&&this.broadcastChannel.postMessage({event:n,session:e});const r=[],a=Array.from(this.stateChangeEmitters.values()).map(async t=>{try{await t.callback(n,e)}catch(n){r.push(n)}});if(await Promise.all(a),r.length>0){for(let n=0;n<r.length;n+=1)console.error(r[n]);throw r[0]}}finally{this._debug(r,"end")}}async _saveSession(n){this._debug("#_saveSession()",n),this.suppressGetSessionWarning=!0,await Se(this.storage,this.storageKey,n)}async _removeSession(){this._debug("#_removeSession()"),await Ie(this.storage,this.storageKey),await this._notifyAllSubscribers("SIGNED_OUT",null)}_removeVisibilityChangedCallback(){this._debug("#_removeVisibilityChangedCallback()");const n=this.visibilityChangedCallback;this.visibilityChangedCallback=null;try{n&&xe()&&(null===window||void 0===window?void 0:window.removeEventListener)&&window.removeEventListener("visibilitychange",n)}catch(n){console.error("removing visibilitychange callback failed",n)}}async _startAutoRefresh(){await this._stopAutoRefresh(),this._debug("#_startAutoRefresh()");const n=setInterval(()=>this._autoRefreshTokenTick(),Vn);this.autoRefreshTicker=n,n&&"object"==typeof n&&"function"==typeof n.unref?n.unref():"undefined"!=typeof Deno&&"function"==typeof Deno.unrefTimer&&Deno.unrefTimer(n),setTimeout(async()=>{await this.initializePromise,await this._autoRefreshTokenTick()},0)}async _stopAutoRefresh(){this._debug("#_stopAutoRefresh()");const n=this.autoRefreshTicker;this.autoRefreshTicker=null,n&&clearInterval(n)}async startAutoRefresh(){this._removeVisibilityChangedCallback(),await this._startAutoRefresh()}async stopAutoRefresh(){this._removeVisibilityChangedCallback(),await this._stopAutoRefresh()}async _autoRefreshTokenTick(){this._debug("#_autoRefreshTokenTick()","begin");try{await this._acquireLock(0,async()=>{try{const n=Date.now();try{return await this._useSession(async e=>{const{data:{session:t}}=e;if(!t||!t.refresh_token||!t.expires_at)return void this._debug("#_autoRefreshTokenTick()","no session");const r=Math.floor((1e3*t.expires_at-n)/Vn);this._debug("#_autoRefreshTokenTick()",`access token expires in ${r} ticks, a tick lasts 30000ms, refresh threshold is 3 ticks`),r<=3&&await this._callRefreshToken(t.refresh_token)})}catch(n){console.error("Auto refresh tick failed with error. This is likely a transient error.",n)}}finally{this._debug("#_autoRefreshTokenTick()","end")}})}catch(n){if(!(n.isAcquireTimeout||n instanceof Xe))throw n;this._debug("auto refresh token tick lock not available")}}async _handleVisibilityChange(){if(this._debug("#_handleVisibilityChange()"),!xe()||!(null===window||void 0===window?void 0:window.addEventListener))return this.autoRefreshToken&&this.startAutoRefresh(),!1;try{this.visibilityChangedCallback=async()=>await this._onVisibilityChanged(!1),null===window||void 0===window||window.addEventListener("visibilitychange",this.visibilityChangedCallback),await this._onVisibilityChanged(!0)}catch(n){console.error("_handleVisibilityChange",n)}}async _onVisibilityChanged(n){const e=`#_onVisibilityChanged(${n})`;this._debug(e,"visibilityState",document.visibilityState),"visible"===document.visibilityState?(this.autoRefreshToken&&this._startAutoRefresh(),n||(await this.initializePromise,await this._acquireLock(-1,async()=>{"visible"===document.visibilityState?await this._recoverAndRefresh():this._debug(e,"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting")}))):"hidden"===document.visibilityState&&this.autoRefreshToken&&this._stopAutoRefresh()}async _getUrlForProvider(n,e,t){const r=[`provider=${encodeURIComponent(e)}`];if((null==t?void 0:t.redirectTo)&&r.push(`redirect_to=${encodeURIComponent(t.redirectTo)}`),(null==t?void 0:t.scopes)&&r.push(`scopes=${encodeURIComponent(t.scopes)}`),"pkce"===this.flowType){const[n,e]=await Oe(this.storage,this.storageKey),t=new URLSearchParams({code_challenge:`${encodeURIComponent(n)}`,code_challenge_method:`${encodeURIComponent(e)}`});r.push(t.toString())}if(null==t?void 0:t.queryParams){const n=new URLSearchParams(t.queryParams);r.push(n.toString())}return(null==t?void 0:t.skipBrowserRedirect)&&r.push(`skip_http_redirect=${t.skipBrowserRedirect}`),`${n}?${r.join("&")}`}async _unenroll(n){try{return await this._useSession(async e=>{var t;const{data:r,error:a}=e;return a?{data:null,error:a}:await Fe(this.fetch,"DELETE",`${this.url}/factors/${n.factorId}`,{headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(n){if(te(n))return{data:null,error:n};throw n}}async _enroll(n){try{return await this._useSession(async e=>{var t,r;const{data:a,error:i}=e;if(i)return{data:null,error:i};const o=Object.assign({friendly_name:n.friendlyName,factor_type:n.factorType},"phone"===n.factorType?{phone:n.phone}:{issuer:n.issuer}),{data:s,error:l}=await Fe(this.fetch,"POST",`${this.url}/factors`,{body:o,headers:this.headers,jwt:null===(t=null==a?void 0:a.session)||void 0===t?void 0:t.access_token});return l?{data:null,error:l}:("totp"===n.factorType&&(null===(r=null==s?void 0:s.totp)||void 0===r?void 0:r.qr_code)&&(s.totp.qr_code=`data:image/svg+xml;utf-8,${s.totp.qr_code}`),{data:s,error:null})})}catch(n){if(te(n))return{data:null,error:n};throw n}}async _verify(n){return this._acquireLock(-1,async()=>{try{return await this._useSession(async e=>{var t;const{data:r,error:a}=e;if(a)return{data:null,error:a};const{data:i,error:o}=await Fe(this.fetch,"POST",`${this.url}/factors/${n.factorId}/verify`,{body:{code:n.code,challenge_id:n.challengeId},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token});return o?{data:null,error:o}:(await this._saveSession(Object.assign({expires_at:Math.round(Date.now()/1e3)+i.expires_in},i)),await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED",i),{data:i,error:o})})}catch(n){if(te(n))return{data:null,error:n};throw n}})}async _challenge(n){return this._acquireLock(-1,async()=>{try{return await this._useSession(async e=>{var t;const{data:r,error:a}=e;return a?{data:null,error:a}:await Fe(this.fetch,"POST",`${this.url}/factors/${n.factorId}/challenge`,{body:{channel:n.channel},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(n){if(te(n))return{data:null,error:n};throw n}})}async _challengeAndVerify(n){const{data:e,error:t}=await this._challenge({factorId:n.factorId});return t?{data:null,error:t}:await this._verify({factorId:n.factorId,challengeId:e.id,code:n.code})}async _listFactors(){const{data:{user:n},error:e}=await this.getUser();if(e)return{data:null,error:e};const t=(null==n?void 0:n.factors)||[],r=t.filter(n=>"totp"===n.factor_type&&"verified"===n.status),a=t.filter(n=>"phone"===n.factor_type&&"verified"===n.status);return{data:{all:t,totp:r,phone:a},error:null}}async _getAuthenticatorAssuranceLevel(){return this._acquireLock(-1,async()=>await this._useSession(async n=>{var e,t;const{data:{session:r},error:a}=n;if(a)return{data:null,error:a};if(!r)return{data:{currentLevel:null,nextLevel:null,currentAuthenticationMethods:[]},error:null};const{payload:i}=Ne(r.access_token);let o=null;i.aal&&(o=i.aal);let s=o;return(null!==(t=null===(e=r.user.factors)||void 0===e?void 0:e.filter(n=>"verified"===n.status))&&void 0!==t?t:[]).length>0&&(s="aal2"),{data:{currentLevel:o,nextLevel:s,currentAuthenticationMethods:i.amr||[]},error:null}}))}async fetchJwk(n,e={keys:[]}){let t=e.keys.find(e=>e.kid===n);if(t)return t;if(t=this.jwks.keys.find(e=>e.kid===n),t&&this.jwks_cached_at+6e5>Date.now())return t;const{data:r,error:a}=await Fe(this.fetch,"GET",`${this.url}/.well-known/jwks.json`,{headers:this.headers});if(a)throw a;if(!r.keys||0===r.keys.length)throw new pe("JWKS is empty");if(this.jwks=r,this.jwks_cached_at=Date.now(),t=r.keys.find(e=>e.kid===n),!t)throw new pe("No matching signing key found in JWKS");return t}async getClaims(n,e={keys:[]}){try{let t=n;if(!t){const{data:n,error:e}=await this.getSession();if(e||!n.session)return{data:null,error:e};t=n.session.access_token}const{header:r,payload:a,signature:i,raw:{header:o,payload:s}}=Ne(t);if(function(n){if(!n)throw new Error("Missing exp claim");if(n<=Math.floor(Date.now()/1e3))throw new Error("JWT has expired")}(a.exp),!r.kid||"HS256"===r.alg||!("crypto"in globalThis)||!("subtle"in globalThis.crypto)){const{error:n}=await this.getUser(t);if(n)throw n;return{data:{claims:a,header:r,signature:i},error:null}}const l=function(n){switch(n){case"RS256":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"ES256":return{name:"ECDSA",namedCurve:"P-256",hash:{name:"SHA-256"}};default:throw new Error("Invalid alg claim")}}(r.alg),c=await this.fetchJwk(r.kid,e),u=await crypto.subtle.importKey("jwk",c,l,!0,["verify"]);if(!await crypto.subtle.verify(l,u,i,function(n){const e=[];return function(n,e){for(let t=0;t<n.length;t+=1){let r=n.charCodeAt(t);if(r>55295&&r<=56319){const e=1024*(r-55296)&65535;r=65536+(n.charCodeAt(t+1)-56320&65535|e),t+=1}Ce(r,e)}}(n,n=>e.push(n)),new Uint8Array(e)}(`${o}.${s}`)))throw new pe("Invalid JWT signature");return{data:{claims:a,header:r,signature:i},error:null}}catch(n){if(te(n))return{data:null,error:n};throw n}}}at.nextInstanceID=0;const it=at;class ot extends it{constructor(n){super(n)}}class st{constructor(n,e,t){var r,a,i;if(this.supabaseUrl=n,this.supabaseKey=e,!n)throw new Error("supabaseUrl is required.");if(!e)throw new Error("supabaseKey is required.");const o=(s=n).endsWith("/")?s:s+"/";var s;const l=new URL(o);this.realtimeUrl=new URL("realtime/v1",l),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",l),this.storageUrl=new URL("storage/v1",l),this.functionsUrl=new URL("functions/v1",l);const c=`sb-${l.hostname.split(".")[0]}-auth-token`,u=function(n,e){var t,r;const{db:a,auth:i,realtime:o,global:s}=n,{db:l,auth:c,realtime:u,global:d}=e,A={db:Object.assign(Object.assign({},l),a),auth:Object.assign(Object.assign({},c),i),realtime:Object.assign(Object.assign({},u),o),global:Object.assign(Object.assign(Object.assign({},d),s),{headers:Object.assign(Object.assign({},null!==(t=null==d?void 0:d.headers)&&void 0!==t?t:{}),null!==(r=null==s?void 0:s.headers)&&void 0!==r?r:{})}),accessToken:()=>{return n=this,e=void 0,r=function*(){return""},new((t=void 0)||(t=Promise))(function(a,i){function o(n){try{l(r.next(n))}catch(n){i(n)}}function s(n){try{l(r.throw(n))}catch(n){i(n)}}function l(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t(function(n){n(e)})).then(o,s)}l((r=r.apply(n,e||[])).next())});var n,e,t,r}};return n.accessToken?A.accessToken=n.accessToken:delete A.accessToken,A}(null!=t?t:{},{db:$n,realtime:qn,auth:Object.assign(Object.assign({},Yn),{storageKey:c}),global:Fn});this.storageKey=null!==(r=u.auth.storageKey)&&void 0!==r?r:"",this.headers=null!==(a=u.global.headers)&&void 0!==a?a:{},u.accessToken?(this.accessToken=u.accessToken,this.auth=new Proxy({},{get:(n,e)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(e)} is not possible`)}})):this.auth=this._initSupabaseAuthClient(null!==(i=u.auth)&&void 0!==i?i:{},this.headers,u.global.fetch),this.fetch=Hn(e,this._getAccessToken.bind(this),u.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},u.realtime)),this.rest=new L(new URL("rest/v1",l).href,{headers:this.headers,schema:u.db.schema,fetch:this.fetch}),u.accessToken||this._listenForAuthEvents()}get functions(){return new P(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}get storage(){return new Mn(this.storageUrl.href,this.headers,this.fetch)}from(n){return this.rest.from(n)}schema(n){return this.rest.schema(n)}rpc(n,e={},t={}){return this.rest.rpc(n,e,t)}channel(n,e={config:{}}){return this.realtime.channel(n,e)}getChannels(){return this.realtime.getChannels()}removeChannel(n){return this.realtime.removeChannel(n)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var n,e,t,r,a,i;return t=this,r=void 0,i=function*(){if(this.accessToken)return yield this.accessToken();const{data:t}=yield this.auth.getSession();return null!==(e=null===(n=t.session)||void 0===n?void 0:n.access_token)&&void 0!==e?e:null},new((a=void 0)||(a=Promise))(function(n,e){function o(n){try{l(i.next(n))}catch(n){e(n)}}function s(n){try{l(i.throw(n))}catch(n){e(n)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a(function(n){n(t)})).then(o,s)}l((i=i.apply(t,r||[])).next())})}_initSupabaseAuthClient({autoRefreshToken:n,persistSession:e,detectSessionInUrl:t,storage:r,storageKey:a,flowType:i,lock:o,debug:s},l,c){const u={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new ot({url:this.authUrl.href,headers:Object.assign(Object.assign({},u),l),storageKey:a,autoRefreshToken:n,persistSession:e,detectSessionInUrl:t,storage:r,flowType:i,lock:o,debug:s,fetch:c,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(n){return new vn(this.realtimeUrl.href,Object.assign(Object.assign({},n),{params:Object.assign({apikey:this.supabaseKey},null==n?void 0:n.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((n,e)=>{this._handleTokenChanged(n,"CLIENT",null==e?void 0:e.access_token)})}_handleTokenChanged(n,e,t){"TOKEN_REFRESHED"!==n&&"SIGNED_IN"!==n||this.changedAccessToken===t?"SIGNED_OUT"===n&&(this.realtime.setAuth(),"STORAGE"==e&&this.auth.signOut(),this.changedAccessToken=void 0):this.changedAccessToken=t}}function lt(n){return lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},lt(n)}function ct(n,e,t){return(e=function(n){var e=function(n){if("object"!=lt(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=lt(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==lt(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function ut(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return dt(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(dt(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,dt(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,dt(d,"constructor",c),dt(c,"constructor",l),l.displayName="GeneratorFunction",dt(c,a,"GeneratorFunction"),dt(d),dt(d,a,"Generator"),dt(d,r,function(){return this}),dt(d,"toString",function(){return"[object Generator]"}),(ut=function(){return{w:i,m:A}})()}function dt(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}dt=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){dt(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},dt(n,e,t,r)}function At(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function ft(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){At(i,r,a,o,s,"next",n)}function s(n){At(i,r,a,o,s,"throw",n)}o(void 0)})}}var pt=((n,e,t)=>new st("https://tpjnyiyvpyzzbzhajbjh.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRwam55aXl2cHl6emJ6aGFqYmpoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE2NDA1NTQsImV4cCI6MjA2NzIxNjU1NH0.cflFdHytlTUA_H_AP7E3Kry9-S-xw45pIRoJQtfk4AE",t))(0,0,{auth:{storage:{getItem:function(n){return ft(ut().m(function e(){var t;return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,chrome.storage.local.get(n);case 1:return t=e.v,e.a(2,t[n]||null)}},e)}))()},setItem:function(n,e){return ft(ut().m(function t(){return ut().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,chrome.storage.local.set(ct({},n,e));case 1:return t.a(2)}},t)}))()},removeItem:function(n){return ft(ut().m(function e(){return ut().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,chrome.storage.local.remove(n);case 1:return e.a(2)}},e)}))()}},autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0}});function ht(n){return ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},ht(n)}function gt(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function mt(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?gt(Object(t),!0).forEach(function(e){vt(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):gt(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function vt(n,e,t){return(e=jt(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function bt(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return yt(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(yt(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,yt(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,yt(d,"constructor",c),yt(c,"constructor",l),l.displayName="GeneratorFunction",yt(c,a,"GeneratorFunction"),yt(d),yt(d,a,"Generator"),yt(d,r,function(){return this}),yt(d,"toString",function(){return"[object Generator]"}),(bt=function(){return{w:i,m:A}})()}function yt(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}yt=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){yt(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},yt(n,e,t,r)}function Ct(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||Bt(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Bt(n,e){if(n){if("string"==typeof n)return Et(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Et(n,e):void 0}}function Et(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function xt(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function wt(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){xt(i,r,a,o,s,"next",n)}function s(n){xt(i,r,a,o,s,"throw",n)}o(void 0)})}}function kt(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,jt(r.key),r)}}function jt(n){var e=function(n){if("object"!=ht(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=ht(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==ht(e)?e:e+""}var St=new(function(){return n=function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)},e=[{key:"getData",value:(R=wt(bt().m(function n(){var e,t,r,a,i,o,s,l,c,u,d,A,f,p,h=this;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(e=n.v,t=e.data,!e.error&&t.session){n.n=2;break}return n.a(2,this.getDefaultData());case 2:return r=t.session.user,console.log("Fetching data for user:",r.id),n.n=3,Promise.all([pt.from("links").select("*").eq("user_id",r.id),pt.from("collections").select("*").eq("user_id",r.id)]);case 3:return a=n.v,i=Ct(a,2),o=i[0],s=i[1],o.error&&console.error("Error fetching links:",o.error),s.error&&console.error("Error fetching collections:",s.error),l=(o.data||[]).map(function(n){return console.log("Storage: getData highlights for link",n.id,n.highlights),{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:h.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain}}),c=(s.data||[]).map(function(n){return{id:n.id,name:n.name,description:n.description,color:n.color,createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at)}}),d=l,A=c,n.n=4,this.getSmartCollections();case 4:return f=n.v,p=this.getDefaultCategories(),u={links:d,collections:A,smartCollections:f,categories:p,settings:{defaultCategory:"general",autoSummarize:!0,enableSmartCollections:!0}},console.log("Data fetched from Supabase:",u),n.a(2,u)}},n,this)})),function(){return R.apply(this,arguments)})},{key:"addLink",value:(L=wt(bt().m(function n(e){var t,r,a,i,o,s,l,c;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(r=n.v,a=r.data,i=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return console.error("User not logged in"),n.a(2,{success:!1,error:"User not logged in."});case 2:return o={user_id:i.id,collection_id:e.collectionId||null,url:e.url,title:e.title,favicon:e.favicon,domain:e.domain,user_note:e.userNote,ai_summary:e.aiSummary,category:e.category,is_in_inbox:e.isInInbox||!1,highlights:e.highlights?JSON.stringify(e.highlights):null},console.log("Storage: addLink dbLink.highlights:",o.highlights),n.n=3,pt.from("links").insert(o).select("id").single();case 3:if(s=n.v,l=s.data,!(c=s.error)){n.n=4;break}return console.error("Supabase addLink error:",c),n.a(2,{success:!1,error:c.message||"Database error occurred."});case 4:return n.a(2,{success:!0,linkId:l.id})}},n)})),function(n){return L.apply(this,arguments)})},{key:"updateLink",value:(D=wt(bt().m(function n(e,t){var r,a,i;return bt().w(function(n){for(;;)switch(n.n){case 0:return r=mt(mt({},t),{},{updated_at:new Date}),void 0!==t.highlights&&(r.highlights=t.highlights?JSON.stringify(t.highlights):null),delete r.collectionId,delete r.userNote,delete r.aiSummary,delete r.isInInbox,delete r.createdAt,delete r.updatedAt,void 0!==t.collectionId&&(r.collection_id=t.collectionId),void 0!==t.userNote&&(r.user_note=t.userNote),void 0!==t.aiSummary&&(r.ai_summary=t.aiSummary),void 0!==t.isInInbox&&(r.is_in_inbox=t.isInInbox),console.log("Storage: updateLink dbUpdates.highlights:",r.highlights),n.n=1,pt.from("links").update(r).eq("id",e);case 1:if(a=n.v,!(i=a.error)){n.n=2;break}throw i;case 2:return n.a(2)}},n)})),function(n,e){return D.apply(this,arguments)})},{key:"deleteLink",value:(P=wt(bt().m(function n(e){var t,r;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.from("links").delete().eq("id",e);case 1:if(t=n.v,!(r=t.error)){n.n=2;break}throw r;case 2:return n.a(2)}},n)})),function(n){return P.apply(this,arguments)})},{key:"addCollection",value:(O=wt(bt().m(function n(e){var t,r,a,i,o,s,l;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(r=n.v,a=r.data,i=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}throw new Error("User not logged in.");case 2:return o={user_id:i.id,name:e.name,description:e.description,color:e.color},n.n=3,pt.from("collections").insert(o);case 3:if(s=n.v,!(l=s.error)){n.n=4;break}throw l;case 4:return n.a(2)}},n)})),function(n){return O.apply(this,arguments)})},{key:"updateCollection",value:(T=wt(bt().m(function n(e,t){var r,a;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.from("collections").update(mt(mt({},t),{},{updatedAt:new Date})).eq("id",e);case 1:if(r=n.v,!(a=r.error)){n.n=2;break}throw a;case 2:return n.a(2)}},n)})),function(n,e){return T.apply(this,arguments)})},{key:"deleteCollection",value:(N=wt(bt().m(function n(e){var t,r;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.from("collections").delete().eq("id",e);case 1:if(t=n.v,!(r=t.error)){n.n=2;break}throw r;case 2:return n.a(2)}},n)})),function(n){return N.apply(this,arguments)})},{key:"searchLinks",value:(z=wt(bt().m(function n(e){var t,r,a,i,o,s,l,c,u=this;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(r=n.v,a=r.data,i=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return console.error("User not logged in"),n.a(2,[]);case 2:if(e.trim()){n.n=3;break}return n.a(2,[]);case 3:return n.p=3,n.n=4,pt.rpc("search_user_links",{search_query:e.trim(),user_uuid:i.id,result_limit:50});case 4:if(o=n.v,s=o.data,!(l=o.error)){n.n=5;break}return console.error("Search error:",l),n.a(2,[]);case 5:return n.a(2,(s||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:u.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain,searchRank:n.rank,searchHeadline:n.headline}}));case 6:return n.p=6,c=n.v,console.error("Search failed:",c),n.a(2,[])}},n,null,[[3,6]])})),function(n){return z.apply(this,arguments)})},{key:"getUserTags",value:(I=wt(bt().m(function n(){var e,t,r,a,i,o,s,l;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(t=n.v,r=t.data,a=null===(e=r.session)||void 0===e?void 0:e.user){n.n=2;break}return console.error("User not logged in"),n.a(2,[]);case 2:return n.p=2,n.n=3,pt.rpc("get_user_tags_with_counts",{user_uuid:a.id});case 3:if(i=n.v,o=i.data,!(s=i.error)){n.n=4;break}return console.error("Error fetching user tags:",s),n.a(2,[]);case 4:return n.a(2,(o||[]).map(function(n){return{id:n.id,name:n.name,usageCount:n.usage_count||0}}));case 5:return n.p=5,l=n.v,console.error("Failed to get user tags:",l),n.a(2,[])}},n,null,[[2,5]])})),function(){return I.apply(this,arguments)})},{key:"getLinkTags",value:(_=wt(bt().m(function n(e){var t,r,a,i;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,pt.rpc("get_link_tags",{link_uuid:e});case 1:if(t=n.v,r=t.data,!(a=t.error)){n.n=2;break}return console.error("Error fetching link tags:",a),n.a(2,[]);case 2:return n.a(2,r||[]);case 3:return n.p=3,i=n.v,console.error("Failed to get link tags:",i),n.a(2,[])}},n,null,[[0,3]])})),function(n){return _.apply(this,arguments)})},{key:"addTagsToLink",value:(S=wt(bt().m(function n(e,t){var r,a,i,o,s,l,c;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(a=n.v,i=a.data,o=null===(r=i.session)||void 0===r?void 0:r.user){n.n=2;break}return n.a(2,{success:!1,error:"User not logged in."});case 2:return n.p=2,n.n=3,pt.rpc("add_tags_to_link",{link_uuid:e,tag_names:t,user_uuid:o.id});case 3:if(s=n.v,!(l=s.error)){n.n=4;break}return console.error("Error adding tags to link:",l),n.a(2,{success:!1,error:l.message||"Failed to add tags."});case 4:return n.a(2,{success:!0});case 5:return n.p=5,c=n.v,console.error("Failed to add tags to link:",c),n.a(2,{success:!1,error:c.message})}},n,null,[[2,5]])})),function(n,e){return S.apply(this,arguments)})},{key:"getLinksByTag",value:(j=wt(bt().m(function n(e){var t,r,a,i,o,s,l,c,u=this;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(r=n.v,a=r.data,i=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return console.error("User not logged in"),n.a(2,[]);case 2:return n.p=2,n.n=3,pt.rpc("get_links_by_tag",{user_uuid:i.id,tag_name:e});case 3:if(o=n.v,s=o.data,!(l=o.error)){n.n=4;break}return console.error("Error fetching links by tag:",l),n.a(2,[]);case 4:return n.a(2,(s||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:u.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain}}));case 5:return n.p=5,c=n.v,console.error("Failed to get links by tag:",c),n.a(2,[])}},n,null,[[2,5]])})),function(n){return j.apply(this,arguments)})},{key:"cleanupUnusedTags",value:(k=wt(bt().m(function n(){var e,t,r,a,i,o,s,l;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(t=n.v,r=t.data,a=null===(e=r.session)||void 0===e?void 0:e.user){n.n=2;break}return n.a(2,0);case 2:return n.p=2,n.n=3,pt.rpc("cleanup_unused_tags",{user_uuid:a.id});case 3:if(i=n.v,o=i.data,!(s=i.error)){n.n=4;break}return console.error("Error cleaning up unused tags:",s),n.a(2,0);case 4:return n.a(2,o||0);case 5:return n.p=5,l=n.v,console.error("Failed to cleanup unused tags:",l),n.a(2,0)}},n,null,[[2,5]])})),function(){return k.apply(this,arguments)})},{key:"moveToInbox",value:(w=wt(bt().m(function n(e){var t,r;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.from("links").update({is_in_inbox:!0,collection_id:null,updated_at:(new Date).toISOString()}).eq("id",e);case 1:if(t=n.v,!(r=t.error)){n.n=2;break}throw r;case 2:return n.a(2)}},n)})),function(n){return w.apply(this,arguments)})},{key:"moveFromInbox",value:(x=wt(bt().m(function n(e,t){var r,a;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).eq("id",e);case 1:if(r=n.v,!(a=r.error)){n.n=2;break}throw a;case 2:return n.a(2)}},n)})),function(n,e){return x.apply(this,arguments)})},{key:"getInboxLinks",value:(E=wt(bt().m(function n(){var e,t,r,a,i,o,s,l=this;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(t=n.v,r=t.data,a=null===(e=r.session)||void 0===e?void 0:e.user){n.n=2;break}return n.a(2,[]);case 2:return n.n=3,pt.from("links").select("*").eq("user_id",a.id).eq("is_in_inbox",!0).order("created_at",{ascending:!1});case 3:if(i=n.v,o=i.data,!(s=i.error)){n.n=4;break}return console.error("Error fetching inbox links:",s),n.a(2,[]);case 4:return n.a(2,(o||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,userNote:n.user_note||"",aiSummary:n.ai_summary,category:n.category,collectionId:n.collection_id,isInInbox:n.is_in_inbox||!1,highlights:l.parseHighlights(n.highlights),createdAt:new Date(n.created_at),updatedAt:new Date(n.updated_at),domain:n.domain}}))}},n)})),function(){return E.apply(this,arguments)})},{key:"bulkMoveFromInbox",value:(B=wt(bt().m(function n(e,t){var r,a;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).in("id",e);case 1:if(r=n.v,!(a=r.error)){n.n=2;break}throw a;case 2:return n.a(2)}},n)})),function(n,e){return B.apply(this,arguments)})},{key:"toggleCollectionSharing",value:(C=wt(bt().m(function n(e,t){var r,a,i,o,s,l,c,u,d;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(a=n.v,i=a.data,o=null===(r=i.session)||void 0===r?void 0:r.user){n.n=2;break}return n.a(2,{success:!1,message:"User not logged in."});case 2:return n.p=2,n.n=3,pt.rpc("toggle_collection_sharing",{collection_uuid:e,user_uuid:o.id,make_public:t});case 3:if(s=n.v,l=s.data,!(c=s.error)){n.n=4;break}return console.error("Error toggling collection sharing:",c),n.a(2,{success:!1,message:c.message||"Failed to update sharing settings."});case 4:return u=null==l?void 0:l[0],n.a(2,{success:(null==u?void 0:u.success)||!1,shareToken:null==u?void 0:u.share_token,message:(null==u?void 0:u.message)||"Sharing settings updated."});case 5:return n.p=5,d=n.v,console.error("Failed to toggle collection sharing:",d),n.a(2,{success:!1,message:d.message})}},n,null,[[2,5]])})),function(n,e){return C.apply(this,arguments)})},{key:"getCollectionSharingInfo",value:(y=wt(bt().m(function n(e){var t,r,a,i,o,s,l,c;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(r=n.v,a=r.data,i=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return n.a(2,null);case 2:return n.p=2,n.n=3,pt.from("collections").select("is_public, share_token, view_count").eq("id",e).eq("user_id",i.id).single();case 3:if(o=n.v,s=o.data,!(l=o.error)){n.n=4;break}return console.error("Error fetching collection sharing info:",l),n.a(2,null);case 4:return n.a(2,{isPublic:s.is_public||!1,shareToken:s.share_token,viewCount:s.view_count||0});case 5:return n.p=5,c=n.v,console.error("Failed to get collection sharing info:",c),n.a(2,null)}},n,null,[[2,5]])})),function(n){return y.apply(this,arguments)})},{key:"getSmartCollections",value:(b=wt(bt().m(function n(){var e;return bt().w(function(n){for(;;)if(0===n.n)return e=this.getDefaultSmartCollections(),n.a(2,e)},n,this)})),function(){return b.apply(this,arguments)})},{key:"generateAISmartCollections",value:(v=wt(bt().m(function n(e){var t,r,i;return bt().w(function(n){for(;;)switch(n.n){case 0:if(n.p=0,!(e.length>5)){n.n=3;break}return n.n=1,a.e(508).then(a.bind(a,508));case 1:return t=n.v,r=t.aiService,n.n=2,r.generateSmartCollectionSuggestions(e);case 2:return n.a(2,n.v);case 3:n.n=5;break;case 4:n.p=4,i=n.v,console.error("Failed to generate AI smart collection suggestions:",i);case 5:return n.a(2,[])}},n,null,[[0,4]])})),function(n){return v.apply(this,arguments)})},{key:"createSmartCollection",value:(m=wt(bt().m(function n(e){return bt().w(function(n){for(;;)switch(n.n){case 0:console.log("Creating smart collection:",e);case 1:return n.a(2)}},n)})),function(n){return m.apply(this,arguments)})},{key:"updateSmartCollection",value:(g=wt(bt().m(function n(e,t){return bt().w(function(n){for(;;)switch(n.n){case 0:console.log("Updating smart collection:",e,t);case 1:return n.a(2)}},n)})),function(n,e){return g.apply(this,arguments)})},{key:"deleteSmartCollection",value:(h=wt(bt().m(function n(e){return bt().w(function(n){for(;;)switch(n.n){case 0:console.log("Deleting smart collection:",e);case 1:return n.a(2)}},n)})),function(n){return h.apply(this,arguments)})},{key:"getSmartCollectionLinks",value:(p=wt(bt().m(function n(e){var t,r,a;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getSmartCollections();case 1:if(t=n.v,r=t.find(function(n){return n.id===e})){n.n=2;break}return n.a(2,[]);case 2:return n.n=3,this.getData();case 3:return a=n.v.links,n.a(2,this.filterLinksForSmartCollection(a,r))}},n,this)})),function(n){return p.apply(this,arguments)})},{key:"filterLinksForSmartCollection",value:function(n,e){var t,r,a,i,o=this,s=function(n){return function(n){if(Array.isArray(n))return Et(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Bt(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n);if(null!==(t=e.filters)&&void 0!==t&&t.dateRange){var l=e.filters.dateRange,c=l.start,u=l.end;s=s.filter(function(n){var e=n.createdAt;return!(c&&e<c||u&&e>u)})}switch(null!==(r=e.filters)&&void 0!==r&&null!==(r=r.categories)&&void 0!==r&&r.length&&(s=s.filter(function(n){return e.filters.categories.includes(n.category)})),null!==(a=e.filters)&&void 0!==a&&null!==(a=a.domains)&&void 0!==a&&a.length&&(s=s.filter(function(n){return e.filters.domains.some(function(e){return n.domain.includes(e)})})),null!==(i=e.filters)&&void 0!==i&&null!==(i=i.contentType)&&void 0!==i&&i.length&&(s=s.filter(function(n){var t=o.detectContentTypeFromDomain(n.domain);return e.filters.contentType.includes(t)})),e.id){case"recent-reads":return s.filter(function(n){return n.createdAt>=new Date(Date.now()-6048e5)}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()}).slice(0,20);case"ai-related":return s.filter(function(n){return o.isAIRelated(n)}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});case"unread":return s.filter(function(n){return!n.userNote||""===n.userNote.trim()}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});case"tutorials":return s.filter(function(n){return o.isTutorial(n)}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});case"github-repos":return s.filter(function(n){return n.domain.includes("github.com")}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()});default:return s}}},{key:"detectContentTypeFromDomain",value:function(n){return n.includes("youtube.com")||n.includes("vimeo.com")?"video":n.includes("github.com")?"tool":n.includes("docs.")||n.includes("documentation")?"documentation":n.includes("medium.com")||n.includes("blog")?"blog":n.includes("news")||n.includes("cnn.com")?"news":"article"}},{key:"isAIRelated",value:function(n){var e="".concat(n.title," ").concat(n.userNote," ").concat(n.aiSummary||"").toLowerCase();return["artificial intelligence","machine learning","deep learning","neural network","ai","ml","gpt","chatgpt","openai","tensorflow","pytorch","llm","natural language processing","nlp","computer vision","reinforcement learning"].some(function(n){return e.includes(n)})}},{key:"isTutorial",value:function(n){var e="".concat(n.title," ").concat(n.userNote).toLowerCase();return["tutorial","how to","guide","step by step","learn","course","introduction to","getting started","beginner","walkthrough"].some(function(n){return e.includes(n)})}},{key:"getDefaultSmartCollections",value:function(){var n=new Date;return[{id:"recent-reads",name:"📚 Recent Reads",description:"Links saved in the last 7 days",query:"created_at >= now() - interval '7 days'",isSystem:!0,autoUpdate:!0,icon:"📚",color:"#3b82f6",filters:{dateRange:{start:new Date(Date.now()-6048e5)}},createdAt:n,updatedAt:n},{id:"ai-related",name:"🤖 AI & Machine Learning",description:"Content related to artificial intelligence and machine learning",query:"title ILIKE '%ai%' OR title ILIKE '%machine learning%' OR title ILIKE '%neural%'",isSystem:!0,autoUpdate:!0,icon:"🤖",color:"#8b5cf6",createdAt:n,updatedAt:n},{id:"unread",name:"📖 To Read",description:"Links without notes (likely unread)",query:"user_note IS NULL OR user_note = ''",isSystem:!0,autoUpdate:!0,icon:"📖",color:"#f59e0b",createdAt:n,updatedAt:n},{id:"tutorials",name:"🎓 Tutorials & Guides",description:"Educational content and tutorials",query:"title ILIKE '%tutorial%' OR title ILIKE '%guide%' OR title ILIKE '%how to%'",isSystem:!0,autoUpdate:!0,icon:"🎓",color:"#10b981",createdAt:n,updatedAt:n},{id:"github-repos",name:"⭐ GitHub Repositories",description:"GitHub repositories and projects",query:"domain LIKE '%github.com%'",isSystem:!0,autoUpdate:!0,icon:"⭐",color:"#6b7280",filters:{domains:["github.com"]},createdAt:n,updatedAt:n}]}},{key:"getDefaultCategories",value:function(){return[{id:"general",name:"General",color:"#6b7280",isDefault:!0},{id:"work",name:"Work",color:"#3b82f6"},{id:"personal",name:"Personal",color:"#10b981"},{id:"learning",name:"Learning",color:"#f59e0b"}]}},{key:"getDefaultData",value:function(){return{links:[],collections:[],smartCollections:[],categories:this.getDefaultCategories(),settings:{defaultCategory:"general",autoSummarize:!0,enableSmartCollections:!0}}}},{key:"getLinkByUrl",value:(f=wt(bt().m(function n(e){var t,r,a,i,o,s,l;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.getSession();case 1:if(r=n.v,a=r.data,i=null===(t=a.session)||void 0===t?void 0:t.user){n.n=2;break}return n.a(2,null);case 2:return n.n=3,pt.from("links").select("*").eq("user_id",i.id).eq("url",e).single();case 3:if(o=n.v,s=o.data,!(l=o.error)){n.n=5;break}if("PGRST116"!==l.code){n.n=4;break}return n.a(2,null);case 4:throw l;case 5:return n.a(2,{id:s.id,url:s.url,title:s.title,favicon:s.favicon,userNote:s.user_note||"",aiSummary:s.ai_summary,category:s.category,collectionId:s.collection_id,isInInbox:s.is_in_inbox||!1,highlights:this.parseHighlights(s.highlights),createdAt:new Date(s.created_at),updatedAt:new Date(s.updated_at),domain:s.domain})}},n,this)})),function(n){return f.apply(this,arguments)})},{key:"parseHighlights",value:function(n){if(!n)return console.log("Storage: No highlights data found"),[];if("string"==typeof n)try{var e=JSON.parse(n),t=Array.isArray(e)?e:[];return console.log("Storage: Parsed highlights from JSON:",t.length,"highlights",t),t}catch(n){return console.warn("Failed to parse highlights JSON:",n),[]}return Array.isArray(n)?(console.log("Storage: Found highlights array:",n.length,"highlights",n),n):(console.log("Storage: Highlights data in unexpected format:",ht(n),n),[])}},{key:"logActivity",value:(A=wt(bt().m(function n(e,t,r,a){var i,o,s,l;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getActivities();case 1:return i=n.v,o={id:Date.now().toString(),type:e,linkId:t,collectionId:r,metadata:a,createdAt:new Date},i.push(o),s=i.slice(-1e3),n.n=2,chrome.storage.local.set({nest_activities:s});case 2:return n.n=3,this.updateStreaks(e);case 3:console.log("Activity logged:",o),n.n=5;break;case 4:n.p=4,l=n.v,console.error("Failed to log activity:",l);case 5:return n.a(2)}},n,this,[[0,4]])})),function(n,e,t,r){return A.apply(this,arguments)})},{key:"getActivities",value:(d=wt(bt().m(function n(){var e,t,r,a,i=arguments;return bt().w(function(n){for(;;)switch(n.n){case 0:return e=i.length>0&&void 0!==i[0]?i[0]:100,n.p=1,n.n=2,chrome.storage.local.get("nest_activities");case 2:return t=n.v,r=t.nest_activities||[],n.a(2,r.slice(-e).reverse());case 3:return n.p=3,a=n.v,console.error("Failed to get activities:",a),n.a(2,[])}},n,null,[[1,3]])})),function(){return d.apply(this,arguments)})},{key:"getActivityStats",value:(u=wt(bt().m(function n(){var e,t,r,a,i,o;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getActivities(1e3);case 1:return r=n.v,n.n=2,this.getStreaks();case 2:return a=n.v,i={totalSaves:r.filter(function(n){return"save"===n.type}).length,totalReads:r.filter(function(n){return"read"===n.type}).length,totalHighlights:r.filter(function(n){return"highlight"===n.type}).length,totalOrganizations:r.filter(function(n){return"organize"===n.type}).length,totalSearches:r.filter(function(n){return"search"===n.type}).length,activeDays:this.getUniqueDays(r).length,currentStreak:(null===(e=a.find(function(n){return"daily_save"===n.type}))||void 0===e?void 0:e.currentCount)||0,bestStreak:(null===(t=a.find(function(n){return"daily_save"===n.type}))||void 0===t?void 0:t.bestCount)||0,thisWeekActivity:this.getThisWeekActivity(r),lastActiveDate:r.length>0?new Date(r[0].createdAt):void 0},n.a(2,i);case 3:return n.p=3,o=n.v,console.error("Failed to get activity stats:",o),n.a(2,{totalSaves:0,totalReads:0,totalHighlights:0,totalOrganizations:0,totalSearches:0,activeDays:0,currentStreak:0,bestStreak:0,thisWeekActivity:0})}},n,this,[[0,3]])})),function(){return u.apply(this,arguments)})},{key:"getStreaks",value:(c=wt(bt().m(function n(){var e,t;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_streaks");case 1:return e=n.v,n.a(2,e.nest_streaks||[]);case 2:return n.p=2,t=n.v,console.error("Failed to get streaks:",t),n.a(2,[])}},n,null,[[0,2]])})),function(){return c.apply(this,arguments)})},{key:"updateStreaks",value:(l=wt(bt().m(function n(e){var t,r,a,i,o,s,l,c,u;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getStreaks();case 1:return t=n.v,r=(new Date).toDateString(),"save"===e&&((a=t.find(function(n){return"daily_save"===n.type}))||(a={id:"daily_save",type:"daily_save",currentCount:0,bestCount:0,lastActivityAt:new Date,createdAt:new Date},t.push(a)),i=new Date(a.lastActivityAt).toDateString(),o=new Date(Date.now()-864e5).toDateString(),i===r||(i===o?(a.currentCount++,a.lastActivityAt=new Date):(a.currentCount=1,a.lastActivityAt=new Date)),a.currentCount>a.bestCount&&(a.bestCount=a.currentCount)),"organize"===e&&((s=t.find(function(n){return"weekly_organize"===n.type}))||(s={id:"weekly_organize",type:"weekly_organize",currentCount:0,bestCount:0,lastActivityAt:new Date,createdAt:new Date},t.push(s)),l=this.getWeekNumber(new Date),c=this.getWeekNumber(new Date(s.lastActivityAt)),l===c||(l===c+1?(s.currentCount++,s.lastActivityAt=new Date):(s.currentCount=1,s.lastActivityAt=new Date)),s.currentCount>s.bestCount&&(s.bestCount=s.currentCount)),n.n=2,chrome.storage.local.set({nest_streaks:t});case 2:n.n=4;break;case 3:n.p=3,u=n.v,console.error("Failed to update streaks:",u);case 4:return n.a(2)}},n,this,[[0,3]])})),function(n){return l.apply(this,arguments)})},{key:"getUniqueDays",value:function(n){var e=new Set;return n.forEach(function(n){var t=new Date(n.createdAt).toDateString();e.add(t)}),Array.from(e)}},{key:"getThisWeekActivity",value:function(n){var e=new Date(Date.now()-6048e5);return n.filter(function(n){return new Date(n.createdAt)>=e}).length}},{key:"getWeekNumber",value:function(n){var e=new Date(n.getFullYear(),0,1);return Math.ceil(((n.getTime()-e.getTime())/864e5+e.getDay()+1)/7)}},{key:"shouldShowNudge",value:(s=wt(bt().m(function n(){var e,t,r,a,i,o;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,this.getActivityStats();case 1:return e=n.v,n.n=2,this.getActivities(50);case 2:if(t=n.v,r=(new Date).toDateString(),0!==t.filter(function(n){return new Date(n.createdAt).toDateString()===r&&"save"===n.type}).length){n.n=5;break}if(!(e.currentStreak>0)){n.n=3;break}return n.a(2,{show:!0,type:"streak_reminder",message:"You have a ".concat(e.currentStreak,"-day saving streak! Don't break it - save something today.")});case 3:if(!e.lastActiveDate){n.n=4;break}if(!((a=Math.floor((Date.now()-e.lastActiveDate.getTime())/864e5))>=3)){n.n=4;break}return n.a(2,{show:!0,type:"inactive_reminder",message:"Welcome back! You haven't saved anything in ".concat(a," days. Found something interesting?")});case 4:if(!((i=(new Date).getHours())>=10&&i<=20)){n.n=5;break}return n.a(2,{show:!0,type:"daily_reminder",message:"Discover something new today? Save it to Nest!"});case 5:return n.a(2,{show:!1});case 6:return n.p=6,o=n.v,console.error("Failed to check nudge status:",o),n.a(2,{show:!1})}},n,this,[[0,6]])})),function(){return s.apply(this,arguments)})}],t=[{key:"getPublicCollection",value:(o=wt(bt().m(function n(e){var t,r,a,i,o;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,pt.rpc("get_public_collection",{token:e});case 1:if(t=n.v,r=t.data,!(a=t.error)){n.n=2;break}return console.error("Error fetching public collection:",a),n.a(2,null);case 2:if(i=null==r?void 0:r[0]){n.n=3;break}return n.a(2,null);case 3:return n.a(2,{id:i.id,name:i.name,description:i.description,viewCount:i.view_count||0,createdAt:new Date(i.created_at),ownerEmail:i.owner_email});case 4:return n.p=4,o=n.v,console.error("Failed to get public collection:",o),n.a(2,null)}},n,null,[[0,4]])})),function(n){return o.apply(this,arguments)})},{key:"getPublicCollectionLinks",value:(i=wt(bt().m(function n(e){var t,r,a,i;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,pt.rpc("get_public_collection_links",{token:e});case 1:if(t=n.v,r=t.data,!(a=t.error)){n.n=2;break}return console.error("Error fetching public collection links:",a),n.a(2,[]);case 2:return n.a(2,(r||[]).map(function(n){return{id:n.id,url:n.url,title:n.title,favicon:n.favicon,domain:n.domain,userNote:n.user_note,aiSummary:n.ai_summary,category:n.category,createdAt:new Date(n.created_at),tags:n.tag_names||[]}}));case 3:return n.p=3,i=n.v,console.error("Failed to get public collection links:",i),n.a(2,[])}},n,null,[[0,3]])})),function(n){return i.apply(this,arguments)})},{key:"incrementViewCount",value:(r=wt(bt().m(function n(e){var t,r,a;return bt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,pt.rpc("increment_collection_views",{token:e});case 1:t=n.v,(r=t.error)&&console.error("Error incrementing view count:",r),n.n=3;break;case 2:n.p=2,a=n.v,console.error("Failed to increment view count:",a);case 3:return n.a(2)}},n,null,[[0,2]])})),function(n){return r.apply(this,arguments)})}],e&&kt(n.prototype,e),t&&kt(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e,t,r,i,o,s,l,c,u,d,A,f,p,h,g,m,v,b,y,C,B,E,x,w,k,j,S,_,I,z,N,T,O,P,D,L,R}());const _t=l("ExternalLink",[["path",{d:"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6",key:"a6xqqp"}],["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["line",{x1:"10",x2:"21",y1:"14",y2:"3",key:"18c3s4"}]]),It=l("MoreHorizontal",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]),zt=l("PenLine",[["path",{d:"M12 20h9",key:"t2du7b"}],["path",{d:"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z",key:"ymcmye"}]]),Nt=l("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);var Tt=a(848);function Ot(n){return function(n){if(Array.isArray(n))return Lt(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Dt(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pt(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||Dt(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Dt(n,e){if(n){if("string"==typeof n)return Lt(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Lt(n,e):void 0}}function Lt(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Rt=function(n){var e=n.selectedTags,t=n.availableTags,r=n.onTagsChange,a=n.placeholder,o=void 0===a?"Add tags...":a,s=n.maxTags,l=void 0===s?10:s,c=Pt((0,i.useState)(""),2),u=c[0],d=c[1],A=Pt((0,i.useState)(!1),2),f=A[0],h=A[1],g=Pt((0,i.useState)(-1),2),m=g[0],v=g[1],y=(0,i.useRef)(null),C=t.filter(function(n){return n.name.toLowerCase().includes(u.toLowerCase())&&!e.find(function(e){return e.name===n.name})}).slice(0,8),B=function(n){var t;e.length>=l||e.find(function(e){return e.name===n.name})||(r([].concat(Ot(e),[n])),d(""),h(!1),v(-1),null===(t=y.current)||void 0===t||t.focus())},E=function(n){var t;r(e.filter(function(e){return e.name!==n.name})),null===(t=y.current)||void 0===t||t.focus()},x=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]};return(0,Tt.jsxs)("div",{className:"tag-input-container",children:[(0,Tt.jsxs)("div",{className:"tag-input-wrapper",children:[e.map(function(n){return(0,Tt.jsxs)("div",{className:"tag-chip",style:{backgroundColor:x(n.name)},children:[(0,Tt.jsx)("span",{className:"tag-name",children:n.name}),(0,Tt.jsx)("button",{onClick:function(){return E(n)},className:"tag-remove",type:"button",title:"Remove ".concat(n.name," tag"),"aria-label":"Remove ".concat(n.name," tag"),children:(0,Tt.jsx)(b,{size:12})})]},n.name)}),(0,Tt.jsx)("input",{ref:y,type:"text",value:u,onChange:function(n){var e=n.target.value;d(e),h(e.length>0),v(-1)},onKeyDown:function(n){"Enter"===n.key?(n.preventDefault(),m>=0&&C[m]?B(C[m]):u.trim()&&function(n){var t;if(!(e.length>=l||e.find(function(e){return e.name.toLowerCase()===n.toLowerCase()}))){var a={id:"",name:n.toLowerCase()};r([].concat(Ot(e),[a])),d(""),h(!1),v(-1),null===(t=y.current)||void 0===t||t.focus()}}(u.trim())):"ArrowDown"===n.key?(n.preventDefault(),v(function(n){return n<C.length-1?n+1:n})):"ArrowUp"===n.key?(n.preventDefault(),v(function(n){return n>0?n-1:-1})):"Escape"===n.key?(h(!1),v(-1)):"Backspace"===n.key&&!u&&e.length>0&&E(e[e.length-1])},onFocus:function(){return h(u.length>0)},onBlur:function(){return setTimeout(function(){return h(!1)},150)},placeholder:0===e.length?o:"",className:"tag-input",disabled:e.length>=l}),e.length<l&&(0,Tt.jsx)("div",{className:"tag-input-icon",children:(0,Tt.jsx)(p,{size:14})})]}),f&&C.length>0&&(0,Tt.jsx)("div",{className:"tag-suggestions",children:C.map(function(n,e){return(0,Tt.jsxs)("button",{onClick:function(){return function(n){B(n)}(n)},className:"tag-suggestion ".concat(e===m?"focused":""),type:"button",children:[(0,Tt.jsx)("span",{className:"tag-suggestion-color",style:{backgroundColor:x(n.name)}}),(0,Tt.jsx)("span",{className:"tag-suggestion-name",children:n.name}),n.usageCount&&n.usageCount>0&&(0,Tt.jsxs)("span",{className:"tag-suggestion-count",children:["(",n.usageCount,")"]})]},n.id)})})]})};function Mt(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ut(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ut(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ut(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Ft=function(n){var e=n.highlight,t=n.onAddNote,r=n.onDelete,a=Mt((0,i.useState)(!1),2),o=a[0],s=a[1],l=Mt((0,i.useState)(e.userNote||""),2),c=l[0],u=l[1];return(0,Tt.jsxs)("div",{className:"highlight-card",children:[(0,Tt.jsxs)("div",{className:"highlight-content",children:[(0,Tt.jsxs)("div",{className:"highlight-text",children:[(0,Tt.jsx)("div",{className:"highlight-icon",children:(0,Tt.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,Tt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z",fill:"currentColor"})})}),(0,Tt.jsxs)("p",{className:"highlight-selected-text",children:['"',e.selectedText,'"']})]}),e.context&&e.context!==e.selectedText&&(0,Tt.jsx)("div",{className:"highlight-context",children:(0,Tt.jsxs)("p",{children:["Context: ",e.context]})}),e.userNote&&!o&&(0,Tt.jsx)("div",{className:"highlight-note",children:(0,Tt.jsx)("p",{children:e.userNote})}),o&&(0,Tt.jsxs)("div",{className:"highlight-note-form",children:[(0,Tt.jsx)("textarea",{value:c,onChange:function(n){return u(n.target.value)},placeholder:"Add your thoughts about this highlight...",autoFocus:!0}),(0,Tt.jsxs)("div",{className:"highlight-note-actions",children:[(0,Tt.jsx)("button",{onClick:function(){t&&t(e.id,c),s(!1)},className:"save-button",children:"Save"}),(0,Tt.jsx)("button",{onClick:function(){u(e.userNote||""),s(!1)},className:"cancel-button",children:"Cancel"})]})]})]}),(0,Tt.jsxs)("div",{className:"highlight-actions",children:[(0,Tt.jsx)("span",{className:"highlight-date",children:new Date(e.createdAt).toLocaleDateString()}),(0,Tt.jsxs)("div",{className:"highlight-buttons",children:[!o&&(0,Tt.jsx)("button",{onClick:function(){return s(!0)},className:"highlight-action-button",title:e.userNote?"Edit note":"Add note",children:(0,Tt.jsxs)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,Tt.jsx)("path",{d:"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,Tt.jsx)("path",{d:"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})}),r&&(0,Tt.jsx)("button",{onClick:function(){return r(e.id)},className:"highlight-action-button delete-button",title:"Delete highlight",children:(0,Tt.jsxs)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,Tt.jsx)("path",{d:"m18 6-12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,Tt.jsx)("path",{d:"m6 6 12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})})]})]})]})};function $t(n){return $t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},$t(n)}function Yt(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return qt(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(qt(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,qt(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,qt(d,"constructor",c),qt(c,"constructor",l),l.displayName="GeneratorFunction",qt(c,a,"GeneratorFunction"),qt(d),qt(d,a,"Generator"),qt(d,r,function(){return this}),qt(d,"toString",function(){return"[object Generator]"}),(Yt=function(){return{w:i,m:A}})()}function qt(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}qt=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){qt(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},qt(n,e,t,r)}function Wt(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Gt(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Wt(Object(t),!0).forEach(function(e){Ht(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Wt(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Ht(n,e,t){return(e=function(n){var e=function(n){if("object"!=$t(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=$t(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==$t(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Kt(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Vt(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Kt(i,r,a,o,s,"next",n)}function s(n){Kt(i,r,a,o,s,"throw",n)}o(void 0)})}}function Qt(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Zt(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Zt(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zt(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Jt=function(n){var e=n.link,t=n.collections,r=n.onUpdate,a=n.onDelete,o=n.onMoveToCollection,s=n.onAddNote,l=n.onTagsUpdated,c=Qt((0,i.useState)(!1),2),u=c[0],d=c[1],A=Qt((0,i.useState)(!1),2),f=A[0],p=A[1],h=Qt((0,i.useState)(!1),2),g=h[0],m=h[1],v=Qt((0,i.useState)(!1),2),b=v[0],y=v[1],B=Qt((0,i.useState)([]),2),E=B[0],x=B[1],w=Qt((0,i.useState)([]),2),k=(w[0],w[1]),j=Qt((0,i.useState)(!1),2),_=j[0],I=j[1];(0,i.useEffect)(function(){g?O():T()},[g,e.id]);var z,N,T=function(){var n=Vt(Yt().m(function n(){var t,r;return Yt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getLinkTags(e.id);case 1:t=n.v,x(t.map(function(n){return Gt(Gt({},n),{},{usageCount:0})})),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load link tags:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),O=function(){var n=Vt(Yt().m(function n(){var t,r,a,i,o;return Yt().w(function(n){for(;;)switch(n.n){case 0:return I(!0),n.p=1,n.n=2,Promise.all([St.getLinkTags(e.id),St.getUserTags()]);case 2:t=n.v,r=Qt(t,2),a=r[0],i=r[1],x(a.map(function(n){return Gt(Gt({},n),{},{usageCount:0})})),k(i),n.n=4;break;case 3:n.p=3,o=n.v,console.error("Failed to load tags:",o);case 4:return n.p=4,I(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),P=function(){chrome.tabs.create({url:e.url})},D=function(){var n=Vt(Yt().m(function n(t,a){var i,o;return Yt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,i=(e.highlights||[]).map(function(n){return n.id===t?Gt(Gt({},n),{},{userNote:a,updatedAt:new Date}):n}),n.n=1,St.updateLink(e.id,{highlights:i});case 1:r(e.id,{highlights:i}),n.n=3;break;case 2:n.p=2,o=n.v,console.error("Failed to update highlight note:",o);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e,t){return n.apply(this,arguments)}}(),L=function(){var n=Vt(Yt().m(function n(t){var a,i;return Yt().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,a=(e.highlights||[]).filter(function(n){return n.id!==t}),n.n=1,St.updateLink(e.id,{highlights:a});case 1:r(e.id,{highlights:a}),n.n=3;break;case 2:n.p=2,i=n.v,console.error("Failed to delete highlight:",i);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}();return(0,Tt.jsx)("div",{className:"link-card",children:(0,Tt.jsxs)("div",{className:"link-card-header",children:[(0,Tt.jsx)("div",{className:"link-card-favicon",children:e.favicon?(0,Tt.jsx)("img",{src:e.favicon,alt:"",width:"24",height:"24"}):(0,Tt.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]}(e.domain)},children:e.domain.charAt(0).toUpperCase()})}),(0,Tt.jsxs)("div",{className:"link-card-main",children:[(0,Tt.jsxs)("div",{className:"link-card-info-header",children:[(0,Tt.jsxs)("div",{className:"link-card-title-section",children:[(0,Tt.jsx)("h3",{className:"link-card-title",onClick:P,title:e.title,children:e.title}),(0,Tt.jsxs)("div",{className:"link-meta",children:[(0,Tt.jsx)("span",{className:"link-domain",children:e.domain}),(0,Tt.jsx)("span",{className:"link-date",children:(N=e.createdAt,new Date(N).toLocaleDateString("en-US",{month:"short",day:"numeric"}))})]})]}),(0,Tt.jsxs)("div",{className:"link-actions",children:[(0,Tt.jsx)("button",{onClick:P,className:"action-button",title:"Open link",children:(0,Tt.jsx)(_t,{size:14})}),(0,Tt.jsxs)("div",{className:"dropdown",children:[(0,Tt.jsx)("button",{onClick:function(){return d(!u)},className:"action-button",title:"More options",children:(0,Tt.jsx)(It,{size:14})}),u&&(0,Tt.jsxs)("div",{className:"dropdown-menu",children:[(0,Tt.jsxs)("button",{onClick:function(){s(e),d(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(zt,{size:14}),(0,Tt.jsx)("span",{children:"Edit note"})]}),(0,Tt.jsxs)("button",{onClick:function(){m(!g),d(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(C,{size:14}),(0,Tt.jsx)("span",{children:"Edit tags"})]}),e.highlights&&e.highlights.length>0&&(0,Tt.jsxs)("button",{onClick:function(){y(!b),d(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:(0,Tt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"})}),(0,Tt.jsxs)("span",{children:[b?"Hide":"Show"," highlights (",e.highlights.length,")"]})]}),(0,Tt.jsxs)("button",{onClick:function(){p(!f),d(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(S,{size:14}),(0,Tt.jsx)("span",{children:"Move to collection"})]}),(0,Tt.jsxs)("button",{onClick:function(){a(e.id),d(!1)},className:"dropdown-menu-item delete-action",children:[(0,Tt.jsx)(Nt,{size:14}),(0,Tt.jsx)("span",{children:"Delete"})]})]})]})]})]}),(0,Tt.jsxs)("div",{className:"link-card-body",children:[f&&(0,Tt.jsxs)("div",{className:"collections-menu",children:[(0,Tt.jsx)("div",{className:"collections-header",children:"Move to:"}),t.map(function(n){return(0,Tt.jsx)("button",{onClick:function(){o(e.id,n.id),p(!1)},className:"collection-option",children:n.name},n.id)}),(0,Tt.jsx)("button",{onClick:function(){o(e.id,""),p(!1)},className:"collection-option",children:"Remove from collection"})]}),g&&(0,Tt.jsxs)("div",{className:"tag-editor",children:[(0,Tt.jsxs)("div",{className:"tag-editor-header",children:[(0,Tt.jsx)("span",{children:"Edit Tags"}),(0,Tt.jsx)("button",{onClick:function(){return m(!1)},className:"tag-editor-close",title:"Close tag editor",children:"×"})]}),_?(0,Tt.jsx)("div",{className:"tag-editor-loading",children:"Loading tags..."}):(0,Tt.jsx)(Rt,{linkId:e.id,onTagsUpdated:function(){T(),l&&l(),m(!1)},onCancel:function(){return m(!1)}})]}),!g&&E.length>0&&(0,Tt.jsx)("div",{className:"link-tags",children:E.map(function(n){return(0,Tt.jsx)("span",{className:"link-tag",title:"Filter by ".concat(n.name),children:n.name},n.id||n.name)})}),e.userNote&&(0,Tt.jsxs)("div",{className:"link-note",children:[(0,Tt.jsx)("strong",{children:"Note:"})," ",e.userNote]}),e.aiSummary&&(0,Tt.jsxs)("div",{className:"link-summary",children:[(0,Tt.jsx)("strong",{children:"Summary:"})," ",e.aiSummary]}),(0,Tt.jsx)("div",{className:"link-category",children:(0,Tt.jsx)("span",{className:"category-badge",style:{backgroundColor:(z=e.category,{general:"#6b7280",work:"#3b82f6",personal:"#10b981",learning:"#f59e0b"}[z]||"#6b7280")},children:e.category})}),e.highlights&&e.highlights.length>0&&(0,Tt.jsxs)("div",{className:"link-highlights-section",children:[(0,Tt.jsx)("div",{className:"highlights-header",children:(0,Tt.jsxs)("button",{onClick:function(){return y(!b)},className:"highlights-toggle",children:[(0,Tt.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",children:(0,Tt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"})}),(0,Tt.jsxs)("span",{children:[e.highlights.length," highlight",1!==e.highlights.length?"s":""]}),(0,Tt.jsx)("svg",{width:"12",height:"12",viewBox:"0 0 24 24",className:"highlights-chevron ".concat(b?"expanded":""),fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:(0,Tt.jsx)("path",{d:"m6 9 6 6 6-6"})})]})}),b&&(0,Tt.jsx)("div",{className:"highlights-list",children:e.highlights.map(function(n){return(0,Tt.jsx)(Ft,{highlight:n,onAddNote:D,onDelete:L},n.id)})})]})]})]})]})})},Xt=l("Folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),nr=l("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]),er=l("Share2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]]),tr=l("Lock",[["rect",{width:"18",height:"11",x:"3",y:"11",rx:"2",ry:"2",key:"1w4ew1"}],["path",{d:"M7 11V7a5 5 0 0 1 10 0v4",key:"fwvmzm"}]]),rr=l("Link2",[["path",{d:"M9 17H7A5 5 0 0 1 7 7h2",key:"8i5ue5"}],["path",{d:"M15 7h2a5 5 0 1 1 0 10h-2",key:"1b9ql8"}],["line",{x1:"8",x2:"16",y1:"12",y2:"12",key:"1jonct"}]]),ar=l("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),ir=l("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]]),or=l("Eye",[["path",{d:"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z",key:"rwhkz3"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);function sr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return lr(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(lr(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,lr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,lr(d,"constructor",c),lr(c,"constructor",l),l.displayName="GeneratorFunction",lr(c,a,"GeneratorFunction"),lr(d),lr(d,a,"Generator"),lr(d,r,function(){return this}),lr(d,"toString",function(){return"[object Generator]"}),(sr=function(){return{w:i,m:A}})()}function lr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}lr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){lr(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},lr(n,e,t,r)}function cr(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function ur(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){cr(i,r,a,o,s,"next",n)}function s(n){cr(i,r,a,o,s,"throw",n)}o(void 0)})}}function dr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ar(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ar(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ar(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const fr=function(n){var e=n.collection,t=n.onClose,r=n.onUpdate,a=dr((0,i.useState)(!1),2),o=a[0],s=a[1],l=dr((0,i.useState)(""),2),c=l[0],u=l[1],d=dr((0,i.useState)(0),2),A=d[0],f=d[1],p=dr((0,i.useState)(!0),2),h=p[0],g=p[1],m=dr((0,i.useState)(!1),2),v=m[0],y=m[1],C=dr((0,i.useState)(""),2),B=C[0],E=C[1],x=dr((0,i.useState)(!1),2),w=x[0],k=x[1];(0,i.useEffect)(function(){S()},[e.id]);var j,S=function(){var n=ur(sr().m(function n(){var t,r;return sr().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getCollectionSharingInfo(e.id);case 1:(t=n.v)&&(s(t.isPublic),u(t.shareToken||""),f(t.viewCount)),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load sharing info:",r);case 3:return n.p=3,g(!1),n.f(3);case 4:return n.a(2)}},n,null,[[0,2,3,4]])}));return function(){return n.apply(this,arguments)}}(),_=function(){var n=ur(sr().m(function n(){var t;return sr().w(function(n){for(;;)switch(n.n){case 0:return y(!0),E(""),n.p=1,n.n=2,St.toggleCollectionSharing(e.id,!o);case 2:(t=n.v).success?(s(!o),t.shareToken&&u(t.shareToken),E(t.message),r()):E(t.message),n.n=4;break;case 3:n.p=3,n.v,E("Failed to update sharing settings");case 4:return n.p=4,y(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),I=function(){return c?"https://nest-shared.vercel.app/collection/".concat(c):""},z=function(){var n=ur(sr().m(function n(){var e,t;return sr().w(function(n){for(;;)switch(n.n){case 0:if(e=I()){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,navigator.clipboard.writeText(e);case 2:k(!0),setTimeout(function(){return k(!1)},2e3),n.n=4;break;case 3:n.p=3,n.v,(t=document.createElement("textarea")).value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),k(!0),setTimeout(function(){return k(!1)},2e3);case 4:return n.a(2)}},n,null,[[1,3]])}));return function(){return n.apply(this,arguments)}}();return h?(0,Tt.jsx)("div",{className:"modal-overlay",children:(0,Tt.jsxs)("div",{className:"modal share-modal",children:[(0,Tt.jsxs)("div",{className:"modal-header",children:[(0,Tt.jsx)("h2",{children:"Share Collection"}),(0,Tt.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,Tt.jsx)(b,{size:20})})]}),(0,Tt.jsx)("div",{className:"modal-content",children:(0,Tt.jsx)("div",{className:"loading-spinner",children:"Loading sharing settings..."})})]})}):(0,Tt.jsx)("div",{className:"modal-overlay",children:(0,Tt.jsxs)("div",{className:"modal share-modal",children:[(0,Tt.jsxs)("div",{className:"modal-header",children:[(0,Tt.jsx)("h2",{children:"Share Collection"}),(0,Tt.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,Tt.jsx)(b,{size:20})})]}),(0,Tt.jsxs)("div",{className:"modal-content",children:[(0,Tt.jsxs)("div",{className:"share-collection-info",children:[(0,Tt.jsx)("h3",{className:"collection-name",children:e.name}),e.description&&(0,Tt.jsx)("p",{className:"collection-description",children:e.description}),(0,Tt.jsx)("div",{className:"collection-meta",children:(0,Tt.jsxs)("span",{children:["Created ",(j=e.createdAt,new Date(j).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}))]})})]}),(0,Tt.jsx)("div",{className:"share-toggle-section",children:(0,Tt.jsxs)("div",{className:"share-toggle-header",children:[(0,Tt.jsx)("div",{className:"share-status",children:o?(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsx)(nr,{size:20,className:"status-icon public"}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"status-title",children:"Public Collection"}),(0,Tt.jsx)("div",{className:"status-subtitle",children:"Anyone with the link can view this collection"})]})]}):(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsx)(tr,{size:20,className:"status-icon private"}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"status-title",children:"Private Collection"}),(0,Tt.jsx)("div",{className:"status-subtitle",children:"Only you can see this collection"})]})]})}),(0,Tt.jsx)("button",{onClick:_,disabled:v,className:"toggle-button ".concat(o?"public":"private"),children:v?"Updating...":o?"Make Private":"Make Public"})]})}),o&&c&&(0,Tt.jsxs)("div",{className:"share-link-section",children:[(0,Tt.jsxs)("div",{className:"share-link-header",children:[(0,Tt.jsx)(rr,{size:16}),(0,Tt.jsx)("span",{children:"Share Link"})]}),(0,Tt.jsxs)("div",{className:"share-link-container",children:[(0,Tt.jsx)("input",{type:"text",value:I(),readOnly:!0,className:"share-link-input",title:"Share link URL","aria-label":"Share link URL"}),(0,Tt.jsxs)("div",{className:"share-link-actions",children:[(0,Tt.jsx)("button",{onClick:z,className:"copy-button ".concat(w?"copied":""),title:"Copy link",children:w?(0,Tt.jsx)(ar,{size:16}):(0,Tt.jsx)(ir,{size:16})}),(0,Tt.jsx)("button",{onClick:function(){var n=I();n&&chrome.tabs.create({url:n})},className:"open-button",title:"Open in new tab",children:(0,Tt.jsx)(_t,{size:16})})]})]}),(0,Tt.jsx)("div",{className:"share-analytics",children:(0,Tt.jsxs)("div",{className:"analytics-item",children:[(0,Tt.jsx)(or,{size:16}),(0,Tt.jsxs)("span",{children:[A," ",1===A?"view":"views"]})]})})]}),B&&(0,Tt.jsx)("div",{className:"share-message ".concat(B.includes("error")?"error":"success"),children:B}),(0,Tt.jsxs)("div",{className:"share-info-box",children:[(0,Tt.jsx)("h4",{children:"About Public Collections"}),(0,Tt.jsxs)("ul",{children:[(0,Tt.jsx)("li",{children:"Public collections can be viewed by anyone with the link"}),(0,Tt.jsx)("li",{children:"Viewers don't need an account to see your collection"}),(0,Tt.jsx)("li",{children:"Links, notes, summaries, and tags are included"}),(0,Tt.jsx)("li",{children:"You can make collections private at any time"}),(0,Tt.jsx)("li",{children:"View counts help you track sharing analytics"})]})]})]}),(0,Tt.jsx)("div",{className:"modal-footer",children:(0,Tt.jsx)("button",{onClick:t,className:"modal-button secondary",children:"Close"})})]})})};function pr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return hr(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(hr(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,hr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,hr(d,"constructor",c),hr(c,"constructor",l),l.displayName="GeneratorFunction",hr(c,a,"GeneratorFunction"),hr(d),hr(d,a,"Generator"),hr(d,r,function(){return this}),hr(d,"toString",function(){return"[object Generator]"}),(pr=function(){return{w:i,m:A}})()}function hr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}hr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){hr(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},hr(n,e,t,r)}function gr(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function mr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return vr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?vr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function vr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const br=function(n){var e=n.collection,t=n.links,r=n.onUpdateLink,a=n.onDeleteLink,o=n.onAddNote,s=n.onTagsUpdated,l=n.onUpdate,c=mr((0,i.useState)(!1),2),u=c[0],d=c[1],A=mr((0,i.useState)(!1),2),f=A[0],p=A[1],h=function(){var n,e=(n=pr().m(function n(e,t){return pr().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,r(e,{collectionId:t||void 0});case 1:return n.a(2)}},n)}),function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){gr(i,r,a,o,s,"next",n)}function s(n){gr(i,r,a,o,s,"throw",n)}o(void 0)})});return function(n,t){return e.apply(this,arguments)}}();return(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsxs)("div",{className:"collection-card ".concat(u?"expanded":""),children:[(0,Tt.jsxs)("button",{onClick:function(){return d(!u)},className:"collection-header",children:[u?(0,Tt.jsx)(B,{size:16}):(0,Tt.jsx)(E,{size:16}),(0,Tt.jsx)(Xt,{size:16,className:"collection-icon"}),(0,Tt.jsxs)("div",{className:"collection-info",children:[(0,Tt.jsxs)("div",{className:"collection-name-row",children:[(0,Tt.jsx)("span",{className:"collection-name",children:e.name}),e.isPublic&&(0,Tt.jsx)("div",{className:"public-indicator",title:"This collection is public",children:(0,Tt.jsx)(nr,{size:12})})]}),e.description&&(0,Tt.jsx)("span",{className:"collection-description",children:e.description})]}),(0,Tt.jsxs)("div",{className:"collection-actions",children:[(0,Tt.jsx)("span",{className:"collection-count",children:t.length}),(0,Tt.jsx)("button",{onClick:function(n){n.stopPropagation(),p(!0)},className:"action-button share-collection-button",title:"Share collection",children:(0,Tt.jsx)(er,{size:14})})]})]}),u&&(0,Tt.jsx)("div",{className:"collection-content",children:0===t.length?(0,Tt.jsx)("div",{className:"empty-collection",children:(0,Tt.jsx)("p",{children:"No links in this collection"})}):t.map(function(n){return(0,Tt.jsx)(Jt,{link:n,collections:[],onUpdate:r,onDelete:a,onMoveToCollection:h,onAddNote:o,onTagsUpdated:s},n.id)})})]}),f&&(0,Tt.jsx)(fr,{collection:e,onClose:function(){p(!1)},onUpdate:function(){l&&l()}})]})},yr=l("RotateCcw",[["path",{d:"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"1357e3"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}]]);function Cr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Br(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Br(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,Br(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,Br(d,"constructor",c),Br(c,"constructor",l),l.displayName="GeneratorFunction",Br(c,a,"GeneratorFunction"),Br(d),Br(d,a,"Generator"),Br(d,r,function(){return this}),Br(d,"toString",function(){return"[object Generator]"}),(Cr=function(){return{w:i,m:A}})()}function Br(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Br=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){Br(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},Br(n,e,t,r)}function Er(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function xr(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Er(i,r,a,o,s,"next",n)}function s(n){Er(i,r,a,o,s,"throw",n)}o(void 0)})}}function wr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return kr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?kr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function kr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const jr=function(n){var e=n.smartCollection,t=n.collections,r=n.onUpdateLink,a=n.onDeleteLink,o=n.onAddNote,s=n.onTagsUpdated,l=wr((0,i.useState)(!1),2),c=l[0],u=l[1],d=wr((0,i.useState)([]),2),A=d[0],f=d[1],p=wr((0,i.useState)(!1),2),h=p[0],g=p[1],m=wr((0,i.useState)(null),2),v=m[0],b=m[1];(0,i.useEffect)(function(){c&&y()},[c,e.id]);var y=function(){var n=xr(Cr().m(function n(){var t,r;return Cr().w(function(n){for(;;)switch(n.n){case 0:return g(!0),n.p=1,n.n=2,St.getSmartCollectionLinks(e.id);case 2:t=n.v,f(t),b(new Date),n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load smart collection links:",r);case 4:return n.p=4,g(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),C=function(){var n=xr(Cr().m(function n(t,a){return Cr().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,r(t,{collectionId:a||void 0});case 1:e.autoUpdate&&y();case 2:return n.a(2)}},n)}));return function(e,t){return n.apply(this,arguments)}}();return(0,Tt.jsxs)("div",{className:"smart-collection-card ".concat(c?"expanded":""),children:[(0,Tt.jsxs)("button",{onClick:function(){return u(!c)},className:"smart-collection-header",children:[c?(0,Tt.jsx)(B,{size:16}):(0,Tt.jsx)(E,{size:16}),(0,Tt.jsx)("span",{className:"smart-collection-icon",children:e.icon||"🔮"}),(0,Tt.jsxs)("div",{className:"smart-collection-info",children:[(0,Tt.jsxs)("div",{className:"smart-collection-name-row",children:[(0,Tt.jsx)("span",{className:"smart-collection-name",children:e.name}),(0,Tt.jsxs)("div",{className:"smart-collection-badges",children:[(0,Tt.jsx)(j,{size:12,className:"ai-badge",title:"AI-Powered Collection"}),e.autoUpdate&&(0,Tt.jsx)("div",{className:"auto-update-badge",title:"Auto-updating",children:"AUTO"})]})]}),(0,Tt.jsx)("span",{className:"smart-collection-description",children:e.description}),v&&(0,Tt.jsxs)("span",{className:"smart-collection-updated",children:["Updated ",function(){if(!v)return"";var n=(new Date).getTime()-v.getTime(),e=Math.floor(n/6e4);if(e<1)return"Just now";if(e<60)return"".concat(e,"m ago");var t=Math.floor(e/60);if(t<24)return"".concat(t,"h ago");var r=Math.floor(t/24);return"".concat(r,"d ago")}()]})]}),(0,Tt.jsxs)("div",{className:"smart-collection-actions",children:[(0,Tt.jsx)("span",{className:"smart-collection-count",children:h?"...":A.length}),(0,Tt.jsx)("button",{onClick:function(n){n.stopPropagation(),y()},className:"action-button refresh-button",title:"Refresh collection",disabled:h,children:(0,Tt.jsx)(yr,{size:14,className:h?"spinning":""})})]})]}),c&&(0,Tt.jsx)("div",{className:"smart-collection-content",children:h?(0,Tt.jsxs)("div",{className:"smart-collection-loading",children:[(0,Tt.jsx)("div",{className:"loading-spinner"}),(0,Tt.jsx)("span",{children:"Finding matching links..."})]}):0===A.length?(0,Tt.jsxs)("div",{className:"empty-smart-collection",children:[(0,Tt.jsx)(j,{size:24,className:"empty-icon"}),(0,Tt.jsx)("p",{children:"No matching links found"}),(0,Tt.jsx)("span",{className:"empty-subtitle",children:"Links will appear here automatically when they match this collection's criteria"})]}):(0,Tt.jsx)("div",{className:"smart-collection-links",children:A.map(function(n){return(0,Tt.jsx)(Jt,{link:n,collections:t,onUpdate:r,onDelete:a,onMoveToCollection:C,onAddNote:o,onTagsUpdated:s},n.id)})})})]})},Sr=function(n){var e,t=n.link,r=n.collections,a=n.onUpdate,i=n.onDelete,o=n.onMoveToCollection,s=n.onAddNote,l=n.onTagsUpdated;return(0,Tt.jsxs)("div",{className:"search-result-card",children:[t.searchRank&&(0,Tt.jsx)("div",{className:"search-rank-indicator",children:(e=t.searchRank,e?"".concat(Math.round(100*e),"% match"):"")}),t.searchHeadline&&(0,Tt.jsx)("div",{className:"search-headline",dangerouslySetInnerHTML:{__html:t.searchHeadline}}),(0,Tt.jsx)(Jt,{link:t,collections:r,onUpdate:a,onDelete:i,onMoveToCollection:o,onAddNote:s,onTagsUpdated:l})]})},_r=l("MoreVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]),Ir=l("ChevronUp",[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]]),zr=l("Info",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 16v-4",key:"1dtifu"}],["path",{d:"M12 8h.01",key:"e9boi3"}]]);function Nr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Tr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Tr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Tr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Or=function(n){var e=n.analysis,t=n.onTagsApproved,r=n.onCategoryApproved,a=n.onClose,o=n.isLoading,s=void 0!==o&&o,l=Nr((0,i.useState)(new Set),2),c=l[0],u=l[1],d=Nr((0,i.useState)(""),2),A=d[0],f=d[1],p=Nr((0,i.useState)(!0),2),h=p[0],g=p[1],m=function(n){return n>=.8?"#10b981":n>=.6?"#f59e0b":"#6b7280"},v=function(n){return n>=.8?"High":n>=.6?"Med":"Low"};return s?(0,Tt.jsx)("div",{className:"ai-suggestions loading",children:(0,Tt.jsxs)("div",{className:"ai-suggestions-header",children:[(0,Tt.jsxs)("div",{className:"ai-loading-content",children:[(0,Tt.jsx)(j,{size:14,className:"ai-icon spinning"}),(0,Tt.jsx)("span",{children:"AI analyzing content..."})]}),(0,Tt.jsx)("button",{onClick:a,className:"ai-suggestions-close",title:"Cancel analysis",children:(0,Tt.jsx)(b,{size:12})})]})}):(0,Tt.jsxs)("div",{className:"ai-suggestions",children:[(0,Tt.jsxs)("div",{className:"ai-suggestions-header",children:[(0,Tt.jsxs)("button",{onClick:function(){return g(!h)},className:"ai-suggestions-toggle",children:[(0,Tt.jsx)(j,{size:14,className:"ai-icon"}),(0,Tt.jsx)("span",{children:"AI Suggestions"}),(0,Tt.jsx)("div",{className:"ai-suggestions-meta",children:e.readingTime&&(0,Tt.jsxs)("span",{className:"ai-reading-time",children:[e.readingTime,"min"]})}),h?(0,Tt.jsx)(Ir,{size:12}):(0,Tt.jsx)(B,{size:12})]}),(0,Tt.jsx)("button",{onClick:a,className:"ai-suggestions-close",title:"Close suggestions",children:(0,Tt.jsx)(b,{size:12})})]}),h&&(0,Tt.jsxs)("div",{className:"ai-suggestions-content",children:[e.categorySuggestions.length>0&&(0,Tt.jsxs)("div",{className:"ai-suggestion-section",children:[(0,Tt.jsxs)("div",{className:"suggestion-section-header",children:[(0,Tt.jsx)(zr,{size:12}),(0,Tt.jsx)("span",{children:"Categories"})]}),(0,Tt.jsx)("div",{className:"ai-category-suggestions",children:e.categorySuggestions.slice(0,3).map(function(n,e){return(0,Tt.jsxs)("button",{onClick:function(){return e=n.category,void f(A===e?"":e);var e},className:"ai-category-chip ".concat(A===n.category?"selected":""),title:n.reason,children:[(0,Tt.jsx)("span",{className:"suggestion-name",children:n.category}),(0,Tt.jsx)("span",{className:"confidence-indicator",style:{backgroundColor:m(n.confidence)},children:v(n.confidence)})]},"".concat(n.category,"-").concat(e))})})]}),e.tagSuggestions.length>0&&(0,Tt.jsxs)("div",{className:"ai-suggestion-section",children:[(0,Tt.jsxs)("div",{className:"suggestion-section-header",children:[(0,Tt.jsx)(zr,{size:12}),(0,Tt.jsx)("span",{children:"Tags"})]}),(0,Tt.jsx)("div",{className:"ai-tag-suggestions",children:e.tagSuggestions.slice(0,6).map(function(n,e){return(0,Tt.jsxs)("button",{onClick:function(){return e=n.tag,(t=new Set(c)).has(e)?t.delete(e):t.add(e),void u(t);var e,t},className:"ai-tag-chip ".concat(c.has(n.tag)?"selected":""),title:"".concat(n.reason," (").concat(Math.round(100*n.confidence),"% confidence)"),children:[(0,Tt.jsx)("span",{className:"suggestion-name",children:n.tag}),(0,Tt.jsx)("span",{className:"confidence-indicator",style:{backgroundColor:m(n.confidence)},children:v(n.confidence)}),c.has(n.tag)&&(0,Tt.jsx)(ar,{size:10,className:"selected-icon"})]},"".concat(n.tag,"-").concat(e))})})]}),e.topics&&e.topics.length>0&&(0,Tt.jsxs)("div",{className:"ai-topics-section",children:[(0,Tt.jsx)("span",{className:"ai-topics-label",children:"Topics:"}),(0,Tt.jsx)("div",{className:"ai-detected-topics",children:e.topics.slice(0,3).map(function(n,e){return(0,Tt.jsx)("span",{className:"ai-topic-pill",children:n},e)})})]}),(0,Tt.jsxs)("div",{className:"ai-suggestions-actions",children:[(0,Tt.jsx)("button",{onClick:a,className:"ai-action-btn secondary",children:"Skip"}),(0,Tt.jsxs)("button",{onClick:function(){c.size>0&&t(Array.from(c)),A&&r(A),a()},className:"ai-action-btn primary",disabled:0===c.size&&!A,children:["Apply (",c.size+(A?1:0),")"]})]})]})]})};function Pr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Dr(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Dr(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,Dr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,Dr(d,"constructor",c),Dr(c,"constructor",l),l.displayName="GeneratorFunction",Dr(c,a,"GeneratorFunction"),Dr(d),Dr(d,a,"Generator"),Dr(d,r,function(){return this}),Dr(d,"toString",function(){return"[object Generator]"}),(Pr=function(){return{w:i,m:A}})()}function Dr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Dr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){Dr(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},Dr(n,e,t,r)}function Lr(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Rr(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Lr(i,r,a,o,s,"next",n)}function s(n){Lr(i,r,a,o,s,"throw",n)}o(void 0)})}}function Mr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ur(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ur(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ur(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Fr=function(n){var e,t=n.link,r=n.collections,a=n.onMoveFromInbox,o=n.onDelete,s=n.onUpdate,l=n.onAddNote,c=n.onTagsUpdated,u=n.isSelected,d=void 0!==u&&u,A=n.onSelect,f=Mr((0,i.useState)(!1),2),p=f[0],h=f[1],g=Mr((0,i.useState)(!1),2),m=g[0],v=g[1],y=Mr((0,i.useState)(!1),2),B=y[0],E=y[1],x=Mr((0,i.useState)(!1),2),w=x[0],_=x[1],I=Mr((0,i.useState)(!1),2),z=I[0],N=I[1],T=Mr((0,i.useState)(null),2),O=T[0],P=T[1],D=Mr((0,i.useState)(!1),2),L=D[0],R=D[1],M=function(){var n=Rr(Pr().m(function n(){var e,t;return Pr().w(function(n){for(;;)switch(n.n){case 0:if(h(!1),O){n.n=6;break}return R(!0),n.p=1,n.n=2,chrome.runtime.sendMessage({action:"analyzePageWithAI"});case 2:(e=n.v).success&&e.analysis?(P(e.analysis),N(!0)):console.error("Failed to get AI analysis:",e.error),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Error requesting AI analysis:",t);case 4:return n.p=4,R(!1),n.f(4);case 5:n.n=7;break;case 6:N(!0);case 7:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),U=function(){var n=Rr(Pr().m(function n(e){var r;return Pr().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.addTagsToLink(t.id,e);case 1:n.v.success&&c(),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to apply AI tags:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}(),F=function(){var n=Rr(Pr().m(function n(e){var r;return Pr().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,s(t.id,{category:e});case 1:n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to apply AI category:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(e){return n.apply(this,arguments)}}();return i.useEffect(function(){var n=function(){h(!1),v(!1)};if(p)return document.addEventListener("click",n),function(){return document.removeEventListener("click",n)}},[p]),(0,Tt.jsx)("div",{className:"inbox-card ".concat(d?"selected":""),children:(0,Tt.jsxs)("div",{className:"inbox-card-content",children:[(0,Tt.jsx)("div",{className:"inbox-card-checkbox",children:(0,Tt.jsx)("input",{type:"checkbox",checked:d,onChange:function(n){return n.target.checked,void(A&&A(t.id))},"aria-label":"Select ".concat(t.title),title:"Select ".concat(t.title)})}),(0,Tt.jsxs)("div",{className:"inbox-card-main-content",children:[(0,Tt.jsxs)("div",{className:"inbox-card-favicon",children:[t.favicon?(0,Tt.jsx)("img",{src:t.favicon,alt:"",onError:function(n){var e=n.target;e.style.display="none";var t=e.nextElementSibling;t&&(t.style.display="flex")}}):null,(0,Tt.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]}(t.domain),display:t.favicon?"none":"flex"},children:t.domain.charAt(0).toUpperCase()})]}),(0,Tt.jsxs)("div",{className:"inbox-card-body",children:[(0,Tt.jsxs)("div",{className:"inbox-card-header",children:[(0,Tt.jsxs)("div",{className:"inbox-card-title-section",children:[(0,Tt.jsx)("h3",{className:"inbox-card-title",onClick:function(){chrome.tabs.create({url:t.url})},children:t.title}),(0,Tt.jsxs)("div",{className:"inbox-card-domain",children:[t.domain," • ",(e=t.createdAt,new Date(e).toLocaleDateString("en-US",{month:"short",day:"numeric"}))]})]}),(0,Tt.jsxs)("div",{className:"inbox-card-actions",children:[(0,Tt.jsx)("a",{href:t.url,target:"_blank",rel:"noopener noreferrer",className:"inbox-card-link",title:"Open link",children:(0,Tt.jsx)(_t,{size:14})}),(0,Tt.jsxs)("div",{className:"inbox-card-menu-container dropdown",children:[(0,Tt.jsx)("button",{onClick:function(n){n.stopPropagation(),h(!p),v(!1)},className:"inbox-card-menu-button",title:"More options",children:(0,Tt.jsx)(_r,{size:14})}),p&&(0,Tt.jsxs)("div",{className:"dropdown-menu",children:[(0,Tt.jsxs)("button",{onClick:M,className:"dropdown-menu-item",disabled:L,children:[(0,Tt.jsx)(j,{size:14}),L?"Analyzing...":"AI Suggestions"]}),(0,Tt.jsxs)("button",{onClick:function(){E(!0),h(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(C,{size:14}),(0,Tt.jsx)("span",{children:"Add Tags"})]}),(0,Tt.jsxs)("button",{onClick:function(){l(t),h(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(zt,{size:14}),(0,Tt.jsx)("span",{children:"Add Note"})]}),(0,Tt.jsxs)("div",{className:"dropdown-submenu-container",children:[(0,Tt.jsxs)("button",{onClick:function(){return v(!m)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(S,{size:14}),(0,Tt.jsx)("span",{children:"Move to Collection"})]}),m&&(0,Tt.jsxs)("div",{className:"dropdown-menu submenu",children:[(0,Tt.jsxs)("div",{className:"submenu-header",children:[(0,Tt.jsx)("span",{children:"Collections"}),(0,Tt.jsx)("button",{onClick:function(n){n.stopPropagation(),v(!1)},className:"submenu-close",title:"Close",children:(0,Tt.jsx)(b,{size:12})})]}),r.length>0?r.map(function(n){return(0,Tt.jsx)("button",{onClick:function(){return e=n.id,a(t.id,e),void h(!1);var e},className:"dropdown-menu-item",children:n.name},n.id)}):(0,Tt.jsx)("div",{className:"submenu-empty",children:"No collections"})]})]}),(0,Tt.jsxs)("button",{onClick:function(){a(t.id),h(!1)},className:"dropdown-menu-item",children:[(0,Tt.jsx)(k,{size:14}),(0,Tt.jsx)("span",{children:"Archive"})]}),(0,Tt.jsxs)("button",{onClick:function(){o(t.id),h(!1)},className:"dropdown-menu-item delete-action",children:[(0,Tt.jsx)(Nt,{size:14}),(0,Tt.jsx)("span",{children:"Delete"})]})]})]})]})]}),(0,Tt.jsxs)("div",{className:"inbox-card-footer",children:[z&&O&&(0,Tt.jsx)(Or,{analysis:O,onTagsApproved:U,onCategoryApproved:F,onClose:function(){return N(!1)},isLoading:L}),t.highlights&&t.highlights.length>0&&(0,Tt.jsxs)("div",{className:"inbox-card-highlights",children:[(0,Tt.jsxs)("button",{onClick:function(){return _(!w)},className:"highlights-toggle",title:"".concat(w?"Hide":"Show"," highlights"),"aria-label":"".concat(w?"Hide":"Show"," ").concat(t.highlights.length," highlight").concat(1!==t.highlights.length?"s":""),children:[(0,Tt.jsxs)("span",{children:["🔗 ",t.highlights.length," highlight",1!==t.highlights.length?"s":""]}),(0,Tt.jsx)("span",{className:"highlights-chevron ".concat(w?"expanded":""),children:"▼"})]}),w&&(0,Tt.jsx)("div",{className:"inbox-highlights-list",style:{padding:"var(--space-3)",display:"flex",flexDirection:"column",gap:"var(--space-3)"},children:t.highlights.map(function(n){return(0,Tt.jsx)(Ft,{highlight:n},n.id)})})]}),t.aiSummary&&(0,Tt.jsx)("div",{className:"inbox-card-summary",children:(0,Tt.jsx)("p",{children:t.aiSummary})}),t.userNote&&(0,Tt.jsx)("div",{className:"inbox-card-note",children:(0,Tt.jsx)("p",{children:t.userNote})}),B&&(0,Tt.jsx)("div",{className:"inbox-card-tags",children:(0,Tt.jsx)(Rt,{linkId:t.id,onTagsUpdated:function(){c(),E(!1)},onCancel:function(){return E(!1)}})})]})]})]})]})})};function $r(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Yr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Yr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const qr=function(n){var e=n.isOpen,t=n.onClose,r=n.links,a=n.collections,o=n.onOpenLink,s=n.onAddToCollection,l=n.onCreateCollection,u=n.onSaveCurrentPage,d=n.onAddNote,A=n.onOpenTabSync,f=$r((0,i.useState)(""),2),h=f[0],g=f[1],m=$r((0,i.useState)(0),2),b=m[0],y=m[1],C=$r((0,i.useState)([]),2),B=C[0],E=C[1],x=(0,i.useRef)(null),w=(0,i.useRef)(null),j=(0,i.useCallback)(function(n){var e=[];return e.push({id:"save-current",type:"action",title:"Save Current Page",subtitle:"Add the current browser tab to Nest",icon:(0,Tt.jsx)(p,{size:16}),action:function(){u(),t()},keywords:["save","add","current","page","bookmark"]}),e.push({id:"create-collection",type:"action",title:"Create New Collection",subtitle:"Organize your links into collections",icon:(0,Tt.jsx)(S,{size:16}),action:function(){l(),t()},keywords:["create","collection","folder","organize"]}),e.push({id:"tab-sync",type:"action",title:"Tab Sync Mode",subtitle:"View and save open browser tabs",icon:(0,Tt.jsx)(c,{size:16}),action:function(){A(),t()},keywords:["tab","sync","browser","open","tabs","save"]}),a.forEach(function(n){var a;e.push({id:"collection-".concat(n.id),type:"collection",title:n.name,subtitle:"Collection • ".concat(r.filter(function(e){return e.collectionId===n.id}).length," links"),icon:(0,Tt.jsx)(k,{size:16}),action:function(){t()},keywords:["collection",n.name.toLowerCase(),null===(a=n.description)||void 0===a?void 0:a.toLowerCase()],collection:n})}),(n.trim()?_(r,n):r.slice(0,10)).forEach(function(n){var r;e.push({id:"link-".concat(n.id),type:"link",title:n.title,subtitle:"".concat(n.domain," • ").concat(n.userNote?"Has note":"No note"),icon:(0,Tt.jsx)(_t,{size:16}),action:function(){o(n.url),t()},keywords:[n.title.toLowerCase(),n.domain.toLowerCase(),n.userNote.toLowerCase(),(null===(r=n.aiSummary)||void 0===r?void 0:r.toLowerCase())||"",n.category.toLowerCase()],link:n})}),n.trim()?e.filter(function(e){var t,r;return e.title.toLowerCase().includes(n.toLowerCase())||(null===(t=e.subtitle)||void 0===t?void 0:t.toLowerCase().includes(n.toLowerCase()))||(null===(r=e.keywords)||void 0===r?void 0:r.some(function(e){return e.includes(n.toLowerCase())}))}):e.slice(0,12)},[r,a,o,s,l,u,d,A,t]),_=function(n,e){var t=e.toLowerCase();return n.map(function(n){var e,r=0,a=n.title.toLowerCase(),i=n.domain.toLowerCase(),o=n.userNote.toLowerCase(),s=(null===(e=n.aiSummary)||void 0===e?void 0:e.toLowerCase())||"";return a.includes(t)&&(r+=10),i.includes(t)&&(r+=5),o.includes(t)&&(r+=8),s.includes(t)&&(r+=6),{link:n,score:r+=I(a,t)}}).filter(function(n){return n.score>0}).sort(function(n,e){return e.score-n.score}).slice(0,8).map(function(n){return n.link})},I=function(n,e){for(var t=0,r=0,a=0;a<e.length;a++){var i=e[a],o=n.indexOf(i,r);if(-1===o)return 0;var s=o-r;t+=Math.max(0,10-s),r=o+1}return t};return(0,i.useEffect)(function(){var n=j(h);E(n),y(0)},[h,j]),(0,i.useEffect)(function(){var n=function(n){if(e)switch(n.key){case"ArrowDown":n.preventDefault(),y(function(n){return Math.min(n+1,B.length-1)});break;case"ArrowUp":n.preventDefault(),y(function(n){return Math.max(n-1,0)});break;case"Enter":n.preventDefault(),B[b]&&B[b].action();break;case"Escape":n.preventDefault(),t()}};return document.addEventListener("keydown",n),function(){return document.removeEventListener("keydown",n)}},[e,B,b,t]),(0,i.useEffect)(function(){e&&x.current&&(x.current.focus(),g(""),y(0))},[e]),(0,i.useEffect)(function(){if(w.current&&B.length>0){var n=w.current.children[b];n&&n.scrollIntoView({block:"nearest",behavior:"smooth"})}},[b,B]),e?(0,Tt.jsx)("div",{className:"modal-overlay command-palette-overlay",onClick:t,children:(0,Tt.jsxs)("div",{className:"command-palette",onClick:function(n){return n.stopPropagation()},children:[(0,Tt.jsx)("div",{className:"command-palette-header",children:(0,Tt.jsxs)("div",{className:"command-palette-search",children:[(0,Tt.jsx)(v,{size:18,className:"command-palette-search-icon"}),(0,Tt.jsx)("input",{ref:x,type:"text",placeholder:"Search links, collections, or commands...",value:h,onChange:function(n){return g(n.target.value)},className:"command-palette-input"})]})}),(0,Tt.jsx)("div",{className:"command-palette-content",ref:w,children:0===B.length?(0,Tt.jsx)("div",{className:"command-palette-empty",children:(0,Tt.jsx)("p",{children:"No results found"})}):B.map(function(n,e){return(0,Tt.jsxs)("div",{className:"command-palette-item ".concat(e===b?"selected":""),onClick:function(){return n.action()},onMouseEnter:function(){return y(e)},children:[(0,Tt.jsx)("div",{className:"command-palette-item-icon",children:n.icon}),(0,Tt.jsxs)("div",{className:"command-palette-item-content",children:[(0,Tt.jsx)("div",{className:"command-palette-item-title",children:n.title}),n.subtitle&&(0,Tt.jsx)("div",{className:"command-palette-item-subtitle",children:n.subtitle})]})]},n.id)})}),(0,Tt.jsx)("div",{className:"command-palette-footer",children:(0,Tt.jsxs)("div",{className:"command-palette-tips",children:[(0,Tt.jsxs)("span",{children:[(0,Tt.jsx)("kbd",{children:"↑"}),(0,Tt.jsx)("kbd",{children:"↓"})," to navigate"]}),(0,Tt.jsxs)("span",{children:[(0,Tt.jsx)("kbd",{children:"↵"})," to select"]}),(0,Tt.jsxs)("span",{children:[(0,Tt.jsx)("kbd",{children:"esc"})," to close"]})]})})]})}):null},Wr=l("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]),Gr=l("Square",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}]]),Hr=l("Monitor",[["rect",{width:"20",height:"14",x:"2",y:"3",rx:"2",key:"48i651"}],["line",{x1:"8",x2:"16",y1:"21",y2:"21",key:"1svkeh"}],["line",{x1:"12",x2:"12",y1:"17",y2:"21",key:"vw1qmm"}]]);function Kr(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Vr(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Vr(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,Vr(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,Vr(d,"constructor",c),Vr(c,"constructor",l),l.displayName="GeneratorFunction",Vr(c,a,"GeneratorFunction"),Vr(d),Vr(d,a,"Generator"),Vr(d,r,function(){return this}),Vr(d,"toString",function(){return"[object Generator]"}),(Kr=function(){return{w:i,m:A}})()}function Vr(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Vr=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){Vr(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},Vr(n,e,t,r)}function Qr(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Zr(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Qr(i,r,a,o,s,"next",n)}function s(n){Qr(i,r,a,o,s,"throw",n)}o(void 0)})}}function Jr(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Xr(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xr(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xr(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const na=function(n){var e=n.isOpen,t=n.onClose,r=n.collections,a=n.onSaveTabs,o=Jr((0,i.useState)([]),2),s=o[0],l=o[1],c=Jr((0,i.useState)(!1),2),u=c[0],d=c[1],A=Jr((0,i.useState)(new Set),2),p=A[0],h=A[1],g=Jr((0,i.useState)({}),2),m=g[0],v=g[1],y=Jr((0,i.useState)(!1),2),C=y[0],B=y[1],E=Jr((0,i.useState)(!1),2),x=E[0],j=E[1],S=Jr((0,i.useState)(""),2),_=S[0],I=S[1];(0,i.useEffect)(function(){e&&N()},[e]),(0,i.useEffect)(function(){var n=s.reduce(function(n,e){return n[e.windowId]||(n[e.windowId]=[]),n[e.windowId].push(e),n},{});v(n)},[s]);var z,N=function(){var n=Zr(Kr().m(function n(){var e,t,r;return Kr().w(function(n){for(;;)switch(n.n){case 0:return d(!0),n.p=1,n.n=2,chrome.tabs.query({});case 2:e=n.v,t=e.filter(function(n){return n.url&&!n.url.startsWith("chrome://")&&!n.url.startsWith("chrome-extension://")}).map(function(n){return{id:n.id,title:n.title||"Untitled",url:n.url,favicon:n.favIconUrl,windowId:n.windowId,index:n.index,active:n.active,domain:new URL(n.url).hostname,pinned:n.pinned}}),l(t),h(new Set),n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load tabs:",r);case 4:return n.p=4,d(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),T=function(){return s.filter(function(n){return!(x&&!n.pinned||_&&!n.domain.toLowerCase().includes(_.toLowerCase()))})},O=function(){var n=Zr(Kr().m(function n(e,t){var r,i;return Kr().w(function(n){for(;;)switch(n.n){case 0:if(0!==p.size){n.n=1;break}return n.a(2);case 1:return B(!0),n.p=2,r=s.filter(function(n){return p.has(n.id)}),n.n=3,a(r,e,t);case 3:h(new Set),n.n=5;break;case 4:n.p=4,i=n.v,console.error("Failed to save tabs:",i);case 5:return n.p=5,B(!1),n.f(5);case 6:return n.a(2)}},n,null,[[2,4,5,6]])}));return function(e,t){return n.apply(this,arguments)}}(),P=function(){var n=Zr(Kr().m(function n(e,t,r){var i;return Kr().w(function(n){for(;;)switch(n.n){case 0:return B(!0),n.p=1,n.n=2,a([e],t,r);case 2:n.n=4;break;case 3:n.p=3,i=n.v,console.error("Failed to save tab:",i);case 4:return n.p=4,B(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(e,t,r){return n.apply(this,arguments)}}(),D=T(),L=(z={},s.forEach(function(n){z[n.domain]=(z[n.domain]||0)+1}),Object.entries(z).sort(function(n,e){var t=Jr(n,2)[1];return Jr(e,2)[1]-t}).slice(0,5));return e?(0,Tt.jsx)("div",{className:"tab-sync-overlay",onClick:t,children:(0,Tt.jsxs)("div",{className:"tab-sync-modal",onClick:function(n){return n.stopPropagation()},children:[(0,Tt.jsxs)("div",{className:"tab-sync-header",children:[(0,Tt.jsxs)("div",{className:"tab-sync-title",children:[(0,Tt.jsx)(f,{size:20}),(0,Tt.jsx)("h2",{children:"Tab Sync Mode"}),(0,Tt.jsxs)("span",{className:"tab-count",children:[s.length," open tabs"]})]}),(0,Tt.jsxs)("div",{className:"tab-sync-actions",children:[(0,Tt.jsx)("button",{onClick:N,className:"tab-sync-refresh",disabled:u,title:"Refresh tabs",children:(0,Tt.jsx)(Wr,{size:16,className:u?"spinning":""})}),(0,Tt.jsx)("button",{onClick:t,className:"tab-sync-close",title:"Close",children:(0,Tt.jsx)(b,{size:16})})]})]}),(0,Tt.jsxs)("div",{className:"tab-sync-filters",children:[(0,Tt.jsxs)("div",{className:"tab-sync-filter-row",children:[(0,Tt.jsxs)("label",{className:"tab-sync-filter-checkbox",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:x,onChange:function(n){return j(n.target.checked)}}),"Show only pinned tabs"]}),(0,Tt.jsx)("input",{type:"text",placeholder:"Filter by domain...",value:_,onChange:function(n){return I(n.target.value)},className:"tab-sync-domain-filter"})]}),L.length>0&&(0,Tt.jsxs)("div",{className:"tab-sync-domain-pills",children:[(0,Tt.jsx)("span",{className:"domain-pills-label",children:"Quick filters:"}),L.map(function(n){var e=Jr(n,2),t=e[0],r=e[1];return(0,Tt.jsxs)("button",{onClick:function(){return I(_===t?"":t)},className:"domain-pill ".concat(_===t?"active":""),children:[t," (",r,")"]},t)})]})]}),(0,Tt.jsxs)("div",{className:"tab-sync-bulk-actions",children:[(0,Tt.jsxs)("button",{onClick:function(){var n=T();p.size===n.length?h(new Set):h(new Set(n.map(function(n){return n.id})))},className:"bulk-action-btn",title:p.size===D.length?"Deselect all":"Select all",children:[p.size===D.length?(0,Tt.jsx)(Gr,{size:16}):(0,Tt.jsx)(w,{size:16}),p.size===D.length?"Deselect All":"Select All"]}),p.size>0&&(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsxs)("button",{onClick:function(){return O(void 0,!0)},className:"bulk-action-btn primary",disabled:C,children:[(0,Tt.jsx)(k,{size:16}),"Save to Inbox (",p.size,")"]}),(0,Tt.jsxs)("select",{onChange:function(n){n.target.value&&(O(n.target.value),n.target.value="")},className:"bulk-collection-select",disabled:C,title:"Save selected tabs to collection","aria-label":"Save selected tabs to collection",children:[(0,Tt.jsx)("option",{value:"",children:"Save to Collection..."}),r.map(function(n){return(0,Tt.jsx)("option",{value:n.id,children:n.name},n.id)})]})]})]}),(0,Tt.jsx)("div",{className:"tab-sync-content",children:u?(0,Tt.jsxs)("div",{className:"tab-sync-loading",children:[(0,Tt.jsx)(Wr,{size:24,className:"spinning"}),(0,Tt.jsx)("p",{children:"Loading tabs..."})]}):0===Object.keys(m).length?(0,Tt.jsxs)("div",{className:"tab-sync-empty",children:[(0,Tt.jsx)(Hr,{size:48}),(0,Tt.jsx)("h3",{children:"No tabs found"}),(0,Tt.jsx)("p",{children:"Open some tabs and refresh to see them here"})]}):Object.entries(m).map(function(n){var e=Jr(n,2),t=e[0],a=e[1];return(0,Tt.jsxs)("div",{className:"tab-window-group",children:[(0,Tt.jsx)("div",{className:"tab-window-header",children:(0,Tt.jsxs)("button",{onClick:function(){return function(n){var e=(m[n]||[]).map(function(n){return n.id}),t=new Set(p);e.every(function(n){return t.has(n)})?e.forEach(function(n){return t.delete(n)}):e.forEach(function(n){return t.add(n)}),h(t)}(parseInt(t))},className:"window-select-btn",children:[(0,Tt.jsx)(Hr,{size:16}),"Window ",t," (",a.length," tabs)"]})}),(0,Tt.jsx)("div",{className:"tab-list",children:a.filter(function(n){return!(x&&!n.pinned||_&&!n.domain.toLowerCase().includes(_.toLowerCase()))}).map(function(n){return(0,Tt.jsxs)("div",{className:"tab-item ".concat(p.has(n.id)?"selected":""," ").concat(n.active?"active":""),children:[(0,Tt.jsxs)("div",{className:"tab-item-content",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:p.has(n.id),onChange:function(){return e=n.id,(t=new Set(p)).has(e)?t.delete(e):t.add(e),void h(t);var e,t},className:"tab-checkbox",title:"Select ".concat(n.title),"aria-label":"Select ".concat(n.title)}),(0,Tt.jsx)("img",{src:n.favicon||"https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=16"),alt:"favicon",className:"tab-favicon",onError:function(e){e.target.src="https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=16")}}),(0,Tt.jsxs)("div",{className:"tab-info",children:[(0,Tt.jsxs)("div",{className:"tab-title",children:[n.pinned&&(0,Tt.jsx)("span",{className:"tab-pin-indicator",children:"📌"}),n.title,n.active&&(0,Tt.jsx)("span",{className:"tab-active-indicator",children:"•"})]}),(0,Tt.jsx)("div",{className:"tab-url",children:n.domain})]})]}),(0,Tt.jsxs)("div",{className:"tab-actions",children:[(0,Tt.jsx)("button",{onClick:function(){return P(n,void 0,!0)},className:"tab-action-btn",title:"Save to inbox",disabled:C,children:(0,Tt.jsx)(k,{size:14})}),(0,Tt.jsxs)("select",{onChange:function(e){e.target.value&&(P(n,e.target.value),e.target.value="")},className:"tab-collection-select",disabled:C,title:"Save to collection","aria-label":"Save to collection",children:[(0,Tt.jsx)("option",{value:"",children:"📁"}),r.map(function(n){return(0,Tt.jsx)("option",{value:n.id,children:n.name},n.id)})]}),(0,Tt.jsx)("a",{href:n.url,target:"_blank",rel:"noopener noreferrer",className:"tab-action-btn",title:"Open tab",children:(0,Tt.jsx)(_t,{size:14})})]})]},n.id)})})]},t)})}),(0,Tt.jsx)("div",{className:"tab-sync-footer",children:(0,Tt.jsxs)("div",{className:"tab-sync-stats",children:[(0,Tt.jsxs)("span",{children:[p.size," of ",D.length," tabs selected"]}),_&&(0,Tt.jsxs)("span",{children:['• Filtered by "',_,'"']}),x&&(0,Tt.jsx)("span",{children:"• Pinned only"})]})})]})}):null};function ea(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const ta=function(n){var e,t,r=n.link,a=n.onSave,o=n.onClose,s=(e=(0,i.useState)(r.userNote||""),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(e,t)||function(n,e){if(n){if("string"==typeof n)return ea(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ea(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=s[0],c=s[1];return(0,Tt.jsx)("div",{className:"modal-overlay",onClick:o,children:(0,Tt.jsxs)("div",{className:"modal-content",onClick:function(n){return n.stopPropagation()},children:[(0,Tt.jsxs)("div",{className:"modal-header",children:[(0,Tt.jsx)("h2",{className:"modal-title",children:"Add Note"}),(0,Tt.jsx)("button",{onClick:o,className:"modal-close-button",title:"Close",children:(0,Tt.jsx)(b,{size:20})})]}),(0,Tt.jsxs)("form",{onSubmit:function(n){n.preventDefault(),a(l)},children:[(0,Tt.jsx)("div",{className:"modal-body",children:(0,Tt.jsxs)("div",{className:"form-group",children:[(0,Tt.jsx)("label",{htmlFor:"note",children:"Your Note"}),(0,Tt.jsx)("textarea",{id:"note",value:l,onChange:function(n){return c(n.target.value)},placeholder:"Add a note about why you saved this link...",rows:6,autoFocus:!0})]})}),(0,Tt.jsxs)("div",{className:"modal-footer",children:[(0,Tt.jsx)("button",{type:"button",onClick:o,className:"button",children:"Cancel"}),(0,Tt.jsx)("button",{type:"submit",className:"button primary",children:"Save Note"})]})]})]})})};function ra(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return aa(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?aa(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function aa(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const ia=function(n){var e=n.onSave,t=n.onClose,r=ra((0,i.useState)(""),2),a=r[0],o=r[1],s=ra((0,i.useState)(""),2),l=s[0],c=s[1];return(0,Tt.jsx)("div",{className:"modal-overlay",onClick:t,children:(0,Tt.jsxs)("div",{className:"modal-content",onClick:function(n){return n.stopPropagation()},children:[(0,Tt.jsxs)("div",{className:"modal-header",children:[(0,Tt.jsx)("h2",{className:"modal-title",children:"Create Collection"}),(0,Tt.jsx)("button",{onClick:t,className:"modal-close-button",title:"Close",children:(0,Tt.jsx)(b,{size:20})})]}),(0,Tt.jsxs)("form",{onSubmit:function(n){n.preventDefault(),a.trim()&&e(a.trim(),l.trim()||void 0)},children:[(0,Tt.jsxs)("div",{className:"modal-body",children:[(0,Tt.jsxs)("div",{className:"form-group",children:[(0,Tt.jsx)("label",{htmlFor:"collection-name",children:"Collection Name"}),(0,Tt.jsx)("input",{id:"collection-name",type:"text",value:a,onChange:function(n){return o(n.target.value)},placeholder:"e.g. Design Inspiration",required:!0,autoFocus:!0})]}),(0,Tt.jsxs)("div",{className:"form-group",children:[(0,Tt.jsx)("label",{htmlFor:"collection-description",children:"Description (optional)"}),(0,Tt.jsx)("textarea",{id:"collection-description",value:l,onChange:function(n){return c(n.target.value)},placeholder:"A short description of this collection",rows:3})]})]}),(0,Tt.jsxs)("div",{className:"modal-footer",children:[(0,Tt.jsx)("button",{type:"button",onClick:t,className:"button",children:"Cancel"}),(0,Tt.jsx)("button",{type:"submit",className:"button primary",disabled:!a.trim(),children:"Create Collection"})]})]})]})})},oa=l("BookOpen",[["path",{d:"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z",key:"vv98re"}],["path",{d:"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z",key:"1cyq3y"}]]),sa=l("Target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]]),la=l("Lightbulb",[["path",{d:"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5",key:"1gvzjb"}],["path",{d:"M9 18h6",key:"x1upvd"}],["path",{d:"M10 22h4",key:"ceow96"}]]),ca=l("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]]);function ua(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||da(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function da(n,e){if(n){if("string"==typeof n)return Aa(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Aa(n,e):void 0}}function Aa(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const fa=function(n){var e=n.isOpen,t=n.onSave,r=n.onSkip,a=n.onClose,o=n.linkTitle,s=void 0===o?"this link":o,l=n.linkUrl,u=void 0===l?"":l,d=ua((0,i.useState)(""),2),A=d[0],f=d[1],p=ua((0,i.useState)(""),2),h=p[0],m=p[1],v=ua((0,i.useState)([]),2),y=v[0],C=v[1],B=ua((0,i.useState)([]),2),E=B[0],x=B[1],w=[{id:"learn",label:"To Learn",icon:(0,Tt.jsx)(oa,{size:16}),description:"I want to study this topic or skill",suggestedTags:["learning","tutorial","education"]},{id:"reference",label:"For Reference",icon:(0,Tt.jsx)(c,{size:16}),description:"I might need this information later",suggestedTags:["reference","documentation","resource"]},{id:"project",label:"For a Project",icon:(0,Tt.jsx)(sa,{size:16}),description:"This relates to a current or future project",suggestedTags:["project","work","implementation"]},{id:"inspiration",label:"For Inspiration",icon:(0,Tt.jsx)(la,{size:16}),description:"This gives me ideas or creative inspiration",suggestedTags:["inspiration","ideas","creative"]},{id:"later",label:"Read Later",icon:(0,Tt.jsx)(ca,{size:16}),description:"I don't have time now but want to read this",suggestedTags:["read-later","queue","pending"]},{id:"research",label:"For Research",icon:(0,Tt.jsx)(g,{size:16}),description:"This is part of my research on a topic",suggestedTags:["research","analysis","study"]}];(0,i.useEffect)(function(){if(A){var n=w.find(function(n){return n.id===A});n&&(C(n.suggestedTags),x(n.suggestedTags.slice(0,2)))}},[A]);var k=A||h.trim();return e?(0,Tt.jsx)("div",{className:"modal-overlay",onClick:a,children:(0,Tt.jsxs)("div",{className:"modal-content save-prompt-modal",onClick:function(n){return n.stopPropagation()},children:[(0,Tt.jsxs)("div",{className:"modal-header",children:[(0,Tt.jsx)("h2",{className:"modal-title",children:"Why are you saving this?"}),(0,Tt.jsx)("button",{onClick:a,className:"modal-close-button",title:"Close",children:(0,Tt.jsx)(b,{size:20})})]}),(0,Tt.jsxs)("div",{className:"modal-body",children:[(0,Tt.jsxs)("div",{className:"save-prompt-link-preview",children:[(0,Tt.jsx)("div",{className:"link-preview-title",children:s}),u&&(0,Tt.jsx)("div",{className:"link-preview-url",children:new URL(u).hostname})]}),(0,Tt.jsxs)("div",{className:"save-reasons-section",children:[(0,Tt.jsx)("h3",{children:"Select a reason:"}),(0,Tt.jsx)("div",{className:"save-reasons-grid",children:w.map(function(n){return(0,Tt.jsxs)("button",{onClick:function(){return e=n.id,f(e),void m("");var e},className:"save-reason-card ".concat(A===n.id?"selected":""),children:[(0,Tt.jsx)("div",{className:"save-reason-icon",children:n.icon}),(0,Tt.jsxs)("div",{className:"save-reason-content",children:[(0,Tt.jsx)("div",{className:"save-reason-label",children:n.label}),(0,Tt.jsx)("div",{className:"save-reason-description",children:n.description})]})]},n.id)})})]}),(0,Tt.jsxs)("div",{className:"custom-reason-section",children:[(0,Tt.jsx)("h3",{children:"Or write your own reason:"}),(0,Tt.jsx)("textarea",{value:h,onChange:function(n){return e=n.target.value,m(e),void(e.trim()&&f(""));var e},placeholder:"I'm saving this because...",className:"custom-reason-input",rows:3})]}),y.length>0&&(0,Tt.jsxs)("div",{className:"suggested-tags-section",children:[(0,Tt.jsx)("h3",{children:"Suggested tags:"}),(0,Tt.jsx)("div",{className:"suggested-tags",children:y.map(function(n){return(0,Tt.jsx)("button",{onClick:function(){return function(n){x(function(e){return e.includes(n)?e.filter(function(e){return e!==n}):[].concat(function(n){if(Array.isArray(n))return Aa(n)}(t=e)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||da(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[n]);var t})}(n)},className:"suggested-tag ".concat(E.includes(n)?"selected":""),children:n},n)})})]}),(0,Tt.jsxs)("div",{className:"save-prompt-tip",children:[(0,Tt.jsx)(la,{size:16}),(0,Tt.jsx)("span",{children:"Adding context helps you find and use your saved links more effectively!"})]})]}),(0,Tt.jsxs)("div",{className:"modal-footer",children:[(0,Tt.jsx)("button",{onClick:r,className:"button",children:"Skip for now"}),(0,Tt.jsx)("button",{onClick:function(){var n,e=h.trim()||(null===(n=w.find(function(n){return n.id===A}))||void 0===n?void 0:n.description)||"Saved for later reference";t(e,E)},className:"button primary",disabled:!k,children:"Save with context"})]})]})}):null},pa=function(n){var e=n.tags,t=n.selectedTag,r=n.onTagSelect,a=n.loading,i=function(n){for(var e=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<n.length;r++)t=n.charCodeAt(r)+((t<<5)-t);return e[Math.abs(t)%e.length]};return void 0!==a&&a?(0,Tt.jsx)("div",{className:"tag-filters",children:(0,Tt.jsx)("div",{className:"tag-filter-skeleton",children:"Loading tags..."})}):0===e.length?null:(0,Tt.jsxs)("div",{className:"tag-filters",children:[t&&(0,Tt.jsxs)("button",{onClick:function(){return r(null)},className:"tag-filter active",title:"Clear tag filter",children:[(0,Tt.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:i(t)}}),t,(0,Tt.jsx)(b,{size:12})]}),e.filter(function(n){return n.name!==t}).sort(function(n,e){return e.usageCount-n.usageCount}).slice(0,10).map(function(n){return(0,Tt.jsxs)("button",{onClick:function(){return r(n.name)},className:"tag-filter",title:"Filter by ".concat(n.name," tag"),children:[(0,Tt.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:i(n.name)}}),n.name,(0,Tt.jsx)("span",{className:"tag-filter-count",children:n.usageCount})]},n.id)}),e.length>10&&!t&&(0,Tt.jsxs)("span",{className:"tag-filter-more",children:["+",e.length-10," more"]})]})},ha=l("User",[["path",{d:"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2",key:"975kel"}],["circle",{cx:"12",cy:"7",r:"4",key:"17ys0d"}]]),ga=l("Palette",[["circle",{cx:"13.5",cy:"6.5",r:".5",key:"1xcu5"}],["circle",{cx:"17.5",cy:"10.5",r:".5",key:"736e4u"}],["circle",{cx:"8.5",cy:"7.5",r:".5",key:"clrty"}],["circle",{cx:"6.5",cy:"12.5",r:".5",key:"1s4xz9"}],["path",{d:"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",key:"12rzf8"}]]),ma=l("Mail",[["rect",{width:"20",height:"16",x:"2",y:"4",rx:"2",key:"18n3k1"}],["path",{d:"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7",key:"1ocrg3"}]]),va=l("Database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]),ba=l("ChevronLeft",[["path",{d:"m15 18-6-6 6-6",key:"1wnfg3"}]]),ya=l("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]),Ca=l("HelpCircle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3",key:"1u773s"}],["path",{d:"M12 17h.01",key:"p32p05"}]]),Ba=l("Calendar",[["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",ry:"2",key:"eu3xkr"}],["line",{x1:"16",x2:"16",y1:"2",y2:"6",key:"m3sa8f"}],["line",{x1:"8",x2:"8",y1:"2",y2:"6",key:"18kwsl"}],["line",{x1:"3",x2:"21",y1:"10",y2:"10",key:"xt86sb"}]]),Ea=l("Send",[["path",{d:"m22 2-7 20-4-9-9-4Z",key:"1q3vgg"}],["path",{d:"M22 2 11 13",key:"nzbqef"}]]);var xa=a(508);function wa(n){return wa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},wa(n)}function ka(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=Sa(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,a=function(){};return{s:a,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return o=n.done,n},e:function(n){s=!0,i=n},f:function(){try{o||null==t.return||t.return()}finally{if(s)throw i}}}}function ja(n){return function(n){if(Array.isArray(n))return _a(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Sa(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Sa(n,e){if(n){if("string"==typeof n)return _a(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_a(n,e):void 0}}function _a(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function Ia(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return za(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(za(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,za(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,za(d,"constructor",c),za(c,"constructor",l),l.displayName="GeneratorFunction",za(c,a,"GeneratorFunction"),za(d),za(d,a,"Generator"),za(d,r,function(){return this}),za(d,"toString",function(){return"[object Generator]"}),(Ia=function(){return{w:i,m:A}})()}function za(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}za=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){za(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},za(n,e,t,r)}function Na(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Ta(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Na(i,r,a,o,s,"next",n)}function s(n){Na(i,r,a,o,s,"throw",n)}o(void 0)})}}function Oa(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Pa(r.key),r)}}function Pa(n){var e=function(n){if("object"!=wa(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=wa(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==wa(e)?e:e+""}var Da=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return e=n,t=[{key:"getPreferences",value:(g=Ta(Ia().m(function n(){var e,t;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("digest_preferences");case 1:return e=n.v,n.a(2,e.digest_preferences||this.getDefaultPreferences());case 2:return n.p=2,t=n.v,console.error("Failed to get digest preferences:",t),n.a(2,this.getDefaultPreferences())}},n,this,[[0,2]])})),function(){return g.apply(this,arguments)})},{key:"savePreferences",value:(h=Ta(Ia().m(function n(e){var t;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({digest_preferences:e});case 1:if(!e.enabled){n.n=3;break}return n.n=2,this.scheduleDigest(e);case 2:n.n=4;break;case 3:return n.n=4,this.unscheduleDigest();case 4:n.n=6;break;case 5:throw n.p=5,t=n.v,console.error("Failed to save digest preferences:",t),t;case 6:return n.a(2)}},n,this,[[0,5]])})),function(n){return h.apply(this,arguments)})},{key:"getDefaultPreferences",value:function(){return{enabled:!1,frequency:"weekly",time:"09:00",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,includeStats:!0,includeRecentSaves:!0,includePopularLinks:!0,includeSmartCollections:!0,includeActivitySummary:!0,maxLinksPerSection:5}}},{key:"generateDigest",value:(p=Ta(Ia().m(function n(e,t){var r,a,i,o,s,l,c,u,d,A,f,p,h,g,m,v,b,y,C,B,E,x,w;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,r=t||this.calculatePeriod(e.frequency),n.n=1,St.getData();case 1:return a=n.v,n.n=2,St.getActivityStats();case 2:if(i=n.v,o=[],!e.includeRecentSaves){n.n=4;break}return c=o,n.n=3,this.generateRecentSavesSection(a.links,r,e.maxLinksPerSection);case 3:u=n.v,c.push.call(c,u);case 4:if(!e.includePopularLinks){n.n=6;break}return d=o,n.n=5,this.generatePopularLinksSection(a.links,r,e.maxLinksPerSection);case 5:A=n.v,d.push.call(d,A);case 6:if(!e.includeSmartCollections){n.n=8;break}return f=o,n.n=7,this.generateSmartCollectionsSection(a.smartCollections||[],e.maxLinksPerSection);case 7:p=n.v,f.push.call(f,p);case 8:if(!e.includeActivitySummary){n.n=10;break}return h=o,n.n=9,this.generateActivitySummarySection(r);case 9:g=n.v,h.push.call(h,g);case 10:return n.n=11,this.generateAIInsights(o,r);case 11:return s=n.v,m="digest_".concat(Date.now()),v=new Date,b=r,y=this.countLinksInPeriod(a.links,r),C=i.thisWeekActivity,B=this.countCollectionsInPeriod(a.collections,r),n.n=12,this.countTagsUsedInPeriod(r);case 12:return E=n.v,x=i.currentStreak,l={id:m,userId:"current_user",generatedAt:v,period:b,stats:{linksSaved:y,linksRead:C,collectionsCreated:B,tagsUsed:E,currentStreak:x},sections:o,aiInsights:s,sent:!1},n.a(2,l);case 13:throw n.p=13,w=n.v,console.error("Failed to generate digest:",w),w;case 14:return n.a(2)}},n,this,[[0,13]])})),function(n,e){return p.apply(this,arguments)})},{key:"generateRecentSavesSection",value:(f=Ta(Ia().m(function n(e,t,r){var a,i,o,s;return Ia().w(function(n){for(;;)switch(n.n){case 0:if(a=e.filter(function(n){return n.createdAt>=t.start&&n.createdAt<=t.end}).sort(function(n,e){return e.createdAt.getTime()-n.createdAt.getTime()}).slice(0,r),i="",!(a.length>0)){n.n=4;break}return n.p=1,o=a.map(function(n){return n.title}).join(", "),n.n=2,xa.aiService.generateText("Provide a brief, engaging summary of these recently saved links and identify any common themes: ".concat(o),100);case 2:i=n.v,n.n=4;break;case 3:n.p=3,s=n.v,console.error("Failed to generate AI summary for recent saves:",s);case 4:return n.a(2,{type:"recent_saves",title:"📚 Recent Saves (".concat(a.length,")"),content:a.map(function(n){return{title:n.title,url:n.url,domain:n.domain,favicon:n.favicon,aiSummary:n.aiSummary,createdAt:n.createdAt}}),aiSummary:i})}},n,null,[[1,3]])})),function(n,e,t){return f.apply(this,arguments)})},{key:"generatePopularLinksSection",value:(A=Ta(Ia().m(function n(e,t,r){var a,i,o,s,l=this;return Ia().w(function(n){for(;;)switch(n.n){case 0:if(a=e.filter(function(n){return n.createdAt>=t.start&&n.createdAt<=t.end}).sort(function(n,e){var t=l.calculatePopularityScore(n);return l.calculatePopularityScore(e)-t}).slice(0,r),i="",!(a.length>0)){n.n=4;break}return n.p=1,o=ja(new Set(a.map(function(n){return n.domain}))),n.n=2,xa.aiService.generateText("Analyze these popular domains and explain why they might be trending: ".concat(o.join(", ")),100);case 2:i=n.v,n.n=4;break;case 3:n.p=3,s=n.v,console.error("Failed to generate AI summary for popular links:",s);case 4:return n.a(2,{type:"popular_links",title:"🔥 Trending Links (".concat(a.length,")"),content:a.map(function(n){return{title:n.title,url:n.url,domain:n.domain,favicon:n.favicon,aiSummary:n.aiSummary,popularityScore:l.calculatePopularityScore(n)}}),aiSummary:i})}},n,null,[[1,3]])})),function(n,e,t){return A.apply(this,arguments)})},{key:"generateSmartCollectionsSection",value:(d=Ta(Ia().m(function n(e,t){var r,a,i,o;return Ia().w(function(n){for(;;)switch(n.n){case 0:if(r=e.filter(function(n){return n.autoUpdate}).slice(0,t),a="",!(r.length>0)){n.n=4;break}return n.p=1,i=r.map(function(n){return n.name}).join(", "),n.n=2,xa.aiService.generateText("Explain how these smart collections can help organize knowledge: ".concat(i),100);case 2:a=n.v,n.n=4;break;case 3:n.p=3,o=n.v,console.error("Failed to generate AI summary for smart collections:",o);case 4:return n.a(2,{type:"smart_collections",title:"✨ Smart Collections (".concat(r.length,")"),content:r.map(function(n){return{name:n.name,description:n.description,icon:n.icon,linkCount:0}}),aiSummary:a})}},n,null,[[1,3]])})),function(n,e){return d.apply(this,arguments)})},{key:"generateActivitySummarySection",value:(u=Ta(Ia().m(function n(e){var t,r,a,i,o,s;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getActivities(e.start,e.end);case 1:return t=n.v,n.n=2,St.getActivityStats();case 2:return r=n.v,a={totalActivities:t.length,saveActivities:t.filter(function(n){return"save"===n.type}).length,readActivities:t.filter(function(n){return"read"===n.type}).length,organizeActivities:t.filter(function(n){return"organize"===n.type}).length,currentStreak:r.currentStreak,longestStreak:r.longestStreak},i="",n.p=3,n.n=4,xa.aiService.generateText("Provide encouraging insights about this activity pattern: ".concat(a.saveActivities," saves, ").concat(a.readActivities," reads, ").concat(a.organizeActivities," organizes, ").concat(a.currentStreak," day streak"),100);case 4:i=n.v,n.n=6;break;case 5:n.p=5,o=n.v,console.error("Failed to generate AI summary for activity:",o);case 6:return n.a(2,{type:"activity_summary",title:"📊 Your Activity (".concat(a.totalActivities," actions)"),content:[a],aiSummary:i});case 7:return n.p=7,s=n.v,console.error("Failed to generate activity summary:",s),n.a(2,{type:"activity_summary",title:"📊 Your Activity",content:[],aiSummary:"Activity tracking data unavailable."})}},n,null,[[3,5],[0,7]])})),function(n){return u.apply(this,arguments)})},{key:"generateAIInsights",value:(c=Ta(Ia().m(function n(e,t){var r,a;return Ia().w(function(n){for(;;)switch(n.n){case 0:if(n.p=0,r=e.filter(function(n){return n.aiSummary}).map(function(n){return"".concat(n.title,": ").concat(n.aiSummary)}).join("\n")){n.n=1;break}return n.a(2,"Keep up the great work building your knowledge collection!");case 1:return n.n=2,xa.aiService.generateText("Based on these sections from a user's knowledge digest, provide personalized insights and suggestions for improvement:\n".concat(r),200);case 2:return n.a(2,n.v);case 3:return n.p=3,a=n.v,console.error("Failed to generate AI insights:",a),n.a(2,"Continue exploring and saving valuable content to build your personal knowledge base!")}},n,null,[[0,3]])})),function(n,e){return c.apply(this,arguments)})},{key:"calculatePeriod",value:function(n){var e=new Date,t=new Date;switch(n){case"daily":t.setDate(t.getDate()-1);break;case"weekly":t.setDate(t.getDate()-7);break;case"monthly":t.setDate(t.getDate()-30)}return{start:t,end:e}}},{key:"calculatePopularityScore",value:function(n){var e=0,t=(Date.now()-n.createdAt.getTime())/864e5;return e+=2*Math.max(0,7-t),["github.com","stackoverflow.com","medium.com","dev.to","hackernews.com"].includes(n.domain)&&(e+=5),n.aiSummary&&(e+=3),n.userNote&&(e+=2),e}},{key:"countLinksInPeriod",value:function(n,e){return n.filter(function(n){return n.createdAt>=e.start&&n.createdAt<=e.end}).length}},{key:"countCollectionsInPeriod",value:function(n,e){return n.filter(function(n){return n.createdAt>=e.start&&n.createdAt<=e.end}).length}},{key:"countTagsUsedInPeriod",value:(l=Ta(Ia().m(function n(e){var t,r,a,i;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getActivities(e.start,e.end);case 1:return t=n.v,r=t.filter(function(n){return n.metadata&&n.metadata.tags&&n.metadata.tags.length>0}),a=new Set,r.forEach(function(n){n.metadata.tags.forEach(function(n){return a.add(n)})}),n.a(2,a.size);case 2:return n.p=2,i=n.v,console.error("Failed to count tags used in period:",i),n.a(2,0)}},n,null,[[0,2]])})),function(n){return l.apply(this,arguments)})},{key:"generateEmailHTML",value:(s=Ta(Ia().m(function n(e){var t,r,a,i,o,s,l,c,u;return Ia().w(function(n){for(;;)if(0===n.n){t=e.period,r=e.stats,a=e.sections,i=e.aiInsights,o=this.formatPeriod(t),s='\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <title>Your Nest Digest</title>\n        <style>\n          body { font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; background-color: #f8fafc; }\n          .container { max-width: 600px; margin: 0 auto; background: white; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; text-align: center; }\n          .header h1 { margin: 0; font-size: 2rem; }\n          .header p { margin: 0.5rem 0 0; opacity: 0.9; }\n          .content { padding: 2rem; }\n          .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 1rem; margin-bottom: 2rem; }\n          .stat { background: #f8fafc; padding: 1rem; border-radius: 8px; text-align: center; }\n          .stat-number { font-size: 1.5rem; font-weight: bold; color: #667eea; }\n          .stat-label { font-size: 0.875rem; color: #64748b; margin-top: 0.25rem; }\n          .section { margin-bottom: 2rem; }\n          .section-title { font-size: 1.25rem; font-weight: bold; margin-bottom: 1rem; color: #1e293b; }\n          .link-item { display: flex; gap: 1rem; padding: 1rem; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 1rem; }\n          .link-favicon { width: 24px; height: 24px; border-radius: 4px; flex-shrink: 0; }\n          .link-content { flex: 1; }\n          .link-title { font-weight: 600; color: #1e293b; text-decoration: none; }\n          .link-title:hover { color: #667eea; }\n          .link-domain { font-size: 0.875rem; color: #64748b; margin-top: 0.25rem; }\n          .link-summary { font-size: 0.875rem; color: #475569; margin-top: 0.5rem; }\n          .ai-insights { background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%); padding: 1.5rem; border-radius: 12px; margin: 2rem 0; }\n          .ai-insights h3 { margin: 0 0 1rem; color: #0369a1; }\n          .ai-insights p { margin: 0; }\n          .footer { background: #f8fafc; padding: 2rem; text-align: center; color: #64748b; font-size: 0.875rem; }\n          .button { display: inline-block; background: #667eea; color: white; padding: 0.75rem 1.5rem; border-radius: 8px; text-decoration: none; font-weight: 600; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>📚 Your Nest Digest</h1>\n            <p>'.concat(o,'</p>\n          </div>\n          \n          <div class="content">\n            <div class="stats">\n              <div class="stat">\n                <div class="stat-number">').concat(r.linksSaved,'</div>\n                <div class="stat-label">Links Saved</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.linksRead,'</div>\n                <div class="stat-label">Links Read</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.collectionsCreated,'</div>\n                <div class="stat-label">Collections</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.currentStreak,'</div>\n                <div class="stat-label">Day Streak</div>\n              </div>\n            </div>\n    '),l=ka(a);try{for(l.s();!(c=l.n()).done;)u=c.value,s+=this.generateSectionHTML(u)}catch(n){l.e(n)}finally{l.f()}return i&&(s+='\n        <div class="ai-insights">\n          <h3>✨ AI Insights</h3>\n          <p>'.concat(i,"</p>\n        </div>\n      ")),s+='\n            <div style="text-align: center; margin: 2rem 0;">\n              <a href="chrome-extension://nest" class="button">Open Nest</a>\n            </div>\n          </div>\n          \n          <div class="footer">\n            <p>This digest was generated by Nest - Your Smart Bookmarking Assistant</p>\n            <p>You can adjust your digest preferences in the Nest settings.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    ',n.a(2,s)}},n,this)})),function(n){return s.apply(this,arguments)})},{key:"generateSectionHTML",value:function(n){var e='<div class="section"><h2 class="section-title">'.concat(n.title,"</h2>");if("recent_saves"===n.type||"popular_links"===n.type){var t,r=ka(n.content);try{for(r.s();!(t=r.n()).done;){var a=t.value;e+='\n          <div class="link-item">\n            <img src="'.concat(a.favicon||"https://www.google.com/s2/favicons?domain=".concat(a.domain,"&sz=24"),'" alt="" class="link-favicon">\n            <div class="link-content">\n              <a href="').concat(a.url,'" class="link-title" target="_blank">').concat(a.title,'</a>\n              <div class="link-domain">').concat(a.domain,"</div>\n              ").concat(a.aiSummary?'<div class="link-summary">'.concat(a.aiSummary,"</div>"):"","\n            </div>\n          </div>\n        ")}}catch(n){r.e(n)}finally{r.f()}}else if("smart_collections"===n.type){var i,o=ka(n.content);try{for(o.s();!(i=o.n()).done;){var s=i.value;e+='\n          <div class="link-item">\n            <div style="font-size: 1.5rem; width: 24px; text-align: center;">'.concat(s.icon||"📁",'</div>\n            <div class="link-content">\n              <div class="link-title">').concat(s.name,'</div>\n              <div class="link-summary">').concat(s.description,"</div>\n            </div>\n          </div>\n        ")}}catch(n){o.e(n)}finally{o.f()}}else if("activity_summary"===n.type){var l=n.content[0];l&&(e+='\n          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); gap: 1rem;">\n            <div class="stat">\n              <div class="stat-number">'.concat(l.saveActivities,'</div>\n              <div class="stat-label">Saves</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(l.readActivities,'</div>\n              <div class="stat-label">Reads</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(l.organizeActivities,'</div>\n              <div class="stat-label">Organizes</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(l.currentStreak,'</div>\n              <div class="stat-label">Day Streak</div>\n            </div>\n          </div>\n        '))}return n.aiSummary&&(e+='<div style="background: #f1f5f9; padding: 1rem; border-radius: 8px; margin-top: 1rem; font-style: italic;">'.concat(n.aiSummary,"</div>")),e+"</div>"}},{key:"formatPeriod",value:function(n){var e={month:"short",day:"numeric",year:n.start.getFullYear()!==n.end.getFullYear()?"numeric":void 0},t=n.start.toLocaleDateString("en-US",e),r=n.end.toLocaleDateString("en-US",e);return"".concat(t," - ").concat(r)}},{key:"scheduleDigest",value:(o=Ta(Ia().m(function n(e){var t;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({digest_schedule:{enabled:!0,frequency:e.frequency,time:e.time,timezone:e.timezone,lastSent:null,nextSend:this.calculateNextSendTime(e)}});case 1:n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to schedule digest:",t);case 3:return n.a(2)}},n,this,[[0,2]])})),function(n){return o.apply(this,arguments)})},{key:"unscheduleDigest",value:(i=Ta(Ia().m(function n(){var e;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.set({digest_schedule:{enabled:!1}});case 1:n.n=3;break;case 2:n.p=2,e=n.v,console.error("Failed to unschedule digest:",e);case 3:return n.a(2)}},n,null,[[0,2]])})),function(){return i.apply(this,arguments)})},{key:"calculateNextSendTime",value:function(n){var e=new Date,t=function(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||Sa(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(n.time.split(":").map(Number),2),r=t[0],a=t[1],i=new Date;if(i.setHours(r,a,0,0),i<=e)switch(n.frequency){case"daily":i.setDate(i.getDate()+1);break;case"weekly":i.setDate(i.getDate()+7);break;case"monthly":i.setMonth(i.getMonth()+1)}return i}},{key:"generatePreview",value:(a=Ta(Ia().m(function n(){var e;return Ia().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getPreferences();case 1:return e=n.v,n.a(2,this.generateDigest(e))}},n,this)})),function(){return a.apply(this,arguments)})}],r=[{key:"getInstance",value:function(){return n.instance||(n.instance=new n),n.instance}}],t&&Oa(e.prototype,t),r&&Oa(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,r,a,i,o,s,l,c,u,d,A,f,p,h,g}(),La=Da.getInstance();function Ra(n){return Ra="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ra(n)}function Ma(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Ua(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Ma(Object(t),!0).forEach(function(e){Fa(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Ma(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Fa(n,e,t){return(e=function(n){var e=function(n){if("object"!=Ra(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Ra(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Ra(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function $a(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Ya(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Ya(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,Ya(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,Ya(d,"constructor",c),Ya(c,"constructor",l),l.displayName="GeneratorFunction",Ya(c,a,"GeneratorFunction"),Ya(d),Ya(d,a,"Generator"),Ya(d,r,function(){return this}),Ya(d,"toString",function(){return"[object Generator]"}),($a=function(){return{w:i,m:A}})()}function Ya(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Ya=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){Ya(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},Ya(n,e,t,r)}function qa(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Wa(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){qa(i,r,a,o,s,"next",n)}function s(n){qa(i,r,a,o,s,"throw",n)}o(void 0)})}}function Ga(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ha(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ha(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ha(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Ka=function(n){n.onClose;var e=Ga((0,i.useState)(null),2),t=e[0],r=e[1],a=Ga((0,i.useState)(!0),2),o=a[0],s=a[1],l=Ga((0,i.useState)(!1),2),c=l[0],u=l[1],d=Ga((0,i.useState)(""),2),A=d[0],f=d[1],p=Ga((0,i.useState)(null),2),h=p[0],g=p[1],m=Ga((0,i.useState)(!1),2),v=m[0],b=m[1],y=Ga((0,i.useState)(!1),2),C=y[0],B=y[1];(0,i.useEffect)(function(){E()},[]);var E=function(){var n=Wa($a().m(function n(){var e,t;return $a().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,La.getPreferences();case 1:e=n.v,r(e),n.n=3;break;case 2:n.p=2,t=n.v,console.error("Failed to load digest preferences:",t),f("Failed to load preferences");case 3:return n.p=3,s(!1),n.f(3);case 4:return n.a(2)}},n,null,[[0,2,3,4]])}));return function(){return n.apply(this,arguments)}}(),x=function(){var n=Wa($a().m(function n(e){var t;return $a().w(function(n){for(;;)switch(n.n){case 0:return u(!0),f(""),n.p=1,n.n=2,La.savePreferences(e);case 2:r(e),f("Digest preferences saved successfully!"),setTimeout(function(){return f("")},3e3),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to save digest preferences:",t),f("Failed to save preferences");case 4:return n.p=4,u(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(e){return n.apply(this,arguments)}}(),w=function(){var n=Wa($a().m(function n(){var e,r;return $a().w(function(n){for(;;)switch(n.n){case 0:if(t){n.n=1;break}return n.a(2);case 1:return B(!0),n.p=2,n.n=3,La.generatePreview();case 3:e=n.v,g(e),b(!0),n.n=5;break;case 4:n.p=4,r=n.v,console.error("Failed to generate preview:",r),f("Failed to generate preview");case 5:return n.p=5,B(!1),n.f(5);case 6:return n.a(2)}},n,null,[[2,4,5,6]])}));return function(){return n.apply(this,arguments)}}(),k=function(){var n=Wa($a().m(function n(){var e,r,a,i;return $a().w(function(n){for(;;)switch(n.n){case 0:if(t&&h){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,La.generateEmailHTML(h);case 2:e=n.v,r=new Blob([e],{type:"text/html"}),a=URL.createObjectURL(r),window.open(a,"_blank"),f("Test digest opened in new tab!"),setTimeout(function(){return f("")},3e3),n.n=4;break;case 3:n.p=3,i=n.v,console.error("Failed to generate test digest:",i),f("Failed to generate test digest");case 4:return n.a(2)}},n,null,[[1,3]])}));return function(){return n.apply(this,arguments)}}();return o||!t?(0,Tt.jsx)("div",{className:"digest-settings",children:(0,Tt.jsx)("div",{className:"loading-spinner",children:"Loading digest settings..."})}):(0,Tt.jsxs)("div",{className:"digest-settings",children:[(0,Tt.jsxs)("div",{className:"digest-header",children:[(0,Tt.jsxs)("div",{className:"digest-header-content",children:[(0,Tt.jsx)(ma,{size:24,className:"digest-icon"}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("h3",{children:"Daily Digest Email"}),(0,Tt.jsx)("p",{children:"Get personalized summaries of your saved content delivered to your inbox"})]})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",title:"Enable daily digest emails",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:t.enabled,onChange:function(n){return x(Ua(Ua({},t),{},{enabled:n.target.checked}))},disabled:c,"aria-label":"Enable daily digest emails"}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]}),t.enabled&&(0,Tt.jsxs)("div",{className:"digest-config",children:[(0,Tt.jsxs)("div",{className:"setting-group",children:[(0,Tt.jsx)("h4",{children:"Schedule"}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)(Ba,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Frequency"}),(0,Tt.jsx)("div",{className:"setting-description",children:"How often to receive digests"})]})]}),(0,Tt.jsxs)("select",{value:t.frequency,onChange:function(n){return x(Ua(Ua({},t),{},{frequency:n.target.value}))},className:"form-control",disabled:c,title:"Select digest frequency","aria-label":"Digest frequency",children:[(0,Tt.jsx)("option",{value:"daily",children:"Daily"}),(0,Tt.jsx)("option",{value:"weekly",children:"Weekly"}),(0,Tt.jsx)("option",{value:"monthly",children:"Monthly"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)(ca,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Delivery Time"}),(0,Tt.jsx)("div",{className:"setting-description",children:"When to send the digest"})]})]}),(0,Tt.jsx)("input",{type:"time",value:t.time,onChange:function(n){return x(Ua(Ua({},t),{},{time:n.target.value}))},className:"form-control",disabled:c,title:"Select delivery time","aria-label":"Delivery time"})]})]}),(0,Tt.jsxs)("div",{className:"setting-group",children:[(0,Tt.jsx)("h4",{children:"Content"}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Include Statistics"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Show your activity stats and streaks"})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",title:"Include statistics in digest",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:t.includeStats,onChange:function(n){return x(Ua(Ua({},t),{},{includeStats:n.target.checked}))},disabled:c,"aria-label":"Include statistics"}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Recent Saves"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Your latest bookmarked links"})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",title:"Include recent saves in digest",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:t.includeRecentSaves,onChange:function(n){return x(Ua(Ua({},t),{},{includeRecentSaves:n.target.checked}))},disabled:c,"aria-label":"Include recent saves"}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Trending Links"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Popular content from your collection"})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",title:"Include trending links in digest",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:t.includePopularLinks,onChange:function(n){return x(Ua(Ua({},t),{},{includePopularLinks:n.target.checked}))},disabled:c,"aria-label":"Include trending links"}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Smart Collections"}),(0,Tt.jsx)("div",{className:"setting-description",children:"AI-curated content collections"})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",title:"Include smart collections in digest",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:t.includeSmartCollections,onChange:function(n){return x(Ua(Ua({},t),{},{includeSmartCollections:n.target.checked}))},disabled:c,"aria-label":"Include smart collections"}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Activity Summary"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Your reading and organizing activity"})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",title:"Include activity summary in digest",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:t.includeActivitySummary,onChange:function(n){return x(Ua(Ua({},t),{},{includeActivitySummary:n.target.checked}))},disabled:c,"aria-label":"Include activity summary"}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsx)("div",{className:"setting-info",children:(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Links per Section"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Maximum number of links to include in each section"})]})}),(0,Tt.jsx)("input",{type:"number",min:"1",max:"10",value:t.maxLinksPerSection,onChange:function(n){return x(Ua(Ua({},t),{},{maxLinksPerSection:parseInt(n.target.value)||5}))},className:"form-control",style:{width:"80px"},disabled:c,title:"Maximum links per section","aria-label":"Links per section"})]})]}),(0,Tt.jsxs)("div",{className:"setting-group",children:[(0,Tt.jsx)("h4",{children:"Preview & Test"}),(0,Tt.jsxs)("div",{className:"digest-actions",children:[(0,Tt.jsxs)("button",{onClick:w,disabled:C,className:"button secondary",children:[(0,Tt.jsx)(or,{size:16}),C?"Generating...":"Preview Digest"]}),h&&(0,Tt.jsxs)("button",{onClick:k,className:"button primary",children:[(0,Tt.jsx)(Ea,{size:16}),"Open Test Email"]})]})]}),v&&h&&(0,Tt.jsxs)("div",{className:"digest-preview",children:[(0,Tt.jsx)("h4",{children:"Digest Preview"}),(0,Tt.jsxs)("div",{className:"preview-content",children:[(0,Tt.jsxs)("div",{className:"preview-header",children:[(0,Tt.jsx)("h5",{children:"📚 Your Nest Digest"}),(0,Tt.jsxs)("p",{children:[h.period.start.toLocaleDateString()," - ",h.period.end.toLocaleDateString()]})]}),(0,Tt.jsxs)("div",{className:"preview-stats",children:[(0,Tt.jsxs)("div",{className:"preview-stat",children:[(0,Tt.jsx)("span",{className:"stat-number",children:h.stats.linksSaved}),(0,Tt.jsx)("span",{className:"stat-label",children:"Links Saved"})]}),(0,Tt.jsxs)("div",{className:"preview-stat",children:[(0,Tt.jsx)("span",{className:"stat-number",children:h.stats.linksRead}),(0,Tt.jsx)("span",{className:"stat-label",children:"Links Read"})]}),(0,Tt.jsxs)("div",{className:"preview-stat",children:[(0,Tt.jsx)("span",{className:"stat-number",children:h.stats.currentStreak}),(0,Tt.jsx)("span",{className:"stat-label",children:"Day Streak"})]})]}),(0,Tt.jsx)("div",{className:"preview-sections",children:h.sections.map(function(n,e){return(0,Tt.jsxs)("div",{className:"preview-section",children:[(0,Tt.jsx)("h6",{children:n.title}),(0,Tt.jsxs)("p",{children:[n.content.length," items"]}),n.aiSummary&&(0,Tt.jsx)("div",{className:"preview-ai-summary",children:(0,Tt.jsx)("em",{children:n.aiSummary})})]},e)})}),h.aiInsights&&(0,Tt.jsxs)("div",{className:"preview-insights",children:[(0,Tt.jsx)("h6",{children:"✨ AI Insights"}),(0,Tt.jsx)("p",{children:h.aiInsights})]})]})]})]}),A&&(0,Tt.jsx)("div",{className:"digest-message ".concat(A.includes("Failed")?"error":"success"),children:A})]})};function Va(n){return Va="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Va(n)}function Qa(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Za(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Qa(Object(t),!0).forEach(function(e){Ja(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Qa(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Ja(n,e,t){return(e=function(n){var e=function(n){if("object"!=Va(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Va(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Va(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Xa(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return ni(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(ni(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,ni(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,ni(d,"constructor",c),ni(c,"constructor",l),l.displayName="GeneratorFunction",ni(c,a,"GeneratorFunction"),ni(d),ni(d,a,"Generator"),ni(d,r,function(){return this}),ni(d,"toString",function(){return"[object Generator]"}),(Xa=function(){return{w:i,m:A}})()}function ni(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}ni=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){ni(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},ni(n,e,t,r)}function ei(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function ti(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){ei(i,r,a,o,s,"next",n)}function s(n){ei(i,r,a,o,s,"throw",n)}o(void 0)})}}function ri(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return ai(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ai(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ai(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const ii=function(n){var e=n.onClose,t=ri((0,i.useState)("account"),2),r=t[0],a=t[1],o=ri((0,i.useState)(""),2),s=o[0],l=o[1],c=ri((0,i.useState)({linkCount:0,collectionCount:0,tagCount:0,publicCollections:0,totalViews:0}),2),u=c[0],d=c[1],A=ri((0,i.useState)({autoSummarize:!0,defaultCategory:"general",defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1,autoTagging:!1,autoCategorization:!1,openaiApiKey:"",newTabEnabled:!0,highlightColor:"yellow",highlightStyle:"gradient"}),2),f=A[0],p=A[1],h=ri((0,i.useState)(!0),2),g=h[0],m=h[1],v=ri((0,i.useState)(!1),2),b=v[0],y=v[1],C=ri((0,i.useState)(""),2),B=C[0],E=C[1];(0,i.useEffect)(function(){x(),w(),k()},[]);var x=function(){var n=ti(Xa().m(function n(){var e,t,r;return Xa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,pt.auth.getUser();case 1:e=n.v,(t=e.data.user)&&l(t.email||"Unknown"),n.n=3;break;case 2:n.p=2,r=n.v,console.error("Failed to load user data:",r);case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),w=function(){var n=ti(Xa().m(function n(){var e,t,r,a,i,o,s,l,c,u,d,A,f,h,g,v,b,y,C;return Xa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getData();case 1:return f=n.v,n.n=2,Promise.all([chrome.storage.local.get("nest_newtab_enabled"),chrome.storage.local.get("nest_settings")]);case 2:h=n.v,g=ri(h,2),v=g[0],b=g[1],y=b.nest_settings||{},p({autoSummarize:null===(e=null!==(t=y.autoSummarize)&&void 0!==t?t:f.settings.autoSummarize)||void 0===e||e,defaultCategory:f.settings.defaultCategory||"general",defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1,autoTagging:null!==(r=null!==(a=y.autoTagging)&&void 0!==a?a:f.settings.autoTagging)&&void 0!==r&&r,autoCategorization:null!==(i=null!==(o=y.autoCategorization)&&void 0!==o?o:f.settings.autoCategorization)&&void 0!==i&&i,openaiApiKey:null!==(s=null!==(l=y.openaiApiKey)&&void 0!==l?l:f.settings.openaiApiKey)&&void 0!==s?s:"",newTabEnabled:!1!==v.nest_newtab_enabled,highlightColor:null!==(c=null!==(u=y.highlightColor)&&void 0!==u?u:f.settings.highlightColor)&&void 0!==c?c:"yellow",highlightStyle:null!==(d=null!==(A=y.highlightStyle)&&void 0!==A?A:f.settings.highlightStyle)&&void 0!==d?d:"gradient"}),n.n=4;break;case 3:n.p=3,C=n.v,console.error("Failed to load settings:",C);case 4:return n.p=4,m(!1),n.f(4);case 5:return n.a(2)}},n,null,[[0,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),k=function(){var n=ti(Xa().m(function n(){var e,t,r,a,i,o,s;return Xa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getData();case 1:return e=n.v,n.n=2,St.getUserTags();case 2:return t=n.v,n.n=3,pt.from("collections").select("view_count").eq("is_public",!0);case 3:r=n.v,a=r.data,i=(null==a?void 0:a.length)||0,o=(null==a?void 0:a.reduce(function(n,e){return n+(e.view_count||0)},0))||0,d({linkCount:e.links.length,collectionCount:e.collections.length,tagCount:t.length,publicCollections:i,totalViews:o}),n.n=5;break;case 4:n.p=4,s=n.v,console.error("Failed to load user stats:",s);case 5:return n.a(2)}},n,null,[[0,4]])}));return function(){return n.apply(this,arguments)}}(),j=function(){var n=ti(Xa().m(function n(e){var t,r;return Xa().w(function(n){for(;;)switch(n.n){case 0:if(y(!0),E(""),n.p=1,e.newTabEnabled===f.newTabEnabled){n.n=2;break}return n.n=2,chrome.storage.local.set({nest_newtab_enabled:e.newTabEnabled});case 2:return n.n=3,St.getData();case 3:return Za(Za({},t=n.v),{},{settings:Za(Za({},t.settings),{},{autoSummarize:e.autoSummarize,autoTagging:e.autoTagging,autoCategorization:e.autoCategorization,openaiApiKey:e.openaiApiKey,highlightColor:e.highlightColor,highlightStyle:e.highlightStyle})}),n.n=4,chrome.storage.local.set({nest_settings:{autoSummarize:e.autoSummarize,autoTagging:e.autoTagging,autoCategorization:e.autoCategorization,openaiApiKey:e.openaiApiKey,highlightColor:e.highlightColor,highlightStyle:e.highlightStyle}});case 4:p(e),E("Settings saved successfully!"),setTimeout(function(){return E("")},3e3),n.n=6;break;case 5:n.p=5,r=n.v,console.error("Failed to save settings:",r),E("Failed to save settings");case 6:return n.p=6,y(!1),n.f(6);case 7:return n.a(2)}},n,null,[[1,5,6,7]])}));return function(e){return n.apply(this,arguments)}}(),S=function(){var n=ti(Xa().m(function n(){var e,t,r,a,i,o;return Xa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getData();case 1:return e=n.v,n.n=2,St.getUserTags();case 2:t=n.v,r={exported_at:(new Date).toISOString(),user_email:s,links:e.links,collections:e.collections,tags:t,stats:u},a=new Blob([JSON.stringify(r,null,2)],{type:"application/json"}),i=URL.createObjectURL(a),(o=document.createElement("a")).href=i,o.download="nest-export-".concat((new Date).toISOString().split("T")[0],".json"),document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(i),E("Data exported successfully!"),setTimeout(function(){return E("")},3e3),n.n=4;break;case 3:n.p=3,n.v,E("Failed to export data");case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),_=function(){var n=ti(Xa().m(function n(){var e;return Xa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.cleanupUnusedTags();case 1:e=n.v,E("Cleaned up ".concat(e," unused tags")),k(),setTimeout(function(){return E("")},3e3),n.n=3;break;case 2:n.p=2,n.v,E("Failed to cleanup tags");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),I=function(){var n=ti(Xa().m(function n(){return Xa().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,pt.auth.signOut();case 1:e(),n.n=3;break;case 2:n.p=2,n.v,E("Failed to logout");case 3:return n.a(2)}},n,null,[[0,2]])}));return function(){return n.apply(this,arguments)}}(),z=function(n,e){p(function(t){return Za(Za({},t),{},Ja({},n,e))})},N=[{id:"account",label:"Account",icon:ha},{id:"preferences",label:"Preferences",icon:ga},{id:"digest",label:"Daily Digest",icon:ma},{id:"data",label:"Data",icon:va},{id:"sharing",label:"Sharing",icon:er},{id:"about",label:"About",icon:zr}];return g?(0,Tt.jsxs)("div",{className:"settings-sidebar",children:[(0,Tt.jsxs)("div",{className:"settings-header",children:[(0,Tt.jsx)("button",{onClick:e,className:"settings-back-button",children:(0,Tt.jsx)(ba,{size:20})}),(0,Tt.jsx)("h2",{children:"Settings"})]}),(0,Tt.jsx)("div",{className:"settings-loading",children:(0,Tt.jsx)("div",{className:"loading-spinner",children:"Loading settings..."})})]}):(0,Tt.jsxs)("div",{className:"settings-sidebar",children:[(0,Tt.jsxs)("div",{className:"settings-header",children:[(0,Tt.jsx)("button",{onClick:e,className:"settings-back-button",children:(0,Tt.jsx)(ba,{size:20})}),(0,Tt.jsx)("h2",{children:"Settings"})]}),(0,Tt.jsx)("div",{className:"settings-tabs-horizontal",children:N.map(function(n){var e=n.icon;return(0,Tt.jsx)("button",{onClick:function(){return a(n.id)},className:"settings-tab-horizontal ".concat(r===n.id?"active":""),title:n.label,children:(0,Tt.jsx)(e,{size:16})},n.id)})}),(0,Tt.jsxs)("div",{className:"settings-content-sidebar",children:["account"===r&&(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"Account"}),(0,Tt.jsx)("div",{className:"account-info",children:(0,Tt.jsxs)("div",{className:"account-item",children:[(0,Tt.jsx)(ma,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"account-label",children:"Email"}),(0,Tt.jsx)("div",{className:"account-value",children:s})]})]})}),(0,Tt.jsx)("h3",{children:"Statistics"}),(0,Tt.jsxs)("div",{className:"stats-grid-sidebar",children:[(0,Tt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Tt.jsx)("div",{className:"stat-number",children:u.linkCount}),(0,Tt.jsx)("div",{className:"stat-label",children:"Links"})]}),(0,Tt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Tt.jsx)("div",{className:"stat-number",children:u.collectionCount}),(0,Tt.jsx)("div",{className:"stat-label",children:"Collections"})]}),(0,Tt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Tt.jsx)("div",{className:"stat-number",children:u.tagCount}),(0,Tt.jsx)("div",{className:"stat-label",children:"Tags"})]}),(0,Tt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Tt.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,Tt.jsx)("div",{className:"stat-label",children:"Views"})]})]}),(0,Tt.jsx)("div",{className:"setting-actions",children:(0,Tt.jsx)("button",{onClick:I,className:"button danger",children:"Logout"})})]}),"preferences"===r&&(0,Tt.jsxs)("div",{className:"settings-content",children:[(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"General Preferences"}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("label",{children:[(0,Tt.jsx)("input",{type:"checkbox",checked:f.autoSummarize,onChange:function(n){return p(Za(Za({},f),{},{autoSummarize:n.target.checked}))}}),"Auto-summarize saved links"]}),(0,Tt.jsx)("p",{className:"setting-description",children:"Automatically generate AI summaries for saved links"})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("label",{children:[(0,Tt.jsx)("input",{type:"checkbox",checked:f.autoTagging,onChange:function(n){return p(Za(Za({},f),{},{autoTagging:n.target.checked}))}}),"Auto-tag saved links"]}),(0,Tt.jsx)("p",{className:"setting-description",children:"Automatically suggest tags based on content"})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("label",{children:[(0,Tt.jsx)("input",{type:"checkbox",checked:f.autoCategorization,onChange:function(n){return p(Za(Za({},f),{},{autoCategorization:n.target.checked}))}}),"Auto-categorize saved links"]}),(0,Tt.jsx)("p",{className:"setting-description",children:"Automatically categorize links based on content and domain"})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsxs)("label",{children:[(0,Tt.jsx)("input",{type:"checkbox",checked:f.newTabEnabled,onChange:function(n){return p(Za(Za({},f),{},{newTabEnabled:n.target.checked}))}}),"Override new tab page"]}),(0,Tt.jsx)("p",{className:"setting-description",children:"Replace Chrome's new tab page with Nest"})]})]}),(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"Highlight Settings"}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsx)("label",{htmlFor:"highlight-color",children:"Highlight Color"}),(0,Tt.jsxs)("select",{id:"highlight-color",value:f.highlightColor||"yellow",onChange:function(n){return z("highlightColor",n.target.value)},className:"setting-select",children:[(0,Tt.jsx)("option",{value:"yellow",children:"Yellow"}),(0,Tt.jsx)("option",{value:"blue",children:"Blue"}),(0,Tt.jsx)("option",{value:"green",children:"Green"}),(0,Tt.jsx)("option",{value:"pink",children:"Pink"}),(0,Tt.jsx)("option",{value:"purple",children:"Purple"}),(0,Tt.jsx)("option",{value:"orange",children:"Orange"}),(0,Tt.jsx)("option",{value:"red",children:"Red"})]})]}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsx)("label",{htmlFor:"highlight-style",children:"Highlight Style"}),(0,Tt.jsxs)("select",{id:"highlight-style",value:f.highlightStyle||"gradient",onChange:function(n){return z("highlightStyle",n.target.value)},className:"setting-select",children:[(0,Tt.jsx)("option",{value:"gradient",children:"Gradient"}),(0,Tt.jsx)("option",{value:"solid",children:"Solid"}),(0,Tt.jsx)("option",{value:"underline",children:"Underline"}),(0,Tt.jsx)("option",{value:"outline",children:"Outline"})]})]}),(0,Tt.jsx)("div",{className:"setting-description",children:"Choose your preferred highlight color and style for visual text highlighting on supported websites."})]}),(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"Advanced"}),(0,Tt.jsxs)("div",{className:"setting-item",children:[(0,Tt.jsx)("label",{htmlFor:"openai-key",children:"OpenAI API Key"}),(0,Tt.jsx)("input",{id:"openai-key",type:"password",value:f.openaiApiKey||"",onChange:function(n){return z("openaiApiKey",n.target.value)},placeholder:"sk-...",className:"setting-input"}),(0,Tt.jsx)("p",{className:"setting-description",children:"For enhanced AI features like auto-summarization and tagging"})]})]}),(0,Tt.jsx)("div",{className:"settings-actions",children:(0,Tt.jsx)("button",{onClick:function(){return j(f)},disabled:b,className:"save-button",children:b?"Saving...":"Save Preferences"})})]}),"digest"===r&&(0,Tt.jsx)("div",{className:"settings-section",children:(0,Tt.jsx)(Ka,{})}),"data"===r&&(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"Data Management"}),(0,Tt.jsxs)("div",{className:"setting-list",children:[(0,Tt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)(ya,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Export Data"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Download all your data"})]})]}),(0,Tt.jsx)("button",{onClick:S,className:"button-small",children:"Export"})]}),(0,Tt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)(Nt,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Cleanup Tags"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Remove unused tags"})]})]}),(0,Tt.jsx)("button",{onClick:_,className:"button-small danger",children:"Cleanup"})]})]})]}),"sharing"===r&&(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"Sharing & Privacy"}),(0,Tt.jsx)("div",{className:"setting-list",children:(0,Tt.jsxs)("div",{className:"setting-item-sidebar",children:[(0,Tt.jsxs)("div",{className:"setting-info",children:[(0,Tt.jsx)("div",{className:"setting-label",children:"Default Privacy"}),(0,Tt.jsx)("div",{className:"setting-description",children:"Make collections public by default"})]}),(0,Tt.jsxs)("label",{className:"toggle-switch",children:[(0,Tt.jsx)("input",{type:"checkbox",checked:f.defaultPrivacy,onChange:function(n){return j(Za(Za({},f),{},{defaultPrivacy:n.target.checked}))},disabled:b}),(0,Tt.jsx)("span",{className:"toggle-slider"})]})]})}),(0,Tt.jsx)("h3",{children:"Analytics"}),(0,Tt.jsxs)("div",{className:"stats-grid-sidebar",children:[(0,Tt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Tt.jsx)("div",{className:"stat-number",children:u.publicCollections}),(0,Tt.jsx)("div",{className:"stat-label",children:"Public collections"})]}),(0,Tt.jsxs)("div",{className:"stat-card-sidebar",children:[(0,Tt.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,Tt.jsx)("div",{className:"stat-label",children:"Total views"})]})]})]}),"about"===r&&(0,Tt.jsxs)("div",{className:"settings-section",children:[(0,Tt.jsx)("h3",{children:"About Nest"}),(0,Tt.jsxs)("div",{className:"about-info-sidebar",children:[(0,Tt.jsxs)("div",{className:"app-info-sidebar",children:[(0,Tt.jsx)("div",{className:"app-logo-sidebar",children:"N"}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("div",{className:"app-name",children:"Nest"}),(0,Tt.jsx)("div",{className:"app-version",children:"Version 1.0.0"})]})]}),(0,Tt.jsx)("p",{className:"app-description",children:"Smart bookmarks & notes with AI-powered summaries and flexible organization."})]}),(0,Tt.jsxs)("div",{className:"support-links-sidebar",children:[(0,Tt.jsx)("h4",{children:"Support"}),(0,Tt.jsxs)("div",{className:"support-link-list",children:[(0,Tt.jsxs)("a",{href:"https://github.com",target:"_blank",rel:"noopener",className:"support-link-sidebar",children:[(0,Tt.jsx)(_t,{size:14}),(0,Tt.jsx)("span",{children:"Documentation"})]}),(0,Tt.jsxs)("a",{href:"https://github.com/issues",target:"_blank",rel:"noopener",className:"support-link-sidebar",children:[(0,Tt.jsx)(Ca,{size:14}),(0,Tt.jsx)("span",{children:"Report Issues"})]}),(0,Tt.jsxs)("a",{href:"mailto:support@nest.dev",className:"support-link-sidebar",children:[(0,Tt.jsx)(ma,{size:14}),(0,Tt.jsx)("span",{children:"Contact Support"})]})]})]})]}),B&&(0,Tt.jsx)("div",{className:"settings-message ".concat(B.includes("Failed")?"error":"success"),children:B})]})]})};var oi=a(72),si=a.n(oi),li=a(206),ci=a.n(li),ui=a(659),di=a.n(ui),Ai=a(56),fi=a.n(Ai),pi=a(159),hi=a.n(pi),gi=a(113),mi=a.n(gi),vi=a(182),bi={};bi.styleTagTransform=mi(),bi.setAttributes=fi(),bi.insert=di().bind(null,"head"),bi.domAPI=ci(),bi.insertStyleElement=hi(),si()(vi.A,bi),vi.A&&vi.A.locals&&vi.A.locals;const yi=l("TrendingUp",[["polyline",{points:"22 7 13.5 15.5 8.5 10.5 2 17",key:"126l90"}],["polyline",{points:"16 7 22 7 22 13",key:"kwv8wd"}]]);function Ci(n){return Ci="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ci(n)}function Bi(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ei(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ei(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ei(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function xi(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return wi(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(wi(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,wi(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,wi(d,"constructor",c),wi(c,"constructor",l),l.displayName="GeneratorFunction",wi(c,a,"GeneratorFunction"),wi(d),wi(d,a,"Generator"),wi(d,r,function(){return this}),wi(d,"toString",function(){return"[object Generator]"}),(xi=function(){return{w:i,m:A}})()}function wi(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}wi=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){wi(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},wi(n,e,t,r)}function ki(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function ji(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){ki(i,r,a,o,s,"next",n)}function s(n){ki(i,r,a,o,s,"throw",n)}o(void 0)})}}function Si(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,_i(r.key),r)}}function _i(n){var e=function(n){if("object"!=Ci(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Ci(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Ci(e)?e:e+""}var Ii=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n)}return e=n,t=[{key:"trackLinkRead",value:(d=ji(xi().m(function n(e){var t,r;return xi().w(function(n){for(;;)switch(n.n){case 0:return this.getTodayString(),n.n=1,this.getTodayAnalytics();case 1:return(t=n.v).linksRead++,t.timeSpent+=this.estimateReadingTime(e.title+" "+(e.description||"")),this.extractTopicsFromContent(e.title+" "+(e.description||"")).forEach(function(n){t.topicsExplored.includes(n)||t.topicsExplored.push(n)}),r=(new Date).getHours(),t.mostActiveHours.includes(r)||t.mostActiveHours.push(r),n.n=2,this.saveAnalytics(t);case 2:return n.n=3,this.updateReadingStreak();case 3:return n.a(2)}},n,this)})),function(n){return d.apply(this,arguments)})},{key:"trackHighlightMade",value:(u=ji(xi().m(function n(e){var t;return xi().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getTodayAnalytics();case 1:return(t=n.v).highlightsMade++,this.extractTopicsFromContent(e.text).forEach(function(n){t.topicsExplored.includes(n)||t.topicsExplored.push(n)}),n.n=2,this.saveAnalytics(t);case 2:return n.a(2)}},n,this)})),function(n){return u.apply(this,arguments)})},{key:"getWeeklyAnalytics",value:(c=ji(xi().m(function n(){var e,t,r,a;return xi().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_analytics");case 1:return e=n.v,t=e.nest_analytics||[],(r=new Date).setDate(r.getDate()-7),n.a(2,t.filter(function(n){return new Date(n.date)>=r}));case 2:return n.p=2,a=n.v,console.error("Error getting weekly analytics:",a),n.a(2,[])}},n,null,[[0,2]])})),function(){return c.apply(this,arguments)})},{key:"getMonthlyAnalytics",value:(l=ji(xi().m(function n(){var e,t,r,a;return xi().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_analytics");case 1:return e=n.v,t=e.nest_analytics||[],(r=new Date).setMonth(r.getMonth()-1),n.a(2,t.filter(function(n){return new Date(n.date)>=r}));case 2:return n.p=2,a=n.v,console.error("Error getting monthly analytics:",a),n.a(2,[])}},n,null,[[0,2]])})),function(){return l.apply(this,arguments)})},{key:"calculateInsights",value:(s=ji(xi().m(function n(){var e,t,r,a,i,o,s,l,c;return xi().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getWeeklyAnalytics();case 1:return e=n.v,n.n=2,this.getMonthlyAnalytics();case 2:return t=n.v,r=e.reduce(function(n,e){return n+e.linksRead+e.highlightsMade},0),a=e.length>0?r/e.length:0,i=this.findMostActiveDay(e),o=this.findTopTopics(t),n.n=3,this.getCurrentReadingStreak();case 3:return s=n.v,l=this.calculateKnowledgeGrowth(t),c=this.findPeakHours(e),n.a(2,{totalItems:r,averageDaily:a,mostActiveDay:i,topTopics:o,readingStreak:s,knowledgeGrowth:l,peakHours:c})}},n,this)})),function(){return s.apply(this,arguments)})},{key:"getTodayAnalytics",value:(o=ji(xi().m(function n(){var e,t,r,a,i;return xi().w(function(n){for(;;)switch(n.n){case 0:return e=this.getTodayString(),n.p=1,n.n=2,chrome.storage.local.get("nest_analytics");case 2:return t=n.v,r=t.nest_analytics||[],(a=r.find(function(n){return n.date===e}))||(a={id:"analytics-".concat(e),userId:"local",date:e,linksRead:0,highlightsMade:0,timeSpent:0,topicsExplored:[],mostActiveHours:[],readingStreak:0,knowledgeGrowthScore:0}),n.a(2,a);case 3:return n.p=3,i=n.v,console.error("Error getting today analytics:",i),n.a(2,{id:"analytics-".concat(e),userId:"local",date:e,linksRead:0,highlightsMade:0,timeSpent:0,topicsExplored:[],mostActiveHours:[],readingStreak:0,knowledgeGrowthScore:0})}},n,this,[[1,3]])})),function(){return o.apply(this,arguments)})},{key:"saveAnalytics",value:(i=ji(xi().m(function n(e){var t,r,a,i,o,s;return xi().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_analytics");case 1:return t=n.v,r=t.nest_analytics||[],(a=r.findIndex(function(n){return n.date===e.date}))>=0?r[a]=e:r.push(e),(i=new Date).setDate(i.getDate()-90),o=r.filter(function(n){return new Date(n.date)>=i}),n.n=2,chrome.storage.local.set({nest_analytics:o});case 2:n.n=4;break;case 3:n.p=3,s=n.v,console.error("Error saving analytics:",s);case 4:return n.a(2)}},n,null,[[0,3]])})),function(n){return i.apply(this,arguments)})},{key:"updateReadingStreak",value:(a=ji(xi().m(function n(){var e,t,r,a,i,o;return xi().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,this.getWeeklyAnalytics();case 1:(e=n.v).sort(function(n,e){return new Date(n.date).getTime()-new Date(e.date).getTime()}),t=0,r=new Date,a=e.length-1;case 2:if(!(a>=0)){n.n=5;break}if(i=new Date(e[a].date),Math.floor((r.getTime()-i.getTime())/864e5)!==t||!(e[a].linksRead>0||e[a].highlightsMade>0)){n.n=3;break}t++,r=i,n.n=4;break;case 3:return n.a(3,5);case 4:a--,n.n=2;break;case 5:return n.n=6,this.getTodayAnalytics();case 6:return(o=n.v).readingStreak=t,n.n=7,this.saveAnalytics(o);case 7:return n.a(2)}},n,this)})),function(){return a.apply(this,arguments)})},{key:"getCurrentReadingStreak",value:function(){return this.getTodayAnalytics().then(function(n){return n.readingStreak})}},{key:"estimateReadingTime",value:function(n){var e=n.split(/\s+/).length;return Math.ceil(e/200)}},{key:"extractTopicsFromContent",value:function(n){var e=this,t=n.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(function(n){return n.length>4}).filter(function(n){return!e.isStopWord(n)}),r=new Map;return t.forEach(function(n){r.set(n,(r.get(n)||0)+1)}),Array.from(r.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,3).map(function(n){return Bi(n,1)[0]})}},{key:"isStopWord",value:function(n){return new Set(["the","and","for","are","but","not","you","all","can","had","her","was","one","our","out","day","get","has","him","his","how","its","may","new","now","old","see","two","who","boy","did","end","few","got","let","man","put","run","say","she","too","use","way","why","your","that","with","have","this","will","been","from","they","know","want","were","what","when","where","said","each","which","their","time","would","there"]).has(n)}},{key:"getTodayString",value:function(){return(new Date).toISOString().split("T")[0]}},{key:"findMostActiveDay",value:function(n){if(0===n.length)return"N/A";var e=n.reduce(function(n,e){return e.linksRead+e.highlightsMade>n.linksRead+n.highlightsMade?e:n});return new Date(e.date).toLocaleDateString()}},{key:"findTopTopics",value:function(n){var e=new Map;return n.forEach(function(n){n.topicsExplored.forEach(function(n){e.set(n,(e.get(n)||0)+1)})}),Array.from(e.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,5).map(function(n){return Bi(n,1)[0]})}},{key:"calculateKnowledgeGrowth",value:function(n){if(n.length<2)return 0;var e=n.sort(function(n,e){return new Date(n.date).getTime()-new Date(e.date).getTime()}),t=e.slice(-7),r=e.slice(-14,-7),a=t.reduce(function(n,e){return n+e.linksRead+e.highlightsMade},0),i=r.reduce(function(n,e){return n+e.linksRead+e.highlightsMade},0);return 0===i?a>0?100:0:Math.round((a-i)/i*100)}},{key:"findPeakHours",value:function(n){var e=new Map;return n.forEach(function(n){n.mostActiveHours.forEach(function(n){e.set(n,(e.get(n)||0)+1)})}),Array.from(e.entries()).sort(function(n,e){return e[1]-n[1]}).slice(0,3).map(function(n){return Bi(n,1)[0]})}}],r=[{key:"getInstance",value:function(){return n.instance||(n.instance=new n),n.instance}}],t&&Si(e.prototype,t),r&&Si(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,r,a,i,o,s,l,c,u,d}();function zi(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Ni(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Ni(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,Ni(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,Ni(d,"constructor",c),Ni(c,"constructor",l),l.displayName="GeneratorFunction",Ni(c,a,"GeneratorFunction"),Ni(d),Ni(d,a,"Generator"),Ni(d,r,function(){return this}),Ni(d,"toString",function(){return"[object Generator]"}),(zi=function(){return{w:i,m:A}})()}function Ni(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Ni=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){Ni(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},Ni(n,e,t,r)}function Ti(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Oi(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Pi(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Pi(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pi(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Di=function(n){var e=n.onClose,t=Oi((0,i.useState)(null),2),r=t[0],a=t[1],o=Oi((0,i.useState)(!0),2),s=o[0],l=o[1],c=Oi((0,i.useState)("week"),2),u=c[0],d=c[1];(0,i.useEffect)(function(){f()},[u]);var A,f=function(){var n,e=(n=zi().m(function n(){var e,t,r;return zi().w(function(n){for(;;)switch(n.n){case 0:return l(!0),n.p=1,e=Ii.getInstance(),n.n=2,e.calculateInsights();case 2:t=n.v,a(t),n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load analytics:",r);case 4:return n.p=4,l(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}),function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Ti(i,r,a,o,s,"next",n)}function s(n){Ti(i,r,a,o,s,"throw",n)}o(void 0)})});return function(){return e.apply(this,arguments)}}();return s?(0,Tt.jsxs)("div",{className:"analytics-dashboard",children:[(0,Tt.jsxs)("div",{className:"dashboard-header",children:[(0,Tt.jsx)("button",{onClick:e,className:"close-button",children:"×"}),(0,Tt.jsxs)("h2",{children:[(0,Tt.jsx)(h,{size:20})," Reading Analytics"]})]}),(0,Tt.jsx)("div",{className:"dashboard-loading",children:(0,Tt.jsx)("div",{className:"loading-spinner",children:"Loading analytics..."})})]}):r?(0,Tt.jsxs)("div",{className:"analytics-dashboard",children:[(0,Tt.jsxs)("div",{className:"dashboard-header",children:[(0,Tt.jsx)("button",{onClick:e,className:"close-button",children:"×"}),(0,Tt.jsxs)("h2",{children:[(0,Tt.jsx)(h,{size:20})," Reading Analytics"]}),(0,Tt.jsxs)("div",{className:"timeframe-selector",children:[(0,Tt.jsx)("button",{className:"week"===u?"active":"",onClick:function(){return d("week")},children:"Week"}),(0,Tt.jsx)("button",{className:"month"===u?"active":"",onClick:function(){return d("month")},children:"Month"})]})]}),(0,Tt.jsxs)("div",{className:"dashboard-content",children:[(0,Tt.jsxs)("div",{className:"stats-grid",children:[(0,Tt.jsxs)("div",{className:"stat-card",children:[(0,Tt.jsx)("div",{className:"stat-icon",children:(0,Tt.jsx)(oa,{size:24})}),(0,Tt.jsxs)("div",{className:"stat-content",children:[(0,Tt.jsx)("div",{className:"stat-value",children:r.totalItems}),(0,Tt.jsxs)("div",{className:"stat-label",children:["Items This ",u]})]})]}),(0,Tt.jsxs)("div",{className:"stat-card",children:[(0,Tt.jsx)("div",{className:"stat-icon",children:(0,Tt.jsx)(sa,{size:24})}),(0,Tt.jsxs)("div",{className:"stat-content",children:[(0,Tt.jsx)("div",{className:"stat-value",children:r.averageDaily.toFixed(1)}),(0,Tt.jsx)("div",{className:"stat-label",children:"Daily Average"})]})]}),(0,Tt.jsxs)("div",{className:"stat-card",children:[(0,Tt.jsx)("div",{className:"stat-icon",children:(0,Tt.jsx)(Ba,{size:24})}),(0,Tt.jsxs)("div",{className:"stat-content",children:[(0,Tt.jsx)("div",{className:"stat-value",children:r.readingStreak}),(0,Tt.jsx)("div",{className:"stat-label",children:"Day Streak"})]})]}),(0,Tt.jsxs)("div",{className:"stat-card",children:[(0,Tt.jsx)("div",{className:"stat-icon",children:(A=r.knowledgeGrowth,A>0?(0,Tt.jsx)(yi,{size:16,className:"text-green-600"}):(0,Tt.jsx)(h,{size:16,className:"text-gray-600"}))}),(0,Tt.jsxs)("div",{className:"stat-content",children:[(0,Tt.jsxs)("div",{className:"stat-value ".concat(function(n){return n>20?"text-green-600":n>0?"text-blue-600":0===n?"text-gray-600":"text-orange-600"}(r.knowledgeGrowth)),children:[r.knowledgeGrowth>0?"+":"",r.knowledgeGrowth,"%"]}),(0,Tt.jsx)("div",{className:"stat-label",children:"Knowledge Growth"})]})]})]}),(0,Tt.jsxs)("div",{className:"insights-section",children:[(0,Tt.jsxs)("h3",{children:[(0,Tt.jsx)(g,{size:20})," Your Reading Insights"]}),(0,Tt.jsxs)("div",{className:"insight-cards",children:["N/A"!==r.mostActiveDay&&(0,Tt.jsxs)("div",{className:"insight-card",children:[(0,Tt.jsx)(ca,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Most Active Day:"})," ",r.mostActiveDay]})]}),r.peakHours.length>0&&(0,Tt.jsxs)("div",{className:"insight-card",children:[(0,Tt.jsx)(ca,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Peak Hours:"})," ",r.peakHours.map(function(n){var e=n>=12?"PM":"AM";return"".concat(0===n?12:n>12?n-12:n).concat(e)}).join(", ")]})]}),r.topTopics.length>0&&(0,Tt.jsxs)("div",{className:"insight-card",children:[(0,Tt.jsx)(la,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Top Topics:"})," ",r.topTopics.slice(0,3).join(", ")]})]})]})]}),r.totalItems>0&&(0,Tt.jsxs)("div",{className:"recommendations-section",children:[(0,Tt.jsxs)("h3",{children:[(0,Tt.jsx)(yi,{size:20})," Recommendations"]}),(0,Tt.jsxs)("div",{className:"recommendation-cards",children:[0===r.readingStreak&&(0,Tt.jsxs)("div",{className:"recommendation-card",children:[(0,Tt.jsx)(sa,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Build a Streak:"})," Try to read or highlight something every day to build consistency!"]})]}),r.averageDaily<1&&(0,Tt.jsxs)("div",{className:"recommendation-card",children:[(0,Tt.jsx)(oa,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Increase Activity:"})," Aim for at least 1-2 highlights or saved links per day."]})]}),r.topTopics.length<3&&(0,Tt.jsxs)("div",{className:"recommendation-card",children:[(0,Tt.jsx)(g,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Explore More:"})," Try reading about different topics to broaden your knowledge base."]})]}),r.knowledgeGrowth>50&&(0,Tt.jsxs)("div",{className:"recommendation-card",children:[(0,Tt.jsx)(yi,{size:16}),(0,Tt.jsxs)("div",{children:[(0,Tt.jsx)("strong",{children:"Great Progress!"})," You're learning rapidly. Consider reviewing past highlights to reinforce knowledge."]})]})]})]})]})]}):(0,Tt.jsxs)("div",{className:"analytics-dashboard",children:[(0,Tt.jsxs)("div",{className:"dashboard-header",children:[(0,Tt.jsx)("button",{onClick:e,className:"close-button",children:"×"}),(0,Tt.jsxs)("h2",{children:[(0,Tt.jsx)(h,{size:20})," Reading Analytics"]})]}),(0,Tt.jsxs)("div",{className:"dashboard-empty",children:[(0,Tt.jsx)(oa,{size:48,className:"empty-icon"}),(0,Tt.jsx)("p",{children:"Start reading and highlighting to see your analytics!"})]})]})},Li=l("Star",[["polygon",{points:"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2",key:"8f66p6"}]]);function Ri(n){return Ri="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ri(n)}function Mi(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Ui(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Mi(Object(t),!0).forEach(function(e){Fi(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Mi(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function Fi(n,e,t){return(e=function(n){var e=function(n){if("object"!=Ri(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Ri(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Ri(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function $i(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Yi(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(Yi(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,Yi(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,Yi(d,"constructor",c),Yi(c,"constructor",l),l.displayName="GeneratorFunction",Yi(c,a,"GeneratorFunction"),Yi(d),Yi(d,a,"Generator"),Yi(d,r,function(){return this}),Yi(d,"toString",function(){return"[object Generator]"}),($i=function(){return{w:i,m:A}})()}function Yi(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}Yi=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){Yi(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},Yi(n,e,t,r)}function qi(n){return function(n){if(Array.isArray(n))return Vi(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Ki(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wi(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function Gi(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){Wi(i,r,a,o,s,"next",n)}function s(n){Wi(i,r,a,o,s,"throw",n)}o(void 0)})}}function Hi(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||Ki(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ki(n,e){if(n){if("string"==typeof n)return Vi(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Vi(n,e):void 0}}function Vi(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const Qi=function(n){var e=n.onClose,t=Hi((0,i.useState)({questions:[],flashcards:[],connections:[],recommendations:[]}),2),r=t[0],a=t[1],o=Hi((0,i.useState)(!0),2),s=o[0],l=o[1],u=Hi((0,i.useState)("questions"),2),d=u[0],f=u[1],p=Hi((0,i.useState)(null),2),h=(p[0],p[1]),m=Hi((0,i.useState)([]),2),v=m[0],y=m[1];(0,i.useEffect)(function(){C()},[]);var C=function(){var n=Gi($i().m(function n(){var e,t,r,a,i;return $i().w(function(n){for(;;)switch(n.n){case 0:return l(!0),n.p=1,n.n=2,St.getData();case 2:return e=n.v,t=[],r=e.links.slice(-10),a=e.links.flatMap(function(n){return n.highlights||[]}).slice(-10),t.push.apply(t,qi(r).concat(qi(a))),y(t),n.n=3,B(t);case 3:n.n=5;break;case 4:n.p=4,i=n.v,console.error("Failed to load AI insights:",i);case 5:return n.p=5,l(!1),n.f(5);case 6:return n.a(2)}},n,null,[[1,4,5,6]])}));return function(){return n.apply(this,arguments)}}(),B=function(){var n=Gi($i().m(function n(e){var t,r,i,o,s,l,c,u,d,A,f,p;return $i().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_settings");case 1:if(r=n.v,i=null===(t=r.nest_settings)||void 0===t?void 0:t.openaiApiKey){n.n=2;break}return console.log("No OpenAI API key found"),n.a(2);case 2:if(o=(0,xa.createAIService)(i),!(s=e[e.length-1])){n.n=4;break}return n.n=3,Promise.all([o.generateQuestions("text"in s?s.text:"".concat(s.title," - ").concat(s.description||""),"medium"),o.generateFlashcards("text"in s?s.text:"".concat(s.title," - ").concat(s.description||"")),o.findCrossReferences(s,e.slice(0,-1)),o.generateRecommendations(e)]);case 3:l=n.v,c=Hi(l,4),u=c[0],d=c[1],A=c[2],f=c[3],a({questions:u,flashcards:d,connections:A,recommendations:f});case 4:n.n=6;break;case 5:n.p=5,p=n.v,console.error("Error loading AI insights:",p);case 6:return n.a(2)}},n,null,[[0,5]])}));return function(e){return n.apply(this,arguments)}}(),E=function(){var n=Gi($i().m(function n(e){var t,r,i,o,s,c,u,d,A,f,p;return $i().w(function(n){for(;;)switch(n.n){case 0:return l(!0),h(e),n.p=1,n.n=2,chrome.storage.local.get("nest_settings");case 2:if(r=n.v,i=null===(t=r.nest_settings)||void 0===t?void 0:t.openaiApiKey){n.n=3;break}return alert("Please configure your OpenAI API key in settings to use AI insights."),n.a(2);case 3:return o=(0,xa.createAIService)(i),s="text"in e?e.text:"".concat(e.title," - ").concat(e.description||""),n.n=4,Promise.all([o.generateQuestions(s,"medium"),o.generateFlashcards(s),o.findCrossReferences(e,v.filter(function(n){return n.id!==e.id}))]);case 4:c=n.v,u=Hi(c,3),d=u[0],A=u[1],f=u[2],a(function(n){return Ui(Ui({},n),{},{questions:d,flashcards:A,connections:f})}),n.n=6;break;case 5:n.p=5,p=n.v,console.error("Error generating insights:",p),alert("Failed to generate insights. Please check your API key and try again.");case 6:return n.p=6,l(!1),n.f(6);case 7:return n.a(2)}},n,null,[[1,5,6,7]])}));return function(e){return n.apply(this,arguments)}}(),x=function(){var n=Gi($i().m(function n(e,t){var r;return $i().w(function(n){for(;;)switch(n.n){case 0:r=Ui(Ui({},e),{},{userRating:t,isReviewed:!0}),a(function(n){return Ui(Ui({},n),{},Fi({},"question"===e.type?"questions":"flashcard"===e.type?"flashcards":"recommendations",n["question"===e.type?"questions":"flashcard"===e.type?"flashcards":"recommendations"].map(function(n){return n.id===e.id?r:n})))});case 1:return n.a(2)}},n)}));return function(e,t){return n.apply(this,arguments)}}(),w=[{id:"questions",label:"Questions",icon:A,count:r.questions.length},{id:"flashcards",label:"Flashcards",icon:c,count:r.flashcards.length},{id:"connections",label:"Connections",icon:rr,count:r.connections.length},{id:"recommendations",label:"Recommendations",icon:la,count:r.recommendations.length}];return(0,Tt.jsxs)("div",{className:"ai-insights",children:[(0,Tt.jsxs)("div",{className:"insights-header",children:[(0,Tt.jsx)("button",{onClick:e,className:"close-button",children:(0,Tt.jsx)(b,{size:20})}),(0,Tt.jsxs)("h2",{children:[(0,Tt.jsx)(g,{size:20})," AI Insights"]}),(0,Tt.jsx)("button",{onClick:C,className:"refresh-button",disabled:s,children:(0,Tt.jsx)(Wr,{size:16,className:s?"spinning":""})})]}),(0,Tt.jsx)("div",{className:"insights-tabs",children:w.map(function(n){var e=n.icon;return(0,Tt.jsxs)("button",{onClick:function(){return f(n.id)},className:"tab ".concat(d===n.id?"active":""),children:[(0,Tt.jsx)(e,{size:16}),n.label,n.count>0&&(0,Tt.jsx)("span",{className:"count",children:n.count})]},n.id)})}),(0,Tt.jsxs)("div",{className:"insights-content",children:[v.length>0&&(0,Tt.jsxs)("div",{className:"quick-insights",children:[(0,Tt.jsx)("h3",{children:"Generate Insights For:"}),(0,Tt.jsx)("div",{className:"recent-items",children:v.slice(-5).map(function(n){return(0,Tt.jsx)("button",{onClick:function(){return E(n)},className:"recent-item",disabled:s,children:"text"in n?(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsx)(A,{size:14}),n.text.slice(0,50),"..."]}):(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsx)(c,{size:14}),n.title]})},n.id)})})]}),s?(0,Tt.jsxs)("div",{className:"loading-state",children:[(0,Tt.jsx)(Wr,{size:24,className:"spinning"}),(0,Tt.jsx)("p",{children:"Generating AI insights..."})]}):(0,Tt.jsxs)(Tt.Fragment,{children:["questions"===d&&(0,Tt.jsx)("div",{className:"insights-list",children:0===r.questions.length?(0,Tt.jsxs)("div",{className:"empty-state",children:[(0,Tt.jsx)(A,{size:48,className:"empty-icon"}),(0,Tt.jsx)("p",{children:"Generate questions to test your understanding"})]}):r.questions.map(function(n){var e;return(0,Tt.jsxs)("div",{className:"insight-card",children:[(0,Tt.jsxs)("div",{className:"insight-header",children:[(0,Tt.jsx)(A,{size:16}),(0,Tt.jsx)("span",{className:"insight-type",children:"Question"}),(0,Tt.jsx)("div",{className:"insight-rating",children:[1,2,3,4,5].map(function(e){return(0,Tt.jsx)("button",{onClick:function(){return x(n,e)},className:"star ".concat((n.userRating||0)>=e?"filled":""),children:(0,Tt.jsx)(Li,{size:12})},e)})})]}),(0,Tt.jsx)("div",{className:"insight-content",children:n.content}),(null===(e=n.metadata)||void 0===e?void 0:e.difficulty)&&(0,Tt.jsx)("div",{className:"insight-meta",children:(0,Tt.jsx)("span",{className:"difficulty ".concat(n.metadata.difficulty),children:n.metadata.difficulty})})]},n.id)})}),"flashcards"===d&&(0,Tt.jsx)("div",{className:"insights-list",children:0===r.flashcards.length?(0,Tt.jsxs)("div",{className:"empty-state",children:[(0,Tt.jsx)(c,{size:48,className:"empty-icon"}),(0,Tt.jsx)("p",{children:"Generate flashcards for better retention"})]}):r.flashcards.map(function(n){return(0,Tt.jsxs)("div",{className:"flashcard",children:[(0,Tt.jsxs)("div",{className:"flashcard-header",children:[(0,Tt.jsx)(c,{size:16}),(0,Tt.jsx)("span",{className:"insight-type",children:"Flashcard"}),(0,Tt.jsx)("div",{className:"insight-rating",children:[1,2,3,4,5].map(function(e){return(0,Tt.jsx)("button",{onClick:function(){return x(n,e)},className:"star ".concat((n.userRating||0)>=e?"filled":""),children:(0,Tt.jsx)(Li,{size:12})},e)})})]}),(0,Tt.jsx)("div",{className:"flashcard-content",children:n.content.split("\n").map(function(n,e){return(0,Tt.jsx)("div",{className:n.startsWith("Question:")?"question":n.startsWith("Answer:")?"answer":"",children:n},e)})})]},n.id)})}),"connections"===d&&(0,Tt.jsx)("div",{className:"insights-list",children:0===r.connections.length?(0,Tt.jsxs)("div",{className:"empty-state",children:[(0,Tt.jsx)(rr,{size:48,className:"empty-icon"}),(0,Tt.jsx)("p",{children:"Cross-references between your content will appear here"})]}):r.connections.map(function(n){return(0,Tt.jsxs)("div",{className:"connection-card",children:[(0,Tt.jsxs)("div",{className:"connection-header",children:[(0,Tt.jsx)(rr,{size:16}),(0,Tt.jsx)("span",{className:"relationship ".concat(n.relationshipType),children:n.relationshipType.replace("-"," ")}),(0,Tt.jsxs)("span",{className:"strength",children:[Math.round(100*n.strength),"% match"]})]}),(0,Tt.jsxs)("div",{className:"connection-content",children:[(0,Tt.jsxs)("div",{className:"connection-target",children:["Connected to: ",(0,Tt.jsx)("strong",{children:n.targetId})]}),n.note&&(0,Tt.jsx)("div",{className:"connection-note",children:n.note})]})]},n.id)})}),"recommendations"===d&&(0,Tt.jsx)("div",{className:"insights-list",children:0===r.recommendations.length?(0,Tt.jsxs)("div",{className:"empty-state",children:[(0,Tt.jsx)(la,{size:48,className:"empty-icon"}),(0,Tt.jsx)("p",{children:"Content recommendations based on your reading will appear here"})]}):r.recommendations.map(function(n){var e;return(0,Tt.jsxs)("div",{className:"insight-card",children:[(0,Tt.jsxs)("div",{className:"insight-header",children:[(0,Tt.jsx)(la,{size:16}),(0,Tt.jsx)("span",{className:"insight-type",children:"Recommendation"}),(0,Tt.jsx)("div",{className:"insight-rating",children:[1,2,3,4,5].map(function(e){return(0,Tt.jsx)("button",{onClick:function(){return x(n,e)},className:"star ".concat((n.userRating||0)>=e?"filled":""),children:(0,Tt.jsx)(Li,{size:12})},e)})})]}),(0,Tt.jsx)("div",{className:"insight-content",children:n.content}),(null===(e=n.metadata)||void 0===e?void 0:e.confidence)&&(0,Tt.jsx)("div",{className:"insight-meta",children:(0,Tt.jsxs)("span",{className:"confidence",children:[Math.round(100*n.metadata.confidence),"% confidence"]})})]},n.id)})})]})]})]})};function Zi(n){return Zi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Zi(n)}function Ji(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function Xi(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Ji(Object(t),!0).forEach(function(e){no(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Ji(Object(t)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function no(n,e,t){return(e=function(n){var e=function(n){if("object"!=Zi(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Zi(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Zi(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function eo(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function i(t,r,a,i){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return to(c,"_invoke",function(t,r,a){var i,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:n,a:f,f:f.bind(n,4),d:function(e,t){return i=e,s=0,l=n,A.n=t,o}};function f(t,r){for(s=t,l=r,e=0;!d&&c&&!a&&e<u.length;e++){var a,i=u[e],f=A.p,p=i[2];t>3?(a=p===r)&&(l=i[(s=i[4])?5:(s=3,3)],i[4]=i[5]=n):i[0]<=f&&((a=t<2&&f<i[1])?(s=0,A.v=r,A.n=i[1]):f<p&&(a=t<3||i[0]>r||r>p)&&(i[4]=t,i[5]=r,A.n=p,s=0))}if(a||t>1)return o;throw d=!0,r}return function(a,u,p){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,p),s=u,l=p;(e=s<2?n:l)||!d;){i||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,i){if(s||(a="next"),e=i[a]){if(!(e=e.call(i,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,s<2&&(s=0)}else 1===s&&(e=i.return)&&e.call(i),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);i=n}else if((e=(d=A.n<0)?l:t.call(r,A))!==o)break}catch(e){i=n,s=1,l=e}finally{c=1}}return{value:e,done:d}}}(t,a,i),!0),c}var o={};function s(){}function l(){}function c(){}e=Object.getPrototypeOf;var u=[][r]?e(e([][r]())):(to(e={},r,function(){return this}),e),d=c.prototype=s.prototype=Object.create(u);function A(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,c):(n.__proto__=c,to(n,a,"GeneratorFunction")),n.prototype=Object.create(d),n}return l.prototype=c,to(d,"constructor",c),to(c,"constructor",l),l.displayName="GeneratorFunction",to(c,a,"GeneratorFunction"),to(d),to(d,a,"Generator"),to(d,r,function(){return this}),to(d,"toString",function(){return"[object Generator]"}),(eo=function(){return{w:i,m:A}})()}function to(n,e,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(n){a=0}to=function(n,e,t,r){if(e)a?a(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t;else{var i=function(e,t){to(n,e,function(n){return this._invoke(e,t,n)})};i("next",0),i("throw",1),i("return",2)}},to(n,e,t,r)}function ro(n,e,t,r,a,i,o){try{var s=n[i](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function ao(n){return function(){var e=this,t=arguments;return new Promise(function(r,a){var i=n.apply(e,t);function o(n){ro(i,r,a,o,s,"next",n)}function s(n){ro(i,r,a,o,s,"throw",n)}o(void 0)})}}function io(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,i,o,s=[],l=!0,c=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=i.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw a}}return s}}(n,e)||oo(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function oo(n,e){if(n){if("string"==typeof n)return so(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?so(n,e):void 0}}function so(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const lo=function(){var n=io((0,i.useState)({links:[],collections:[],categories:[],settings:{defaultCategory:"general",autoSummarize:!0}}),2),e=n[0],t=n[1],r=io((0,i.useState)(""),2),a=r[0],o=r[1],s=io((0,i.useState)([]),2),l=s[0],I=s[1],z=io((0,i.useState)(!1),2),N=z[0],T=z[1],O=io((0,i.useState)(!1),2),P=O[0],D=O[1],L=io((0,i.useState)(null),2),R=L[0],M=L[1],U=io((0,i.useState)([]),2),F=U[0],$=U[1],Y=io((0,i.useState)([]),2),q=Y[0],W=Y[1],G=io((0,i.useState)(!1),2),H=G[0],K=G[1],V=io((0,i.useState)({inbox:!0,smartCollections:!0,holdingArea:!0,collections:!0}),2),Q=V[0],Z=V[1],J=io((0,i.useState)(null),2),X=J[0],nn=J[1],en=io((0,i.useState)(!1),2),tn=en[0],rn=en[1],an=io((0,i.useState)(!1),2),on=an[0],sn=an[1],ln=io((0,i.useState)(!1),2),cn=ln[0],un=ln[1],dn=io((0,i.useState)(!0),2),An=dn[0],fn=dn[1],pn=io((0,i.useState)(null),2),hn=pn[0],gn=pn[1],mn=io((0,i.useState)(""),2),vn=mn[0],bn=mn[1],yn=io((0,i.useState)(!1),2),Cn=yn[0],Bn=yn[1],En=io((0,i.useState)(""),2),xn=En[0],wn=En[1],kn=io((0,i.useState)([]),2),jn=kn[0],Sn=kn[1],_n=io((0,i.useState)([]),2),In=_n[0],zn=_n[1],Nn=io((0,i.useState)(!1),2),Tn=Nn[0],On=Nn[1],Pn=io((0,i.useState)(!1),2),Dn=Pn[0],Ln=Pn[1],Rn=io((0,i.useState)(!1),2),Mn=Rn[0],Un=Rn[1],Fn=io((0,i.useState)(!1),2),$n=Fn[0],Yn=Fn[1],qn=io((0,i.useState)(null),2),Wn=qn[0],Gn=qn[1],Hn=io((0,i.useState)(!1),2),Kn=Hn[0],Vn=Hn[1],Qn=io((0,i.useState)(!1),2),Zn=Qn[0],Jn=Qn[1];(0,i.useEffect)(function(){pt.auth.getSession().then(function(n){var e=n.data.session;gn(e),e&&(te(),ae())});var n=pt.auth.onAuthStateChange(function(n,e){console.log("Auth state changed:",n,e),gn(e),e&&(te(),ae())}),e=n.data.subscription,t=function(n,e,t){"refreshSidebar"===n.action&&(console.log("Sidebar: Received refresh request"),te(),re(),ae(),t({success:!0}))};return chrome.runtime.onMessage.addListener(t),function(){e.unsubscribe(),chrome.runtime.onMessage.removeListener(t)}},[]),(0,i.useEffect)(function(){te(),Xn()},[]);var Xn=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.storage.local.get("nest_search_query");case 1:if(!(e=n.v).nest_search_query){n.n=2;break}return o(e.nest_search_query),je(e.nest_search_query),n.n=2,chrome.storage.local.remove("nest_search_query");case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to check for new tab search:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}();(0,i.useEffect)(function(){var n=function(n){(n.metaKey||n.ctrlKey)&&"k"===n.key&&(n.preventDefault(),Ln(!0))};return document.addEventListener("keydown",n),function(){return document.removeEventListener("keydown",n)}},[]);var ne,ee,te=function(){var n=ao(eo().m(function n(){var e,r;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.getData();case 1:return e=n.v,t(e),n.n=2,re();case 2:n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to load data:",r);case 4:return n.p=4,fn(!1),n.f(4);case 5:return n.a(2)}},n,null,[[0,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),re=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return On(!0),n.p=1,n.n=2,St.getInboxLinks();case 2:e=n.v,Sn(e),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to load inbox links:",t);case 4:return n.p=4,On(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),ae=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return K(!0),n.p=1,n.n=2,St.getUserTags();case 2:e=n.v,W(e),n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to load user tags:",t);case 4:return n.p=4,K(!1),n.f(4);case 5:return n.a(2)}},n,null,[[1,3,4,5]])}));return function(){return n.apply(this,arguments)}}(),ie=function(){var n=ao(eo().m(function n(e){var t,r;return eo().w(function(n){for(;;)switch(n.n){case 0:if(e!==R){n.n=1;break}return M(null),$([]),n.a(2);case 1:if(M(e),!e){n.n=6;break}return n.p=2,n.n=3,St.getLinksByTag(e);case 3:t=n.v,$(t),n.n=5;break;case 4:n.p=4,r=n.v,console.error("Failed to load links by tag:",r),$([]);case 5:n.n=7;break;case 6:$([]);case 7:e&&P&&Se();case 8:return n.a(2)}},n,null,[[2,4]])}));return function(e){return n.apply(this,arguments)}}(),oe=function(){ae(),R&&ie(R)},se=function(n){Z(function(e){return Xi(Xi({},e),{},no({},n,!e[n]))})},le=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"getPageInfo"});case 1:if(!(e=n.v).success){n.n=2;break}Gn(e.pageInfo),Yn(!0),n.n=3;break;case 2:return n.n=3,Ae();case 3:n.n=5;break;case 4:return n.p=4,t=n.v,console.error("Failed to get page info:",t),n.n=5,Ae();case 5:return n.a(2)}},n,null,[[0,4]])}));return function(){return n.apply(this,arguments)}}(),ce=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(e=n.v)[0]){n.n=2;break}return n.n=2,chrome.tabs.sendMessage(e[0].id,{action:"toggleFloatingAI"});case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to toggle floating AI:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),ue=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(e=n.v)[0]){n.n=2;break}return n.n=2,chrome.tabs.sendMessage(e[0].id,{action:"toggleStickyNotes"});case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to toggle sticky notes:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),de=function(){var n=ao(eo().m(function n(){var e,t;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(e=n.v)[0]){n.n=2;break}return n.n=2,chrome.tabs.sendMessage(e[0].id,{action:"toggleScreenshotTool"});case 2:n.n=4;break;case 3:n.p=3,t=n.v,console.error("Failed to toggle screenshot tool:",t);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(){return n.apply(this,arguments)}}(),Ae=function(){var n=ao(eo().m(function n(){var e;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!n.v[0]){n.n=4;break}return n.n=2,chrome.runtime.sendMessage({action:"saveCurrentPage"});case 2:return n.n=3,te();case 3:return n.n=4,ae();case 4:n.n=6;break;case 5:n.p=5,e=n.v,console.error("Failed to save page:",e);case 6:return n.a(2)}},n,null,[[0,5]])}));return function(){return n.apply(this,arguments)}}(),fe=function(){var n=ao(eo().m(function n(e,t){var r;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.updateLink(e,t);case 1:if(void 0===t.collectionId){n.n=2;break}return n.n=2,St.logActivity("organize",e,t.collectionId,{action:"move_to_collection"});case 2:return n.n=3,te();case 3:n.n=5;break;case 4:n.p=4,r=n.v,console.error("Failed to update link:",r);case 5:return n.a(2)}},n,null,[[0,4]])}));return function(e,t){return n.apply(this,arguments)}}(),pe=function(){var n=ao(eo().m(function n(e){var t;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.deleteLink(e);case 1:return n.n=2,te();case 2:return n.n=3,ae();case 3:R&&ie(R),n.n=5;break;case 4:n.p=4,t=n.v,console.error("Failed to delete link:",t);case 5:return n.a(2)}},n,null,[[0,4]])}));return function(e){return n.apply(this,arguments)}}(),he=function(){var n=ao(eo().m(function n(e,t){var r;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.updateLink(e,{collectionId:t});case 1:return n.n=2,te();case 2:n.n=4;break;case 3:n.p=3,r=n.v,console.error("Failed to move link:",r);case 4:return n.a(2)}},n,null,[[0,3]])}));return function(e,t){return n.apply(this,arguments)}}(),ge=function(n){nn(n),rn(!0)},me=function(){var n=ao(eo().m(function n(e){return eo().w(function(n){for(;;)switch(n.n){case 0:if(!X){n.n=1;break}return n.n=1,fe(X.id,{userNote:e});case 1:rn(!1),nn(null);case 2:return n.a(2)}},n)}));return function(e){return n.apply(this,arguments)}}(),ve=function(){var n=ao(eo().m(function n(e,t){var r,a;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,r={id:Date.now().toString(),name:e,description:t,createdAt:new Date,updatedAt:new Date},n.n=1,St.addCollection(r);case 1:return n.n=2,te();case 2:n.n=4;break;case 3:n.p=3,a=n.v,console.error("Failed to create collection:",a);case 4:sn(!1);case 5:return n.a(2)}},n,null,[[0,3]])}));return function(e,t){return n.apply(this,arguments)}}(),be=function(){var n=ao(eo().m(function n(e,t){var r;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,St.moveFromInbox(e,t);case 1:return n.n=2,St.logActivity("organize",e,t,{action:"move_from_inbox"});case 2:return n.n=3,re();case 3:return n.n=4,te();case 4:zn(function(n){return n.filter(function(n){return n!==e})}),n.n=6;break;case 5:n.p=5,r=n.v,console.error("Failed to move link from inbox:",r);case 6:return n.a(2)}},n,null,[[0,5]])}));return function(e,t){return n.apply(this,arguments)}}(),ye=function(n){zn(function(e){return e.includes(n)?e.filter(function(e){return e!==n}):[].concat(function(n){if(Array.isArray(n))return so(n)}(t=e)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||oo(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[n]);var t})},Ce=function(){var n=ao(eo().m(function n(e){var t;return eo().w(function(n){for(;;)switch(n.n){case 0:if(0!==In.length){n.n=1;break}return n.a(2);case 1:return n.p=1,n.n=2,St.bulkMoveFromInbox(In,e);case 2:return n.n=3,re();case 3:return n.n=4,te();case 4:zn([]),n.n=6;break;case 5:n.p=5,t=n.v,console.error("Failed to bulk move links from inbox:",t);case 6:return n.a(2)}},n,null,[[1,5]])}));return function(e){return n.apply(this,arguments)}}(),Be=function(){var n=ao(eo().m(function n(e,t,r){var a;return eo().w(function(n){for(;;)switch(n.n){case 0:return a=e.map(function(){var n=ao(eo().m(function n(e){var a;return eo().w(function(n){for(;;)switch(n.n){case 0:return a={url:e.url,title:e.title,favicon:e.favicon||"https://www.google.com/s2/favicons?domain=".concat(e.domain,"&sz=32"),userNote:"",aiSummary:"",category:"general",domain:e.domain,isInInbox:r||!1,collectionId:r?void 0:t},n.n=1,St.addLink(a);case 1:return n.a(2,n.v)}},n)}));return function(e){return n.apply(this,arguments)}}()),n.n=1,Promise.all(a);case 1:return n.n=2,te();case 2:return n.n=3,re();case 3:chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Tabs Saved to Nest",message:"Saved ".concat(e.length," tab(s) ").concat(r?"to inbox":t?"to collection":"to holding area")});case 4:return n.a(2)}},n)}));return function(e,t,r){return n.apply(this,arguments)}}(),Ee=function(){var n=ao(eo().m(function n(e){var t,r,a;return eo().w(function(n){for(;;)switch(n.n){case 0:return e.preventDefault(),Bn(!0),wn(""),t=chrome.runtime.getURL("auth.html"),console.log("Redirecting to:",t),n.n=1,pt.auth.signInWithOtp({email:vn,options:{emailRedirectTo:t}});case 1:r=n.v,a=r.error,wn(a?a.message:"Check your email for the login link!"),Bn(!1);case 2:return n.a(2)}},n)}));return function(e){return n.apply(this,arguments)}}(),xe=function(){var n=ao(eo().m(function n(){return eo().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,pt.auth.signOut();case 1:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),we=function(){var n=ao(eo().m(function n(e,t){var r,a;return eo().w(function(n){for(;;)switch(n.n){case 0:return n.p=0,n.n=1,chrome.runtime.sendMessage({action:"saveWithContext",reason:e,tags:t});case 1:if(!(r=n.v).success){n.n=4;break}return n.n=2,te();case 2:return n.n=3,ae();case 3:Yn(!1),Gn(null),n.n=5;break;case 4:console.error("Failed to save with context:",r.error);case 5:n.n=7;break;case 6:n.p=6,a=n.v,console.error("Failed to save with context:",a);case 7:return n.a(2)}},n,null,[[0,6]])}));return function(e,t){return n.apply(this,arguments)}}(),ke=function(){var n=ao(eo().m(function n(){return eo().w(function(n){for(;;)switch(n.n){case 0:return Yn(!1),Gn(null),n.n=1,Ae();case 1:return n.a(2)}},n)}));return function(){return n.apply(this,arguments)}}(),je=(0,i.useCallback)((ne=function(){var n=ao(eo().m(function n(e){var t,r;return eo().w(function(n){for(;;)switch(n.n){case 0:if(e.trim()){n.n=1;break}return I([]),D(!1),T(!1),n.a(2);case 1:return T(!0),n.p=2,n.n=3,St.searchLinks(e);case 3:t=n.v,I(t),D(!0),R&&(M(null),$([])),n.n=5;break;case 4:n.p=4,r=n.v,console.error("Search failed:",r),I([]);case 5:return n.p=5,T(!1),n.f(5);case 6:return n.a(2)}},n,null,[[2,4,5,6]])}));return function(e){return n.apply(this,arguments)}}(),function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];clearTimeout(ee),ee=setTimeout(function(){return ne.apply(void 0,e)},300)}),[R]),Se=function(){o(""),I([]),D(!1),T(!1)},_e=function(){Se(),M(null),$([])},Ie=P||R?[]:e.links.filter(function(n){return!n.isInInbox}),ze=Ie.filter(function(n){return!n.collectionId});return hn?An?(0,Tt.jsx)("div",{className:"sidepanel loading",children:(0,Tt.jsx)("div",{className:"loading-spinner",children:"Loading..."})}):(0,Tt.jsxs)("div",{className:"sidepanel",children:[(0,Tt.jsxs)("div",{className:"header",children:[(0,Tt.jsxs)("div",{className:"header-title",children:[(0,Tt.jsx)(c,{className:"header-icon"}),(0,Tt.jsx)("h1",{children:"Nest"})]}),(0,Tt.jsxs)("div",{className:"header-actions",children:[(0,Tt.jsx)("button",{onClick:de,className:"screenshot-button",title:"Screenshot Tool (Alt+C)",children:(0,Tt.jsx)(u,{size:18})}),(0,Tt.jsx)("button",{onClick:ue,className:"sticky-notes-button",title:"Toggle Sticky Notes (Alt+S)",children:(0,Tt.jsx)(d,{size:18})}),(0,Tt.jsx)("button",{onClick:ce,className:"floating-ai-button",title:"Toggle Floating AI Assistant (Alt+A)",children:(0,Tt.jsx)(A,{size:18})}),(0,Tt.jsx)("button",{onClick:function(){return Un(!0)},className:"tab-sync-button",title:"Tab Sync Mode",children:(0,Tt.jsx)(f,{size:18})}),(0,Tt.jsx)("button",{onClick:le,className:"save-button",title:"Save current page",children:(0,Tt.jsx)(p,{size:18})}),(0,Tt.jsxs)("button",{onClick:function(){return Vn(!0)},className:"analytics-button",title:"View Reading Analytics",children:[(0,Tt.jsx)(h,{size:18}),"Analytics"]}),(0,Tt.jsxs)("button",{onClick:function(){return Jn(!0)},className:"ai-insights-button",title:"AI-Powered Insights",children:[(0,Tt.jsx)(g,{size:18}),"AI Insights"]}),(0,Tt.jsx)("button",{onClick:xe,className:"logout-button",title:"Logout",children:(0,Tt.jsx)(m,{size:18})})]})]}),(0,Tt.jsxs)("div",{className:"search-container",children:[(0,Tt.jsx)(v,{className:"search-icon",size:16}),(0,Tt.jsx)("input",{type:"text",placeholder:"Search your links... (⌘K for power mode)",value:a,onChange:function(n){var e=n.target.value;o(e),je(e)},className:"search-input",onFocus:function(){}}),a&&(0,Tt.jsx)("button",{onClick:Se,className:"search-clear",title:"Clear search",children:(0,Tt.jsx)(b,{size:16})}),N&&(0,Tt.jsx)("div",{className:"search-spinner",children:"⟳"}),!a&&!N&&(0,Tt.jsxs)("button",{onClick:function(){return Ln(!0)},className:"command-hint-button",title:"Open command palette (⌘K)",children:[(0,Tt.jsx)(y,{size:14}),(0,Tt.jsx)("span",{children:"Or press ⌘K for quick access"})]})]}),q.length>0&&(0,Tt.jsx)(pa,{tags:q,selectedTag:R,onTagSelect:ie,loading:H}),(0,Tt.jsx)("div",{className:"content",children:P?(0,Tt.jsxs)("div",{className:"search-results",children:[(0,Tt.jsxs)("div",{className:"search-results-header",children:[(0,Tt.jsxs)("h3",{children:["Search Results (",l.length,")"]}),(0,Tt.jsx)("button",{onClick:_e,className:"clear-search-btn",children:"Show All Links"})]}),0!==l.length||N?l.map(function(n){return(0,Tt.jsx)(Sr,{link:n,collections:e.collections,onUpdate:fe,onDelete:pe,onMoveToCollection:he,onAddNote:ge,onTagsUpdated:oe},n.id)}):(0,Tt.jsx)("div",{className:"no-results",children:(0,Tt.jsxs)("p",{children:['No links found for "',a,'"']})})]}):R?(0,Tt.jsxs)("div",{className:"tag-results",children:[(0,Tt.jsxs)("div",{className:"tag-results-header",children:[(0,Tt.jsxs)("h3",{children:[(0,Tt.jsx)(C,{size:16}),'Tagged with "',R,'" (',F.length,")"]}),(0,Tt.jsx)("button",{onClick:_e,className:"clear-search-btn",children:"Show All Links"})]}),0===F.length?(0,Tt.jsx)("div",{className:"no-results",children:(0,Tt.jsxs)("p",{children:['No links found with tag "',R,'"']})}):F.map(function(n){return(0,Tt.jsx)(Jt,{link:n,collections:e.collections,onUpdate:fe,onDelete:pe,onMoveToCollection:he,onAddNote:ge,onTagsUpdated:oe},n.id)})]}):(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsxs)("div",{className:"section inbox-section",children:[(0,Tt.jsxs)("div",{className:"inbox-section-header",children:[(0,Tt.jsxs)("div",{className:"inbox-section-title",children:[(0,Tt.jsxs)("button",{onClick:function(){return se("inbox")},className:"section-header",style:{padding:0,background:"none",border:"none"},children:[Q.inbox?(0,Tt.jsx)(B,{size:16}):(0,Tt.jsx)(E,{size:16}),(0,Tt.jsx)(x,{size:16}),(0,Tt.jsx)("span",{children:"Inbox"})]}),(0,Tt.jsx)("span",{className:"inbox-count",children:jn.length})]}),jn.length>0&&(0,Tt.jsxs)("div",{className:"inbox-actions",children:[(0,Tt.jsxs)("button",{onClick:function(){In.length===jn.length?zn([]):zn(jn.map(function(n){return n.id}))},className:"inbox-action-button",title:In.length===jn.length?"Deselect all":"Select all",children:[(0,Tt.jsx)(w,{size:14}),In.length===jn.length?"Deselect All":"Select All"]}),In.length>0&&(0,Tt.jsxs)(Tt.Fragment,{children:[(0,Tt.jsxs)("button",{onClick:function(){return Ce()},className:"inbox-action-button",title:"Move selected to holding area",children:[(0,Tt.jsx)(k,{size:14}),"Move to Holding (",In.length,")"]}),(0,Tt.jsxs)("select",{onChange:function(n){n.target.value&&(Ce(n.target.value),n.target.value="")},className:"inbox-action-button",style:{padding:"6px 8px"},title:"Move selected links to collection","aria-label":"Move selected links to collection",children:[(0,Tt.jsx)("option",{value:"",children:"Move to Collection..."}),e.collections.map(function(n){return(0,Tt.jsx)("option",{value:n.id,children:n.name},n.id)})]})]})]})]}),Q.inbox&&(0,Tt.jsx)("div",{className:"section-content",children:Tn?(0,Tt.jsx)("div",{className:"loading-spinner",children:"Loading inbox..."}):0===jn.length?(0,Tt.jsxs)("div",{className:"inbox-empty",children:[(0,Tt.jsx)(x,{className:"inbox-empty-icon"}),(0,Tt.jsx)("h3",{children:"Inbox is empty"}),(0,Tt.jsx)("p",{children:"New saves will appear here for quick organization"})]}):jn.map(function(n){return(0,Tt.jsx)(Fr,{link:n,collections:e.collections,onMoveFromInbox:be,onDelete:pe,onUpdate:fe,onAddNote:ge,onTagsUpdated:oe,isSelected:In.includes(n.id),onSelect:ye},n.id)})})]}),e.settings.enableSmartCollections&&e.smartCollections&&e.smartCollections.length>0&&(0,Tt.jsxs)("div",{className:"section smart-collections-section",children:[(0,Tt.jsxs)("button",{onClick:function(){return se("smartCollections")},className:"section-header",children:[Q.smartCollections?(0,Tt.jsx)(B,{size:16}):(0,Tt.jsx)(E,{size:16}),(0,Tt.jsx)(j,{size:16}),(0,Tt.jsx)("span",{children:"Smart Collections"}),(0,Tt.jsx)("span",{className:"count",children:e.smartCollections.length})]}),Q.smartCollections&&(0,Tt.jsx)("div",{className:"section-content",children:e.smartCollections.map(function(n){return(0,Tt.jsx)(jr,{smartCollection:n,collections:e.collections,onUpdateLink:fe,onDeleteLink:pe,onAddNote:ge,onTagsUpdated:oe},n.id)})})]}),(0,Tt.jsxs)("div",{className:"section",children:[(0,Tt.jsxs)("button",{onClick:function(){return se("holdingArea")},className:"section-header",children:[Q.holdingArea?(0,Tt.jsx)(B,{size:16}):(0,Tt.jsx)(E,{size:16}),(0,Tt.jsx)("span",{children:"Holding Area"}),(0,Tt.jsx)("span",{className:"count",children:ze.length})]}),Q.holdingArea&&(0,Tt.jsx)("div",{className:"section-content",children:0===ze.length?(0,Tt.jsxs)("div",{className:"empty-state",children:[(0,Tt.jsx)("p",{children:"No links saved yet"}),(0,Tt.jsx)("button",{onClick:le,className:"empty-action",children:"Save current page"})]}):ze.map(function(n){return(0,Tt.jsx)(Jt,{link:n,collections:e.collections,onUpdate:fe,onDelete:pe,onMoveToCollection:he,onAddNote:ge,onTagsUpdated:oe},n.id)})})]}),(0,Tt.jsxs)("div",{className:"section",children:[(0,Tt.jsxs)("button",{onClick:function(){return se("collections")},className:"section-header",children:[Q.collections?(0,Tt.jsx)(B,{size:16}):(0,Tt.jsx)(E,{size:16}),(0,Tt.jsx)("span",{children:"Collections"}),(0,Tt.jsx)("span",{className:"count",children:e.collections.length}),(0,Tt.jsx)("button",{onClick:function(n){n.stopPropagation(),sn(!0)},className:"add-collection-button",title:"Create new collection",children:(0,Tt.jsx)(S,{size:14})})]}),Q.collections&&(0,Tt.jsx)("div",{className:"section-content",children:0===e.collections.length?(0,Tt.jsxs)("div",{className:"empty-state",children:[(0,Tt.jsx)("p",{children:"No collections yet"}),(0,Tt.jsx)("button",{onClick:function(){return sn(!0)},className:"empty-action",children:"Create collection"})]}):e.collections.map(function(n){var e,t=(e=n.id,Ie.filter(function(n){return n.collectionId===e}));return(0,Tt.jsx)(br,{collection:n,links:t,onUpdateLink:fe,onDeleteLink:pe,onAddNote:ge,onTagsUpdated:oe,onUpdate:te},n.id)})})]})]})}),(0,Tt.jsxs)("div",{className:"footer",children:[(0,Tt.jsx)("button",{onClick:function(){return un(!0)},className:"footer-button",title:"Settings",children:(0,Tt.jsx)(_,{size:16})}),(0,Tt.jsxs)("span",{className:"footer-text",children:[e.links.length," links • ",q.length," tags"]})]}),tn&&X&&(0,Tt.jsx)(ta,{link:X,onSave:me,onClose:function(){rn(!1),nn(null)}}),on&&(0,Tt.jsx)(ia,{onSave:ve,onClose:function(){return sn(!1)}}),cn&&(0,Tt.jsx)(ii,{onClose:function(){return un(!1)}}),(0,Tt.jsx)(qr,{isOpen:Dn,onClose:function(){return Ln(!1)},links:e.links,collections:e.collections,onOpenLink:function(n){window.open(n,"_blank")},onAddToCollection:he,onCreateCollection:function(){sn(!0)},onSaveCurrentPage:le,onAddNote:ge,onOpenTabSync:function(){return Un(!0)}}),(0,Tt.jsx)(na,{isOpen:Mn,onClose:function(){return Un(!1)},collections:e.collections,onSaveTabs:Be}),(0,Tt.jsx)(fa,{isOpen:$n,onSave:we,onSkip:ke,onClose:function(){Yn(!1),Gn(null)},linkTitle:null==Wn?void 0:Wn.title,linkUrl:null==Wn?void 0:Wn.url}),Kn&&(0,Tt.jsx)(Di,{onClose:function(){return Vn(!1)}}),Zn&&(0,Tt.jsx)(Qi,{onClose:function(){return Jn(!1)}})]}):(0,Tt.jsxs)("div",{className:"sidepanel auth-container",children:[(0,Tt.jsx)("div",{className:"header",children:(0,Tt.jsxs)("div",{className:"header-title",children:[(0,Tt.jsx)(c,{className:"header-icon"}),(0,Tt.jsx)("h1",{children:"Nest"})]})}),(0,Tt.jsxs)("div",{className:"auth-form",children:[(0,Tt.jsx)("h2",{children:"Sign In"}),(0,Tt.jsx)("p",{children:"Enter your email to receive a magic login link."}),(0,Tt.jsxs)("form",{onSubmit:Ee,children:[(0,Tt.jsx)("input",{type:"email",placeholder:"Your email",value:vn,onChange:function(n){return bn(n.target.value)},className:"auth-input"}),(0,Tt.jsx)("button",{type:"submit",className:"auth-button",disabled:Cn,children:Cn?"Sending...":"Send Magic Link"})]}),xn&&(0,Tt.jsx)("p",{className:"auth-message",children:xn})]})]})};var co=document.getElementById("root");(0,o.createRoot)(co).render((0,Tt.jsx)(lo,{}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,