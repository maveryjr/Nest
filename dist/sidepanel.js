/*! For license information please see sidepanel.js.LICENSE.txt */
(()=>{"use strict";var e,n,t={20:(e,n,t)=>{var r=t(540),a=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var r,o={},c=null,u=null;for(r in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(u=n.ref),n)i.call(n,r)&&!l.hasOwnProperty(r)&&(o[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===o[r]&&(o[r]=n[r]);return{$$typeof:a,type:e,key:c,ref:u,props:o,_owner:s.current}}n.Fragment=o,n.jsx=c,n.jsxs=c},45:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=r(t(825));n.default=class{constructor(e,{headers:n={},schema:t,fetch:r}){this.url=e,this.headers=n,this.schema=t,this.fetch=r}select(e,{head:n=!1,count:t}={}){const r=n?"HEAD":"GET";let o=!1;const i=(null!=e?e:"*").split("").map(e=>/\s/.test(e)&&!o?"":('"'===e&&(o=!o),e)).join("");return this.url.searchParams.set("select",i),t&&(this.headers.Prefer=`count=${t}`),new a.default({method:r,url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}insert(e,{count:n,defaultToNull:t=!0}={}){const r=[];if(this.headers.Prefer&&r.push(this.headers.Prefer),n&&r.push(`count=${n}`),t||r.push("missing=default"),this.headers.Prefer=r.join(","),Array.isArray(e)){const n=e.reduce((e,n)=>e.concat(Object.keys(n)),[]);if(n.length>0){const e=[...new Set(n)].map(e=>`"${e}"`);this.url.searchParams.set("columns",e.join(","))}}return new a.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}upsert(e,{onConflict:n,ignoreDuplicates:t=!1,count:r,defaultToNull:o=!0}={}){const i=[`resolution=${t?"ignore":"merge"}-duplicates`];if(void 0!==n&&this.url.searchParams.set("on_conflict",n),this.headers.Prefer&&i.push(this.headers.Prefer),r&&i.push(`count=${r}`),o||i.push("missing=default"),this.headers.Prefer=i.join(","),Array.isArray(e)){const n=e.reduce((e,n)=>e.concat(Object.keys(n)),[]);if(n.length>0){const e=[...new Set(n)].map(e=>`"${e}"`);this.url.searchParams.set("columns",e.join(","))}}return new a.default({method:"POST",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}update(e,{count:n}={}){const t=[];return this.headers.Prefer&&t.push(this.headers.Prefer),n&&t.push(`count=${n}`),this.headers.Prefer=t.join(","),new a.default({method:"PATCH",url:this.url,headers:this.headers,schema:this.schema,body:e,fetch:this.fetch,allowEmpty:!1})}delete({count:e}={}){const n=[];return e&&n.push(`count=${e}`),this.headers.Prefer&&n.unshift(this.headers.Prefer),this.headers.Prefer=n.join(","),new a.default({method:"DELETE",url:this.url,headers:this.headers,schema:this.schema,fetch:this.fetch,allowEmpty:!1})}}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var l=e[s],c=r.base?l[0]+r.base:l[0],u=o[c]||0,d="".concat(c," ").concat(u);o[c]=u+1;var A=t(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)n[A].references++,n[A].updater(f);else{var h=a(f,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var l=r(e,a),c=0;c<o.length;c++){var u=t(o[c]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}o=l}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},159:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},182:(e,n,t)=>{t.d(n,{A:()=>A});var r=t(354),a=t.n(r),o=t(314),i=t.n(o),s=t(417),l=t.n(s),c=new URL(t(691),t.b),u=i()(a()),d=l()(c);u.push([e.id,`/* Modern Reset and Base Styles */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  /* Brand Colors */\n  --brand-hue: 244;\n  --color-primary: hsl(var(--brand-hue), 81%, 59%); /* #4f46e5 */\n  --color-primary-light: hsl(var(--brand-hue), 85%, 66%); /* #6366f1 */\n  --color-primary-dark: hsl(var(--brand-hue), 79%, 53%); /* #4338ca */\n\n  /* Semantic Colors */\n  --color-success: #10b981;\n  --color-warning: #f59e0b;\n  --color-danger: #ef4444;\n  --color-danger-hover: #d92d20;\n\n  /* Neutral Colors (Cool Gray) */\n  --color-white: #ffffff;\n  --color-gray-50: #f8fafc;\n  --color-gray-100: #f1f5f9;\n  --color-gray-200: #e2e8f0;\n  --color-gray-300: #cbd5e1;\n  --color-gray-400: #94a3b8;\n  --color-gray-500: #64748b;\n  --color-gray-600: #475569;\n  --color-gray-700: #334155;\n  --color-gray-800: #1e293b;\n  --color-gray-900: #0f172a;\n\n  /* UI Colors */\n  --ui-background: var(--color-gray-50);\n  --ui-element-background: var(--color-white);\n  --ui-border: var(--color-gray-200);\n  --ui-border-hover: var(--color-gray-300);\n  --ui-text-primary: var(--color-gray-800);\n  --ui-text-secondary: var(--color-gray-500);\n  --ui-text-tertiary: var(--color-gray-400);\n  --ui-text-interactive: var(--color-primary);\n  --ui-text-interactive-hover: var(--color-primary-dark);\n  \n  /* Spacing System (slightly tweaked) */\n  --space-1: 0.25rem; /* 4px */\n  --space-2: 0.5rem;  /* 8px */\n  --space-3: 0.75rem; /* 12px */\n  --space-4: 1rem;    /* 16px */\n  --space-5: 1.5rem;  /* 24px */\n  --space-6: 2rem;    /* 32px */\n  --space-8: 3rem;    /* 48px */\n  --space-10: 4rem;   /* 64px */\n  --space-12: 5rem;   /* 80px */\n  \n  /* Typography */\n  --font-family: Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-base: 0.9375rem; /* 15px */\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-size-2xl: 1.5rem;\n  --font-size-3xl: 2rem;\n  \n  /* Border Radius */\n  --radius-sm: 0.25rem;\n  --radius-md: 0.5rem;\n  --radius-lg: 0.75rem;\n  --radius-xl: 1rem;\n  --radius-full: 9999px;\n  \n  /* Shadows (more subtle) */\n  --shadow-sm: 0 1px 2px 0 rgba(15, 23, 42, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.1), 0 2px 4px -2px rgba(15, 23, 42, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -4px rgba(15, 23, 42, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.1), 0 8px 10px -6px rgba(15, 23, 42, 0.1);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.05);\n\n  /* Transitions */\n  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Z-index */\n  --z-base: 1;\n  --z-sticky: 10;\n  --z-dropdown: 50;\n  --z-modal: 100;\n  --z-overlay: 90;\n}\n\nbody {\n  font-family: var(--font-family);\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background-color: var(--ui-background);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Main Sidepanel Layout */\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: var(--ui-background);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family);\n  overflow: hidden;\n  position: relative;\n}\n\n/* Modern Header Design */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-3) var(--space-4);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-sticky);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.header-title h1 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  letter-spacing: -0.025em;\n}\n\n.header-icon {\n  color: var(--color-primary);\n  width: 22px;\n  height: 22px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.save-button,\n.tab-sync-button,\n.logout-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 38px;\n  height: 38px;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.save-button {\n  background: var(--color-primary);\n  color: var(--color-white);\n  box-shadow: var(--shadow-sm);\n}\n\n.save-button:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n.tab-sync-button,\n.logout-button {\n  background: transparent;\n  color: var(--ui-text-secondary);\n}\n\n.tab-sync-button:hover,\n.logout-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n  transform: none;\n}\n\n/* Enhanced Search Design */\n.search-container {\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-icon {\n  position: absolute;\n  left: var(--space-3);\n  color: var(--ui-text-tertiary);\n  pointer-events: none;\n  z-index: 1;\n  width: 20px;\n  height: 20px;\n}\n\n.search-input {\n  width: 100%;\n  height: 44px;\n  padding: 0 var(--space-3) 0 40px;\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-base);\n  outline: none;\n}\n\n.search-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.search-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.search-clear,\n.search-power-mode {\n  position: absolute;\n  right: var(--space-2);\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.search-clear:hover,\n.search-power-mode:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.search-spinner {\n  position: absolute;\n  right: var(--space-3);\n  color: var(--color-primary);\n  animation: spin 1s linear infinite;\n}\n\n.command-hint-button {\n  position: absolute;\n  right: var(--space-3);\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background-color: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-xs);\n  cursor: pointer;\n  border: 1px solid var(--ui-border);\n  transition: all var(--transition-fast);\n}\n\n.command-hint-button:hover {\n    background-color: var(--color-gray-200);\n    color: var(--ui-text-primary);\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* ==========================================================================\n   MODAL STYLES\n   ========================================================================== */\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(15, 23, 42, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-overlay);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: var(--ui-element-background);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n  padding: var(--space-6);\n  animation: modal-fade-in 0.2s var(--transition-base);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n@keyframes modal-fade-in {\n  from { opacity: 0; transform: scale(0.95); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--space-4);\n  padding-bottom: var(--space-3);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.modal-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n}\n\n.modal-close-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.modal-close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.modal-body {\n  /* No specific styles needed for the body wrapper itself */\n}\n\n.modal-footer {\n  margin-top: var(--space-5);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n}\n\n/* Modal form elements */\n.form-group {\n    margin-bottom: var(--space-4);\n}\n.form-group label {\n    display: block;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-2);\n}\n.form-group input[type="text"],\n.form-group textarea {\n    width: 100%;\n    padding: var(--space-2) var(--space-3);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    transition: all var(--transition-fast);\n}\n.form-group input[type="text"]:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n}\n\n.button {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-2) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.button:hover {\n    background: var(--color-gray-300);\n}\n.button.primary {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n.button.primary:hover {\n    background: var(--color-primary-dark);\n}\n\n/* ==========================================================================\n   SETTINGS STYLES\n   ========================================================================== */\n\n.settings-modal .modal-content {\n    max-width: 800px; /* Wider for settings */\n    padding: 0;\n    display: flex;\n    overflow: hidden;\n}\n\n.settings-content {\n    display: flex;\n    width: 100%;\n}\n\n.settings-tabs {\n    width: 200px;\n    flex-shrink: 0;\n    padding: var(--space-4);\n    border-right: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n}\n\n.settings-tab {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.settings-tab:hover {\n    color: var(--ui-text-primary);\n    background: var(--color-gray-200);\n}\n.settings-tab.active {\n    color: var(--ui-text-primary);\n    background: var(--color-white);\n    box-shadow: var(--shadow-sm);\n}\n\n.settings-panel {\n    flex: 1;\n    padding: var(--space-5) var(--space-6);\n    overflow-y: auto;\n    max-height: 80vh;\n}\n\n.settings-panel h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.settings-panel p {\n    color: var(--ui-text-secondary);\n    margin-bottom: var(--space-4);\n}\n\n.setting-group {\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--space-5);\n    overflow: hidden;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--space-3) var(--space-4);\n}\n.setting-item:not(:last-child) {\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.setting-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n}\n.setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.setting-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-4);\n    margin-top: var(--space-4);\n}\n.stat-card {\n    background: var(--color-gray-100);\n    padding: var(--space-4);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--ui-border);\n}\n.stat-number {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n.stat-label {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.settings-message {\n    margin-top: var(--space-4);\n    padding: var(--space-3) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}\n.settings-message.success {\n    background-color: hsl(142.1 76.2% 36.3% / 15%);\n    color: hsl(142.1 70.2% 30.3%);\n}\n.settings-message.error {\n    background-color: hsl(0 72.2% 50.6% / 15%);\n    color: hsl(0 62.2% 45.6%);\n}\n\n.settings-button {\n    /* uses .button styles */\n}\n.settings-button.danger {\n    background-color: var(--color-danger);\n    color: var(--color-white);\n}\n.settings-button.danger:hover {\n    background-color: var(--color-danger-hover);\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n}\n.toggle-switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--color-gray-300);\n  transition: .4s;\n  border-radius: var(--radius-full);\n}\n.toggle-slider:before {\n  position: absolute;\n  content: "";\n  height: 14px;\n  width: 14px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\ninput:checked + .toggle-slider {\n  background-color: var(--color-primary);\n}\ninput:checked + .toggle-slider:before {\n  transform: translateX(16px);\n}\n\n/* TAG EDITOR */\n.tag-editor {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.tag-editor-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.tag-editor-loading {\n  padding: var(--space-3);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n}\n\n/* COLLECTIONS MENU */\n.collections-menu {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.collections-header {\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  transition: background-color var(--transition-fast);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.collection-option:last-child {\n  border-bottom: none;\n}\n\n.collection-option:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* Inbox Actions */\n.inbox-section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping on small screens */\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-section-title .section-header {\n  padding: 0;\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 20px;\n  text-align: center;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button,\n.inbox-actions select {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button:hover,\n.inbox-actions select:hover {\n  background: var(--color-gray-100);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n}\n\n.inbox-actions select {\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url(${d});\n  background-repeat: no-repeat;\n  background-position: right var(--space-2) center;\n  padding-right: var(--space-6);\n}\n\n/* Footer */\n.footer {\n  padding: var(--space-2) var(--space-4);\n  background: var(--ui-element-background);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.footer-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* Content Area */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--space-4);\n  scroll-behavior: smooth;\n}\n\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n/* Section Headers */\n.section {\n  margin-bottom: var(--space-6);\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-2) 0;\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: color var(--transition-fast);\n  position: relative;\n}\n\n.section-header:hover {\n  color: var(--ui-text-interactive);\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 24px;\n  text-align: center;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.add-collection-button:hover {\n  color: var(--ui-text-interactive);\n  background: var(--color-gray-100);\n  transform: scale(1.1);\n}\n\n.section-content {\n  margin-top: var(--space-3);\n}\n\n/* Modern Card Design Foundation */\n.card-base {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  position: relative;\n}\n\n.card-base:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.card-base::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  opacity: 0;\n  transition: opacity var(--transition-base);\n}\n\n.card-base:hover::before {\n  opacity: 1;\n}\n\n/* Enhanced Favicon System */\n.favicon-container {\n  position: relative;\n  width: 36px;\n  height: 36px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n}\n\n.favicon-container img {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n  transition: transform var(--transition-fast);\n}\n\n.favicon-container:hover img {\n  transform: scale(1.05);\n}\n\n.favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--color-white);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n/* Domain Color System */\n.domain-github { background: linear-gradient(135deg, #24292e, #586069); }\n.domain-stackoverflow { background: linear-gradient(135deg, #f48024, #fe7a15); }\n.domain-medium { background: linear-gradient(135deg, #00ab6c, #00d084); }\n.domain-youtube { background: linear-gradient(135deg, #ff0000, #cc0000); }\n.domain-twitter { background: linear-gradient(135deg, #1da1f2, #0d8bd9); }\n.domain-linkedin { background: linear-gradient(135deg, #0077b5, #005885); }\n.domain-reddit { background: linear-gradient(135deg, #ff4500, #ff6500); }\n.domain-dev { background: linear-gradient(135deg, #0a0a0a, #2d2d2d); }\n\n/* Typography Improvements */\n.link-title,\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  line-height: 1.4;\n  margin-bottom: var(--space-1);\n  cursor: pointer;\n  transition: color var(--transition-fast);\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.link-title:hover,\n.inbox-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-meta,\n.inbox-card-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-bottom: var(--space-2);\n}\n\n.link-domain {\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n}\n\n.link-date::before {\n  content: '•';\n  margin: 0 var(--space-2);\n  color: var(--ui-text-tertiary);\n}\n\n/* Action Buttons */\n.action-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Enhanced Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  min-width: 180px;\n  padding: var(--space-1);\n  margin-top: 0;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu button.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-10);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner {\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-primary);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n/* Empty States */\n.empty-state {\n  text-align: center;\n  padding: var(--space-10) var(--space-4);\n  color: var(--ui-text-secondary);\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--color-gray-300);\n  margin-bottom: var(--space-4);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  max-width: 300px;\n  margin: 0 auto var(--space-4);\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n/* ==========================================================================\n   MODERN CARD SYSTEM - COMPLETE REDESIGN\n   ========================================================================== */\n\n/* ===== INBOX CARD STYLES ===== */\n.inbox-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.inbox-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.inbox-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-md);\n}\n\n.inbox-card-content {\n  padding: var(--space-4);\n  display: flex;\n  gap: var(--space-4);\n}\n\n.inbox-card-checkbox {\n  padding-top: 5px; /* Align with text */\n}\n\n.inbox-card-checkbox input[type="checkbox"] {\n  width: 18px;\n  height: 18px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:hover {\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type="checkbox"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: 0px;\n  left: 3px;\n  color: var(--color-white);\n  font-size: 12px;\n  font-weight: 700;\n}\n\n.inbox-card-main-content { /* New wrapper */\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.inbox-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.inbox-card-body {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n}\n\n.inbox-card-domain {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 400;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.inbox-card-link,\n.inbox-card-menu-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--ui-text-secondary);\n  background: transparent;\n}\n\n.inbox-card-link:hover,\n.inbox-card-menu-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n/* Let dropdowns be handled by the global dropdown styles */\n.inbox-card-menu,\n.inbox-card-submenu {\n  /* Styles are now handled by .dropdown-menu */\n  display: none; /* Hide if not actively shown by JS */\n}\n\n.inbox-card-summary,\n.inbox-card-note {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  border-left: 3px solid var(--color-gray-300);\n}\n\n.inbox-card-summary p,\n.inbox-card-note p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.inbox-card-highlights {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.highlights-toggle {\n  background: none;\n  border: none;\n  color: var(--ui-text-interactive);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n  padding: var(--space-1) 0;\n}\n\n.highlights-toggle:hover {\n  color: var(--ui-text-interactive-hover);\n}\n\n.highlights-chevron {\n  transition: transform var(--transition-fast);\n  font-size: 10px;\n}\n\n.highlights-chevron.expanded {\n  transform: rotate(180deg);\n}\n\n/* ===== LINK CARD STYLES ===== */\n.link-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.link-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.link-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n}\n\n.link-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.link-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.link-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.link-card-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-card-info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.link-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.link-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-meta {\n  margin-bottom: var(--space-3);\n}\n\n.link-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n/* TAG STYLES */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-top: var(--space-3);\n}\n\n.link-tag {\n  background: hsl(var(--brand-hue) 81% 59% / 10%);\n  color: var(--ui-text-interactive);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 3px var(--space-2);\n  border-radius: var(--radius-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: none;\n}\n\n.link-tag:hover {\n  background: hsl(var(--brand-hue) 81% 59% / 20%);\n}\n\n/* CATEGORY BADGE */\n.link-category {\n  margin-top: var(--space-3);\n}\n\n.category-badge {\n  background: var(--color-gray-600);\n  color: var(--color-white);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n/* NOTES AND SUMMARIES */\n.link-note,\n.link-summary {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n}\n\n.link-note strong,\n.link-summary strong {\n  color: var(--ui-text-primary);\n  font-weight: 600;\n}\n\n/* HIGHLIGHTS SECTION */\n.link-highlights-section {\n  margin-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-3);\n}\n\n.highlights-header {\n  margin-bottom: var(--space-3);\n}\n\n/* ===== COLLECTION CARD STYLES ===== */\n.collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3) var(--space-4);\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: background-color var(--transition-fast);\n}\n\n.collection-card.expanded .collection-header {\n   border-bottom: 1px solid var(--ui-border);\n}\n\n\n.collection-header:hover {\n  background-color: var(--color-gray-50);\n}\n\n.collection-icon {\n  color: var(--ui-text-tertiary);\n}\n\n.collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-weight: 600;\n}\n\n.public-indicator {\n    color: var(--ui-text-tertiary);\n}\n\n.collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-top: 2px;\n  display: block;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.collection-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n}\n\n.collection-content {\n  padding: var(--space-4);\n}\n\n.empty-collection {\n  padding: var(--space-4);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* ===== SEARCH RESULT CARD STYLES ===== */\n.search-result-card {\n  position: relative;\n  margin-bottom: var(--space-4);\n  border: 1px dashed var(--ui-border-hover);\n  border-radius: var(--radius-xl);\n  padding-top: var(--space-5);\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: var(--space-2);\n  right: var(--space-4);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  color: var(--ui-text-tertiary);\n  background-color: var(--color-gray-100);\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.search-headline {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  padding: 0 var(--space-4) var(--space-3);\n  border-bottom: 1px dashed var(--ui-border);\n  margin-bottom: var(--space-3);\n}\n\n.search-headline em {\n  font-style: normal;\n  background-color: hsl(var(--brand-hue) 81% 59% / 15%);\n  color: var(--ui-text-interactive-hover);\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.search-result-card .link-card {\n    border: none;\n    margin-bottom: 0;\n    box-shadow: none;\n}\n.search-result-card .link-card:hover {\n    transform: none;\n    box-shadow: none;\n}\n\n.about-info {\n    margin-bottom: var(--space-5);\n}\n.app-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-4);\n    margin-bottom: var(--space-4);\n}\n.app-logo {\n    width: 48px;\n    height: 48px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n}\n.app-name {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n}\n.app-version {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.support-links h4 {\n    font-size: var(--font-size-base);\n    font-weight: 600;\n    margin-bottom: var(--space-3);\n}\n.link-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n}\n.support-link {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    background: var(--color-gray-50);\n    border: 1px solid var(--ui-border);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n    transition: all var(--transition-fast);\n}\n.support-link:hover {\n    background: var(--color-gray-100);\n    border-color: var(--ui-border-hover);\n}\n\n/* ==========================================================================\n   COMMAND PALETTE STYLES\n   ========================================================================== */\n.command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.6);\n    display: flex;\n    align-items: flex-start; /* Align to top */\n    justify-content: center;\n    padding-top: 15vh; /* Push it down a bit */\n    z-index: var(--z-overlay);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n}\n.command-palette {\n    background: var(--ui-element-background);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-xl);\n    width: 90%;\n    max-width: 600px;\n    overflow: hidden;\n    animation: command-palette-fade-in 0.2s var(--transition-base);\n}\n@keyframes command-palette-fade-in {\n  from { opacity: 0; transform: translateY(-10px) scale(0.98); }\n  to { opacity: 1; transform: translateY(0) scale(1); }\n}\n\n.command-palette-header {\n    padding: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n.command-palette-search-icon {\n    position: absolute;\n    left: var(--space-3);\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-input {\n    width: 100%;\n    height: 40px;\n    padding: 0 var(--space-3) 0 var(--space-6);\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: var(--font-size-lg);\n    color: var(--ui-text-primary);\n}\n\n.command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: var(--space-2);\n}\n\n.command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background-color var(--transition-fast);\n}\n.command-palette-item.selected {\n    background-color: var(--color-gray-100);\n}\n.command-palette-item-icon {\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n}\n.command-palette-item-title {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.command-palette-item-subtitle {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-action {\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-empty {\n    text-align: center;\n    padding: var(--space-6);\n    color: var(--ui-text-secondary);\n}\n\n.command-palette-footer {\n    padding: var(--space-2) var(--space-3);\n    border-top: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n.command-palette-tips {\n    display: flex;\n    gap: var(--space-4);\n}\n.command-palette-tips kbd {\n    background: var(--color-white);\n    border: 1px solid var(--ui-border);\n    padding: 2px 4px;\n    border-radius: var(--radius-sm);\n    box-shadow: var(--shadow-sm);\n}\n\n@keyframes card-fade-in {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* ==========================================================================\n   TAG FILTERS COMPONENT\n   ========================================================================== */\n\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-bottom: var(--space-4);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--ui-border);\n}\n\n.tag-filter {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.tag-filter.active {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.tag-filter.active:hover {\n  background: var(--color-primary-dark);\n  border-color: var(--color-primary-dark);\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: var(--color-white);\n  color: var(--ui-text-secondary);\n  font-size: 10px;\n  font-weight: 600;\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  min-width: 16px;\n  text-align: center;\n  margin-left: var(--space-1);\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--color-primary);\n}\n\n.tag-filter-more {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n  font-style: italic;\n  padding: var(--space-1) var(--space-2);\n}\n\n.tag-filter-skeleton {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-sm);\n  font-style: italic;\n  padding: var(--space-2);\n}\n\n/* ==========================================================================\n   TAG INPUT COMPONENT\n   ========================================================================== */\n\n.tag-input-container {\n  position: relative;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-2);\n  min-height: 40px;\n  transition: all var(--transition-fast);\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  padding: 2px var(--space-2);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  animation: tag-chip-appear 0.2s ease-out;\n}\n\n@keyframes tag-chip-appear {\n  from { opacity: 0; transform: scale(0.8); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.tag-name {\n  white-space: nowrap;\n}\n\n.tag-remove {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: 1px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n  margin-left: 2px;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.tag-input {\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  flex: 1;\n  min-width: 100px;\n  padding: 2px 0;\n}\n\n.tag-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.tag-input:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tag-input-icon {\n  color: var(--ui-text-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  left: 0;\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  max-height: 200px;\n  overflow-y: auto;\n  padding: var(--space-1);\n}\n\n.tag-suggestion {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background: var(--color-gray-100);\n}\n\n.tag-suggestion-color {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.tag-suggestion-count {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS COMPONENT\n   ========================================================================== */\n\n.ai-suggestions {\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-4);\n  overflow: hidden;\n  box-shadow: var(--shadow-md);\n  animation: ai-suggestions-appear 0.3s ease-out;\n}\n\n@keyframes ai-suggestions-appear {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.ai-suggestions.loading {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-suggestions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-3) var(--space-4);\n  background: rgba(255, 255, 255, 0.1);\n  -webkit-backdrop-filter: blur(10px);\n  backdrop-filter: blur(10px);\n}\n\n.ai-suggestions.loading .ai-suggestions-header {\n  background: var(--color-gray-50);\n  -webkit-backdrop-filter: none;\n  backdrop-filter: none;\n}\n\n.ai-loading-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--color-white);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n}\n\n.ai-suggestions.loading .ai-loading-content {\n  color: var(--ui-text-secondary);\n}\n\n.ai-icon {\n  width: 14px;\n  height: 14px;\n}\n\n.ai-icon.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.ai-suggestions-close {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions.loading .ai-suggestions-close {\n  color: var(--ui-text-tertiary);\n}\n\n.ai-suggestions-close:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions.loading .ai-suggestions-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions-toggle {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  margin-right: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-toggle:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions-content {\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n.ai-suggestion-section {\n  margin-bottom: var(--space-4);\n}\n\n.ai-suggestion-section:last-child {\n  margin-bottom: 0;\n}\n\n.suggestion-section-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-category-suggestions,\n.ai-tag-suggestions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.ai-category-chip,\n.ai-tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.ai-category-chip:hover,\n.ai-tag-chip:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.ai-category-chip.selected,\n.ai-tag-chip.selected {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.suggestion-name {\n  font-weight: 500;\n}\n\n.confidence-indicator {\n  font-size: 9px;\n  font-weight: 700;\n  color: var(--color-white);\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  min-width: 20px;\n  text-align: center;\n}\n\n.selected-icon {\n  margin-left: var(--space-1);\n}\n\n.ai-topics-section {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.ai-topics-label {\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-detected-topics {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n}\n\n.ai-topic-pill {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.ai-suggestions-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n  margin-top: var(--space-4);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.ai-action-btn {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.ai-action-btn:hover {\n  background: var(--color-gray-300);\n}\n\n.ai-action-btn.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.ai-action-btn.primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-action-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ai-action-btn.secondary {\n  background: transparent;\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-action-btn.secondary:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   ENHANCED DROPDOWN MENU STYLES\n   ========================================================================== */\n\n.dropdown-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu-item:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu-item:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.dropdown-menu-item.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu-item.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* ==========================================================================\n   INBOX CARD TAG STYLES\n   ========================================================================== */\n\n.inbox-card-tags {\n  margin-top: var(--space-3);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n/* ==========================================================================\n   ENHANCED BUTTON STYLES\n   ========================================================================== */\n\n.action-button {\n  background: none;\n  border: 1px solid transparent;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.action-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--color-gray-100);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n  border-radius: inherit;\n}\n\n.action-button:hover {\n  color: var(--ui-text-primary);\n  border-color: var(--ui-border);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.action-button:hover::before {\n  opacity: 1;\n}\n\n.action-button:active {\n  transform: translateY(0);\n  box-shadow: var(--shadow-inner);\n}\n\n.action-button > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Primary action button variant */\n.action-button.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n}\n\n.action-button.primary::before {\n  background: var(--color-primary-dark);\n}\n\n.action-button.primary:hover {\n  border-color: var(--color-primary-dark);\n  color: var(--color-white);\n}\n\n/* Danger action button variant */\n.action-button.danger {\n  color: var(--color-danger);\n}\n\n.action-button.danger::before {\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.action-button.danger:hover {\n  color: var(--color-danger-hover);\n  border-color: var(--color-danger);\n}\n\n/* ==========================================================================\n   SHARE MODAL STYLES\n   ========================================================================== */\n\n.share-link-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--color-gray-50);\n  color: var(--ui-text-primary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.share-link-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.share-link-input:read-only {\n  cursor: pointer;\n}\n\n.share-link-input:read-only:hover {\n  background: var(--color-gray-100);\n}\n\n/* ==========================================================================\n   TAB SYNC STYLES\n   ========================================================================== */\n\n.tab-sync-filters {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.tab-sync-filter-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.tab-sync-filter-row:last-child {\n  margin-bottom: 0;\n}\n\n.tab-sync-filter-checkbox {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"] {\n  width: 16px;\n  height: 16px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:hover {\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type="checkbox"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: -1px;\n  left: 2px;\n  color: var(--color-white);\n  font-size: 10px;\n  font-weight: 700;\n}\n\n.tab-sync-domain-filter {\n  flex: 1;\n  min-width: 200px;\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.tab-sync-domain-filter:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tab-sync-domain-filter::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n/* ==========================================================================\n   AUTH INPUT STYLES\n   ========================================================================== */\n\n.auth-input {\n  width: 100%;\n  padding: var(--space-3) var(--space-4);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.auth-input:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.auth-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.auth-input:invalid {\n  border-color: var(--color-danger);\n}\n\n.auth-input:invalid:focus {\n  border-color: var(--color-danger);\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS META STYLES\n   ========================================================================== */\n\n.ai-suggestions-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  color: rgba(255, 255, 255, 0.9);\n  font-size: var(--font-size-xs);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  display: none;\n}\n\n/* ==========================================================================\n   SMART COLLECTIONS STYLES\n   ========================================================================== */\n\n.smart-collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-fast);\n  position: relative;\n  overflow: hidden;\n}\n\n.smart-collection-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, #8b5cf6, #3b82f6, #10b981);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n}\n\n.smart-collection-card:hover::before {\n  opacity: 1;\n}\n\n.smart-collection-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  width: 100%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.smart-collection-header:hover {\n  background: var(--color-gray-50);\n}\n\n.smart-collection-icon {\n  font-size: var(--font-size-lg);\n  min-width: 24px;\n  text-align: center;\n}\n\n.smart-collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.smart-collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-1);\n}\n\n.smart-collection-name {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.smart-collection-badges {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.ai-badge {\n  color: var(--color-primary);\n  opacity: 0.8;\n}\n\n.auto-update-badge {\n  font-size: 10px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  background: var(--color-success);\n  color: white;\n  padding: 2px 6px;\n  border-radius: var(--radius-full);\n  line-height: 1;\n}\n\n.smart-collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin: 0;\n  line-height: 1.4;\n}\n\n.smart-collection-updated {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  margin-top: var(--space-1);\n  display: block;\n}\n\n.smart-collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.smart-collection-count {\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 32px;\n  text-align: center;\n}\n\n.refresh-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.refresh-button:hover:not(:disabled) {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.refresh-button .spinning {\n  animation: spin 1s linear infinite;\n}\n\n.smart-collection-content {\n  border-top: 1px solid var(--ui-border);\n  background: var(--color-gray-50);\n}\n\n.smart-collection-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.smart-collection-loading .loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid var(--color-gray-200);\n  border-top: 2px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.empty-smart-collection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n.empty-smart-collection .empty-icon {\n  color: var(--color-primary);\n  opacity: 0.6;\n  margin-bottom: var(--space-3);\n}\n\n.empty-smart-collection p {\n  font-weight: 500;\n  margin-bottom: var(--space-2);\n  color: var(--ui-text-primary);\n}\n\n.empty-subtitle {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.smart-collection-links {\n  padding: var(--space-3);\n}\n\n.smart-collection-links .link-card {\n  margin-bottom: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.smart-collection-links .link-card:last-child {\n  margin-bottom: 0;\n}\n\n/* Smart Collections Section Header */\n.smart-collections-section .section-header {\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  color: white;\n  border: none;\n}\n\n.smart-collections-section .section-header:hover {\n  background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));\n}\n\n.smart-collections-section .section-header .count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n/* Animation for smart collection expansion */\n.smart-collection-card.expanded {\n  box-shadow: var(--shadow-md);\n}\n\n.smart-collection-card.expanded .smart-collection-header {\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n/* Responsive adjustments for smart collections */\n@media (max-width: 480px) {\n  .smart-collection-header {\n    padding: var(--space-3);\n  }\n  \n  .smart-collection-name {\n    font-size: var(--font-size-sm);\n  }\n  \n  .smart-collection-description {\n    font-size: var(--font-size-xs);\n  }\n  \n  .smart-collection-actions {\n    gap: var(--space-1);\n  }\n  \n  .auto-update-badge {\n    font-size: 8px;\n    padding: 1px 4px;\n  }\n}\n\n/* ==========================================================================\n   SAVE PROMPT MODAL STYLES\n   ========================================================================== */\n\n.save-prompt-modal {\n  max-width: 600px;\n  width: 95%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.save-prompt-modal .modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: var(--space-2);\n}\n\n.save-prompt-modal .modal-footer {\n  flex-shrink: 0;\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-4);\n  margin-top: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n/* Custom scrollbar for save prompt modal */\n.save-prompt-modal .modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-track {\n  background: var(--color-gray-100);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n.save-prompt-link-preview {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-3);\n  margin-bottom: var(--space-4);\n}\n\n.link-preview-title {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n  line-height: 1.4;\n}\n\n.link-preview-url {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-reasons-section {\n  margin-bottom: var(--space-5);\n}\n\n.save-reasons-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.save-reasons-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: var(--space-3);\n}\n\n.save-reason-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-align: left;\n  width: 100%;\n}\n\n.save-reason-card:hover {\n  border-color: var(--color-primary);\n  background: var(--color-gray-50);\n}\n\n.save-reason-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 8%);\n  box-shadow: 0 0 0 1px var(--color-primary);\n}\n\n.save-reason-icon {\n  color: var(--color-primary);\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.save-reason-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.save-reason-label {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.save-reason-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.4;\n}\n\n.custom-reason-section {\n  margin-bottom: var(--space-5);\n}\n\n.custom-reason-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.custom-reason-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  resize: vertical;\n  min-height: 80px;\n  font-family: inherit;\n}\n\n.custom-reason-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.custom-reason-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.suggested-tags-section {\n  margin-bottom: var(--space-5);\n}\n\n.suggested-tags-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.suggested-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.suggested-tag {\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  background: var(--ui-element-background);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.suggested-tag:hover {\n  border-color: var(--color-primary);\n  color: var(--ui-text-primary);\n}\n\n.suggested-tag.selected {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n  color: white;\n}\n\n.save-prompt-tip {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-prompt-tip svg {\n  color: var(--color-warning);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for save prompt modal */\n@media (max-width: 480px) {\n  .save-prompt-modal {\n    max-width: 95%;\n    margin: var(--space-2);\n    max-height: 95vh;\n  }\n  \n  .save-reasons-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .save-reason-card {\n    padding: var(--space-2);\n  }\n  \n  .suggested-tags {\n    justify-content: center;\n  }\n  \n  .save-prompt-modal .modal-body {\n    padding-right: var(--space-1);\n  }\n}\n\n/* ==========================================================================\n   ACTIVITY TRACKER STYLES\n   ========================================================================== */\n\n.activity-tracker-modal {\n  max-width: 650px;\n  width: 95%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.activity-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.activity-loading .loading-spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.streak-section {\n  margin-bottom: var(--space-6);\n}\n\n.streak-card {\n  display: flex;\n  align-items: center;\n  gap: var(--space-4);\n  padding: var(--space-5);\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  border-radius: var(--radius-xl);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.streak-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n  pointer-events: none;\n}\n\n.streak-icon {\n  flex-shrink: 0;\n}\n\n.flame-active {\n  color: #ffd700;\n  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.5));\n}\n\n.flame-inactive {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.streak-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.streak-number {\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: var(--space-1);\n}\n\n.streak-label {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n  opacity: 0.9;\n}\n\n.streak-message {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.4;\n}\n\n.best-streak {\n  position: absolute;\n  top: var(--space-3);\n  right: var(--space-3);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: var(--space-3);\n  margin-bottom: var(--space-6);\n}\n\n.stat-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  transition: all var(--transition-fast);\n}\n\n.stat-card:hover {\n  border-color: var(--color-primary);\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n}\n\n.stat-icon {\n  color: var(--color-primary);\n  margin-bottom: var(--space-2);\n}\n\n.stat-number {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 500;\n}\n\n.weekly-activity {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-6);\n  text-align: center;\n}\n\n.weekly-activity h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.weekly-stat {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: var(--space-2);\n}\n\n.weekly-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.weekly-label {\n  font-size: var(--font-size-base);\n  color: var(--ui-text-secondary);\n}\n\n.recent-activities {\n  margin-bottom: var(--space-6);\n}\n\n.recent-activities h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.no-activities {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n}\n\n.no-activities p {\n  font-weight: 500;\n  margin: var(--space-2) 0;\n  color: var(--ui-text-primary);\n}\n\n.no-activities span {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n}\n\n.activities-list {\n  space-y: var(--space-2);\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n}\n\n.activity-item:hover {\n  background: var(--color-gray-50);\n}\n\n.activity-icon {\n  flex-shrink: 0;\n}\n\n.activity-icon.save { color: var(--color-success); }\n.activity-icon.read { color: var(--color-primary); }\n.activity-icon.highlight { color: var(--color-warning); }\n.activity-icon.organize { color: #8b5cf6; }\n.activity-icon.search { color: var(--ui-text-secondary); }\n.activity-icon.default { color: var(--ui-text-tertiary); }\n\n.activity-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.activity-description {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.activity-time {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n}\n\n.motivation-section {\n  margin-top: var(--space-4);\n}\n\n.motivation-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  color: white;\n}\n\n.motivation-content h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n}\n\n.motivation-content p {\n  font-size: var(--font-size-sm);\n  line-height: 1.5;\n  opacity: 0.9;\n}\n\n.activity-error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* Responsive adjustments for activity tracker */\n@media (max-width: 480px) {\n  .activity-tracker-modal {\n    max-width: 95%;\n    margin: var(--space-4);\n  }\n  \n  .streak-card {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--space-3);\n  }\n  \n  .best-streak {\n    position: static;\n    margin-top: var(--space-2);\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .stat-card {\n    padding: var(--space-3);\n  }\n  \n  .stat-number {\n    font-size: var(--font-size-xl);\n  }\n  \n  .weekly-number {\n    font-size: var(--font-size-2xl);\n  }\n}\n\n/* ==========================================================================\n   DIGEST SETTINGS COMPONENT\n   ========================================================================== */\n\n.digest-settings {\n  padding: 1rem 0;\n}\n\n.digest-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  margin-bottom: 2rem;\n}\n\n.digest-header-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.digest-icon {\n  opacity: 0.9;\n}\n\n.digest-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.digest-header p {\n  margin: 0.25rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.digest-config {\n  space-y: 2rem;\n}\n\n.digest-config .setting-group {\n  margin-bottom: 2rem;\n}\n\n.digest-config h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 0.5rem;\n}\n\n.digest-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.digest-actions .button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.digest-preview {\n  background: #f8fafc;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.digest-preview h4 {\n  margin: 0 0 1rem;\n  color: #1f2937;\n  font-size: 1.125rem;\n}\n\n.preview-content {\n  space-y: 1rem;\n}\n\n.preview-header {\n  text-align: center;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.preview-header h5 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.preview-header p {\n  margin: 0.5rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.preview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.preview-stat {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-stat .stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #667eea;\n  line-height: 1;\n}\n\n.preview-stat .stat-label {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n}\n\n.preview-sections {\n  space-y: 1rem;\n}\n\n.preview-section {\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-section h6 {\n  margin: 0 0 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.preview-section p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.preview-ai-summary {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #0ea5e9;\n}\n\n.preview-ai-summary em {\n  font-size: 0.875rem;\n  color: #0369a1;\n}\n\n.preview-insights {\n  padding: 1rem;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border-radius: 8px;\n  border: 1px solid #bae6fd;\n  margin-top: 1rem;\n}\n\n.preview-insights h6 {\n  margin: 0 0 0.5rem;\n  color: #0369a1;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.preview-insights p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #075985;\n}\n\n.digest-message {\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.digest-message.success {\n  background: #dcfce7;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.digest-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n} `,"",{version:3,sources:["webpack://./src/sidepanel/sidepanel.css"],names:[],mappings:"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",sourcesContent:["/* Modern Reset and Base Styles */\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  /* Brand Colors */\n  --brand-hue: 244;\n  --color-primary: hsl(var(--brand-hue), 81%, 59%); /* #4f46e5 */\n  --color-primary-light: hsl(var(--brand-hue), 85%, 66%); /* #6366f1 */\n  --color-primary-dark: hsl(var(--brand-hue), 79%, 53%); /* #4338ca */\n\n  /* Semantic Colors */\n  --color-success: #10b981;\n  --color-warning: #f59e0b;\n  --color-danger: #ef4444;\n  --color-danger-hover: #d92d20;\n\n  /* Neutral Colors (Cool Gray) */\n  --color-white: #ffffff;\n  --color-gray-50: #f8fafc;\n  --color-gray-100: #f1f5f9;\n  --color-gray-200: #e2e8f0;\n  --color-gray-300: #cbd5e1;\n  --color-gray-400: #94a3b8;\n  --color-gray-500: #64748b;\n  --color-gray-600: #475569;\n  --color-gray-700: #334155;\n  --color-gray-800: #1e293b;\n  --color-gray-900: #0f172a;\n\n  /* UI Colors */\n  --ui-background: var(--color-gray-50);\n  --ui-element-background: var(--color-white);\n  --ui-border: var(--color-gray-200);\n  --ui-border-hover: var(--color-gray-300);\n  --ui-text-primary: var(--color-gray-800);\n  --ui-text-secondary: var(--color-gray-500);\n  --ui-text-tertiary: var(--color-gray-400);\n  --ui-text-interactive: var(--color-primary);\n  --ui-text-interactive-hover: var(--color-primary-dark);\n  \n  /* Spacing System (slightly tweaked) */\n  --space-1: 0.25rem; /* 4px */\n  --space-2: 0.5rem;  /* 8px */\n  --space-3: 0.75rem; /* 12px */\n  --space-4: 1rem;    /* 16px */\n  --space-5: 1.5rem;  /* 24px */\n  --space-6: 2rem;    /* 32px */\n  --space-8: 3rem;    /* 48px */\n  --space-10: 4rem;   /* 64px */\n  --space-12: 5rem;   /* 80px */\n  \n  /* Typography */\n  --font-family: Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-base: 0.9375rem; /* 15px */\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-size-2xl: 1.5rem;\n  --font-size-3xl: 2rem;\n  \n  /* Border Radius */\n  --radius-sm: 0.25rem;\n  --radius-md: 0.5rem;\n  --radius-lg: 0.75rem;\n  --radius-xl: 1rem;\n  --radius-full: 9999px;\n  \n  /* Shadows (more subtle) */\n  --shadow-sm: 0 1px 2px 0 rgba(15, 23, 42, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(15, 23, 42, 0.1), 0 2px 4px -2px rgba(15, 23, 42, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(15, 23, 42, 0.1), 0 4px 6px -4px rgba(15, 23, 42, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(15, 23, 42, 0.1), 0 8px 10px -6px rgba(15, 23, 42, 0.1);\n  --shadow-inner: inset 0 2px 4px 0 rgba(0,0,0,0.05);\n\n  /* Transitions */\n  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Z-index */\n  --z-base: 1;\n  --z-sticky: 10;\n  --z-dropdown: 50;\n  --z-modal: 100;\n  --z-overlay: 90;\n}\n\nbody {\n  font-family: var(--font-family);\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--ui-text-primary);\n  background-color: var(--ui-background);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Main Sidepanel Layout */\n.sidepanel {\n  width: 100%;\n  height: 100vh;\n  background: var(--ui-background);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family);\n  overflow: hidden;\n  position: relative;\n}\n\n/* Modern Header Design */\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-3) var(--space-4);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-sticky);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.header-title h1 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  letter-spacing: -0.025em;\n}\n\n.header-icon {\n  color: var(--color-primary);\n  width: 22px;\n  height: 22px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.save-button,\n.tab-sync-button,\n.logout-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 38px;\n  height: 38px;\n  border: none;\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.save-button {\n  background: var(--color-primary);\n  color: var(--color-white);\n  box-shadow: var(--shadow-sm);\n}\n\n.save-button:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n.tab-sync-button,\n.logout-button {\n  background: transparent;\n  color: var(--ui-text-secondary);\n}\n\n.tab-sync-button:hover,\n.logout-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n  transform: none;\n}\n\n/* Enhanced Search Design */\n.search-container {\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-icon {\n  position: absolute;\n  left: var(--space-3);\n  color: var(--ui-text-tertiary);\n  pointer-events: none;\n  z-index: 1;\n  width: 20px;\n  height: 20px;\n}\n\n.search-input {\n  width: 100%;\n  height: 44px;\n  padding: 0 var(--space-3) 0 40px;\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-base);\n  outline: none;\n}\n\n.search-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.search-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.search-clear,\n.search-power-mode {\n  position: absolute;\n  right: var(--space-2);\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.search-clear:hover,\n.search-power-mode:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n.search-spinner {\n  position: absolute;\n  right: var(--space-3);\n  color: var(--color-primary);\n  animation: spin 1s linear infinite;\n}\n\n.command-hint-button {\n  position: absolute;\n  right: var(--space-3);\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background-color: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-xs);\n  cursor: pointer;\n  border: 1px solid var(--ui-border);\n  transition: all var(--transition-fast);\n}\n\n.command-hint-button:hover {\n    background-color: var(--color-gray-200);\n    color: var(--ui-text-primary);\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* ==========================================================================\n   MODAL STYLES\n   ========================================================================== */\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(15, 23, 42, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: var(--z-overlay);\n  -webkit-backdrop-filter: blur(4px);\n  backdrop-filter: blur(4px);\n}\n\n.modal-content {\n  background: var(--ui-element-background);\n  border-radius: var(--radius-xl);\n  box-shadow: var(--shadow-xl);\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n  padding: var(--space-6);\n  animation: modal-fade-in 0.2s var(--transition-base);\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n@keyframes modal-fade-in {\n  from { opacity: 0; transform: scale(0.95); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--space-4);\n  padding-bottom: var(--space-3);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.modal-title {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n}\n\n.modal-close-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.modal-close-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.modal-body {\n  /* No specific styles needed for the body wrapper itself */\n}\n\n.modal-footer {\n  margin-top: var(--space-5);\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n}\n\n/* Modal form elements */\n.form-group {\n    margin-bottom: var(--space-4);\n}\n.form-group label {\n    display: block;\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-2);\n}\n.form-group input[type=\"text\"],\n.form-group textarea {\n    width: 100%;\n    padding: var(--space-2) var(--space-3);\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-base);\n    background: var(--ui-background);\n    color: var(--ui-text-primary);\n    transition: all var(--transition-fast);\n}\n.form-group input[type=\"text\"]:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-primary);\n    box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.form-group textarea {\n    min-height: 120px;\n    resize: vertical;\n}\n\n.button {\n    background: var(--color-gray-200);\n    color: var(--ui-text-primary);\n    border: none;\n    padding: var(--space-2) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.button:hover {\n    background: var(--color-gray-300);\n}\n.button.primary {\n    background: var(--color-primary);\n    color: var(--color-white);\n}\n.button.primary:hover {\n    background: var(--color-primary-dark);\n}\n\n/* ==========================================================================\n   SETTINGS STYLES\n   ========================================================================== */\n\n.settings-modal .modal-content {\n    max-width: 800px; /* Wider for settings */\n    padding: 0;\n    display: flex;\n    overflow: hidden;\n}\n\n.settings-content {\n    display: flex;\n    width: 100%;\n}\n\n.settings-tabs {\n    width: 200px;\n    flex-shrink: 0;\n    padding: var(--space-4);\n    border-right: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n}\n\n.settings-tab {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n    color: var(--ui-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    transition: all var(--transition-fast);\n}\n.settings-tab:hover {\n    color: var(--ui-text-primary);\n    background: var(--color-gray-200);\n}\n.settings-tab.active {\n    color: var(--ui-text-primary);\n    background: var(--color-white);\n    box-shadow: var(--shadow-sm);\n}\n\n.settings-panel {\n    flex: 1;\n    padding: var(--space-5) var(--space-6);\n    overflow-y: auto;\n    max-height: 80vh;\n}\n\n.settings-panel h3 {\n    font-size: var(--font-size-xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n    margin-bottom: var(--space-4);\n    padding-bottom: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.settings-panel p {\n    color: var(--ui-text-secondary);\n    margin-bottom: var(--space-4);\n}\n\n.setting-group {\n    border: 1px solid var(--ui-border);\n    border-radius: var(--radius-lg);\n    margin-bottom: var(--space-5);\n    overflow: hidden;\n}\n\n.setting-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--space-3) var(--space-4);\n}\n.setting-item:not(:last-child) {\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.setting-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n}\n.setting-label {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.setting-description {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-4);\n    margin-top: var(--space-4);\n}\n.stat-card {\n    background: var(--color-gray-100);\n    padding: var(--space-4);\n    border-radius: var(--radius-lg);\n    border: 1px solid var(--ui-border);\n}\n.stat-number {\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n    color: var(--ui-text-primary);\n}\n.stat-label {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n    margin-top: var(--space-1);\n}\n\n.settings-message {\n    margin-top: var(--space-4);\n    padding: var(--space-3) var(--space-4);\n    border-radius: var(--radius-md);\n    font-size: var(--font-size-sm);\n    font-weight: 500;\n}\n.settings-message.success {\n    background-color: hsl(142.1 76.2% 36.3% / 15%);\n    color: hsl(142.1 70.2% 30.3%);\n}\n.settings-message.error {\n    background-color: hsl(0 72.2% 50.6% / 15%);\n    color: hsl(0 62.2% 45.6%);\n}\n\n.settings-button {\n    /* uses .button styles */\n}\n.settings-button.danger {\n    background-color: var(--color-danger);\n    color: var(--color-white);\n}\n.settings-button.danger:hover {\n    background-color: var(--color-danger-hover);\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n}\n.toggle-switch input { \n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--color-gray-300);\n  transition: .4s;\n  border-radius: var(--radius-full);\n}\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 14px;\n  width: 14px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\ninput:checked + .toggle-slider {\n  background-color: var(--color-primary);\n}\ninput:checked + .toggle-slider:before {\n  transform: translateX(16px);\n}\n\n/* TAG EDITOR */\n.tag-editor {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.tag-editor-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.tag-editor-close {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.tag-editor-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.tag-editor-loading {\n  padding: var(--space-3);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n}\n\n/* COLLECTIONS MENU */\n.collections-menu {\n  margin-top: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--ui-element-background);\n}\n\n.collections-header {\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.collection-option {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  transition: background-color var(--transition-fast);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n.collection-option:last-child {\n  border-bottom: none;\n}\n\n.collection-option:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* Inbox Actions */\n.inbox-section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping on small screens */\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n}\n\n.inbox-section-title {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-section-title .section-header {\n  padding: 0;\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 20px;\n  text-align: center;\n}\n\n.inbox-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button,\n.inbox-actions select {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  color: var(--ui-text-secondary);\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.inbox-action-button:hover,\n.inbox-actions select:hover {\n  background: var(--color-gray-100);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n}\n\n.inbox-actions select {\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 24 24' stroke='%2394a3b8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='m6 9 6 6 6-6'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right var(--space-2) center;\n  padding-right: var(--space-6);\n}\n\n/* Footer */\n.footer {\n  padding: var(--space-2) var(--space-4);\n  background: var(--ui-element-background);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.footer-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.footer-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* Content Area */\n.content {\n  flex: 1;\n  overflow-y: auto;\n  padding: var(--space-4);\n  scroll-behavior: smooth;\n}\n\n.content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.content::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.content::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.content::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n/* Section Headers */\n.section {\n  margin-bottom: var(--space-6);\n}\n\n.section-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-2) 0;\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: color var(--transition-fast);\n  position: relative;\n}\n\n.section-header:hover {\n  color: var(--ui-text-interactive);\n}\n\n.section-header .count {\n  margin-left: auto;\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 24px;\n  text-align: center;\n}\n\n.add-collection-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n}\n\n.add-collection-button:hover {\n  color: var(--ui-text-interactive);\n  background: var(--color-gray-100);\n  transform: scale(1.1);\n}\n\n.section-content {\n  margin-top: var(--space-3);\n}\n\n/* Modern Card Design Foundation */\n.card-base {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  position: relative;\n}\n\n.card-base:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.card-base::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  opacity: 0;\n  transition: opacity var(--transition-base);\n}\n\n.card-base:hover::before {\n  opacity: 1;\n}\n\n/* Enhanced Favicon System */\n.favicon-container {\n  position: relative;\n  width: 36px;\n  height: 36px;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n}\n\n.favicon-container img {\n  width: 20px;\n  height: 20px;\n  object-fit: contain;\n  transition: transform var(--transition-fast);\n}\n\n.favicon-container:hover img {\n  transform: scale(1.05);\n}\n\n.favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--color-white);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n/* Domain Color System */\n.domain-github { background: linear-gradient(135deg, #24292e, #586069); }\n.domain-stackoverflow { background: linear-gradient(135deg, #f48024, #fe7a15); }\n.domain-medium { background: linear-gradient(135deg, #00ab6c, #00d084); }\n.domain-youtube { background: linear-gradient(135deg, #ff0000, #cc0000); }\n.domain-twitter { background: linear-gradient(135deg, #1da1f2, #0d8bd9); }\n.domain-linkedin { background: linear-gradient(135deg, #0077b5, #005885); }\n.domain-reddit { background: linear-gradient(135deg, #ff4500, #ff6500); }\n.domain-dev { background: linear-gradient(135deg, #0a0a0a, #2d2d2d); }\n\n/* Typography Improvements */\n.link-title,\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  line-height: 1.4;\n  margin-bottom: var(--space-1);\n  cursor: pointer;\n  transition: color var(--transition-fast);\n  text-decoration: none;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.link-title:hover,\n.inbox-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-meta,\n.inbox-card-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-bottom: var(--space-2);\n}\n\n.link-domain {\n  font-weight: 500;\n  color: var(--ui-text-secondary);\n}\n\n.link-date::before {\n  content: '•';\n  margin: 0 var(--space-2);\n  color: var(--ui-text-tertiary);\n}\n\n/* Action Buttons */\n.action-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-button:hover {\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n}\n\n/* Enhanced Dropdown */\n.dropdown {\n  position: relative;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  min-width: 180px;\n  padding: var(--space-1);\n  margin-top: 0;\n}\n\n.dropdown-menu button {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu button.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu button.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* Loading States */\n.loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-10);\n  color: var(--ui-text-secondary);\n}\n\n.loading-spinner {\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.loading-spinner::before {\n  content: '';\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--color-primary);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n/* Empty States */\n.empty-state {\n  text-align: center;\n  padding: var(--space-10) var(--space-4);\n  color: var(--ui-text-secondary);\n}\n\n.empty-state svg {\n  width: 48px;\n  height: 48px;\n  color: var(--color-gray-300);\n  margin-bottom: var(--space-4);\n}\n\n.empty-state h3 {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.empty-state p {\n  font-size: var(--font-size-sm);\n  line-height: 1.6;\n  max-width: 300px;\n  margin: 0 auto var(--space-4);\n}\n\n.empty-action {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border: none;\n  border-radius: var(--radius-md);\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.empty-action:hover {\n  background: var(--color-primary-dark);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n}\n\n/* ==========================================================================\n   MODERN CARD SYSTEM - COMPLETE REDESIGN\n   ========================================================================== */\n\n/* ===== INBOX CARD STYLES ===== */\n.inbox-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.inbox-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.inbox-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 5%);\n  box-shadow: var(--shadow-md);\n}\n\n.inbox-card-content {\n  padding: var(--space-4);\n  display: flex;\n  gap: var(--space-4);\n}\n\n.inbox-card-checkbox {\n  padding-top: 5px; /* Align with text */\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"] {\n  width: 18px;\n  height: 18px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:hover {\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.inbox-card-checkbox input[type=\"checkbox\"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: 0px;\n  left: 3px;\n  color: var(--color-white);\n  font-size: 12px;\n  font-weight: 700;\n}\n\n.inbox-card-main-content { /* New wrapper */\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  gap: var(--space-3);\n}\n\n.inbox-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n}\n\n.inbox-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.inbox-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.inbox-card-body {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.inbox-card-title-section {\n  flex: 1;\n  min-width: 0;\n}\n\n.inbox-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n}\n\n.inbox-card-domain {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 400;\n}\n\n.inbox-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.inbox-card-link,\n.inbox-card-menu-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--ui-text-secondary);\n  background: transparent;\n}\n\n.inbox-card-link:hover,\n.inbox-card-menu-button:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.inbox-card-menu-container {\n  position: relative;\n}\n\n/* Let dropdowns be handled by the global dropdown styles */\n.inbox-card-menu,\n.inbox-card-submenu {\n  /* Styles are now handled by .dropdown-menu */\n  display: none; /* Hide if not actively shown by JS */\n}\n\n.inbox-card-summary,\n.inbox-card-note {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  border-left: 3px solid var(--color-gray-300);\n}\n\n.inbox-card-summary p,\n.inbox-card-note p {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n  margin: 0;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n.inbox-card-highlights {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.highlights-toggle {\n  background: none;\n  border: none;\n  color: var(--ui-text-interactive);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n  padding: var(--space-1) 0;\n}\n\n.highlights-toggle:hover {\n  color: var(--ui-text-interactive-hover);\n}\n\n.highlights-chevron {\n  transition: transform var(--transition-fast);\n  font-size: 10px;\n}\n\n.highlights-chevron.expanded {\n  transform: rotate(180deg);\n}\n\n/* ===== LINK CARD STYLES ===== */\n.link-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-xl);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n  transition: all var(--transition-base);\n  position: relative;\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.link-card:hover {\n  border-color: var(--ui-border-hover);\n  box-shadow: var(--shadow-md);\n  transform: translateY(-2px);\n}\n\n.link-card-header {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n}\n\n.link-card-favicon {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  background: var(--color-gray-100);\n  border: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.link-card-favicon img {\n  width: 24px;\n  height: 24px;\n  object-fit: contain;\n}\n\n.link-card-favicon .favicon-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-base);\n  font-weight: 700;\n  color: var(--color-white);\n  text-transform: uppercase;\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n}\n\n.link-card-main {\n  flex: 1;\n  min-width: 0;\n}\n\n.link-card-info-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--space-2);\n}\n\n.link-card-title {\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  line-height: 1.5;\n  margin-bottom: 0;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.link-card-title:hover {\n  color: var(--ui-text-interactive);\n}\n\n.link-card-meta {\n  margin-bottom: var(--space-3);\n}\n\n.link-card-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n/* TAG STYLES */\n.link-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-top: var(--space-3);\n}\n\n.link-tag {\n  background: hsl(var(--brand-hue) 81% 59% / 10%);\n  color: var(--ui-text-interactive);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 3px var(--space-2);\n  border-radius: var(--radius-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  border: none;\n}\n\n.link-tag:hover {\n  background: hsl(var(--brand-hue) 81% 59% / 20%);\n}\n\n/* CATEGORY BADGE */\n.link-category {\n  margin-top: var(--space-3);\n}\n\n.category-badge {\n  background: var(--color-gray-600);\n  color: var(--color-white);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: var(--space-1) var(--space-3);\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.025em;\n}\n\n/* NOTES AND SUMMARIES */\n.link-note,\n.link-summary {\n  margin-top: var(--space-3);\n  padding: var(--space-2) var(--space-3);\n  background: var(--color-gray-100);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.5;\n}\n\n.link-note strong,\n.link-summary strong {\n  color: var(--ui-text-primary);\n  font-weight: 600;\n}\n\n/* HIGHLIGHTS SECTION */\n.link-highlights-section {\n  margin-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-3);\n}\n\n.highlights-header {\n  margin-bottom: var(--space-3);\n}\n\n/* ===== COLLECTION CARD STYLES ===== */\n.collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-base);\n  box-shadow: var(--shadow-sm);\n  animation: card-fade-in 0.3s ease-in-out forwards;\n}\n\n.collection-header {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3) var(--space-4);\n  background: none;\n  border: none;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  cursor: pointer;\n  text-align: left;\n  transition: background-color var(--transition-fast);\n}\n\n.collection-card.expanded .collection-header {\n   border-bottom: 1px solid var(--ui-border);\n}\n\n\n.collection-header:hover {\n  background-color: var(--color-gray-50);\n}\n\n.collection-icon {\n  color: var(--ui-text-tertiary);\n}\n\n.collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  font-weight: 600;\n}\n\n.public-indicator {\n    color: var(--ui-text-tertiary);\n}\n\n.collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin-top: 2px;\n  display: block;\n}\n\n.collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n}\n\n.collection-count {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-full);\n}\n\n.collection-content {\n  padding: var(--space-4);\n}\n\n.empty-collection {\n  padding: var(--space-4);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* ===== SEARCH RESULT CARD STYLES ===== */\n.search-result-card {\n  position: relative;\n  margin-bottom: var(--space-4);\n  border: 1px dashed var(--ui-border-hover);\n  border-radius: var(--radius-xl);\n  padding-top: var(--space-5);\n}\n\n.search-rank-indicator {\n  position: absolute;\n  top: var(--space-2);\n  right: var(--space-4);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  color: var(--ui-text-tertiary);\n  background-color: var(--color-gray-100);\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.search-headline {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  padding: 0 var(--space-4) var(--space-3);\n  border-bottom: 1px dashed var(--ui-border);\n  margin-bottom: var(--space-3);\n}\n\n.search-headline em {\n  font-style: normal;\n  background-color: hsl(var(--brand-hue) 81% 59% / 15%);\n  color: var(--ui-text-interactive-hover);\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.search-result-card .link-card {\n    border: none;\n    margin-bottom: 0;\n    box-shadow: none;\n}\n.search-result-card .link-card:hover {\n    transform: none;\n    box-shadow: none;\n}\n\n.about-info {\n    margin-bottom: var(--space-5);\n}\n.app-info {\n    display: flex;\n    align-items: center;\n    gap: var(--space-4);\n    margin-bottom: var(--space-4);\n}\n.app-logo {\n    width: 48px;\n    height: 48px;\n    background: var(--color-primary);\n    color: var(--color-white);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--radius-lg);\n    font-size: var(--font-size-2xl);\n    font-weight: 600;\n}\n.app-name {\n    font-size: var(--font-size-lg);\n    font-weight: 600;\n}\n.app-version {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.support-links h4 {\n    font-size: var(--font-size-base);\n    font-weight: 600;\n    margin-bottom: var(--space-3);\n}\n.link-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: var(--space-3);\n}\n.support-link {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-3);\n    border-radius: var(--radius-md);\n    background: var(--color-gray-50);\n    border: 1px solid var(--ui-border);\n    color: var(--ui-text-primary);\n    text-decoration: none;\n    transition: all var(--transition-fast);\n}\n.support-link:hover {\n    background: var(--color-gray-100);\n    border-color: var(--ui-border-hover);\n}\n\n/* ==========================================================================\n   COMMAND PALETTE STYLES\n   ========================================================================== */\n.command-palette-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.6);\n    display: flex;\n    align-items: flex-start; /* Align to top */\n    justify-content: center;\n    padding-top: 15vh; /* Push it down a bit */\n    z-index: var(--z-overlay);\n    -webkit-backdrop-filter: blur(4px);\n    backdrop-filter: blur(4px);\n}\n.command-palette {\n    background: var(--ui-element-background);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-xl);\n    width: 90%;\n    max-width: 600px;\n    overflow: hidden;\n    animation: command-palette-fade-in 0.2s var(--transition-base);\n}\n@keyframes command-palette-fade-in {\n  from { opacity: 0; transform: translateY(-10px) scale(0.98); }\n  to { opacity: 1; transform: translateY(0) scale(1); }\n}\n\n.command-palette-header {\n    padding: var(--space-3);\n    border-bottom: 1px solid var(--ui-border);\n}\n\n.command-palette-search {\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n.command-palette-search-icon {\n    position: absolute;\n    left: var(--space-3);\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-input {\n    width: 100%;\n    height: 40px;\n    padding: 0 var(--space-3) 0 var(--space-6);\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: var(--font-size-lg);\n    color: var(--ui-text-primary);\n}\n\n.command-palette-content {\n    max-height: 400px;\n    overflow-y: auto;\n    padding: var(--space-2);\n}\n\n.command-palette-item {\n    display: flex;\n    align-items: center;\n    gap: var(--space-3);\n    padding: var(--space-2) var(--space-3);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background-color var(--transition-fast);\n}\n.command-palette-item.selected {\n    background-color: var(--color-gray-100);\n}\n.command-palette-item-icon {\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-content {\n    flex: 1;\n    min-width: 0;\n}\n.command-palette-item-title {\n    font-weight: 500;\n    color: var(--ui-text-primary);\n}\n.command-palette-item-subtitle {\n    font-size: var(--font-size-sm);\n    color: var(--ui-text-secondary);\n}\n.command-palette-item-action {\n    color: var(--ui-text-tertiary);\n}\n\n.command-palette-empty {\n    text-align: center;\n    padding: var(--space-6);\n    color: var(--ui-text-secondary);\n}\n\n.command-palette-footer {\n    padding: var(--space-2) var(--space-3);\n    border-top: 1px solid var(--ui-border);\n    background: var(--color-gray-50);\n    font-size: var(--font-size-xs);\n    color: var(--ui-text-secondary);\n}\n.command-palette-tips {\n    display: flex;\n    gap: var(--space-4);\n}\n.command-palette-tips kbd {\n    background: var(--color-white);\n    border: 1px solid var(--ui-border);\n    padding: 2px 4px;\n    border-radius: var(--radius-sm);\n    box-shadow: var(--shadow-sm);\n}\n\n@keyframes card-fade-in {\n    from { opacity: 0; transform: translateY(10px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive Design */\n@media (max-width: 480px) {\n  :root {\n    --space-6: 1rem;\n    --font-size-base: 0.875rem;\n    --font-size-lg: 1rem;\n    --font-size-xl: 1.125rem;\n    --font-size-2xl: 1.25rem;\n  }\n  \n  .header {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .search-container {\n    padding: var(--space-3) var(--space-4);\n  }\n  \n  .content {\n    padding: 0 var(--space-4) var(--space-4);\n  }\n  \n  .inbox-card-content,\n  .link-card {\n    padding: var(--space-4);\n  }\n  \n  .inbox-card-favicon,\n  .link-card-favicon {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .inbox-card-favicon img,\n  .link-card-favicon img {\n    width: 24px;\n    height: 24px;\n  }\n  \n  .inbox-card-header,\n  .link-card-header {\n    gap: var(--space-3);\n  }\n}\n\n/* ==========================================================================\n   TAG FILTERS COMPONENT\n   ========================================================================== */\n\n.tag-filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n  margin-bottom: var(--space-4);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border-radius: var(--radius-lg);\n  border: 1px solid var(--ui-border);\n}\n\n.tag-filter {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-decoration: none;\n}\n\n.tag-filter:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  color: var(--ui-text-primary);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.tag-filter.active {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.tag-filter.active:hover {\n  background: var(--color-primary-dark);\n  border-color: var(--color-primary-dark);\n}\n\n.tag-filter-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-filter-count {\n  background: var(--color-white);\n  color: var(--ui-text-secondary);\n  font-size: 10px;\n  font-weight: 600;\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  min-width: 16px;\n  text-align: center;\n  margin-left: var(--space-1);\n}\n\n.tag-filter.active .tag-filter-count {\n  background: rgba(255, 255, 255, 0.9);\n  color: var(--color-primary);\n}\n\n.tag-filter-more {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n  font-style: italic;\n  padding: var(--space-1) var(--space-2);\n}\n\n.tag-filter-skeleton {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-sm);\n  font-style: italic;\n  padding: var(--space-2);\n}\n\n/* ==========================================================================\n   TAG INPUT COMPONENT\n   ========================================================================== */\n\n.tag-input-container {\n  position: relative;\n}\n\n.tag-input-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-2);\n  min-height: 40px;\n  transition: all var(--transition-fast);\n}\n\n.tag-input-wrapper:focus-within {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-radius: var(--radius-full);\n  padding: 2px var(--space-2);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  animation: tag-chip-appear 0.2s ease-out;\n}\n\n@keyframes tag-chip-appear {\n  from { opacity: 0; transform: scale(0.8); }\n  to { opacity: 1; transform: scale(1); }\n}\n\n.tag-name {\n  white-space: nowrap;\n}\n\n.tag-remove {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: 1px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-fast);\n  margin-left: 2px;\n}\n\n.tag-remove:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.tag-input {\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  flex: 1;\n  min-width: 100px;\n  padding: 2px 0;\n}\n\n.tag-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.tag-input:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.tag-input-icon {\n  color: var(--ui-text-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px;\n}\n\n.tag-suggestions {\n  position: absolute;\n  top: calc(100% + var(--space-1));\n  left: 0;\n  right: 0;\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-lg);\n  z-index: var(--z-dropdown);\n  max-height: 200px;\n  overflow-y: auto;\n  padding: var(--space-1);\n}\n\n.tag-suggestion {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n}\n\n.tag-suggestion:hover,\n.tag-suggestion.focused {\n  background: var(--color-gray-100);\n}\n\n.tag-suggestion-color {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.tag-suggestion-name {\n  flex: 1;\n  font-weight: 500;\n}\n\n.tag-suggestion-count {\n  color: var(--ui-text-tertiary);\n  font-size: var(--font-size-xs);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS COMPONENT\n   ========================================================================== */\n\n.ai-suggestions {\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-4);\n  overflow: hidden;\n  box-shadow: var(--shadow-md);\n  animation: ai-suggestions-appear 0.3s ease-out;\n}\n\n@keyframes ai-suggestions-appear {\n  from { opacity: 0; transform: translateY(-10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.ai-suggestions.loading {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-suggestions-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--space-3) var(--space-4);\n  background: rgba(255, 255, 255, 0.1);\n  -webkit-backdrop-filter: blur(10px);\n  backdrop-filter: blur(10px);\n}\n\n.ai-suggestions.loading .ai-suggestions-header {\n  background: var(--color-gray-50);\n  -webkit-backdrop-filter: none;\n  backdrop-filter: none;\n}\n\n.ai-loading-content {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  color: var(--color-white);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n}\n\n.ai-suggestions.loading .ai-loading-content {\n  color: var(--ui-text-secondary);\n}\n\n.ai-icon {\n  width: 14px;\n  height: 14px;\n}\n\n.ai-icon.spinning {\n  animation: spin 1s linear infinite;\n}\n\n.ai-suggestions-close {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions.loading .ai-suggestions-close {\n  color: var(--ui-text-tertiary);\n}\n\n.ai-suggestions-close:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions.loading .ai-suggestions-close:hover {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions-toggle {\n  background: none;\n  border: none;\n  color: rgba(255, 255, 255, 0.8);\n  cursor: pointer;\n  padding: var(--space-1);\n  margin-right: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-toggle:hover {\n  background: rgba(255, 255, 255, 0.2);\n  color: var(--color-white);\n}\n\n.ai-suggestions-content {\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n.ai-suggestion-section {\n  margin-bottom: var(--space-4);\n}\n\n.ai-suggestion-section:last-child {\n  margin-bottom: 0;\n}\n\n.suggestion-section-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-3);\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-category-suggestions,\n.ai-tag-suggestions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.ai-category-chip,\n.ai-tag-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--space-2);\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  padding: var(--space-1) var(--space-3);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.ai-category-chip:hover,\n.ai-tag-chip:hover {\n  background: var(--color-gray-200);\n  border-color: var(--ui-border-hover);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.ai-category-chip.selected,\n.ai-tag-chip.selected {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n  box-shadow: var(--shadow-md);\n}\n\n.suggestion-name {\n  font-weight: 500;\n}\n\n.confidence-indicator {\n  font-size: 9px;\n  font-weight: 700;\n  color: var(--color-white);\n  padding: 1px 4px;\n  border-radius: var(--radius-full);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  min-width: 20px;\n  text-align: center;\n}\n\n.selected-icon {\n  margin-left: var(--space-1);\n}\n\n.ai-topics-section {\n  margin-top: var(--space-3);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.ai-topics-label {\n  font-size: var(--font-size-xs);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.ai-detected-topics {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-1);\n}\n\n.ai-topic-pill {\n  background: var(--color-gray-200);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n  padding: 2px var(--space-2);\n  border-radius: var(--radius-sm);\n}\n\n.ai-suggestions-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--space-3);\n  margin-top: var(--space-4);\n  padding-top: var(--space-3);\n  border-top: 1px solid var(--ui-border);\n}\n\n.ai-action-btn {\n  background: var(--color-gray-200);\n  color: var(--ui-text-primary);\n  border: none;\n  padding: var(--space-2) var(--space-4);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.ai-action-btn:hover {\n  background: var(--color-gray-300);\n}\n\n.ai-action-btn.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n}\n\n.ai-action-btn.primary:hover {\n  background: var(--color-primary-dark);\n}\n\n.ai-action-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ai-action-btn.secondary {\n  background: transparent;\n  color: var(--ui-text-secondary);\n  border: 1px solid var(--ui-border);\n}\n\n.ai-action-btn.secondary:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n/* ==========================================================================\n   ENHANCED DROPDOWN MENU STYLES\n   ========================================================================== */\n\n.dropdown-menu-item {\n  width: 100%;\n  background: none;\n  border: none;\n  padding: var(--space-2) var(--space-3);\n  text-align: left;\n  cursor: pointer;\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  transition: all var(--transition-fast);\n}\n\n.dropdown-menu-item:hover {\n  background: var(--color-gray-100);\n  color: var(--ui-text-primary);\n}\n\n.dropdown-menu-item:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.dropdown-menu-item.delete-action {\n  color: var(--color-danger);\n}\n\n.dropdown-menu-item.delete-action:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: var(--color-danger-hover);\n}\n\n/* ==========================================================================\n   INBOX CARD TAG STYLES\n   ========================================================================== */\n\n.inbox-card-tags {\n  margin-top: var(--space-3);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border-radius: var(--radius-md);\n  border: 1px solid var(--ui-border);\n}\n\n/* ==========================================================================\n   ENHANCED BUTTON STYLES\n   ========================================================================== */\n\n.action-button {\n  background: none;\n  border: 1px solid transparent;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.action-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--color-gray-100);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n  border-radius: inherit;\n}\n\n.action-button:hover {\n  color: var(--ui-text-primary);\n  border-color: var(--ui-border);\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-sm);\n}\n\n.action-button:hover::before {\n  opacity: 1;\n}\n\n.action-button:active {\n  transform: translateY(0);\n  box-shadow: var(--shadow-inner);\n}\n\n.action-button > * {\n  position: relative;\n  z-index: 1;\n}\n\n/* Primary action button variant */\n.action-button.primary {\n  background: var(--color-primary);\n  color: var(--color-white);\n  border-color: var(--color-primary);\n}\n\n.action-button.primary::before {\n  background: var(--color-primary-dark);\n}\n\n.action-button.primary:hover {\n  border-color: var(--color-primary-dark);\n  color: var(--color-white);\n}\n\n/* Danger action button variant */\n.action-button.danger {\n  color: var(--color-danger);\n}\n\n.action-button.danger::before {\n  background: rgba(239, 68, 68, 0.1);\n}\n\n.action-button.danger:hover {\n  color: var(--color-danger-hover);\n  border-color: var(--color-danger);\n}\n\n/* ==========================================================================\n   SHARE MODAL STYLES\n   ========================================================================== */\n\n.share-link-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--color-gray-50);\n  color: var(--ui-text-primary);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.share-link-input:focus {\n  border-color: var(--color-primary);\n  background: var(--ui-element-background);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.share-link-input:read-only {\n  cursor: pointer;\n}\n\n.share-link-input:read-only:hover {\n  background: var(--color-gray-100);\n}\n\n/* ==========================================================================\n   TAB SYNC STYLES\n   ========================================================================== */\n\n.tab-sync-filters {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-4);\n}\n\n.tab-sync-filter-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  margin-bottom: var(--space-3);\n  flex-wrap: wrap;\n}\n\n.tab-sync-filter-row:last-child {\n  margin-bottom: 0;\n}\n\n.tab-sync-filter-checkbox {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  cursor: pointer;\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-primary);\n  -webkit-user-select: none;\n  user-select: none;\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  border: 2px solid var(--ui-border-hover);\n  border-radius: var(--radius-sm);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  position: relative;\n  appearance: none;\n  transition: all var(--transition-fast);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:hover {\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:checked {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n}\n\n.tab-sync-filter-checkbox input[type=\"checkbox\"]:checked::after {\n  content: '✓';\n  position: absolute;\n  top: -1px;\n  left: 2px;\n  color: var(--color-white);\n  font-size: 10px;\n  font-weight: 700;\n}\n\n.tab-sync-domain-filter {\n  flex: 1;\n  min-width: 200px;\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.tab-sync-domain-filter:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.tab-sync-domain-filter::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n/* ==========================================================================\n   AUTH INPUT STYLES\n   ========================================================================== */\n\n.auth-input {\n  width: 100%;\n  padding: var(--space-3) var(--space-4);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  outline: none;\n}\n\n.auth-input:focus {\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.auth-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.auth-input:invalid {\n  border-color: var(--color-danger);\n}\n\n.auth-input:invalid:focus {\n  border-color: var(--color-danger);\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.15);\n}\n\n/* ==========================================================================\n   AI SUGGESTIONS META STYLES\n   ========================================================================== */\n\n.ai-suggestions-meta {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  color: rgba(255, 255, 255, 0.9);\n  font-size: var(--font-size-xs);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  color: var(--ui-text-secondary);\n}\n\n.ai-suggestions.loading .ai-suggestions-meta {\n  display: none;\n}\n\n/* ==========================================================================\n   SMART COLLECTIONS STYLES\n   ========================================================================== */\n\n.smart-collection-card {\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--space-3);\n  transition: all var(--transition-fast);\n  position: relative;\n  overflow: hidden;\n}\n\n.smart-collection-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: linear-gradient(90deg, #8b5cf6, #3b82f6, #10b981);\n  opacity: 0;\n  transition: opacity var(--transition-fast);\n}\n\n.smart-collection-card:hover::before {\n  opacity: 1;\n}\n\n.smart-collection-header {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  width: 100%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  text-align: left;\n  transition: all var(--transition-fast);\n  position: relative;\n}\n\n.smart-collection-header:hover {\n  background: var(--color-gray-50);\n}\n\n.smart-collection-icon {\n  font-size: var(--font-size-lg);\n  min-width: 24px;\n  text-align: center;\n}\n\n.smart-collection-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.smart-collection-name-row {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  margin-bottom: var(--space-1);\n}\n\n.smart-collection-name {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin: 0;\n}\n\n.smart-collection-badges {\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n}\n\n.ai-badge {\n  color: var(--color-primary);\n  opacity: 0.8;\n}\n\n.auto-update-badge {\n  font-size: 10px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  background: var(--color-success);\n  color: white;\n  padding: 2px 6px;\n  border-radius: var(--radius-full);\n  line-height: 1;\n}\n\n.smart-collection-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  margin: 0;\n  line-height: 1.4;\n}\n\n.smart-collection-updated {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n  margin-top: var(--space-1);\n  display: block;\n}\n\n.smart-collection-actions {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n}\n\n.smart-collection-count {\n  font-size: var(--font-size-sm);\n  font-weight: 600;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-100);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  min-width: 32px;\n  text-align: center;\n}\n\n.refresh-button {\n  background: none;\n  border: none;\n  color: var(--ui-text-tertiary);\n  cursor: pointer;\n  padding: var(--space-2);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-fast);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.refresh-button:hover:not(:disabled) {\n  background: var(--color-gray-100);\n  color: var(--ui-text-secondary);\n}\n\n.refresh-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.refresh-button .spinning {\n  animation: spin 1s linear infinite;\n}\n\n.smart-collection-content {\n  border-top: 1px solid var(--ui-border);\n  background: var(--color-gray-50);\n}\n\n.smart-collection-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.smart-collection-loading .loading-spinner {\n  width: 24px;\n  height: 24px;\n  border: 2px solid var(--color-gray-200);\n  border-top: 2px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.empty-smart-collection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n.empty-smart-collection .empty-icon {\n  color: var(--color-primary);\n  opacity: 0.6;\n  margin-bottom: var(--space-3);\n}\n\n.empty-smart-collection p {\n  font-weight: 500;\n  margin-bottom: var(--space-2);\n  color: var(--ui-text-primary);\n}\n\n.empty-subtitle {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n  max-width: 280px;\n  line-height: 1.5;\n}\n\n.smart-collection-links {\n  padding: var(--space-3);\n}\n\n.smart-collection-links .link-card {\n  margin-bottom: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n}\n\n.smart-collection-links .link-card:last-child {\n  margin-bottom: 0;\n}\n\n/* Smart Collections Section Header */\n.smart-collections-section .section-header {\n  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-light));\n  color: white;\n  border: none;\n}\n\n.smart-collections-section .section-header:hover {\n  background: linear-gradient(90deg, var(--color-primary-dark), var(--color-primary));\n}\n\n.smart-collections-section .section-header .count {\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n/* Animation for smart collection expansion */\n.smart-collection-card.expanded {\n  box-shadow: var(--shadow-md);\n}\n\n.smart-collection-card.expanded .smart-collection-header {\n  background: var(--color-gray-50);\n  border-bottom: 1px solid var(--ui-border);\n}\n\n/* Responsive adjustments for smart collections */\n@media (max-width: 480px) {\n  .smart-collection-header {\n    padding: var(--space-3);\n  }\n  \n  .smart-collection-name {\n    font-size: var(--font-size-sm);\n  }\n  \n  .smart-collection-description {\n    font-size: var(--font-size-xs);\n  }\n  \n  .smart-collection-actions {\n    gap: var(--space-1);\n  }\n  \n  .auto-update-badge {\n    font-size: 8px;\n    padding: 1px 4px;\n  }\n}\n\n/* ==========================================================================\n   SAVE PROMPT MODAL STYLES\n   ========================================================================== */\n\n.save-prompt-modal {\n  max-width: 600px;\n  width: 95%;\n  max-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.save-prompt-modal .modal-body {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: var(--space-2);\n}\n\n.save-prompt-modal .modal-footer {\n  flex-shrink: 0;\n  border-top: 1px solid var(--ui-border);\n  padding-top: var(--space-4);\n  margin-top: var(--space-4);\n  background: var(--ui-element-background);\n}\n\n/* Custom scrollbar for save prompt modal */\n.save-prompt-modal .modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-track {\n  background: var(--color-gray-100);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb {\n  background: var(--color-gray-300);\n  border-radius: var(--radius-full);\n}\n\n.save-prompt-modal .modal-body::-webkit-scrollbar-thumb:hover {\n  background: var(--color-gray-400);\n}\n\n.save-prompt-link-preview {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  padding: var(--space-3);\n  margin-bottom: var(--space-4);\n}\n\n.link-preview-title {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n  line-height: 1.4;\n}\n\n.link-preview-url {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-reasons-section {\n  margin-bottom: var(--space-5);\n}\n\n.save-reasons-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.save-reasons-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: var(--space-3);\n}\n\n.save-reason-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  background: var(--ui-element-background);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n  text-align: left;\n  width: 100%;\n}\n\n.save-reason-card:hover {\n  border-color: var(--color-primary);\n  background: var(--color-gray-50);\n}\n\n.save-reason-card.selected {\n  border-color: var(--color-primary);\n  background: hsl(var(--brand-hue) 81% 59% / 8%);\n  box-shadow: 0 0 0 1px var(--color-primary);\n}\n\n.save-reason-icon {\n  color: var(--color-primary);\n  flex-shrink: 0;\n  margin-top: 2px;\n}\n\n.save-reason-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.save-reason-label {\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.save-reason-description {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  line-height: 1.4;\n}\n\n.custom-reason-section {\n  margin-bottom: var(--space-5);\n}\n\n.custom-reason-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.custom-reason-input {\n  width: 100%;\n  padding: var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background: var(--ui-element-background);\n  color: var(--ui-text-primary);\n  transition: all var(--transition-fast);\n  resize: vertical;\n  min-height: 80px;\n  font-family: inherit;\n}\n\n.custom-reason-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px hsl(var(--brand-hue) 81% 59% / 15%);\n}\n\n.custom-reason-input::placeholder {\n  color: var(--ui-text-tertiary);\n}\n\n.suggested-tags-section {\n  margin-bottom: var(--space-5);\n}\n\n.suggested-tags-section h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.suggested-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--space-2);\n}\n\n.suggested-tag {\n  padding: var(--space-2) var(--space-3);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-full);\n  background: var(--ui-element-background);\n  color: var(--ui-text-secondary);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-fast);\n}\n\n.suggested-tag:hover {\n  border-color: var(--color-primary);\n  color: var(--ui-text-primary);\n}\n\n.suggested-tag.selected {\n  background: var(--color-primary);\n  border-color: var(--color-primary);\n  color: white;\n}\n\n.save-prompt-tip {\n  display: flex;\n  align-items: center;\n  gap: var(--space-2);\n  padding: var(--space-3);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n}\n\n.save-prompt-tip svg {\n  color: var(--color-warning);\n  flex-shrink: 0;\n}\n\n/* Responsive adjustments for save prompt modal */\n@media (max-width: 480px) {\n  .save-prompt-modal {\n    max-width: 95%;\n    margin: var(--space-2);\n    max-height: 95vh;\n  }\n  \n  .save-reasons-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .save-reason-card {\n    padding: var(--space-2);\n  }\n  \n  .suggested-tags {\n    justify-content: center;\n  }\n  \n  .save-prompt-modal .modal-body {\n    padding-right: var(--space-1);\n  }\n}\n\n/* ==========================================================================\n   ACTIVITY TRACKER STYLES\n   ========================================================================== */\n\n.activity-tracker-modal {\n  max-width: 650px;\n  width: 95%;\n  max-height: 90vh;\n  overflow-y: auto;\n}\n\n.activity-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  gap: var(--space-3);\n  color: var(--ui-text-secondary);\n}\n\n.activity-loading .loading-spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid var(--color-gray-200);\n  border-top: 3px solid var(--color-primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.streak-section {\n  margin-bottom: var(--space-6);\n}\n\n.streak-card {\n  display: flex;\n  align-items: center;\n  gap: var(--space-4);\n  padding: var(--space-5);\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  border-radius: var(--radius-xl);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.streak-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n  pointer-events: none;\n}\n\n.streak-icon {\n  flex-shrink: 0;\n}\n\n.flame-active {\n  color: #ffd700;\n  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.5));\n}\n\n.flame-inactive {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.streak-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.streak-number {\n  font-size: 2.5rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: var(--space-1);\n}\n\n.streak-label {\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n  opacity: 0.9;\n}\n\n.streak-message {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.4;\n}\n\n.best-streak {\n  position: absolute;\n  top: var(--space-3);\n  right: var(--space-3);\n  display: flex;\n  align-items: center;\n  gap: var(--space-1);\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--space-1) var(--space-2);\n  border-radius: var(--radius-full);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n  gap: var(--space-3);\n  margin-bottom: var(--space-6);\n}\n\n.stat-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: var(--space-4);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  transition: all var(--transition-fast);\n}\n\n.stat-card:hover {\n  border-color: var(--color-primary);\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n}\n\n.stat-icon {\n  color: var(--color-primary);\n  margin-bottom: var(--space-2);\n}\n\n.stat-number {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-secondary);\n  font-weight: 500;\n}\n\n.weekly-activity {\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n  padding: var(--space-4);\n  margin-bottom: var(--space-6);\n  text-align: center;\n}\n\n.weekly-activity h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.weekly-stat {\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  gap: var(--space-2);\n}\n\n.weekly-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--color-primary);\n}\n\n.weekly-label {\n  font-size: var(--font-size-base);\n  color: var(--ui-text-secondary);\n}\n\n.recent-activities {\n  margin-bottom: var(--space-6);\n}\n\n.recent-activities h3 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-3);\n}\n\n.no-activities {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-6);\n  text-align: center;\n  color: var(--ui-text-secondary);\n  background: var(--color-gray-50);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-lg);\n}\n\n.no-activities p {\n  font-weight: 500;\n  margin: var(--space-2) 0;\n  color: var(--ui-text-primary);\n}\n\n.no-activities span {\n  font-size: var(--font-size-sm);\n  color: var(--ui-text-tertiary);\n}\n\n.activities-list {\n  space-y: var(--space-2);\n}\n\n.activity-item {\n  display: flex;\n  align-items: center;\n  gap: var(--space-3);\n  padding: var(--space-3);\n  background: var(--ui-element-background);\n  border: 1px solid var(--ui-border);\n  border-radius: var(--radius-md);\n  transition: all var(--transition-fast);\n}\n\n.activity-item:hover {\n  background: var(--color-gray-50);\n}\n\n.activity-icon {\n  flex-shrink: 0;\n}\n\n.activity-icon.save { color: var(--color-success); }\n.activity-icon.read { color: var(--color-primary); }\n.activity-icon.highlight { color: var(--color-warning); }\n.activity-icon.organize { color: #8b5cf6; }\n.activity-icon.search { color: var(--ui-text-secondary); }\n.activity-icon.default { color: var(--ui-text-tertiary); }\n\n.activity-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.activity-description {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: var(--ui-text-primary);\n  margin-bottom: var(--space-1);\n}\n\n.activity-time {\n  font-size: var(--font-size-xs);\n  color: var(--ui-text-tertiary);\n}\n\n.motivation-section {\n  margin-top: var(--space-4);\n}\n\n.motivation-card {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--space-3);\n  padding: var(--space-4);\n  background: linear-gradient(135deg, var(--color-primary), var(--color-primary-light));\n  border-radius: var(--radius-lg);\n  color: white;\n}\n\n.motivation-content h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--space-2);\n}\n\n.motivation-content p {\n  font-size: var(--font-size-sm);\n  line-height: 1.5;\n  opacity: 0.9;\n}\n\n.activity-error {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-8);\n  text-align: center;\n  color: var(--ui-text-secondary);\n}\n\n/* Responsive adjustments for activity tracker */\n@media (max-width: 480px) {\n  .activity-tracker-modal {\n    max-width: 95%;\n    margin: var(--space-4);\n  }\n  \n  .streak-card {\n    flex-direction: column;\n    text-align: center;\n    gap: var(--space-3);\n  }\n  \n  .best-streak {\n    position: static;\n    margin-top: var(--space-2);\n  }\n  \n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .stat-card {\n    padding: var(--space-3);\n  }\n  \n  .stat-number {\n    font-size: var(--font-size-xl);\n  }\n  \n  .weekly-number {\n    font-size: var(--font-size-2xl);\n  }\n}\n\n/* ==========================================================================\n   DIGEST SETTINGS COMPONENT\n   ========================================================================== */\n\n.digest-settings {\n  padding: 1rem 0;\n}\n\n.digest-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  margin-bottom: 2rem;\n}\n\n.digest-header-content {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.digest-icon {\n  opacity: 0.9;\n}\n\n.digest-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n}\n\n.digest-header p {\n  margin: 0.25rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.digest-config {\n  space-y: 2rem;\n}\n\n.digest-config .setting-group {\n  margin-bottom: 2rem;\n}\n\n.digest-config h4 {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  padding-bottom: 0.5rem;\n}\n\n.digest-actions {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.digest-actions .button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.digest-preview {\n  background: #f8fafc;\n  border-radius: 12px;\n  padding: 1.5rem;\n  margin-top: 1.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.digest-preview h4 {\n  margin: 0 0 1rem;\n  color: #1f2937;\n  font-size: 1.125rem;\n}\n\n.preview-content {\n  space-y: 1rem;\n}\n\n.preview-header {\n  text-align: center;\n  padding: 1rem;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n}\n\n.preview-header h5 {\n  margin: 0;\n  font-size: 1.25rem;\n}\n\n.preview-header p {\n  margin: 0.5rem 0 0;\n  opacity: 0.9;\n  font-size: 0.875rem;\n}\n\n.preview-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.preview-stat {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-stat .stat-number {\n  display: block;\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #667eea;\n  line-height: 1;\n}\n\n.preview-stat .stat-label {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-top: 0.25rem;\n}\n\n.preview-sections {\n  space-y: 1rem;\n}\n\n.preview-section {\n  padding: 1rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.preview-section h6 {\n  margin: 0 0 0.5rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.preview-section p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.preview-ai-summary {\n  margin-top: 0.5rem;\n  padding: 0.75rem;\n  background: #f0f9ff;\n  border-radius: 6px;\n  border-left: 3px solid #0ea5e9;\n}\n\n.preview-ai-summary em {\n  font-size: 0.875rem;\n  color: #0369a1;\n}\n\n.preview-insights {\n  padding: 1rem;\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\n  border-radius: 8px;\n  border: 1px solid #bae6fd;\n  margin-top: 1rem;\n}\n\n.preview-insights h6 {\n  margin: 0 0 0.5rem;\n  color: #0369a1;\n  font-size: 1rem;\n  font-weight: 600;\n}\n\n.preview-insights p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #075985;\n}\n\n.digest-message {\n  padding: 1rem;\n  border-radius: 8px;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.digest-message.success {\n  background: #dcfce7;\n  color: #166534;\n  border: 1px solid #bbf7d0;\n}\n\n.digest-message.error {\n  background: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n} "],sourceRoot:""}]);const A=u},206:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},261:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=r(t(660));class o extends a.default{select(e){let n=!1;const t=(null!=e?e:"*").split("").map(e=>/\s/.test(e)&&!n?"":('"'===e&&(n=!n),e)).join("");return this.url.searchParams.set("select",t),this.headers.Prefer&&(this.headers.Prefer+=","),this.headers.Prefer+="return=representation",this}order(e,{ascending:n=!0,nullsFirst:t,foreignTable:r,referencedTable:a=r}={}){const o=a?`${a}.order`:"order",i=this.url.searchParams.get(o);return this.url.searchParams.set(o,`${i?`${i},`:""}${e}.${n?"asc":"desc"}${void 0===t?"":t?".nullsfirst":".nullslast"}`),this}limit(e,{foreignTable:n,referencedTable:t=n}={}){const r=void 0===t?"limit":`${t}.limit`;return this.url.searchParams.set(r,`${e}`),this}range(e,n,{foreignTable:t,referencedTable:r=t}={}){const a=void 0===r?"offset":`${r}.offset`,o=void 0===r?"limit":`${r}.limit`;return this.url.searchParams.set(a,`${e}`),this.url.searchParams.set(o,""+(n-e+1)),this}abortSignal(e){return this.signal=e,this}single(){return this.headers.Accept="application/vnd.pgrst.object+json",this}maybeSingle(){return"GET"===this.method?this.headers.Accept="application/json":this.headers.Accept="application/vnd.pgrst.object+json",this.isMaybeSingle=!0,this}csv(){return this.headers.Accept="text/csv",this}geojson(){return this.headers.Accept="application/geo+json",this}explain({analyze:e=!1,verbose:n=!1,settings:t=!1,buffers:r=!1,wal:a=!1,format:o="text"}={}){var i;const s=[e?"analyze":null,n?"verbose":null,t?"settings":null,r?"buffers":null,a?"wal":null].filter(Boolean).join("|"),l=null!==(i=this.headers.Accept)&&void 0!==i?i:"application/json";return this.headers.Accept=`application/vnd.pgrst.plan+${o}; for="${l}"; options=${s};`,this}rollback(){var e;return(null!==(e=this.headers.Prefer)&&void 0!==e?e:"").trim().length>0?this.headers.Prefer+=",tx=rollback":this.headers.Prefer="tx=rollback",this}returns(){return this}}n.default=o},279:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.PostgrestError=n.PostgrestBuilder=n.PostgrestTransformBuilder=n.PostgrestFilterBuilder=n.PostgrestQueryBuilder=n.PostgrestClient=void 0;const a=r(t(342));n.PostgrestClient=a.default;const o=r(t(45));n.PostgrestQueryBuilder=o.default;const i=r(t(825));n.PostgrestFilterBuilder=i.default;const s=r(t(261));n.PostgrestTransformBuilder=s.default;const l=r(t(660));n.PostgrestBuilder=l.default;const c=r(t(818));n.PostgrestError=c.default,n.default={PostgrestClient:a.default,PostgrestQueryBuilder:o.default,PostgrestFilterBuilder:i.default,PostgrestTransformBuilder:s.default,PostgrestBuilder:l.default,PostgrestError:c.default}},287:(e,n)=>{var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),A=Symbol.for("react.lazy"),f=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},p=Object.assign,g={};function m(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||h}function v(){}function b(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var y=b.prototype=new v;y.constructor=b,p(y,m.prototype),y.isPureReactComponent=!0;var C=Array.isArray,E=Object.prototype.hasOwnProperty,B={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function w(e,n,r){var a,o={},i=null,s=null;if(null!=n)for(a in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(i=""+n.key),n)E.call(n,a)&&!x.hasOwnProperty(a)&&(o[a]=n[a]);var l=arguments.length-2;if(1===l)o.children=r;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];o.children=c}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===o[a]&&(o[a]=l[a]);return{$$typeof:t,type:e,key:i,ref:s,props:o,_owner:B.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var S=/\/+/g;function j(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return n[e]})}(""+e.key):n.toString(36)}function _(e,n,a,o,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case r:l=!0}}if(l)return i=i(l=e),e=""===o?"."+j(l,0):o,C(i)?(a="",null!=e&&(a=e.replace(S,"$&/")+"/"),_(i,n,a,"",function(e){return e})):null!=i&&(k(i)&&(i=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(S,"$&/")+"/")+e)),n.push(i)),1;if(l=0,o=""===o?".":o+":",C(e))for(var c=0;c<e.length;c++){var u=o+j(s=e[c],c);l+=_(s,n,a,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=_(s=s.value,n,a,u=o+j(s,c++),i);else if("object"===s)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function N(e,n,t){if(null==e)return e;var r=[],a=0;return _(e,r,"","",function(e){return n.call(t,e,a++)}),r}function z(e){if(-1===e._status){var n=e._result;(n=n()).then(function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)},function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)}),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var T={current:null},I={transition:null},O={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:I,ReactCurrentOwner:B};function P(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:N,forEach:function(e,n,t){N(e,function(){n.apply(this,arguments)},t)},count:function(e){var n=0;return N(e,function(){n++}),n},toArray:function(e){return N(e,function(e){return e})||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=m,n.Fragment=a,n.Profiler=i,n.PureComponent=b,n.StrictMode=o,n.Suspense=u,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,n.act=P,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=p({},e.props),o=e.key,i=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,s=B.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in n)E.call(n,c)&&!x.hasOwnProperty(c)&&(a[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){l=Array(c);for(var u=0;u<c;u++)l[u]=arguments[u+2];a.children=l}return{$$typeof:t,type:e.type,key:o,ref:i,props:a,_owner:s}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=w,n.createFactory=function(e){var n=w.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=k,n.lazy=function(e){return{$$typeof:A,_payload:{_status:-1,_result:e},_init:z}},n.memo=function(e,n){return{$$typeof:d,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=I.transition;I.transition={};try{e()}finally{I.transition=n}},n.unstable_act=P,n.useCallback=function(e,n){return T.current.useCallback(e,n)},n.useContext=function(e){return T.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return T.current.useDeferredValue(e)},n.useEffect=function(e,n){return T.current.useEffect(e,n)},n.useId=function(){return T.current.useId()},n.useImperativeHandle=function(e,n,t){return T.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return T.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return T.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return T.current.useMemo(e,n)},n.useReducer=function(e,n,t){return T.current.useReducer(e,n,t)},n.useRef=function(e){return T.current.useRef(e)},n.useState=function(e){return T.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return T.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return T.current.useTransition()},n.version="18.3.1"},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t}).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),n.push(u))}},n}},338:(e,n,t)=>{var r=t(961);n.H=r.createRoot,r.hydrateRoot},342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=r(t(45)),o=r(t(825)),i=t(530);class s{constructor(e,{headers:n={},schema:t,fetch:r}={}){this.url=e,this.headers=Object.assign(Object.assign({},i.DEFAULT_HEADERS),n),this.schemaName=t,this.fetch=r}from(e){const n=new URL(`${this.url}/${e}`);return new a.default(n,{headers:Object.assign({},this.headers),schema:this.schemaName,fetch:this.fetch})}schema(e){return new s(this.url,{headers:this.headers,schema:e,fetch:this.fetch})}rpc(e,n={},{head:t=!1,get:r=!1,count:a}={}){let i;const s=new URL(`${this.url}/rpc/${e}`);let l;t||r?(i=t?"HEAD":"GET",Object.entries(n).filter(([e,n])=>void 0!==n).map(([e,n])=>[e,Array.isArray(n)?`{${n.join(",")}}`:`${n}`]).forEach(([e,n])=>{s.searchParams.append(e,n)})):(i="POST",l=n);const c=Object.assign({},this.headers);return a&&(c.Prefer=`count=${a}`),new o.default({method:i,url:s,headers:c,schema:this.schemaName,body:l,fetch:this.fetch,allowEmpty:!1})}}n.default=s},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},417:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},463:(e,n)=>{function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<o(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var s=2*(r+1)-1,l=e[s],c=s+1,u=e[c];if(0>o(l,t))c<a&&0>o(u,l)?(e[r]=u,e[c]=t,r=c):(e[r]=l,e[s]=t,r=s);else{if(!(c<a&&0>o(u,t)))break e;e[r]=u,e[c]=t,r=c}}}return n}function o(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var s=Date,l=s.now();n.unstable_now=function(){return s.now()-l}}var c=[],u=[],d=1,A=null,f=3,h=!1,p=!1,g=!1,m="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function y(e){for(var n=r(u);null!==n;){if(null===n.callback)a(u);else{if(!(n.startTime<=e))break;a(u),n.sortIndex=n.expirationTime,t(c,n)}n=r(u)}}function C(e){if(g=!1,y(e),!p)if(null!==r(c))p=!0,I(E);else{var n=r(u);null!==n&&O(C,n.startTime-e)}}function E(e,t){p=!1,g&&(g=!1,v(k),k=-1),h=!0;var o=f;try{for(y(t),A=r(c);null!==A&&(!(A.expirationTime>t)||e&&!_());){var i=A.callback;if("function"==typeof i){A.callback=null,f=A.priorityLevel;var s=i(A.expirationTime<=t);t=n.unstable_now(),"function"==typeof s?A.callback=s:A===r(c)&&a(c),y(t)}else a(c);A=r(c)}if(null!==A)var l=!0;else{var d=r(u);null!==d&&O(C,d.startTime-t),l=!1}return l}finally{A=null,f=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var B,x=!1,w=null,k=-1,S=5,j=-1;function _(){return!(n.unstable_now()-j<S)}function N(){if(null!==w){var e=n.unstable_now();j=e;var t=!0;try{t=w(!0,e)}finally{t?B():(x=!1,w=null)}}else x=!1}if("function"==typeof b)B=function(){b(N)};else if("undefined"!=typeof MessageChannel){var z=new MessageChannel,T=z.port2;z.port1.onmessage=N,B=function(){T.postMessage(null)}}else B=function(){m(N,0)};function I(e){w=e,x||(x=!0,B())}function O(e,t){k=m(function(){e(n.unstable_now())},t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){p||h||(p=!0,I(E))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):S=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return f},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(f){case 1:case 2:case 3:var n=3;break;default:n=f}var t=f;f=n;try{return e()}finally{f=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=f;f=e;try{return n()}finally{f=t}},n.unstable_scheduleCallback=function(e,a,o){var i=n.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:o,expirationTime:s=o+s,sortIndex:-1},o>i?(e.sortIndex=o,t(u,e),null===r(c)&&e===r(u)&&(g?(v(k),k=-1):g=!0,O(C,o-i))):(e.sortIndex=s,t(c,e),p||h||(p=!0,I(E))),e},n.unstable_shouldYield=_,n.unstable_wrapCallback=function(e){var n=f;return function(){var t=f;f=n;try{return e.apply(this,arguments)}finally{f=t}}}},508:(e,n,t)=>{function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function a(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||i(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||i(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,n){if(e){if("string"==typeof e)return s(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?s(e,n):void 0}}function s(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function l(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,u=Object.create(l.prototype);return c(u,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),u}var i={};function s(){}function u(){}function d(){}n=Object.getPrototypeOf;var A=[][r]?n(n([][r]())):(c(n={},r,function(){return this}),n),f=d.prototype=s.prototype=Object.create(A);function h(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,c(e,a,"GeneratorFunction")),e.prototype=Object.create(f),e}return u.prototype=d,c(f,"constructor",d),c(d,"constructor",u),u.displayName="GeneratorFunction",c(d,a,"GeneratorFunction"),c(f),c(f,a,"Generator"),c(f,r,function(){return this}),c(f,"toString",function(){return"[object Generator]"}),(l=function(){return{w:o,m:h}})()}function c(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}c=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){c(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},c(e,n,t,r)}function u(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function d(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){u(o,r,a,i,s,"next",e)}function s(e){u(o,r,a,i,s,"throw",e)}i(void 0)})}}function A(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,f(r.key),r)}}function f(e){var n=function(e){if("object"!=r(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=r(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==r(n)?n:n+""}t.r(n),t.d(n,{AIService:()=>h,aiService:()=>p});var h=function(){return e=function e(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.apiKey=n.apiKey||"",this.model=n.model||"gpt-3.5-turbo"},n=[{key:"analyzeContent",value:(u=d(l().m(function e(n,t,r){var a,o;return l().w(function(e){for(;;)switch(e.n){case 0:if(this.apiKey){e.n=1;break}return e.a(2,this.generateRuleBasedAnalysis(n,t,r));case 1:return e.p=1,e.n=2,this.callOpenAIForAnalysis(n,t,r);case 2:return a=e.v,e.a(2,a);case 3:return e.p=3,o=e.v,console.error("AI analysis failed, falling back to rule-based:",o),e.a(2,this.generateRuleBasedAnalysis(n,t,r))}},e,this,[[1,3]])})),function(e,n,t){return u.apply(this,arguments)})},{key:"generateSummary",value:(c=d(l().m(function e(n,t,r){var a,o;return l().w(function(e){for(;;)switch(e.n){case 0:if(this.apiKey){e.n=1;break}return e.a(2,this.generatePlaceholderSummary(n,t,r));case 1:return e.p=1,e.n=2,this.callOpenAI(n,t,r);case 2:return a=e.v,e.a(2,a);case 3:return e.p=3,o=e.v,console.error("AI summary generation failed:",o),e.a(2,this.generatePlaceholderSummary(n,t,r))}},e,this,[[1,3]])})),function(e,n,t){return c.apply(this,arguments)})},{key:"generateRuleBasedAnalysis",value:function(e,n,t){var r=new URL(t).hostname,a=e.toLowerCase(),o=n.toLowerCase(),i="".concat(o," ").concat(a),s=this.detectContentType(r,n,e),l=this.generateRuleBasedTags(i,r,s),c=this.generateRuleBasedCategories(i,r,s),u=this.extractTopics(i),d=this.estimateComplexity(e),A=this.estimateReadingTime(e);return{summary:this.generatePlaceholderSummary(e,n,t),tagSuggestions:l,categorySuggestions:c,contentType:s,topics:u,complexity:d,readingTime:A}}},{key:"detectContentType",value:function(e,n,t){var r=n.toLowerCase(),a=t.toLowerCase();return e.includes("youtube.com")||e.includes("vimeo.com")||e.includes("twitch.tv")?"video":e.includes("docs.")||r.includes("documentation")||a.includes("api reference")||a.includes("getting started")?"documentation":r.includes("tutorial")||r.includes("how to")||r.includes("guide")||a.includes("step by step")?"tutorial":e.includes("news")||e.includes("cnn.com")||e.includes("bbc.com")||e.includes("techcrunch.com")||e.includes("reuters.com")?"news":e.includes("medium.com")||e.includes("blog")||r.includes("thoughts on")||a.includes("published")?"blog":e.includes("arxiv.org")||e.includes("scholar.google")||r.includes("research")||a.includes("abstract")?"research":e.includes("github.com")||r.includes("tool")||r.includes("app")||a.includes("download")?"tool":r.includes("reference")||r.includes("cheat sheet")||a.includes("quick reference")?"reference":"article"}},{key:"generateRuleBasedTags",value:function(e,n,t){for(var r=[],i=0,s=Object.entries({"github.com":[{tag:"github",confidence:.9,reason:"GitHub repository"}],"stackoverflow.com":[{tag:"programming",confidence:.8,reason:"Stack Overflow content"}],"medium.com":[{tag:"blog",confidence:.7,reason:"Medium article"}],"youtube.com":[{tag:"video",confidence:.9,reason:"YouTube video"}],"linkedin.com":[{tag:"career",confidence:.7,reason:"LinkedIn content"}]});i<s.length;i++){var l=o(s[i],2),c=l[0],u=l[1];n.includes(c)&&r.push.apply(r,a(u))}for(var d=0,A=Object.entries({javascript:["javascript","js","node.js","react","vue","angular"],python:["python","django","flask","pandas","numpy"],"web-development":["html","css","frontend","backend","full-stack"],"machine-learning":["ml","ai","neural network","deep learning","tensorflow"],"data-science":["data science","analytics","visualization","statistics"],mobile:["android","ios","react native","flutter","mobile app"],devops:["docker","kubernetes","aws","cloud","deployment"],database:["sql","postgresql","mongodb","database design"],security:["cybersecurity","encryption","vulnerability","penetration testing"]});d<A.length;d++){var f=o(A[d],2),h=f[0],p=f[1].filter(function(n){return e.includes(n)}).length;if(p>0){var g=Math.min(.9,.4+.1*p);r.push({tag:h,confidence:g,reason:"Found ".concat(p," related keyword(s)")})}}r.push({tag:t||"general",confidence:.6,reason:"Detected as ".concat(t," content")}),(e.includes("beginner")||e.includes("getting started"))&&r.push({tag:"beginner",confidence:.7,reason:"Beginner-friendly content"}),(e.includes("advanced")||e.includes("expert"))&&r.push({tag:"advanced",confidence:.7,reason:"Advanced content"});for(var m=0,v=["productivity","business","startup","marketing","sales","finance"];m<v.length;m++){var b=v[m];e.includes(b)&&r.push({tag:b,confidence:.6,reason:"Content related to ".concat(b)})}return r.filter(function(e,n,t){return t.findIndex(function(n){return n.tag===e.tag})===n}).sort(function(e,n){return n.confidence-e.confidence}).slice(0,8)}},{key:"generateRuleBasedCategories",value:function(e,n,t){var r=[];return(e.includes("work")||e.includes("job")||e.includes("career")||e.includes("professional")||e.includes("business"))&&r.push({category:"work",confidence:.8,reason:"Contains work-related content"}),("tutorial"===t||"documentation"===t||e.includes("learn")||e.includes("education")||e.includes("course"))&&r.push({category:"learning",confidence:.9,reason:"Educational content detected"}),(e.includes("hobby")||e.includes("personal")||e.includes("lifestyle")||e.includes("entertainment"))&&r.push({category:"personal",confidence:.7,reason:"Personal interest content"}),(n.includes("github.com")||n.includes("stackoverflow.com")||e.includes("programming")||e.includes("development"))&&r.push({category:"work",confidence:.8,reason:"Technical/development content"}),("news"===t||e.includes("breaking")||e.includes("update"))&&r.push({category:"general",confidence:.7,reason:"News or current events"}),0===r.length&&r.push({category:"general",confidence:.5,reason:"General content"}),r.sort(function(e,n){return n.confidence-e.confidence})}},{key:"extractTopics",value:function(e){return["artificial intelligence","machine learning","web development","mobile development","data science","cybersecurity","cloud computing","blockchain","cryptocurrency","startup","productivity","leadership","design","marketing","sales","programming","software engineering","devops","database","frontend","backend","full-stack","api","microservices","architecture"].filter(function(n){return e.includes(n)}).slice(0,5)}},{key:"estimateComplexity",value:function(e){var n=e.toLowerCase(),t=["algorithm","architecture","optimization","scalability","performance"].filter(function(e){return n.includes(e)}).length,r=["introduction","basics","getting started","beginner","simple"].filter(function(e){return n.includes(e)}).length,a=["advanced","expert","complex","sophisticated","enterprise"].filter(function(e){return n.includes(e)}).length;return r>0||0===t?"beginner":a>1||t>3?"advanced":"intermediate"}},{key:"estimateReadingTime",value:function(e){var n=e.split(/\s+/).length;return Math.max(1,Math.round(n/200))}},{key:"callOpenAIForAnalysis",value:(s=d(l().m(function e(n,t,r){var a,o,i,s,c,u,d;return l().w(function(e){for(;;)switch(e.n){case 0:return o='Analyze this web content and provide a JSON response with the following structure:\n\n{\n  "summary": "1-2 sentence summary",\n  "tagSuggestions": [\n    {"tag": "tag-name", "confidence": 0.8, "reason": "why this tag fits"}\n  ],\n  "categorySuggestions": [\n    {"category": "work|learning|personal|general", "confidence": 0.9, "reason": "explanation"}\n  ],\n  "contentType": "article|tutorial|documentation|video|tool|reference|blog|news|research|other",\n  "topics": ["main", "topics", "covered"],\n  "complexity": "beginner|intermediate|advanced",\n  "readingTime": 5\n}\n\nContent to analyze:\nTitle: '.concat(t,"\nURL: ").concat(r,"\nContent: ").concat(n.substring(0,2e3),"...\n\nFocus on:\n- Relevant, specific tags (technology, skills, domains)\n- Appropriate category (work/learning/personal/general)\n- Content type and complexity\n- Main topics and themes"),e.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:o}],max_tokens:500,temperature:.3})});case 1:return i=e.v,e.n=2,i.json();case 2:if(s=e.v,!(c=null===(a=s.choices[0])||void 0===a||null===(a=a.message)||void 0===a?void 0:a.content)){e.n=5;break}return e.p=3,u=JSON.parse(c),e.a(2,{summary:u.summary,tagSuggestions:u.tagSuggestions||[],categorySuggestions:u.categorySuggestions||[],contentType:u.contentType,topics:u.topics||[],complexity:u.complexity,readingTime:u.readingTime});case 4:e.p=4,d=e.v,console.error("Failed to parse AI response:",d);case 5:return e.a(2,this.generateRuleBasedAnalysis(n,t,r))}},e,this,[[3,4]])})),function(e,n,t){return s.apply(this,arguments)})},{key:"callOpenAI",value:(i=d(l().m(function e(n,t,r){var a,o,i,s;return l().w(function(e){for(;;)switch(e.n){case 0:return o="Summarize this web page in 1-2 sentences:\nTitle: ".concat(t,"\nURL: ").concat(r,"\nContent: ").concat(n.substring(0,1e3),"..."),e.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:o}],max_tokens:100,temperature:.3})});case 1:return i=e.v,e.n=2,i.json();case 2:return s=e.v,e.a(2,(null===(a=s.choices[0])||void 0===a||null===(a=a.message)||void 0===a?void 0:a.content)||this.generatePlaceholderSummary(n,t,r))}},e,this)})),function(e,n,t){return i.apply(this,arguments)})},{key:"generatePlaceholderSummary",value:function(e,n,t){var r=new URL(t).hostname,a=e.length;return r.includes("github.com")?"GitHub repository or project page: ".concat(n):r.includes("stackoverflow.com")?"Stack Overflow discussion about programming or technical topics":r.includes("medium.com")||r.includes("blog")?"Blog article: ".concat(n.substring(0,50),"..."):r.includes("youtube.com")?"Video content: ".concat(n):r.includes("news")||r.includes("article")?"News article from ".concat(r):"Web page from ".concat(r," (").concat(Math.round(a/100)," paragraphs)")}},{key:"updateApiKey",value:function(e){this.apiKey=e}},{key:"generateSmartCollectionSuggestions",value:(r=d(l().m(function e(n){var t,r,a,i,s,c,u,d,A,f,h,p,g,m,v;return l().w(function(e){for(;;)if(0===e.n){for(t=this.analyzeDomains(n),r=this.analyzeTopics(n),a=this.analyzeTimePatterns(n),i=[],s=new Date,c=0,u=Object.entries(t);c<u.length;c++)d=o(u[c],2),A=d[0],(f=d[1])>=3&&i.push({id:"domain-".concat(A.replace(/\./g,"-")),name:"📌 ".concat(this.getDomainDisplayName(A)),description:"Links from ".concat(A," (").concat(f," links)"),query:"domain LIKE '%".concat(A,"%'"),isSystem:!0,autoUpdate:!0,icon:this.getDomainIcon(A),color:this.getDomainColor(A),filters:{domains:[A]},createdAt:s,updatedAt:s});for(h=0,p=Object.entries(r);h<p.length;h++)g=o(p[h],2),m=g[0],(v=g[1])>=2&&i.push({id:"topic-".concat(m.toLowerCase().replace(/\s+/g,"-")),name:"🎯 ".concat(m),description:"Content related to ".concat(m.toLowerCase()," (").concat(v," links)"),query:"title ILIKE '%".concat(m,"%' OR user_note ILIKE '%").concat(m,"%' OR ai_summary ILIKE '%").concat(m,"%'"),isSystem:!0,autoUpdate:!0,icon:this.getTopicIcon(m),color:this.getTopicColor(m),createdAt:s,updatedAt:s});return a.recentActivity>5&&i.push({id:"recent-activity",name:"🔥 Recent Activity",description:"Links saved in the last 3 days",query:"created_at >= now() - interval '3 days'",isSystem:!0,autoUpdate:!0,icon:"🔥",color:"#ef4444",filters:{dateRange:{start:new Date(Date.now()-2592e5)}},createdAt:s,updatedAt:s}),e.a(2,i.slice(0,8))}},e,this)})),function(e){return r.apply(this,arguments)})},{key:"analyzeDomains",value:function(e){var n={};return e.forEach(function(e){var t=e.domain;n[t]=(n[t]||0)+1}),Object.fromEntries(Object.entries(n).sort(function(e,n){var t=o(e,2)[1];return o(n,2)[1]-t}).slice(0,10))}},{key:"analyzeTopics",value:function(e){var n={},t=["React","JavaScript","TypeScript","Python","Node.js","API","Database","Machine Learning","AI","Design","UI/UX","CSS","HTML","Backend","Frontend","DevOps","Cloud","AWS","Docker","Kubernetes","Git","Testing","Security","Performance","Mobile","iOS","Android","Tutorial","Guide","Documentation","Tool","Framework","Library"];return e.forEach(function(e){var r="".concat(e.title," ").concat(e.userNote," ").concat(e.aiSummary||"").toLowerCase();t.forEach(function(e){r.includes(e.toLowerCase())&&(n[e]=(n[e]||0)+1)})}),Object.fromEntries(Object.entries(n).sort(function(e,n){var t=o(e,2)[1];return o(n,2)[1]-t}).slice(0,8))}},{key:"analyzeTimePatterns",value:function(e){var n=new Date,t=new Date(n.getTime()-2592e5),r=e.filter(function(e){return e.createdAt>=t}).length,a={};return e.forEach(function(e){var n=e.createdAt.toLocaleDateString("en-US",{weekday:"long"});a[n]=(a[n]||0)+1}),{recentActivity:r,weeklyPattern:a}}},{key:"getDomainDisplayName",value:function(e){return{"github.com":"GitHub","stackoverflow.com":"Stack Overflow","medium.com":"Medium","youtube.com":"YouTube","twitter.com":"Twitter","linkedin.com":"LinkedIn","reddit.com":"Reddit","dev.to":"Dev.to","hashnode.com":"Hashnode","docs.google.com":"Google Docs"}[e]||e.replace("www.","").split(".")[0]}},{key:"getDomainIcon",value:function(e){return{"github.com":"⭐","stackoverflow.com":"💬","medium.com":"✍️","youtube.com":"📺","twitter.com":"🐦","linkedin.com":"💼","reddit.com":"🤖","dev.to":"👨‍💻","hashnode.com":"📝","docs.google.com":"📄"}[e]||"🌐"}},{key:"getDomainColor",value:function(e){return{"github.com":"#24292e","stackoverflow.com":"#f48024","medium.com":"#00ab6c","youtube.com":"#ff0000","twitter.com":"#1da1f2","linkedin.com":"#0077b5","reddit.com":"#ff4500","dev.to":"#0a0a0a","hashnode.com":"#2962ff","docs.google.com":"#4285f4"}[e]||"#6b7280"}},{key:"getTopicIcon",value:function(e){return{React:"⚛️",JavaScript:"🟨",TypeScript:"🔷",Python:"🐍","Node.js":"🟢",API:"🔌",Database:"🗄️","Machine Learning":"🤖",AI:"🧠",Design:"🎨","UI/UX":"✨",CSS:"🎨",HTML:"📄",Backend:"⚙️",Frontend:"🖥️",DevOps:"🔧",Cloud:"☁️",AWS:"🟠",Docker:"🐳",Security:"🔒",Mobile:"📱",Tutorial:"📚",Tool:"🛠️"}[e]||"🏷️"}},{key:"getTopicColor",value:function(e){return{React:"#61dafb",JavaScript:"#f7df1e",TypeScript:"#3178c6",Python:"#3776ab","Node.js":"#339933",API:"#ff6b6b",Database:"#336791","Machine Learning":"#ff9500",AI:"#8b5cf6",Design:"#e91e63","UI/UX":"#9c27b0",CSS:"#1572b6",HTML:"#e34f26",Backend:"#4caf50",Frontend:"#2196f3",DevOps:"#ff5722",Cloud:"#607d8b",Security:"#795548",Mobile:"#00bcd4",Tutorial:"#ff9800",Tool:"#607d8b"}[e]||"#6b7280"}},{key:"analyzeForSmartCollections",value:(t=d(l().m(function e(n){var t,r,a,o,i,s,c,u;return l().w(function(e){for(;;)if(0===e.n)return t="".concat(n.title," ").concat(n.userNote," ").concat(n.aiSummary||"").toLowerCase(),r=n.domain,a=[],o=[],i={},(s=["ai","artificial intelligence","machine learning","ml","neural","deep learning"].filter(function(e){return t.includes(e)}).length)>0&&(a.push("ai-related"),o.push("AI"),i.ai=s),(c=["tutorial","how to","guide","walkthrough","step by step"].filter(function(e){return t.includes(e)}).length)>0&&(a.push("tutorials"),o.push("tutorial"),i.tutorial=c),r.includes("github.com")&&(a.push("github-repos"),o.push("github","repository"),i.github=1),(u=(Date.now()-n.createdAt.getTime())/864e5)<=7&&(a.push("recent-reads"),i.recent=Math.max(0,7-u)/7),n.userNote&&""!==n.userNote.trim()||(a.push("unread"),i.unread=1),e.a(2,{matchingCollections:a,suggestedTags:o,contentSignals:i})},e)})),function(e){return t.apply(this,arguments)})}],n&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n,t,r,i,s,c,u}(),p=new h},519:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.version=void 0,n.version="0.0.0-automated"},530:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.DEFAULT_HEADERS=void 0;const r=t(519);n.DEFAULT_HEADERS={"X-Client-Info":`postgrest-js/${r.version}`}},540:(e,n,t)=>{e.exports=t(287)},551:(e,n,t)=>{var r=t(540),a=t(982);function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function l(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(s[e]=n,e=0;e<n.length;e++)i.add(n[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,A=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},h={};function p(e,n,t,r,a,o,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=o,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){g[e]=new p(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var n=e[0];g[n]=new p(n,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){g[e]=new p(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){g[e]=new p(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){g[e]=new p(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){g[e]=new p(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){g[e]=new p(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){g[e]=new p(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){g[e]=new p(e,5,!1,e.toLowerCase(),null,!1,!1)});var m=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,n,t,r){var a=g.hasOwnProperty(n)?g[n]:null;(null!==a?0!==a.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!d.call(h,e)||!d.call(f,e)&&(A.test(e)?h[e]=!0:(f[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var n=e.replace(m,v);g[n]=new p(n,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var n=e.replace(m,v);g[n]=new p(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var n=e.replace(m,v);g[n]=new p(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){g[e]=new p(e,1,!1,e.toLowerCase(),null,!1,!1)}),g.xlinkHref=new p("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){g[e]=new p(e,1,!1,e.toLowerCase(),null,!0,!0)});var y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=Symbol.for("react.element"),E=Symbol.for("react.portal"),B=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),w=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),S=Symbol.for("react.context"),j=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),z=Symbol.for("react.memo"),T=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var I=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function P(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=O&&e[O]||e["@@iterator"])?e:null}var D,L=Object.assign;function R(e){if(void 0===D)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);D=n&&n[1]||""}return"\n"+D+e}var U=!1;function M(e,n){if(!e||U)return"";U=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var a=n.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,s=o.length-1;1<=i&&0<=s&&a[i]!==o[s];)s--;for(;1<=i&&0<=s;i--,s--)if(a[i]!==o[s]){if(1!==i||1!==s)do{if(i--,0>--s||a[i]!==o[s]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=s);break}}}finally{U=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?R(e):""}function F(e){switch(e.tag){case 5:return R(e.type);case 16:return R("Lazy");case 13:return R("Suspense");case 19:return R("SuspenseList");case 0:case 2:case 15:return M(e.type,!1);case 11:return M(e.type.render,!1);case 1:return M(e.type,!0);default:return""}}function $(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case B:return"Fragment";case E:return"Portal";case w:return"Profiler";case x:return"StrictMode";case _:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case j:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case z:return null!==(n=e.displayName||null)?n:$(e.type)||"Memo";case T:n=e._payload,e=e._init;try{return $(e(n))}catch(e){}}return null}function Y(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return $(n);case 8:return n===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function q(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function H(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function G(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function V(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function K(e,n){var t=n.checked;return L({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function Z(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=q(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Q(e,n){null!=(n=n.checked)&&b(e,"checked",n,!1)}function J(e,n){Q(e,n);var t=q(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,q(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function X(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&V(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+q(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(o(91));return L({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(o(92));if(ne(t)){if(1<t.length)throw Error(o(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:q(t)}}function oe(e,n){var t=q(n.value),r=q(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ie(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?se(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,ue,de=(ue=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction(function(){return ue(e,n)})}:ue);function Ae(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function pe(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||fe.hasOwnProperty(e)&&fe[e]?(""+n).trim():n+"px"}function ge(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=pe(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(fe).forEach(function(e){he.forEach(function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),fe[n]=fe[e]})});var me=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,n){if(n){if(me[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(o(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(o(62))}}function be(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,Be=null,xe=null;function we(e){if(e=ba(e)){if("function"!=typeof Ee)throw Error(o(280));var n=e.stateNode;n&&(n=Ca(n),Ee(e.stateNode,e.type,n))}}function ke(e){Be?xe?xe.push(e):xe=[e]:Be=e}function Se(){if(Be){var e=Be,n=xe;if(xe=Be=null,we(e),n)for(e=0;e<n.length;e++)we(n[e])}}function je(e,n){return e(n)}function _e(){}var Ne=!1;function ze(e,n,t){if(Ne)return e(n,t);Ne=!0;try{return je(e,n,t)}finally{Ne=!1,(null!==Be||null!==xe)&&(_e(),Se())}}function Te(e,n){var t=e.stateNode;if(null===t)return null;var r=Ca(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(o(231,n,typeof t));return t}var Ie=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){Ie=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){Ie=!1}function Pe(e,n,t,r,a,o,i,s,l){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(e){this.onError(e)}}var De=!1,Le=null,Re=!1,Ue=null,Me={onError:function(e){De=!0,Le=e}};function Fe(e,n,t,r,a,o,i,s,l){De=!1,Le=null,Pe.apply(Me,arguments)}function $e(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{!!(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ye(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function qe(e){if($e(e)!==e)throw Error(o(188))}function We(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=$e(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){t=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===t)return qe(a),e;if(i===r)return qe(a),n;i=i.sibling}throw Error(o(188))}if(t.return!==r.return)t=a,r=i;else{for(var s=!1,l=a.child;l;){if(l===t){s=!0,t=a,r=i;break}if(l===r){s=!0,r=a,t=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===t){s=!0,t=i,r=a;break}if(l===r){s=!0,r=i,t=a;break}l=l.sibling}if(!s)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}(e))?He(e):null}function He(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=He(e);if(null!==n)return n;e=e.sibling}return null}var Ge=a.unstable_scheduleCallback,Ve=a.unstable_cancelCallback,Ke=a.unstable_shouldYield,Ze=a.unstable_requestPaint,Qe=a.unstable_now,Je=a.unstable_getCurrentPriorityLevel,Xe=a.unstable_ImmediatePriority,en=a.unstable_UserBlockingPriority,nn=a.unstable_NormalPriority,tn=a.unstable_LowPriority,rn=a.unstable_IdlePriority,an=null,on=null,sn=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ln(e)/cn|0)|0},ln=Math.log,cn=Math.LN2,un=64,dn=4194304;function An(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function fn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&t;if(0!==i){var s=i&~a;0!==s?r=An(s):0!==(o&=i)&&(r=An(o))}else 0!==(i=t&~a)?r=An(i):0!==o&&(r=An(o));if(0===r)return 0;if(0!==n&&n!==r&&0===(n&a)&&((a=r&-r)>=(o=n&-n)||16===a&&4194240&o))return n;if(4&r&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-sn(n)),r|=e[t],n&=~a;return r}function hn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function pn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gn(){var e=un;return!(4194240&(un<<=1))&&(un=64),e}function mn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function vn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-sn(n)]=t}function bn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-sn(t),a=1<<r;a&n|e[r]&n&&(e[r]|=n),t&=~a}}var yn=0;function Cn(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var En,Bn,xn,wn,kn,Sn=!1,jn=[],_n=null,Nn=null,zn=null,Tn=new Map,In=new Map,On=[],Pn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Dn(e,n){switch(e){case"focusin":case"focusout":_n=null;break;case"dragenter":case"dragleave":Nn=null;break;case"mouseover":case"mouseout":zn=null;break;case"pointerover":case"pointerout":Tn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":In.delete(n.pointerId)}}function Ln(e,n,t,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==n&&null!==(n=ba(n))&&Bn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function Rn(e){var n=va(e.target);if(null!==n){var t=$e(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ye(t)))return e.blockedOn=n,void kn(e.priority,function(){xn(t)})}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Un(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Zn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=ba(t))&&Bn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);ye=r,t.target.dispatchEvent(r),ye=null,n.shift()}return!0}function Mn(e,n,t){Un(e)&&t.delete(n)}function Fn(){Sn=!1,null!==_n&&Un(_n)&&(_n=null),null!==Nn&&Un(Nn)&&(Nn=null),null!==zn&&Un(zn)&&(zn=null),Tn.forEach(Mn),In.forEach(Mn)}function $n(e,n){e.blockedOn===n&&(e.blockedOn=null,Sn||(Sn=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Fn)))}function Yn(e){function n(n){return $n(n,e)}if(0<jn.length){$n(jn[0],e);for(var t=1;t<jn.length;t++){var r=jn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==_n&&$n(_n,e),null!==Nn&&$n(Nn,e),null!==zn&&$n(zn,e),Tn.forEach(n),In.forEach(n),t=0;t<On.length;t++)(r=On[t]).blockedOn===e&&(r.blockedOn=null);for(;0<On.length&&null===(t=On[0]).blockedOn;)Rn(t),null===t.blockedOn&&On.shift()}var qn=y.ReactCurrentBatchConfig,Wn=!0;function Hn(e,n,t,r){var a=yn,o=qn.transition;qn.transition=null;try{yn=1,Vn(e,n,t,r)}finally{yn=a,qn.transition=o}}function Gn(e,n,t,r){var a=yn,o=qn.transition;qn.transition=null;try{yn=4,Vn(e,n,t,r)}finally{yn=a,qn.transition=o}}function Vn(e,n,t,r){if(Wn){var a=Zn(e,n,t,r);if(null===a)qr(e,n,r,Kn,t),Dn(e,r);else if(function(e,n,t,r,a){switch(n){case"focusin":return _n=Ln(_n,e,n,t,r,a),!0;case"dragenter":return Nn=Ln(Nn,e,n,t,r,a),!0;case"mouseover":return zn=Ln(zn,e,n,t,r,a),!0;case"pointerover":var o=a.pointerId;return Tn.set(o,Ln(Tn.get(o)||null,e,n,t,r,a)),!0;case"gotpointercapture":return o=a.pointerId,In.set(o,Ln(In.get(o)||null,e,n,t,r,a)),!0}return!1}(a,e,n,t,r))r.stopPropagation();else if(Dn(e,r),4&n&&-1<Pn.indexOf(e)){for(;null!==a;){var o=ba(a);if(null!==o&&En(o),null===(o=Zn(e,n,t,r))&&qr(e,n,r,Kn,t),o===a)break;a=o}null!==a&&r.stopPropagation()}else qr(e,n,r,null,t)}}var Kn=null;function Zn(e,n,t,r){if(Kn=null,null!==(e=va(e=Ce(r))))if(null===(n=$e(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ye(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Kn=e,null}function Qn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Xe:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var Jn=null,Xn=null,et=null;function nt(){if(et)return et;var e,n,t=Xn,r=t.length,a="value"in Jn?Jn.value:Jn.textContent,o=a.length;for(e=0;e<r&&t[e]===a[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===a[o-n];n++);return et=a.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function at(){return!1}function ot(e){function n(n,t,r,a,o){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return L(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var it,st,lt,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ut=ot(ct),dt=L({},ct,{view:0,detail:0}),At=ot(dt),ft=L({},dt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:wt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lt&&(lt&&"mousemove"===e.type?(it=e.screenX-lt.screenX,st=e.screenY-lt.screenY):st=it=0,lt=e),it)},movementY:function(e){return"movementY"in e?e.movementY:st}}),ht=ot(ft),pt=ot(L({},ft,{dataTransfer:0})),gt=ot(L({},dt,{relatedTarget:0})),mt=ot(L({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=L({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bt=ot(vt),yt=ot(L({},ct,{data:0})),Ct={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Et={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Bt[e])&&!!n[e]}function wt(){return xt}var kt=L({},dt,{key:function(e){if(e.key){var n=Ct[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Et[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:wt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),St=ot(kt),jt=ot(L({},ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_t=ot(L({},dt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:wt})),Nt=ot(L({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),zt=L({},ft,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Tt=ot(zt),It=[9,13,27,32],Ot=u&&"CompositionEvent"in window,Pt=null;u&&"documentMode"in document&&(Pt=document.documentMode);var Dt=u&&"TextEvent"in window&&!Pt,Lt=u&&(!Ot||Pt&&8<Pt&&11>=Pt),Rt=String.fromCharCode(32),Ut=!1;function Mt(e,n){switch(e){case"keyup":return-1!==It.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ft(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $t=!1,Yt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Yt[e.type]:"textarea"===n}function Wt(e,n,t,r){ke(r),0<(n=Hr(n,"onChange")).length&&(t=new ut("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Ht=null,Gt=null;function Vt(e){Rr(e,0)}function Kt(e){if(G(ya(e)))return e}function Zt(e,n){if("change"===e)return n}var Qt=!1;if(u){var Jt;if(u){var Xt="oninput"in document;if(!Xt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Xt="function"==typeof er.oninput}Jt=Xt}else Jt=!1;Qt=Jt&&(!document.documentMode||9<document.documentMode)}function nr(){Ht&&(Ht.detachEvent("onpropertychange",tr),Gt=Ht=null)}function tr(e){if("value"===e.propertyName&&Kt(Gt)){var n=[];Wt(n,Gt,e,Ce(e)),ze(Vt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Gt=t,(Ht=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kt(Gt)}function or(e,n){if("click"===e)return Kt(n)}function ir(e,n){if("input"===e||"change"===e)return Kt(n)}var sr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function lr(e,n){if(sr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!d.call(n,a)||!sr(e[a],n[a]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?dr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function Ar(){for(var e=window,n=V();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=V((e=n.contentWindow).document)}return n}function fr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function hr(e){var n=Ar(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&dr(t.ownerDocument.documentElement,t)){if(null!==r&&fr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var a=t.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=ur(t,o);var i=ur(t,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((n=n.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(n),e.extend(i.node,i.offset)):(n.setEnd(i.node,i.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var pr=u&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,vr=null,br=!1;function yr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;br||null==gr||gr!==V(r)||(r="selectionStart"in(r=gr)&&fr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&lr(vr,r)||(vr=r,0<(r=Hr(mr,"onSelect")).length&&(n=new ut("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=gr)))}function Cr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Er={animationend:Cr("Animation","AnimationEnd"),animationiteration:Cr("Animation","AnimationIteration"),animationstart:Cr("Animation","AnimationStart"),transitionend:Cr("Transition","TransitionEnd")},Br={},xr={};function wr(e){if(Br[e])return Br[e];if(!Er[e])return e;var n,t=Er[e];for(n in t)if(t.hasOwnProperty(n)&&n in xr)return Br[e]=t[n];return e}u&&(xr=document.createElement("div").style,"AnimationEvent"in window||(delete Er.animationend.animation,delete Er.animationiteration.animation,delete Er.animationstart.animation),"TransitionEvent"in window||delete Er.transitionend.transition);var kr=wr("animationend"),Sr=wr("animationiteration"),jr=wr("animationstart"),_r=wr("transitionend"),Nr=new Map,zr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Tr(e,n){Nr.set(e,n),l(n,[e])}for(var Ir=0;Ir<zr.length;Ir++){var Or=zr[Ir];Tr(Or.toLowerCase(),"on"+(Or[0].toUpperCase()+Or.slice(1)))}Tr(kr,"onAnimationEnd"),Tr(Sr,"onAnimationIteration"),Tr(jr,"onAnimationStart"),Tr("dblclick","onDoubleClick"),Tr("focusin","onFocus"),Tr("focusout","onBlur"),Tr(_r,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Pr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Pr));function Lr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,i,s,l,c){if(Fe.apply(this,arguments),De){if(!De)throw Error(o(198));var u=Le;De=!1,Le=null,Re||(Re=!0,Ue=u)}}(r,n,void 0,e),e.currentTarget=null}function Rr(e,n){n=!!(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var o=void 0;if(n)for(var i=r.length-1;0<=i;i--){var s=r[i],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==o&&a.isPropagationStopped())break e;Lr(a,s,c),o=l}else for(i=0;i<r.length;i++){if(l=(s=r[i]).instance,c=s.currentTarget,s=s.listener,l!==o&&a.isPropagationStopped())break e;Lr(a,s,c),o=l}}}if(Re)throw e=Ue,Re=!1,Ue=null,e}function Ur(e,n){var t=n[pa];void 0===t&&(t=n[pa]=new Set);var r=e+"__bubble";t.has(r)||(Yr(n,e,2,!1),t.add(r))}function Mr(e,n,t){var r=0;n&&(r|=4),Yr(t,e,r,n)}var Fr="_reactListening"+Math.random().toString(36).slice(2);function $r(e){if(!e[Fr]){e[Fr]=!0,i.forEach(function(n){"selectionchange"!==n&&(Dr.has(n)||Mr(n,!1,e),Mr(n,!0,e))});var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Fr]||(n[Fr]=!0,Mr("selectionchange",!1,n))}}function Yr(e,n,t,r){switch(Qn(n)){case 1:var a=Hn;break;case 4:a=Gn;break;default:a=Vn}t=a.bind(null,n,t,e),a=void 0,!Ie||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function qr(e,n,t,r,a){var o=r;if(!(1&n||2&n||null===r))e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==s;){if(null===(i=va(s)))return;if(5===(l=i.tag)||6===l){r=o=i;continue e}s=s.parentNode}}r=r.return}ze(function(){var r=o,a=Ce(t),i=[];e:{var s=Nr.get(e);if(void 0!==s){var l=ut,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":l=St;break;case"focusin":c="focus",l=gt;break;case"focusout":c="blur",l=gt;break;case"beforeblur":case"afterblur":l=gt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=pt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=_t;break;case kr:case Sr:case jr:l=mt;break;case _r:l=Nt;break;case"scroll":l=At;break;case"wheel":l=Tt;break;case"copy":case"cut":case"paste":l=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=jt}var u=!!(4&n),d=!u&&"scroll"===e,A=u?null!==s?s+"Capture":null:s;u=[];for(var f,h=r;null!==h;){var p=(f=h).stateNode;if(5===f.tag&&null!==p&&(f=p,null!==A&&null!=(p=Te(h,A))&&u.push(Wr(h,p,f))),d)break;h=h.return}0<u.length&&(s=new l(s,c,null,t,a),i.push({event:s,listeners:u}))}}if(!(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||t===ye||!(c=t.relatedTarget||t.fromElement)||!va(c)&&!c[ha])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(c=(c=t.relatedTarget||t.toElement)?va(c):null)&&(c!==(d=$e(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(u=ht,p="onMouseLeave",A="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(u=jt,p="onPointerLeave",A="onPointerEnter",h="pointer"),d=null==l?s:ya(l),f=null==c?s:ya(c),(s=new u(p,h+"leave",l,t,a)).target=d,s.relatedTarget=f,p=null,va(a)===r&&((u=new u(A,h+"enter",c,t,a)).target=f,u.relatedTarget=d,p=u),d=p,l&&c)e:{for(A=c,h=0,f=u=l;f;f=Gr(f))h++;for(f=0,p=A;p;p=Gr(p))f++;for(;0<h-f;)u=Gr(u),h--;for(;0<f-h;)A=Gr(A),f--;for(;h--;){if(u===A||null!==A&&u===A.alternate)break e;u=Gr(u),A=Gr(A)}u=null}else u=null;null!==l&&Vr(i,s,l,u,!1),null!==c&&null!==d&&Vr(i,d,c,u,!0)}if("select"===(l=(s=r?ya(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=Zt;else if(qt(s))if(Qt)g=ir;else{g=ar;var m=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=or);switch(g&&(g=g(e,r))?Wt(i,g,t,a):(m&&m(e,s,r),"focusout"===e&&(m=s._wrapperState)&&m.controlled&&"number"===s.type&&ee(s,"number",s.value)),m=r?ya(r):window,e){case"focusin":(qt(m)||"true"===m.contentEditable)&&(gr=m,mr=r,vr=null);break;case"focusout":vr=mr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,yr(i,t,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":yr(i,t,a)}var v;if(Ot)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else $t?Mt(e,t)&&(b="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(b="onCompositionStart");b&&(Lt&&"ko"!==t.locale&&($t||"onCompositionStart"!==b?"onCompositionEnd"===b&&$t&&(v=nt()):(Xn="value"in(Jn=a)?Jn.value:Jn.textContent,$t=!0)),0<(m=Hr(r,b)).length&&(b=new yt(b,e,null,t,a),i.push({event:b,listeners:m}),(v||null!==(v=Ft(t)))&&(b.data=v))),(v=Dt?function(e,n){switch(e){case"compositionend":return Ft(n);case"keypress":return 32!==n.which?null:(Ut=!0,Rt);case"textInput":return(e=n.data)===Rt&&Ut?null:e;default:return null}}(e,t):function(e,n){if($t)return"compositionend"===e||!Ot&&Mt(e,n)?(e=nt(),et=Xn=Jn=null,$t=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Lt&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Hr(r,"onBeforeInput")).length&&(a=new yt("onBeforeInput","beforeinput",null,t,a),i.push({event:a,listeners:r}),a.data=v)}Rr(i,n)})}function Wr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Hr(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Te(e,t))&&r.unshift(Wr(e,o,a)),null!=(o=Te(e,n))&&r.push(Wr(e,o,a))),e=e.return}return r}function Gr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Vr(e,n,t,r,a){for(var o=n._reactName,i=[];null!==t&&t!==r;){var s=t,l=s.alternate,c=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==c&&(s=c,a?null!=(l=Te(t,o))&&i.unshift(Wr(t,l,s)):a||null!=(l=Te(t,o))&&i.push(Wr(t,l,s))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}var Kr=/\r\n?/g,Zr=/\u0000|\uFFFD/g;function Qr(e){return("string"==typeof e?e:""+e).replace(Kr,"\n").replace(Zr,"")}function Jr(e,n,t){if(n=Qr(n),Qr(e)!==n&&t)throw Error(o(425))}function Xr(){}var ea=null,na=null;function ta(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(sa)}:ra;function sa(e){setTimeout(function(){throw e})}function la(e,n){var t=n,r=0;do{var a=t.nextSibling;if(e.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return e.removeChild(a),void Yn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);Yn(n)}function ca(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ua(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),Aa="__reactFiber$"+da,fa="__reactProps$"+da,ha="__reactContainer$"+da,pa="__reactEvents$"+da,ga="__reactListeners$"+da,ma="__reactHandles$"+da;function va(e){var n=e[Aa];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ha]||t[Aa]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=ua(e);null!==e;){if(t=e[Aa])return t;e=ua(e)}return n}t=(e=t).parentNode}return null}function ba(e){return!(e=e[Aa]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ya(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Ca(e){return e[fa]||null}var Ea=[],Ba=-1;function xa(e){return{current:e}}function wa(e){0>Ba||(e.current=Ea[Ba],Ea[Ba]=null,Ba--)}function ka(e,n){Ba++,Ea[Ba]=e.current,e.current=n}var Sa={},ja=xa(Sa),_a=xa(!1),Na=Sa;function za(e,n){var t=e.type.contextTypes;if(!t)return Sa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=o),o}function Ta(e){return null!=e.childContextTypes}function Ia(){wa(_a),wa(ja)}function Oa(e,n,t){if(ja.current!==Sa)throw Error(o(168));ka(ja,n),ka(_a,t)}function Pa(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in n))throw Error(o(108,Y(e)||"Unknown",a));return L({},t,r)}function Da(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Sa,Na=ja.current,ka(ja,e),ka(_a,_a.current),!0}function La(e,n,t){var r=e.stateNode;if(!r)throw Error(o(169));t?(e=Pa(e,n,Na),r.__reactInternalMemoizedMergedChildContext=e,wa(_a),wa(ja),ka(ja,e)):wa(_a),ka(_a,t)}var Ra=null,Ua=!1,Ma=!1;function Fa(e){null===Ra?Ra=[e]:Ra.push(e)}function $a(){if(!Ma&&null!==Ra){Ma=!0;var e=0,n=yn;try{var t=Ra;for(yn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Ra=null,Ua=!1}catch(n){throw null!==Ra&&(Ra=Ra.slice(e+1)),Ge(Xe,$a),n}finally{yn=n,Ma=!1}}return null}var Ya=[],qa=0,Wa=null,Ha=0,Ga=[],Va=0,Ka=null,Za=1,Qa="";function Ja(e,n){Ya[qa++]=Ha,Ya[qa++]=Wa,Wa=e,Ha=n}function Xa(e,n,t){Ga[Va++]=Za,Ga[Va++]=Qa,Ga[Va++]=Ka,Ka=e;var r=Za;e=Qa;var a=32-sn(r)-1;r&=~(1<<a),t+=1;var o=32-sn(n)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Za=1<<32-sn(n)+a|t<<a|r,Qa=o+e}else Za=1<<o|t<<a|r,Qa=e}function eo(e){null!==e.return&&(Ja(e,1),Xa(e,1,0))}function no(e){for(;e===Wa;)Wa=Ya[--qa],Ya[qa]=null,Ha=Ya[--qa],Ya[qa]=null;for(;e===Ka;)Ka=Ga[--Va],Ga[Va]=null,Qa=Ga[--Va],Ga[Va]=null,Za=Ga[--Va],Ga[Va]=null}var to=null,ro=null,ao=!1,oo=null;function io(e,n){var t=zc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function so(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,to=e,ro=ca(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,to=e,ro=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Ka?{id:Za,overflow:Qa}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=zc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,to=e,ro=null,!0);default:return!1}}function lo(e){return!(!(1&e.mode)||128&e.flags)}function co(e){if(ao){var n=ro;if(n){var t=n;if(!so(e,n)){if(lo(e))throw Error(o(418));n=ca(t.nextSibling);var r=to;n&&so(e,n)?io(r,t):(e.flags=-4097&e.flags|2,ao=!1,to=e)}}else{if(lo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,to=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;to=e}function Ao(e){if(e!==to)return!1;if(!ao)return uo(e),ao=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ta(e.type,e.memoizedProps)),n&&(n=ro)){if(lo(e))throw fo(),Error(o(418));for(;n;)io(e,n),n=ca(n.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){ro=ca(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}ro=null}}else ro=to?ca(e.stateNode.nextSibling):null;return!0}function fo(){for(var e=ro;e;)e=ca(e.nextSibling)}function ho(){ro=to=null,ao=!1}function po(e){null===oo?oo=[e]:oo.push(e)}var go=y.ReactCurrentBatchConfig;function mo(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===i?n.ref:(n=function(e){var n=a.refs;null===e?delete n[i]:n[i]=e},n._stringRef=i,n)}if("string"!=typeof e)throw Error(o(284));if(!t._owner)throw Error(o(290,e))}return e}function vo(e,n){throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function bo(e){return(0,e._init)(e._payload)}function yo(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Ic(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function s(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,t,r){return null===n||6!==n.tag?((n=Lc(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function c(e,n,t,r){var o=t.type;return o===B?d(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===T&&bo(o)===n.type)?((r=a(n,t.props)).ref=mo(e,n,t),r.return=e,r):((r=Oc(t.type,t.key,t.props,null,e.mode,r)).ref=mo(e,n,t),r.return=e,r)}function u(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Rc(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function d(e,n,t,r,o){return null===n||7!==n.tag?((n=Pc(t,e.mode,r,o)).return=e,n):((n=a(n,t)).return=e,n)}function A(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Lc(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return(t=Oc(n.type,n.key,n.props,null,e.mode,t)).ref=mo(e,null,n),t.return=e,t;case E:return(n=Rc(n,e.mode,t)).return=e,n;case T:return A(e,(0,n._init)(n._payload),t)}if(ne(n)||P(n))return(n=Pc(n,e.mode,t,null)).return=e,n;vo(e,n)}return null}function f(e,n,t,r){var a=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==a?null:l(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return t.key===a?c(e,n,t,r):null;case E:return t.key===a?u(e,n,t,r):null;case T:return f(e,n,(a=t._init)(t._payload),r)}if(ne(t)||P(t))return null!==a?null:d(e,n,t,r,null);vo(e,t)}return null}function h(e,n,t,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return l(n,e=e.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return c(n,e=e.get(null===r.key?t:r.key)||null,r,a);case E:return u(n,e=e.get(null===r.key?t:r.key)||null,r,a);case T:return h(e,n,t,(0,r._init)(r._payload),a)}if(ne(r)||P(r))return d(n,e=e.get(t)||null,r,a,null);vo(n,r)}return null}function p(a,o,s,l){for(var c=null,u=null,d=o,p=o=0,g=null;null!==d&&p<s.length;p++){d.index>p?(g=d,d=null):g=d.sibling;var m=f(a,d,s[p],l);if(null===m){null===d&&(d=g);break}e&&d&&null===m.alternate&&n(a,d),o=i(m,o,p),null===u?c=m:u.sibling=m,u=m,d=g}if(p===s.length)return t(a,d),ao&&Ja(a,p),c;if(null===d){for(;p<s.length;p++)null!==(d=A(a,s[p],l))&&(o=i(d,o,p),null===u?c=d:u.sibling=d,u=d);return ao&&Ja(a,p),c}for(d=r(a,d);p<s.length;p++)null!==(g=h(d,a,p,s[p],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?p:g.key),o=i(g,o,p),null===u?c=g:u.sibling=g,u=g);return e&&d.forEach(function(e){return n(a,e)}),ao&&Ja(a,p),c}function g(a,s,l,c){var u=P(l);if("function"!=typeof u)throw Error(o(150));if(null==(l=u.call(l)))throw Error(o(151));for(var d=u=null,p=s,g=s=0,m=null,v=l.next();null!==p&&!v.done;g++,v=l.next()){p.index>g?(m=p,p=null):m=p.sibling;var b=f(a,p,v.value,c);if(null===b){null===p&&(p=m);break}e&&p&&null===b.alternate&&n(a,p),s=i(b,s,g),null===d?u=b:d.sibling=b,d=b,p=m}if(v.done)return t(a,p),ao&&Ja(a,g),u;if(null===p){for(;!v.done;g++,v=l.next())null!==(v=A(a,v.value,c))&&(s=i(v,s,g),null===d?u=v:d.sibling=v,d=v);return ao&&Ja(a,g),u}for(p=r(a,p);!v.done;g++,v=l.next())null!==(v=h(p,a,g,v.value,c))&&(e&&null!==v.alternate&&p.delete(null===v.key?g:v.key),s=i(v,s,g),null===d?u=v:d.sibling=v,d=v);return e&&p.forEach(function(e){return n(a,e)}),ao&&Ja(a,g),u}return function e(r,o,i,l){if("object"==typeof i&&null!==i&&i.type===B&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case C:e:{for(var c=i.key,u=o;null!==u;){if(u.key===c){if((c=i.type)===B){if(7===u.tag){t(r,u.sibling),(o=a(u,i.props.children)).return=r,r=o;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===T&&bo(c)===u.type){t(r,u.sibling),(o=a(u,i.props)).ref=mo(r,u,i),o.return=r,r=o;break e}t(r,u);break}n(r,u),u=u.sibling}i.type===B?((o=Pc(i.props.children,r.mode,l,i.key)).return=r,r=o):((l=Oc(i.type,i.key,i.props,null,r.mode,l)).ref=mo(r,o,i),l.return=r,r=l)}return s(r);case E:e:{for(u=i.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){t(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break e}t(r,o);break}n(r,o),o=o.sibling}(o=Rc(i,r.mode,l)).return=r,r=o}return s(r);case T:return e(r,o,(u=i._init)(i._payload),l)}if(ne(i))return p(r,o,i,l);if(P(i))return g(r,o,i,l);vo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(t(r,o.sibling),(o=a(o,i)).return=r,r=o):(t(r,o),(o=Lc(i,r.mode,l)).return=r,r=o),s(r)):t(r,o)}}var Co=yo(!0),Eo=yo(!1),Bo=xa(null),xo=null,wo=null,ko=null;function So(){ko=wo=xo=null}function jo(e){var n=Bo.current;wa(Bo),e._currentValue=n}function _o(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function No(e,n){xo=e,ko=wo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&n)&&(bs=!0),e.firstContext=null)}function zo(e){var n=e._currentValue;if(ko!==e)if(e={context:e,memoizedValue:n,next:null},null===wo){if(null===xo)throw Error(o(308));wo=e,xo.dependencies={lanes:0,firstContext:e}}else wo=wo.next=e;return n}var To=null;function Io(e){null===To?To=[e]:To.push(e)}function Oo(e,n,t,r){var a=n.interleaved;return null===a?(t.next=t,Io(n)):(t.next=a.next,a.next=t),n.interleaved=t,Po(e,r)}function Po(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Do=!1;function Lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ro(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Uo(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Mo(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&jl){var a=r.pending;return null===a?n.next=n:(n.next=a.next,a.next=n),r.pending=n,Po(e,t)}return null===(a=r.interleaved)?(n.next=n,Io(r)):(n.next=a.next,a.next=n),r.interleaved=n,Po(e,t)}function Fo(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,bn(e,t)}}function $o(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?a=o=i:o=o.next=i,t=t.next}while(null!==t);null===o?a=o=n:o=o.next=n}else a=o=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Yo(e,n,t,r){var a=e.updateQueue;Do=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,c=l.next;l.next=null,null===i?o=c:i.next=c,i=l;var u=e.alternate;null!==u&&(s=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l)}if(null!==o){var d=a.baseState;for(i=0,u=c=l=null,s=o;;){var A=s.lane,f=s.eventTime;if((r&A)===A){null!==u&&(u=u.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var h=e,p=s;switch(A=n,f=t,p.tag){case 1:if("function"==typeof(h=p.payload)){d=h.call(f,d,A);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(A="function"==typeof(h=p.payload)?h.call(f,d,A):h))break e;d=L({},d,A);break e;case 2:Do=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(A=a.effects)?a.effects=[s]:A.push(s))}else f={eventTime:f,lane:A,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=f,l=d):u=u.next=f,i|=A;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(A=s).next,A.next=null,a.lastBaseUpdate=A,a.shared.pending=null}}if(null===u&&(l=d),a.baseState=l,a.firstBaseUpdate=c,a.lastBaseUpdate=u,null!==(n=a.shared.interleaved)){a=n;do{i|=a.lane,a=a.next}while(a!==n)}else null===o&&(a.shared.lanes=0);Dl|=i,e.lanes=i,e.memoizedState=d}}function qo(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Wo={},Ho=xa(Wo),Go=xa(Wo),Vo=xa(Wo);function Ko(e){if(e===Wo)throw Error(o(174));return e}function Zo(e,n){switch(ka(Vo,n),ka(Go,e),ka(Ho,Wo),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}wa(Ho),ka(Ho,n)}function Qo(){wa(Ho),wa(Go),wa(Vo)}function Jo(e){Ko(Vo.current);var n=Ko(Ho.current),t=le(n,e.type);n!==t&&(ka(Go,e),ka(Ho,t))}function Xo(e){Go.current===e&&(wa(Ho),wa(Go))}var ei=xa(0);function ni(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(128&n.flags)return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ti=[];function ri(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ai=y.ReactCurrentDispatcher,oi=y.ReactCurrentBatchConfig,ii=0,si=null,li=null,ci=null,ui=!1,di=!1,Ai=0,fi=0;function hi(){throw Error(o(321))}function pi(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!sr(e[t],n[t]))return!1;return!0}function gi(e,n,t,r,a,i){if(ii=i,si=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ai.current=null===e||null===e.memoizedState?Xi:es,e=t(r,a),di){i=0;do{if(di=!1,Ai=0,25<=i)throw Error(o(301));i+=1,ci=li=null,n.updateQueue=null,ai.current=ns,e=t(r,a)}while(di)}if(ai.current=Ji,n=null!==li&&null!==li.next,ii=0,ci=li=si=null,ui=!1,n)throw Error(o(300));return e}function mi(){var e=0!==Ai;return Ai=0,e}function vi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ci?si.memoizedState=ci=e:ci=ci.next=e,ci}function bi(){if(null===li){var e=si.alternate;e=null!==e?e.memoizedState:null}else e=li.next;var n=null===ci?si.memoizedState:ci.next;if(null!==n)ci=n,li=e;else{if(null===e)throw Error(o(310));e={memoizedState:(li=e).memoizedState,baseState:li.baseState,baseQueue:li.baseQueue,queue:li.queue,next:null},null===ci?si.memoizedState=ci=e:ci=ci.next=e}return ci}function yi(e,n){return"function"==typeof n?n(e):n}function Ci(e){var n=bi(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=li,a=r.baseQueue,i=t.pending;if(null!==i){if(null!==a){var s=a.next;a.next=i.next,i.next=s}r.baseQueue=a=i,t.pending=null}if(null!==a){i=a.next,r=r.baseState;var l=s=null,c=null,u=i;do{var d=u.lane;if((ii&d)===d)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var A={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(l=c=A,s=r):c=c.next=A,si.lanes|=d,Dl|=d}u=u.next}while(null!==u&&u!==i);null===c?s=r:c.next=l,sr(r,n.memoizedState)||(bs=!0),n.memoizedState=r,n.baseState=s,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){a=e;do{i=a.lane,si.lanes|=i,Dl|=i,a=a.next}while(a!==e)}else null===a&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Ei(e){var n=bi(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,i=n.memoizedState;if(null!==a){t.pending=null;var s=a=a.next;do{i=e(i,s.action),s=s.next}while(s!==a);sr(i,n.memoizedState)||(bs=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function Bi(){}function xi(e,n){var t=si,r=bi(),a=n(),i=!sr(r.memoizedState,a);if(i&&(r.memoizedState=a,bs=!0),r=r.queue,Di(Si.bind(null,t,r,e),[e]),r.getSnapshot!==n||i||null!==ci&&1&ci.memoizedState.tag){if(t.flags|=2048,zi(9,ki.bind(null,t,r,a,n),void 0,null),null===_l)throw Error(o(349));30&ii||wi(t,n,a)}return a}function wi(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=si.updateQueue)?(n={lastEffect:null,stores:null},si.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function ki(e,n,t,r){n.value=t,n.getSnapshot=r,ji(n)&&_i(e)}function Si(e,n,t){return t(function(){ji(n)&&_i(e)})}function ji(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!sr(e,t)}catch(e){return!0}}function _i(e){var n=Po(e,1);null!==n&&tc(n,e,1,-1)}function Ni(e){var n=vi();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:yi,lastRenderedState:e},n.queue=e,e=e.dispatch=Vi.bind(null,si,e),[n.memoizedState,e]}function zi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=si.updateQueue)?(n={lastEffect:null,stores:null},si.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Ti(){return bi().memoizedState}function Ii(e,n,t,r){var a=vi();si.flags|=e,a.memoizedState=zi(1|n,t,void 0,void 0===r?null:r)}function Oi(e,n,t,r){var a=bi();r=void 0===r?null:r;var o=void 0;if(null!==li){var i=li.memoizedState;if(o=i.destroy,null!==r&&pi(r,i.deps))return void(a.memoizedState=zi(n,t,o,r))}si.flags|=e,a.memoizedState=zi(1|n,t,o,r)}function Pi(e,n){return Ii(8390656,8,e,n)}function Di(e,n){return Oi(2048,8,e,n)}function Li(e,n){return Oi(4,2,e,n)}function Ri(e,n){return Oi(4,4,e,n)}function Ui(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Mi(e,n,t){return t=null!=t?t.concat([e]):null,Oi(4,4,Ui.bind(null,n,e),t)}function Fi(){}function $i(e,n){var t=bi();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&pi(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Yi(e,n){var t=bi();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&pi(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function qi(e,n,t){return 21&ii?(sr(t,n)||(t=gn(),si.lanes|=t,Dl|=t,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,bs=!0),e.memoizedState=t)}function Wi(e,n){var t=yn;yn=0!==t&&4>t?t:4,e(!0);var r=oi.transition;oi.transition={};try{e(!1),n()}finally{yn=t,oi.transition=r}}function Hi(){return bi().memoizedState}function Gi(e,n,t){var r=nc(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},Ki(e)?Zi(n,t):null!==(t=Oo(e,n,t,r))&&(tc(t,e,r,ec()),Qi(t,n,r))}function Vi(e,n,t){var r=nc(e),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(Ki(e))Zi(n,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=n.lastRenderedReducer))try{var i=n.lastRenderedState,s=o(i,t);if(a.hasEagerState=!0,a.eagerState=s,sr(s,i)){var l=n.interleaved;return null===l?(a.next=a,Io(n)):(a.next=l.next,l.next=a),void(n.interleaved=a)}}catch(e){}null!==(t=Oo(e,n,a,r))&&(tc(t,e,r,a=ec()),Qi(t,n,r))}}function Ki(e){var n=e.alternate;return e===si||null!==n&&n===si}function Zi(e,n){di=ui=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function Qi(e,n,t){if(4194240&t){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,bn(e,t)}}var Ji={readContext:zo,useCallback:hi,useContext:hi,useEffect:hi,useImperativeHandle:hi,useInsertionEffect:hi,useLayoutEffect:hi,useMemo:hi,useReducer:hi,useRef:hi,useState:hi,useDebugValue:hi,useDeferredValue:hi,useTransition:hi,useMutableSource:hi,useSyncExternalStore:hi,useId:hi,unstable_isNewReconciler:!1},Xi={readContext:zo,useCallback:function(e,n){return vi().memoizedState=[e,void 0===n?null:n],e},useContext:zo,useEffect:Pi,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ii(4194308,4,Ui.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ii(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ii(4,2,e,n)},useMemo:function(e,n){var t=vi();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=vi();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=Gi.bind(null,si,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vi().memoizedState=e},useState:Ni,useDebugValue:Fi,useDeferredValue:function(e){return vi().memoizedState=e},useTransition:function(){var e=Ni(!1),n=e[0];return e=Wi.bind(null,e[1]),vi().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=si,a=vi();if(ao){if(void 0===t)throw Error(o(407));t=t()}else{if(t=n(),null===_l)throw Error(o(349));30&ii||wi(r,n,t)}a.memoizedState=t;var i={value:t,getSnapshot:n};return a.queue=i,Pi(Si.bind(null,r,i,e),[e]),r.flags|=2048,zi(9,ki.bind(null,r,i,t,n),void 0,null),t},useId:function(){var e=vi(),n=_l.identifierPrefix;if(ao){var t=Qa;n=":"+n+"R"+(t=(Za&~(1<<32-sn(Za)-1)).toString(32)+t),0<(t=Ai++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=fi++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},es={readContext:zo,useCallback:$i,useContext:zo,useEffect:Di,useImperativeHandle:Mi,useInsertionEffect:Li,useLayoutEffect:Ri,useMemo:Yi,useReducer:Ci,useRef:Ti,useState:function(){return Ci(yi)},useDebugValue:Fi,useDeferredValue:function(e){return qi(bi(),li.memoizedState,e)},useTransition:function(){return[Ci(yi)[0],bi().memoizedState]},useMutableSource:Bi,useSyncExternalStore:xi,useId:Hi,unstable_isNewReconciler:!1},ns={readContext:zo,useCallback:$i,useContext:zo,useEffect:Di,useImperativeHandle:Mi,useInsertionEffect:Li,useLayoutEffect:Ri,useMemo:Yi,useReducer:Ei,useRef:Ti,useState:function(){return Ei(yi)},useDebugValue:Fi,useDeferredValue:function(e){var n=bi();return null===li?n.memoizedState=e:qi(n,li.memoizedState,e)},useTransition:function(){return[Ei(yi)[0],bi().memoizedState]},useMutableSource:Bi,useSyncExternalStore:xi,useId:Hi,unstable_isNewReconciler:!1};function ts(e,n){if(e&&e.defaultProps){for(var t in n=L({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}function rs(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:L({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var as={isMounted:function(e){return!!(e=e._reactInternals)&&$e(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=ec(),a=nc(e),o=Uo(r,a);o.payload=n,null!=t&&(o.callback=t),null!==(n=Mo(e,o,a))&&(tc(n,e,a,r),Fo(n,e,a))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=ec(),a=nc(e),o=Uo(r,a);o.tag=1,o.payload=n,null!=t&&(o.callback=t),null!==(n=Mo(e,o,a))&&(tc(n,e,a,r),Fo(n,e,a))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=ec(),r=nc(e),a=Uo(t,r);a.tag=2,null!=n&&(a.callback=n),null!==(n=Mo(e,a,r))&&(tc(n,e,r,t),Fo(n,e,r))}};function os(e,n,t,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(n.prototype&&n.prototype.isPureReactComponent&&lr(t,r)&&lr(a,o))}function is(e,n,t){var r=!1,a=Sa,o=n.contextType;return"object"==typeof o&&null!==o?o=zo(o):(a=Ta(n)?Na:ja.current,o=(r=null!=(r=n.contextTypes))?za(e,a):Sa),n=new n(t,o),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=as,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),n}function ss(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&as.enqueueReplaceState(n,n.state,null)}function ls(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs={},Lo(e);var o=n.contextType;"object"==typeof o&&null!==o?a.context=zo(o):(o=Ta(n)?Na:ja.current,a.context=za(e,o)),a.state=e.memoizedState,"function"==typeof(o=n.getDerivedStateFromProps)&&(rs(e,n,o,t),a.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(n=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&as.enqueueReplaceState(a,a.state,null),Yo(e,t,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function cs(e,n){try{var t="",r=n;do{t+=F(r),r=r.return}while(r);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:a,digest:null}}function us(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function ds(e,n){try{console.error(n.value)}catch(e){setTimeout(function(){throw e})}}var As="function"==typeof WeakMap?WeakMap:Map;function fs(e,n,t){(t=Uo(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){ql||(ql=!0,Wl=r),ds(0,n)},t}function hs(e,n,t){(t=Uo(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=n.value;t.payload=function(){return r(a)},t.callback=function(){ds(0,n)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){ds(0,n),"function"!=typeof r&&(null===Hl?Hl=new Set([this]):Hl.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function ps(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new As;var a=new Set;r.set(n,a)}else void 0===(a=r.get(n))&&(a=new Set,r.set(n,a));a.has(t)||(a.add(t),e=wc.bind(null,e,n,t),n.then(e,e))}function gs(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function ms(e,n,t,r,a){return 1&e.mode?(e.flags|=65536,e.lanes=a,e):(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Uo(-1,1)).tag=2,Mo(t,n,1))),t.lanes|=1),e)}var vs=y.ReactCurrentOwner,bs=!1;function ys(e,n,t,r){n.child=null===e?Eo(n,null,t,r):Co(n,e.child,t,r)}function Cs(e,n,t,r,a){t=t.render;var o=n.ref;return No(n,a),r=gi(e,n,t,r,o,a),t=mi(),null===e||bs?(ao&&t&&eo(n),n.flags|=1,ys(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,qs(e,n,a))}function Es(e,n,t,r,a){if(null===e){var o=t.type;return"function"!=typeof o||Tc(o)||void 0!==o.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Oc(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=o,Bs(e,n,o,r,a))}if(o=e.child,0===(e.lanes&a)){var i=o.memoizedProps;if((t=null!==(t=t.compare)?t:lr)(i,r)&&e.ref===n.ref)return qs(e,n,a)}return n.flags|=1,(e=Ic(o,r)).ref=n.ref,e.return=n,n.child=e}function Bs(e,n,t,r,a){if(null!==e){var o=e.memoizedProps;if(lr(o,r)&&e.ref===n.ref){if(bs=!1,n.pendingProps=r=o,0===(e.lanes&a))return n.lanes=e.lanes,qs(e,n,a);131072&e.flags&&(bs=!0)}}return ks(e,n,t,r,a)}function xs(e,n,t){var r=n.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&n.mode){if(!(1073741824&t))return e=null!==o?o.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,ka(Il,Tl),Tl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:t,ka(Il,Tl),Tl|=r}else n.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Il,Tl),Tl|=t;else null!==o?(r=o.baseLanes|t,n.memoizedState=null):r=t,ka(Il,Tl),Tl|=r;return ys(e,n,a,t),n.child}function ws(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function ks(e,n,t,r,a){var o=Ta(t)?Na:ja.current;return o=za(n,o),No(n,a),t=gi(e,n,t,r,o,a),r=mi(),null===e||bs?(ao&&r&&eo(n),n.flags|=1,ys(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,qs(e,n,a))}function Ss(e,n,t,r,a){if(Ta(t)){var o=!0;Da(n)}else o=!1;if(No(n,a),null===n.stateNode)Ys(e,n),is(n,t,r),ls(n,t,r,a),r=!0;else if(null===e){var i=n.stateNode,s=n.memoizedProps;i.props=s;var l=i.context,c=t.contextType;c="object"==typeof c&&null!==c?zo(c):za(n,c=Ta(t)?Na:ja.current);var u=t.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||l!==c)&&ss(n,i,r,c),Do=!1;var A=n.memoizedState;i.state=A,Yo(n,r,i,a),l=n.memoizedState,s!==r||A!==l||_a.current||Do?("function"==typeof u&&(rs(n,t,u,r),l=n.memoizedState),(s=Do||os(n,t,s,r,A,l,c))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4194308)):("function"==typeof i.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=l),i.props=r,i.state=l,i.context=c,r=s):("function"==typeof i.componentDidMount&&(n.flags|=4194308),r=!1)}else{i=n.stateNode,Ro(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:ts(n.type,s),i.props=c,d=n.pendingProps,A=i.context,l="object"==typeof(l=t.contextType)&&null!==l?zo(l):za(n,l=Ta(t)?Na:ja.current);var f=t.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==d||A!==l)&&ss(n,i,r,l),Do=!1,A=n.memoizedState,i.state=A,Yo(n,r,i,a);var h=n.memoizedState;s!==d||A!==h||_a.current||Do?("function"==typeof f&&(rs(n,t,f,r),h=n.memoizedState),(c=Do||os(n,t,c,r,A,h,l)||!1)?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,l)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=h),i.props=r,i.state=h,i.context=l,r=c):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&A===e.memoizedState||(n.flags|=1024),r=!1)}return js(e,n,t,r,o,a)}function js(e,n,t,r,a,o){ws(e,n);var i=!!(128&n.flags);if(!r&&!i)return a&&La(n,t,!1),qs(e,n,o);r=n.stateNode,vs.current=n;var s=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=Co(n,e.child,null,o),n.child=Co(n,null,s,o)):ys(e,n,s,o),n.memoizedState=r.state,a&&La(n,t,!0),n.child}function _s(e){var n=e.stateNode;n.pendingContext?Oa(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Oa(0,n.context,!1),Zo(e,n.containerInfo)}function Ns(e,n,t,r,a){return ho(),po(a),n.flags|=256,ys(e,n,t,r),n.child}var zs,Ts,Is,Os,Ps={dehydrated:null,treeContext:null,retryLane:0};function Ds(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ls(e,n,t){var r,a=n.pendingProps,i=ei.current,s=!1,l=!!(128&n.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&!!(2&i)),r?(s=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),ka(ei,1&i),null===e)return co(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(1&n.mode?"$!"===e.data?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(l=a.children,e=a.fallback,s?(a=n.mode,s=n.child,l={mode:"hidden",children:l},1&a||null===s?s=Dc(l,a,0,null):(s.childLanes=0,s.pendingProps=l),e=Pc(e,a,t,null),s.return=n,e.return=n,s.sibling=e,n.child=s,n.child.memoizedState=Ds(t),n.memoizedState=Ps,e):Rs(n,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,n,t,r,a,i,s){if(t)return 256&n.flags?(n.flags&=-257,Us(e,n,s,r=us(Error(o(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(i=r.fallback,a=n.mode,r=Dc({mode:"visible",children:r.children},a,0,null),(i=Pc(i,a,s,null)).flags|=2,r.return=n,i.return=n,r.sibling=i,n.child=r,1&n.mode&&Co(n,e.child,null,s),n.child.memoizedState=Ds(s),n.memoizedState=Ps,i);if(!(1&n.mode))return Us(e,n,s,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var l=r.dgst;return r=l,Us(e,n,s,r=us(i=Error(o(419)),r,void 0))}if(l=0!==(s&e.childLanes),bs||l){if(null!==(r=_l)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|s))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Po(e,a),tc(r,e,a,-1))}return pc(),Us(e,n,s,r=us(Error(o(421))))}return"$?"===a.data?(n.flags|=128,n.child=e.child,n=Sc.bind(null,e),a._reactRetry=n,null):(e=i.treeContext,ro=ca(a.nextSibling),to=n,ao=!0,oo=null,null!==e&&(Ga[Va++]=Za,Ga[Va++]=Qa,Ga[Va++]=Ka,Za=e.id,Qa=e.overflow,Ka=n),(n=Rs(n,r.children)).flags|=4096,n)}(e,n,l,a,r,i,t);if(s){s=a.fallback,l=n.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:a.children};return 1&l||n.child===i?(a=Ic(i,c)).subtreeFlags=14680064&i.subtreeFlags:((a=n.child).childLanes=0,a.pendingProps=c,n.deletions=null),null!==r?s=Ic(r,s):(s=Pc(s,l,t,null)).flags|=2,s.return=n,a.return=n,a.sibling=s,n.child=a,a=s,s=n.child,l=null===(l=e.child.memoizedState)?Ds(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~t,n.memoizedState=Ps,a}return e=(s=e.child).sibling,a=Ic(s,{mode:"visible",children:a.children}),!(1&n.mode)&&(a.lanes=t),a.return=n,a.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=a,n.memoizedState=null,a}function Rs(e,n){return(n=Dc({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Us(e,n,t,r){return null!==r&&po(r),Co(n,e.child,null,t),(e=Rs(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Ms(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),_o(e.return,n,t)}function Fs(e,n,t,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=t,o.tailMode=a)}function $s(e,n,t){var r=n.pendingProps,a=r.revealOrder,o=r.tail;if(ys(e,n,r.children,t),2&(r=ei.current))r=1&r|2,n.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ms(e,t,n);else if(19===e.tag)Ms(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(ei,r),1&n.mode)switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===ni(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Fs(n,!1,a,t,o);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ni(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Fs(n,!0,t,null,o);break;case"together":Fs(n,!1,null,null,void 0);break;default:n.memoizedState=null}else n.memoizedState=null;return n.child}function Ys(e,n){!(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function qs(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Dl|=n.lanes,0===(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=Ic(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Ic(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Ws(e,n){if(!ao)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Hs(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Gs(e,n,t){var r=n.pendingProps;switch(no(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Hs(n),null;case 1:case 17:return Ta(n.type)&&Ia(),Hs(n),null;case 3:return r=n.stateNode,Qo(),wa(_a),wa(ja),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ao(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&n.flags)||(n.flags|=1024,null!==oo&&(ic(oo),oo=null))),Ts(e,n),Hs(n),null;case 5:Xo(n);var a=Ko(Vo.current);if(t=n.type,null!==e&&null!=n.stateNode)Is(e,n,t,r,a),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(o(166));return Hs(n),null}if(e=Ko(Ho.current),Ao(n)){r=n.stateNode,t=n.type;var i=n.memoizedProps;switch(r[Aa]=n,r[fa]=i,e=!!(1&n.mode),t){case"dialog":Ur("cancel",r),Ur("close",r);break;case"iframe":case"object":case"embed":Ur("load",r);break;case"video":case"audio":for(a=0;a<Pr.length;a++)Ur(Pr[a],r);break;case"source":Ur("error",r);break;case"img":case"image":case"link":Ur("error",r),Ur("load",r);break;case"details":Ur("toggle",r);break;case"input":Z(r,i),Ur("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Ur("invalid",r);break;case"textarea":ae(r,i),Ur("invalid",r)}for(var l in ve(t,i),a=null,i)if(i.hasOwnProperty(l)){var c=i[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,c,e),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,c,e),a=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Ur("scroll",r)}switch(t){case"input":H(r),X(r,i,!0);break;case"textarea":H(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Xr)}r=a,n.updateQueue=r,null!==r&&(n.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(t,{is:r.is}):(e=l.createElement(t),"select"===t&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,t),e[Aa]=n,e[fa]=r,zs(e,n,!1,!1),n.stateNode=e;e:{switch(l=be(t,r),t){case"dialog":Ur("cancel",e),Ur("close",e),a=r;break;case"iframe":case"object":case"embed":Ur("load",e),a=r;break;case"video":case"audio":for(a=0;a<Pr.length;a++)Ur(Pr[a],e);a=r;break;case"source":Ur("error",e),a=r;break;case"img":case"image":case"link":Ur("error",e),Ur("load",e),a=r;break;case"details":Ur("toggle",e),a=r;break;case"input":Z(e,r),a=K(e,r),Ur("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=L({},r,{value:void 0}),Ur("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Ur("invalid",e)}for(i in ve(t,a),c=a)if(c.hasOwnProperty(i)){var u=c[i];"style"===i?ge(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===i?"string"==typeof u?("textarea"!==t||""!==u)&&Ae(e,u):"number"==typeof u&&Ae(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Ur("scroll",e):null!=u&&b(e,i,u,l))}switch(t){case"input":H(e),X(e,r,!1);break;case"textarea":H(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?te(e,!!r.multiple,i,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Xr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Hs(n),null;case 6:if(e&&null!=n.stateNode)Os(e,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(o(166));if(t=Ko(Vo.current),Ko(Ho.current),Ao(n)){if(r=n.stateNode,t=n.memoizedProps,r[Aa]=n,(i=r.nodeValue!==t)&&null!==(e=to))switch(e.tag){case 3:Jr(r.nodeValue,t,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,t,!!(1&e.mode))}i&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[Aa]=n,n.stateNode=r}return Hs(n),null;case 13:if(wa(ei),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&1&n.mode&&!(128&n.flags))fo(),ho(),n.flags|=98560,i=!1;else if(i=Ao(n),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=n.memoizedState)?i.dehydrated:null))throw Error(o(317));i[Aa]=n}else ho(),!(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Hs(n),i=!1}else null!==oo&&(ic(oo),oo=null),i=!0;if(!i)return 65536&n.flags?n:null}return 128&n.flags?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,1&n.mode&&(null===e||1&ei.current?0===Ol&&(Ol=3):pc())),null!==n.updateQueue&&(n.flags|=4),Hs(n),null);case 4:return Qo(),Ts(e,n),null===e&&$r(n.stateNode.containerInfo),Hs(n),null;case 10:return jo(n.type._context),Hs(n),null;case 19:if(wa(ei),null===(i=n.memoizedState))return Hs(n),null;if(r=!!(128&n.flags),null===(l=i.rendering))if(r)Ws(i,!1);else{if(0!==Ol||null!==e&&128&e.flags)for(e=n.child;null!==e;){if(null!==(l=ni(e))){for(n.flags|=128,Ws(i,!1),null!==(r=l.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(i=t).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ka(ei,1&ei.current|2),n.child}e=e.sibling}null!==i.tail&&Qe()>$l&&(n.flags|=128,r=!0,Ws(i,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=ni(l))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Ws(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!ao)return Hs(n),null}else 2*Qe()-i.renderingStartTime>$l&&1073741824!==t&&(n.flags|=128,r=!0,Ws(i,!1),n.lanes=4194304);i.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=i.last)?t.sibling=l:n.child=l,i.last=l)}return null!==i.tail?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=Qe(),n.sibling=null,t=ei.current,ka(ei,r?1&t|2:1&t),n):(Hs(n),null);case 22:case 23:return dc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&1&n.mode?!!(1073741824&Tl)&&(Hs(n),6&n.subtreeFlags&&(n.flags|=8192)):Hs(n),null;case 24:case 25:return null}throw Error(o(156,n.tag))}function Vs(e,n){switch(no(n),n.tag){case 1:return Ta(n.type)&&Ia(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return Qo(),wa(_a),wa(ja),ri(),65536&(e=n.flags)&&!(128&e)?(n.flags=-65537&e|128,n):null;case 5:return Xo(n),null;case 13:if(wa(ei),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));ho()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return wa(ei),null;case 4:return Qo(),null;case 10:return jo(n.type._context),null;case 22:case 23:return dc(),null;default:return null}}zs=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Ts=function(){},Is=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,Ko(Ho.current);var o,i=null;switch(t){case"input":a=K(e,a),r=K(e,r),i=[];break;case"select":a=L({},a,{value:void 0}),r=L({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Xr)}for(u in ve(t,r),t=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var l=a[u];for(o in l)l.hasOwnProperty(o)&&(t||(t={}),t[o]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(s.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var c=r[u];if(l=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&c!==l&&(null!=c||null!=l))if("style"===u)if(l){for(o in l)!l.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(t||(t={}),t[o]="");for(o in c)c.hasOwnProperty(o)&&l[o]!==c[o]&&(t||(t={}),t[o]=c[o])}else t||(i||(i=[]),i.push(u,t)),t=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(i=i||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(s.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&Ur("scroll",e),i||l===c||(i=[])):(i=i||[]).push(u,c))}t&&(i=i||[]).push("style",t);var u=i;(n.updateQueue=u)&&(n.flags|=4)}},Os=function(e,n,t,r){t!==r&&(n.flags|=4)};var Ks=!1,Zs=!1,Qs="function"==typeof WeakSet?WeakSet:Set,Js=null;function Xs(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){xc(e,n,t)}else t.current=null}function el(e,n,t){try{t()}catch(t){xc(e,n,t)}}var nl=!1;function tl(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&el(n,t,o)}a=a.next}while(a!==r)}}function rl(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function al(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function ol(e){var n=e.alternate;null!==n&&(e.alternate=null,ol(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[Aa],delete n[fa],delete n[pa],delete n[ga],delete n[ma]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function il(e){return 5===e.tag||3===e.tag||4===e.tag}function sl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||il(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Xr));else if(4!==r&&null!==(e=e.child))for(ll(e,n,t),e=e.sibling;null!==e;)ll(e,n,t),e=e.sibling}function cl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cl(e,n,t),e=e.sibling;null!==e;)cl(e,n,t),e=e.sibling}var ul=null,dl=!1;function Al(e,n,t){for(t=t.child;null!==t;)fl(e,n,t),t=t.sibling}function fl(e,n,t){if(on&&"function"==typeof on.onCommitFiberUnmount)try{on.onCommitFiberUnmount(an,t)}catch(e){}switch(t.tag){case 5:Zs||Xs(t,n);case 6:var r=ul,a=dl;ul=null,Al(e,n,t),dl=a,null!==(ul=r)&&(dl?(e=ul,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(dl?(e=ul,t=t.stateNode,8===e.nodeType?la(e.parentNode,t):1===e.nodeType&&la(e,t),Yn(e)):la(ul,t.stateNode));break;case 4:r=ul,a=dl,ul=t.stateNode.containerInfo,dl=!0,Al(e,n,t),ul=r,dl=a;break;case 0:case 11:case 14:case 15:if(!Zs&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(2&o||4&o)&&el(t,n,i),a=a.next}while(a!==r)}Al(e,n,t);break;case 1:if(!Zs&&(Xs(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){xc(t,n,e)}Al(e,n,t);break;case 21:Al(e,n,t);break;case 22:1&t.mode?(Zs=(r=Zs)||null!==t.memoizedState,Al(e,n,t),Zs=r):Al(e,n,t);break;default:Al(e,n,t)}}function hl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Qs),n.forEach(function(n){var r=jc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))})}}function pl(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var i=e,s=n,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,dl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===ul)throw Error(o(160));fl(i,s,a),ul=null,dl=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){xc(a,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)gl(n,e),n=n.sibling}function gl(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(pl(n,e),ml(e),4&r){try{tl(3,e,e.return),rl(3,e)}catch(n){xc(e,e.return,n)}try{tl(5,e,e.return)}catch(n){xc(e,e.return,n)}}break;case 1:pl(n,e),ml(e),512&r&&null!==t&&Xs(t,t.return);break;case 5:if(pl(n,e),ml(e),512&r&&null!==t&&Xs(t,t.return),32&e.flags){var a=e.stateNode;try{Ae(a,"")}catch(n){xc(e,e.return,n)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,s=null!==t?t.memoizedProps:i,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(a,i),be(l,s);var u=be(l,i);for(s=0;s<c.length;s+=2){var d=c[s],A=c[s+1];"style"===d?ge(a,A):"dangerouslySetInnerHTML"===d?de(a,A):"children"===d?Ae(a,A):b(a,d,A,u)}switch(l){case"input":J(a,i);break;case"textarea":oe(a,i);break;case"select":var f=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var h=i.value;null!=h?te(a,!!i.multiple,h,!1):f!==!!i.multiple&&(null!=i.defaultValue?te(a,!!i.multiple,i.defaultValue,!0):te(a,!!i.multiple,i.multiple?[]:"",!1))}a[fa]=i}catch(n){xc(e,e.return,n)}}break;case 6:if(pl(n,e),ml(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(n){xc(e,e.return,n)}}break;case 3:if(pl(n,e),ml(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Yn(n.containerInfo)}catch(n){xc(e,e.return,n)}break;case 4:default:pl(n,e),ml(e);break;case 13:pl(n,e),ml(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Fl=Qe())),4&r&&hl(e);break;case 22:if(d=null!==t&&null!==t.memoizedState,1&e.mode?(Zs=(u=Zs)||d,pl(n,e),Zs=u):pl(n,e),ml(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&1&e.mode)for(Js=e,d=e.child;null!==d;){for(A=Js=d;null!==Js;){switch(h=(f=Js).child,f.tag){case 0:case 11:case 14:case 15:tl(4,f,f.return);break;case 1:Xs(f,f.return);var p=f.stateNode;if("function"==typeof p.componentWillUnmount){r=f,t=f.return;try{n=r,p.props=n.memoizedProps,p.state=n.memoizedState,p.componentWillUnmount()}catch(e){xc(r,t,e)}}break;case 5:Xs(f,f.return);break;case 22:if(null!==f.memoizedState){Cl(A);continue}}null!==h?(h.return=f,Js=h):Cl(A)}d=d.sibling}e:for(d=null,A=e;;){if(5===A.tag){if(null===d){d=A;try{a=A.stateNode,u?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=A.stateNode,s=null!=(c=A.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=pe("display",s))}catch(n){xc(e,e.return,n)}}}else if(6===A.tag){if(null===d)try{A.stateNode.nodeValue=u?"":A.memoizedProps}catch(n){xc(e,e.return,n)}}else if((22!==A.tag&&23!==A.tag||null===A.memoizedState||A===e)&&null!==A.child){A.child.return=A,A=A.child;continue}if(A===e)break e;for(;null===A.sibling;){if(null===A.return||A.return===e)break e;d===A&&(d=null),A=A.return}d===A&&(d=null),A.sibling.return=A.return,A=A.sibling}}break;case 19:pl(n,e),ml(e),4&r&&hl(e);case 21:}}function ml(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(il(t)){var r=t;break e}t=t.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(Ae(a,""),r.flags&=-33),cl(e,sl(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;ll(e,sl(e),i);break;default:throw Error(o(161))}}catch(n){xc(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vl(e,n,t){Js=e,bl(e,n,t)}function bl(e,n,t){for(var r=!!(1&e.mode);null!==Js;){var a=Js,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Ks;if(!i){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Zs;s=Ks;var c=Zs;if(Ks=i,(Zs=l)&&!c)for(Js=a;null!==Js;)l=(i=Js).child,22===i.tag&&null!==i.memoizedState?El(a):null!==l?(l.return=i,Js=l):El(a);for(;null!==o;)Js=o,bl(o,n,t),o=o.sibling;Js=a,Ks=s,Zs=c}yl(e)}else 8772&a.subtreeFlags&&null!==o?(o.return=a,Js=o):yl(e)}}function yl(e){for(;null!==Js;){var n=Js;if(8772&n.flags){var t=n.alternate;try{if(8772&n.flags)switch(n.tag){case 0:case 11:case 15:Zs||rl(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Zs)if(null===t)r.componentDidMount();else{var a=n.elementType===n.type?t.memoizedProps:ts(n.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;null!==i&&qo(n,i,r);break;case 3:var s=n.updateQueue;if(null!==s){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}qo(n,s,t)}break;case 5:var l=n.stateNode;if(null===t&&4&n.flags){t=l;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var u=n.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var A=d.dehydrated;null!==A&&Yn(A)}}}break;default:throw Error(o(163))}Zs||512&n.flags&&al(n)}catch(e){xc(n,n.return,e)}}if(n===e){Js=null;break}if(null!==(t=n.sibling)){t.return=n.return,Js=t;break}Js=n.return}}function Cl(e){for(;null!==Js;){var n=Js;if(n===e){Js=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Js=t;break}Js=n.return}}function El(e){for(;null!==Js;){var n=Js;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rl(4,n)}catch(e){xc(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var a=n.return;try{r.componentDidMount()}catch(e){xc(n,a,e)}}var o=n.return;try{al(n)}catch(e){xc(n,o,e)}break;case 5:var i=n.return;try{al(n)}catch(e){xc(n,i,e)}}}catch(e){xc(n,n.return,e)}if(n===e){Js=null;break}var s=n.sibling;if(null!==s){s.return=n.return,Js=s;break}Js=n.return}}var Bl,xl=Math.ceil,wl=y.ReactCurrentDispatcher,kl=y.ReactCurrentOwner,Sl=y.ReactCurrentBatchConfig,jl=0,_l=null,Nl=null,zl=0,Tl=0,Il=xa(0),Ol=0,Pl=null,Dl=0,Ll=0,Rl=0,Ul=null,Ml=null,Fl=0,$l=1/0,Yl=null,ql=!1,Wl=null,Hl=null,Gl=!1,Vl=null,Kl=0,Zl=0,Ql=null,Jl=-1,Xl=0;function ec(){return 6&jl?Qe():-1!==Jl?Jl:Jl=Qe()}function nc(e){return 1&e.mode?2&jl&&0!==zl?zl&-zl:null!==go.transition?(0===Xl&&(Xl=gn()),Xl):0!==(e=yn)?e:e=void 0===(e=window.event)?16:Qn(e.type):1}function tc(e,n,t,r){if(50<Zl)throw Zl=0,Ql=null,Error(o(185));vn(e,t,r),2&jl&&e===_l||(e===_l&&(!(2&jl)&&(Ll|=t),4===Ol&&sc(e,zl)),rc(e,r),1===t&&0===jl&&!(1&n.mode)&&($l=Qe()+500,Ua&&$a()))}function rc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-sn(o),s=1<<i,l=a[i];-1===l?0!==(s&t)&&0===(s&r)||(a[i]=hn(s,n)):l<=n&&(e.expiredLanes|=s),o&=~s}}(e,n);var r=fn(e,e===_l?zl:0);if(0===r)null!==t&&Ve(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ve(t),1===n)0===e.tag?function(e){Ua=!0,Fa(e)}(lc.bind(null,e)):Fa(lc.bind(null,e)),ia(function(){!(6&jl)&&$a()}),t=null;else{switch(Cn(r)){case 1:t=Xe;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=_c(t,ac.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function ac(e,n){if(Jl=-1,Xl=0,6&jl)throw Error(o(327));var t=e.callbackNode;if(Ec()&&e.callbackNode!==t)return null;var r=fn(e,e===_l?zl:0);if(0===r)return null;if(30&r||0!==(r&e.expiredLanes)||n)n=gc(e,r);else{n=r;var a=jl;jl|=2;var i=hc();for(_l===e&&zl===n||(Yl=null,$l=Qe()+500,Ac(e,n));;)try{vc();break}catch(n){fc(e,n)}So(),wl.current=i,jl=a,null!==Nl?n=0:(_l=null,zl=0,n=Ol)}if(0!==n){if(2===n&&0!==(a=pn(e))&&(r=a,n=oc(e,a)),1===n)throw t=Pl,Ac(e,0),sc(e,r),rc(e,Qe()),t;if(6===n)sc(e,r);else{if(a=e.current.alternate,!(30&r||function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],o=a.getSnapshot;a=a.value;try{if(!sr(o(),a))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(a)||(n=gc(e,r),2===n&&(i=pn(e),0!==i&&(r=i,n=oc(e,i))),1!==n)))throw t=Pl,Ac(e,0),sc(e,r),rc(e,Qe()),t;switch(e.finishedWork=a,e.finishedLanes=r,n){case 0:case 1:throw Error(o(345));case 2:case 5:Cc(e,Ml,Yl);break;case 3:if(sc(e,r),(130023424&r)===r&&10<(n=Fl+500-Qe())){if(0!==fn(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Cc.bind(null,e,Ml,Yl),n);break}Cc(e,Ml,Yl);break;case 4:if(sc(e,r),(4194240&r)===r)break;for(n=e.eventTimes,a=-1;0<r;){var s=31-sn(r);i=1<<s,(s=n[s])>a&&(a=s),r&=~i}if(r=a,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*xl(r/1960))-r)){e.timeoutHandle=ra(Cc.bind(null,e,Ml,Yl),r);break}Cc(e,Ml,Yl);break;default:throw Error(o(329))}}}return rc(e,Qe()),e.callbackNode===t?ac.bind(null,e):null}function oc(e,n){var t=Ul;return e.current.memoizedState.isDehydrated&&(Ac(e,n).flags|=256),2!==(e=gc(e,n))&&(n=Ml,Ml=t,null!==n&&ic(n)),e}function ic(e){null===Ml?Ml=e:Ml.push.apply(Ml,e)}function sc(e,n){for(n&=~Rl,n&=~Ll,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-sn(n),r=1<<t;e[t]=-1,n&=~r}}function lc(e){if(6&jl)throw Error(o(327));Ec();var n=fn(e,0);if(!(1&n))return rc(e,Qe()),null;var t=gc(e,n);if(0!==e.tag&&2===t){var r=pn(e);0!==r&&(n=r,t=oc(e,r))}if(1===t)throw t=Pl,Ac(e,0),sc(e,n),rc(e,Qe()),t;if(6===t)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,Cc(e,Ml,Yl),rc(e,Qe()),null}function cc(e,n){var t=jl;jl|=1;try{return e(n)}finally{0===(jl=t)&&($l=Qe()+500,Ua&&$a())}}function uc(e){null!==Vl&&0===Vl.tag&&!(6&jl)&&Ec();var n=jl;jl|=1;var t=Sl.transition,r=yn;try{if(Sl.transition=null,yn=1,e)return e()}finally{yn=r,Sl.transition=t,!(6&(jl=n))&&$a()}}function dc(){Tl=Il.current,wa(Il)}function Ac(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,aa(t)),null!==Nl)for(t=Nl.return;null!==t;){var r=t;switch(no(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ia();break;case 3:Qo(),wa(_a),wa(ja),ri();break;case 5:Xo(r);break;case 4:Qo();break;case 13:case 19:wa(ei);break;case 10:jo(r.type._context);break;case 22:case 23:dc()}t=t.return}if(_l=e,Nl=e=Ic(e.current,null),zl=Tl=n,Ol=0,Pl=null,Rl=Ll=Dl=0,Ml=Ul=null,null!==To){for(n=0;n<To.length;n++)if(null!==(r=(t=To[n]).interleaved)){t.interleaved=null;var a=r.next,o=t.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}t.pending=r}To=null}return e}function fc(e,n){for(;;){var t=Nl;try{if(So(),ai.current=Ji,ui){for(var r=si.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ui=!1}if(ii=0,ci=li=si=null,di=!1,Ai=0,kl.current=null,null===t||null===t.return){Ol=1,Pl=n,Nl=null;break}e:{var i=e,s=t.return,l=t,c=n;if(n=zl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,d=l,A=d.tag;if(!(1&d.mode||0!==A&&11!==A&&15!==A)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var h=gs(s);if(null!==h){h.flags&=-257,ms(h,s,l,0,n),1&h.mode&&ps(i,u,n),c=u;var p=(n=h).updateQueue;if(null===p){var g=new Set;g.add(c),n.updateQueue=g}else p.add(c);break e}if(!(1&n)){ps(i,u,n),pc();break e}c=Error(o(426))}else if(ao&&1&l.mode){var m=gs(s);if(null!==m){!(65536&m.flags)&&(m.flags|=256),ms(m,s,l,0,n),po(cs(c,l));break e}}i=c=cs(c,l),4!==Ol&&(Ol=2),null===Ul?Ul=[i]:Ul.push(i),i=s;do{switch(i.tag){case 3:i.flags|=65536,n&=-n,i.lanes|=n,$o(i,fs(0,c,n));break e;case 1:l=c;var v=i.type,b=i.stateNode;if(!(128&i.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==Hl&&Hl.has(b)))){i.flags|=65536,n&=-n,i.lanes|=n,$o(i,hs(i,l,n));break e}}i=i.return}while(null!==i)}yc(t)}catch(e){n=e,Nl===t&&null!==t&&(Nl=t=t.return);continue}break}}function hc(){var e=wl.current;return wl.current=Ji,null===e?Ji:e}function pc(){0!==Ol&&3!==Ol&&2!==Ol||(Ol=4),null===_l||!(268435455&Dl)&&!(268435455&Ll)||sc(_l,zl)}function gc(e,n){var t=jl;jl|=2;var r=hc();for(_l===e&&zl===n||(Yl=null,Ac(e,n));;)try{mc();break}catch(n){fc(e,n)}if(So(),jl=t,wl.current=r,null!==Nl)throw Error(o(261));return _l=null,zl=0,Ol}function mc(){for(;null!==Nl;)bc(Nl)}function vc(){for(;null!==Nl&&!Ke();)bc(Nl)}function bc(e){var n=Bl(e.alternate,e,Tl);e.memoizedProps=e.pendingProps,null===n?yc(e):Nl=n,kl.current=null}function yc(e){var n=e;do{var t=n.alternate;if(e=n.return,32768&n.flags){if(null!==(t=Vs(t,n)))return t.flags&=32767,void(Nl=t);if(null===e)return Ol=6,void(Nl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(t=Gs(t,n,Tl)))return void(Nl=t);if(null!==(n=n.sibling))return void(Nl=n);Nl=n=e}while(null!==n);0===Ol&&(Ol=5)}function Cc(e,n,t){var r=yn,a=Sl.transition;try{Sl.transition=null,yn=1,function(e,n,t,r){do{Ec()}while(null!==Vl);if(6&jl)throw Error(o(327));t=e.finishedWork;var a=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var a=31-sn(t),o=1<<a;n[a]=0,r[a]=-1,e[a]=-1,t&=~o}}(e,i),e===_l&&(Nl=_l=null,zl=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||Gl||(Gl=!0,_c(nn,function(){return Ec(),null})),i=!!(15990&t.flags),15990&t.subtreeFlags||i){i=Sl.transition,Sl.transition=null;var s=yn;yn=1;var l=jl;jl|=4,kl.current=null,function(e,n){if(ea=Wn,fr(e=Ar())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{t.nodeType,i.nodeType}catch(e){t=null;break e}var s=0,l=-1,c=-1,u=0,d=0,A=e,f=null;n:for(;;){for(var h;A!==t||0!==a&&3!==A.nodeType||(l=s+a),A!==i||0!==r&&3!==A.nodeType||(c=s+r),3===A.nodeType&&(s+=A.nodeValue.length),null!==(h=A.firstChild);)f=A,A=h;for(;;){if(A===e)break n;if(f===t&&++u===a&&(l=s),f===i&&++d===r&&(c=s),null!==(h=A.nextSibling))break;f=(A=f).parentNode}A=h}t=-1===l||-1===c?null:{start:l,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(na={focusedElem:e,selectionRange:t},Wn=!1,Js=n;null!==Js;)if(e=(n=Js).child,1028&n.subtreeFlags&&null!==e)e.return=n,Js=e;else for(;null!==Js;){n=Js;try{var p=n.alternate;if(1024&n.flags)switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==p){var g=p.memoizedProps,m=p.memoizedState,v=n.stateNode,b=v.getSnapshotBeforeUpdate(n.elementType===n.type?g:ts(n.type,g),m);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var y=n.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(o(163))}}catch(e){xc(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,Js=e;break}Js=n.return}p=nl,nl=!1}(e,t),gl(t,e),hr(na),Wn=!!ea,na=ea=null,e.current=t,vl(t,e,a),Ze(),jl=l,yn=s,Sl.transition=i}else e.current=t;if(Gl&&(Gl=!1,Vl=e,Kl=a),0===(i=e.pendingLanes)&&(Hl=null),function(e){if(on&&"function"==typeof on.onCommitFiberRoot)try{on.onCommitFiberRoot(an,e,void 0,!(128&~e.current.flags))}catch(e){}}(t.stateNode),rc(e,Qe()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((a=n[t]).value,{componentStack:a.stack,digest:a.digest});if(ql)throw ql=!1,e=Wl,Wl=null,e;!!(1&Kl)&&0!==e.tag&&Ec(),1&(i=e.pendingLanes)?e===Ql?Zl++:(Zl=0,Ql=e):Zl=0,$a()}(e,n,t,r)}finally{Sl.transition=a,yn=r}return null}function Ec(){if(null!==Vl){var e=Cn(Kl),n=Sl.transition,t=yn;try{if(Sl.transition=null,yn=16>e?16:e,null===Vl)var r=!1;else{if(e=Vl,Vl=null,Kl=0,6&jl)throw Error(o(331));var a=jl;for(jl|=4,Js=e.current;null!==Js;){var i=Js,s=i.child;if(16&Js.flags){var l=i.deletions;if(null!==l){for(var c=0;c<l.length;c++){var u=l[c];for(Js=u;null!==Js;){var d=Js;switch(d.tag){case 0:case 11:case 15:tl(8,d,i)}var A=d.child;if(null!==A)A.return=d,Js=A;else for(;null!==Js;){var f=(d=Js).sibling,h=d.return;if(ol(d),d===u){Js=null;break}if(null!==f){f.return=h,Js=f;break}Js=h}}}var p=i.alternate;if(null!==p){var g=p.child;if(null!==g){p.child=null;do{var m=g.sibling;g.sibling=null,g=m}while(null!==g)}}Js=i}}if(2064&i.subtreeFlags&&null!==s)s.return=i,Js=s;else e:for(;null!==Js;){if(2048&(i=Js).flags)switch(i.tag){case 0:case 11:case 15:tl(9,i,i.return)}var v=i.sibling;if(null!==v){v.return=i.return,Js=v;break e}Js=i.return}}var b=e.current;for(Js=b;null!==Js;){var y=(s=Js).child;if(2064&s.subtreeFlags&&null!==y)y.return=s,Js=y;else e:for(s=b;null!==Js;){if(2048&(l=Js).flags)try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(e){xc(l,l.return,e)}if(l===s){Js=null;break e}var C=l.sibling;if(null!==C){C.return=l.return,Js=C;break e}Js=l.return}}if(jl=a,$a(),on&&"function"==typeof on.onPostCommitFiberRoot)try{on.onPostCommitFiberRoot(an,e)}catch(e){}r=!0}return r}finally{yn=t,Sl.transition=n}}return!1}function Bc(e,n,t){e=Mo(e,n=fs(0,n=cs(t,n),1),1),n=ec(),null!==e&&(vn(e,1,n),rc(e,n))}function xc(e,n,t){if(3===e.tag)Bc(e,e,t);else for(;null!==n;){if(3===n.tag){Bc(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r))){n=Mo(n,e=hs(n,e=cs(t,e),1),1),e=ec(),null!==n&&(vn(n,1,e),rc(n,e));break}}n=n.return}}function wc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=ec(),e.pingedLanes|=e.suspendedLanes&t,_l===e&&(zl&t)===t&&(4===Ol||3===Ol&&(130023424&zl)===zl&&500>Qe()-Fl?Ac(e,0):Rl|=t),rc(e,n)}function kc(e,n){0===n&&(1&e.mode?(n=dn,!(130023424&(dn<<=1))&&(dn=4194304)):n=1);var t=ec();null!==(e=Po(e,n))&&(vn(e,n,t),rc(e,t))}function Sc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),kc(e,t)}function jc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(n),kc(e,t)}function _c(e,n){return Ge(e,n)}function Nc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function zc(e,n,t,r){return new Nc(e,n,t,r)}function Tc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ic(e,n){var t=e.alternate;return null===t?((t=zc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Oc(e,n,t,r,a,i){var s=2;if(r=e,"function"==typeof e)Tc(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case B:return Pc(t.children,a,i,n);case x:s=8,a|=8;break;case w:return(e=zc(12,t,n,2|a)).elementType=w,e.lanes=i,e;case _:return(e=zc(13,t,n,a)).elementType=_,e.lanes=i,e;case N:return(e=zc(19,t,n,a)).elementType=N,e.lanes=i,e;case I:return Dc(t,a,i,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:s=10;break e;case S:s=9;break e;case j:s=11;break e;case z:s=14;break e;case T:s=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=zc(s,t,n,a)).elementType=e,n.type=r,n.lanes=i,n}function Pc(e,n,t,r){return(e=zc(7,e,r,n)).lanes=t,e}function Dc(e,n,t,r){return(e=zc(22,e,r,n)).elementType=I,e.lanes=t,e.stateNode={isHidden:!1},e}function Lc(e,n,t){return(e=zc(6,e,null,n)).lanes=t,e}function Rc(e,n,t){return(n=zc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Uc(e,n,t,r,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=mn(0),this.expirationTimes=mn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=mn(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Mc(e,n,t,r,a,o,i,s,l){return e=new Uc(e,n,t,s,l),1===n?(n=1,!0===o&&(n|=8)):n=0,o=zc(3,null,null,n),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lo(o),e}function Fc(e){if(!e)return Sa;e:{if($e(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Ta(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(o(171))}if(1===e.tag){var t=e.type;if(Ta(t))return Pa(e,t,n)}return n}function $c(e,n,t,r,a,o,i,s,l){return(e=Mc(t,r,!0,e,0,o,0,s,l)).context=Fc(null),t=e.current,(o=Uo(r=ec(),a=nc(t))).callback=null!=n?n:null,Mo(t,o,a),e.current.lanes=a,vn(e,a,r),rc(e,r),e}function Yc(e,n,t,r){var a=n.current,o=ec(),i=nc(a);return t=Fc(t),null===n.context?n.context=t:n.pendingContext=t,(n=Uo(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Mo(a,n,i))&&(tc(e,a,i,o),Fo(e,a,i)),i}function qc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Wc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Hc(e,n){Wc(e,n),(e=e.alternate)&&Wc(e,n)}Bl=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||_a.current)bs=!0;else{if(0===(e.lanes&t)&&!(128&n.flags))return bs=!1,function(e,n,t){switch(n.tag){case 3:_s(n),ho();break;case 5:Jo(n);break;case 1:Ta(n.type)&&Da(n);break;case 4:Zo(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,a=n.memoizedProps.value;ka(Bo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(ka(ei,1&ei.current),n.flags|=128,null):0!==(t&n.child.childLanes)?Ls(e,n,t):(ka(ei,1&ei.current),null!==(e=qs(e,n,t))?e.sibling:null);ka(ei,1&ei.current);break;case 19:if(r=0!==(t&n.childLanes),128&e.flags){if(r)return $s(e,n,t);n.flags|=128}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(ei,ei.current),r)break;return null;case 22:case 23:return n.lanes=0,xs(e,n,t)}return qs(e,n,t)}(e,n,t);bs=!!(131072&e.flags)}else bs=!1,ao&&1048576&n.flags&&Xa(n,Ha,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Ys(e,n),e=n.pendingProps;var a=za(n,ja.current);No(n,t),a=gi(null,n,r,e,a,t);var i=mi();return n.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Ta(r)?(i=!0,Da(n)):i=!1,n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Lo(n),a.updater=as,n.stateNode=a,a._reactInternals=n,ls(n,r,e,t),n=js(null,n,r,!0,i,t)):(n.tag=0,ao&&i&&eo(n),ys(null,n,a,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Ys(e,n),e=n.pendingProps,r=(a=r._init)(r._payload),n.type=r,a=n.tag=function(e){if("function"==typeof e)return Tc(e)?1:0;if(null!=e){if((e=e.$$typeof)===j)return 11;if(e===z)return 14}return 2}(r),e=ts(r,e),a){case 0:n=ks(null,n,r,e,t);break e;case 1:n=Ss(null,n,r,e,t);break e;case 11:n=Cs(null,n,r,e,t);break e;case 14:n=Es(null,n,r,ts(r.type,e),t);break e}throw Error(o(306,r,""))}return n;case 0:return r=n.type,a=n.pendingProps,ks(e,n,r,a=n.elementType===r?a:ts(r,a),t);case 1:return r=n.type,a=n.pendingProps,Ss(e,n,r,a=n.elementType===r?a:ts(r,a),t);case 3:e:{if(_s(n),null===e)throw Error(o(387));r=n.pendingProps,a=(i=n.memoizedState).element,Ro(e,n),Yo(n,r,null,t);var s=n.memoizedState;if(r=s.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},n.updateQueue.baseState=i,n.memoizedState=i,256&n.flags){n=Ns(e,n,r,t,a=cs(Error(o(423)),n));break e}if(r!==a){n=Ns(e,n,r,t,a=cs(Error(o(424)),n));break e}for(ro=ca(n.stateNode.containerInfo.firstChild),to=n,ao=!0,oo=null,t=Eo(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(ho(),r===a){n=qs(e,n,t);break e}ys(e,n,r,t)}n=n.child}return n;case 5:return Jo(n),null===e&&co(n),r=n.type,a=n.pendingProps,i=null!==e?e.memoizedProps:null,s=a.children,ta(r,a)?s=null:null!==i&&ta(r,i)&&(n.flags|=32),ws(e,n),ys(e,n,s,t),n.child;case 6:return null===e&&co(n),null;case 13:return Ls(e,n,t);case 4:return Zo(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Co(n,null,r,t):ys(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,Cs(e,n,r,a=n.elementType===r?a:ts(r,a),t);case 7:return ys(e,n,n.pendingProps,t),n.child;case 8:case 12:return ys(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,a=n.pendingProps,i=n.memoizedProps,s=a.value,ka(Bo,r._currentValue),r._currentValue=s,null!==i)if(sr(i.value,s)){if(i.children===a.children&&!_a.current){n=qs(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var l=i.dependencies;if(null!==l){s=i.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=Uo(-1,t&-t)).tag=2;var u=i.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),u.pending=c}}i.lanes|=t,null!==(c=i.alternate)&&(c.lanes|=t),_o(i.return,t,n),l.lanes|=t;break}c=c.next}}else if(10===i.tag)s=i.type===n.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(o(341));s.lanes|=t,null!==(l=s.alternate)&&(l.lanes|=t),_o(s,t,n),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===n){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}ys(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=n.pendingProps.children,No(n,t),r=r(a=zo(a)),n.flags|=1,ys(e,n,r,t),n.child;case 14:return a=ts(r=n.type,n.pendingProps),Es(e,n,r,a=ts(r.type,a),t);case 15:return Bs(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:ts(r,a),Ys(e,n),n.tag=1,Ta(r)?(e=!0,Da(n)):e=!1,No(n,t),is(n,r,a),ls(n,r,a,t),js(null,n,r,!0,e,t);case 19:return $s(e,n,t);case 22:return xs(e,n,t)}throw Error(o(156,n.tag))};var Gc="function"==typeof reportError?reportError:function(e){console.error(e)};function Vc(e){this._internalRoot=e}function Kc(e){this._internalRoot=e}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function Xc(e,n,t,r,a){var o=t._reactRootContainer;if(o){var i=o;if("function"==typeof a){var s=a;a=function(){var e=qc(i);s.call(e)}}Yc(n,i,e,a)}else i=function(e,n,t,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=qc(i);o.call(e)}}var i=$c(n,r,e,0,null,!1,0,"",Jc);return e._reactRootContainer=i,e[ha]=i.current,$r(8===e.nodeType?e.parentNode:e),uc(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var s=r;r=function(){var e=qc(l);s.call(e)}}var l=Mc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=l,e[ha]=l.current,$r(8===e.nodeType?e.parentNode:e),uc(function(){Yc(n,l,t,r)}),l}(t,n,e,a,r);return qc(i)}Kc.prototype.render=Vc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(o(409));Yc(e,n,null,null)},Kc.prototype.unmount=Vc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;uc(function(){Yc(null,e,null,null)}),n[ha]=null}},Kc.prototype.unstable_scheduleHydration=function(e){if(e){var n=wn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<On.length&&0!==n&&n<On[t].priority;t++);On.splice(t,0,e),0===t&&Rn(e)}},En=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=An(n.pendingLanes);0!==t&&(bn(n,1|t),rc(n,Qe()),!(6&jl)&&($l=Qe()+500,$a()))}break;case 13:uc(function(){var n=Po(e,1);if(null!==n){var t=ec();tc(n,e,1,t)}}),Hc(e,1)}},Bn=function(e){if(13===e.tag){var n=Po(e,134217728);null!==n&&tc(n,e,134217728,ec()),Hc(e,134217728)}},xn=function(e){if(13===e.tag){var n=nc(e),t=Po(e,n);null!==t&&tc(t,e,n,ec()),Hc(e,n)}},wn=function(){return yn},kn=function(e,n){var t=yn;try{return yn=e,n()}finally{yn=t}},Ee=function(e,n,t){switch(n){case"input":if(J(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=Ca(r);if(!a)throw Error(o(90));G(r),J(r,a)}}}break;case"textarea":oe(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},je=cc,_e=uc;var eu={usingClientEntryPoint:!1,Events:[ba,ya,Ca,ke,Se,cc]},nu={findFiberByHostInstance:va,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tu={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{an=ru.inject(tu),on=ru}catch(ue){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zc(n))throw Error(o(200));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Zc(e))throw Error(o(299));var t=!1,r="",a=Gc;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(a=n.onRecoverableError)),n=Mc(e,1,!1,null,0,t,0,r,a),e[ha]=n.current,$r(8===e.nodeType?e.parentNode:e),new Vc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=We(n))?null:e.stateNode},n.flushSync=function(e){return uc(e)},n.hydrate=function(e,n,t){if(!Qc(n))throw Error(o(200));return Xc(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Zc(e))throw Error(o(405));var r=null!=t&&t.hydratedSources||null,a=!1,i="",s=Gc;if(null!=t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),n=$c(n,null,e,1,null!=t?t:null,a,0,i,s),e[ha]=n.current,$r(e),r)for(e=0;e<r.length;e++)a=(a=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a);return new Kc(n)},n.render=function(e,n,t){if(!Qc(n))throw Error(o(200));return Xc(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Qc(e))throw Error(o(40));return!!e._reactRootContainer&&(uc(function(){Xc(null,null,e,!1,function(){e._reactRootContainer=null,e[ha]=null})}),!0)},n.unstable_batchedUpdates=cc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Qc(t))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return Xc(e,n,t,!1,r)},n.version="18.3.1-next-f1338f8080-20240426"},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},660:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=r(t(907)),o=r(t(818));n.default=class{constructor(e){this.shouldThrowOnError=!1,this.method=e.method,this.url=e.url,this.headers=e.headers,this.schema=e.schema,this.body=e.body,this.shouldThrowOnError=e.shouldThrowOnError,this.signal=e.signal,this.isMaybeSingle=e.isMaybeSingle,e.fetch?this.fetch=e.fetch:"undefined"==typeof fetch?this.fetch=a.default:this.fetch=fetch}throwOnError(){return this.shouldThrowOnError=!0,this}setHeader(e,n){return this.headers=Object.assign({},this.headers),this.headers[e]=n,this}then(e,n){void 0===this.schema||(["GET","HEAD"].includes(this.method)?this.headers["Accept-Profile"]=this.schema:this.headers["Content-Profile"]=this.schema),"GET"!==this.method&&"HEAD"!==this.method&&(this.headers["Content-Type"]="application/json");let t=(0,this.fetch)(this.url.toString(),{method:this.method,headers:this.headers,body:JSON.stringify(this.body),signal:this.signal}).then(async e=>{var n,t,r;let a=null,i=null,s=null,l=e.status,c=e.statusText;if(e.ok){if("HEAD"!==this.method){const n=await e.text();""===n||(i="text/csv"===this.headers.Accept||this.headers.Accept&&this.headers.Accept.includes("application/vnd.pgrst.plan+text")?n:JSON.parse(n))}const r=null===(n=this.headers.Prefer)||void 0===n?void 0:n.match(/count=(exact|planned|estimated)/),o=null===(t=e.headers.get("content-range"))||void 0===t?void 0:t.split("/");r&&o&&o.length>1&&(s=parseInt(o[1])),this.isMaybeSingle&&"GET"===this.method&&Array.isArray(i)&&(i.length>1?(a={code:"PGRST116",details:`Results contain ${i.length} rows, application/vnd.pgrst.object+json requires 1 row`,hint:null,message:"JSON object requested, multiple (or no) rows returned"},i=null,s=null,l=406,c="Not Acceptable"):i=1===i.length?i[0]:null)}else{const n=await e.text();try{a=JSON.parse(n),Array.isArray(a)&&404===e.status&&(i=[],a=null,l=200,c="OK")}catch(t){404===e.status&&""===n?(l=204,c="No Content"):a={message:n}}if(a&&this.isMaybeSingle&&(null===(r=null==a?void 0:a.details)||void 0===r?void 0:r.includes("0 rows"))&&(a=null,l=200,c="OK"),a&&this.shouldThrowOnError)throw new o.default(a)}return{error:a,data:i,count:s,status:l,statusText:c}});return this.shouldThrowOnError||(t=t.catch(e=>{var n,t,r;return{error:{message:`${null!==(n=null==e?void 0:e.name)&&void 0!==n?n:"FetchError"}: ${null==e?void 0:e.message}`,details:`${null!==(t=null==e?void 0:e.stack)&&void 0!==t?t:""}`,hint:"",code:`${null!==(r=null==e?void 0:e.code)&&void 0!==r?r:""}`},data:null,count:null,status:0,statusText:""}})),t.then(e,n)}returns(){return this}overrideTypes(){return this}}},691:e=>{e.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2716%27 height=%2716%27 fill=%27none%27 viewBox=%270 0 24 24%27 stroke=%27%2394a3b8%27 stroke-width=%272%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3E%3Cpath d=%27m6 9 6 6 6-6%27/%3E%3C/svg%3E"},818:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});class t extends Error{constructor(e){super(e.message),this.name="PostgrestError",this.details=e.details,this.hint=e.hint,this.code=e.code}}n.default=t},825:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const a=r(t(261));class o extends a.default{eq(e,n){return this.url.searchParams.append(e,`eq.${n}`),this}neq(e,n){return this.url.searchParams.append(e,`neq.${n}`),this}gt(e,n){return this.url.searchParams.append(e,`gt.${n}`),this}gte(e,n){return this.url.searchParams.append(e,`gte.${n}`),this}lt(e,n){return this.url.searchParams.append(e,`lt.${n}`),this}lte(e,n){return this.url.searchParams.append(e,`lte.${n}`),this}like(e,n){return this.url.searchParams.append(e,`like.${n}`),this}likeAllOf(e,n){return this.url.searchParams.append(e,`like(all).{${n.join(",")}}`),this}likeAnyOf(e,n){return this.url.searchParams.append(e,`like(any).{${n.join(",")}}`),this}ilike(e,n){return this.url.searchParams.append(e,`ilike.${n}`),this}ilikeAllOf(e,n){return this.url.searchParams.append(e,`ilike(all).{${n.join(",")}}`),this}ilikeAnyOf(e,n){return this.url.searchParams.append(e,`ilike(any).{${n.join(",")}}`),this}is(e,n){return this.url.searchParams.append(e,`is.${n}`),this}in(e,n){const t=Array.from(new Set(n)).map(e=>"string"==typeof e&&new RegExp("[,()]").test(e)?`"${e}"`:`${e}`).join(",");return this.url.searchParams.append(e,`in.(${t})`),this}contains(e,n){return"string"==typeof n?this.url.searchParams.append(e,`cs.${n}`):Array.isArray(n)?this.url.searchParams.append(e,`cs.{${n.join(",")}}`):this.url.searchParams.append(e,`cs.${JSON.stringify(n)}`),this}containedBy(e,n){return"string"==typeof n?this.url.searchParams.append(e,`cd.${n}`):Array.isArray(n)?this.url.searchParams.append(e,`cd.{${n.join(",")}}`):this.url.searchParams.append(e,`cd.${JSON.stringify(n)}`),this}rangeGt(e,n){return this.url.searchParams.append(e,`sr.${n}`),this}rangeGte(e,n){return this.url.searchParams.append(e,`nxl.${n}`),this}rangeLt(e,n){return this.url.searchParams.append(e,`sl.${n}`),this}rangeLte(e,n){return this.url.searchParams.append(e,`nxr.${n}`),this}rangeAdjacent(e,n){return this.url.searchParams.append(e,`adj.${n}`),this}overlaps(e,n){return"string"==typeof n?this.url.searchParams.append(e,`ov.${n}`):this.url.searchParams.append(e,`ov.{${n.join(",")}}`),this}textSearch(e,n,{config:t,type:r}={}){let a="";"plain"===r?a="pl":"phrase"===r?a="ph":"websearch"===r&&(a="w");const o=void 0===t?"":`(${t})`;return this.url.searchParams.append(e,`${a}fts${o}.${n}`),this}match(e){return Object.entries(e).forEach(([e,n])=>{this.url.searchParams.append(e,`eq.${n}`)}),this}not(e,n,t){return this.url.searchParams.append(e,`not.${n}.${t}`),this}or(e,{foreignTable:n,referencedTable:t=n}={}){const r=t?`${t}.or`:"or";return this.url.searchParams.append(r,`(${e})`),this}filter(e,n,t){return this.url.searchParams.append(e,`${n}.${t}`),this}}n.default=o},848:(e,n,t)=>{e.exports=t(20)},907:(e,n,t)=>{t.r(n),t.d(n,{Headers:()=>i,Request:()=>s,Response:()=>l,default:()=>o,fetch:()=>a});var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error("unable to locate global object")}();const a=r.fetch,o=r.fetch.bind(r),i=r.Headers,s=r.Request,l=r.Response},961:(e,n,t)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(551)},982:(e,n,t)=>{e.exports=t(463)}},r={};function a(e){var n=r[e];if(void 0!==n)return n.exports;var o=r[e]={id:e,exports:{}};return t[e].call(o.exports,o,o.exports,a),o.exports}a.m=t,a.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return a.d(n,{a:n}),n},a.d=(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce((n,t)=>(a.f[t](e,n),n),[])),a.u=e=>e+".js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),e={},n="nest-chrome-extension:",a.l=(t,r,o,i)=>{if(e[t])e[t].push(r);else{var s,l;if(void 0!==o)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==t||d.getAttribute("data-webpack")==n+o){s=d;break}}s||(l=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",n+o),s.src=t),e[t]=[r];var A=(n,r)=>{s.onerror=s.onload=null,clearTimeout(f);var a=e[t];if(delete e[t],s.parentNode&&s.parentNode.removeChild(s),a&&a.forEach(e=>e(r)),n)return n(r)},f=setTimeout(A.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=A.bind(null,s.onerror),s.onload=A.bind(null,s.onload),l&&document.head.appendChild(s)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var n=a.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=t[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{a.b=document.baseURI||self.location.href;var e={508:0,796:0};a.f.j=(n,t)=>{var r=a.o(e,n)?e[n]:void 0;if(0!==r)if(r)t.push(r[2]);else{var o=new Promise((t,a)=>r=e[n]=[t,a]);t.push(r[2]=o);var i=a.p+a.u(n),s=new Error;a.l(i,t=>{if(a.o(e,n)&&(0!==(r=e[n])&&(e[n]=void 0),r)){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;s.message="Loading chunk "+n+" failed.\n("+o+": "+i+")",s.name="ChunkLoadError",s.type=o,s.request=i,r[1](s)}},"chunk-"+n,n)}};var n=(n,t)=>{var r,o,[i,s,l]=t,c=0;if(i.some(n=>0!==e[n])){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);l&&l(a)}for(n&&n(t);c<i.length;c++)o=i[c],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0},t=self.webpackChunknest_chrome_extension=self.webpackChunknest_chrome_extension||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})(),a.nc=void 0;var o=a(540),i=a(338),s={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const l=(e,n)=>{const t=(0,o.forwardRef)(({color:t="currentColor",size:r=24,strokeWidth:a=2,absoluteStrokeWidth:i,className:l="",children:c,...u},d)=>{return(0,o.createElement)("svg",{ref:d,...s,width:r,height:r,stroke:t,strokeWidth:i?24*Number(a)/Number(r):a,className:["lucide",`lucide-${A=e,A.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase().trim()}`,l].join(" "),...u},[...n.map(([e,n])=>(0,o.createElement)(e,n)),...Array.isArray(c)?c:[c]]);var A});return t.displayName=`${e}`,t},c=l("Bookmark",[["path",{d:"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z",key:"1fy3hk"}]]),u=l("TabletSmartphone",[["rect",{width:"10",height:"14",x:"3",y:"8",rx:"2",key:"1vrsiq"}],["path",{d:"M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4",key:"1j4zmg"}],["path",{d:"M8 18h.01",key:"lrp35t"}]]),d=l("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]),A=l("LogOut",[["path",{d:"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4",key:"1uf3rs"}],["polyline",{points:"16 17 21 12 16 7",key:"1gabdz"}],["line",{x1:"21",x2:"9",y1:"12",y2:"12",key:"1uyos4"}]]),f=l("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]),h=l("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]),p=l("Command",[["path",{d:"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3",key:"11bfej"}]]),g=l("Tag",[["path",{d:"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z",key:"14b2ls"}],["path",{d:"M7 7h.01",key:"7u93v4"}]]),m=l("ChevronDown",[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]]),v=l("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]]),b=l("Inbox",[["polyline",{points:"22 12 16 12 14 15 10 15 8 12 2 12",key:"o97t9d"}],["path",{d:"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",key:"oot6mr"}]]),y=l("CheckSquare",[["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}],["path",{d:"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11",key:"1jnkn4"}]]),C=l("Archive",[["rect",{width:"20",height:"5",x:"2",y:"3",rx:"1",key:"1wp1u1"}],["path",{d:"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8",key:"1s80jp"}],["path",{d:"M10 12h4",key:"a56b0p"}]]),E=l("Sparkles",[["path",{d:"m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z",key:"17u4zn"}],["path",{d:"M5 3v4",key:"bklmnn"}],["path",{d:"M19 17v4",key:"iiml17"}],["path",{d:"M3 5h4",key:"nem4j1"}],["path",{d:"M17 19h4",key:"lbex7p"}]]),B=l("FolderPlus",[["path",{d:"M12 10v6",key:"1bos4e"}],["path",{d:"M9 13h6",key:"1uhe8q"}],["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),x=l("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);class w extends Error{constructor(e,n="FunctionsError",t){super(e),this.name=n,this.context=t}}class k extends w{constructor(e){super("Failed to send a request to the Edge Function","FunctionsFetchError",e)}}class S extends w{constructor(e){super("Relay Error invoking the Edge Function","FunctionsRelayError",e)}}class j extends w{constructor(e){super("Edge Function returned a non-2xx status code","FunctionsHttpError",e)}}var _;!function(e){e.Any="any",e.ApNortheast1="ap-northeast-1",e.ApNortheast2="ap-northeast-2",e.ApSouth1="ap-south-1",e.ApSoutheast1="ap-southeast-1",e.ApSoutheast2="ap-southeast-2",e.CaCentral1="ca-central-1",e.EuCentral1="eu-central-1",e.EuWest1="eu-west-1",e.EuWest2="eu-west-2",e.EuWest3="eu-west-3",e.SaEast1="sa-east-1",e.UsEast1="us-east-1",e.UsWest1="us-west-1",e.UsWest2="us-west-2"}(_||(_={}));class N{constructor(e,{headers:n={},customFetch:t,region:r=_.Any}={}){this.url=e,this.headers=n,this.region=r,this.fetch=(e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(a.bind(a,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)})(t)}setAuth(e){this.headers.Authorization=`Bearer ${e}`}invoke(e,n={}){var t,r,a,o,i;return r=this,a=void 0,i=function*(){try{const{headers:r,method:a,body:o}=n;let i={},{region:s}=n;s||(s=this.region);const l=new URL(`${this.url}/${e}`);let c;s&&"any"!==s&&(i["x-region"]=s,l.searchParams.set("forceFunctionRegion",s)),o&&(r&&!Object.prototype.hasOwnProperty.call(r,"Content-Type")||!r)&&("undefined"!=typeof Blob&&o instanceof Blob||o instanceof ArrayBuffer?(i["Content-Type"]="application/octet-stream",c=o):"string"==typeof o?(i["Content-Type"]="text/plain",c=o):"undefined"!=typeof FormData&&o instanceof FormData?c=o:(i["Content-Type"]="application/json",c=JSON.stringify(o)));const u=yield this.fetch(l.toString(),{method:a||"POST",headers:Object.assign(Object.assign(Object.assign({},i),this.headers),r),body:c}).catch(e=>{throw new k(e)}),d=u.headers.get("x-relay-error");if(d&&"true"===d)throw new S(u);if(!u.ok)throw new j(u);let A,f=(null!==(t=u.headers.get("Content-Type"))&&void 0!==t?t:"text/plain").split(";")[0].trim();return A="application/json"===f?yield u.json():"application/octet-stream"===f?yield u.blob():"text/event-stream"===f?u:"multipart/form-data"===f?yield u.formData():yield u.text(),{data:A,error:null,response:u}}catch(e){return{data:null,error:e,response:e instanceof j||e instanceof S?e.context:void 0}}},new((o=void 0)||(o=Promise))(function(e,n){function t(e){try{l(i.next(e))}catch(e){n(e)}}function s(e){try{l(i.throw(e))}catch(e){n(e)}}function l(n){var r;n.done?e(n.value):(r=n.value,r instanceof o?r:new o(function(e){e(r)})).then(t,s)}l((i=i.apply(r,a||[])).next())})}}var z=a(279);const{PostgrestClient:T,PostgrestQueryBuilder:I,PostgrestFilterBuilder:O,PostgrestTransformBuilder:P,PostgrestBuilder:D,PostgrestError:L}=z,R=function(){if("undefined"!=typeof WebSocket)return WebSocket;if(void 0!==global.WebSocket)return global.WebSocket;if(void 0!==window.WebSocket)return window.WebSocket;if(void 0!==self.WebSocket)return self.WebSocket;throw new Error("`WebSocket` is not supported in this environment")}();var U,M,F,$,Y,q,W;!function(e){e[e.connecting=0]="connecting",e[e.open=1]="open",e[e.closing=2]="closing",e[e.closed=3]="closed"}(U||(U={})),(W=M||(M={})).closed="closed",W.errored="errored",W.joined="joined",W.joining="joining",W.leaving="leaving",function(e){e.close="phx_close",e.error="phx_error",e.join="phx_join",e.reply="phx_reply",e.leave="phx_leave",e.access_token="access_token"}(F||(F={})),function(e){e.websocket="websocket"}($||($={})),function(e){e.Connecting="connecting",e.Open="open",e.Closing="closing",e.Closed="closed"}(Y||(Y={}));class H{constructor(){this.HEADER_LENGTH=1}decode(e,n){return e.constructor===ArrayBuffer?n(this._binaryDecode(e)):n("string"==typeof e?JSON.parse(e):{})}_binaryDecode(e){const n=new DataView(e),t=new TextDecoder;return this._decodeBroadcast(e,n,t)}_decodeBroadcast(e,n,t){const r=n.getUint8(1),a=n.getUint8(2);let o=this.HEADER_LENGTH+2;const i=t.decode(e.slice(o,o+r));o+=r;const s=t.decode(e.slice(o,o+a));return o+=a,{ref:null,topic:i,event:s,payload:JSON.parse(t.decode(e.slice(o,e.byteLength)))}}}class G{constructor(e,n){this.callback=e,this.timerCalc=n,this.timer=void 0,this.tries=0,this.callback=e,this.timerCalc=n}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}}!function(e){e.abstime="abstime",e.bool="bool",e.date="date",e.daterange="daterange",e.float4="float4",e.float8="float8",e.int2="int2",e.int4="int4",e.int4range="int4range",e.int8="int8",e.int8range="int8range",e.json="json",e.jsonb="jsonb",e.money="money",e.numeric="numeric",e.oid="oid",e.reltime="reltime",e.text="text",e.time="time",e.timestamp="timestamp",e.timestamptz="timestamptz",e.timetz="timetz",e.tsrange="tsrange",e.tstzrange="tstzrange"}(q||(q={}));const V=(e,n,t={})=>{var r;const a=null!==(r=t.skipTypes)&&void 0!==r?r:[];return Object.keys(n).reduce((t,r)=>(t[r]=K(r,e,n,a),t),{})},K=(e,n,t,r)=>{const a=n.find(n=>n.name===e),o=null==a?void 0:a.type,i=t[e];return o&&!r.includes(o)?Z(o,i):Q(i)},Z=(e,n)=>{if("_"===e.charAt(0)){const t=e.slice(1,e.length);return ne(n,t)}switch(e){case q.bool:return J(n);case q.float4:case q.float8:case q.int2:case q.int4:case q.int8:case q.numeric:case q.oid:return X(n);case q.json:case q.jsonb:return ee(n);case q.timestamp:return te(n);case q.abstime:case q.date:case q.daterange:case q.int4range:case q.int8range:case q.money:case q.reltime:case q.text:case q.time:case q.timestamptz:case q.timetz:case q.tsrange:case q.tstzrange:default:return Q(n)}},Q=e=>e,J=e=>{switch(e){case"t":return!0;case"f":return!1;default:return e}},X=e=>{if("string"==typeof e){const n=parseFloat(e);if(!Number.isNaN(n))return n}return e},ee=e=>{if("string"==typeof e)try{return JSON.parse(e)}catch(n){return console.log(`JSON parse error: ${n}`),e}return e},ne=(e,n)=>{if("string"!=typeof e)return e;const t=e.length-1,r=e[t];if("{"===e[0]&&"}"===r){let r;const a=e.slice(1,t);try{r=JSON.parse("["+a+"]")}catch(e){r=a?a.split(","):[]}return r.map(e=>Z(n,e))}return e},te=e=>"string"==typeof e?e.replace(" ","T"):e,re=e=>{let n=e;return n=n.replace(/^ws/i,"http"),n=n.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i,""),n.replace(/\/+$/,"")};class ae{constructor(e,n,t={},r=1e4){this.channel=e,this.event=n,this.payload=t,this.timeout=r,this.sent=!1,this.timeoutTimer=void 0,this.ref="",this.receivedResp=null,this.recHooks=[],this.refEvent=null}resend(e){this.timeout=e,this._cancelRefEvent(),this.ref="",this.refEvent=null,this.receivedResp=null,this.sent=!1,this.send()}send(){this._hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload,ref:this.ref,join_ref:this.channel._joinRef()}))}updatePayload(e){this.payload=Object.assign(Object.assign({},this.payload),e)}receive(e,n){var t;return this._hasReceived(e)&&n(null===(t=this.receivedResp)||void 0===t?void 0:t.response),this.recHooks.push({status:e,callback:n}),this}startTimeout(){this.timeoutTimer||(this.ref=this.channel.socket._makeRef(),this.refEvent=this.channel._replyEventName(this.ref),this.channel._on(this.refEvent,{},e=>{this._cancelRefEvent(),this._cancelTimeout(),this.receivedResp=e,this._matchReceive(e)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout))}trigger(e,n){this.refEvent&&this.channel._trigger(this.refEvent,{status:e,response:n})}destroy(){this._cancelRefEvent(),this._cancelTimeout()}_cancelRefEvent(){this.refEvent&&this.channel._off(this.refEvent,{})}_cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=void 0}_matchReceive({status:e,response:n}){this.recHooks.filter(n=>n.status===e).forEach(e=>e.callback(n))}_hasReceived(e){return this.receivedResp&&this.receivedResp.status===e}}var oe,ie,se,le;!function(e){e.SYNC="sync",e.JOIN="join",e.LEAVE="leave"}(oe||(oe={}));class ce{constructor(e,n){this.channel=e,this.state={},this.pendingDiffs=[],this.joinRef=null,this.caller={onJoin:()=>{},onLeave:()=>{},onSync:()=>{}};const t=(null==n?void 0:n.events)||{state:"presence_state",diff:"presence_diff"};this.channel._on(t.state,{},e=>{const{onJoin:n,onLeave:t,onSync:r}=this.caller;this.joinRef=this.channel._joinRef(),this.state=ce.syncState(this.state,e,n,t),this.pendingDiffs.forEach(e=>{this.state=ce.syncDiff(this.state,e,n,t)}),this.pendingDiffs=[],r()}),this.channel._on(t.diff,{},e=>{const{onJoin:n,onLeave:t,onSync:r}=this.caller;this.inPendingSyncState()?this.pendingDiffs.push(e):(this.state=ce.syncDiff(this.state,e,n,t),r())}),this.onJoin((e,n,t)=>{this.channel._trigger("presence",{event:"join",key:e,currentPresences:n,newPresences:t})}),this.onLeave((e,n,t)=>{this.channel._trigger("presence",{event:"leave",key:e,currentPresences:n,leftPresences:t})}),this.onSync(()=>{this.channel._trigger("presence",{event:"sync"})})}static syncState(e,n,t,r){const a=this.cloneDeep(e),o=this.transformState(n),i={},s={};return this.map(a,(e,n)=>{o[e]||(s[e]=n)}),this.map(o,(e,n)=>{const t=a[e];if(t){const r=n.map(e=>e.presence_ref),a=t.map(e=>e.presence_ref),o=n.filter(e=>a.indexOf(e.presence_ref)<0),l=t.filter(e=>r.indexOf(e.presence_ref)<0);o.length>0&&(i[e]=o),l.length>0&&(s[e]=l)}else i[e]=n}),this.syncDiff(a,{joins:i,leaves:s},t,r)}static syncDiff(e,n,t,r){const{joins:a,leaves:o}={joins:this.transformState(n.joins),leaves:this.transformState(n.leaves)};return t||(t=()=>{}),r||(r=()=>{}),this.map(a,(n,r)=>{var a;const o=null!==(a=e[n])&&void 0!==a?a:[];if(e[n]=this.cloneDeep(r),o.length>0){const t=e[n].map(e=>e.presence_ref),r=o.filter(e=>t.indexOf(e.presence_ref)<0);e[n].unshift(...r)}t(n,o,r)}),this.map(o,(n,t)=>{let a=e[n];if(!a)return;const o=t.map(e=>e.presence_ref);a=a.filter(e=>o.indexOf(e.presence_ref)<0),e[n]=a,r(n,a,t),0===a.length&&delete e[n]}),e}static map(e,n){return Object.getOwnPropertyNames(e).map(t=>n(t,e[t]))}static transformState(e){return e=this.cloneDeep(e),Object.getOwnPropertyNames(e).reduce((n,t)=>{const r=e[t];return n[t]="metas"in r?r.metas.map(e=>(e.presence_ref=e.phx_ref,delete e.phx_ref,delete e.phx_ref_prev,e)):r,n},{})}static cloneDeep(e){return JSON.parse(JSON.stringify(e))}onJoin(e){this.caller.onJoin=e}onLeave(e){this.caller.onLeave=e}onSync(e){this.caller.onSync=e}inPendingSyncState(){return!this.joinRef||this.joinRef!==this.channel._joinRef()}}!function(e){e.ALL="*",e.INSERT="INSERT",e.UPDATE="UPDATE",e.DELETE="DELETE"}(ie||(ie={})),function(e){e.BROADCAST="broadcast",e.PRESENCE="presence",e.POSTGRES_CHANGES="postgres_changes",e.SYSTEM="system"}(se||(se={})),function(e){e.SUBSCRIBED="SUBSCRIBED",e.TIMED_OUT="TIMED_OUT",e.CLOSED="CLOSED",e.CHANNEL_ERROR="CHANNEL_ERROR"}(le||(le={}));class ue{constructor(e,n={config:{}},t){this.topic=e,this.params=n,this.socket=t,this.bindings={},this.state=M.closed,this.joinedOnce=!1,this.pushBuffer=[],this.subTopic=e.replace(/^realtime:/i,""),this.params.config=Object.assign({broadcast:{ack:!1,self:!1},presence:{key:""},private:!1},n.config),this.timeout=this.socket.timeout,this.joinPush=new ae(this,F.join,this.params,this.timeout),this.rejoinTimer=new G(()=>this._rejoinUntilConnected(),this.socket.reconnectAfterMs),this.joinPush.receive("ok",()=>{this.state=M.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(e=>e.send()),this.pushBuffer=[]}),this._onClose(()=>{this.rejoinTimer.reset(),this.socket.log("channel",`close ${this.topic} ${this._joinRef()}`),this.state=M.closed,this.socket._remove(this)}),this._onError(e=>{this._isLeaving()||this._isClosed()||(this.socket.log("channel",`error ${this.topic}`,e),this.state=M.errored,this.rejoinTimer.scheduleTimeout())}),this.joinPush.receive("timeout",()=>{this._isJoining()&&(this.socket.log("channel",`timeout ${this.topic}`,this.joinPush.timeout),this.state=M.errored,this.rejoinTimer.scheduleTimeout())}),this._on(F.reply,{},(e,n)=>{this._trigger(this._replyEventName(n),e)}),this.presence=new ce(this),this.broadcastEndpointURL=re(this.socket.endPoint)+"/api/broadcast",this.private=this.params.config.private||!1}subscribe(e,n=this.timeout){var t,r;if(this.socket.isConnected()||this.socket.connect(),this.state==M.closed){const{config:{broadcast:a,presence:o,private:i}}=this.params;this._onError(n=>null==e?void 0:e(le.CHANNEL_ERROR,n)),this._onClose(()=>null==e?void 0:e(le.CLOSED));const s={},l={broadcast:a,presence:o,postgres_changes:null!==(r=null===(t=this.bindings.postgres_changes)||void 0===t?void 0:t.map(e=>e.filter))&&void 0!==r?r:[],private:i};this.socket.accessTokenValue&&(s.access_token=this.socket.accessTokenValue),this.updateJoinPayload(Object.assign({config:l},s)),this.joinedOnce=!0,this._rejoin(n),this.joinPush.receive("ok",async({postgres_changes:n})=>{var t;if(this.socket.setAuth(),void 0!==n){const r=this.bindings.postgres_changes,a=null!==(t=null==r?void 0:r.length)&&void 0!==t?t:0,o=[];for(let t=0;t<a;t++){const a=r[t],{filter:{event:i,schema:s,table:l,filter:c}}=a,u=n&&n[t];if(!u||u.event!==i||u.schema!==s||u.table!==l||u.filter!==c)return this.unsubscribe(),this.state=M.errored,void(null==e||e(le.CHANNEL_ERROR,new Error("mismatch between server and client bindings for postgres changes")));o.push(Object.assign(Object.assign({},a),{id:u.id}))}return this.bindings.postgres_changes=o,void(e&&e(le.SUBSCRIBED))}null==e||e(le.SUBSCRIBED)}).receive("error",n=>{this.state=M.errored,null==e||e(le.CHANNEL_ERROR,new Error(JSON.stringify(Object.values(n).join(", ")||"error")))}).receive("timeout",()=>{null==e||e(le.TIMED_OUT)})}return this}presenceState(){return this.presence.state}async track(e,n={}){return await this.send({type:"presence",event:"track",payload:e},n.timeout||this.timeout)}async untrack(e={}){return await this.send({type:"presence",event:"untrack"},e)}on(e,n,t){return this._on(e,n,t)}async send(e,n={}){var t,r;if(this._canPush()||"broadcast"!==e.type)return new Promise(t=>{var r,a,o;const i=this._push(e.type,e,n.timeout||this.timeout);"broadcast"!==e.type||(null===(o=null===(a=null===(r=this.params)||void 0===r?void 0:r.config)||void 0===a?void 0:a.broadcast)||void 0===o?void 0:o.ack)||t("ok"),i.receive("ok",()=>t("ok")),i.receive("error",()=>t("error")),i.receive("timeout",()=>t("timed out"))});{const{event:a,payload:o}=e,i={method:"POST",headers:{Authorization:this.socket.accessTokenValue?`Bearer ${this.socket.accessTokenValue}`:"",apikey:this.socket.apiKey?this.socket.apiKey:"","Content-Type":"application/json"},body:JSON.stringify({messages:[{topic:this.subTopic,event:a,payload:o,private:this.private}]})};try{const e=await this._fetchWithTimeout(this.broadcastEndpointURL,i,null!==(t=n.timeout)&&void 0!==t?t:this.timeout);return await(null===(r=e.body)||void 0===r?void 0:r.cancel()),e.ok?"ok":"error"}catch(e){return"AbortError"===e.name?"timed out":"error"}}}updateJoinPayload(e){this.joinPush.updatePayload(e)}unsubscribe(e=this.timeout){this.state=M.leaving;const n=()=>{this.socket.log("channel",`leave ${this.topic}`),this._trigger(F.close,"leave",this._joinRef())};this.joinPush.destroy();let t=null;return new Promise(r=>{t=new ae(this,F.leave,{},e),t.receive("ok",()=>{n(),r("ok")}).receive("timeout",()=>{n(),r("timed out")}).receive("error",()=>{r("error")}),t.send(),this._canPush()||t.trigger("ok",{})}).finally(()=>{null==t||t.destroy()})}teardown(){this.pushBuffer.forEach(e=>e.destroy()),this.rejoinTimer&&clearTimeout(this.rejoinTimer.timer),this.joinPush.destroy()}async _fetchWithTimeout(e,n,t){const r=new AbortController,a=setTimeout(()=>r.abort(),t),o=await this.socket.fetch(e,Object.assign(Object.assign({},n),{signal:r.signal}));return clearTimeout(a),o}_push(e,n,t=this.timeout){if(!this.joinedOnce)throw`tried to push '${e}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;let r=new ae(this,e,n,t);return this._canPush()?r.send():(r.startTimeout(),this.pushBuffer.push(r)),r}_onMessage(e,n,t){return n}_isMember(e){return this.topic===e}_joinRef(){return this.joinPush.ref}_trigger(e,n,t){var r,a;const o=e.toLocaleLowerCase(),{close:i,error:s,leave:l,join:c}=F;if(t&&[i,s,l,c].indexOf(o)>=0&&t!==this._joinRef())return;let u=this._onMessage(o,n,t);if(n&&!u)throw"channel onMessage callbacks must return the payload, modified or unmodified";["insert","update","delete"].includes(o)?null===(r=this.bindings.postgres_changes)||void 0===r||r.filter(e=>{var n,t,r;return"*"===(null===(n=e.filter)||void 0===n?void 0:n.event)||(null===(r=null===(t=e.filter)||void 0===t?void 0:t.event)||void 0===r?void 0:r.toLocaleLowerCase())===o}).map(e=>e.callback(u,t)):null===(a=this.bindings[o])||void 0===a||a.filter(e=>{var t,r,a,i,s,l;if(["broadcast","presence","postgres_changes"].includes(o)){if("id"in e){const o=e.id,i=null===(t=e.filter)||void 0===t?void 0:t.event;return o&&(null===(r=n.ids)||void 0===r?void 0:r.includes(o))&&("*"===i||(null==i?void 0:i.toLocaleLowerCase())===(null===(a=n.data)||void 0===a?void 0:a.type.toLocaleLowerCase()))}{const t=null===(s=null===(i=null==e?void 0:e.filter)||void 0===i?void 0:i.event)||void 0===s?void 0:s.toLocaleLowerCase();return"*"===t||t===(null===(l=null==n?void 0:n.event)||void 0===l?void 0:l.toLocaleLowerCase())}}return e.type.toLocaleLowerCase()===o}).map(e=>{if("object"==typeof u&&"ids"in u){const e=u.data,{schema:n,table:t,commit_timestamp:r,type:a,errors:o}=e,i={schema:n,table:t,commit_timestamp:r,eventType:a,new:{},old:{},errors:o};u=Object.assign(Object.assign({},i),this._getPayloadRecords(e))}e.callback(u,t)})}_isClosed(){return this.state===M.closed}_isJoined(){return this.state===M.joined}_isJoining(){return this.state===M.joining}_isLeaving(){return this.state===M.leaving}_replyEventName(e){return`chan_reply_${e}`}_on(e,n,t){const r=e.toLocaleLowerCase(),a={type:r,filter:n,callback:t};return this.bindings[r]?this.bindings[r].push(a):this.bindings[r]=[a],this}_off(e,n){const t=e.toLocaleLowerCase();return this.bindings[t]=this.bindings[t].filter(e=>{var r;return!((null===(r=e.type)||void 0===r?void 0:r.toLocaleLowerCase())===t&&ue.isEqual(e.filter,n))}),this}static isEqual(e,n){if(Object.keys(e).length!==Object.keys(n).length)return!1;for(const t in e)if(e[t]!==n[t])return!1;return!0}_rejoinUntilConnected(){this.rejoinTimer.scheduleTimeout(),this.socket.isConnected()&&this._rejoin()}_onClose(e){this._on(F.close,{},e)}_onError(e){this._on(F.error,{},n=>e(n))}_canPush(){return this.socket.isConnected()&&this._isJoined()}_rejoin(e=this.timeout){this._isLeaving()||(this.socket._leaveOpenTopic(this.topic),this.state=M.joining,this.joinPush.resend(e))}_getPayloadRecords(e){const n={new:{},old:{}};return"INSERT"!==e.type&&"UPDATE"!==e.type||(n.new=V(e.columns,e.record)),"UPDATE"!==e.type&&"DELETE"!==e.type||(n.old=V(e.columns,e.old_record)),n}}const de=()=>{};class Ae{constructor(e,n){var t;this.accessTokenValue=null,this.apiKey=null,this.channels=new Array,this.endPoint="",this.httpEndpoint="",this.headers={},this.params={},this.timeout=1e4,this.heartbeatIntervalMs=25e3,this.heartbeatTimer=void 0,this.pendingHeartbeatRef=null,this.heartbeatCallback=de,this.ref=0,this.logger=de,this.conn=null,this.sendBuffer=[],this.serializer=new H,this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.accessToken=null,this._resolveFetch=e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(a.bind(a,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)},this.endPoint=`${e}/${$.websocket}`,this.httpEndpoint=re(e),(null==n?void 0:n.transport)?this.transport=n.transport:this.transport=null,(null==n?void 0:n.params)&&(this.params=n.params),(null==n?void 0:n.timeout)&&(this.timeout=n.timeout),(null==n?void 0:n.logger)&&(this.logger=n.logger),((null==n?void 0:n.logLevel)||(null==n?void 0:n.log_level))&&(this.logLevel=n.logLevel||n.log_level,this.params=Object.assign(Object.assign({},this.params),{log_level:this.logLevel})),(null==n?void 0:n.heartbeatIntervalMs)&&(this.heartbeatIntervalMs=n.heartbeatIntervalMs);const r=null===(t=null==n?void 0:n.params)||void 0===t?void 0:t.apikey;if(r&&(this.accessTokenValue=r,this.apiKey=r),this.reconnectAfterMs=(null==n?void 0:n.reconnectAfterMs)?n.reconnectAfterMs:e=>[1e3,2e3,5e3,1e4][e-1]||1e4,this.encode=(null==n?void 0:n.encode)?n.encode:(e,n)=>n(JSON.stringify(e)),this.decode=(null==n?void 0:n.decode)?n.decode:this.serializer.decode.bind(this.serializer),this.reconnectTimer=new G(async()=>{this.disconnect(),this.connect()},this.reconnectAfterMs),this.fetch=this._resolveFetch(null==n?void 0:n.fetch),null==n?void 0:n.worker){if("undefined"!=typeof window&&!window.Worker)throw new Error("Web Worker is not supported");this.worker=(null==n?void 0:n.worker)||!1,this.workerUrl=null==n?void 0:n.workerUrl}this.accessToken=(null==n?void 0:n.accessToken)||null}connect(){if(!this.conn){if(this.transport||(this.transport=R),!this.transport)throw new Error("No transport provided");this.conn=new this.transport(this.endpointURL()),this.setupConnection()}}endpointURL(){return this._appendParams(this.endPoint,Object.assign({},this.params,{vsn:"1.0.0"}))}disconnect(e,n){this.conn&&(this.conn.onclose=function(){},e?this.conn.close(e,null!=n?n:""):this.conn.close(),this.conn=null,this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.reset(),this.channels.forEach(e=>e.teardown()))}getChannels(){return this.channels}async removeChannel(e){const n=await e.unsubscribe();return 0===this.channels.length&&this.disconnect(),n}async removeAllChannels(){const e=await Promise.all(this.channels.map(e=>e.unsubscribe()));return this.channels=[],this.disconnect(),e}log(e,n,t){this.logger(e,n,t)}connectionState(){switch(this.conn&&this.conn.readyState){case U.connecting:return Y.Connecting;case U.open:return Y.Open;case U.closing:return Y.Closing;default:return Y.Closed}}isConnected(){return this.connectionState()===Y.Open}channel(e,n={config:{}}){const t=`realtime:${e}`,r=this.getChannels().find(e=>e.topic===t);if(r)return r;{const t=new ue(`realtime:${e}`,n,this);return this.channels.push(t),t}}push(e){const{topic:n,event:t,payload:r,ref:a}=e,o=()=>{this.encode(e,e=>{var n;null===(n=this.conn)||void 0===n||n.send(e)})};this.log("push",`${n} ${t} (${a})`,r),this.isConnected()?o():this.sendBuffer.push(o)}async setAuth(e=null){let n=e||this.accessToken&&await this.accessToken()||this.accessTokenValue;this.accessTokenValue!=n&&(this.accessTokenValue=n,this.channels.forEach(e=>{const t={access_token:n,version:"realtime-js/2.11.15"};n&&e.updateJoinPayload(t),e.joinedOnce&&e._isJoined()&&e._push(F.access_token,{access_token:n})}))}async sendHeartbeat(){var e;if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.log("transport","heartbeat timeout. Attempting to re-establish connection"),this.heartbeatCallback("timeout"),void(null===(e=this.conn)||void 0===e||e.close(1e3,"hearbeat timeout"));this.pendingHeartbeatRef=this._makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef}),this.heartbeatCallback("sent"),await this.setAuth()}else this.heartbeatCallback("disconnected")}onHeartbeat(e){this.heartbeatCallback=e}flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(e=>e()),this.sendBuffer=[])}_makeRef(){let e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}_leaveOpenTopic(e){let n=this.channels.find(n=>n.topic===e&&(n._isJoined()||n._isJoining()));n&&(this.log("transport",`leaving duplicate topic "${e}"`),n.unsubscribe())}_remove(e){this.channels=this.channels.filter(n=>n.topic!==e.topic)}setupConnection(){this.conn&&(this.conn.binaryType="arraybuffer",this.conn.onopen=()=>this._onConnOpen(),this.conn.onerror=e=>this._onConnError(e),this.conn.onmessage=e=>this._onConnMessage(e),this.conn.onclose=e=>this._onConnClose(e))}_onConnMessage(e){this.decode(e.data,e=>{let{topic:n,event:t,payload:r,ref:a}=e;"phoenix"===n&&"phx_reply"===t&&this.heartbeatCallback("ok"==e.payload.status?"ok":"error"),a&&a===this.pendingHeartbeatRef&&(this.pendingHeartbeatRef=null),this.log("receive",`${r.status||""} ${n} ${t} ${a&&"("+a+")"||""}`,r),Array.from(this.channels).filter(e=>e._isMember(n)).forEach(e=>e._trigger(t,r,a)),this.stateChangeCallbacks.message.forEach(n=>n(e))})}_onConnOpen(){this.log("transport",`connected to ${this.endpointURL()}`),this.flushSendBuffer(),this.reconnectTimer.reset(),this.worker?this.workerRef||this._startWorkerHeartbeat():this._startHeartbeat(),this.stateChangeCallbacks.open.forEach(e=>e())}_startHeartbeat(){this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(()=>this.sendHeartbeat(),this.heartbeatIntervalMs)}_startWorkerHeartbeat(){this.workerUrl?this.log("worker",`starting worker for from ${this.workerUrl}`):this.log("worker","starting default worker");const e=this._workerObjectUrl(this.workerUrl);this.workerRef=new Worker(e),this.workerRef.onerror=e=>{this.log("worker","worker error",e.message),this.workerRef.terminate()},this.workerRef.onmessage=e=>{"keepAlive"===e.data.event&&this.sendHeartbeat()},this.workerRef.postMessage({event:"start",interval:this.heartbeatIntervalMs})}_onConnClose(e){this.log("transport","close",e),this._triggerChanError(),this.heartbeatTimer&&clearInterval(this.heartbeatTimer),this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(n=>n(e))}_onConnError(e){this.log("transport",`${e}`),this._triggerChanError(),this.stateChangeCallbacks.error.forEach(n=>n(e))}_triggerChanError(){this.channels.forEach(e=>e._trigger(F.error))}_appendParams(e,n){if(0===Object.keys(n).length)return e;const t=e.match(/\?/)?"&":"?";return`${e}${t}${new URLSearchParams(n)}`}_workerObjectUrl(e){let n;if(e)n=e;else{const e=new Blob(['\n  addEventListener("message", (e) => {\n    if (e.data.event === "start") {\n      setInterval(() => postMessage({ event: "keepAlive" }), e.data.interval);\n    }\n  });'],{type:"application/javascript"});n=URL.createObjectURL(e)}return n}}class fe extends Error{constructor(e){super(e),this.__isStorageError=!0,this.name="StorageError"}}function he(e){return"object"==typeof e&&null!==e&&"__isStorageError"in e}class pe extends fe{constructor(e,n){super(e),this.name="StorageApiError",this.status=n}toJSON(){return{name:this.name,message:this.message,status:this.status}}}class ge extends fe{constructor(e,n){super(e),this.name="StorageUnknownError",this.originalError=n}}const me=e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(a.bind(a,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)},ve=e=>{if(Array.isArray(e))return e.map(e=>ve(e));if("function"==typeof e||e!==Object(e))return e;const n={};return Object.entries(e).forEach(([e,t])=>{const r=e.replace(/([-_][a-z])/gi,e=>e.toUpperCase().replace(/[-_]/g,""));n[r]=ve(t)}),n};var be=function(e,n,t,r){return new(t||(t=Promise))(function(a,o){function i(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(i,s)}l((r=r.apply(e,n||[])).next())})};const ye=e=>e.msg||e.message||e.error_description||e.error||JSON.stringify(e),Ce=(e,n,t)=>be(void 0,void 0,void 0,function*(){const r=yield(o=void 0,i=void 0,s=void 0,l=function*(){return"undefined"==typeof Response?(yield Promise.resolve().then(a.bind(a,907))).Response:Response},new(s||(s=Promise))(function(e,n){function t(e){try{a(l.next(e))}catch(e){n(e)}}function r(e){try{a(l.throw(e))}catch(e){n(e)}}function a(n){var a;n.done?e(n.value):(a=n.value,a instanceof s?a:new s(function(e){e(a)})).then(t,r)}a((l=l.apply(o,i||[])).next())}));var o,i,s,l;e instanceof r&&!(null==t?void 0:t.noResolveJson)?e.json().then(t=>{n(new pe(ye(t),e.status||500))}).catch(e=>{n(new ge(ye(e),e))}):n(new ge(ye(e),e))});function Ee(e,n,t,r,a,o){return be(this,void 0,void 0,function*(){return new Promise((i,s)=>{e(t,((e,n,t,r)=>{const a={method:e,headers:(null==n?void 0:n.headers)||{}};return"GET"===e?a:(a.headers=Object.assign({"Content-Type":"application/json"},null==n?void 0:n.headers),r&&(a.body=JSON.stringify(r)),Object.assign(Object.assign({},a),t))})(n,r,a,o)).then(e=>{if(!e.ok)throw e;return(null==r?void 0:r.noResolveJson)?e:e.json()}).then(e=>i(e)).catch(e=>Ce(e,s,r))})})}function Be(e,n,t,r){return be(this,void 0,void 0,function*(){return Ee(e,"GET",n,t,r)})}function xe(e,n,t,r,a){return be(this,void 0,void 0,function*(){return Ee(e,"POST",n,r,a,t)})}function we(e,n,t,r,a){return be(this,void 0,void 0,function*(){return Ee(e,"DELETE",n,r,a,t)})}var ke=function(e,n,t,r){return new(t||(t=Promise))(function(a,o){function i(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(i,s)}l((r=r.apply(e,n||[])).next())})};const Se={limit:100,offset:0,sortBy:{column:"name",order:"asc"}},je={cacheControl:"3600",contentType:"text/plain;charset=UTF-8",upsert:!1};class _e{constructor(e,n={},t,r){this.url=e,this.headers=n,this.bucketId=t,this.fetch=me(r)}uploadOrUpdate(e,n,t,r){return ke(this,void 0,void 0,function*(){try{let a;const o=Object.assign(Object.assign({},je),r);let i=Object.assign(Object.assign({},this.headers),"POST"===e&&{"x-upsert":String(o.upsert)});const s=o.metadata;"undefined"!=typeof Blob&&t instanceof Blob?(a=new FormData,a.append("cacheControl",o.cacheControl),s&&a.append("metadata",this.encodeMetadata(s)),a.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(a=t,a.append("cacheControl",o.cacheControl),s&&a.append("metadata",this.encodeMetadata(s))):(a=t,i["cache-control"]=`max-age=${o.cacheControl}`,i["content-type"]=o.contentType,s&&(i["x-metadata"]=this.toBase64(this.encodeMetadata(s)))),(null==r?void 0:r.headers)&&(i=Object.assign(Object.assign({},i),r.headers));const l=this._removeEmptyFolders(n),c=this._getFinalPath(l),u=yield this.fetch(`${this.url}/object/${c}`,Object.assign({method:e,body:a,headers:i},(null==o?void 0:o.duplex)?{duplex:o.duplex}:{})),d=yield u.json();return u.ok?{data:{path:l,id:d.Id,fullPath:d.Key},error:null}:{data:null,error:d}}catch(e){if(he(e))return{data:null,error:e};throw e}})}upload(e,n,t){return ke(this,void 0,void 0,function*(){return this.uploadOrUpdate("POST",e,n,t)})}uploadToSignedUrl(e,n,t,r){return ke(this,void 0,void 0,function*(){const a=this._removeEmptyFolders(e),o=this._getFinalPath(a),i=new URL(this.url+`/object/upload/sign/${o}`);i.searchParams.set("token",n);try{let e;const n=Object.assign({upsert:je.upsert},r),o=Object.assign(Object.assign({},this.headers),{"x-upsert":String(n.upsert)});"undefined"!=typeof Blob&&t instanceof Blob?(e=new FormData,e.append("cacheControl",n.cacheControl),e.append("",t)):"undefined"!=typeof FormData&&t instanceof FormData?(e=t,e.append("cacheControl",n.cacheControl)):(e=t,o["cache-control"]=`max-age=${n.cacheControl}`,o["content-type"]=n.contentType);const s=yield this.fetch(i.toString(),{method:"PUT",body:e,headers:o}),l=yield s.json();return s.ok?{data:{path:a,fullPath:l.Key},error:null}:{data:null,error:l}}catch(e){if(he(e))return{data:null,error:e};throw e}})}createSignedUploadUrl(e,n){return ke(this,void 0,void 0,function*(){try{let t=this._getFinalPath(e);const r=Object.assign({},this.headers);(null==n?void 0:n.upsert)&&(r["x-upsert"]="true");const a=yield xe(this.fetch,`${this.url}/object/upload/sign/${t}`,{},{headers:r}),o=new URL(this.url+a.url),i=o.searchParams.get("token");if(!i)throw new fe("No token returned by API");return{data:{signedUrl:o.toString(),path:e,token:i},error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}update(e,n,t){return ke(this,void 0,void 0,function*(){return this.uploadOrUpdate("PUT",e,n,t)})}move(e,n,t){return ke(this,void 0,void 0,function*(){try{return{data:yield xe(this.fetch,`${this.url}/object/move`,{bucketId:this.bucketId,sourceKey:e,destinationKey:n,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}copy(e,n,t){return ke(this,void 0,void 0,function*(){try{return{data:{path:(yield xe(this.fetch,`${this.url}/object/copy`,{bucketId:this.bucketId,sourceKey:e,destinationKey:n,destinationBucket:null==t?void 0:t.destinationBucket},{headers:this.headers})).Key},error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}createSignedUrl(e,n,t){return ke(this,void 0,void 0,function*(){try{let r=this._getFinalPath(e),a=yield xe(this.fetch,`${this.url}/object/sign/${r}`,Object.assign({expiresIn:n},(null==t?void 0:t.transform)?{transform:t.transform}:{}),{headers:this.headers});const o=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return a={signedUrl:encodeURI(`${this.url}${a.signedURL}${o}`)},{data:a,error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}createSignedUrls(e,n,t){return ke(this,void 0,void 0,function*(){try{const r=yield xe(this.fetch,`${this.url}/object/sign/${this.bucketId}`,{expiresIn:n,paths:e},{headers:this.headers}),a=(null==t?void 0:t.download)?`&download=${!0===t.download?"":t.download}`:"";return{data:r.map(e=>Object.assign(Object.assign({},e),{signedUrl:e.signedURL?encodeURI(`${this.url}${e.signedURL}${a}`):null})),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}download(e,n){return ke(this,void 0,void 0,function*(){const t=void 0!==(null==n?void 0:n.transform)?"render/image/authenticated":"object",r=this.transformOptsToQueryString((null==n?void 0:n.transform)||{}),a=r?`?${r}`:"";try{const n=this._getFinalPath(e),r=yield Be(this.fetch,`${this.url}/${t}/${n}${a}`,{headers:this.headers,noResolveJson:!0});return{data:yield r.blob(),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}info(e){return ke(this,void 0,void 0,function*(){const n=this._getFinalPath(e);try{const e=yield Be(this.fetch,`${this.url}/object/info/${n}`,{headers:this.headers});return{data:ve(e),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}exists(e){return ke(this,void 0,void 0,function*(){const n=this._getFinalPath(e);try{return yield function(e,n,t){return be(this,void 0,void 0,function*(){return Ee(e,"HEAD",n,Object.assign(Object.assign({},t),{noResolveJson:!0}),undefined)})}(this.fetch,`${this.url}/object/${n}`,{headers:this.headers}),{data:!0,error:null}}catch(e){if(he(e)&&e instanceof ge){const n=e.originalError;if([400,404].includes(null==n?void 0:n.status))return{data:!1,error:e}}throw e}})}getPublicUrl(e,n){const t=this._getFinalPath(e),r=[],a=(null==n?void 0:n.download)?`download=${!0===n.download?"":n.download}`:"";""!==a&&r.push(a);const o=void 0!==(null==n?void 0:n.transform)?"render/image":"object",i=this.transformOptsToQueryString((null==n?void 0:n.transform)||{});""!==i&&r.push(i);let s=r.join("&");return""!==s&&(s=`?${s}`),{data:{publicUrl:encodeURI(`${this.url}/${o}/public/${t}${s}`)}}}remove(e){return ke(this,void 0,void 0,function*(){try{return{data:yield we(this.fetch,`${this.url}/object/${this.bucketId}`,{prefixes:e},{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}list(e,n,t){return ke(this,void 0,void 0,function*(){try{const r=Object.assign(Object.assign(Object.assign({},Se),n),{prefix:e||""});return{data:yield xe(this.fetch,`${this.url}/object/list/${this.bucketId}`,r,{headers:this.headers},t),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}encodeMetadata(e){return JSON.stringify(e)}toBase64(e){return"undefined"!=typeof Buffer?Buffer.from(e).toString("base64"):btoa(e)}_getFinalPath(e){return`${this.bucketId}/${e}`}_removeEmptyFolders(e){return e.replace(/^\/|\/$/g,"").replace(/\/+/g,"/")}transformOptsToQueryString(e){const n=[];return e.width&&n.push(`width=${e.width}`),e.height&&n.push(`height=${e.height}`),e.resize&&n.push(`resize=${e.resize}`),e.format&&n.push(`format=${e.format}`),e.quality&&n.push(`quality=${e.quality}`),n.join("&")}}const Ne={"X-Client-Info":"storage-js/2.7.1"};var ze=function(e,n,t,r){return new(t||(t=Promise))(function(a,o){function i(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(i,s)}l((r=r.apply(e,n||[])).next())})};class Te{constructor(e,n={},t){this.url=e,this.headers=Object.assign(Object.assign({},Ne),n),this.fetch=me(t)}listBuckets(){return ze(this,void 0,void 0,function*(){try{return{data:yield Be(this.fetch,`${this.url}/bucket`,{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}getBucket(e){return ze(this,void 0,void 0,function*(){try{return{data:yield Be(this.fetch,`${this.url}/bucket/${e}`,{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}createBucket(e,n={public:!1}){return ze(this,void 0,void 0,function*(){try{return{data:yield xe(this.fetch,`${this.url}/bucket`,{id:e,name:e,public:n.public,file_size_limit:n.fileSizeLimit,allowed_mime_types:n.allowedMimeTypes},{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}updateBucket(e,n){return ze(this,void 0,void 0,function*(){try{const t=yield function(e,n,t,r){return be(this,void 0,void 0,function*(){return Ee(e,"PUT",n,r,undefined,t)})}(this.fetch,`${this.url}/bucket/${e}`,{id:e,name:e,public:n.public,file_size_limit:n.fileSizeLimit,allowed_mime_types:n.allowedMimeTypes},{headers:this.headers});return{data:t,error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}emptyBucket(e){return ze(this,void 0,void 0,function*(){try{return{data:yield xe(this.fetch,`${this.url}/bucket/${e}/empty`,{},{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}deleteBucket(e){return ze(this,void 0,void 0,function*(){try{return{data:yield we(this.fetch,`${this.url}/bucket/${e}`,{},{headers:this.headers}),error:null}}catch(e){if(he(e))return{data:null,error:e};throw e}})}}class Ie extends Te{constructor(e,n={},t){super(e,n,t)}from(e){return new _e(this.url,this.headers,e,this.fetch)}}let Oe="";Oe="undefined"!=typeof Deno?"deno":"undefined"!=typeof document?"web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?"react-native":"node";const Pe={headers:{"X-Client-Info":`supabase-js-${Oe}/2.50.3`}},De={schema:"public"},Le={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},Re={};var Ue=a(907);const Me=e=>{let n;return n=e||("undefined"==typeof fetch?Ue.default:fetch),(...e)=>n(...e)},Fe=(e,n,t)=>{const r=Me(t),a="undefined"==typeof Headers?Ue.Headers:Headers;return(t,o)=>{return i=void 0,s=void 0,c=function*(){var i;const s=null!==(i=yield n())&&void 0!==i?i:e;let l=new a(null==o?void 0:o.headers);return l.has("apikey")||l.set("apikey",e),l.has("Authorization")||l.set("Authorization",`Bearer ${s}`),r(t,Object.assign(Object.assign({},o),{headers:l}))},new((l=void 0)||(l=Promise))(function(e,n){function t(e){try{a(c.next(e))}catch(e){n(e)}}function r(e){try{a(c.throw(e))}catch(e){n(e)}}function a(n){var a;n.done?e(n.value):(a=n.value,a instanceof l?a:new l(function(e){e(a)})).then(t,r)}a((c=c.apply(i,s||[])).next())});var i,s,l,c}};const $e="2.70.0",Ye=3e4,qe={"X-Client-Info":`gotrue-js/${$e}`},We="X-Supabase-Api-Version",He=Date.parse("2024-01-01T00:00:00.0Z"),Ge="2024-01-01",Ve=/^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;class Ke extends Error{constructor(e,n,t){super(e),this.__isAuthError=!0,this.name="AuthError",this.status=n,this.code=t}}function Ze(e){return"object"==typeof e&&null!==e&&"__isAuthError"in e}class Qe extends Ke{constructor(e,n,t){super(e,n,t),this.name="AuthApiError",this.status=n,this.code=t}}class Je extends Ke{constructor(e,n){super(e),this.name="AuthUnknownError",this.originalError=n}}class Xe extends Ke{constructor(e,n,t,r){super(e,t,r),this.name=n,this.status=t}}class en extends Xe{constructor(){super("Auth session missing!","AuthSessionMissingError",400,void 0)}}class nn extends Xe{constructor(){super("Auth session or user missing","AuthInvalidTokenResponseError",500,void 0)}}class tn extends Xe{constructor(e){super(e,"AuthInvalidCredentialsError",400,void 0)}}class rn extends Xe{constructor(e,n=null){super(e,"AuthImplicitGrantRedirectError",500,void 0),this.details=null,this.details=n}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class an extends Xe{constructor(e,n=null){super(e,"AuthPKCEGrantCodeExchangeError",500,void 0),this.details=null,this.details=n}toJSON(){return{name:this.name,message:this.message,status:this.status,details:this.details}}}class on extends Xe{constructor(e,n){super(e,"AuthRetryableFetchError",n,void 0)}}function sn(e){return Ze(e)&&"AuthRetryableFetchError"===e.name}class ln extends Xe{constructor(e,n,t){super(e,"AuthWeakPasswordError",n,"weak_password"),this.reasons=t}}class cn extends Xe{constructor(e){super(e,"AuthInvalidJwtError",400,"invalid_jwt")}}const un="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".split(""),dn=" \t\n\r=".split(""),An=(()=>{const e=new Array(128);for(let n=0;n<e.length;n+=1)e[n]=-1;for(let n=0;n<dn.length;n+=1)e[dn[n].charCodeAt(0)]=-2;for(let n=0;n<un.length;n+=1)e[un[n].charCodeAt(0)]=n;return e})();function fn(e,n,t){if(null!==e)for(n.queue=n.queue<<8|e,n.queuedBits+=8;n.queuedBits>=6;){const e=n.queue>>n.queuedBits-6&63;t(un[e]),n.queuedBits-=6}else if(n.queuedBits>0)for(n.queue=n.queue<<6-n.queuedBits,n.queuedBits=6;n.queuedBits>=6;){const e=n.queue>>n.queuedBits-6&63;t(un[e]),n.queuedBits-=6}}function hn(e,n,t){const r=An[e];if(!(r>-1)){if(-2===r)return;throw new Error(`Invalid Base64-URL character "${String.fromCharCode(e)}"`)}for(n.queue=n.queue<<6|r,n.queuedBits+=6;n.queuedBits>=8;)t(n.queue>>n.queuedBits-8&255),n.queuedBits-=8}function pn(e){const n=[],t=e=>{n.push(String.fromCodePoint(e))},r={utf8seq:0,codepoint:0},a={queue:0,queuedBits:0},o=e=>{!function(e,n,t){if(0===n.utf8seq){if(e<=127)return void t(e);for(let t=1;t<6;t+=1)if(!(e>>7-t&1)){n.utf8seq=t;break}if(2===n.utf8seq)n.codepoint=31&e;else if(3===n.utf8seq)n.codepoint=15&e;else{if(4!==n.utf8seq)throw new Error("Invalid UTF-8 sequence");n.codepoint=7&e}n.utf8seq-=1}else if(n.utf8seq>0){if(e<=127)throw new Error("Invalid UTF-8 sequence");n.codepoint=n.codepoint<<6|63&e,n.utf8seq-=1,0===n.utf8seq&&t(n.codepoint)}}(e,r,t)};for(let n=0;n<e.length;n+=1)hn(e.charCodeAt(n),a,o);return n.join("")}function gn(e,n){if(!(e<=127)){if(e<=2047)return n(192|e>>6),void n(128|63&e);if(e<=65535)return n(224|e>>12),n(128|e>>6&63),void n(128|63&e);if(e<=1114111)return n(240|e>>18),n(128|e>>12&63),n(128|e>>6&63),void n(128|63&e);throw new Error(`Unrecognized Unicode codepoint: ${e.toString(16)}`)}n(e)}function mn(e){const n=[],t={queue:0,queuedBits:0},r=e=>{n.push(e)};for(let n=0;n<e.length;n+=1)hn(e.charCodeAt(n),t,r);return new Uint8Array(n)}function vn(e){const n=[],t={queue:0,queuedBits:0},r=e=>{n.push(e)};return e.forEach(e=>fn(e,t,r)),fn(null,t,r),n.join("")}const bn=()=>"undefined"!=typeof window&&"undefined"!=typeof document,yn={tested:!1,writable:!1},Cn=()=>{if(!bn())return!1;try{if("object"!=typeof globalThis.localStorage)return!1}catch(e){return!1}if(yn.tested)return yn.writable;const e=`lswt-${Math.random()}${Math.random()}`;try{globalThis.localStorage.setItem(e,e),globalThis.localStorage.removeItem(e),yn.tested=!0,yn.writable=!0}catch(e){yn.tested=!0,yn.writable=!1}return yn.writable},En=e=>{let n;return n=e||("undefined"==typeof fetch?(...e)=>Promise.resolve().then(a.bind(a,907)).then(({default:n})=>n(...e)):fetch),(...e)=>n(...e)},Bn=async(e,n,t)=>{await e.setItem(n,JSON.stringify(t))},xn=async(e,n)=>{const t=await e.getItem(n);if(!t)return null;try{return JSON.parse(t)}catch(e){return t}},wn=async(e,n)=>{await e.removeItem(n)};class kn{constructor(){this.promise=new kn.promiseConstructor((e,n)=>{this.resolve=e,this.reject=n})}}function Sn(e){const n=e.split(".");if(3!==n.length)throw new cn("Invalid JWT structure");for(let e=0;e<n.length;e++)if(!Ve.test(n[e]))throw new cn("JWT not in base64url format");return{header:JSON.parse(pn(n[0])),payload:JSON.parse(pn(n[1])),signature:mn(n[2]),raw:{header:n[0],payload:n[1]}}}function jn(e){return("0"+e.toString(16)).substr(-2)}async function _n(e,n,t=!1){const r=function(){const e=new Uint32Array(56);if("undefined"==typeof crypto){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",n=e.length;let t="";for(let r=0;r<56;r++)t+=e.charAt(Math.floor(Math.random()*n));return t}return crypto.getRandomValues(e),Array.from(e,jn).join("")}();let a=r;t&&(a+="/PASSWORD_RECOVERY"),await Bn(e,`${n}-code-verifier`,a);const o=await async function(e){if("undefined"==typeof crypto||void 0===crypto.subtle||"undefined"==typeof TextEncoder)return console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256."),e;const n=await async function(e){const n=(new TextEncoder).encode(e),t=await crypto.subtle.digest("SHA-256",n),r=new Uint8Array(t);return Array.from(r).map(e=>String.fromCharCode(e)).join("")}(e);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}(r);return[o,r===o?"plain":"s256"]}kn.promiseConstructor=Promise;const Nn=/^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i,zn=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;function Tn(e){if(!zn.test(e))throw new Error("@supabase/auth-js: Expected parameter to be UUID but is not")}const In=e=>e.msg||e.message||e.error_description||e.error||JSON.stringify(e),On=[502,503,504];async function Pn(e){var n,t;if(!("object"==typeof(t=e)&&null!==t&&"status"in t&&"ok"in t&&"json"in t&&"function"==typeof t.json))throw new on(In(e),0);if(On.includes(e.status))throw new on(In(e),e.status);let r,a;try{r=await e.json()}catch(e){throw new Je(In(e),e)}const o=function(e){const n=e.headers.get(We);if(!n)return null;if(!n.match(Nn))return null;try{return new Date(`${n}T00:00:00.0Z`)}catch(e){return null}}(e);if(o&&o.getTime()>=He&&"object"==typeof r&&r&&"string"==typeof r.code?a=r.code:"object"==typeof r&&r&&"string"==typeof r.error_code&&(a=r.error_code),a){if("weak_password"===a)throw new ln(In(r),e.status,(null===(n=r.weak_password)||void 0===n?void 0:n.reasons)||[]);if("session_not_found"===a)throw new en}else if("object"==typeof r&&r&&"object"==typeof r.weak_password&&r.weak_password&&Array.isArray(r.weak_password.reasons)&&r.weak_password.reasons.length&&r.weak_password.reasons.reduce((e,n)=>e&&"string"==typeof n,!0))throw new ln(In(r),e.status,r.weak_password.reasons);throw new Qe(In(r),e.status||500,a)}async function Dn(e,n,t,r){var a;const o=Object.assign({},null==r?void 0:r.headers);o[We]||(o[We]=Ge),(null==r?void 0:r.jwt)&&(o.Authorization=`Bearer ${r.jwt}`);const i=null!==(a=null==r?void 0:r.query)&&void 0!==a?a:{};(null==r?void 0:r.redirectTo)&&(i.redirect_to=r.redirectTo);const s=Object.keys(i).length?"?"+new URLSearchParams(i).toString():"",l=await async function(e,n,t,r,a,o){const i=((e,n,t,r)=>{const a={method:e,headers:(null==n?void 0:n.headers)||{}};return"GET"===e?a:(a.headers=Object.assign({"Content-Type":"application/json;charset=UTF-8"},null==n?void 0:n.headers),a.body=JSON.stringify(r),Object.assign(Object.assign({},a),t))})(n,r,{},o);let s;try{s=await e(t,Object.assign({},i))}catch(e){throw console.error(e),new on(In(e),0)}if(s.ok||await Pn(s),null==r?void 0:r.noResolveJson)return s;try{return await s.json()}catch(e){await Pn(e)}}(e,n,t+s,{headers:o,noResolveJson:null==r?void 0:r.noResolveJson},0,null==r?void 0:r.body);return(null==r?void 0:r.xform)?null==r?void 0:r.xform(l):{data:Object.assign({},l),error:null}}function Ln(e){var n;let t=null;var r;return function(e){return e.access_token&&e.refresh_token&&e.expires_in}(e)&&(t=Object.assign({},e),e.expires_at||(t.expires_at=(r=e.expires_in,Math.round(Date.now()/1e3)+r))),{data:{session:t,user:null!==(n=e.user)&&void 0!==n?n:e},error:null}}function Rn(e){const n=Ln(e);return!n.error&&e.weak_password&&"object"==typeof e.weak_password&&Array.isArray(e.weak_password.reasons)&&e.weak_password.reasons.length&&e.weak_password.message&&"string"==typeof e.weak_password.message&&e.weak_password.reasons.reduce((e,n)=>e&&"string"==typeof n,!0)&&(n.data.weak_password=e.weak_password),n}function Un(e){var n;return{data:{user:null!==(n=e.user)&&void 0!==n?n:e},error:null}}function Mn(e){return{data:e,error:null}}function Fn(e){const{action_link:n,email_otp:t,hashed_token:r,redirect_to:a,verification_type:o}=e,i=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]])}return t}(e,["action_link","email_otp","hashed_token","redirect_to","verification_type"]);return{data:{properties:{action_link:n,email_otp:t,hashed_token:r,redirect_to:a,verification_type:o},user:Object.assign({},i)},error:null}}function $n(e){return e}const Yn=["global","local","others"];class qn{constructor({url:e="",headers:n={},fetch:t}){this.url=e,this.headers=n,this.fetch=En(t),this.mfa={listFactors:this._listFactors.bind(this),deleteFactor:this._deleteFactor.bind(this)}}async signOut(e,n=Yn[0]){if(Yn.indexOf(n)<0)throw new Error(`@supabase/auth-js: Parameter scope must be one of ${Yn.join(", ")}`);try{return await Dn(this.fetch,"POST",`${this.url}/logout?scope=${n}`,{headers:this.headers,jwt:e,noResolveJson:!0}),{data:null,error:null}}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async inviteUserByEmail(e,n={}){try{return await Dn(this.fetch,"POST",`${this.url}/invite`,{body:{email:e,data:n.data},headers:this.headers,redirectTo:n.redirectTo,xform:Un})}catch(e){if(Ze(e))return{data:{user:null},error:e};throw e}}async generateLink(e){try{const{options:n}=e,t=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]])}return t}(e,["options"]),r=Object.assign(Object.assign({},t),n);return"newEmail"in t&&(r.new_email=null==t?void 0:t.newEmail,delete r.newEmail),await Dn(this.fetch,"POST",`${this.url}/admin/generate_link`,{body:r,headers:this.headers,xform:Fn,redirectTo:null==n?void 0:n.redirectTo})}catch(e){if(Ze(e))return{data:{properties:null,user:null},error:e};throw e}}async createUser(e){try{return await Dn(this.fetch,"POST",`${this.url}/admin/users`,{body:e,headers:this.headers,xform:Un})}catch(e){if(Ze(e))return{data:{user:null},error:e};throw e}}async listUsers(e){var n,t,r,a,o,i,s;try{const l={nextPage:null,lastPage:0,total:0},c=await Dn(this.fetch,"GET",`${this.url}/admin/users`,{headers:this.headers,noResolveJson:!0,query:{page:null!==(t=null===(n=null==e?void 0:e.page)||void 0===n?void 0:n.toString())&&void 0!==t?t:"",per_page:null!==(a=null===(r=null==e?void 0:e.perPage)||void 0===r?void 0:r.toString())&&void 0!==a?a:""},xform:$n});if(c.error)throw c.error;const u=await c.json(),d=null!==(o=c.headers.get("x-total-count"))&&void 0!==o?o:0,A=null!==(s=null===(i=c.headers.get("link"))||void 0===i?void 0:i.split(","))&&void 0!==s?s:[];return A.length>0&&(A.forEach(e=>{const n=parseInt(e.split(";")[0].split("=")[1].substring(0,1)),t=JSON.parse(e.split(";")[1].split("=")[1]);l[`${t}Page`]=n}),l.total=parseInt(d)),{data:Object.assign(Object.assign({},u),l),error:null}}catch(e){if(Ze(e))return{data:{users:[]},error:e};throw e}}async getUserById(e){Tn(e);try{return await Dn(this.fetch,"GET",`${this.url}/admin/users/${e}`,{headers:this.headers,xform:Un})}catch(e){if(Ze(e))return{data:{user:null},error:e};throw e}}async updateUserById(e,n){Tn(e);try{return await Dn(this.fetch,"PUT",`${this.url}/admin/users/${e}`,{body:n,headers:this.headers,xform:Un})}catch(e){if(Ze(e))return{data:{user:null},error:e};throw e}}async deleteUser(e,n=!1){Tn(e);try{return await Dn(this.fetch,"DELETE",`${this.url}/admin/users/${e}`,{headers:this.headers,body:{should_soft_delete:n},xform:Un})}catch(e){if(Ze(e))return{data:{user:null},error:e};throw e}}async _listFactors(e){Tn(e.userId);try{const{data:n,error:t}=await Dn(this.fetch,"GET",`${this.url}/admin/users/${e.userId}/factors`,{headers:this.headers,xform:e=>({data:{factors:e},error:null})});return{data:n,error:t}}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async _deleteFactor(e){Tn(e.userId),Tn(e.id);try{return{data:await Dn(this.fetch,"DELETE",`${this.url}/admin/users/${e.userId}/factors/${e.id}`,{headers:this.headers}),error:null}}catch(e){if(Ze(e))return{data:null,error:e};throw e}}}const Wn={getItem:e=>Cn()?globalThis.localStorage.getItem(e):null,setItem:(e,n)=>{Cn()&&globalThis.localStorage.setItem(e,n)},removeItem:e=>{Cn()&&globalThis.localStorage.removeItem(e)}};function Hn(e={}){return{getItem:n=>e[n]||null,setItem:(n,t)=>{e[n]=t},removeItem:n=>{delete e[n]}}}const Gn=!!(globalThis&&Cn()&&globalThis.localStorage&&"true"===globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug"));class Vn extends Error{constructor(e){super(e),this.isAcquireTimeout=!0}}class Kn extends Vn{}async function Zn(e,n,t){Gn&&console.log("@supabase/gotrue-js: navigatorLock: acquire lock",e,n);const r=new globalThis.AbortController;return n>0&&setTimeout(()=>{r.abort(),Gn&&console.log("@supabase/gotrue-js: navigatorLock acquire timed out",e)},n),await Promise.resolve().then(()=>globalThis.navigator.locks.request(e,0===n?{mode:"exclusive",ifAvailable:!0}:{mode:"exclusive",signal:r.signal},async r=>{if(!r){if(0===n)throw Gn&&console.log("@supabase/gotrue-js: navigatorLock: not immediately available",e),new Kn(`Acquiring an exclusive Navigator LockManager lock "${e}" immediately failed`);if(Gn)try{const e=await globalThis.navigator.locks.query();console.log("@supabase/gotrue-js: Navigator LockManager state",JSON.stringify(e,null,"  "))}catch(e){console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state",e)}return console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"),await t()}Gn&&console.log("@supabase/gotrue-js: navigatorLock: acquired",e,r.name);try{return await t()}finally{Gn&&console.log("@supabase/gotrue-js: navigatorLock: released",e,r.name)}}))}!function(){if("object"!=typeof globalThis)try{Object.defineProperty(Object.prototype,"__magic__",{get:function(){return this},configurable:!0}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__}catch(e){"undefined"!=typeof self&&(self.globalThis=self)}}();const Qn={url:"http://localhost:9999",storageKey:"supabase.auth.token",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,headers:qe,flowType:"implicit",debug:!1,hasCustomAuthorizationHeader:!1};async function Jn(e,n,t){return await t()}class Xn{constructor(e){var n,t;this.memoryStorage=null,this.stateChangeEmitters=new Map,this.autoRefreshTicker=null,this.visibilityChangedCallback=null,this.refreshingDeferred=null,this.initializePromise=null,this.detectSessionInUrl=!0,this.hasCustomAuthorizationHeader=!1,this.suppressGetSessionWarning=!1,this.lockAcquired=!1,this.pendingInLock=[],this.broadcastChannel=null,this.logger=console.log,this.instanceID=Xn.nextInstanceID,Xn.nextInstanceID+=1,this.instanceID>0&&bn()&&console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");const r=Object.assign(Object.assign({},Qn),e);if(this.logDebugMessages=!!r.debug,"function"==typeof r.debug&&(this.logger=r.debug),this.persistSession=r.persistSession,this.storageKey=r.storageKey,this.autoRefreshToken=r.autoRefreshToken,this.admin=new qn({url:r.url,headers:r.headers,fetch:r.fetch}),this.url=r.url,this.headers=r.headers,this.fetch=En(r.fetch),this.lock=r.lock||Jn,this.detectSessionInUrl=r.detectSessionInUrl,this.flowType=r.flowType,this.hasCustomAuthorizationHeader=r.hasCustomAuthorizationHeader,r.lock?this.lock=r.lock:bn()&&(null===(n=null===globalThis||void 0===globalThis?void 0:globalThis.navigator)||void 0===n?void 0:n.locks)?this.lock=Zn:this.lock=Jn,this.jwks={keys:[]},this.jwks_cached_at=Number.MIN_SAFE_INTEGER,this.mfa={verify:this._verify.bind(this),enroll:this._enroll.bind(this),unenroll:this._unenroll.bind(this),challenge:this._challenge.bind(this),listFactors:this._listFactors.bind(this),challengeAndVerify:this._challengeAndVerify.bind(this),getAuthenticatorAssuranceLevel:this._getAuthenticatorAssuranceLevel.bind(this)},this.persistSession?r.storage?this.storage=r.storage:Cn()?this.storage=Wn:(this.memoryStorage={},this.storage=Hn(this.memoryStorage)):(this.memoryStorage={},this.storage=Hn(this.memoryStorage)),bn()&&globalThis.BroadcastChannel&&this.persistSession&&this.storageKey){try{this.broadcastChannel=new globalThis.BroadcastChannel(this.storageKey)}catch(e){console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available",e)}null===(t=this.broadcastChannel)||void 0===t||t.addEventListener("message",async e=>{this._debug("received broadcast notification from other tab or client",e),await this._notifyAllSubscribers(e.data.event,e.data.session,!1)})}this.initialize()}_debug(...e){return this.logDebugMessages&&this.logger(`GoTrueClient@${this.instanceID} (${$e}) ${(new Date).toISOString()}`,...e),this}async initialize(){return this.initializePromise||(this.initializePromise=(async()=>await this._acquireLock(-1,async()=>await this._initialize()))()),await this.initializePromise}async _initialize(){var e;try{const n=function(e){const n={},t=new URL(e);if(t.hash&&"#"===t.hash[0])try{new URLSearchParams(t.hash.substring(1)).forEach((e,t)=>{n[t]=e})}catch(e){}return t.searchParams.forEach((e,t)=>{n[t]=e}),n}(window.location.href);let t="none";if(this._isImplicitGrantCallback(n)?t="implicit":await this._isPKCECallback(n)&&(t="pkce"),bn()&&this.detectSessionInUrl&&"none"!==t){const{data:r,error:a}=await this._getSessionFromURL(n,t);if(a){if(this._debug("#_initialize()","error detecting session from URL",a),function(e){return Ze(e)&&"AuthImplicitGrantRedirectError"===e.name}(a)){const n=null===(e=a.details)||void 0===e?void 0:e.code;if("identity_already_exists"===n||"identity_not_found"===n||"single_identity_not_deletable"===n)return{error:a}}return await this._removeSession(),{error:a}}const{session:o,redirectType:i}=r;return this._debug("#_initialize()","detected session in URL",o,"redirect type",i),await this._saveSession(o),setTimeout(async()=>{"recovery"===i?await this._notifyAllSubscribers("PASSWORD_RECOVERY",o):await this._notifyAllSubscribers("SIGNED_IN",o)},0),{error:null}}return await this._recoverAndRefresh(),{error:null}}catch(e){return Ze(e)?{error:e}:{error:new Je("Unexpected error during initialization",e)}}finally{await this._handleVisibilityChange(),this._debug("#_initialize()","end")}}async signInAnonymously(e){var n,t,r;try{const a=await Dn(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{data:null!==(t=null===(n=null==e?void 0:e.options)||void 0===n?void 0:n.data)&&void 0!==t?t:{},gotrue_meta_security:{captcha_token:null===(r=null==e?void 0:e.options)||void 0===r?void 0:r.captchaToken}},xform:Ln}),{data:o,error:i}=a;if(i||!o)return{data:{user:null,session:null},error:i};const s=o.session,l=o.user;return o.session&&(await this._saveSession(o.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async signUp(e){var n,t,r;try{let a;if("email"in e){const{email:t,password:r,options:o}=e;let i=null,s=null;"pkce"===this.flowType&&([i,s]=await _n(this.storage,this.storageKey)),a=await Dn(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,redirectTo:null==o?void 0:o.emailRedirectTo,body:{email:t,password:r,data:null!==(n=null==o?void 0:o.data)&&void 0!==n?n:{},gotrue_meta_security:{captcha_token:null==o?void 0:o.captchaToken},code_challenge:i,code_challenge_method:s},xform:Ln})}else{if(!("phone"in e))throw new tn("You must provide either an email or phone number and a password");{const{phone:n,password:o,options:i}=e;a=await Dn(this.fetch,"POST",`${this.url}/signup`,{headers:this.headers,body:{phone:n,password:o,data:null!==(t=null==i?void 0:i.data)&&void 0!==t?t:{},channel:null!==(r=null==i?void 0:i.channel)&&void 0!==r?r:"sms",gotrue_meta_security:{captcha_token:null==i?void 0:i.captchaToken}},xform:Ln})}}const{data:o,error:i}=a;if(i||!o)return{data:{user:null,session:null},error:i};const s=o.session,l=o.user;return o.session&&(await this._saveSession(o.session),await this._notifyAllSubscribers("SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithPassword(e){try{let n;if("email"in e){const{email:t,password:r,options:a}=e;n=await Dn(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{email:t,password:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:Rn})}else{if(!("phone"in e))throw new tn("You must provide either an email or phone number and a password");{const{phone:t,password:r,options:a}=e;n=await Dn(this.fetch,"POST",`${this.url}/token?grant_type=password`,{headers:this.headers,body:{phone:t,password:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},xform:Rn})}}const{data:t,error:r}=n;return r?{data:{user:null,session:null},error:r}:t&&t.session&&t.user?(t.session&&(await this._saveSession(t.session),await this._notifyAllSubscribers("SIGNED_IN",t.session)),{data:Object.assign({user:t.user,session:t.session},t.weak_password?{weakPassword:t.weak_password}:null),error:r}):{data:{user:null,session:null},error:new nn}}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithOAuth(e){var n,t,r,a;return await this._handleProviderSignIn(e.provider,{redirectTo:null===(n=e.options)||void 0===n?void 0:n.redirectTo,scopes:null===(t=e.options)||void 0===t?void 0:t.scopes,queryParams:null===(r=e.options)||void 0===r?void 0:r.queryParams,skipBrowserRedirect:null===(a=e.options)||void 0===a?void 0:a.skipBrowserRedirect})}async exchangeCodeForSession(e){return await this.initializePromise,this._acquireLock(-1,async()=>this._exchangeCodeForSession(e))}async signInWithWeb3(e){const{chain:n}=e;if("solana"===n)return await this.signInWithSolana(e);throw new Error(`@supabase/auth-js: Unsupported chain "${n}"`)}async signInWithSolana(e){var n,t,r,a,o,i,s,l,c,u,d,A;let f,h;if("message"in e)f=e.message,h=e.signature;else{const{chain:d,wallet:A,statement:p,options:g}=e;let m;if(bn())if("object"==typeof A)m=A;else{const e=window;if(!("solana"in e)||"object"!=typeof e.solana||!("signIn"in e.solana&&"function"==typeof e.solana.signIn||"signMessage"in e.solana&&"function"==typeof e.solana.signMessage))throw new Error("@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.");m=e.solana}else{if("object"!=typeof A||!(null==g?void 0:g.url))throw new Error("@supabase/auth-js: Both wallet and url must be specified in non-browser environments.");m=A}const v=new URL(null!==(n=null==g?void 0:g.url)&&void 0!==n?n:window.location.href);if("signIn"in m&&m.signIn){const e=await m.signIn(Object.assign(Object.assign(Object.assign({issuedAt:(new Date).toISOString()},null==g?void 0:g.signInWithSolana),{version:"1",domain:v.host,uri:v.href}),p?{statement:p}:null));let n;if(Array.isArray(e)&&e[0]&&"object"==typeof e[0])n=e[0];else{if(!(e&&"object"==typeof e&&"signedMessage"in e&&"signature"in e))throw new Error("@supabase/auth-js: Wallet method signIn() returned unrecognized value");n=e}if(!("signedMessage"in n&&"signature"in n&&("string"==typeof n.signedMessage||n.signedMessage instanceof Uint8Array)&&n.signature instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields");f="string"==typeof n.signedMessage?n.signedMessage:(new TextDecoder).decode(n.signedMessage),h=n.signature}else{if(!("signMessage"in m&&"function"==typeof m.signMessage&&"publicKey"in m&&"object"==typeof m&&m.publicKey&&"toBase58"in m.publicKey&&"function"==typeof m.publicKey.toBase58))throw new Error("@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API");f=[`${v.host} wants you to sign in with your Solana account:`,m.publicKey.toBase58(),...p?["",p,""]:[""],"Version: 1",`URI: ${v.href}`,`Issued At: ${null!==(r=null===(t=null==g?void 0:g.signInWithSolana)||void 0===t?void 0:t.issuedAt)&&void 0!==r?r:(new Date).toISOString()}`,...(null===(a=null==g?void 0:g.signInWithSolana)||void 0===a?void 0:a.notBefore)?[`Not Before: ${g.signInWithSolana.notBefore}`]:[],...(null===(o=null==g?void 0:g.signInWithSolana)||void 0===o?void 0:o.expirationTime)?[`Expiration Time: ${g.signInWithSolana.expirationTime}`]:[],...(null===(i=null==g?void 0:g.signInWithSolana)||void 0===i?void 0:i.chainId)?[`Chain ID: ${g.signInWithSolana.chainId}`]:[],...(null===(s=null==g?void 0:g.signInWithSolana)||void 0===s?void 0:s.nonce)?[`Nonce: ${g.signInWithSolana.nonce}`]:[],...(null===(l=null==g?void 0:g.signInWithSolana)||void 0===l?void 0:l.requestId)?[`Request ID: ${g.signInWithSolana.requestId}`]:[],...(null===(u=null===(c=null==g?void 0:g.signInWithSolana)||void 0===c?void 0:c.resources)||void 0===u?void 0:u.length)?["Resources",...g.signInWithSolana.resources.map(e=>`- ${e}`)]:[]].join("\n");const e=await m.signMessage((new TextEncoder).encode(f),"utf8");if(!(e&&e instanceof Uint8Array))throw new Error("@supabase/auth-js: Wallet signMessage() API returned an recognized value");h=e}}try{const{data:n,error:t}=await Dn(this.fetch,"POST",`${this.url}/token?grant_type=web3`,{headers:this.headers,body:Object.assign({chain:"solana",message:f,signature:vn(h)},(null===(d=e.options)||void 0===d?void 0:d.captchaToken)?{gotrue_meta_security:{captcha_token:null===(A=e.options)||void 0===A?void 0:A.captchaToken}}:null),xform:Ln});if(t)throw t;return n&&n.session&&n.user?(n.session&&(await this._saveSession(n.session),await this._notifyAllSubscribers("SIGNED_IN",n.session)),{data:Object.assign({},n),error:t}):{data:{user:null,session:null},error:new nn}}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async _exchangeCodeForSession(e){const n=await xn(this.storage,`${this.storageKey}-code-verifier`),[t,r]=(null!=n?n:"").split("/");try{const{data:n,error:a}=await Dn(this.fetch,"POST",`${this.url}/token?grant_type=pkce`,{headers:this.headers,body:{auth_code:e,code_verifier:t},xform:Ln});if(await wn(this.storage,`${this.storageKey}-code-verifier`),a)throw a;return n&&n.session&&n.user?(n.session&&(await this._saveSession(n.session),await this._notifyAllSubscribers("SIGNED_IN",n.session)),{data:Object.assign(Object.assign({},n),{redirectType:null!=r?r:null}),error:a}):{data:{user:null,session:null,redirectType:null},error:new nn}}catch(e){if(Ze(e))return{data:{user:null,session:null,redirectType:null},error:e};throw e}}async signInWithIdToken(e){try{const{options:n,provider:t,token:r,access_token:a,nonce:o}=e,i=await Dn(this.fetch,"POST",`${this.url}/token?grant_type=id_token`,{headers:this.headers,body:{provider:t,id_token:r,access_token:a,nonce:o,gotrue_meta_security:{captcha_token:null==n?void 0:n.captchaToken}},xform:Ln}),{data:s,error:l}=i;return l?{data:{user:null,session:null},error:l}:s&&s.session&&s.user?(s.session&&(await this._saveSession(s.session),await this._notifyAllSubscribers("SIGNED_IN",s.session)),{data:s,error:l}):{data:{user:null,session:null},error:new nn}}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithOtp(e){var n,t,r,a,o;try{if("email"in e){const{email:r,options:a}=e;let o=null,i=null;"pkce"===this.flowType&&([o,i]=await _n(this.storage,this.storageKey));const{error:s}=await Dn(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{email:r,data:null!==(n=null==a?void 0:a.data)&&void 0!==n?n:{},create_user:null===(t=null==a?void 0:a.shouldCreateUser)||void 0===t||t,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken},code_challenge:o,code_challenge_method:i},redirectTo:null==a?void 0:a.emailRedirectTo});return{data:{user:null,session:null},error:s}}if("phone"in e){const{phone:n,options:t}=e,{data:i,error:s}=await Dn(this.fetch,"POST",`${this.url}/otp`,{headers:this.headers,body:{phone:n,data:null!==(r=null==t?void 0:t.data)&&void 0!==r?r:{},create_user:null===(a=null==t?void 0:t.shouldCreateUser)||void 0===a||a,gotrue_meta_security:{captcha_token:null==t?void 0:t.captchaToken},channel:null!==(o=null==t?void 0:t.channel)&&void 0!==o?o:"sms"}});return{data:{user:null,session:null,messageId:null==i?void 0:i.message_id},error:s}}throw new tn("You must provide either an email or phone number.")}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async verifyOtp(e){var n,t;try{let r,a;"options"in e&&(r=null===(n=e.options)||void 0===n?void 0:n.redirectTo,a=null===(t=e.options)||void 0===t?void 0:t.captchaToken);const{data:o,error:i}=await Dn(this.fetch,"POST",`${this.url}/verify`,{headers:this.headers,body:Object.assign(Object.assign({},e),{gotrue_meta_security:{captcha_token:a}}),redirectTo:r,xform:Ln});if(i)throw i;if(!o)throw new Error("An error occurred on token verification.");const s=o.session,l=o.user;return(null==s?void 0:s.access_token)&&(await this._saveSession(s),await this._notifyAllSubscribers("recovery"==e.type?"PASSWORD_RECOVERY":"SIGNED_IN",s)),{data:{user:l,session:s},error:null}}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async signInWithSSO(e){var n,t,r;try{let a=null,o=null;return"pkce"===this.flowType&&([a,o]=await _n(this.storage,this.storageKey)),await Dn(this.fetch,"POST",`${this.url}/sso`,{body:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},"providerId"in e?{provider_id:e.providerId}:null),"domain"in e?{domain:e.domain}:null),{redirect_to:null!==(t=null===(n=e.options)||void 0===n?void 0:n.redirectTo)&&void 0!==t?t:void 0}),(null===(r=null==e?void 0:e.options)||void 0===r?void 0:r.captchaToken)?{gotrue_meta_security:{captcha_token:e.options.captchaToken}}:null),{skip_http_redirect:!0,code_challenge:a,code_challenge_method:o}),headers:this.headers,xform:Mn})}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async reauthenticate(){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._reauthenticate())}async _reauthenticate(){try{return await this._useSession(async e=>{const{data:{session:n},error:t}=e;if(t)throw t;if(!n)throw new en;const{error:r}=await Dn(this.fetch,"GET",`${this.url}/reauthenticate`,{headers:this.headers,jwt:n.access_token});return{data:{user:null,session:null},error:r}})}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async resend(e){try{const n=`${this.url}/resend`;if("email"in e){const{email:t,type:r,options:a}=e,{error:o}=await Dn(this.fetch,"POST",n,{headers:this.headers,body:{email:t,type:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}},redirectTo:null==a?void 0:a.emailRedirectTo});return{data:{user:null,session:null},error:o}}if("phone"in e){const{phone:t,type:r,options:a}=e,{data:o,error:i}=await Dn(this.fetch,"POST",n,{headers:this.headers,body:{phone:t,type:r,gotrue_meta_security:{captcha_token:null==a?void 0:a.captchaToken}}});return{data:{user:null,session:null,messageId:null==o?void 0:o.message_id},error:i}}throw new tn("You must provide either an email or phone number and a type")}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async getSession(){return await this.initializePromise,await this._acquireLock(-1,async()=>this._useSession(async e=>e))}async _acquireLock(e,n){this._debug("#_acquireLock","begin",e);try{if(this.lockAcquired){const e=this.pendingInLock.length?this.pendingInLock[this.pendingInLock.length-1]:Promise.resolve(),t=(async()=>(await e,await n()))();return this.pendingInLock.push((async()=>{try{await t}catch(e){}})()),t}return await this.lock(`lock:${this.storageKey}`,e,async()=>{this._debug("#_acquireLock","lock acquired for storage key",this.storageKey);try{this.lockAcquired=!0;const e=n();for(this.pendingInLock.push((async()=>{try{await e}catch(e){}})()),await e;this.pendingInLock.length;){const e=[...this.pendingInLock];await Promise.all(e),this.pendingInLock.splice(0,e.length)}return await e}finally{this._debug("#_acquireLock","lock released for storage key",this.storageKey),this.lockAcquired=!1}})}finally{this._debug("#_acquireLock","end")}}async _useSession(e){this._debug("#_useSession","begin");try{const n=await this.__loadSession();return await e(n)}finally{this._debug("#_useSession","end")}}async __loadSession(){this._debug("#__loadSession()","begin"),this.lockAcquired||this._debug("#__loadSession()","used outside of an acquired lock!",(new Error).stack);try{let e=null;const n=await xn(this.storage,this.storageKey);if(this._debug("#getSession()","session from storage",n),null!==n&&(this._isValidSession(n)?e=n:(this._debug("#getSession()","session from storage is not valid"),await this._removeSession())),!e)return{data:{session:null},error:null};const t=!!e.expires_at&&1e3*e.expires_at-Date.now()<9e4;if(this._debug("#__loadSession()",`session has${t?"":" not"} expired`,"expires_at",e.expires_at),!t){if(this.storage.isServer){let n=this.suppressGetSessionWarning;e=new Proxy(e,{get:(e,t,r)=>(n||"user"!==t||(console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."),n=!0,this.suppressGetSessionWarning=!0),Reflect.get(e,t,r))})}return{data:{session:e},error:null}}const{session:r,error:a}=await this._callRefreshToken(e.refresh_token);return a?{data:{session:null},error:a}:{data:{session:r},error:null}}finally{this._debug("#__loadSession()","end")}}async getUser(e){return e?await this._getUser(e):(await this.initializePromise,await this._acquireLock(-1,async()=>await this._getUser()))}async _getUser(e){try{return e?await Dn(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:e,xform:Un}):await this._useSession(async e=>{var n,t,r;const{data:a,error:o}=e;if(o)throw o;return(null===(n=a.session)||void 0===n?void 0:n.access_token)||this.hasCustomAuthorizationHeader?await Dn(this.fetch,"GET",`${this.url}/user`,{headers:this.headers,jwt:null!==(r=null===(t=a.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0,xform:Un}):{data:{user:null},error:new en}})}catch(e){if(Ze(e))return function(e){return Ze(e)&&"AuthSessionMissingError"===e.name}(e)&&(await this._removeSession(),await wn(this.storage,`${this.storageKey}-code-verifier`)),{data:{user:null},error:e};throw e}}async updateUser(e,n={}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._updateUser(e,n))}async _updateUser(e,n={}){try{return await this._useSession(async t=>{const{data:r,error:a}=t;if(a)throw a;if(!r.session)throw new en;const o=r.session;let i=null,s=null;"pkce"===this.flowType&&null!=e.email&&([i,s]=await _n(this.storage,this.storageKey));const{data:l,error:c}=await Dn(this.fetch,"PUT",`${this.url}/user`,{headers:this.headers,redirectTo:null==n?void 0:n.emailRedirectTo,body:Object.assign(Object.assign({},e),{code_challenge:i,code_challenge_method:s}),jwt:o.access_token,xform:Un});if(c)throw c;return o.user=l.user,await this._saveSession(o),await this._notifyAllSubscribers("USER_UPDATED",o),{data:{user:o.user},error:null}})}catch(e){if(Ze(e))return{data:{user:null},error:e};throw e}}async setSession(e){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._setSession(e))}async _setSession(e){try{if(!e.access_token||!e.refresh_token)throw new en;const n=Date.now()/1e3;let t=n,r=!0,a=null;const{payload:o}=Sn(e.access_token);if(o.exp&&(t=o.exp,r=t<=n),r){const{session:n,error:t}=await this._callRefreshToken(e.refresh_token);if(t)return{data:{user:null,session:null},error:t};if(!n)return{data:{user:null,session:null},error:null};a=n}else{const{data:r,error:o}=await this._getUser(e.access_token);if(o)throw o;a={access_token:e.access_token,refresh_token:e.refresh_token,user:r.user,token_type:"bearer",expires_in:t-n,expires_at:t},await this._saveSession(a),await this._notifyAllSubscribers("SIGNED_IN",a)}return{data:{user:a.user,session:a},error:null}}catch(e){if(Ze(e))return{data:{session:null,user:null},error:e};throw e}}async refreshSession(e){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._refreshSession(e))}async _refreshSession(e){try{return await this._useSession(async n=>{var t;if(!e){const{data:r,error:a}=n;if(a)throw a;e=null!==(t=r.session)&&void 0!==t?t:void 0}if(!(null==e?void 0:e.refresh_token))throw new en;const{session:r,error:a}=await this._callRefreshToken(e.refresh_token);return a?{data:{user:null,session:null},error:a}:r?{data:{user:r.user,session:r},error:null}:{data:{user:null,session:null},error:null}})}catch(e){if(Ze(e))return{data:{user:null,session:null},error:e};throw e}}async _getSessionFromURL(e,n){try{if(!bn())throw new rn("No browser detected.");if(e.error||e.error_description||e.error_code)throw new rn(e.error_description||"Error in URL with unspecified error_description",{error:e.error||"unspecified_error",code:e.error_code||"unspecified_code"});switch(n){case"implicit":if("pkce"===this.flowType)throw new an("Not a valid PKCE flow url.");break;case"pkce":if("implicit"===this.flowType)throw new rn("Not a valid implicit grant flow url.")}if("pkce"===n){if(this._debug("#_initialize()","begin","is PKCE flow",!0),!e.code)throw new an("No code detected.");const{data:n,error:t}=await this._exchangeCodeForSession(e.code);if(t)throw t;const r=new URL(window.location.href);return r.searchParams.delete("code"),window.history.replaceState(window.history.state,"",r.toString()),{data:{session:n.session,redirectType:null},error:null}}const{provider_token:t,provider_refresh_token:r,access_token:a,refresh_token:o,expires_in:i,expires_at:s,token_type:l}=e;if(!(a&&i&&o&&l))throw new rn("No session defined in URL");const c=Math.round(Date.now()/1e3),u=parseInt(i);let d=c+u;s&&(d=parseInt(s));const A=d-c;1e3*A<=Ye&&console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${A}s, should have been closer to ${u}s`);const f=d-u;c-f>=120?console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale",f,d,c):c-f<0&&console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew",f,d,c);const{data:h,error:p}=await this._getUser(a);if(p)throw p;const g={provider_token:t,provider_refresh_token:r,access_token:a,expires_in:u,expires_at:d,refresh_token:o,token_type:l,user:h.user};return window.location.hash="",this._debug("#_getSessionFromURL()","clearing window.location.hash"),{data:{session:g,redirectType:e.type},error:null}}catch(e){if(Ze(e))return{data:{session:null,redirectType:null},error:e};throw e}}_isImplicitGrantCallback(e){return Boolean(e.access_token||e.error_description)}async _isPKCECallback(e){const n=await xn(this.storage,`${this.storageKey}-code-verifier`);return!(!e.code||!n)}async signOut(e={scope:"global"}){return await this.initializePromise,await this._acquireLock(-1,async()=>await this._signOut(e))}async _signOut({scope:e}={scope:"global"}){return await this._useSession(async n=>{var t;const{data:r,error:a}=n;if(a)return{error:a};const o=null===(t=r.session)||void 0===t?void 0:t.access_token;if(o){const{error:n}=await this.admin.signOut(o,e);if(n&&(!function(e){return Ze(e)&&"AuthApiError"===e.name}(n)||404!==n.status&&401!==n.status&&403!==n.status))return{error:n}}return"others"!==e&&(await this._removeSession(),await wn(this.storage,`${this.storageKey}-code-verifier`)),{error:null}})}onAuthStateChange(e){const n="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const n=16*Math.random()|0;return("x"==e?n:3&n|8).toString(16)}),t={id:n,callback:e,unsubscribe:()=>{this._debug("#unsubscribe()","state change callback with id removed",n),this.stateChangeEmitters.delete(n)}};return this._debug("#onAuthStateChange()","registered callback with id",n),this.stateChangeEmitters.set(n,t),(async()=>{await this.initializePromise,await this._acquireLock(-1,async()=>{this._emitInitialSession(n)})})(),{data:{subscription:t}}}async _emitInitialSession(e){return await this._useSession(async n=>{var t,r;try{const{data:{session:r},error:a}=n;if(a)throw a;await(null===(t=this.stateChangeEmitters.get(e))||void 0===t?void 0:t.callback("INITIAL_SESSION",r)),this._debug("INITIAL_SESSION","callback id",e,"session",r)}catch(n){await(null===(r=this.stateChangeEmitters.get(e))||void 0===r?void 0:r.callback("INITIAL_SESSION",null)),this._debug("INITIAL_SESSION","callback id",e,"error",n),console.error(n)}})}async resetPasswordForEmail(e,n={}){let t=null,r=null;"pkce"===this.flowType&&([t,r]=await _n(this.storage,this.storageKey,!0));try{return await Dn(this.fetch,"POST",`${this.url}/recover`,{body:{email:e,code_challenge:t,code_challenge_method:r,gotrue_meta_security:{captcha_token:n.captchaToken}},headers:this.headers,redirectTo:n.redirectTo})}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async getUserIdentities(){var e;try{const{data:n,error:t}=await this.getUser();if(t)throw t;return{data:{identities:null!==(e=n.user.identities)&&void 0!==e?e:[]},error:null}}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async linkIdentity(e){var n;try{const{data:t,error:r}=await this._useSession(async n=>{var t,r,a,o,i;const{data:s,error:l}=n;if(l)throw l;const c=await this._getUrlForProvider(`${this.url}/user/identities/authorize`,e.provider,{redirectTo:null===(t=e.options)||void 0===t?void 0:t.redirectTo,scopes:null===(r=e.options)||void 0===r?void 0:r.scopes,queryParams:null===(a=e.options)||void 0===a?void 0:a.queryParams,skipBrowserRedirect:!0});return await Dn(this.fetch,"GET",c,{headers:this.headers,jwt:null!==(i=null===(o=s.session)||void 0===o?void 0:o.access_token)&&void 0!==i?i:void 0})});if(r)throw r;return bn()&&!(null===(n=e.options)||void 0===n?void 0:n.skipBrowserRedirect)&&window.location.assign(null==t?void 0:t.url),{data:{provider:e.provider,url:null==t?void 0:t.url},error:null}}catch(n){if(Ze(n))return{data:{provider:e.provider,url:null},error:n};throw n}}async unlinkIdentity(e){try{return await this._useSession(async n=>{var t,r;const{data:a,error:o}=n;if(o)throw o;return await Dn(this.fetch,"DELETE",`${this.url}/user/identities/${e.identity_id}`,{headers:this.headers,jwt:null!==(r=null===(t=a.session)||void 0===t?void 0:t.access_token)&&void 0!==r?r:void 0})})}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async _refreshAccessToken(e){const n=`#_refreshAccessToken(${e.substring(0,5)}...)`;this._debug(n,"begin");try{const a=Date.now();return await(t=async t=>(t>0&&await async function(e){return await new Promise(n=>{setTimeout(()=>n(null),e)})}(200*Math.pow(2,t-1)),this._debug(n,"refreshing attempt",t),await Dn(this.fetch,"POST",`${this.url}/token?grant_type=refresh_token`,{body:{refresh_token:e},headers:this.headers,xform:Ln})),r=(e,n)=>{const t=200*Math.pow(2,e);return n&&sn(n)&&Date.now()+t-a<Ye},new Promise((e,n)=>{(async()=>{for(let a=0;a<1/0;a++)try{const n=await t(a);if(!r(a,null))return void e(n)}catch(e){if(!r(a,e))return void n(e)}})()}))}catch(e){if(this._debug(n,"error",e),Ze(e))return{data:{session:null,user:null},error:e};throw e}finally{this._debug(n,"end")}var t,r}_isValidSession(e){return"object"==typeof e&&null!==e&&"access_token"in e&&"refresh_token"in e&&"expires_at"in e}async _handleProviderSignIn(e,n){const t=await this._getUrlForProvider(`${this.url}/authorize`,e,{redirectTo:n.redirectTo,scopes:n.scopes,queryParams:n.queryParams});return this._debug("#_handleProviderSignIn()","provider",e,"options",n,"url",t),bn()&&!n.skipBrowserRedirect&&window.location.assign(t),{data:{provider:e,url:t},error:null}}async _recoverAndRefresh(){var e;const n="#_recoverAndRefresh()";this._debug(n,"begin");try{const t=await xn(this.storage,this.storageKey);if(this._debug(n,"session from storage",t),!this._isValidSession(t))return this._debug(n,"session is not valid"),void(null!==t&&await this._removeSession());const r=1e3*(null!==(e=t.expires_at)&&void 0!==e?e:1/0)-Date.now()<9e4;if(this._debug(n,`session has${r?"":" not"} expired with margin of 90000s`),r){if(this.autoRefreshToken&&t.refresh_token){const{error:e}=await this._callRefreshToken(t.refresh_token);e&&(console.error(e),sn(e)||(this._debug(n,"refresh failed with a non-retryable error, removing the session",e),await this._removeSession()))}}else await this._notifyAllSubscribers("SIGNED_IN",t)}catch(e){return this._debug(n,"error",e),void console.error(e)}finally{this._debug(n,"end")}}async _callRefreshToken(e){var n,t;if(!e)throw new en;if(this.refreshingDeferred)return this.refreshingDeferred.promise;const r=`#_callRefreshToken(${e.substring(0,5)}...)`;this._debug(r,"begin");try{this.refreshingDeferred=new kn;const{data:n,error:t}=await this._refreshAccessToken(e);if(t)throw t;if(!n.session)throw new en;await this._saveSession(n.session),await this._notifyAllSubscribers("TOKEN_REFRESHED",n.session);const r={session:n.session,error:null};return this.refreshingDeferred.resolve(r),r}catch(e){if(this._debug(r,"error",e),Ze(e)){const t={session:null,error:e};return sn(e)||await this._removeSession(),null===(n=this.refreshingDeferred)||void 0===n||n.resolve(t),t}throw null===(t=this.refreshingDeferred)||void 0===t||t.reject(e),e}finally{this.refreshingDeferred=null,this._debug(r,"end")}}async _notifyAllSubscribers(e,n,t=!0){const r=`#_notifyAllSubscribers(${e})`;this._debug(r,"begin",n,`broadcast = ${t}`);try{this.broadcastChannel&&t&&this.broadcastChannel.postMessage({event:e,session:n});const r=[],a=Array.from(this.stateChangeEmitters.values()).map(async t=>{try{await t.callback(e,n)}catch(e){r.push(e)}});if(await Promise.all(a),r.length>0){for(let e=0;e<r.length;e+=1)console.error(r[e]);throw r[0]}}finally{this._debug(r,"end")}}async _saveSession(e){this._debug("#_saveSession()",e),this.suppressGetSessionWarning=!0,await Bn(this.storage,this.storageKey,e)}async _removeSession(){this._debug("#_removeSession()"),await wn(this.storage,this.storageKey),await this._notifyAllSubscribers("SIGNED_OUT",null)}_removeVisibilityChangedCallback(){this._debug("#_removeVisibilityChangedCallback()");const e=this.visibilityChangedCallback;this.visibilityChangedCallback=null;try{e&&bn()&&(null===window||void 0===window?void 0:window.removeEventListener)&&window.removeEventListener("visibilitychange",e)}catch(e){console.error("removing visibilitychange callback failed",e)}}async _startAutoRefresh(){await this._stopAutoRefresh(),this._debug("#_startAutoRefresh()");const e=setInterval(()=>this._autoRefreshTokenTick(),Ye);this.autoRefreshTicker=e,e&&"object"==typeof e&&"function"==typeof e.unref?e.unref():"undefined"!=typeof Deno&&"function"==typeof Deno.unrefTimer&&Deno.unrefTimer(e),setTimeout(async()=>{await this.initializePromise,await this._autoRefreshTokenTick()},0)}async _stopAutoRefresh(){this._debug("#_stopAutoRefresh()");const e=this.autoRefreshTicker;this.autoRefreshTicker=null,e&&clearInterval(e)}async startAutoRefresh(){this._removeVisibilityChangedCallback(),await this._startAutoRefresh()}async stopAutoRefresh(){this._removeVisibilityChangedCallback(),await this._stopAutoRefresh()}async _autoRefreshTokenTick(){this._debug("#_autoRefreshTokenTick()","begin");try{await this._acquireLock(0,async()=>{try{const e=Date.now();try{return await this._useSession(async n=>{const{data:{session:t}}=n;if(!t||!t.refresh_token||!t.expires_at)return void this._debug("#_autoRefreshTokenTick()","no session");const r=Math.floor((1e3*t.expires_at-e)/Ye);this._debug("#_autoRefreshTokenTick()",`access token expires in ${r} ticks, a tick lasts 30000ms, refresh threshold is 3 ticks`),r<=3&&await this._callRefreshToken(t.refresh_token)})}catch(e){console.error("Auto refresh tick failed with error. This is likely a transient error.",e)}}finally{this._debug("#_autoRefreshTokenTick()","end")}})}catch(e){if(!(e.isAcquireTimeout||e instanceof Vn))throw e;this._debug("auto refresh token tick lock not available")}}async _handleVisibilityChange(){if(this._debug("#_handleVisibilityChange()"),!bn()||!(null===window||void 0===window?void 0:window.addEventListener))return this.autoRefreshToken&&this.startAutoRefresh(),!1;try{this.visibilityChangedCallback=async()=>await this._onVisibilityChanged(!1),null===window||void 0===window||window.addEventListener("visibilitychange",this.visibilityChangedCallback),await this._onVisibilityChanged(!0)}catch(e){console.error("_handleVisibilityChange",e)}}async _onVisibilityChanged(e){const n=`#_onVisibilityChanged(${e})`;this._debug(n,"visibilityState",document.visibilityState),"visible"===document.visibilityState?(this.autoRefreshToken&&this._startAutoRefresh(),e||(await this.initializePromise,await this._acquireLock(-1,async()=>{"visible"===document.visibilityState?await this._recoverAndRefresh():this._debug(n,"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting")}))):"hidden"===document.visibilityState&&this.autoRefreshToken&&this._stopAutoRefresh()}async _getUrlForProvider(e,n,t){const r=[`provider=${encodeURIComponent(n)}`];if((null==t?void 0:t.redirectTo)&&r.push(`redirect_to=${encodeURIComponent(t.redirectTo)}`),(null==t?void 0:t.scopes)&&r.push(`scopes=${encodeURIComponent(t.scopes)}`),"pkce"===this.flowType){const[e,n]=await _n(this.storage,this.storageKey),t=new URLSearchParams({code_challenge:`${encodeURIComponent(e)}`,code_challenge_method:`${encodeURIComponent(n)}`});r.push(t.toString())}if(null==t?void 0:t.queryParams){const e=new URLSearchParams(t.queryParams);r.push(e.toString())}return(null==t?void 0:t.skipBrowserRedirect)&&r.push(`skip_http_redirect=${t.skipBrowserRedirect}`),`${e}?${r.join("&")}`}async _unenroll(e){try{return await this._useSession(async n=>{var t;const{data:r,error:a}=n;return a?{data:null,error:a}:await Dn(this.fetch,"DELETE",`${this.url}/factors/${e.factorId}`,{headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async _enroll(e){try{return await this._useSession(async n=>{var t,r;const{data:a,error:o}=n;if(o)return{data:null,error:o};const i=Object.assign({friendly_name:e.friendlyName,factor_type:e.factorType},"phone"===e.factorType?{phone:e.phone}:{issuer:e.issuer}),{data:s,error:l}=await Dn(this.fetch,"POST",`${this.url}/factors`,{body:i,headers:this.headers,jwt:null===(t=null==a?void 0:a.session)||void 0===t?void 0:t.access_token});return l?{data:null,error:l}:("totp"===e.factorType&&(null===(r=null==s?void 0:s.totp)||void 0===r?void 0:r.qr_code)&&(s.totp.qr_code=`data:image/svg+xml;utf-8,${s.totp.qr_code}`),{data:s,error:null})})}catch(e){if(Ze(e))return{data:null,error:e};throw e}}async _verify(e){return this._acquireLock(-1,async()=>{try{return await this._useSession(async n=>{var t;const{data:r,error:a}=n;if(a)return{data:null,error:a};const{data:o,error:i}=await Dn(this.fetch,"POST",`${this.url}/factors/${e.factorId}/verify`,{body:{code:e.code,challenge_id:e.challengeId},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token});return i?{data:null,error:i}:(await this._saveSession(Object.assign({expires_at:Math.round(Date.now()/1e3)+o.expires_in},o)),await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED",o),{data:o,error:i})})}catch(e){if(Ze(e))return{data:null,error:e};throw e}})}async _challenge(e){return this._acquireLock(-1,async()=>{try{return await this._useSession(async n=>{var t;const{data:r,error:a}=n;return a?{data:null,error:a}:await Dn(this.fetch,"POST",`${this.url}/factors/${e.factorId}/challenge`,{body:{channel:e.channel},headers:this.headers,jwt:null===(t=null==r?void 0:r.session)||void 0===t?void 0:t.access_token})})}catch(e){if(Ze(e))return{data:null,error:e};throw e}})}async _challengeAndVerify(e){const{data:n,error:t}=await this._challenge({factorId:e.factorId});return t?{data:null,error:t}:await this._verify({factorId:e.factorId,challengeId:n.id,code:e.code})}async _listFactors(){const{data:{user:e},error:n}=await this.getUser();if(n)return{data:null,error:n};const t=(null==e?void 0:e.factors)||[],r=t.filter(e=>"totp"===e.factor_type&&"verified"===e.status),a=t.filter(e=>"phone"===e.factor_type&&"verified"===e.status);return{data:{all:t,totp:r,phone:a},error:null}}async _getAuthenticatorAssuranceLevel(){return this._acquireLock(-1,async()=>await this._useSession(async e=>{var n,t;const{data:{session:r},error:a}=e;if(a)return{data:null,error:a};if(!r)return{data:{currentLevel:null,nextLevel:null,currentAuthenticationMethods:[]},error:null};const{payload:o}=Sn(r.access_token);let i=null;o.aal&&(i=o.aal);let s=i;return(null!==(t=null===(n=r.user.factors)||void 0===n?void 0:n.filter(e=>"verified"===e.status))&&void 0!==t?t:[]).length>0&&(s="aal2"),{data:{currentLevel:i,nextLevel:s,currentAuthenticationMethods:o.amr||[]},error:null}}))}async fetchJwk(e,n={keys:[]}){let t=n.keys.find(n=>n.kid===e);if(t)return t;if(t=this.jwks.keys.find(n=>n.kid===e),t&&this.jwks_cached_at+6e5>Date.now())return t;const{data:r,error:a}=await Dn(this.fetch,"GET",`${this.url}/.well-known/jwks.json`,{headers:this.headers});if(a)throw a;if(!r.keys||0===r.keys.length)throw new cn("JWKS is empty");if(this.jwks=r,this.jwks_cached_at=Date.now(),t=r.keys.find(n=>n.kid===e),!t)throw new cn("No matching signing key found in JWKS");return t}async getClaims(e,n={keys:[]}){try{let t=e;if(!t){const{data:e,error:n}=await this.getSession();if(n||!e.session)return{data:null,error:n};t=e.session.access_token}const{header:r,payload:a,signature:o,raw:{header:i,payload:s}}=Sn(t);if(function(e){if(!e)throw new Error("Missing exp claim");if(e<=Math.floor(Date.now()/1e3))throw new Error("JWT has expired")}(a.exp),!r.kid||"HS256"===r.alg||!("crypto"in globalThis)||!("subtle"in globalThis.crypto)){const{error:e}=await this.getUser(t);if(e)throw e;return{data:{claims:a,header:r,signature:o},error:null}}const l=function(e){switch(e){case"RS256":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"ES256":return{name:"ECDSA",namedCurve:"P-256",hash:{name:"SHA-256"}};default:throw new Error("Invalid alg claim")}}(r.alg),c=await this.fetchJwk(r.kid,n),u=await crypto.subtle.importKey("jwk",c,l,!0,["verify"]);if(!await crypto.subtle.verify(l,u,o,function(e){const n=[];return function(e,n){for(let t=0;t<e.length;t+=1){let r=e.charCodeAt(t);if(r>55295&&r<=56319){const n=1024*(r-55296)&65535;r=65536+(e.charCodeAt(t+1)-56320&65535|n),t+=1}gn(r,n)}}(e,e=>n.push(e)),new Uint8Array(n)}(`${i}.${s}`)))throw new cn("Invalid JWT signature");return{data:{claims:a,header:r,signature:o},error:null}}catch(e){if(Ze(e))return{data:null,error:e};throw e}}}Xn.nextInstanceID=0;const et=Xn;class nt extends et{constructor(e){super(e)}}class tt{constructor(e,n,t){var r,a,o;if(this.supabaseUrl=e,this.supabaseKey=n,!e)throw new Error("supabaseUrl is required.");if(!n)throw new Error("supabaseKey is required.");const i=(s=e).endsWith("/")?s:s+"/";var s;const l=new URL(i);this.realtimeUrl=new URL("realtime/v1",l),this.realtimeUrl.protocol=this.realtimeUrl.protocol.replace("http","ws"),this.authUrl=new URL("auth/v1",l),this.storageUrl=new URL("storage/v1",l),this.functionsUrl=new URL("functions/v1",l);const c=`sb-${l.hostname.split(".")[0]}-auth-token`,u=function(e,n){var t,r;const{db:a,auth:o,realtime:i,global:s}=e,{db:l,auth:c,realtime:u,global:d}=n,A={db:Object.assign(Object.assign({},l),a),auth:Object.assign(Object.assign({},c),o),realtime:Object.assign(Object.assign({},u),i),global:Object.assign(Object.assign(Object.assign({},d),s),{headers:Object.assign(Object.assign({},null!==(t=null==d?void 0:d.headers)&&void 0!==t?t:{}),null!==(r=null==s?void 0:s.headers)&&void 0!==r?r:{})}),accessToken:()=>{return e=this,n=void 0,r=function*(){return""},new((t=void 0)||(t=Promise))(function(a,o){function i(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t(function(e){e(n)})).then(i,s)}l((r=r.apply(e,n||[])).next())});var e,n,t,r}};return e.accessToken?A.accessToken=e.accessToken:delete A.accessToken,A}(null!=t?t:{},{db:De,realtime:Re,auth:Object.assign(Object.assign({},Le),{storageKey:c}),global:Pe});this.storageKey=null!==(r=u.auth.storageKey)&&void 0!==r?r:"",this.headers=null!==(a=u.global.headers)&&void 0!==a?a:{},u.accessToken?(this.accessToken=u.accessToken,this.auth=new Proxy({},{get:(e,n)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(n)} is not possible`)}})):this.auth=this._initSupabaseAuthClient(null!==(o=u.auth)&&void 0!==o?o:{},this.headers,u.global.fetch),this.fetch=Fe(n,this._getAccessToken.bind(this),u.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},u.realtime)),this.rest=new T(new URL("rest/v1",l).href,{headers:this.headers,schema:u.db.schema,fetch:this.fetch}),u.accessToken||this._listenForAuthEvents()}get functions(){return new N(this.functionsUrl.href,{headers:this.headers,customFetch:this.fetch})}get storage(){return new Ie(this.storageUrl.href,this.headers,this.fetch)}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,n={},t={}){return this.rest.rpc(e,n,t)}channel(e,n={config:{}}){return this.realtime.channel(e,n)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,n,t,r,a,o;return t=this,r=void 0,o=function*(){if(this.accessToken)return yield this.accessToken();const{data:t}=yield this.auth.getSession();return null!==(n=null===(e=t.session)||void 0===e?void 0:e.access_token)&&void 0!==n?n:null},new((a=void 0)||(a=Promise))(function(e,n){function i(e){try{l(o.next(e))}catch(e){n(e)}}function s(e){try{l(o.throw(e))}catch(e){n(e)}}function l(n){var t;n.done?e(n.value):(t=n.value,t instanceof a?t:new a(function(e){e(t)})).then(i,s)}l((o=o.apply(t,r||[])).next())})}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:n,detectSessionInUrl:t,storage:r,storageKey:a,flowType:o,lock:i,debug:s},l,c){const u={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new nt({url:this.authUrl.href,headers:Object.assign(Object.assign({},u),l),storageKey:a,autoRefreshToken:e,persistSession:n,detectSessionInUrl:t,storage:r,flowType:o,lock:i,debug:s,fetch:c,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new Ae(this.realtimeUrl.href,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},null==e?void 0:e.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange((e,n)=>{this._handleTokenChanged(e,"CLIENT",null==n?void 0:n.access_token)})}_handleTokenChanged(e,n,t){"TOKEN_REFRESHED"!==e&&"SIGNED_IN"!==e||this.changedAccessToken===t?"SIGNED_OUT"===e&&(this.realtime.setAuth(),"STORAGE"==n&&this.auth.signOut(),this.changedAccessToken=void 0):this.changedAccessToken=t}}function rt(e){return rt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},rt(e)}function at(e,n,t){return(n=function(e){var n=function(e){if("object"!=rt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=rt(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==rt(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ot(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return it(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(it(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,it(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,it(d,"constructor",c),it(c,"constructor",l),l.displayName="GeneratorFunction",it(c,a,"GeneratorFunction"),it(d),it(d,a,"Generator"),it(d,r,function(){return this}),it(d,"toString",function(){return"[object Generator]"}),(ot=function(){return{w:o,m:A}})()}function it(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}it=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){it(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},it(e,n,t,r)}function st(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function lt(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){st(o,r,a,i,s,"next",e)}function s(e){st(o,r,a,i,s,"throw",e)}i(void 0)})}}var ct=((e,n,t)=>new tt("https://tpjnyiyvpyzzbzhajbjh.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRwam55aXl2cHl6emJ6aGFqYmpoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE2NDA1NTQsImV4cCI6MjA2NzIxNjU1NH0.cflFdHytlTUA_H_AP7E3Kry9-S-xw45pIRoJQtfk4AE",t))(0,0,{auth:{storage:{getItem:function(e){return lt(ot().m(function n(){var t;return ot().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,chrome.storage.local.get(e);case 1:return t=n.v,n.a(2,t[e]||null)}},n)}))()},setItem:function(e,n){return lt(ot().m(function t(){return ot().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,chrome.storage.local.set(at({},e,n));case 1:return t.a(2)}},t)}))()},removeItem:function(e){return lt(ot().m(function n(){return ot().w(function(n){for(;;)switch(n.n){case 0:return n.n=1,chrome.storage.local.remove(e);case 1:return n.a(2)}},n)}))()}},autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0}});function ut(e){return ut="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ut(e)}function dt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function At(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?dt(Object(t),!0).forEach(function(n){ft(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):dt(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function ft(e,n,t){return(n=Et(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ht(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return pt(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(pt(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,pt(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,pt(d,"constructor",c),pt(c,"constructor",l),l.displayName="GeneratorFunction",pt(c,a,"GeneratorFunction"),pt(d),pt(d,a,"Generator"),pt(d,r,function(){return this}),pt(d,"toString",function(){return"[object Generator]"}),(ht=function(){return{w:o,m:A}})()}function pt(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}pt=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){pt(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},pt(e,n,t,r)}function gt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||mt(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function mt(e,n){if(e){if("string"==typeof e)return vt(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?vt(e,n):void 0}}function vt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function bt(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function yt(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){bt(o,r,a,i,s,"next",e)}function s(e){bt(o,r,a,i,s,"throw",e)}i(void 0)})}}function Ct(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Et(r.key),r)}}function Et(e){var n=function(e){if("object"!=ut(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ut(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ut(n)?n:n+""}var Bt=new(function(){return e=function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"getData",value:(R=yt(ht().m(function e(){var n,t,r,a,o,i,s,l,c,u,d,A,f,h,p=this;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(n=e.v,t=n.data,!n.error&&t.session){e.n=2;break}return e.a(2,this.getDefaultData());case 2:return r=t.session.user,console.log("Fetching data for user:",r.id),e.n=3,Promise.all([ct.from("links").select("*").eq("user_id",r.id),ct.from("collections").select("*").eq("user_id",r.id)]);case 3:return a=e.v,o=gt(a,2),i=o[0],s=o[1],i.error&&console.error("Error fetching links:",i.error),s.error&&console.error("Error fetching collections:",s.error),l=(i.data||[]).map(function(e){return console.log("Storage: getData highlights for link",e.id,e.highlights),{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,isInInbox:e.is_in_inbox||!1,highlights:p.parseHighlights(e.highlights),createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain}}),c=(s.data||[]).map(function(e){return{id:e.id,name:e.name,description:e.description,color:e.color,createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at)}}),d=l,A=c,e.n=4,this.getSmartCollections();case 4:return f=e.v,h=this.getDefaultCategories(),u={links:d,collections:A,smartCollections:f,categories:h,settings:{defaultCategory:"general",autoSummarize:!0,enableSmartCollections:!0}},console.log("Data fetched from Supabase:",u),e.a(2,u)}},e,this)})),function(){return R.apply(this,arguments)})},{key:"addLink",value:(L=yt(ht().m(function e(n){var t,r,a,o,i,s,l,c;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(r=e.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){e.n=2;break}return console.error("User not logged in"),e.a(2,{success:!1,error:"User not logged in."});case 2:return i={user_id:o.id,collection_id:n.collectionId||null,url:n.url,title:n.title,favicon:n.favicon,domain:n.domain,user_note:n.userNote,ai_summary:n.aiSummary,category:n.category,is_in_inbox:n.isInInbox||!1,highlights:n.highlights?JSON.stringify(n.highlights):null},console.log("Storage: addLink dbLink.highlights:",i.highlights),e.n=3,ct.from("links").insert(i).select("id").single();case 3:if(s=e.v,l=s.data,!(c=s.error)){e.n=4;break}return console.error("Supabase addLink error:",c),e.a(2,{success:!1,error:c.message||"Database error occurred."});case 4:return e.a(2,{success:!0,linkId:l.id})}},e)})),function(e){return L.apply(this,arguments)})},{key:"updateLink",value:(D=yt(ht().m(function e(n,t){var r,a,o;return ht().w(function(e){for(;;)switch(e.n){case 0:return r=At(At({},t),{},{updated_at:new Date}),void 0!==t.highlights&&(r.highlights=t.highlights?JSON.stringify(t.highlights):null),delete r.collectionId,delete r.userNote,delete r.aiSummary,delete r.isInInbox,delete r.createdAt,delete r.updatedAt,void 0!==t.collectionId&&(r.collection_id=t.collectionId),void 0!==t.userNote&&(r.user_note=t.userNote),void 0!==t.aiSummary&&(r.ai_summary=t.aiSummary),void 0!==t.isInInbox&&(r.is_in_inbox=t.isInInbox),console.log("Storage: updateLink dbUpdates.highlights:",r.highlights),e.n=1,ct.from("links").update(r).eq("id",n);case 1:if(a=e.v,!(o=a.error)){e.n=2;break}throw o;case 2:return e.a(2)}},e)})),function(e,n){return D.apply(this,arguments)})},{key:"deleteLink",value:(P=yt(ht().m(function e(n){var t,r;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.from("links").delete().eq("id",n);case 1:if(t=e.v,!(r=t.error)){e.n=2;break}throw r;case 2:return e.a(2)}},e)})),function(e){return P.apply(this,arguments)})},{key:"addCollection",value:(O=yt(ht().m(function e(n){var t,r,a,o,i,s,l;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(r=e.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){e.n=2;break}throw new Error("User not logged in.");case 2:return i={user_id:o.id,name:n.name,description:n.description,color:n.color},e.n=3,ct.from("collections").insert(i);case 3:if(s=e.v,!(l=s.error)){e.n=4;break}throw l;case 4:return e.a(2)}},e)})),function(e){return O.apply(this,arguments)})},{key:"updateCollection",value:(I=yt(ht().m(function e(n,t){var r,a;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.from("collections").update(At(At({},t),{},{updatedAt:new Date})).eq("id",n);case 1:if(r=e.v,!(a=r.error)){e.n=2;break}throw a;case 2:return e.a(2)}},e)})),function(e,n){return I.apply(this,arguments)})},{key:"deleteCollection",value:(T=yt(ht().m(function e(n){var t,r;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.from("collections").delete().eq("id",n);case 1:if(t=e.v,!(r=t.error)){e.n=2;break}throw r;case 2:return e.a(2)}},e)})),function(e){return T.apply(this,arguments)})},{key:"searchLinks",value:(z=yt(ht().m(function e(n){var t,r,a,o,i,s,l,c,u=this;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(r=e.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){e.n=2;break}return console.error("User not logged in"),e.a(2,[]);case 2:if(n.trim()){e.n=3;break}return e.a(2,[]);case 3:return e.p=3,e.n=4,ct.rpc("search_user_links",{search_query:n.trim(),user_uuid:o.id,result_limit:50});case 4:if(i=e.v,s=i.data,!(l=i.error)){e.n=5;break}return console.error("Search error:",l),e.a(2,[]);case 5:return e.a(2,(s||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,isInInbox:e.is_in_inbox||!1,highlights:u.parseHighlights(e.highlights),createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain,searchRank:e.rank,searchHeadline:e.headline}}));case 6:return e.p=6,c=e.v,console.error("Search failed:",c),e.a(2,[])}},e,null,[[3,6]])})),function(e){return z.apply(this,arguments)})},{key:"getUserTags",value:(N=yt(ht().m(function e(){var n,t,r,a,o,i,s,l;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(t=e.v,r=t.data,a=null===(n=r.session)||void 0===n?void 0:n.user){e.n=2;break}return console.error("User not logged in"),e.a(2,[]);case 2:return e.p=2,e.n=3,ct.rpc("get_user_tags_with_counts",{user_uuid:a.id});case 3:if(o=e.v,i=o.data,!(s=o.error)){e.n=4;break}return console.error("Error fetching user tags:",s),e.a(2,[]);case 4:return e.a(2,(i||[]).map(function(e){return{id:e.id,name:e.name,usageCount:e.usage_count||0}}));case 5:return e.p=5,l=e.v,console.error("Failed to get user tags:",l),e.a(2,[])}},e,null,[[2,5]])})),function(){return N.apply(this,arguments)})},{key:"getLinkTags",value:(_=yt(ht().m(function e(n){var t,r,a,o;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,ct.rpc("get_link_tags",{link_uuid:n});case 1:if(t=e.v,r=t.data,!(a=t.error)){e.n=2;break}return console.error("Error fetching link tags:",a),e.a(2,[]);case 2:return e.a(2,r||[]);case 3:return e.p=3,o=e.v,console.error("Failed to get link tags:",o),e.a(2,[])}},e,null,[[0,3]])})),function(e){return _.apply(this,arguments)})},{key:"addTagsToLink",value:(j=yt(ht().m(function e(n,t){var r,a,o,i,s,l,c;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(a=e.v,o=a.data,i=null===(r=o.session)||void 0===r?void 0:r.user){e.n=2;break}return e.a(2,{success:!1,error:"User not logged in."});case 2:return e.p=2,e.n=3,ct.rpc("add_tags_to_link",{link_uuid:n,tag_names:t,user_uuid:i.id});case 3:if(s=e.v,!(l=s.error)){e.n=4;break}return console.error("Error adding tags to link:",l),e.a(2,{success:!1,error:l.message||"Failed to add tags."});case 4:return e.a(2,{success:!0});case 5:return e.p=5,c=e.v,console.error("Failed to add tags to link:",c),e.a(2,{success:!1,error:c.message})}},e,null,[[2,5]])})),function(e,n){return j.apply(this,arguments)})},{key:"getLinksByTag",value:(S=yt(ht().m(function e(n){var t,r,a,o,i,s,l,c,u=this;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(r=e.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){e.n=2;break}return console.error("User not logged in"),e.a(2,[]);case 2:return e.p=2,e.n=3,ct.rpc("get_links_by_tag",{user_uuid:o.id,tag_name:n});case 3:if(i=e.v,s=i.data,!(l=i.error)){e.n=4;break}return console.error("Error fetching links by tag:",l),e.a(2,[]);case 4:return e.a(2,(s||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,isInInbox:e.is_in_inbox||!1,highlights:u.parseHighlights(e.highlights),createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain}}));case 5:return e.p=5,c=e.v,console.error("Failed to get links by tag:",c),e.a(2,[])}},e,null,[[2,5]])})),function(e){return S.apply(this,arguments)})},{key:"cleanupUnusedTags",value:(k=yt(ht().m(function e(){var n,t,r,a,o,i,s,l;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(t=e.v,r=t.data,a=null===(n=r.session)||void 0===n?void 0:n.user){e.n=2;break}return e.a(2,0);case 2:return e.p=2,e.n=3,ct.rpc("cleanup_unused_tags",{user_uuid:a.id});case 3:if(o=e.v,i=o.data,!(s=o.error)){e.n=4;break}return console.error("Error cleaning up unused tags:",s),e.a(2,0);case 4:return e.a(2,i||0);case 5:return e.p=5,l=e.v,console.error("Failed to cleanup unused tags:",l),e.a(2,0)}},e,null,[[2,5]])})),function(){return k.apply(this,arguments)})},{key:"moveToInbox",value:(w=yt(ht().m(function e(n){var t,r;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.from("links").update({is_in_inbox:!0,collection_id:null,updated_at:(new Date).toISOString()}).eq("id",n);case 1:if(t=e.v,!(r=t.error)){e.n=2;break}throw r;case 2:return e.a(2)}},e)})),function(e){return w.apply(this,arguments)})},{key:"moveFromInbox",value:(x=yt(ht().m(function e(n,t){var r,a;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).eq("id",n);case 1:if(r=e.v,!(a=r.error)){e.n=2;break}throw a;case 2:return e.a(2)}},e)})),function(e,n){return x.apply(this,arguments)})},{key:"getInboxLinks",value:(B=yt(ht().m(function e(){var n,t,r,a,o,i,s,l=this;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(t=e.v,r=t.data,a=null===(n=r.session)||void 0===n?void 0:n.user){e.n=2;break}return e.a(2,[]);case 2:return e.n=3,ct.from("links").select("*").eq("user_id",a.id).eq("is_in_inbox",!0).order("created_at",{ascending:!1});case 3:if(o=e.v,i=o.data,!(s=o.error)){e.n=4;break}return console.error("Error fetching inbox links:",s),e.a(2,[]);case 4:return e.a(2,(i||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,userNote:e.user_note||"",aiSummary:e.ai_summary,category:e.category,collectionId:e.collection_id,isInInbox:e.is_in_inbox||!1,highlights:l.parseHighlights(e.highlights),createdAt:new Date(e.created_at),updatedAt:new Date(e.updated_at),domain:e.domain}}))}},e)})),function(){return B.apply(this,arguments)})},{key:"bulkMoveFromInbox",value:(E=yt(ht().m(function e(n,t){var r,a;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.from("links").update({is_in_inbox:!1,collection_id:t||null,updated_at:(new Date).toISOString()}).in("id",n);case 1:if(r=e.v,!(a=r.error)){e.n=2;break}throw a;case 2:return e.a(2)}},e)})),function(e,n){return E.apply(this,arguments)})},{key:"toggleCollectionSharing",value:(C=yt(ht().m(function e(n,t){var r,a,o,i,s,l,c,u,d;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(a=e.v,o=a.data,i=null===(r=o.session)||void 0===r?void 0:r.user){e.n=2;break}return e.a(2,{success:!1,message:"User not logged in."});case 2:return e.p=2,e.n=3,ct.rpc("toggle_collection_sharing",{collection_uuid:n,user_uuid:i.id,make_public:t});case 3:if(s=e.v,l=s.data,!(c=s.error)){e.n=4;break}return console.error("Error toggling collection sharing:",c),e.a(2,{success:!1,message:c.message||"Failed to update sharing settings."});case 4:return u=null==l?void 0:l[0],e.a(2,{success:(null==u?void 0:u.success)||!1,shareToken:null==u?void 0:u.share_token,message:(null==u?void 0:u.message)||"Sharing settings updated."});case 5:return e.p=5,d=e.v,console.error("Failed to toggle collection sharing:",d),e.a(2,{success:!1,message:d.message})}},e,null,[[2,5]])})),function(e,n){return C.apply(this,arguments)})},{key:"getCollectionSharingInfo",value:(y=yt(ht().m(function e(n){var t,r,a,o,i,s,l,c;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(r=e.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){e.n=2;break}return e.a(2,null);case 2:return e.p=2,e.n=3,ct.from("collections").select("is_public, share_token, view_count").eq("id",n).eq("user_id",o.id).single();case 3:if(i=e.v,s=i.data,!(l=i.error)){e.n=4;break}return console.error("Error fetching collection sharing info:",l),e.a(2,null);case 4:return e.a(2,{isPublic:s.is_public||!1,shareToken:s.share_token,viewCount:s.view_count||0});case 5:return e.p=5,c=e.v,console.error("Failed to get collection sharing info:",c),e.a(2,null)}},e,null,[[2,5]])})),function(e){return y.apply(this,arguments)})},{key:"getSmartCollections",value:(b=yt(ht().m(function e(){var n;return ht().w(function(e){for(;;)if(0===e.n)return n=this.getDefaultSmartCollections(),e.a(2,n)},e,this)})),function(){return b.apply(this,arguments)})},{key:"generateAISmartCollections",value:(v=yt(ht().m(function e(n){var t,r,o;return ht().w(function(e){for(;;)switch(e.n){case 0:if(e.p=0,!(n.length>5)){e.n=3;break}return e.n=1,a.e(508).then(a.bind(a,508));case 1:return t=e.v,r=t.aiService,e.n=2,r.generateSmartCollectionSuggestions(n);case 2:return e.a(2,e.v);case 3:e.n=5;break;case 4:e.p=4,o=e.v,console.error("Failed to generate AI smart collection suggestions:",o);case 5:return e.a(2,[])}},e,null,[[0,4]])})),function(e){return v.apply(this,arguments)})},{key:"createSmartCollection",value:(m=yt(ht().m(function e(n){return ht().w(function(e){for(;;)switch(e.n){case 0:console.log("Creating smart collection:",n);case 1:return e.a(2)}},e)})),function(e){return m.apply(this,arguments)})},{key:"updateSmartCollection",value:(g=yt(ht().m(function e(n,t){return ht().w(function(e){for(;;)switch(e.n){case 0:console.log("Updating smart collection:",n,t);case 1:return e.a(2)}},e)})),function(e,n){return g.apply(this,arguments)})},{key:"deleteSmartCollection",value:(p=yt(ht().m(function e(n){return ht().w(function(e){for(;;)switch(e.n){case 0:console.log("Deleting smart collection:",n);case 1:return e.a(2)}},e)})),function(e){return p.apply(this,arguments)})},{key:"getSmartCollectionLinks",value:(h=yt(ht().m(function e(n){var t,r,a;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,this.getSmartCollections();case 1:if(t=e.v,r=t.find(function(e){return e.id===n})){e.n=2;break}return e.a(2,[]);case 2:return e.n=3,this.getData();case 3:return a=e.v.links,e.a(2,this.filterLinksForSmartCollection(a,r))}},e,this)})),function(e){return h.apply(this,arguments)})},{key:"filterLinksForSmartCollection",value:function(e,n){var t,r,a,o,i=this,s=function(e){return function(e){if(Array.isArray(e))return vt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||mt(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e);if(null!==(t=n.filters)&&void 0!==t&&t.dateRange){var l=n.filters.dateRange,c=l.start,u=l.end;s=s.filter(function(e){var n=e.createdAt;return!(c&&n<c||u&&n>u)})}switch(null!==(r=n.filters)&&void 0!==r&&null!==(r=r.categories)&&void 0!==r&&r.length&&(s=s.filter(function(e){return n.filters.categories.includes(e.category)})),null!==(a=n.filters)&&void 0!==a&&null!==(a=a.domains)&&void 0!==a&&a.length&&(s=s.filter(function(e){return n.filters.domains.some(function(n){return e.domain.includes(n)})})),null!==(o=n.filters)&&void 0!==o&&null!==(o=o.contentType)&&void 0!==o&&o.length&&(s=s.filter(function(e){var t=i.detectContentTypeFromDomain(e.domain);return n.filters.contentType.includes(t)})),n.id){case"recent-reads":return s.filter(function(e){return e.createdAt>=new Date(Date.now()-6048e5)}).sort(function(e,n){return n.createdAt.getTime()-e.createdAt.getTime()}).slice(0,20);case"ai-related":return s.filter(function(e){return i.isAIRelated(e)}).sort(function(e,n){return n.createdAt.getTime()-e.createdAt.getTime()});case"unread":return s.filter(function(e){return!e.userNote||""===e.userNote.trim()}).sort(function(e,n){return n.createdAt.getTime()-e.createdAt.getTime()});case"tutorials":return s.filter(function(e){return i.isTutorial(e)}).sort(function(e,n){return n.createdAt.getTime()-e.createdAt.getTime()});case"github-repos":return s.filter(function(e){return e.domain.includes("github.com")}).sort(function(e,n){return n.createdAt.getTime()-e.createdAt.getTime()});default:return s}}},{key:"detectContentTypeFromDomain",value:function(e){return e.includes("youtube.com")||e.includes("vimeo.com")?"video":e.includes("github.com")?"tool":e.includes("docs.")||e.includes("documentation")?"documentation":e.includes("medium.com")||e.includes("blog")?"blog":e.includes("news")||e.includes("cnn.com")?"news":"article"}},{key:"isAIRelated",value:function(e){var n="".concat(e.title," ").concat(e.userNote," ").concat(e.aiSummary||"").toLowerCase();return["artificial intelligence","machine learning","deep learning","neural network","ai","ml","gpt","chatgpt","openai","tensorflow","pytorch","llm","natural language processing","nlp","computer vision","reinforcement learning"].some(function(e){return n.includes(e)})}},{key:"isTutorial",value:function(e){var n="".concat(e.title," ").concat(e.userNote).toLowerCase();return["tutorial","how to","guide","step by step","learn","course","introduction to","getting started","beginner","walkthrough"].some(function(e){return n.includes(e)})}},{key:"getDefaultSmartCollections",value:function(){var e=new Date;return[{id:"recent-reads",name:"📚 Recent Reads",description:"Links saved in the last 7 days",query:"created_at >= now() - interval '7 days'",isSystem:!0,autoUpdate:!0,icon:"📚",color:"#3b82f6",filters:{dateRange:{start:new Date(Date.now()-6048e5)}},createdAt:e,updatedAt:e},{id:"ai-related",name:"🤖 AI & Machine Learning",description:"Content related to artificial intelligence and machine learning",query:"title ILIKE '%ai%' OR title ILIKE '%machine learning%' OR title ILIKE '%neural%'",isSystem:!0,autoUpdate:!0,icon:"🤖",color:"#8b5cf6",createdAt:e,updatedAt:e},{id:"unread",name:"📖 To Read",description:"Links without notes (likely unread)",query:"user_note IS NULL OR user_note = ''",isSystem:!0,autoUpdate:!0,icon:"📖",color:"#f59e0b",createdAt:e,updatedAt:e},{id:"tutorials",name:"🎓 Tutorials & Guides",description:"Educational content and tutorials",query:"title ILIKE '%tutorial%' OR title ILIKE '%guide%' OR title ILIKE '%how to%'",isSystem:!0,autoUpdate:!0,icon:"🎓",color:"#10b981",createdAt:e,updatedAt:e},{id:"github-repos",name:"⭐ GitHub Repositories",description:"GitHub repositories and projects",query:"domain LIKE '%github.com%'",isSystem:!0,autoUpdate:!0,icon:"⭐",color:"#6b7280",filters:{domains:["github.com"]},createdAt:e,updatedAt:e}]}},{key:"getDefaultCategories",value:function(){return[{id:"general",name:"General",color:"#6b7280",isDefault:!0},{id:"work",name:"Work",color:"#3b82f6"},{id:"personal",name:"Personal",color:"#10b981"},{id:"learning",name:"Learning",color:"#f59e0b"}]}},{key:"getDefaultData",value:function(){return{links:[],collections:[],smartCollections:[],categories:this.getDefaultCategories(),settings:{defaultCategory:"general",autoSummarize:!0,enableSmartCollections:!0}}}},{key:"getLinkByUrl",value:(f=yt(ht().m(function e(n){var t,r,a,o,i,s,l;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.getSession();case 1:if(r=e.v,a=r.data,o=null===(t=a.session)||void 0===t?void 0:t.user){e.n=2;break}return e.a(2,null);case 2:return e.n=3,ct.from("links").select("*").eq("user_id",o.id).eq("url",n).single();case 3:if(i=e.v,s=i.data,!(l=i.error)){e.n=5;break}if("PGRST116"!==l.code){e.n=4;break}return e.a(2,null);case 4:throw l;case 5:return e.a(2,{id:s.id,url:s.url,title:s.title,favicon:s.favicon,userNote:s.user_note||"",aiSummary:s.ai_summary,category:s.category,collectionId:s.collection_id,isInInbox:s.is_in_inbox||!1,highlights:this.parseHighlights(s.highlights),createdAt:new Date(s.created_at),updatedAt:new Date(s.updated_at),domain:s.domain})}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"parseHighlights",value:function(e){if(!e)return console.log("Storage: No highlights data found"),[];if("string"==typeof e)try{var n=JSON.parse(e),t=Array.isArray(n)?n:[];return console.log("Storage: Parsed highlights from JSON:",t.length,"highlights",t),t}catch(e){return console.warn("Failed to parse highlights JSON:",e),[]}return Array.isArray(e)?(console.log("Storage: Found highlights array:",e.length,"highlights",e),e):(console.log("Storage: Highlights data in unexpected format:",ut(e),e),[])}},{key:"logActivity",value:(A=yt(ht().m(function e(n,t,r,a){var o,i,s,l;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,this.getActivities();case 1:return o=e.v,i={id:Date.now().toString(),type:n,linkId:t,collectionId:r,metadata:a,createdAt:new Date},o.push(i),s=o.slice(-1e3),e.n=2,chrome.storage.local.set({nest_activities:s});case 2:return e.n=3,this.updateStreaks(n);case 3:console.log("Activity logged:",i),e.n=5;break;case 4:e.p=4,l=e.v,console.error("Failed to log activity:",l);case 5:return e.a(2)}},e,this,[[0,4]])})),function(e,n,t,r){return A.apply(this,arguments)})},{key:"getActivities",value:(d=yt(ht().m(function e(){var n,t,r,a,o=arguments;return ht().w(function(e){for(;;)switch(e.n){case 0:return n=o.length>0&&void 0!==o[0]?o[0]:100,e.p=1,e.n=2,chrome.storage.local.get("nest_activities");case 2:return t=e.v,r=t.nest_activities||[],e.a(2,r.slice(-n).reverse());case 3:return e.p=3,a=e.v,console.error("Failed to get activities:",a),e.a(2,[])}},e,null,[[1,3]])})),function(){return d.apply(this,arguments)})},{key:"getActivityStats",value:(u=yt(ht().m(function e(){var n,t,r,a,o,i;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,this.getActivities(1e3);case 1:return r=e.v,e.n=2,this.getStreaks();case 2:return a=e.v,o={totalSaves:r.filter(function(e){return"save"===e.type}).length,totalReads:r.filter(function(e){return"read"===e.type}).length,totalHighlights:r.filter(function(e){return"highlight"===e.type}).length,totalOrganizations:r.filter(function(e){return"organize"===e.type}).length,totalSearches:r.filter(function(e){return"search"===e.type}).length,activeDays:this.getUniqueDays(r).length,currentStreak:(null===(n=a.find(function(e){return"daily_save"===e.type}))||void 0===n?void 0:n.currentCount)||0,bestStreak:(null===(t=a.find(function(e){return"daily_save"===e.type}))||void 0===t?void 0:t.bestCount)||0,thisWeekActivity:this.getThisWeekActivity(r),lastActiveDate:r.length>0?new Date(r[0].createdAt):void 0},e.a(2,o);case 3:return e.p=3,i=e.v,console.error("Failed to get activity stats:",i),e.a(2,{totalSaves:0,totalReads:0,totalHighlights:0,totalOrganizations:0,totalSearches:0,activeDays:0,currentStreak:0,bestStreak:0,thisWeekActivity:0})}},e,this,[[0,3]])})),function(){return u.apply(this,arguments)})},{key:"getStreaks",value:(c=yt(ht().m(function e(){var n,t;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.get("nest_streaks");case 1:return n=e.v,e.a(2,n.nest_streaks||[]);case 2:return e.p=2,t=e.v,console.error("Failed to get streaks:",t),e.a(2,[])}},e,null,[[0,2]])})),function(){return c.apply(this,arguments)})},{key:"updateStreaks",value:(l=yt(ht().m(function e(n){var t,r,a,o,i,s,l,c,u;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,this.getStreaks();case 1:return t=e.v,r=(new Date).toDateString(),"save"===n&&((a=t.find(function(e){return"daily_save"===e.type}))||(a={id:"daily_save",type:"daily_save",currentCount:0,bestCount:0,lastActivityAt:new Date,createdAt:new Date},t.push(a)),o=new Date(a.lastActivityAt).toDateString(),i=new Date(Date.now()-864e5).toDateString(),o===r||(o===i?(a.currentCount++,a.lastActivityAt=new Date):(a.currentCount=1,a.lastActivityAt=new Date)),a.currentCount>a.bestCount&&(a.bestCount=a.currentCount)),"organize"===n&&((s=t.find(function(e){return"weekly_organize"===e.type}))||(s={id:"weekly_organize",type:"weekly_organize",currentCount:0,bestCount:0,lastActivityAt:new Date,createdAt:new Date},t.push(s)),l=this.getWeekNumber(new Date),c=this.getWeekNumber(new Date(s.lastActivityAt)),l===c||(l===c+1?(s.currentCount++,s.lastActivityAt=new Date):(s.currentCount=1,s.lastActivityAt=new Date)),s.currentCount>s.bestCount&&(s.bestCount=s.currentCount)),e.n=2,chrome.storage.local.set({nest_streaks:t});case 2:e.n=4;break;case 3:e.p=3,u=e.v,console.error("Failed to update streaks:",u);case 4:return e.a(2)}},e,this,[[0,3]])})),function(e){return l.apply(this,arguments)})},{key:"getUniqueDays",value:function(e){var n=new Set;return e.forEach(function(e){var t=new Date(e.createdAt).toDateString();n.add(t)}),Array.from(n)}},{key:"getThisWeekActivity",value:function(e){var n=new Date(Date.now()-6048e5);return e.filter(function(e){return new Date(e.createdAt)>=n}).length}},{key:"getWeekNumber",value:function(e){var n=new Date(e.getFullYear(),0,1);return Math.ceil(((e.getTime()-n.getTime())/864e5+n.getDay()+1)/7)}},{key:"shouldShowNudge",value:(s=yt(ht().m(function e(){var n,t,r,a,o,i;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,this.getActivityStats();case 1:return n=e.v,e.n=2,this.getActivities(50);case 2:if(t=e.v,r=(new Date).toDateString(),0!==t.filter(function(e){return new Date(e.createdAt).toDateString()===r&&"save"===e.type}).length){e.n=5;break}if(!(n.currentStreak>0)){e.n=3;break}return e.a(2,{show:!0,type:"streak_reminder",message:"You have a ".concat(n.currentStreak,"-day saving streak! Don't break it - save something today.")});case 3:if(!n.lastActiveDate){e.n=4;break}if(!((a=Math.floor((Date.now()-n.lastActiveDate.getTime())/864e5))>=3)){e.n=4;break}return e.a(2,{show:!0,type:"inactive_reminder",message:"Welcome back! You haven't saved anything in ".concat(a," days. Found something interesting?")});case 4:if(!((o=(new Date).getHours())>=10&&o<=20)){e.n=5;break}return e.a(2,{show:!0,type:"daily_reminder",message:"Discover something new today? Save it to Nest!"});case 5:return e.a(2,{show:!1});case 6:return e.p=6,i=e.v,console.error("Failed to check nudge status:",i),e.a(2,{show:!1})}},e,this,[[0,6]])})),function(){return s.apply(this,arguments)})}],t=[{key:"getPublicCollection",value:(i=yt(ht().m(function e(n){var t,r,a,o,i;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,ct.rpc("get_public_collection",{token:n});case 1:if(t=e.v,r=t.data,!(a=t.error)){e.n=2;break}return console.error("Error fetching public collection:",a),e.a(2,null);case 2:if(o=null==r?void 0:r[0]){e.n=3;break}return e.a(2,null);case 3:return e.a(2,{id:o.id,name:o.name,description:o.description,viewCount:o.view_count||0,createdAt:new Date(o.created_at),ownerEmail:o.owner_email});case 4:return e.p=4,i=e.v,console.error("Failed to get public collection:",i),e.a(2,null)}},e,null,[[0,4]])})),function(e){return i.apply(this,arguments)})},{key:"getPublicCollectionLinks",value:(o=yt(ht().m(function e(n){var t,r,a,o;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,ct.rpc("get_public_collection_links",{token:n});case 1:if(t=e.v,r=t.data,!(a=t.error)){e.n=2;break}return console.error("Error fetching public collection links:",a),e.a(2,[]);case 2:return e.a(2,(r||[]).map(function(e){return{id:e.id,url:e.url,title:e.title,favicon:e.favicon,domain:e.domain,userNote:e.user_note,aiSummary:e.ai_summary,category:e.category,createdAt:new Date(e.created_at),tags:e.tag_names||[]}}));case 3:return e.p=3,o=e.v,console.error("Failed to get public collection links:",o),e.a(2,[])}},e,null,[[0,3]])})),function(e){return o.apply(this,arguments)})},{key:"incrementViewCount",value:(r=yt(ht().m(function e(n){var t,r,a;return ht().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,ct.rpc("increment_collection_views",{token:n});case 1:t=e.v,(r=t.error)&&console.error("Error incrementing view count:",r),e.n=3;break;case 2:e.p=2,a=e.v,console.error("Failed to increment view count:",a);case 3:return e.a(2)}},e,null,[[0,2]])})),function(e){return r.apply(this,arguments)})}],n&&Ct(e.prototype,n),t&&Ct(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n,t,r,o,i,s,l,c,u,d,A,f,h,p,g,m,v,b,y,C,E,B,x,w,k,S,j,_,N,z,T,I,O,P,D,L,R}());const xt=l("ExternalLink",[["path",{d:"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6",key:"a6xqqp"}],["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["line",{x1:"10",x2:"21",y1:"14",y2:"3",key:"18c3s4"}]]),wt=l("MoreHorizontal",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]),kt=l("PenLine",[["path",{d:"M12 20h9",key:"t2du7b"}],["path",{d:"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z",key:"ymcmye"}]]),St=l("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);var jt=a(848);function _t(e){return function(e){if(Array.isArray(e))return Tt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||zt(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||zt(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function zt(e,n){if(e){if("string"==typeof e)return Tt(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Tt(e,n):void 0}}function Tt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const It=function(e){var n=e.selectedTags,t=e.availableTags,r=e.onTagsChange,a=e.placeholder,i=void 0===a?"Add tags...":a,s=e.maxTags,l=void 0===s?10:s,c=Nt((0,o.useState)(""),2),u=c[0],A=c[1],f=Nt((0,o.useState)(!1),2),p=f[0],g=f[1],m=Nt((0,o.useState)(-1),2),v=m[0],b=m[1],y=(0,o.useRef)(null),C=t.filter(function(e){return e.name.toLowerCase().includes(u.toLowerCase())&&!n.find(function(n){return n.name===e.name})}).slice(0,8),E=function(e){var t;n.length>=l||n.find(function(n){return n.name===e.name})||(r([].concat(_t(n),[e])),A(""),g(!1),b(-1),null===(t=y.current)||void 0===t||t.focus())},B=function(e){var t;r(n.filter(function(n){return n.name!==e.name})),null===(t=y.current)||void 0===t||t.focus()},x=function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]};return(0,jt.jsxs)("div",{className:"tag-input-container",children:[(0,jt.jsxs)("div",{className:"tag-input-wrapper",children:[n.map(function(e){return(0,jt.jsxs)("div",{className:"tag-chip",style:{backgroundColor:x(e.name)},children:[(0,jt.jsx)("span",{className:"tag-name",children:e.name}),(0,jt.jsx)("button",{onClick:function(){return B(e)},className:"tag-remove",type:"button",title:"Remove ".concat(e.name," tag"),"aria-label":"Remove ".concat(e.name," tag"),children:(0,jt.jsx)(h,{size:12})})]},e.name)}),(0,jt.jsx)("input",{ref:y,type:"text",value:u,onChange:function(e){var n=e.target.value;A(n),g(n.length>0),b(-1)},onKeyDown:function(e){"Enter"===e.key?(e.preventDefault(),v>=0&&C[v]?E(C[v]):u.trim()&&function(e){var t;if(!(n.length>=l||n.find(function(n){return n.name.toLowerCase()===e.toLowerCase()}))){var a={id:"",name:e.toLowerCase()};r([].concat(_t(n),[a])),A(""),g(!1),b(-1),null===(t=y.current)||void 0===t||t.focus()}}(u.trim())):"ArrowDown"===e.key?(e.preventDefault(),b(function(e){return e<C.length-1?e+1:e})):"ArrowUp"===e.key?(e.preventDefault(),b(function(e){return e>0?e-1:-1})):"Escape"===e.key?(g(!1),b(-1)):"Backspace"===e.key&&!u&&n.length>0&&B(n[n.length-1])},onFocus:function(){return g(u.length>0)},onBlur:function(){return setTimeout(function(){return g(!1)},150)},placeholder:0===n.length?i:"",className:"tag-input",disabled:n.length>=l}),n.length<l&&(0,jt.jsx)("div",{className:"tag-input-icon",children:(0,jt.jsx)(d,{size:14})})]}),p&&C.length>0&&(0,jt.jsx)("div",{className:"tag-suggestions",children:C.map(function(e,n){return(0,jt.jsxs)("button",{onClick:function(){return function(e){E(e)}(e)},className:"tag-suggestion ".concat(n===v?"focused":""),type:"button",children:[(0,jt.jsx)("span",{className:"tag-suggestion-color",style:{backgroundColor:x(e.name)}}),(0,jt.jsx)("span",{className:"tag-suggestion-name",children:e.name}),e.usageCount&&e.usageCount>0&&(0,jt.jsxs)("span",{className:"tag-suggestion-count",children:["(",e.usageCount,")"]})]},e.id)})})]})};function Ot(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Pt(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Pt(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pt(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Dt=function(e){var n=e.highlight,t=e.onAddNote,r=e.onDelete,a=Ot((0,o.useState)(!1),2),i=a[0],s=a[1],l=Ot((0,o.useState)(n.userNote||""),2),c=l[0],u=l[1];return(0,jt.jsxs)("div",{className:"highlight-card",children:[(0,jt.jsxs)("div",{className:"highlight-content",children:[(0,jt.jsxs)("div",{className:"highlight-text",children:[(0,jt.jsx)("div",{className:"highlight-icon",children:(0,jt.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,jt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z",fill:"currentColor"})})}),(0,jt.jsxs)("p",{className:"highlight-selected-text",children:['"',n.selectedText,'"']})]}),n.context&&n.context!==n.selectedText&&(0,jt.jsx)("div",{className:"highlight-context",children:(0,jt.jsxs)("p",{children:["Context: ",n.context]})}),n.userNote&&!i&&(0,jt.jsx)("div",{className:"highlight-note",children:(0,jt.jsx)("p",{children:n.userNote})}),i&&(0,jt.jsxs)("div",{className:"highlight-note-form",children:[(0,jt.jsx)("textarea",{value:c,onChange:function(e){return u(e.target.value)},placeholder:"Add your thoughts about this highlight...",autoFocus:!0}),(0,jt.jsxs)("div",{className:"highlight-note-actions",children:[(0,jt.jsx)("button",{onClick:function(){t&&t(n.id,c),s(!1)},className:"save-button",children:"Save"}),(0,jt.jsx)("button",{onClick:function(){u(n.userNote||""),s(!1)},className:"cancel-button",children:"Cancel"})]})]})]}),(0,jt.jsxs)("div",{className:"highlight-actions",children:[(0,jt.jsx)("span",{className:"highlight-date",children:new Date(n.createdAt).toLocaleDateString()}),(0,jt.jsxs)("div",{className:"highlight-buttons",children:[!i&&(0,jt.jsx)("button",{onClick:function(){return s(!0)},className:"highlight-action-button",title:n.userNote?"Edit note":"Add note",children:(0,jt.jsxs)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,jt.jsx)("path",{d:"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,jt.jsx)("path",{d:"m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})}),r&&(0,jt.jsx)("button",{onClick:function(){return r(n.id)},className:"highlight-action-button delete-button",title:"Delete highlight",children:(0,jt.jsxs)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,jt.jsx)("path",{d:"m18 6-12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}),(0,jt.jsx)("path",{d:"m6 6 12 12",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]})})]})]})]})};function Lt(e){return Lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Lt(e)}function Rt(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Ut(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Ut(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Ut(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Ut(d,"constructor",c),Ut(c,"constructor",l),l.displayName="GeneratorFunction",Ut(c,a,"GeneratorFunction"),Ut(d),Ut(d,a,"Generator"),Ut(d,r,function(){return this}),Ut(d,"toString",function(){return"[object Generator]"}),(Rt=function(){return{w:o,m:A}})()}function Ut(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}Ut=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){Ut(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},Ut(e,n,t,r)}function Mt(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function Ft(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Mt(Object(t),!0).forEach(function(n){$t(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Mt(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function $t(e,n,t){return(n=function(e){var n=function(e){if("object"!=Lt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Lt(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Lt(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Yt(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function qt(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Yt(o,r,a,i,s,"next",e)}function s(e){Yt(o,r,a,i,s,"throw",e)}i(void 0)})}}function Wt(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Ht(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ht(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ht(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Gt=function(e){var n=e.link,t=e.collections,r=e.onUpdate,a=e.onDelete,i=e.onMoveToCollection,s=e.onAddNote,l=e.onTagsUpdated,c=Wt((0,o.useState)(!1),2),u=c[0],d=c[1],A=Wt((0,o.useState)(!1),2),f=A[0],h=A[1],p=Wt((0,o.useState)(!1),2),m=p[0],v=p[1],b=Wt((0,o.useState)(!1),2),y=b[0],C=b[1],E=Wt((0,o.useState)([]),2),x=E[0],w=E[1],k=Wt((0,o.useState)([]),2),S=(k[0],k[1]),j=Wt((0,o.useState)(!1),2),_=j[0],N=j[1];(0,o.useEffect)(function(){m?O():I()},[m,n.id]);var z,T,I=function(){var e=qt(Rt().m(function e(){var t,r;return Rt().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getLinkTags(n.id);case 1:t=e.v,w(t.map(function(e){return Ft(Ft({},e),{},{usageCount:0})})),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to load link tags:",r);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),O=function(){var e=qt(Rt().m(function e(){var t,r,a,o,i;return Rt().w(function(e){for(;;)switch(e.n){case 0:return N(!0),e.p=1,e.n=2,Promise.all([Bt.getLinkTags(n.id),Bt.getUserTags()]);case 2:t=e.v,r=Wt(t,2),a=r[0],o=r[1],w(a.map(function(e){return Ft(Ft({},e),{},{usageCount:0})})),S(o),e.n=4;break;case 3:e.p=3,i=e.v,console.error("Failed to load tags:",i);case 4:return e.p=4,N(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),P=function(){chrome.tabs.create({url:n.url})},D=function(){var e=qt(Rt().m(function e(t,a){var o,i;return Rt().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,o=(n.highlights||[]).map(function(e){return e.id===t?Ft(Ft({},e),{},{userNote:a,updatedAt:new Date}):e}),e.n=1,Bt.updateLink(n.id,{highlights:o});case 1:r(n.id,{highlights:o}),e.n=3;break;case 2:e.p=2,i=e.v,console.error("Failed to update highlight note:",i);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(n,t){return e.apply(this,arguments)}}(),L=function(){var e=qt(Rt().m(function e(t){var a,o;return Rt().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,a=(n.highlights||[]).filter(function(e){return e.id!==t}),e.n=1,Bt.updateLink(n.id,{highlights:a});case 1:r(n.id,{highlights:a}),e.n=3;break;case 2:e.p=2,o=e.v,console.error("Failed to delete highlight:",o);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(n){return e.apply(this,arguments)}}();return(0,jt.jsx)("div",{className:"link-card",children:(0,jt.jsxs)("div",{className:"link-card-header",children:[(0,jt.jsx)("div",{className:"link-card-favicon",children:n.favicon?(0,jt.jsx)("img",{src:n.favicon,alt:"",width:"24",height:"24"}):(0,jt.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]}(n.domain)},children:n.domain.charAt(0).toUpperCase()})}),(0,jt.jsxs)("div",{className:"link-card-main",children:[(0,jt.jsxs)("div",{className:"link-card-info-header",children:[(0,jt.jsxs)("div",{className:"link-card-title-section",children:[(0,jt.jsx)("h3",{className:"link-card-title",onClick:P,title:n.title,children:n.title}),(0,jt.jsxs)("div",{className:"link-meta",children:[(0,jt.jsx)("span",{className:"link-domain",children:n.domain}),(0,jt.jsx)("span",{className:"link-date",children:(T=n.createdAt,new Date(T).toLocaleDateString("en-US",{month:"short",day:"numeric"}))})]})]}),(0,jt.jsxs)("div",{className:"link-actions",children:[(0,jt.jsx)("button",{onClick:P,className:"action-button",title:"Open link",children:(0,jt.jsx)(xt,{size:14})}),(0,jt.jsxs)("div",{className:"dropdown",children:[(0,jt.jsx)("button",{onClick:function(){return d(!u)},className:"action-button",title:"More options",children:(0,jt.jsx)(wt,{size:14})}),u&&(0,jt.jsxs)("div",{className:"dropdown-menu",children:[(0,jt.jsxs)("button",{onClick:function(){s(n),d(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)(kt,{size:14}),(0,jt.jsx)("span",{children:"Edit note"})]}),(0,jt.jsxs)("button",{onClick:function(){v(!m),d(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)(g,{size:14}),(0,jt.jsx)("span",{children:"Edit tags"})]}),n.highlights&&n.highlights.length>0&&(0,jt.jsxs)("button",{onClick:function(){C(!y),d(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:(0,jt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"})}),(0,jt.jsxs)("span",{children:[y?"Hide":"Show"," highlights (",n.highlights.length,")"]})]}),(0,jt.jsxs)("button",{onClick:function(){h(!f),d(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)(B,{size:14}),(0,jt.jsx)("span",{children:"Move to collection"})]}),(0,jt.jsxs)("button",{onClick:function(){a(n.id),d(!1)},className:"dropdown-menu-item delete-action",children:[(0,jt.jsx)(St,{size:14}),(0,jt.jsx)("span",{children:"Delete"})]})]})]})]})]}),(0,jt.jsxs)("div",{className:"link-card-body",children:[f&&(0,jt.jsxs)("div",{className:"collections-menu",children:[(0,jt.jsx)("div",{className:"collections-header",children:"Move to:"}),t.map(function(e){return(0,jt.jsx)("button",{onClick:function(){i(n.id,e.id),h(!1)},className:"collection-option",children:e.name},e.id)}),(0,jt.jsx)("button",{onClick:function(){i(n.id,""),h(!1)},className:"collection-option",children:"Remove from collection"})]}),m&&(0,jt.jsxs)("div",{className:"tag-editor",children:[(0,jt.jsxs)("div",{className:"tag-editor-header",children:[(0,jt.jsx)("span",{children:"Edit Tags"}),(0,jt.jsx)("button",{onClick:function(){return v(!1)},className:"tag-editor-close",title:"Close tag editor",children:"×"})]}),_?(0,jt.jsx)("div",{className:"tag-editor-loading",children:"Loading tags..."}):(0,jt.jsx)(It,{linkId:n.id,onTagsUpdated:function(){I(),l&&l(),v(!1)},onCancel:function(){return v(!1)}})]}),!m&&x.length>0&&(0,jt.jsx)("div",{className:"link-tags",children:x.map(function(e){return(0,jt.jsx)("span",{className:"link-tag",title:"Filter by ".concat(e.name),children:e.name},e.id||e.name)})}),n.userNote&&(0,jt.jsxs)("div",{className:"link-note",children:[(0,jt.jsx)("strong",{children:"Note:"})," ",n.userNote]}),n.aiSummary&&(0,jt.jsxs)("div",{className:"link-summary",children:[(0,jt.jsx)("strong",{children:"Summary:"})," ",n.aiSummary]}),(0,jt.jsx)("div",{className:"link-category",children:(0,jt.jsx)("span",{className:"category-badge",style:{backgroundColor:(z=n.category,{general:"#6b7280",work:"#3b82f6",personal:"#10b981",learning:"#f59e0b"}[z]||"#6b7280")},children:n.category})}),n.highlights&&n.highlights.length>0&&(0,jt.jsxs)("div",{className:"link-highlights-section",children:[(0,jt.jsx)("div",{className:"highlights-header",children:(0,jt.jsxs)("button",{onClick:function(){return C(!y)},className:"highlights-toggle",children:[(0,jt.jsx)("svg",{width:"16",height:"16",viewBox:"0 0 24 24",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",children:(0,jt.jsx)("path",{d:"M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"})}),(0,jt.jsxs)("span",{children:[n.highlights.length," highlight",1!==n.highlights.length?"s":""]}),(0,jt.jsx)("svg",{width:"12",height:"12",viewBox:"0 0 24 24",className:"highlights-chevron ".concat(y?"expanded":""),fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",xmlns:"http://www.w3.org/2000/svg",children:(0,jt.jsx)("path",{d:"m6 9 6 6 6-6"})})]})}),y&&(0,jt.jsx)("div",{className:"highlights-list",children:n.highlights.map(function(e){return(0,jt.jsx)(Dt,{highlight:e,onAddNote:D,onDelete:L},e.id)})})]})]})]})]})})},Vt=l("Folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]),Kt=l("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]),Zt=l("Share2",[["circle",{cx:"18",cy:"5",r:"3",key:"gq8acd"}],["circle",{cx:"6",cy:"12",r:"3",key:"w7nqdw"}],["circle",{cx:"18",cy:"19",r:"3",key:"1xt0gg"}],["line",{x1:"8.59",x2:"15.42",y1:"13.51",y2:"17.49",key:"47mynk"}],["line",{x1:"15.41",x2:"8.59",y1:"6.51",y2:"10.49",key:"1n3mei"}]]),Qt=l("Lock",[["rect",{width:"18",height:"11",x:"3",y:"11",rx:"2",ry:"2",key:"1w4ew1"}],["path",{d:"M7 11V7a5 5 0 0 1 10 0v4",key:"fwvmzm"}]]),Jt=l("Link2",[["path",{d:"M9 17H7A5 5 0 0 1 7 7h2",key:"8i5ue5"}],["path",{d:"M15 7h2a5 5 0 1 1 0 10h-2",key:"1b9ql8"}],["line",{x1:"8",x2:"16",y1:"12",y2:"12",key:"1jonct"}]]),Xt=l("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]),er=l("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]]),nr=l("Eye",[["path",{d:"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z",key:"rwhkz3"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);function tr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return rr(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(rr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,rr(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,rr(d,"constructor",c),rr(c,"constructor",l),l.displayName="GeneratorFunction",rr(c,a,"GeneratorFunction"),rr(d),rr(d,a,"Generator"),rr(d,r,function(){return this}),rr(d,"toString",function(){return"[object Generator]"}),(tr=function(){return{w:o,m:A}})()}function rr(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}rr=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){rr(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},rr(e,n,t,r)}function ar(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function or(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){ar(o,r,a,i,s,"next",e)}function s(e){ar(o,r,a,i,s,"throw",e)}i(void 0)})}}function ir(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return sr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?sr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function sr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const lr=function(e){var n=e.collection,t=e.onClose,r=e.onUpdate,a=ir((0,o.useState)(!1),2),i=a[0],s=a[1],l=ir((0,o.useState)(""),2),c=l[0],u=l[1],d=ir((0,o.useState)(0),2),A=d[0],f=d[1],p=ir((0,o.useState)(!0),2),g=p[0],m=p[1],v=ir((0,o.useState)(!1),2),b=v[0],y=v[1],C=ir((0,o.useState)(""),2),E=C[0],B=C[1],x=ir((0,o.useState)(!1),2),w=x[0],k=x[1];(0,o.useEffect)(function(){j()},[n.id]);var S,j=function(){var e=or(tr().m(function e(){var t,r;return tr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getCollectionSharingInfo(n.id);case 1:(t=e.v)&&(s(t.isPublic),u(t.shareToken||""),f(t.viewCount)),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to load sharing info:",r);case 3:return e.p=3,m(!1),e.f(3);case 4:return e.a(2)}},e,null,[[0,2,3,4]])}));return function(){return e.apply(this,arguments)}}(),_=function(){var e=or(tr().m(function e(){var t;return tr().w(function(e){for(;;)switch(e.n){case 0:return y(!0),B(""),e.p=1,e.n=2,Bt.toggleCollectionSharing(n.id,!i);case 2:(t=e.v).success?(s(!i),t.shareToken&&u(t.shareToken),B(t.message),r()):B(t.message),e.n=4;break;case 3:e.p=3,e.v,B("Failed to update sharing settings");case 4:return e.p=4,y(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),N=function(){return c?"https://nest-shared.vercel.app/collection/".concat(c):""},z=function(){var e=or(tr().m(function e(){var n,t;return tr().w(function(e){for(;;)switch(e.n){case 0:if(n=N()){e.n=1;break}return e.a(2);case 1:return e.p=1,e.n=2,navigator.clipboard.writeText(n);case 2:k(!0),setTimeout(function(){return k(!1)},2e3),e.n=4;break;case 3:e.p=3,e.v,(t=document.createElement("textarea")).value=n,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),k(!0),setTimeout(function(){return k(!1)},2e3);case 4:return e.a(2)}},e,null,[[1,3]])}));return function(){return e.apply(this,arguments)}}();return g?(0,jt.jsx)("div",{className:"modal-overlay",children:(0,jt.jsxs)("div",{className:"modal share-modal",children:[(0,jt.jsxs)("div",{className:"modal-header",children:[(0,jt.jsx)("h2",{children:"Share Collection"}),(0,jt.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,jt.jsx)(h,{size:20})})]}),(0,jt.jsx)("div",{className:"modal-content",children:(0,jt.jsx)("div",{className:"loading-spinner",children:"Loading sharing settings..."})})]})}):(0,jt.jsx)("div",{className:"modal-overlay",children:(0,jt.jsxs)("div",{className:"modal share-modal",children:[(0,jt.jsxs)("div",{className:"modal-header",children:[(0,jt.jsx)("h2",{children:"Share Collection"}),(0,jt.jsx)("button",{onClick:t,className:"modal-close",title:"Close",children:(0,jt.jsx)(h,{size:20})})]}),(0,jt.jsxs)("div",{className:"modal-content",children:[(0,jt.jsxs)("div",{className:"share-collection-info",children:[(0,jt.jsx)("h3",{className:"collection-name",children:n.name}),n.description&&(0,jt.jsx)("p",{className:"collection-description",children:n.description}),(0,jt.jsx)("div",{className:"collection-meta",children:(0,jt.jsxs)("span",{children:["Created ",(S=n.createdAt,new Date(S).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}))]})})]}),(0,jt.jsx)("div",{className:"share-toggle-section",children:(0,jt.jsxs)("div",{className:"share-toggle-header",children:[(0,jt.jsx)("div",{className:"share-status",children:i?(0,jt.jsxs)(jt.Fragment,{children:[(0,jt.jsx)(Kt,{size:20,className:"status-icon public"}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"status-title",children:"Public Collection"}),(0,jt.jsx)("div",{className:"status-subtitle",children:"Anyone with the link can view this collection"})]})]}):(0,jt.jsxs)(jt.Fragment,{children:[(0,jt.jsx)(Qt,{size:20,className:"status-icon private"}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"status-title",children:"Private Collection"}),(0,jt.jsx)("div",{className:"status-subtitle",children:"Only you can see this collection"})]})]})}),(0,jt.jsx)("button",{onClick:_,disabled:b,className:"toggle-button ".concat(i?"public":"private"),children:b?"Updating...":i?"Make Private":"Make Public"})]})}),i&&c&&(0,jt.jsxs)("div",{className:"share-link-section",children:[(0,jt.jsxs)("div",{className:"share-link-header",children:[(0,jt.jsx)(Jt,{size:16}),(0,jt.jsx)("span",{children:"Share Link"})]}),(0,jt.jsxs)("div",{className:"share-link-container",children:[(0,jt.jsx)("input",{type:"text",value:N(),readOnly:!0,className:"share-link-input",title:"Share link URL","aria-label":"Share link URL"}),(0,jt.jsxs)("div",{className:"share-link-actions",children:[(0,jt.jsx)("button",{onClick:z,className:"copy-button ".concat(w?"copied":""),title:"Copy link",children:w?(0,jt.jsx)(Xt,{size:16}):(0,jt.jsx)(er,{size:16})}),(0,jt.jsx)("button",{onClick:function(){var e=N();e&&chrome.tabs.create({url:e})},className:"open-button",title:"Open in new tab",children:(0,jt.jsx)(xt,{size:16})})]})]}),(0,jt.jsx)("div",{className:"share-analytics",children:(0,jt.jsxs)("div",{className:"analytics-item",children:[(0,jt.jsx)(nr,{size:16}),(0,jt.jsxs)("span",{children:[A," ",1===A?"view":"views"]})]})})]}),E&&(0,jt.jsx)("div",{className:"share-message ".concat(E.includes("error")?"error":"success"),children:E}),(0,jt.jsxs)("div",{className:"share-info-box",children:[(0,jt.jsx)("h4",{children:"About Public Collections"}),(0,jt.jsxs)("ul",{children:[(0,jt.jsx)("li",{children:"Public collections can be viewed by anyone with the link"}),(0,jt.jsx)("li",{children:"Viewers don't need an account to see your collection"}),(0,jt.jsx)("li",{children:"Links, notes, summaries, and tags are included"}),(0,jt.jsx)("li",{children:"You can make collections private at any time"}),(0,jt.jsx)("li",{children:"View counts help you track sharing analytics"})]})]})]}),(0,jt.jsx)("div",{className:"modal-footer",children:(0,jt.jsx)("button",{onClick:t,className:"modal-button secondary",children:"Close"})})]})})};function cr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return ur(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(ur(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,ur(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,ur(d,"constructor",c),ur(c,"constructor",l),l.displayName="GeneratorFunction",ur(c,a,"GeneratorFunction"),ur(d),ur(d,a,"Generator"),ur(d,r,function(){return this}),ur(d,"toString",function(){return"[object Generator]"}),(cr=function(){return{w:o,m:A}})()}function ur(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}ur=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){ur(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},ur(e,n,t,r)}function dr(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function Ar(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return fr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?fr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function fr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const hr=function(e){var n=e.collection,t=e.links,r=e.onUpdateLink,a=e.onDeleteLink,i=e.onAddNote,s=e.onTagsUpdated,l=e.onUpdate,c=Ar((0,o.useState)(!1),2),u=c[0],d=c[1],A=Ar((0,o.useState)(!1),2),f=A[0],h=A[1],p=function(){var e,n=(e=cr().m(function e(n,t){return cr().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,r(n,{collectionId:t||void 0});case 1:return e.a(2)}},e)}),function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){dr(o,r,a,i,s,"next",e)}function s(e){dr(o,r,a,i,s,"throw",e)}i(void 0)})});return function(e,t){return n.apply(this,arguments)}}();return(0,jt.jsxs)(jt.Fragment,{children:[(0,jt.jsxs)("div",{className:"collection-card ".concat(u?"expanded":""),children:[(0,jt.jsxs)("button",{onClick:function(){return d(!u)},className:"collection-header",children:[u?(0,jt.jsx)(m,{size:16}):(0,jt.jsx)(v,{size:16}),(0,jt.jsx)(Vt,{size:16,className:"collection-icon"}),(0,jt.jsxs)("div",{className:"collection-info",children:[(0,jt.jsxs)("div",{className:"collection-name-row",children:[(0,jt.jsx)("span",{className:"collection-name",children:n.name}),n.isPublic&&(0,jt.jsx)("div",{className:"public-indicator",title:"This collection is public",children:(0,jt.jsx)(Kt,{size:12})})]}),n.description&&(0,jt.jsx)("span",{className:"collection-description",children:n.description})]}),(0,jt.jsxs)("div",{className:"collection-actions",children:[(0,jt.jsx)("span",{className:"collection-count",children:t.length}),(0,jt.jsx)("button",{onClick:function(e){e.stopPropagation(),h(!0)},className:"action-button share-collection-button",title:"Share collection",children:(0,jt.jsx)(Zt,{size:14})})]})]}),u&&(0,jt.jsx)("div",{className:"collection-content",children:0===t.length?(0,jt.jsx)("div",{className:"empty-collection",children:(0,jt.jsx)("p",{children:"No links in this collection"})}):t.map(function(e){return(0,jt.jsx)(Gt,{link:e,collections:[],onUpdate:r,onDelete:a,onMoveToCollection:p,onAddNote:i,onTagsUpdated:s},e.id)})})]}),f&&(0,jt.jsx)(lr,{collection:n,onClose:function(){h(!1)},onUpdate:function(){l&&l()}})]})},pr=l("RotateCcw",[["path",{d:"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"1357e3"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}]]);function gr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return mr(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(mr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,mr(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,mr(d,"constructor",c),mr(c,"constructor",l),l.displayName="GeneratorFunction",mr(c,a,"GeneratorFunction"),mr(d),mr(d,a,"Generator"),mr(d,r,function(){return this}),mr(d,"toString",function(){return"[object Generator]"}),(gr=function(){return{w:o,m:A}})()}function mr(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}mr=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){mr(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},mr(e,n,t,r)}function vr(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function br(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){vr(o,r,a,i,s,"next",e)}function s(e){vr(o,r,a,i,s,"throw",e)}i(void 0)})}}function yr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Cr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Cr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Cr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Er=function(e){var n=e.smartCollection,t=e.collections,r=e.onUpdateLink,a=e.onDeleteLink,i=e.onAddNote,s=e.onTagsUpdated,l=yr((0,o.useState)(!1),2),c=l[0],u=l[1],d=yr((0,o.useState)([]),2),A=d[0],f=d[1],h=yr((0,o.useState)(!1),2),p=h[0],g=h[1],b=yr((0,o.useState)(null),2),y=b[0],C=b[1];(0,o.useEffect)(function(){c&&B()},[c,n.id]);var B=function(){var e=br(gr().m(function e(){var t,r;return gr().w(function(e){for(;;)switch(e.n){case 0:return g(!0),e.p=1,e.n=2,Bt.getSmartCollectionLinks(n.id);case 2:t=e.v,f(t),C(new Date),e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to load smart collection links:",r);case 4:return e.p=4,g(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),x=function(){var e=br(gr().m(function e(t,a){return gr().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,r(t,{collectionId:a||void 0});case 1:n.autoUpdate&&B();case 2:return e.a(2)}},e)}));return function(n,t){return e.apply(this,arguments)}}();return(0,jt.jsxs)("div",{className:"smart-collection-card ".concat(c?"expanded":""),children:[(0,jt.jsxs)("button",{onClick:function(){return u(!c)},className:"smart-collection-header",children:[c?(0,jt.jsx)(m,{size:16}):(0,jt.jsx)(v,{size:16}),(0,jt.jsx)("span",{className:"smart-collection-icon",children:n.icon||"🔮"}),(0,jt.jsxs)("div",{className:"smart-collection-info",children:[(0,jt.jsxs)("div",{className:"smart-collection-name-row",children:[(0,jt.jsx)("span",{className:"smart-collection-name",children:n.name}),(0,jt.jsxs)("div",{className:"smart-collection-badges",children:[(0,jt.jsx)(E,{size:12,className:"ai-badge",title:"AI-Powered Collection"}),n.autoUpdate&&(0,jt.jsx)("div",{className:"auto-update-badge",title:"Auto-updating",children:"AUTO"})]})]}),(0,jt.jsx)("span",{className:"smart-collection-description",children:n.description}),y&&(0,jt.jsxs)("span",{className:"smart-collection-updated",children:["Updated ",function(){if(!y)return"";var e=(new Date).getTime()-y.getTime(),n=Math.floor(e/6e4);if(n<1)return"Just now";if(n<60)return"".concat(n,"m ago");var t=Math.floor(n/60);if(t<24)return"".concat(t,"h ago");var r=Math.floor(t/24);return"".concat(r,"d ago")}()]})]}),(0,jt.jsxs)("div",{className:"smart-collection-actions",children:[(0,jt.jsx)("span",{className:"smart-collection-count",children:p?"...":A.length}),(0,jt.jsx)("button",{onClick:function(e){e.stopPropagation(),B()},className:"action-button refresh-button",title:"Refresh collection",disabled:p,children:(0,jt.jsx)(pr,{size:14,className:p?"spinning":""})})]})]}),c&&(0,jt.jsx)("div",{className:"smart-collection-content",children:p?(0,jt.jsxs)("div",{className:"smart-collection-loading",children:[(0,jt.jsx)("div",{className:"loading-spinner"}),(0,jt.jsx)("span",{children:"Finding matching links..."})]}):0===A.length?(0,jt.jsxs)("div",{className:"empty-smart-collection",children:[(0,jt.jsx)(E,{size:24,className:"empty-icon"}),(0,jt.jsx)("p",{children:"No matching links found"}),(0,jt.jsx)("span",{className:"empty-subtitle",children:"Links will appear here automatically when they match this collection's criteria"})]}):(0,jt.jsx)("div",{className:"smart-collection-links",children:A.map(function(e){return(0,jt.jsx)(Gt,{link:e,collections:t,onUpdate:r,onDelete:a,onMoveToCollection:x,onAddNote:i,onTagsUpdated:s},e.id)})})})]})},Br=function(e){var n,t=e.link,r=e.collections,a=e.onUpdate,o=e.onDelete,i=e.onMoveToCollection,s=e.onAddNote,l=e.onTagsUpdated;return(0,jt.jsxs)("div",{className:"search-result-card",children:[t.searchRank&&(0,jt.jsx)("div",{className:"search-rank-indicator",children:(n=t.searchRank,n?"".concat(Math.round(100*n),"% match"):"")}),t.searchHeadline&&(0,jt.jsx)("div",{className:"search-headline",dangerouslySetInnerHTML:{__html:t.searchHeadline}}),(0,jt.jsx)(Gt,{link:t,collections:r,onUpdate:a,onDelete:o,onMoveToCollection:i,onAddNote:s,onTagsUpdated:l})]})},xr=l("MoreVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]),wr=l("ChevronUp",[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]]),kr=l("Info",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 16v-4",key:"1dtifu"}],["path",{d:"M12 8h.01",key:"e9boi3"}]]);function Sr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return jr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?jr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function jr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const _r=function(e){var n=e.analysis,t=e.onTagsApproved,r=e.onCategoryApproved,a=e.onClose,i=e.isLoading,s=void 0!==i&&i,l=Sr((0,o.useState)(new Set),2),c=l[0],u=l[1],d=Sr((0,o.useState)(""),2),A=d[0],f=d[1],p=Sr((0,o.useState)(!0),2),g=p[0],v=p[1],b=function(e){return e>=.8?"#10b981":e>=.6?"#f59e0b":"#6b7280"},y=function(e){return e>=.8?"High":e>=.6?"Med":"Low"};return s?(0,jt.jsx)("div",{className:"ai-suggestions loading",children:(0,jt.jsxs)("div",{className:"ai-suggestions-header",children:[(0,jt.jsxs)("div",{className:"ai-loading-content",children:[(0,jt.jsx)(E,{size:14,className:"ai-icon spinning"}),(0,jt.jsx)("span",{children:"AI analyzing content..."})]}),(0,jt.jsx)("button",{onClick:a,className:"ai-suggestions-close",title:"Cancel analysis",children:(0,jt.jsx)(h,{size:12})})]})}):(0,jt.jsxs)("div",{className:"ai-suggestions",children:[(0,jt.jsxs)("div",{className:"ai-suggestions-header",children:[(0,jt.jsxs)("button",{onClick:function(){return v(!g)},className:"ai-suggestions-toggle",children:[(0,jt.jsx)(E,{size:14,className:"ai-icon"}),(0,jt.jsx)("span",{children:"AI Suggestions"}),(0,jt.jsx)("div",{className:"ai-suggestions-meta",children:n.readingTime&&(0,jt.jsxs)("span",{className:"ai-reading-time",children:[n.readingTime,"min"]})}),g?(0,jt.jsx)(wr,{size:12}):(0,jt.jsx)(m,{size:12})]}),(0,jt.jsx)("button",{onClick:a,className:"ai-suggestions-close",title:"Close suggestions",children:(0,jt.jsx)(h,{size:12})})]}),g&&(0,jt.jsxs)("div",{className:"ai-suggestions-content",children:[n.categorySuggestions.length>0&&(0,jt.jsxs)("div",{className:"ai-suggestion-section",children:[(0,jt.jsxs)("div",{className:"suggestion-section-header",children:[(0,jt.jsx)(kr,{size:12}),(0,jt.jsx)("span",{children:"Categories"})]}),(0,jt.jsx)("div",{className:"ai-category-suggestions",children:n.categorySuggestions.slice(0,3).map(function(e,n){return(0,jt.jsxs)("button",{onClick:function(){return n=e.category,void f(A===n?"":n);var n},className:"ai-category-chip ".concat(A===e.category?"selected":""),title:e.reason,children:[(0,jt.jsx)("span",{className:"suggestion-name",children:e.category}),(0,jt.jsx)("span",{className:"confidence-indicator",style:{backgroundColor:b(e.confidence)},children:y(e.confidence)})]},"".concat(e.category,"-").concat(n))})})]}),n.tagSuggestions.length>0&&(0,jt.jsxs)("div",{className:"ai-suggestion-section",children:[(0,jt.jsxs)("div",{className:"suggestion-section-header",children:[(0,jt.jsx)(kr,{size:12}),(0,jt.jsx)("span",{children:"Tags"})]}),(0,jt.jsx)("div",{className:"ai-tag-suggestions",children:n.tagSuggestions.slice(0,6).map(function(e,n){return(0,jt.jsxs)("button",{onClick:function(){return n=e.tag,(t=new Set(c)).has(n)?t.delete(n):t.add(n),void u(t);var n,t},className:"ai-tag-chip ".concat(c.has(e.tag)?"selected":""),title:"".concat(e.reason," (").concat(Math.round(100*e.confidence),"% confidence)"),children:[(0,jt.jsx)("span",{className:"suggestion-name",children:e.tag}),(0,jt.jsx)("span",{className:"confidence-indicator",style:{backgroundColor:b(e.confidence)},children:y(e.confidence)}),c.has(e.tag)&&(0,jt.jsx)(Xt,{size:10,className:"selected-icon"})]},"".concat(e.tag,"-").concat(n))})})]}),n.topics&&n.topics.length>0&&(0,jt.jsxs)("div",{className:"ai-topics-section",children:[(0,jt.jsx)("span",{className:"ai-topics-label",children:"Topics:"}),(0,jt.jsx)("div",{className:"ai-detected-topics",children:n.topics.slice(0,3).map(function(e,n){return(0,jt.jsx)("span",{className:"ai-topic-pill",children:e},n)})})]}),(0,jt.jsxs)("div",{className:"ai-suggestions-actions",children:[(0,jt.jsx)("button",{onClick:a,className:"ai-action-btn secondary",children:"Skip"}),(0,jt.jsxs)("button",{onClick:function(){c.size>0&&t(Array.from(c)),A&&r(A),a()},className:"ai-action-btn primary",disabled:0===c.size&&!A,children:["Apply (",c.size+(A?1:0),")"]})]})]})]})};function Nr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return zr(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(zr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,zr(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,zr(d,"constructor",c),zr(c,"constructor",l),l.displayName="GeneratorFunction",zr(c,a,"GeneratorFunction"),zr(d),zr(d,a,"Generator"),zr(d,r,function(){return this}),zr(d,"toString",function(){return"[object Generator]"}),(Nr=function(){return{w:o,m:A}})()}function zr(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}zr=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){zr(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},zr(e,n,t,r)}function Tr(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function Ir(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Tr(o,r,a,i,s,"next",e)}function s(e){Tr(o,r,a,i,s,"throw",e)}i(void 0)})}}function Or(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Pr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Pr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Dr=function(e){var n,t=e.link,r=e.collections,a=e.onMoveFromInbox,i=e.onDelete,s=e.onUpdate,l=e.onAddNote,c=e.onTagsUpdated,u=e.isSelected,d=void 0!==u&&u,A=e.onSelect,f=Or((0,o.useState)(!1),2),p=f[0],m=f[1],v=Or((0,o.useState)(!1),2),b=v[0],y=v[1],x=Or((0,o.useState)(!1),2),w=x[0],k=x[1],S=Or((0,o.useState)(!1),2),j=S[0],_=S[1],N=Or((0,o.useState)(!1),2),z=N[0],T=N[1],I=Or((0,o.useState)(null),2),O=I[0],P=I[1],D=Or((0,o.useState)(!1),2),L=D[0],R=D[1],U=function(){var e=Ir(Nr().m(function e(){var n,t;return Nr().w(function(e){for(;;)switch(e.n){case 0:if(m(!1),O){e.n=6;break}return R(!0),e.p=1,e.n=2,chrome.runtime.sendMessage({action:"analyzePageWithAI"});case 2:(n=e.v).success&&n.analysis?(P(n.analysis),T(!0)):console.error("Failed to get AI analysis:",n.error),e.n=4;break;case 3:e.p=3,t=e.v,console.error("Error requesting AI analysis:",t);case 4:return e.p=4,R(!1),e.f(4);case 5:e.n=7;break;case 6:T(!0);case 7:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),M=function(){var e=Ir(Nr().m(function e(n){var r;return Nr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.addTagsToLink(t.id,n);case 1:e.v.success&&c(),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to apply AI tags:",r);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(n){return e.apply(this,arguments)}}(),F=function(){var e=Ir(Nr().m(function e(n){var r;return Nr().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,s(t.id,{category:n});case 1:e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to apply AI category:",r);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(n){return e.apply(this,arguments)}}();return o.useEffect(function(){var e=function(){m(!1),y(!1)};if(p)return document.addEventListener("click",e),function(){return document.removeEventListener("click",e)}},[p]),(0,jt.jsx)("div",{className:"inbox-card ".concat(d?"selected":""),children:(0,jt.jsxs)("div",{className:"inbox-card-content",children:[(0,jt.jsx)("div",{className:"inbox-card-checkbox",children:(0,jt.jsx)("input",{type:"checkbox",checked:d,onChange:function(e){return e.target.checked,void(A&&A(t.id))},"aria-label":"Select ".concat(t.title),title:"Select ".concat(t.title)})}),(0,jt.jsxs)("div",{className:"inbox-card-main-content",children:[(0,jt.jsxs)("div",{className:"inbox-card-favicon",children:[t.favicon?(0,jt.jsx)("img",{src:t.favicon,alt:"",onError:function(e){var n=e.target;n.style.display="none";var t=n.nextElementSibling;t&&(t.style.display="flex")}}):null,(0,jt.jsx)("div",{className:"favicon-placeholder",style:{backgroundColor:function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]}(t.domain),display:t.favicon?"none":"flex"},children:t.domain.charAt(0).toUpperCase()})]}),(0,jt.jsxs)("div",{className:"inbox-card-body",children:[(0,jt.jsxs)("div",{className:"inbox-card-header",children:[(0,jt.jsxs)("div",{className:"inbox-card-title-section",children:[(0,jt.jsx)("h3",{className:"inbox-card-title",onClick:function(){chrome.tabs.create({url:t.url})},children:t.title}),(0,jt.jsxs)("div",{className:"inbox-card-domain",children:[t.domain," • ",(n=t.createdAt,new Date(n).toLocaleDateString("en-US",{month:"short",day:"numeric"}))]})]}),(0,jt.jsxs)("div",{className:"inbox-card-actions",children:[(0,jt.jsx)("a",{href:t.url,target:"_blank",rel:"noopener noreferrer",className:"inbox-card-link",title:"Open link",children:(0,jt.jsx)(xt,{size:14})}),(0,jt.jsxs)("div",{className:"inbox-card-menu-container dropdown",children:[(0,jt.jsx)("button",{onClick:function(e){e.stopPropagation(),m(!p),y(!1)},className:"inbox-card-menu-button",title:"More options",children:(0,jt.jsx)(xr,{size:14})}),p&&(0,jt.jsxs)("div",{className:"dropdown-menu",children:[(0,jt.jsxs)("button",{onClick:U,className:"dropdown-menu-item",disabled:L,children:[(0,jt.jsx)(E,{size:14}),L?"Analyzing...":"AI Suggestions"]}),(0,jt.jsxs)("button",{onClick:function(){k(!0),m(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)(g,{size:14}),(0,jt.jsx)("span",{children:"Add Tags"})]}),(0,jt.jsxs)("button",{onClick:function(){l(t),m(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)(kt,{size:14}),(0,jt.jsx)("span",{children:"Add Note"})]}),(0,jt.jsxs)("div",{className:"dropdown-submenu-container",children:[(0,jt.jsxs)("button",{onClick:function(){return y(!b)},className:"dropdown-menu-item",children:[(0,jt.jsx)(B,{size:14}),(0,jt.jsx)("span",{children:"Move to Collection"})]}),b&&(0,jt.jsxs)("div",{className:"dropdown-menu submenu",children:[(0,jt.jsxs)("div",{className:"submenu-header",children:[(0,jt.jsx)("span",{children:"Collections"}),(0,jt.jsx)("button",{onClick:function(e){e.stopPropagation(),y(!1)},className:"submenu-close",title:"Close",children:(0,jt.jsx)(h,{size:12})})]}),r.length>0?r.map(function(e){return(0,jt.jsx)("button",{onClick:function(){return n=e.id,a(t.id,n),void m(!1);var n},className:"dropdown-menu-item",children:e.name},e.id)}):(0,jt.jsx)("div",{className:"submenu-empty",children:"No collections"})]})]}),(0,jt.jsxs)("button",{onClick:function(){a(t.id),m(!1)},className:"dropdown-menu-item",children:[(0,jt.jsx)(C,{size:14}),(0,jt.jsx)("span",{children:"Archive"})]}),(0,jt.jsxs)("button",{onClick:function(){i(t.id),m(!1)},className:"dropdown-menu-item delete-action",children:[(0,jt.jsx)(St,{size:14}),(0,jt.jsx)("span",{children:"Delete"})]})]})]})]})]}),(0,jt.jsxs)("div",{className:"inbox-card-footer",children:[z&&O&&(0,jt.jsx)(_r,{analysis:O,onTagsApproved:M,onCategoryApproved:F,onClose:function(){return T(!1)},isLoading:L}),t.highlights&&t.highlights.length>0&&(0,jt.jsxs)("div",{className:"inbox-card-highlights",children:[(0,jt.jsxs)("button",{onClick:function(){return _(!j)},className:"highlights-toggle",title:"".concat(j?"Hide":"Show"," highlights"),"aria-label":"".concat(j?"Hide":"Show"," ").concat(t.highlights.length," highlight").concat(1!==t.highlights.length?"s":""),children:[(0,jt.jsxs)("span",{children:["🔗 ",t.highlights.length," highlight",1!==t.highlights.length?"s":""]}),(0,jt.jsx)("span",{className:"highlights-chevron ".concat(j?"expanded":""),children:"▼"})]}),j&&(0,jt.jsx)("div",{className:"inbox-highlights-list",style:{padding:"var(--space-3)",display:"flex",flexDirection:"column",gap:"var(--space-3)"},children:t.highlights.map(function(e){return(0,jt.jsx)(Dt,{highlight:e},e.id)})})]}),t.aiSummary&&(0,jt.jsx)("div",{className:"inbox-card-summary",children:(0,jt.jsx)("p",{children:t.aiSummary})}),t.userNote&&(0,jt.jsx)("div",{className:"inbox-card-note",children:(0,jt.jsx)("p",{children:t.userNote})}),w&&(0,jt.jsx)("div",{className:"inbox-card-tags",children:(0,jt.jsx)(It,{linkId:t.id,onTagsUpdated:function(){c(),k(!1)},onCancel:function(){return k(!1)}})})]})]})]})]})})};function Lr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Rr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Rr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Rr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Ur=function(e){var n=e.isOpen,t=e.onClose,r=e.links,a=e.collections,i=e.onOpenLink,s=e.onAddToCollection,l=e.onCreateCollection,u=e.onSaveCurrentPage,A=e.onAddNote,h=e.onOpenTabSync,p=Lr((0,o.useState)(""),2),g=p[0],m=p[1],v=Lr((0,o.useState)(0),2),b=v[0],y=v[1],E=Lr((0,o.useState)([]),2),x=E[0],w=E[1],k=(0,o.useRef)(null),S=(0,o.useRef)(null),j=(0,o.useCallback)(function(e){var n=[];return n.push({id:"save-current",type:"action",title:"Save Current Page",subtitle:"Add the current browser tab to Nest",icon:(0,jt.jsx)(d,{size:16}),action:function(){u(),t()},keywords:["save","add","current","page","bookmark"]}),n.push({id:"create-collection",type:"action",title:"Create New Collection",subtitle:"Organize your links into collections",icon:(0,jt.jsx)(B,{size:16}),action:function(){l(),t()},keywords:["create","collection","folder","organize"]}),n.push({id:"tab-sync",type:"action",title:"Tab Sync Mode",subtitle:"View and save open browser tabs",icon:(0,jt.jsx)(c,{size:16}),action:function(){h(),t()},keywords:["tab","sync","browser","open","tabs","save"]}),a.forEach(function(e){var a;n.push({id:"collection-".concat(e.id),type:"collection",title:e.name,subtitle:"Collection • ".concat(r.filter(function(n){return n.collectionId===e.id}).length," links"),icon:(0,jt.jsx)(C,{size:16}),action:function(){t()},keywords:["collection",e.name.toLowerCase(),null===(a=e.description)||void 0===a?void 0:a.toLowerCase()],collection:e})}),(e.trim()?_(r,e):r.slice(0,10)).forEach(function(e){var r;n.push({id:"link-".concat(e.id),type:"link",title:e.title,subtitle:"".concat(e.domain," • ").concat(e.userNote?"Has note":"No note"),icon:(0,jt.jsx)(xt,{size:16}),action:function(){i(e.url),t()},keywords:[e.title.toLowerCase(),e.domain.toLowerCase(),e.userNote.toLowerCase(),(null===(r=e.aiSummary)||void 0===r?void 0:r.toLowerCase())||"",e.category.toLowerCase()],link:e})}),e.trim()?n.filter(function(n){var t,r;return n.title.toLowerCase().includes(e.toLowerCase())||(null===(t=n.subtitle)||void 0===t?void 0:t.toLowerCase().includes(e.toLowerCase()))||(null===(r=n.keywords)||void 0===r?void 0:r.some(function(n){return n.includes(e.toLowerCase())}))}):n.slice(0,12)},[r,a,i,s,l,u,A,h,t]),_=function(e,n){var t=n.toLowerCase();return e.map(function(e){var n,r=0,a=e.title.toLowerCase(),o=e.domain.toLowerCase(),i=e.userNote.toLowerCase(),s=(null===(n=e.aiSummary)||void 0===n?void 0:n.toLowerCase())||"";return a.includes(t)&&(r+=10),o.includes(t)&&(r+=5),i.includes(t)&&(r+=8),s.includes(t)&&(r+=6),{link:e,score:r+=N(a,t)}}).filter(function(e){return e.score>0}).sort(function(e,n){return n.score-e.score}).slice(0,8).map(function(e){return e.link})},N=function(e,n){for(var t=0,r=0,a=0;a<n.length;a++){var o=n[a],i=e.indexOf(o,r);if(-1===i)return 0;var s=i-r;t+=Math.max(0,10-s),r=i+1}return t};return(0,o.useEffect)(function(){var e=j(g);w(e),y(0)},[g,j]),(0,o.useEffect)(function(){var e=function(e){if(n)switch(e.key){case"ArrowDown":e.preventDefault(),y(function(e){return Math.min(e+1,x.length-1)});break;case"ArrowUp":e.preventDefault(),y(function(e){return Math.max(e-1,0)});break;case"Enter":e.preventDefault(),x[b]&&x[b].action();break;case"Escape":e.preventDefault(),t()}};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[n,x,b,t]),(0,o.useEffect)(function(){n&&k.current&&(k.current.focus(),m(""),y(0))},[n]),(0,o.useEffect)(function(){if(S.current&&x.length>0){var e=S.current.children[b];e&&e.scrollIntoView({block:"nearest",behavior:"smooth"})}},[b,x]),n?(0,jt.jsx)("div",{className:"modal-overlay command-palette-overlay",onClick:t,children:(0,jt.jsxs)("div",{className:"command-palette",onClick:function(e){return e.stopPropagation()},children:[(0,jt.jsx)("div",{className:"command-palette-header",children:(0,jt.jsxs)("div",{className:"command-palette-search",children:[(0,jt.jsx)(f,{size:18,className:"command-palette-search-icon"}),(0,jt.jsx)("input",{ref:k,type:"text",placeholder:"Search links, collections, or commands...",value:g,onChange:function(e){return m(e.target.value)},className:"command-palette-input"})]})}),(0,jt.jsx)("div",{className:"command-palette-content",ref:S,children:0===x.length?(0,jt.jsx)("div",{className:"command-palette-empty",children:(0,jt.jsx)("p",{children:"No results found"})}):x.map(function(e,n){return(0,jt.jsxs)("div",{className:"command-palette-item ".concat(n===b?"selected":""),onClick:function(){return e.action()},onMouseEnter:function(){return y(n)},children:[(0,jt.jsx)("div",{className:"command-palette-item-icon",children:e.icon}),(0,jt.jsxs)("div",{className:"command-palette-item-content",children:[(0,jt.jsx)("div",{className:"command-palette-item-title",children:e.title}),e.subtitle&&(0,jt.jsx)("div",{className:"command-palette-item-subtitle",children:e.subtitle})]})]},e.id)})}),(0,jt.jsx)("div",{className:"command-palette-footer",children:(0,jt.jsxs)("div",{className:"command-palette-tips",children:[(0,jt.jsxs)("span",{children:[(0,jt.jsx)("kbd",{children:"↑"}),(0,jt.jsx)("kbd",{children:"↓"})," to navigate"]}),(0,jt.jsxs)("span",{children:[(0,jt.jsx)("kbd",{children:"↵"})," to select"]}),(0,jt.jsxs)("span",{children:[(0,jt.jsx)("kbd",{children:"esc"})," to close"]})]})})]})}):null},Mr=l("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]),Fr=l("Square",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}]]),$r=l("Monitor",[["rect",{width:"20",height:"14",x:"2",y:"3",rx:"2",key:"48i651"}],["line",{x1:"8",x2:"16",y1:"21",y2:"21",key:"1svkeh"}],["line",{x1:"12",x2:"12",y1:"17",y2:"21",key:"vw1qmm"}]]);function Yr(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return qr(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(qr(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,qr(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,qr(d,"constructor",c),qr(c,"constructor",l),l.displayName="GeneratorFunction",qr(c,a,"GeneratorFunction"),qr(d),qr(d,a,"Generator"),qr(d,r,function(){return this}),qr(d,"toString",function(){return"[object Generator]"}),(Yr=function(){return{w:o,m:A}})()}function qr(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}qr=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){qr(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},qr(e,n,t,r)}function Wr(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function Hr(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Wr(o,r,a,i,s,"next",e)}function s(e){Wr(o,r,a,i,s,"throw",e)}i(void 0)})}}function Gr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Vr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Vr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Vr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Kr=function(e){var n=e.isOpen,t=e.onClose,r=e.collections,a=e.onSaveTabs,i=Gr((0,o.useState)([]),2),s=i[0],l=i[1],c=Gr((0,o.useState)(!1),2),d=c[0],A=c[1],f=Gr((0,o.useState)(new Set),2),p=f[0],g=f[1],m=Gr((0,o.useState)({}),2),v=m[0],b=m[1],E=Gr((0,o.useState)(!1),2),B=E[0],x=E[1],w=Gr((0,o.useState)(!1),2),k=w[0],S=w[1],j=Gr((0,o.useState)(""),2),_=j[0],N=j[1];(0,o.useEffect)(function(){n&&T()},[n]),(0,o.useEffect)(function(){var e=s.reduce(function(e,n){return e[n.windowId]||(e[n.windowId]=[]),e[n.windowId].push(n),e},{});b(e)},[s]);var z,T=function(){var e=Hr(Yr().m(function e(){var n,t,r;return Yr().w(function(e){for(;;)switch(e.n){case 0:return A(!0),e.p=1,e.n=2,chrome.tabs.query({});case 2:n=e.v,t=n.filter(function(e){return e.url&&!e.url.startsWith("chrome://")&&!e.url.startsWith("chrome-extension://")}).map(function(e){return{id:e.id,title:e.title||"Untitled",url:e.url,favicon:e.favIconUrl,windowId:e.windowId,index:e.index,active:e.active,domain:new URL(e.url).hostname,pinned:e.pinned}}),l(t),g(new Set),e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to load tabs:",r);case 4:return e.p=4,A(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),I=function(){return s.filter(function(e){return!(k&&!e.pinned||_&&!e.domain.toLowerCase().includes(_.toLowerCase()))})},O=function(){var e=Hr(Yr().m(function e(n,t){var r,o;return Yr().w(function(e){for(;;)switch(e.n){case 0:if(0!==p.size){e.n=1;break}return e.a(2);case 1:return x(!0),e.p=2,r=s.filter(function(e){return p.has(e.id)}),e.n=3,a(r,n,t);case 3:g(new Set),e.n=5;break;case 4:e.p=4,o=e.v,console.error("Failed to save tabs:",o);case 5:return e.p=5,x(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(n,t){return e.apply(this,arguments)}}(),P=function(){var e=Hr(Yr().m(function e(n,t,r){var o;return Yr().w(function(e){for(;;)switch(e.n){case 0:return x(!0),e.p=1,e.n=2,a([n],t,r);case 2:e.n=4;break;case 3:e.p=3,o=e.v,console.error("Failed to save tab:",o);case 4:return e.p=4,x(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(n,t,r){return e.apply(this,arguments)}}(),D=I(),L=(z={},s.forEach(function(e){z[e.domain]=(z[e.domain]||0)+1}),Object.entries(z).sort(function(e,n){var t=Gr(e,2)[1];return Gr(n,2)[1]-t}).slice(0,5));return n?(0,jt.jsx)("div",{className:"tab-sync-overlay",onClick:t,children:(0,jt.jsxs)("div",{className:"tab-sync-modal",onClick:function(e){return e.stopPropagation()},children:[(0,jt.jsxs)("div",{className:"tab-sync-header",children:[(0,jt.jsxs)("div",{className:"tab-sync-title",children:[(0,jt.jsx)(u,{size:20}),(0,jt.jsx)("h2",{children:"Tab Sync Mode"}),(0,jt.jsxs)("span",{className:"tab-count",children:[s.length," open tabs"]})]}),(0,jt.jsxs)("div",{className:"tab-sync-actions",children:[(0,jt.jsx)("button",{onClick:T,className:"tab-sync-refresh",disabled:d,title:"Refresh tabs",children:(0,jt.jsx)(Mr,{size:16,className:d?"spinning":""})}),(0,jt.jsx)("button",{onClick:t,className:"tab-sync-close",title:"Close",children:(0,jt.jsx)(h,{size:16})})]})]}),(0,jt.jsxs)("div",{className:"tab-sync-filters",children:[(0,jt.jsxs)("div",{className:"tab-sync-filter-row",children:[(0,jt.jsxs)("label",{className:"tab-sync-filter-checkbox",children:[(0,jt.jsx)("input",{type:"checkbox",checked:k,onChange:function(e){return S(e.target.checked)}}),"Show only pinned tabs"]}),(0,jt.jsx)("input",{type:"text",placeholder:"Filter by domain...",value:_,onChange:function(e){return N(e.target.value)},className:"tab-sync-domain-filter"})]}),L.length>0&&(0,jt.jsxs)("div",{className:"tab-sync-domain-pills",children:[(0,jt.jsx)("span",{className:"domain-pills-label",children:"Quick filters:"}),L.map(function(e){var n=Gr(e,2),t=n[0],r=n[1];return(0,jt.jsxs)("button",{onClick:function(){return N(_===t?"":t)},className:"domain-pill ".concat(_===t?"active":""),children:[t," (",r,")"]},t)})]})]}),(0,jt.jsxs)("div",{className:"tab-sync-bulk-actions",children:[(0,jt.jsxs)("button",{onClick:function(){var e=I();p.size===e.length?g(new Set):g(new Set(e.map(function(e){return e.id})))},className:"bulk-action-btn",title:p.size===D.length?"Deselect all":"Select all",children:[p.size===D.length?(0,jt.jsx)(Fr,{size:16}):(0,jt.jsx)(y,{size:16}),p.size===D.length?"Deselect All":"Select All"]}),p.size>0&&(0,jt.jsxs)(jt.Fragment,{children:[(0,jt.jsxs)("button",{onClick:function(){return O(void 0,!0)},className:"bulk-action-btn primary",disabled:B,children:[(0,jt.jsx)(C,{size:16}),"Save to Inbox (",p.size,")"]}),(0,jt.jsxs)("select",{onChange:function(e){e.target.value&&(O(e.target.value),e.target.value="")},className:"bulk-collection-select",disabled:B,title:"Save selected tabs to collection","aria-label":"Save selected tabs to collection",children:[(0,jt.jsx)("option",{value:"",children:"Save to Collection..."}),r.map(function(e){return(0,jt.jsx)("option",{value:e.id,children:e.name},e.id)})]})]})]}),(0,jt.jsx)("div",{className:"tab-sync-content",children:d?(0,jt.jsxs)("div",{className:"tab-sync-loading",children:[(0,jt.jsx)(Mr,{size:24,className:"spinning"}),(0,jt.jsx)("p",{children:"Loading tabs..."})]}):0===Object.keys(v).length?(0,jt.jsxs)("div",{className:"tab-sync-empty",children:[(0,jt.jsx)($r,{size:48}),(0,jt.jsx)("h3",{children:"No tabs found"}),(0,jt.jsx)("p",{children:"Open some tabs and refresh to see them here"})]}):Object.entries(v).map(function(e){var n=Gr(e,2),t=n[0],a=n[1];return(0,jt.jsxs)("div",{className:"tab-window-group",children:[(0,jt.jsx)("div",{className:"tab-window-header",children:(0,jt.jsxs)("button",{onClick:function(){return function(e){var n=(v[e]||[]).map(function(e){return e.id}),t=new Set(p);n.every(function(e){return t.has(e)})?n.forEach(function(e){return t.delete(e)}):n.forEach(function(e){return t.add(e)}),g(t)}(parseInt(t))},className:"window-select-btn",children:[(0,jt.jsx)($r,{size:16}),"Window ",t," (",a.length," tabs)"]})}),(0,jt.jsx)("div",{className:"tab-list",children:a.filter(function(e){return!(k&&!e.pinned||_&&!e.domain.toLowerCase().includes(_.toLowerCase()))}).map(function(e){return(0,jt.jsxs)("div",{className:"tab-item ".concat(p.has(e.id)?"selected":""," ").concat(e.active?"active":""),children:[(0,jt.jsxs)("div",{className:"tab-item-content",children:[(0,jt.jsx)("input",{type:"checkbox",checked:p.has(e.id),onChange:function(){return n=e.id,(t=new Set(p)).has(n)?t.delete(n):t.add(n),void g(t);var n,t},className:"tab-checkbox",title:"Select ".concat(e.title),"aria-label":"Select ".concat(e.title)}),(0,jt.jsx)("img",{src:e.favicon||"https://www.google.com/s2/favicons?domain=".concat(e.domain,"&sz=16"),alt:"favicon",className:"tab-favicon",onError:function(n){n.target.src="https://www.google.com/s2/favicons?domain=".concat(e.domain,"&sz=16")}}),(0,jt.jsxs)("div",{className:"tab-info",children:[(0,jt.jsxs)("div",{className:"tab-title",children:[e.pinned&&(0,jt.jsx)("span",{className:"tab-pin-indicator",children:"📌"}),e.title,e.active&&(0,jt.jsx)("span",{className:"tab-active-indicator",children:"•"})]}),(0,jt.jsx)("div",{className:"tab-url",children:e.domain})]})]}),(0,jt.jsxs)("div",{className:"tab-actions",children:[(0,jt.jsx)("button",{onClick:function(){return P(e,void 0,!0)},className:"tab-action-btn",title:"Save to inbox",disabled:B,children:(0,jt.jsx)(C,{size:14})}),(0,jt.jsxs)("select",{onChange:function(n){n.target.value&&(P(e,n.target.value),n.target.value="")},className:"tab-collection-select",disabled:B,title:"Save to collection","aria-label":"Save to collection",children:[(0,jt.jsx)("option",{value:"",children:"📁"}),r.map(function(e){return(0,jt.jsx)("option",{value:e.id,children:e.name},e.id)})]}),(0,jt.jsx)("a",{href:e.url,target:"_blank",rel:"noopener noreferrer",className:"tab-action-btn",title:"Open tab",children:(0,jt.jsx)(xt,{size:14})})]})]},e.id)})})]},t)})}),(0,jt.jsx)("div",{className:"tab-sync-footer",children:(0,jt.jsxs)("div",{className:"tab-sync-stats",children:[(0,jt.jsxs)("span",{children:[p.size," of ",D.length," tabs selected"]}),_&&(0,jt.jsxs)("span",{children:['• Filtered by "',_,'"']}),k&&(0,jt.jsx)("span",{children:"• Pinned only"})]})})]})}):null};function Zr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Qr=function(e){var n,t,r=e.link,a=e.onSave,i=e.onClose,s=(n=(0,o.useState)(r.userNote||""),t=2,function(e){if(Array.isArray(e))return e}(n)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||function(e,n){if(e){if("string"==typeof e)return Zr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Zr(e,n):void 0}}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=s[0],c=s[1];return(0,jt.jsx)("div",{className:"modal-overlay",onClick:i,children:(0,jt.jsxs)("div",{className:"modal-content",onClick:function(e){return e.stopPropagation()},children:[(0,jt.jsxs)("div",{className:"modal-header",children:[(0,jt.jsx)("h2",{className:"modal-title",children:"Add Note"}),(0,jt.jsx)("button",{onClick:i,className:"modal-close-button",title:"Close",children:(0,jt.jsx)(h,{size:20})})]}),(0,jt.jsxs)("form",{onSubmit:function(e){e.preventDefault(),a(l)},children:[(0,jt.jsx)("div",{className:"modal-body",children:(0,jt.jsxs)("div",{className:"form-group",children:[(0,jt.jsx)("label",{htmlFor:"note",children:"Your Note"}),(0,jt.jsx)("textarea",{id:"note",value:l,onChange:function(e){return c(e.target.value)},placeholder:"Add a note about why you saved this link...",rows:6,autoFocus:!0})]})}),(0,jt.jsxs)("div",{className:"modal-footer",children:[(0,jt.jsx)("button",{type:"button",onClick:i,className:"button",children:"Cancel"}),(0,jt.jsx)("button",{type:"submit",className:"button primary",children:"Save Note"})]})]})]})})};function Jr(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Xr(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xr(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xr(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const ea=function(e){var n=e.onSave,t=e.onClose,r=Jr((0,o.useState)(""),2),a=r[0],i=r[1],s=Jr((0,o.useState)(""),2),l=s[0],c=s[1];return(0,jt.jsx)("div",{className:"modal-overlay",onClick:t,children:(0,jt.jsxs)("div",{className:"modal-content",onClick:function(e){return e.stopPropagation()},children:[(0,jt.jsxs)("div",{className:"modal-header",children:[(0,jt.jsx)("h2",{className:"modal-title",children:"Create Collection"}),(0,jt.jsx)("button",{onClick:t,className:"modal-close-button",title:"Close",children:(0,jt.jsx)(h,{size:20})})]}),(0,jt.jsxs)("form",{onSubmit:function(e){e.preventDefault(),a.trim()&&n(a.trim(),l.trim()||void 0)},children:[(0,jt.jsxs)("div",{className:"modal-body",children:[(0,jt.jsxs)("div",{className:"form-group",children:[(0,jt.jsx)("label",{htmlFor:"collection-name",children:"Collection Name"}),(0,jt.jsx)("input",{id:"collection-name",type:"text",value:a,onChange:function(e){return i(e.target.value)},placeholder:"e.g. Design Inspiration",required:!0,autoFocus:!0})]}),(0,jt.jsxs)("div",{className:"form-group",children:[(0,jt.jsx)("label",{htmlFor:"collection-description",children:"Description (optional)"}),(0,jt.jsx)("textarea",{id:"collection-description",value:l,onChange:function(e){return c(e.target.value)},placeholder:"A short description of this collection",rows:3})]})]}),(0,jt.jsxs)("div",{className:"modal-footer",children:[(0,jt.jsx)("button",{type:"button",onClick:t,className:"button",children:"Cancel"}),(0,jt.jsx)("button",{type:"submit",className:"button primary",disabled:!a.trim(),children:"Create Collection"})]})]})]})})},na=l("BookOpen",[["path",{d:"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z",key:"vv98re"}],["path",{d:"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z",key:"1cyq3y"}]]),ta=l("Target",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["circle",{cx:"12",cy:"12",r:"6",key:"1vlfrh"}],["circle",{cx:"12",cy:"12",r:"2",key:"1c9p78"}]]),ra=l("Lightbulb",[["path",{d:"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5",key:"1gvzjb"}],["path",{d:"M9 18h6",key:"x1upvd"}],["path",{d:"M10 22h4",key:"ceow96"}]]),aa=l("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]]),oa=l("Brain",[["path",{d:"M9.5 2A2.5 2.5 0 0 1 12 4.5v15a2.5 2.5 0 0 1-4.96.44 2.5 2.5 0 0 1-2.96-3.08 3 3 0 0 1-.34-5.58 2.5 2.5 0 0 1 1.32-4.24 2.5 2.5 0 0 1 1.98-3A2.5 2.5 0 0 1 9.5 2Z",key:"1mhkh5"}],["path",{d:"M14.5 2A2.5 2.5 0 0 0 12 4.5v15a2.5 2.5 0 0 0 4.96.44 2.5 2.5 0 0 0 2.96-3.08 3 3 0 0 0 .34-5.58 2.5 2.5 0 0 0-1.32-4.24 2.5 2.5 0 0 0-1.98-3A2.5 2.5 0 0 0 14.5 2Z",key:"1d6s00"}]]);function ia(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||sa(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function sa(e,n){if(e){if("string"==typeof e)return la(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?la(e,n):void 0}}function la(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const ca=function(e){var n=e.isOpen,t=e.onSave,r=e.onSkip,a=e.onClose,i=e.linkTitle,s=void 0===i?"this link":i,l=e.linkUrl,u=void 0===l?"":l,d=ia((0,o.useState)(""),2),A=d[0],f=d[1],p=ia((0,o.useState)(""),2),g=p[0],m=p[1],v=ia((0,o.useState)([]),2),b=v[0],y=v[1],C=ia((0,o.useState)([]),2),E=C[0],B=C[1],x=[{id:"learn",label:"To Learn",icon:(0,jt.jsx)(na,{size:16}),description:"I want to study this topic or skill",suggestedTags:["learning","tutorial","education"]},{id:"reference",label:"For Reference",icon:(0,jt.jsx)(c,{size:16}),description:"I might need this information later",suggestedTags:["reference","documentation","resource"]},{id:"project",label:"For a Project",icon:(0,jt.jsx)(ta,{size:16}),description:"This relates to a current or future project",suggestedTags:["project","work","implementation"]},{id:"inspiration",label:"For Inspiration",icon:(0,jt.jsx)(ra,{size:16}),description:"This gives me ideas or creative inspiration",suggestedTags:["inspiration","ideas","creative"]},{id:"later",label:"Read Later",icon:(0,jt.jsx)(aa,{size:16}),description:"I don't have time now but want to read this",suggestedTags:["read-later","queue","pending"]},{id:"research",label:"For Research",icon:(0,jt.jsx)(oa,{size:16}),description:"This is part of my research on a topic",suggestedTags:["research","analysis","study"]}];(0,o.useEffect)(function(){if(A){var e=x.find(function(e){return e.id===A});e&&(y(e.suggestedTags),B(e.suggestedTags.slice(0,2)))}},[A]);var w=A||g.trim();return n?(0,jt.jsx)("div",{className:"modal-overlay",onClick:a,children:(0,jt.jsxs)("div",{className:"modal-content save-prompt-modal",onClick:function(e){return e.stopPropagation()},children:[(0,jt.jsxs)("div",{className:"modal-header",children:[(0,jt.jsx)("h2",{className:"modal-title",children:"Why are you saving this?"}),(0,jt.jsx)("button",{onClick:a,className:"modal-close-button",title:"Close",children:(0,jt.jsx)(h,{size:20})})]}),(0,jt.jsxs)("div",{className:"modal-body",children:[(0,jt.jsxs)("div",{className:"save-prompt-link-preview",children:[(0,jt.jsx)("div",{className:"link-preview-title",children:s}),u&&(0,jt.jsx)("div",{className:"link-preview-url",children:new URL(u).hostname})]}),(0,jt.jsxs)("div",{className:"save-reasons-section",children:[(0,jt.jsx)("h3",{children:"Select a reason:"}),(0,jt.jsx)("div",{className:"save-reasons-grid",children:x.map(function(e){return(0,jt.jsxs)("button",{onClick:function(){return n=e.id,f(n),void m("");var n},className:"save-reason-card ".concat(A===e.id?"selected":""),children:[(0,jt.jsx)("div",{className:"save-reason-icon",children:e.icon}),(0,jt.jsxs)("div",{className:"save-reason-content",children:[(0,jt.jsx)("div",{className:"save-reason-label",children:e.label}),(0,jt.jsx)("div",{className:"save-reason-description",children:e.description})]})]},e.id)})})]}),(0,jt.jsxs)("div",{className:"custom-reason-section",children:[(0,jt.jsx)("h3",{children:"Or write your own reason:"}),(0,jt.jsx)("textarea",{value:g,onChange:function(e){return n=e.target.value,m(n),void(n.trim()&&f(""));var n},placeholder:"I'm saving this because...",className:"custom-reason-input",rows:3})]}),b.length>0&&(0,jt.jsxs)("div",{className:"suggested-tags-section",children:[(0,jt.jsx)("h3",{children:"Suggested tags:"}),(0,jt.jsx)("div",{className:"suggested-tags",children:b.map(function(e){return(0,jt.jsx)("button",{onClick:function(){return function(e){B(function(n){return n.includes(e)?n.filter(function(n){return n!==e}):[].concat(function(e){if(Array.isArray(e))return la(e)}(t=n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||sa(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[e]);var t})}(e)},className:"suggested-tag ".concat(E.includes(e)?"selected":""),children:e},e)})})]}),(0,jt.jsxs)("div",{className:"save-prompt-tip",children:[(0,jt.jsx)(ra,{size:16}),(0,jt.jsx)("span",{children:"Adding context helps you find and use your saved links more effectively!"})]})]}),(0,jt.jsxs)("div",{className:"modal-footer",children:[(0,jt.jsx)("button",{onClick:r,className:"button",children:"Skip for now"}),(0,jt.jsx)("button",{onClick:function(){var e,n=g.trim()||(null===(e=x.find(function(e){return e.id===A}))||void 0===e?void 0:e.description)||"Saved for later reference";t(n,E)},className:"button primary",disabled:!w,children:"Save with context"})]})]})}):null},ua=function(e){var n=e.tags,t=e.selectedTag,r=e.onTagSelect,a=e.loading,o=function(e){for(var n=["#3b82f6","#10b981","#f59e0b","#ef4444","#8b5cf6","#06b6d4","#84cc16","#f97316","#ec4899","#6366f1"],t=0,r=0;r<e.length;r++)t=e.charCodeAt(r)+((t<<5)-t);return n[Math.abs(t)%n.length]};return void 0!==a&&a?(0,jt.jsx)("div",{className:"tag-filters",children:(0,jt.jsx)("div",{className:"tag-filter-skeleton",children:"Loading tags..."})}):0===n.length?null:(0,jt.jsxs)("div",{className:"tag-filters",children:[t&&(0,jt.jsxs)("button",{onClick:function(){return r(null)},className:"tag-filter active",title:"Clear tag filter",children:[(0,jt.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:o(t)}}),t,(0,jt.jsx)(h,{size:12})]}),n.filter(function(e){return e.name!==t}).sort(function(e,n){return n.usageCount-e.usageCount}).slice(0,10).map(function(e){return(0,jt.jsxs)("button",{onClick:function(){return r(e.name)},className:"tag-filter",title:"Filter by ".concat(e.name," tag"),children:[(0,jt.jsx)("span",{className:"tag-filter-color",style:{backgroundColor:o(e.name)}}),e.name,(0,jt.jsx)("span",{className:"tag-filter-count",children:e.usageCount})]},e.id)}),n.length>10&&!t&&(0,jt.jsxs)("span",{className:"tag-filter-more",children:["+",n.length-10," more"]})]})},da=l("User",[["path",{d:"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2",key:"975kel"}],["circle",{cx:"12",cy:"7",r:"4",key:"17ys0d"}]]),Aa=l("Palette",[["circle",{cx:"13.5",cy:"6.5",r:".5",key:"1xcu5"}],["circle",{cx:"17.5",cy:"10.5",r:".5",key:"736e4u"}],["circle",{cx:"8.5",cy:"7.5",r:".5",key:"clrty"}],["circle",{cx:"6.5",cy:"12.5",r:".5",key:"1s4xz9"}],["path",{d:"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",key:"12rzf8"}]]),fa=l("Mail",[["rect",{width:"20",height:"16",x:"2",y:"4",rx:"2",key:"18n3k1"}],["path",{d:"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7",key:"1ocrg3"}]]),ha=l("Database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]),pa=l("Calendar",[["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",ry:"2",key:"eu3xkr"}],["line",{x1:"16",x2:"16",y1:"2",y2:"6",key:"m3sa8f"}],["line",{x1:"8",x2:"8",y1:"2",y2:"6",key:"18kwsl"}],["line",{x1:"3",x2:"21",y1:"10",y2:"10",key:"xt86sb"}]]),ga=l("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]),ma=l("HelpCircle",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3",key:"1u773s"}],["path",{d:"M12 17h.01",key:"p32p05"}]]),va=l("Send",[["path",{d:"m22 2-7 20-4-9-9-4Z",key:"1q3vgg"}],["path",{d:"M22 2 11 13",key:"nzbqef"}]]);var ba=a(508);function ya(e){return ya="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ya(e)}function Ca(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=Ba(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var r=0,a=function(){};return{s:a,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,i=!0,s=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return i=e.done,e},e:function(e){s=!0,o=e},f:function(){try{i||null==t.return||t.return()}finally{if(s)throw o}}}}function Ea(e){return function(e){if(Array.isArray(e))return xa(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Ba(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ba(e,n){if(e){if("string"==typeof e)return xa(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?xa(e,n):void 0}}function xa(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}function wa(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return ka(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(ka(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,ka(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,ka(d,"constructor",c),ka(c,"constructor",l),l.displayName="GeneratorFunction",ka(c,a,"GeneratorFunction"),ka(d),ka(d,a,"Generator"),ka(d,r,function(){return this}),ka(d,"toString",function(){return"[object Generator]"}),(wa=function(){return{w:o,m:A}})()}function ka(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}ka=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){ka(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},ka(e,n,t,r)}function Sa(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function ja(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Sa(o,r,a,i,s,"next",e)}function s(e){Sa(o,r,a,i,s,"throw",e)}i(void 0)})}}function _a(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Na(r.key),r)}}function Na(e){var n=function(e){if("object"!=ya(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=ya(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ya(n)?n:n+""}var za=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e)}return n=e,t=[{key:"getPreferences",value:(g=ja(wa().m(function e(){var n,t;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.get("digest_preferences");case 1:return n=e.v,e.a(2,n.digest_preferences||this.getDefaultPreferences());case 2:return e.p=2,t=e.v,console.error("Failed to get digest preferences:",t),e.a(2,this.getDefaultPreferences())}},e,this,[[0,2]])})),function(){return g.apply(this,arguments)})},{key:"savePreferences",value:(p=ja(wa().m(function e(n){var t;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.set({digest_preferences:n});case 1:if(!n.enabled){e.n=3;break}return e.n=2,this.scheduleDigest(n);case 2:e.n=4;break;case 3:return e.n=4,this.unscheduleDigest();case 4:e.n=6;break;case 5:throw e.p=5,t=e.v,console.error("Failed to save digest preferences:",t),t;case 6:return e.a(2)}},e,this,[[0,5]])})),function(e){return p.apply(this,arguments)})},{key:"getDefaultPreferences",value:function(){return{enabled:!1,frequency:"weekly",time:"09:00",timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,includeStats:!0,includeRecentSaves:!0,includePopularLinks:!0,includeSmartCollections:!0,includeActivitySummary:!0,maxLinksPerSection:5}}},{key:"generateDigest",value:(h=ja(wa().m(function e(n,t){var r,a,o,i,s,l,c,u,d,A,f,h,p,g,m,v,b,y,C,E,B,x,w;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,r=t||this.calculatePeriod(n.frequency),e.n=1,Bt.getData();case 1:return a=e.v,e.n=2,Bt.getActivityStats();case 2:if(o=e.v,i=[],!n.includeRecentSaves){e.n=4;break}return c=i,e.n=3,this.generateRecentSavesSection(a.links,r,n.maxLinksPerSection);case 3:u=e.v,c.push.call(c,u);case 4:if(!n.includePopularLinks){e.n=6;break}return d=i,e.n=5,this.generatePopularLinksSection(a.links,r,n.maxLinksPerSection);case 5:A=e.v,d.push.call(d,A);case 6:if(!n.includeSmartCollections){e.n=8;break}return f=i,e.n=7,this.generateSmartCollectionsSection(a.smartCollections||[],n.maxLinksPerSection);case 7:h=e.v,f.push.call(f,h);case 8:if(!n.includeActivitySummary){e.n=10;break}return p=i,e.n=9,this.generateActivitySummarySection(r);case 9:g=e.v,p.push.call(p,g);case 10:return e.n=11,this.generateAIInsights(i,r);case 11:return s=e.v,m="digest_".concat(Date.now()),v=new Date,b=r,y=this.countLinksInPeriod(a.links,r),C=o.thisWeekActivity,E=this.countCollectionsInPeriod(a.collections,r),e.n=12,this.countTagsUsedInPeriod(r);case 12:return B=e.v,x=o.currentStreak,l={id:m,userId:"current_user",generatedAt:v,period:b,stats:{linksSaved:y,linksRead:C,collectionsCreated:E,tagsUsed:B,currentStreak:x},sections:i,aiInsights:s,sent:!1},e.a(2,l);case 13:throw e.p=13,w=e.v,console.error("Failed to generate digest:",w),w;case 14:return e.a(2)}},e,this,[[0,13]])})),function(e,n){return h.apply(this,arguments)})},{key:"generateRecentSavesSection",value:(f=ja(wa().m(function e(n,t,r){var a,o,i,s;return wa().w(function(e){for(;;)switch(e.n){case 0:if(a=n.filter(function(e){return e.createdAt>=t.start&&e.createdAt<=t.end}).sort(function(e,n){return n.createdAt.getTime()-e.createdAt.getTime()}).slice(0,r),o="",!(a.length>0)){e.n=4;break}return e.p=1,i=a.map(function(e){return e.title}).join(", "),e.n=2,ba.aiService.generateText("Provide a brief, engaging summary of these recently saved links and identify any common themes: ".concat(i),100);case 2:o=e.v,e.n=4;break;case 3:e.p=3,s=e.v,console.error("Failed to generate AI summary for recent saves:",s);case 4:return e.a(2,{type:"recent_saves",title:"📚 Recent Saves (".concat(a.length,")"),content:a.map(function(e){return{title:e.title,url:e.url,domain:e.domain,favicon:e.favicon,aiSummary:e.aiSummary,createdAt:e.createdAt}}),aiSummary:o})}},e,null,[[1,3]])})),function(e,n,t){return f.apply(this,arguments)})},{key:"generatePopularLinksSection",value:(A=ja(wa().m(function e(n,t,r){var a,o,i,s,l=this;return wa().w(function(e){for(;;)switch(e.n){case 0:if(a=n.filter(function(e){return e.createdAt>=t.start&&e.createdAt<=t.end}).sort(function(e,n){var t=l.calculatePopularityScore(e);return l.calculatePopularityScore(n)-t}).slice(0,r),o="",!(a.length>0)){e.n=4;break}return e.p=1,i=Ea(new Set(a.map(function(e){return e.domain}))),e.n=2,ba.aiService.generateText("Analyze these popular domains and explain why they might be trending: ".concat(i.join(", ")),100);case 2:o=e.v,e.n=4;break;case 3:e.p=3,s=e.v,console.error("Failed to generate AI summary for popular links:",s);case 4:return e.a(2,{type:"popular_links",title:"🔥 Trending Links (".concat(a.length,")"),content:a.map(function(e){return{title:e.title,url:e.url,domain:e.domain,favicon:e.favicon,aiSummary:e.aiSummary,popularityScore:l.calculatePopularityScore(e)}}),aiSummary:o})}},e,null,[[1,3]])})),function(e,n,t){return A.apply(this,arguments)})},{key:"generateSmartCollectionsSection",value:(d=ja(wa().m(function e(n,t){var r,a,o,i;return wa().w(function(e){for(;;)switch(e.n){case 0:if(r=n.filter(function(e){return e.autoUpdate}).slice(0,t),a="",!(r.length>0)){e.n=4;break}return e.p=1,o=r.map(function(e){return e.name}).join(", "),e.n=2,ba.aiService.generateText("Explain how these smart collections can help organize knowledge: ".concat(o),100);case 2:a=e.v,e.n=4;break;case 3:e.p=3,i=e.v,console.error("Failed to generate AI summary for smart collections:",i);case 4:return e.a(2,{type:"smart_collections",title:"✨ Smart Collections (".concat(r.length,")"),content:r.map(function(e){return{name:e.name,description:e.description,icon:e.icon,linkCount:0}}),aiSummary:a})}},e,null,[[1,3]])})),function(e,n){return d.apply(this,arguments)})},{key:"generateActivitySummarySection",value:(u=ja(wa().m(function e(n){var t,r,a,o,i,s;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getActivities(n.start,n.end);case 1:return t=e.v,e.n=2,Bt.getActivityStats();case 2:return r=e.v,a={totalActivities:t.length,saveActivities:t.filter(function(e){return"save"===e.type}).length,readActivities:t.filter(function(e){return"read"===e.type}).length,organizeActivities:t.filter(function(e){return"organize"===e.type}).length,currentStreak:r.currentStreak,longestStreak:r.longestStreak},o="",e.p=3,e.n=4,ba.aiService.generateText("Provide encouraging insights about this activity pattern: ".concat(a.saveActivities," saves, ").concat(a.readActivities," reads, ").concat(a.organizeActivities," organizes, ").concat(a.currentStreak," day streak"),100);case 4:o=e.v,e.n=6;break;case 5:e.p=5,i=e.v,console.error("Failed to generate AI summary for activity:",i);case 6:return e.a(2,{type:"activity_summary",title:"📊 Your Activity (".concat(a.totalActivities," actions)"),content:[a],aiSummary:o});case 7:return e.p=7,s=e.v,console.error("Failed to generate activity summary:",s),e.a(2,{type:"activity_summary",title:"📊 Your Activity",content:[],aiSummary:"Activity tracking data unavailable."})}},e,null,[[3,5],[0,7]])})),function(e){return u.apply(this,arguments)})},{key:"generateAIInsights",value:(c=ja(wa().m(function e(n,t){var r,a;return wa().w(function(e){for(;;)switch(e.n){case 0:if(e.p=0,r=n.filter(function(e){return e.aiSummary}).map(function(e){return"".concat(e.title,": ").concat(e.aiSummary)}).join("\n")){e.n=1;break}return e.a(2,"Keep up the great work building your knowledge collection!");case 1:return e.n=2,ba.aiService.generateText("Based on these sections from a user's knowledge digest, provide personalized insights and suggestions for improvement:\n".concat(r),200);case 2:return e.a(2,e.v);case 3:return e.p=3,a=e.v,console.error("Failed to generate AI insights:",a),e.a(2,"Continue exploring and saving valuable content to build your personal knowledge base!")}},e,null,[[0,3]])})),function(e,n){return c.apply(this,arguments)})},{key:"calculatePeriod",value:function(e){var n=new Date,t=new Date;switch(e){case"daily":t.setDate(t.getDate()-1);break;case"weekly":t.setDate(t.getDate()-7);break;case"monthly":t.setDate(t.getDate()-30)}return{start:t,end:n}}},{key:"calculatePopularityScore",value:function(e){var n=0,t=(Date.now()-e.createdAt.getTime())/864e5;return n+=2*Math.max(0,7-t),["github.com","stackoverflow.com","medium.com","dev.to","hackernews.com"].includes(e.domain)&&(n+=5),e.aiSummary&&(n+=3),e.userNote&&(n+=2),n}},{key:"countLinksInPeriod",value:function(e,n){return e.filter(function(e){return e.createdAt>=n.start&&e.createdAt<=n.end}).length}},{key:"countCollectionsInPeriod",value:function(e,n){return e.filter(function(e){return e.createdAt>=n.start&&e.createdAt<=n.end}).length}},{key:"countTagsUsedInPeriod",value:(l=ja(wa().m(function e(n){var t,r,a,o;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getActivities(n.start,n.end);case 1:return t=e.v,r=t.filter(function(e){return e.metadata&&e.metadata.tags&&e.metadata.tags.length>0}),a=new Set,r.forEach(function(e){e.metadata.tags.forEach(function(e){return a.add(e)})}),e.a(2,a.size);case 2:return e.p=2,o=e.v,console.error("Failed to count tags used in period:",o),e.a(2,0)}},e,null,[[0,2]])})),function(e){return l.apply(this,arguments)})},{key:"generateEmailHTML",value:(s=ja(wa().m(function e(n){var t,r,a,o,i,s,l,c,u;return wa().w(function(e){for(;;)if(0===e.n){t=n.period,r=n.stats,a=n.sections,o=n.aiInsights,i=this.formatPeriod(t),s='\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <title>Your Nest Digest</title>\n        <style>\n          body { font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; background-color: #f8fafc; }\n          .container { max-width: 600px; margin: 0 auto; background: white; }\n          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; text-align: center; }\n          .header h1 { margin: 0; font-size: 2rem; }\n          .header p { margin: 0.5rem 0 0; opacity: 0.9; }\n          .content { padding: 2rem; }\n          .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 1rem; margin-bottom: 2rem; }\n          .stat { background: #f8fafc; padding: 1rem; border-radius: 8px; text-align: center; }\n          .stat-number { font-size: 1.5rem; font-weight: bold; color: #667eea; }\n          .stat-label { font-size: 0.875rem; color: #64748b; margin-top: 0.25rem; }\n          .section { margin-bottom: 2rem; }\n          .section-title { font-size: 1.25rem; font-weight: bold; margin-bottom: 1rem; color: #1e293b; }\n          .link-item { display: flex; gap: 1rem; padding: 1rem; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 1rem; }\n          .link-favicon { width: 24px; height: 24px; border-radius: 4px; flex-shrink: 0; }\n          .link-content { flex: 1; }\n          .link-title { font-weight: 600; color: #1e293b; text-decoration: none; }\n          .link-title:hover { color: #667eea; }\n          .link-domain { font-size: 0.875rem; color: #64748b; margin-top: 0.25rem; }\n          .link-summary { font-size: 0.875rem; color: #475569; margin-top: 0.5rem; }\n          .ai-insights { background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%); padding: 1.5rem; border-radius: 12px; margin: 2rem 0; }\n          .ai-insights h3 { margin: 0 0 1rem; color: #0369a1; }\n          .ai-insights p { margin: 0; }\n          .footer { background: #f8fafc; padding: 2rem; text-align: center; color: #64748b; font-size: 0.875rem; }\n          .button { display: inline-block; background: #667eea; color: white; padding: 0.75rem 1.5rem; border-radius: 8px; text-decoration: none; font-weight: 600; }\n        </style>\n      </head>\n      <body>\n        <div class="container">\n          <div class="header">\n            <h1>📚 Your Nest Digest</h1>\n            <p>'.concat(i,'</p>\n          </div>\n          \n          <div class="content">\n            <div class="stats">\n              <div class="stat">\n                <div class="stat-number">').concat(r.linksSaved,'</div>\n                <div class="stat-label">Links Saved</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.linksRead,'</div>\n                <div class="stat-label">Links Read</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.collectionsCreated,'</div>\n                <div class="stat-label">Collections</div>\n              </div>\n              <div class="stat">\n                <div class="stat-number">').concat(r.currentStreak,'</div>\n                <div class="stat-label">Day Streak</div>\n              </div>\n            </div>\n    '),l=Ca(a);try{for(l.s();!(c=l.n()).done;)u=c.value,s+=this.generateSectionHTML(u)}catch(e){l.e(e)}finally{l.f()}return o&&(s+='\n        <div class="ai-insights">\n          <h3>✨ AI Insights</h3>\n          <p>'.concat(o,"</p>\n        </div>\n      ")),s+='\n            <div style="text-align: center; margin: 2rem 0;">\n              <a href="chrome-extension://nest" class="button">Open Nest</a>\n            </div>\n          </div>\n          \n          <div class="footer">\n            <p>This digest was generated by Nest - Your Smart Bookmarking Assistant</p>\n            <p>You can adjust your digest preferences in the Nest settings.</p>\n          </div>\n        </div>\n      </body>\n      </html>\n    ',e.a(2,s)}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"generateSectionHTML",value:function(e){var n='<div class="section"><h2 class="section-title">'.concat(e.title,"</h2>");if("recent_saves"===e.type||"popular_links"===e.type){var t,r=Ca(e.content);try{for(r.s();!(t=r.n()).done;){var a=t.value;n+='\n          <div class="link-item">\n            <img src="'.concat(a.favicon||"https://www.google.com/s2/favicons?domain=".concat(a.domain,"&sz=24"),'" alt="" class="link-favicon">\n            <div class="link-content">\n              <a href="').concat(a.url,'" class="link-title" target="_blank">').concat(a.title,'</a>\n              <div class="link-domain">').concat(a.domain,"</div>\n              ").concat(a.aiSummary?'<div class="link-summary">'.concat(a.aiSummary,"</div>"):"","\n            </div>\n          </div>\n        ")}}catch(e){r.e(e)}finally{r.f()}}else if("smart_collections"===e.type){var o,i=Ca(e.content);try{for(i.s();!(o=i.n()).done;){var s=o.value;n+='\n          <div class="link-item">\n            <div style="font-size: 1.5rem; width: 24px; text-align: center;">'.concat(s.icon||"📁",'</div>\n            <div class="link-content">\n              <div class="link-title">').concat(s.name,'</div>\n              <div class="link-summary">').concat(s.description,"</div>\n            </div>\n          </div>\n        ")}}catch(e){i.e(e)}finally{i.f()}}else if("activity_summary"===e.type){var l=e.content[0];l&&(n+='\n          <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); gap: 1rem;">\n            <div class="stat">\n              <div class="stat-number">'.concat(l.saveActivities,'</div>\n              <div class="stat-label">Saves</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(l.readActivities,'</div>\n              <div class="stat-label">Reads</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(l.organizeActivities,'</div>\n              <div class="stat-label">Organizes</div>\n            </div>\n            <div class="stat">\n              <div class="stat-number">').concat(l.currentStreak,'</div>\n              <div class="stat-label">Day Streak</div>\n            </div>\n          </div>\n        '))}return e.aiSummary&&(n+='<div style="background: #f1f5f9; padding: 1rem; border-radius: 8px; margin-top: 1rem; font-style: italic;">'.concat(e.aiSummary,"</div>")),n+"</div>"}},{key:"formatPeriod",value:function(e){var n={month:"short",day:"numeric",year:e.start.getFullYear()!==e.end.getFullYear()?"numeric":void 0},t=e.start.toLocaleDateString("en-US",n),r=e.end.toLocaleDateString("en-US",n);return"".concat(t," - ").concat(r)}},{key:"scheduleDigest",value:(i=ja(wa().m(function e(n){var t;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.set({digest_schedule:{enabled:!0,frequency:n.frequency,time:n.time,timezone:n.timezone,lastSent:null,nextSend:this.calculateNextSendTime(n)}});case 1:e.n=3;break;case 2:e.p=2,t=e.v,console.error("Failed to schedule digest:",t);case 3:return e.a(2)}},e,this,[[0,2]])})),function(e){return i.apply(this,arguments)})},{key:"unscheduleDigest",value:(o=ja(wa().m(function e(){var n;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.set({digest_schedule:{enabled:!1}});case 1:e.n=3;break;case 2:e.p=2,n=e.v,console.error("Failed to unschedule digest:",n);case 3:return e.a(2)}},e,null,[[0,2]])})),function(){return o.apply(this,arguments)})},{key:"calculateNextSendTime",value:function(e){var n=new Date,t=function(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||Ba(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e.time.split(":").map(Number),2),r=t[0],a=t[1],o=new Date;if(o.setHours(r,a,0,0),o<=n)switch(e.frequency){case"daily":o.setDate(o.getDate()+1);break;case"weekly":o.setDate(o.getDate()+7);break;case"monthly":o.setMonth(o.getMonth()+1)}return o}},{key:"generatePreview",value:(a=ja(wa().m(function e(){var n;return wa().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,this.getPreferences();case 1:return n=e.v,e.a(2,this.generateDigest(n))}},e,this)})),function(){return a.apply(this,arguments)})}],r=[{key:"getInstance",value:function(){return e.instance||(e.instance=new e),e.instance}}],t&&_a(n.prototype,t),r&&_a(n,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,t,r,a,o,i,s,l,c,u,d,A,f,h,p,g}(),Ta=za.getInstance();function Ia(e){return Ia="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ia(e)}function Oa(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function Pa(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Oa(Object(t),!0).forEach(function(n){Da(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Oa(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function Da(e,n,t){return(n=function(e){var n=function(e){if("object"!=Ia(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=Ia(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Ia(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function La(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Ra(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Ra(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Ra(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Ra(d,"constructor",c),Ra(c,"constructor",l),l.displayName="GeneratorFunction",Ra(c,a,"GeneratorFunction"),Ra(d),Ra(d,a,"Generator"),Ra(d,r,function(){return this}),Ra(d,"toString",function(){return"[object Generator]"}),(La=function(){return{w:o,m:A}})()}function Ra(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}Ra=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){Ra(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},Ra(e,n,t,r)}function Ua(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function Ma(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Ua(o,r,a,i,s,"next",e)}function s(e){Ua(o,r,a,i,s,"throw",e)}i(void 0)})}}function Fa(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return $a(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?$a(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $a(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const Ya=function(e){e.onClose;var n=Fa((0,o.useState)(null),2),t=n[0],r=n[1],a=Fa((0,o.useState)(!0),2),i=a[0],s=a[1],l=Fa((0,o.useState)(!1),2),c=l[0],u=l[1],d=Fa((0,o.useState)(""),2),A=d[0],f=d[1],h=Fa((0,o.useState)(null),2),p=h[0],g=h[1],m=Fa((0,o.useState)(!1),2),v=m[0],b=m[1],y=Fa((0,o.useState)(!1),2),C=y[0],E=y[1];(0,o.useEffect)(function(){B()},[]);var B=function(){var e=Ma(La().m(function e(){var n,t;return La().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Ta.getPreferences();case 1:n=e.v,r(n),e.n=3;break;case 2:e.p=2,t=e.v,console.error("Failed to load digest preferences:",t),f("Failed to load preferences");case 3:return e.p=3,s(!1),e.f(3);case 4:return e.a(2)}},e,null,[[0,2,3,4]])}));return function(){return e.apply(this,arguments)}}(),x=function(){var e=Ma(La().m(function e(n){var t;return La().w(function(e){for(;;)switch(e.n){case 0:return u(!0),f(""),e.p=1,e.n=2,Ta.savePreferences(n);case 2:r(n),f("Digest preferences saved successfully!"),setTimeout(function(){return f("")},3e3),e.n=4;break;case 3:e.p=3,t=e.v,console.error("Failed to save digest preferences:",t),f("Failed to save preferences");case 4:return e.p=4,u(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(n){return e.apply(this,arguments)}}(),w=function(){var e=Ma(La().m(function e(){var n,r;return La().w(function(e){for(;;)switch(e.n){case 0:if(t){e.n=1;break}return e.a(2);case 1:return E(!0),e.p=2,e.n=3,Ta.generatePreview();case 3:n=e.v,g(n),b(!0),e.n=5;break;case 4:e.p=4,r=e.v,console.error("Failed to generate preview:",r),f("Failed to generate preview");case 5:return e.p=5,E(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(){return e.apply(this,arguments)}}(),k=function(){var e=Ma(La().m(function e(){var n,r,a,o;return La().w(function(e){for(;;)switch(e.n){case 0:if(t&&p){e.n=1;break}return e.a(2);case 1:return e.p=1,e.n=2,Ta.generateEmailHTML(p);case 2:n=e.v,r=new Blob([n],{type:"text/html"}),a=URL.createObjectURL(r),window.open(a,"_blank"),f("Test digest opened in new tab!"),setTimeout(function(){return f("")},3e3),e.n=4;break;case 3:e.p=3,o=e.v,console.error("Failed to generate test digest:",o),f("Failed to generate test digest");case 4:return e.a(2)}},e,null,[[1,3]])}));return function(){return e.apply(this,arguments)}}();return i||!t?(0,jt.jsx)("div",{className:"digest-settings",children:(0,jt.jsx)("div",{className:"loading-spinner",children:"Loading digest settings..."})}):(0,jt.jsxs)("div",{className:"digest-settings",children:[(0,jt.jsxs)("div",{className:"digest-header",children:[(0,jt.jsxs)("div",{className:"digest-header-content",children:[(0,jt.jsx)(fa,{size:24,className:"digest-icon"}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("h3",{children:"Daily Digest Email"}),(0,jt.jsx)("p",{children:"Get personalized summaries of your saved content delivered to your inbox"})]})]}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Enable daily digest emails",children:[(0,jt.jsx)("input",{type:"checkbox",checked:t.enabled,onChange:function(e){return x(Pa(Pa({},t),{},{enabled:e.target.checked}))},disabled:c,"aria-label":"Enable daily digest emails"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),t.enabled&&(0,jt.jsxs)("div",{className:"digest-config",children:[(0,jt.jsxs)("div",{className:"setting-group",children:[(0,jt.jsx)("h4",{children:"Schedule"}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)(pa,{size:16}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Frequency"}),(0,jt.jsx)("div",{className:"setting-description",children:"How often to receive digests"})]})]}),(0,jt.jsxs)("select",{value:t.frequency,onChange:function(e){return x(Pa(Pa({},t),{},{frequency:e.target.value}))},className:"form-control",disabled:c,title:"Select digest frequency","aria-label":"Digest frequency",children:[(0,jt.jsx)("option",{value:"daily",children:"Daily"}),(0,jt.jsx)("option",{value:"weekly",children:"Weekly"}),(0,jt.jsx)("option",{value:"monthly",children:"Monthly"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)(aa,{size:16}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Delivery Time"}),(0,jt.jsx)("div",{className:"setting-description",children:"When to send the digest"})]})]}),(0,jt.jsx)("input",{type:"time",value:t.time,onChange:function(e){return x(Pa(Pa({},t),{},{time:e.target.value}))},className:"form-control",disabled:c,title:"Select delivery time","aria-label":"Delivery time"})]})]}),(0,jt.jsxs)("div",{className:"setting-group",children:[(0,jt.jsx)("h4",{children:"Content"}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)("div",{className:"setting-label",children:"Include Statistics"}),(0,jt.jsx)("div",{className:"setting-description",children:"Show your activity stats and streaks"})]}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Include statistics in digest",children:[(0,jt.jsx)("input",{type:"checkbox",checked:t.includeStats,onChange:function(e){return x(Pa(Pa({},t),{},{includeStats:e.target.checked}))},disabled:c,"aria-label":"Include statistics"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)("div",{className:"setting-label",children:"Recent Saves"}),(0,jt.jsx)("div",{className:"setting-description",children:"Your latest bookmarked links"})]}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Include recent saves in digest",children:[(0,jt.jsx)("input",{type:"checkbox",checked:t.includeRecentSaves,onChange:function(e){return x(Pa(Pa({},t),{},{includeRecentSaves:e.target.checked}))},disabled:c,"aria-label":"Include recent saves"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)("div",{className:"setting-label",children:"Trending Links"}),(0,jt.jsx)("div",{className:"setting-description",children:"Popular content from your collection"})]}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Include trending links in digest",children:[(0,jt.jsx)("input",{type:"checkbox",checked:t.includePopularLinks,onChange:function(e){return x(Pa(Pa({},t),{},{includePopularLinks:e.target.checked}))},disabled:c,"aria-label":"Include trending links"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)("div",{className:"setting-label",children:"Smart Collections"}),(0,jt.jsx)("div",{className:"setting-description",children:"AI-curated content collections"})]}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Include smart collections in digest",children:[(0,jt.jsx)("input",{type:"checkbox",checked:t.includeSmartCollections,onChange:function(e){return x(Pa(Pa({},t),{},{includeSmartCollections:e.target.checked}))},disabled:c,"aria-label":"Include smart collections"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)("div",{className:"setting-label",children:"Activity Summary"}),(0,jt.jsx)("div",{className:"setting-description",children:"Your reading and organizing activity"})]}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Include activity summary in digest",children:[(0,jt.jsx)("input",{type:"checkbox",checked:t.includeActivitySummary,onChange:function(e){return x(Pa(Pa({},t),{},{includeActivitySummary:e.target.checked}))},disabled:c,"aria-label":"Include activity summary"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Links per Section"}),(0,jt.jsx)("div",{className:"setting-description",children:"Maximum number of links to include in each section"})]})}),(0,jt.jsx)("input",{type:"number",min:"1",max:"10",value:t.maxLinksPerSection,onChange:function(e){return x(Pa(Pa({},t),{},{maxLinksPerSection:parseInt(e.target.value)||5}))},className:"form-control",style:{width:"80px"},disabled:c,title:"Maximum links per section","aria-label":"Links per section"})]})]}),(0,jt.jsxs)("div",{className:"setting-group",children:[(0,jt.jsx)("h4",{children:"Preview & Test"}),(0,jt.jsxs)("div",{className:"digest-actions",children:[(0,jt.jsxs)("button",{onClick:w,disabled:C,className:"button secondary",children:[(0,jt.jsx)(nr,{size:16}),C?"Generating...":"Preview Digest"]}),p&&(0,jt.jsxs)("button",{onClick:k,className:"button primary",children:[(0,jt.jsx)(va,{size:16}),"Open Test Email"]})]})]}),v&&p&&(0,jt.jsxs)("div",{className:"digest-preview",children:[(0,jt.jsx)("h4",{children:"Digest Preview"}),(0,jt.jsxs)("div",{className:"preview-content",children:[(0,jt.jsxs)("div",{className:"preview-header",children:[(0,jt.jsx)("h5",{children:"📚 Your Nest Digest"}),(0,jt.jsxs)("p",{children:[p.period.start.toLocaleDateString()," - ",p.period.end.toLocaleDateString()]})]}),(0,jt.jsxs)("div",{className:"preview-stats",children:[(0,jt.jsxs)("div",{className:"preview-stat",children:[(0,jt.jsx)("span",{className:"stat-number",children:p.stats.linksSaved}),(0,jt.jsx)("span",{className:"stat-label",children:"Links Saved"})]}),(0,jt.jsxs)("div",{className:"preview-stat",children:[(0,jt.jsx)("span",{className:"stat-number",children:p.stats.linksRead}),(0,jt.jsx)("span",{className:"stat-label",children:"Links Read"})]}),(0,jt.jsxs)("div",{className:"preview-stat",children:[(0,jt.jsx)("span",{className:"stat-number",children:p.stats.currentStreak}),(0,jt.jsx)("span",{className:"stat-label",children:"Day Streak"})]})]}),(0,jt.jsx)("div",{className:"preview-sections",children:p.sections.map(function(e,n){return(0,jt.jsxs)("div",{className:"preview-section",children:[(0,jt.jsx)("h6",{children:e.title}),(0,jt.jsxs)("p",{children:[e.content.length," items"]}),e.aiSummary&&(0,jt.jsx)("div",{className:"preview-ai-summary",children:(0,jt.jsx)("em",{children:e.aiSummary})})]},n)})}),p.aiInsights&&(0,jt.jsxs)("div",{className:"preview-insights",children:[(0,jt.jsx)("h6",{children:"✨ AI Insights"}),(0,jt.jsx)("p",{children:p.aiInsights})]})]})]})]}),A&&(0,jt.jsx)("div",{className:"digest-message ".concat(A.includes("Failed")?"error":"success"),children:A})]})};function qa(e){return qa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},qa(e)}function Wa(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function Ha(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?Wa(Object(t),!0).forEach(function(n){Ga(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Wa(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function Ga(e,n,t){return(n=function(e){var n=function(e){if("object"!=qa(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=qa(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==qa(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function Va(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Ka(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Ka(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Ka(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Ka(d,"constructor",c),Ka(c,"constructor",l),l.displayName="GeneratorFunction",Ka(c,a,"GeneratorFunction"),Ka(d),Ka(d,a,"Generator"),Ka(d,r,function(){return this}),Ka(d,"toString",function(){return"[object Generator]"}),(Va=function(){return{w:o,m:A}})()}function Ka(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}Ka=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){Ka(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},Ka(e,n,t,r)}function Za(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function Qa(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Za(o,r,a,i,s,"next",e)}function s(e){Za(o,r,a,i,s,"throw",e)}i(void 0)})}}function Ja(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return Xa(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Xa(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xa(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}const eo=function(e){var n=e.onClose,t=Ja((0,o.useState)("account"),2),r=t[0],a=t[1],i=Ja((0,o.useState)(""),2),s=i[0],l=i[1],c=Ja((0,o.useState)({linkCount:0,collectionCount:0,tagCount:0,publicCollections:0,totalViews:0}),2),u=c[0],d=c[1],A=Ja((0,o.useState)({autoSummarize:!0,defaultCategory:"general",defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1,autoTagging:!1,autoCategorization:!1,openaiApiKey:"",newTabEnabled:!0}),2),f=A[0],p=A[1],g=Ja((0,o.useState)(!0),2),m=g[0],v=g[1],b=Ja((0,o.useState)(!1),2),y=b[0],C=b[1],E=Ja((0,o.useState)(""),2),B=E[0],x=E[1];(0,o.useEffect)(function(){w(),k(),S()},[]);var w=function(){var e=Qa(Va().m(function e(){var n,t,r;return Va().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,ct.auth.getUser();case 1:n=e.v,(t=n.data.user)&&l(t.email||"Unknown"),e.n=3;break;case 2:e.p=2,r=e.v,console.error("Failed to load user data:",r);case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),k=function(){var e=Qa(Va().m(function e(){var n,t,r;return Va().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getData();case 1:return n=e.v,e.n=2,chrome.storage.local.get("nest_newtab_enabled");case 2:t=e.v,p({autoSummarize:n.settings.autoSummarize,defaultCategory:n.settings.defaultCategory,defaultPrivacy:!1,showTooltips:!0,compactView:!1,darkMode:!1,autoTagging:n.settings.autoTagging,autoCategorization:n.settings.autoCategorization,openaiApiKey:n.settings.openaiApiKey,newTabEnabled:!1!==t.nest_newtab_enabled}),e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to load settings:",r);case 4:return e.p=4,v(!1),e.f(4);case 5:return e.a(2)}},e,null,[[0,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),S=function(){var e=Qa(Va().m(function e(){var n,t,r,a,o,i,s;return Va().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getData();case 1:return n=e.v,e.n=2,Bt.getUserTags();case 2:return t=e.v,e.n=3,ct.from("collections").select("view_count").eq("is_public",!0);case 3:r=e.v,a=r.data,o=(null==a?void 0:a.length)||0,i=(null==a?void 0:a.reduce(function(e,n){return e+(n.view_count||0)},0))||0,d({linkCount:n.links.length,collectionCount:n.collections.length,tagCount:t.length,publicCollections:o,totalViews:i}),e.n=5;break;case 4:e.p=4,s=e.v,console.error("Failed to load user stats:",s);case 5:return e.a(2)}},e,null,[[0,4]])}));return function(){return e.apply(this,arguments)}}(),j=function(){var e=Qa(Va().m(function e(n){return Va().w(function(e){for(;;)switch(e.n){case 0:if(C(!0),x(""),e.p=1,n.newTabEnabled===f.newTabEnabled){e.n=2;break}return e.n=2,chrome.storage.local.set({nest_newtab_enabled:n.newTabEnabled});case 2:p(n),x("Settings saved successfully!"),setTimeout(function(){return x("")},3e3),e.n=4;break;case 3:e.p=3,e.v,x("Failed to save settings");case 4:return e.p=4,C(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(n){return e.apply(this,arguments)}}(),_=function(){var e=Qa(Va().m(function e(){var n,t,r,a,o,i;return Va().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getData();case 1:return n=e.v,e.n=2,Bt.getUserTags();case 2:t=e.v,r={exported_at:(new Date).toISOString(),user_email:s,links:n.links,collections:n.collections,tags:t,stats:u},a=new Blob([JSON.stringify(r,null,2)],{type:"application/json"}),o=URL.createObjectURL(a),(i=document.createElement("a")).href=o,i.download="nest-export-".concat((new Date).toISOString().split("T")[0],".json"),document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(o),x("Data exported successfully!"),setTimeout(function(){return x("")},3e3),e.n=4;break;case 3:e.p=3,e.v,x("Failed to export data");case 4:return e.a(2)}},e,null,[[0,3]])}));return function(){return e.apply(this,arguments)}}(),N=function(){var e=Qa(Va().m(function e(){var n;return Va().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.cleanupUnusedTags();case 1:n=e.v,x("Cleaned up ".concat(n," unused tags")),S(),setTimeout(function(){return x("")},3e3),e.n=3;break;case 2:e.p=2,e.v,x("Failed to cleanup tags");case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),z=function(){var e=Qa(Va().m(function e(){return Va().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,ct.auth.signOut();case 1:n(),e.n=3;break;case 2:e.p=2,e.v,x("Failed to logout");case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),T=[{id:"account",label:"Account",icon:da},{id:"preferences",label:"Preferences",icon:Aa},{id:"digest",label:"Daily Digest",icon:fa},{id:"data",label:"Data",icon:ha},{id:"sharing",label:"Sharing",icon:Zt},{id:"about",label:"About",icon:kr}];return m?(0,jt.jsx)("div",{className:"modal-overlay",children:(0,jt.jsxs)("div",{className:"modal-content settings-modal",children:[(0,jt.jsxs)("div",{className:"modal-header",children:[(0,jt.jsx)("h2",{className:"modal-title",children:"Settings"}),(0,jt.jsx)("button",{onClick:n,className:"modal-close-button",title:"Close",children:(0,jt.jsx)(h,{size:20})})]}),(0,jt.jsx)("div",{className:"settings-content",children:(0,jt.jsx)("div",{className:"loading-spinner",style:{margin:"auto"},children:"Loading settings..."})})]})}):(0,jt.jsx)("div",{className:"modal-overlay",children:(0,jt.jsx)("div",{className:"modal-content settings-modal",children:(0,jt.jsxs)("div",{className:"settings-content",children:[(0,jt.jsxs)("div",{className:"settings-tabs",children:[(0,jt.jsx)("div",{style:{padding:"var(--space-1)",marginBottom:"var(--space-4)"},children:(0,jt.jsx)("h2",{className:"modal-title",children:"Settings"})}),T.map(function(e){var n=e.icon;return(0,jt.jsxs)("button",{onClick:function(){return a(e.id)},className:"settings-tab ".concat(r===e.id?"active":""),children:[(0,jt.jsx)(n,{size:16}),(0,jt.jsx)("span",{children:e.label})]},e.id)}),(0,jt.jsx)("div",{style:{marginTop:"auto",paddingTop:"var(--space-4)"},children:(0,jt.jsx)("button",{onClick:n,className:"button",style:{width:"100%"},children:"Close"})})]}),(0,jt.jsxs)("div",{className:"settings-panel",children:["account"===r&&(0,jt.jsxs)("div",{className:"settings-section",children:[(0,jt.jsx)("h3",{children:"Account Information"}),(0,jt.jsxs)("div",{className:"setting-group",children:[(0,jt.jsx)("div",{className:"setting-item",children:(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)(fa,{size:16}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Email Address"}),(0,jt.jsx)("div",{className:"setting-description",children:s})]})]})}),(0,jt.jsx)("div",{className:"setting-item",children:(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)(pa,{size:16}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Account Created"}),(0,jt.jsx)("div",{className:"setting-description",children:"Connected via Supabase"})]})]})})]}),(0,jt.jsx)("h3",{children:"Statistics"}),(0,jt.jsxs)("div",{className:"stats-grid",children:[(0,jt.jsxs)("div",{className:"stat-card",children:[(0,jt.jsx)("div",{className:"stat-number",children:u.linkCount}),(0,jt.jsx)("div",{className:"stat-label",children:"Links Saved"})]}),(0,jt.jsxs)("div",{className:"stat-card",children:[(0,jt.jsx)("div",{className:"stat-number",children:u.collectionCount}),(0,jt.jsx)("div",{className:"stat-label",children:"Collections"})]}),(0,jt.jsxs)("div",{className:"stat-card",children:[(0,jt.jsx)("div",{className:"stat-number",children:u.tagCount}),(0,jt.jsx)("div",{className:"stat-label",children:"Tags Used"})]}),(0,jt.jsxs)("div",{className:"stat-card",children:[(0,jt.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,jt.jsx)("div",{className:"stat-label",children:"Total Views"})]})]}),(0,jt.jsx)("div",{className:"setting-actions",style:{marginTop:"var(--space-5)"},children:(0,jt.jsx)("button",{onClick:z,className:"button danger",children:"Logout"})})]}),"preferences"===r&&(0,jt.jsxs)("div",{className:"settings-section",children:[(0,jt.jsx)("h3",{children:"Preferences"}),(0,jt.jsxs)("div",{className:"setting-group",children:[(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsx)("div",{className:"setting-label",children:"Auto-summarize Links"})}),(0,jt.jsxs)("label",{className:"toggle-switch",children:[(0,jt.jsx)("input",{type:"checkbox",checked:f.autoSummarize,onChange:function(e){return j(Ha(Ha({},f),{},{autoSummarize:e.target.checked}))},disabled:y,"aria-label":"Auto-summarize Links"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsx)("div",{className:"setting-label",children:"Auto-tagging"})}),(0,jt.jsxs)("label",{className:"toggle-switch",children:[(0,jt.jsx)("input",{type:"checkbox",checked:f.autoTagging||!1,onChange:function(e){return j(Ha(Ha({},f),{},{autoTagging:e.target.checked}))},disabled:y,"aria-label":"Auto-tagging"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsx)("div",{className:"setting-label",children:"Auto-categorization"})}),(0,jt.jsxs)("label",{className:"toggle-switch",children:[(0,jt.jsx)("input",{type:"checkbox",checked:f.autoCategorization||!1,onChange:function(e){return j(Ha(Ha({},f),{},{autoCategorization:e.target.checked}))},disabled:y,"aria-label":"Auto-categorization"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"New Tab Home"}),(0,jt.jsx)("div",{className:"setting-description",children:"Replace new tab page with Nest home interface"})]})}),(0,jt.jsxs)("label",{className:"toggle-switch",children:[(0,jt.jsx)("input",{type:"checkbox",checked:f.newTabEnabled,onChange:function(e){return j(Ha(Ha({},f),{},{newTabEnabled:e.target.checked}))},disabled:y,"aria-label":"New Tab Home"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]})]}),(0,jt.jsx)("h3",{style:{marginTop:"var(--space-5)"},children:"Advanced"}),(0,jt.jsx)("div",{className:"setting-group",children:(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"OpenAI API Key"}),(0,jt.jsx)("div",{className:"setting-description",children:"Used for enhanced AI features."})]})}),(0,jt.jsx)("input",{type:"password",value:f.openaiApiKey||"",onChange:function(e){return j(Ha(Ha({},f),{},{openaiApiKey:e.target.value}))},placeholder:"sk-...",className:"form-control",style:{width:"200px"},disabled:y})]})})]}),"digest"===r&&(0,jt.jsx)("div",{className:"settings-section",children:(0,jt.jsx)(Ya,{})}),"data"===r&&(0,jt.jsxs)("div",{className:"settings-section",children:[(0,jt.jsx)("h3",{children:"Data Management"}),(0,jt.jsxs)("div",{className:"setting-group",children:[(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)(ga,{size:16}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Export Data"}),(0,jt.jsx)("div",{className:"setting-description",children:"Download all your data as a JSON file."})]})]}),(0,jt.jsx)("button",{onClick:_,className:"button",children:"Export"})]}),(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsxs)("div",{className:"setting-info",children:[(0,jt.jsx)(St,{size:16}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Cleanup Unused Tags"}),(0,jt.jsx)("div",{className:"setting-description",children:"Remove any tags that are not associated with any links."})]})]}),(0,jt.jsx)("button",{onClick:N,className:"button danger",children:"Cleanup"})]})]})]}),"sharing"===r&&(0,jt.jsxs)("div",{className:"settings-section",children:[(0,jt.jsx)("h3",{children:"Sharing & Privacy"}),(0,jt.jsx)("div",{className:"setting-group",children:(0,jt.jsxs)("div",{className:"setting-item",children:[(0,jt.jsx)("div",{className:"setting-info",children:(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"setting-label",children:"Default Collection Privacy"}),(0,jt.jsx)("div",{className:"setting-description",children:"Make new collections public by default"})]})}),(0,jt.jsxs)("label",{className:"toggle-switch",title:"Toggle default privacy",children:[(0,jt.jsx)("input",{type:"checkbox",checked:f.defaultPrivacy,onChange:function(e){return j(Ha(Ha({},f),{},{defaultPrivacy:e.target.checked}))},disabled:y,"aria-label":"Default collection privacy"}),(0,jt.jsx)("span",{className:"toggle-slider"})]})]})}),(0,jt.jsxs)("div",{className:"sharing-stats",style:{marginTop:"var(--space-5)"},children:[(0,jt.jsx)("h4",{children:"Sharing Analytics"}),(0,jt.jsxs)("div",{className:"stats-grid",children:[(0,jt.jsxs)("div",{className:"stat-card",children:[(0,jt.jsx)("div",{className:"stat-number",children:u.publicCollections}),(0,jt.jsx)("div",{className:"stat-label",children:"Public collections"})]}),(0,jt.jsxs)("div",{className:"stat-card",children:[(0,jt.jsx)("div",{className:"stat-number",children:u.totalViews}),(0,jt.jsx)("div",{className:"stat-label",children:"Total views"})]})]})]})]}),"about"===r&&(0,jt.jsxs)("div",{className:"settings-section",children:[(0,jt.jsx)("h3",{children:"About Nest"}),(0,jt.jsxs)("div",{className:"about-info",children:[(0,jt.jsxs)("div",{className:"app-info",children:[(0,jt.jsx)("div",{className:"app-logo",children:"N"}),(0,jt.jsxs)("div",{children:[(0,jt.jsx)("div",{className:"app-name",children:"Nest - Smart Bookmarks & Notes"}),(0,jt.jsx)("div",{className:"app-version",children:"Version 1.0.0"})]})]}),(0,jt.jsx)("p",{className:"app-description",children:"Nest is a powerful browser extension that helps you save, organize, and share your bookmarks with AI-powered summaries, flexible tagging, and beautiful collections."})]}),(0,jt.jsxs)("div",{className:"support-links",children:[(0,jt.jsx)("h4",{children:"Support & Resources"}),(0,jt.jsxs)("div",{className:"link-grid",children:[(0,jt.jsxs)("a",{href:"https://github.com",target:"_blank",rel:"noopener",className:"support-link",children:[(0,jt.jsx)(xt,{size:16}),(0,jt.jsx)("span",{children:"Documentation"})]}),(0,jt.jsxs)("a",{href:"https://github.com/issues",target:"_blank",rel:"noopener",className:"support-link",children:[(0,jt.jsx)(ma,{size:16}),(0,jt.jsx)("span",{children:"Report Issues"})]}),(0,jt.jsxs)("a",{href:"mailto:support@nest.dev",className:"support-link",children:[(0,jt.jsx)(fa,{size:16}),(0,jt.jsx)("span",{children:"Contact Support"})]})]})]})]}),B&&(0,jt.jsx)("div",{className:"settings-message ".concat(B.includes("Failed")?"error":"success"),children:B})]})]})})})};var no=a(72),to=a.n(no),ro=a(206),ao=a.n(ro),oo=a(659),io=a.n(oo),so=a(56),lo=a.n(so),co=a(159),uo=a.n(co),Ao=a(113),fo=a.n(Ao),ho=a(182),po={};function go(e){return go="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},go(e)}function mo(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,r)}return t}function vo(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?mo(Object(t),!0).forEach(function(n){bo(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):mo(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function bo(e,n,t){return(n=function(e){var n=function(e){if("object"!=go(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var t=n.call(e,"string");if("object"!=go(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==go(n)?n:n+""}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function yo(){var e,n,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",a=t.toStringTag||"@@toStringTag";function o(t,r,a,o){var l=r&&r.prototype instanceof s?r:s,c=Object.create(l.prototype);return Co(c,"_invoke",function(t,r,a){var o,s,l,c=0,u=a||[],d=!1,A={p:0,n:0,v:e,a:f,f:f.bind(e,4),d:function(n,t){return o=n,s=0,l=e,A.n=t,i}};function f(t,r){for(s=t,l=r,n=0;!d&&c&&!a&&n<u.length;n++){var a,o=u[n],f=A.p,h=o[2];t>3?(a=h===r)&&(l=o[(s=o[4])?5:(s=3,3)],o[4]=o[5]=e):o[0]<=f&&((a=t<2&&f<o[1])?(s=0,A.v=r,A.n=o[1]):f<h&&(a=t<3||o[0]>r||r>h)&&(o[4]=t,o[5]=r,A.n=h,s=0))}if(a||t>1)return i;throw d=!0,r}return function(a,u,h){if(c>1)throw TypeError("Generator is already running");for(d&&1===u&&f(u,h),s=u,l=h;(n=s<2?e:l)||!d;){o||(s?s<3?(s>1&&(A.n=-1),f(s,l)):A.n=l:A.v=l);try{if(c=2,o){if(s||(a="next"),n=o[a]){if(!(n=n.call(o,l)))throw TypeError("iterator result is not an object");if(!n.done)return n;l=n.value,s<2&&(s=0)}else 1===s&&(n=o.return)&&n.call(o),s<2&&(l=TypeError("The iterator does not provide a '"+a+"' method"),s=1);o=e}else if((n=(d=A.n<0)?l:t.call(r,A))!==i)break}catch(n){o=e,s=1,l=n}finally{c=1}}return{value:n,done:d}}}(t,a,o),!0),c}var i={};function s(){}function l(){}function c(){}n=Object.getPrototypeOf;var u=[][r]?n(n([][r]())):(Co(n={},r,function(){return this}),n),d=c.prototype=s.prototype=Object.create(u);function A(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,c):(e.__proto__=c,Co(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return l.prototype=c,Co(d,"constructor",c),Co(c,"constructor",l),l.displayName="GeneratorFunction",Co(c,a,"GeneratorFunction"),Co(d),Co(d,a,"Generator"),Co(d,r,function(){return this}),Co(d,"toString",function(){return"[object Generator]"}),(yo=function(){return{w:o,m:A}})()}function Co(e,n,t,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}Co=function(e,n,t,r){if(n)a?a(e,n,{value:t,enumerable:!r,configurable:!r,writable:!r}):e[n]=t;else{var o=function(n,t){Co(e,n,function(e){return this._invoke(n,t,e)})};o("next",0),o("throw",1),o("return",2)}},Co(e,n,t,r)}function Eo(e,n,t,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void t(e)}s.done?n(l):Promise.resolve(l).then(r,a)}function Bo(e){return function(){var n=this,t=arguments;return new Promise(function(r,a){var o=e.apply(n,t);function i(e){Eo(o,r,a,i,s,"next",e)}function s(e){Eo(o,r,a,i,s,"throw",e)}i(void 0)})}}function xo(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o,i,s=[],l=!0,c=!1;try{if(o=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==n);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(e,n)||wo(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function wo(e,n){if(e){if("string"==typeof e)return ko(e,n);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ko(e,n):void 0}}function ko(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=Array(n);t<n;t++)r[t]=e[t];return r}po.styleTagTransform=fo(),po.setAttributes=lo(),po.insert=io().bind(null,"head"),po.domAPI=ao(),po.insertStyleElement=uo(),to()(ho.A,po),ho.A&&ho.A.locals&&ho.A.locals;const So=function(){var e=xo((0,o.useState)({links:[],collections:[],categories:[],settings:{defaultCategory:"general",autoSummarize:!0}}),2),n=e[0],t=e[1],r=xo((0,o.useState)(""),2),a=r[0],i=r[1],s=xo((0,o.useState)([]),2),l=s[0],w=s[1],k=xo((0,o.useState)(!1),2),S=k[0],j=k[1],_=xo((0,o.useState)(!1),2),N=_[0],z=_[1],T=xo((0,o.useState)(null),2),I=T[0],O=T[1],P=xo((0,o.useState)([]),2),D=P[0],L=P[1],R=xo((0,o.useState)([]),2),U=R[0],M=R[1],F=xo((0,o.useState)(!1),2),$=F[0],Y=F[1],q=xo((0,o.useState)({inbox:!0,smartCollections:!0,holdingArea:!0,collections:!0}),2),W=q[0],H=q[1],G=xo((0,o.useState)(null),2),V=G[0],K=G[1],Z=xo((0,o.useState)(!1),2),Q=Z[0],J=Z[1],X=xo((0,o.useState)(!1),2),ee=X[0],ne=X[1],te=xo((0,o.useState)(!1),2),re=te[0],ae=te[1],oe=xo((0,o.useState)(!0),2),ie=oe[0],se=oe[1],le=xo((0,o.useState)(null),2),ce=le[0],ue=le[1],de=xo((0,o.useState)(""),2),Ae=de[0],fe=de[1],he=xo((0,o.useState)(!1),2),pe=he[0],ge=he[1],me=xo((0,o.useState)(""),2),ve=me[0],be=me[1],ye=xo((0,o.useState)([]),2),Ce=ye[0],Ee=ye[1],Be=xo((0,o.useState)([]),2),xe=Be[0],we=Be[1],ke=xo((0,o.useState)(!1),2),Se=ke[0],je=ke[1],_e=xo((0,o.useState)(!1),2),Ne=_e[0],ze=_e[1],Te=xo((0,o.useState)(!1),2),Ie=Te[0],Oe=Te[1],Pe=xo((0,o.useState)(!1),2),De=Pe[0],Le=Pe[1],Re=xo((0,o.useState)(null),2),Ue=Re[0],Me=Re[1];(0,o.useEffect)(function(){ct.auth.getSession().then(function(e){var n=e.data.session;ue(n),n&&(qe(),He())});var e=ct.auth.onAuthStateChange(function(e,n){console.log("Auth state changed:",e,n),ue(n),n&&(qe(),He())}),n=e.data.subscription,t=function(e,n,t){"refreshSidebar"===e.action&&(console.log("Sidebar: Received refresh request"),qe(),We(),He(),t({success:!0}))};return chrome.runtime.onMessage.addListener(t),function(){n.unsubscribe(),chrome.runtime.onMessage.removeListener(t)}},[]),(0,o.useEffect)(function(){qe(),Fe()},[]);var Fe=function(){var e=Bo(yo().m(function e(){var n,t;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.storage.local.get("nest_search_query");case 1:if(!(n=e.v).nest_search_query){e.n=2;break}return i(n.nest_search_query),fn(n.nest_search_query),e.n=2,chrome.storage.local.remove("nest_search_query");case 2:e.n=4;break;case 3:e.p=3,t=e.v,console.error("Failed to check for new tab search:",t);case 4:return e.a(2)}},e,null,[[0,3]])}));return function(){return e.apply(this,arguments)}}();(0,o.useEffect)(function(){var e=function(e){(e.metaKey||e.ctrlKey)&&"k"===e.key&&(e.preventDefault(),ze(!0))};return document.addEventListener("keydown",e),function(){return document.removeEventListener("keydown",e)}},[]);var $e,Ye,qe=function(){var e=Bo(yo().m(function e(){var n,r;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.getData();case 1:return n=e.v,t(n),e.n=2,We();case 2:e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to load data:",r);case 4:return e.p=4,se(!1),e.f(4);case 5:return e.a(2)}},e,null,[[0,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),We=function(){var e=Bo(yo().m(function e(){var n,t;return yo().w(function(e){for(;;)switch(e.n){case 0:return je(!0),e.p=1,e.n=2,Bt.getInboxLinks();case 2:n=e.v,Ee(n),e.n=4;break;case 3:e.p=3,t=e.v,console.error("Failed to load inbox links:",t);case 4:return e.p=4,je(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),He=function(){var e=Bo(yo().m(function e(){var n,t;return yo().w(function(e){for(;;)switch(e.n){case 0:return Y(!0),e.p=1,e.n=2,Bt.getUserTags();case 2:n=e.v,M(n),e.n=4;break;case 3:e.p=3,t=e.v,console.error("Failed to load user tags:",t);case 4:return e.p=4,Y(!1),e.f(4);case 5:return e.a(2)}},e,null,[[1,3,4,5]])}));return function(){return e.apply(this,arguments)}}(),Ge=function(){var e=Bo(yo().m(function e(n){var t,r;return yo().w(function(e){for(;;)switch(e.n){case 0:if(n!==I){e.n=1;break}return O(null),L([]),e.a(2);case 1:if(O(n),!n){e.n=6;break}return e.p=2,e.n=3,Bt.getLinksByTag(n);case 3:t=e.v,L(t),e.n=5;break;case 4:e.p=4,r=e.v,console.error("Failed to load links by tag:",r),L([]);case 5:e.n=7;break;case 6:L([]);case 7:n&&N&&hn();case 8:return e.a(2)}},e,null,[[2,4]])}));return function(n){return e.apply(this,arguments)}}(),Ve=function(){He(),I&&Ge(I)},Ke=function(e){H(function(n){return vo(vo({},n),{},bo({},e,!n[e]))})},Ze=function(){var e=Bo(yo().m(function e(){var n,t;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.runtime.sendMessage({action:"getPageInfo"});case 1:if(!(n=e.v).success){e.n=2;break}Me(n.pageInfo),Le(!0),e.n=3;break;case 2:return e.n=3,Qe();case 3:e.n=5;break;case 4:return e.p=4,t=e.v,console.error("Failed to get page info:",t),e.n=5,Qe();case 5:return e.a(2)}},e,null,[[0,4]])}));return function(){return e.apply(this,arguments)}}(),Qe=function(){var e=Bo(yo().m(function e(){var n;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!e.v[0]){e.n=4;break}return e.n=2,chrome.runtime.sendMessage({action:"saveCurrentPage"});case 2:return e.n=3,qe();case 3:return e.n=4,He();case 4:e.n=6;break;case 5:e.p=5,n=e.v,console.error("Failed to save page:",n);case 6:return e.a(2)}},e,null,[[0,5]])}));return function(){return e.apply(this,arguments)}}(),Je=function(){var e=Bo(yo().m(function e(n,t){var r;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.updateLink(n,t);case 1:if(void 0===t.collectionId){e.n=2;break}return e.n=2,Bt.logActivity("organize",n,t.collectionId,{action:"move_to_collection"});case 2:return e.n=3,qe();case 3:e.n=5;break;case 4:e.p=4,r=e.v,console.error("Failed to update link:",r);case 5:return e.a(2)}},e,null,[[0,4]])}));return function(n,t){return e.apply(this,arguments)}}(),Xe=function(){var e=Bo(yo().m(function e(n){var t;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.deleteLink(n);case 1:return e.n=2,qe();case 2:return e.n=3,He();case 3:I&&Ge(I),e.n=5;break;case 4:e.p=4,t=e.v,console.error("Failed to delete link:",t);case 5:return e.a(2)}},e,null,[[0,4]])}));return function(n){return e.apply(this,arguments)}}(),en=function(){var e=Bo(yo().m(function e(n,t){var r;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.updateLink(n,{collectionId:t});case 1:return e.n=2,qe();case 2:e.n=4;break;case 3:e.p=3,r=e.v,console.error("Failed to move link:",r);case 4:return e.a(2)}},e,null,[[0,3]])}));return function(n,t){return e.apply(this,arguments)}}(),nn=function(e){K(e),J(!0)},tn=function(){var e=Bo(yo().m(function e(n){return yo().w(function(e){for(;;)switch(e.n){case 0:if(!V){e.n=1;break}return e.n=1,Je(V.id,{userNote:n});case 1:J(!1),K(null);case 2:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}(),rn=function(){var e=Bo(yo().m(function e(n,t){var r,a;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,r={id:Date.now().toString(),name:n,description:t,createdAt:new Date,updatedAt:new Date},e.n=1,Bt.addCollection(r);case 1:return e.n=2,qe();case 2:e.n=4;break;case 3:e.p=3,a=e.v,console.error("Failed to create collection:",a);case 4:ne(!1);case 5:return e.a(2)}},e,null,[[0,3]])}));return function(n,t){return e.apply(this,arguments)}}(),an=function(){var e=Bo(yo().m(function e(n,t){var r;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,Bt.moveFromInbox(n,t);case 1:return e.n=2,Bt.logActivity("organize",n,t,{action:"move_from_inbox"});case 2:return e.n=3,We();case 3:return e.n=4,qe();case 4:we(function(e){return e.filter(function(e){return e!==n})}),e.n=6;break;case 5:e.p=5,r=e.v,console.error("Failed to move link from inbox:",r);case 6:return e.a(2)}},e,null,[[0,5]])}));return function(n,t){return e.apply(this,arguments)}}(),on=function(e){we(function(n){return n.includes(e)?n.filter(function(n){return n!==e}):[].concat(function(e){if(Array.isArray(e))return ko(e)}(t=n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||wo(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[e]);var t})},sn=function(){var e=Bo(yo().m(function e(n){var t;return yo().w(function(e){for(;;)switch(e.n){case 0:if(0!==xe.length){e.n=1;break}return e.a(2);case 1:return e.p=1,e.n=2,Bt.bulkMoveFromInbox(xe,n);case 2:return e.n=3,We();case 3:return e.n=4,qe();case 4:we([]),e.n=6;break;case 5:e.p=5,t=e.v,console.error("Failed to bulk move links from inbox:",t);case 6:return e.a(2)}},e,null,[[1,5]])}));return function(n){return e.apply(this,arguments)}}(),ln=function(){var e=Bo(yo().m(function e(n,t,r){var a;return yo().w(function(e){for(;;)switch(e.n){case 0:return a=n.map(function(){var e=Bo(yo().m(function e(n){var a;return yo().w(function(e){for(;;)switch(e.n){case 0:return a={url:n.url,title:n.title,favicon:n.favicon||"https://www.google.com/s2/favicons?domain=".concat(n.domain,"&sz=32"),userNote:"",aiSummary:"",category:"general",domain:n.domain,isInInbox:r||!1,collectionId:r?void 0:t},e.n=1,Bt.addLink(a);case 1:return e.a(2,e.v)}},e)}));return function(n){return e.apply(this,arguments)}}()),e.n=1,Promise.all(a);case 1:return e.n=2,qe();case 2:return e.n=3,We();case 3:chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Tabs Saved to Nest",message:"Saved ".concat(n.length," tab(s) ").concat(r?"to inbox":t?"to collection":"to holding area")});case 4:return e.a(2)}},e)}));return function(n,t,r){return e.apply(this,arguments)}}(),cn=function(){var e=Bo(yo().m(function e(n){var t,r,a;return yo().w(function(e){for(;;)switch(e.n){case 0:return n.preventDefault(),ge(!0),be(""),t=chrome.runtime.getURL("auth.html"),console.log("Redirecting to:",t),e.n=1,ct.auth.signInWithOtp({email:Ae,options:{emailRedirectTo:t}});case 1:r=e.v,a=r.error,be(a?a.message:"Check your email for the login link!"),ge(!1);case 2:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}(),un=function(){var e=Bo(yo().m(function e(){return yo().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,ct.auth.signOut();case 1:return e.a(2)}},e)}));return function(){return e.apply(this,arguments)}}(),dn=function(){var e=Bo(yo().m(function e(n,t){var r,a;return yo().w(function(e){for(;;)switch(e.n){case 0:return e.p=0,e.n=1,chrome.runtime.sendMessage({action:"saveWithContext",reason:n,tags:t});case 1:if(!(r=e.v).success){e.n=4;break}return e.n=2,qe();case 2:return e.n=3,He();case 3:Le(!1),Me(null),e.n=5;break;case 4:console.error("Failed to save with context:",r.error);case 5:e.n=7;break;case 6:e.p=6,a=e.v,console.error("Failed to save with context:",a);case 7:return e.a(2)}},e,null,[[0,6]])}));return function(n,t){return e.apply(this,arguments)}}(),An=function(){var e=Bo(yo().m(function e(){return yo().w(function(e){for(;;)switch(e.n){case 0:return Le(!1),Me(null),e.n=1,Qe();case 1:return e.a(2)}},e)}));return function(){return e.apply(this,arguments)}}(),fn=(0,o.useCallback)(($e=function(){var e=Bo(yo().m(function e(n){var t,r;return yo().w(function(e){for(;;)switch(e.n){case 0:if(n.trim()){e.n=1;break}return w([]),z(!1),j(!1),e.a(2);case 1:return j(!0),e.p=2,e.n=3,Bt.searchLinks(n);case 3:t=e.v,w(t),z(!0),I&&(O(null),L([])),e.n=5;break;case 4:e.p=4,r=e.v,console.error("Search failed:",r),w([]);case 5:return e.p=5,j(!1),e.f(5);case 6:return e.a(2)}},e,null,[[2,4,5,6]])}));return function(n){return e.apply(this,arguments)}}(),function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];clearTimeout(Ye),Ye=setTimeout(function(){return $e.apply(void 0,n)},300)}),[I]),hn=function(){i(""),w([]),z(!1),j(!1)},pn=function(){hn(),O(null),L([])},gn=N||I?[]:n.links.filter(function(e){return!e.isInInbox}),mn=gn.filter(function(e){return!e.collectionId});return ce?ie?(0,jt.jsx)("div",{className:"sidepanel loading",children:(0,jt.jsx)("div",{className:"loading-spinner",children:"Loading..."})}):(0,jt.jsxs)("div",{className:"sidepanel",children:[(0,jt.jsxs)("div",{className:"header",children:[(0,jt.jsxs)("div",{className:"header-title",children:[(0,jt.jsx)(c,{className:"header-icon"}),(0,jt.jsx)("h1",{children:"Nest"})]}),(0,jt.jsxs)("div",{className:"header-actions",children:[(0,jt.jsx)("button",{onClick:function(){return Oe(!0)},className:"tab-sync-button",title:"Tab Sync Mode",children:(0,jt.jsx)(u,{size:18})}),(0,jt.jsx)("button",{onClick:Ze,className:"save-button",title:"Save current page",children:(0,jt.jsx)(d,{size:18})}),(0,jt.jsx)("button",{onClick:un,className:"logout-button",title:"Logout",children:(0,jt.jsx)(A,{size:18})})]})]}),(0,jt.jsxs)("div",{className:"search-container",children:[(0,jt.jsx)(f,{className:"search-icon",size:16}),(0,jt.jsx)("input",{type:"text",placeholder:"Search your links... (⌘K for power mode)",value:a,onChange:function(e){var n=e.target.value;i(n),fn(n)},className:"search-input",onFocus:function(){}}),a&&(0,jt.jsx)("button",{onClick:hn,className:"search-clear",title:"Clear search",children:(0,jt.jsx)(h,{size:16})}),S&&(0,jt.jsx)("div",{className:"search-spinner",children:"⟳"}),!a&&!S&&(0,jt.jsxs)("button",{onClick:function(){return ze(!0)},className:"command-hint-button",title:"Open command palette (⌘K)",children:[(0,jt.jsx)(p,{size:14}),(0,jt.jsx)("span",{children:"Or press ⌘K for quick access"})]})]}),U.length>0&&(0,jt.jsx)(ua,{tags:U,selectedTag:I,onTagSelect:Ge,loading:$}),(0,jt.jsx)("div",{className:"content",children:N?(0,jt.jsxs)("div",{className:"search-results",children:[(0,jt.jsxs)("div",{className:"search-results-header",children:[(0,jt.jsxs)("h3",{children:["Search Results (",l.length,")"]}),(0,jt.jsx)("button",{onClick:pn,className:"clear-search-btn",children:"Show All Links"})]}),0!==l.length||S?l.map(function(e){return(0,jt.jsx)(Br,{link:e,collections:n.collections,onUpdate:Je,onDelete:Xe,onMoveToCollection:en,onAddNote:nn,onTagsUpdated:Ve},e.id)}):(0,jt.jsx)("div",{className:"no-results",children:(0,jt.jsxs)("p",{children:['No links found for "',a,'"']})})]}):I?(0,jt.jsxs)("div",{className:"tag-results",children:[(0,jt.jsxs)("div",{className:"tag-results-header",children:[(0,jt.jsxs)("h3",{children:[(0,jt.jsx)(g,{size:16}),'Tagged with "',I,'" (',D.length,")"]}),(0,jt.jsx)("button",{onClick:pn,className:"clear-search-btn",children:"Show All Links"})]}),0===D.length?(0,jt.jsx)("div",{className:"no-results",children:(0,jt.jsxs)("p",{children:['No links found with tag "',I,'"']})}):D.map(function(e){return(0,jt.jsx)(Gt,{link:e,collections:n.collections,onUpdate:Je,onDelete:Xe,onMoveToCollection:en,onAddNote:nn,onTagsUpdated:Ve},e.id)})]}):(0,jt.jsxs)(jt.Fragment,{children:[(0,jt.jsxs)("div",{className:"section inbox-section",children:[(0,jt.jsxs)("div",{className:"inbox-section-header",children:[(0,jt.jsxs)("div",{className:"inbox-section-title",children:[(0,jt.jsxs)("button",{onClick:function(){return Ke("inbox")},className:"section-header",style:{padding:0,background:"none",border:"none"},children:[W.inbox?(0,jt.jsx)(m,{size:16}):(0,jt.jsx)(v,{size:16}),(0,jt.jsx)(b,{size:16}),(0,jt.jsx)("span",{children:"Inbox"})]}),(0,jt.jsx)("span",{className:"inbox-count",children:Ce.length})]}),Ce.length>0&&(0,jt.jsxs)("div",{className:"inbox-actions",children:[(0,jt.jsxs)("button",{onClick:function(){xe.length===Ce.length?we([]):we(Ce.map(function(e){return e.id}))},className:"inbox-action-button",title:xe.length===Ce.length?"Deselect all":"Select all",children:[(0,jt.jsx)(y,{size:14}),xe.length===Ce.length?"Deselect All":"Select All"]}),xe.length>0&&(0,jt.jsxs)(jt.Fragment,{children:[(0,jt.jsxs)("button",{onClick:function(){return sn()},className:"inbox-action-button",title:"Move selected to holding area",children:[(0,jt.jsx)(C,{size:14}),"Move to Holding (",xe.length,")"]}),(0,jt.jsxs)("select",{onChange:function(e){e.target.value&&(sn(e.target.value),e.target.value="")},className:"inbox-action-button",style:{padding:"6px 8px"},title:"Move selected links to collection","aria-label":"Move selected links to collection",children:[(0,jt.jsx)("option",{value:"",children:"Move to Collection..."}),n.collections.map(function(e){return(0,jt.jsx)("option",{value:e.id,children:e.name},e.id)})]})]})]})]}),W.inbox&&(0,jt.jsx)("div",{className:"section-content",children:Se?(0,jt.jsx)("div",{className:"loading-spinner",children:"Loading inbox..."}):0===Ce.length?(0,jt.jsxs)("div",{className:"inbox-empty",children:[(0,jt.jsx)(b,{className:"inbox-empty-icon"}),(0,jt.jsx)("h3",{children:"Inbox is empty"}),(0,jt.jsx)("p",{children:"New saves will appear here for quick organization"})]}):Ce.map(function(e){return(0,jt.jsx)(Dr,{link:e,collections:n.collections,onMoveFromInbox:an,onDelete:Xe,onUpdate:Je,onAddNote:nn,onTagsUpdated:Ve,isSelected:xe.includes(e.id),onSelect:on},e.id)})})]}),n.settings.enableSmartCollections&&n.smartCollections&&n.smartCollections.length>0&&(0,jt.jsxs)("div",{className:"section smart-collections-section",children:[(0,jt.jsxs)("button",{onClick:function(){return Ke("smartCollections")},className:"section-header",children:[W.smartCollections?(0,jt.jsx)(m,{size:16}):(0,jt.jsx)(v,{size:16}),(0,jt.jsx)(E,{size:16}),(0,jt.jsx)("span",{children:"Smart Collections"}),(0,jt.jsx)("span",{className:"count",children:n.smartCollections.length})]}),W.smartCollections&&(0,jt.jsx)("div",{className:"section-content",children:n.smartCollections.map(function(e){return(0,jt.jsx)(Er,{smartCollection:e,collections:n.collections,onUpdateLink:Je,onDeleteLink:Xe,onAddNote:nn,onTagsUpdated:Ve},e.id)})})]}),(0,jt.jsxs)("div",{className:"section",children:[(0,jt.jsxs)("button",{onClick:function(){return Ke("holdingArea")},className:"section-header",children:[W.holdingArea?(0,jt.jsx)(m,{size:16}):(0,jt.jsx)(v,{size:16}),(0,jt.jsx)("span",{children:"Holding Area"}),(0,jt.jsx)("span",{className:"count",children:mn.length})]}),W.holdingArea&&(0,jt.jsx)("div",{className:"section-content",children:0===mn.length?(0,jt.jsxs)("div",{className:"empty-state",children:[(0,jt.jsx)("p",{children:"No links saved yet"}),(0,jt.jsx)("button",{onClick:Ze,className:"empty-action",children:"Save current page"})]}):mn.map(function(e){return(0,jt.jsx)(Gt,{link:e,collections:n.collections,onUpdate:Je,onDelete:Xe,onMoveToCollection:en,onAddNote:nn,onTagsUpdated:Ve},e.id)})})]}),(0,jt.jsxs)("div",{className:"section",children:[(0,jt.jsxs)("button",{onClick:function(){return Ke("collections")},className:"section-header",children:[W.collections?(0,jt.jsx)(m,{size:16}):(0,jt.jsx)(v,{size:16}),(0,jt.jsx)("span",{children:"Collections"}),(0,jt.jsx)("span",{className:"count",children:n.collections.length}),(0,jt.jsx)("button",{onClick:function(e){e.stopPropagation(),ne(!0)},className:"add-collection-button",title:"Create new collection",children:(0,jt.jsx)(B,{size:14})})]}),W.collections&&(0,jt.jsx)("div",{className:"section-content",children:0===n.collections.length?(0,jt.jsxs)("div",{className:"empty-state",children:[(0,jt.jsx)("p",{children:"No collections yet"}),(0,jt.jsx)("button",{onClick:function(){return ne(!0)},className:"empty-action",children:"Create collection"})]}):n.collections.map(function(e){var n,t=(n=e.id,gn.filter(function(e){return e.collectionId===n}));return(0,jt.jsx)(hr,{collection:e,links:t,onUpdateLink:Je,onDeleteLink:Xe,onAddNote:nn,onTagsUpdated:Ve,onUpdate:qe},e.id)})})]})]})}),(0,jt.jsxs)("div",{className:"footer",children:[(0,jt.jsx)("button",{onClick:function(){return ae(!0)},className:"footer-button",title:"Settings",children:(0,jt.jsx)(x,{size:16})}),(0,jt.jsxs)("span",{className:"footer-text",children:[n.links.length," links • ",U.length," tags"]})]}),Q&&V&&(0,jt.jsx)(Qr,{link:V,onSave:tn,onClose:function(){J(!1),K(null)}}),ee&&(0,jt.jsx)(ea,{onSave:rn,onClose:function(){return ne(!1)}}),re&&(0,jt.jsx)(eo,{onClose:function(){return ae(!1)}}),(0,jt.jsx)(Ur,{isOpen:Ne,onClose:function(){return ze(!1)},links:n.links,collections:n.collections,onOpenLink:function(e){window.open(e,"_blank")},onAddToCollection:en,onCreateCollection:function(){ne(!0)},onSaveCurrentPage:Ze,onAddNote:nn,onOpenTabSync:function(){return Oe(!0)}}),(0,jt.jsx)(Kr,{isOpen:Ie,onClose:function(){return Oe(!1)},collections:n.collections,onSaveTabs:ln}),(0,jt.jsx)(ca,{isOpen:De,onSave:dn,onSkip:An,onClose:function(){Le(!1),Me(null)},linkTitle:null==Ue?void 0:Ue.title,linkUrl:null==Ue?void 0:Ue.url})]}):(0,jt.jsxs)("div",{className:"sidepanel auth-container",children:[(0,jt.jsx)("div",{className:"header",children:(0,jt.jsxs)("div",{className:"header-title",children:[(0,jt.jsx)(c,{className:"header-icon"}),(0,jt.jsx)("h1",{children:"Nest"})]})}),(0,jt.jsxs)("div",{className:"auth-form",children:[(0,jt.jsx)("h2",{children:"Sign In"}),(0,jt.jsx)("p",{children:"Enter your email to receive a magic login link."}),(0,jt.jsxs)("form",{onSubmit:cn,children:[(0,jt.jsx)("input",{type:"email",placeholder:"Your email",value:Ae,onChange:function(e){return fe(e.target.value)},className:"auth-input"}),(0,jt.jsx)("button",{type:"submit",className:"auth-button",disabled:pe,children:pe?"Sending...":"Send Magic Link"})]}),ve&&(0,jt.jsx)("p",{className:"auth-message",children:ve})]})]})};var jo=document.getElementById("root");(0,i.H)(jo).render((0,jt.jsx)(So,{}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,