/*! For license information please see background.js.LICENSE.txt */
(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function n(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?e(Object(r),!0).forEach(function(e){u(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):e(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function r(){var t,e,n="function"==typeof Symbol?Symbol:{},i=n.iterator||"@@iterator",a=n.toStringTag||"@@toStringTag";function c(n,r,i,a){var c=r&&r.prototype instanceof s?r:s,f=Object.create(c.prototype);return o(f,"_invoke",function(n,r,o){var i,a,c,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:v,f:v.bind(t,4),d:function(e,n){return i=e,a=0,c=t,p.n=n,u}};function v(n,r){for(a=n,c=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],v=p.p,y=i[2];n>3?(o=y===r)&&(c=i[(a=i[4])?5:(a=3,3)],i[4]=i[5]=t):i[0]<=v&&((o=n<2&&v<i[1])?(a=0,p.v=r,p.n=i[1]):v<y&&(o=n<3||i[0]>r||r>y)&&(i[4]=n,i[5]=r,p.n=y,a=0))}if(o||n>1)return u;throw l=!0,r}return function(o,f,y){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&v(f,y),a=f,c=y;(e=a<2?t:c)||!l;){i||(a?a<3?(a>1&&(p.n=-1),v(a,c)):p.n=c:p.v=c);try{if(s=2,i){if(a||(o="next"),e=i[o]){if(!(e=e.call(i,c)))throw TypeError("iterator result is not an object");if(!e.done)return e;c=e.value,a<2&&(a=0)}else 1===a&&(e=i.return)&&e.call(i),a<2&&(c=TypeError("The iterator does not provide a '"+o+"' method"),a=1);i=t}else if((e=(l=p.n<0)?c:n.call(r,p))!==u)break}catch(e){i=t,a=1,c=e}finally{s=1}}return{value:e,done:l}}}(n,i,a),!0),f}var u={};function s(){}function f(){}function l(){}e=Object.getPrototypeOf;var p=[][i]?e(e([][i]())):(o(e={},i,function(){return this}),e),v=l.prototype=s.prototype=Object.create(p);function y(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,l):(t.__proto__=l,o(t,a,"GeneratorFunction")),t.prototype=Object.create(v),t}return f.prototype=l,o(v,"constructor",l),o(l,"constructor",f),f.displayName="GeneratorFunction",o(l,a,"GeneratorFunction"),o(v),o(v,a,"Generator"),o(v,i,function(){return this}),o(v,"toString",function(){return"[object Generator]"}),(r=function(){return{w:c,m:y}})()}function o(t,e,n,r){var i=Object.defineProperty;try{i({},"",{})}catch(t){i=0}o=function(t,e,n,r){if(e)i?i(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n;else{var a=function(e,n){o(t,e,function(t){return this._invoke(e,n,t)})};a("next",0),a("throw",1),a("return",2)}},o(t,e,n,r)}function i(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function a(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var a=t.apply(e,n);function c(t){i(a,r,o,c,u,"next",t)}function u(t){i(a,r,o,c,u,"throw",t)}c(void 0)})}}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,s(r.key),r)}}function u(t,e,n){return(e=s(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var f="nestData",l=new(function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),u(this,"db",null)},e=[{key:"init",value:(d=a(r().m(function t(){var e=this;return r().w(function(t){for(;;)if(0===t.n)return t.a(2,new Promise(function(t,n){var r=indexedDB.open("NestDB",1);r.onerror=function(){return n(r.error)},r.onsuccess=function(){e.db=r.result,t()},r.onupgradeneeded=function(t){var e=t.target.result;e.objectStoreNames.contains(f)||e.createObjectStore(f)}}))},t)})),function(){return d.apply(this,arguments)})},{key:"getData",value:(h=a(r().m(function t(){var e=this;return r().w(function(t){for(;;)switch(t.n){case 0:if(this.db){t.n=1;break}return t.n=1,this.init();case 1:return t.a(2,new Promise(function(t,n){var r=e.db.transaction([f],"readonly").objectStore(f).get("data");r.onerror=function(){return n(r.error)},r.onsuccess=function(){t(r.result||{links:[],collections:[],categories:[{id:"general",name:"General",color:"#6b7280",isDefault:!0},{id:"work",name:"Work",color:"#3b82f6"},{id:"personal",name:"Personal",color:"#10b981"},{id:"learning",name:"Learning",color:"#f59e0b"}],settings:{defaultCategory:"general",autoSummarize:!0}})}}))}},t,this)})),function(){return h.apply(this,arguments)})},{key:"saveData",value:(y=a(r().m(function t(e){var n=this;return r().w(function(t){for(;;)switch(t.n){case 0:if(this.db){t.n=1;break}return t.n=1,this.init();case 1:return t.a(2,new Promise(function(t,r){var o=n.db.transaction([f],"readwrite").objectStore(f).put(e,"data");o.onerror=function(){return r(o.error)},o.onsuccess=function(){return t()}}))}},t,this)})),function(t){return y.apply(this,arguments)})},{key:"addLink",value:(v=a(r().m(function t(e){var n;return r().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,this.getData();case 1:return(n=t.v).links.push(e),t.n=2,this.saveData(n);case 2:return t.a(2)}},t,this)})),function(t){return v.apply(this,arguments)})},{key:"updateLink",value:(p=a(r().m(function t(e,o){var i,a;return r().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,this.getData();case 1:if(i=t.v,-1===(a=i.links.findIndex(function(t){return t.id===e}))){t.n=2;break}return i.links[a]=n(n(n({},i.links[a]),o),{},{updatedAt:new Date}),t.n=2,this.saveData(i);case 2:return t.a(2)}},t,this)})),function(t,e){return p.apply(this,arguments)})},{key:"deleteLink",value:(l=a(r().m(function t(e){var n;return r().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,this.getData();case 1:return(n=t.v).links=n.links.filter(function(t){return t.id!==e}),t.n=2,this.saveData(n);case 2:return t.a(2)}},t,this)})),function(t){return l.apply(this,arguments)})},{key:"addCollection",value:(s=a(r().m(function t(e){var n;return r().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,this.getData();case 1:return(n=t.v).collections.push(e),t.n=2,this.saveData(n);case 2:return t.a(2)}},t,this)})),function(t){return s.apply(this,arguments)})},{key:"updateCollection",value:(i=a(r().m(function t(e,o){var i,a;return r().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,this.getData();case 1:if(i=t.v,-1===(a=i.collections.findIndex(function(t){return t.id===e}))){t.n=2;break}return i.collections[a]=n(n(n({},i.collections[a]),o),{},{updatedAt:new Date}),t.n=2,this.saveData(i);case 2:return t.a(2)}},t,this)})),function(t,e){return i.apply(this,arguments)})},{key:"deleteCollection",value:(o=a(r().m(function t(e){var n;return r().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,this.getData();case 1:return(n=t.v).collections=n.collections.filter(function(t){return t.id!==e}),n.links.forEach(function(t){t.collectionId===e&&(t.collectionId=void 0)}),t.n=2,this.saveData(n);case 2:return t.a(2)}},t,this)})),function(t){return o.apply(this,arguments)})}],e&&c(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e,o,i,s,l,p,v,y,h,d}());function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function v(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return y(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:v,f:v.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function v(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],v=p.p,y=i[2];n>3?(o=y===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=v&&((o=n<2&&v<i[1])?(c=0,p.v=r,p.n=i[1]):v<y&&(o=n<3||i[0]>r||r>y)&&(i[4]=n,i[5]=r,p.n=y,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,y){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&v(f,y),c=f,u=y;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),v(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(y(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,y(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,y(l,"constructor",s),y(s,"constructor",u),u.displayName="GeneratorFunction",y(s,o,"GeneratorFunction"),y(l),y(l,o,"Generator"),y(l,r,function(){return this}),y(l,"toString",function(){return"[object Generator]"}),(v=function(){return{w:i,m:p}})()}function y(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}y=function(t,e,n,r){if(e)o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n;else{var i=function(e,n){y(t,e,function(t){return this._invoke(e,n,t)})};i("next",0),i("throw",1),i("return",2)}},y(t,e,n,r)}function h(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function d(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){h(i,r,o,a,c,"next",t)}function c(t){h(i,r,o,a,c,"throw",t)}a(void 0)})}}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,b(r.key),r)}}function b(t){var e=function(t){if("object"!=p(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==p(e)?e:e+""}var g=new(function(){return t=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.apiKey=e.apiKey||"",this.model=e.model||"gpt-3.5-turbo"},e=[{key:"generateSummary",value:(r=d(v().m(function t(e,n,r){var o,i;return v().w(function(t){for(;;)switch(t.n){case 0:if(this.apiKey){t.n=1;break}return t.a(2,this.generatePlaceholderSummary(e,n,r));case 1:return t.p=1,t.n=2,this.callOpenAI(e,n,r);case 2:return o=t.v,t.a(2,o);case 3:return t.p=3,i=t.v,console.error("AI summary generation failed:",i),t.a(2,this.generatePlaceholderSummary(e,n,r))}},t,this,[[1,3]])})),function(t,e,n){return r.apply(this,arguments)})},{key:"generatePlaceholderSummary",value:function(t,e,n){var r=new URL(n).hostname,o=t.length;return r.includes("github.com")?"GitHub repository or project page: ".concat(e):r.includes("stackoverflow.com")?"Stack Overflow discussion about programming or technical topics":r.includes("medium.com")||r.includes("blog")?"Blog article: ".concat(e.substring(0,50),"..."):r.includes("youtube.com")?"Video content: ".concat(e):r.includes("news")||r.includes("article")?"News article from ".concat(r):"Web page from ".concat(r," (").concat(Math.round(o/100)," paragraphs)")}},{key:"callOpenAI",value:(n=d(v().m(function t(e,n,r){var o,i,a,c;return v().w(function(t){for(;;)switch(t.n){case 0:return i="Summarize this web page in 1-2 sentences:\nTitle: ".concat(n,"\nURL: ").concat(r,"\nContent: ").concat(e.substring(0,1e3),"..."),t.n=1,fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:"Bearer ".concat(this.apiKey),"Content-Type":"application/json"},body:JSON.stringify({model:this.model,messages:[{role:"user",content:i}],max_tokens:100,temperature:.3})});case 1:return a=t.v,t.n=2,a.json();case 2:return c=t.v,t.a(2,(null===(o=c.choices[0])||void 0===o||null===(o=o.message)||void 0===o?void 0:o.content)||this.generatePlaceholderSummary(e,n,r))}},t,this)})),function(t,e,r){return n.apply(this,arguments)})},{key:"updateApiKey",value:function(t){this.apiKey=t}}],e&&m(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e,n,r}());function w(){var t,e,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",o=n.toStringTag||"@@toStringTag";function i(n,r,o,i){var u=r&&r.prototype instanceof c?r:c,s=Object.create(u.prototype);return k(s,"_invoke",function(n,r,o){var i,c,u,s=0,f=o||[],l=!1,p={p:0,n:0,v:t,a:v,f:v.bind(t,4),d:function(e,n){return i=e,c=0,u=t,p.n=n,a}};function v(n,r){for(c=n,u=r,e=0;!l&&s&&!o&&e<f.length;e++){var o,i=f[e],v=p.p,y=i[2];n>3?(o=y===r)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=t):i[0]<=v&&((o=n<2&&v<i[1])?(c=0,p.v=r,p.n=i[1]):v<y&&(o=n<3||i[0]>r||r>y)&&(i[4]=n,i[5]=r,p.n=y,c=0))}if(o||n>1)return a;throw l=!0,r}return function(o,f,y){if(s>1)throw TypeError("Generator is already running");for(l&&1===f&&v(f,y),c=f,u=y;(e=c<2?t:u)||!l;){i||(c?c<3?(c>1&&(p.n=-1),v(c,u)):p.n=u:p.v=u);try{if(s=2,i){if(c||(o="next"),e=i[o]){if(!(e=e.call(i,u)))throw TypeError("iterator result is not an object");if(!e.done)return e;u=e.value,c<2&&(c=0)}else 1===c&&(e=i.return)&&e.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=t}else if((e=(l=p.n<0)?u:n.call(r,p))!==a)break}catch(e){i=t,c=1,u=e}finally{s=1}}return{value:e,done:l}}}(n,o,i),!0),s}var a={};function c(){}function u(){}function s(){}e=Object.getPrototypeOf;var f=[][r]?e(e([][r]())):(k(e={},r,function(){return this}),e),l=s.prototype=c.prototype=Object.create(f);function p(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,s):(t.__proto__=s,k(t,o,"GeneratorFunction")),t.prototype=Object.create(l),t}return u.prototype=s,k(l,"constructor",s),k(s,"constructor",u),u.displayName="GeneratorFunction",k(s,o,"GeneratorFunction"),k(l),k(l,o,"Generator"),k(l,r,function(){return this}),k(l,"toString",function(){return"[object Generator]"}),(w=function(){return{w:i,m:p}})()}function k(t,e,n,r){var o=Object.defineProperty;try{o({},"",{})}catch(t){o=0}k=function(t,e,n,r){if(e)o?o(t,e,{value:n,enumerable:!r,configurable:!r,writable:!r}):t[e]=n;else{var i=function(e,n){k(t,e,function(t){return this._invoke(e,n,t)})};i("next",0),i("throw",1),i("return",2)}},k(t,e,n,r)}function O(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function j(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){O(i,r,o,a,c,"next",t)}function c(t){O(i,r,o,a,c,"throw",t)}a(void 0)})}}function P(t,e){return S.apply(this,arguments)}function S(){return(S=j(w().m(function t(e,n){var r,o,i,a,c,u,s,f,p,v,y,h;return w().w(function(t){for(;;)switch(t.n){case 0:if(r=n||e.url,o=e.title||"Untitled",r&&!r.startsWith("chrome://")&&!r.startsWith("chrome-extension://")){t.n=1;break}return console.log("Cannot save this type of page"),t.a(2);case 1:return t.p=1,i="",t.p=2,t.n=3,chrome.tabs.sendMessage(e.id,{action:"getPageContent"});case 3:a=t.v,i=(null==a?void 0:a.content)||"",t.n=5;break;case 4:t.p=4,y=t.v,console.log("Could not extract page content:",y);case 5:return(c=e.favIconUrl)||(u=new URL(r).hostname,c="https://www.google.com/s2/favicons?domain=".concat(u,"&sz=32")),t.n=6,g.generateSummary(i,o,r);case 6:return s=t.v,f=new URL(r).hostname,p="general",f.includes("github.com")?p="work":(f.includes("youtube.com")||f.includes("medium.com"))&&(p="learning"),v={id:Date.now().toString(),url:r,title:o,favicon:c,userNote:"",aiSummary:s,category:p,domain:f,createdAt:new Date,updatedAt:new Date},t.n=7,l.addLink(v);case 7:chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Saved to Nest",message:'"'.concat(o,'" has been saved to your Holding Area')}),console.log("Page saved successfully:",v),t.n=9;break;case 8:t.p=8,h=t.v,console.error("Failed to save page:",h),chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Nest Error",message:"Failed to save page. Please try again."});case 9:return t.a(2)}},t,null,[[2,4],[1,8]])}))).apply(this,arguments)}function D(t){return T.apply(this,arguments)}function T(){return(T=j(w().m(function t(e){var n,r;return w().w(function(t){for(;;)switch(t.n){case 0:return t.p=0,t.n=1,chrome.tabs.sendMessage(e,{action:"getPageContent"});case 1:return n=t.v,t.a(2,n);case 2:return t.p=2,r=t.v,console.error("Failed to get page content:",r),t.a(2,{content:""})}},t,null,[[0,2]])}))).apply(this,arguments)}chrome.runtime.onInstalled.addListener(function(){chrome.contextMenus.create({id:"saveToNest",title:"Save to Nest",contexts:["page","link"]}),console.log("Nest extension installed")}),chrome.contextMenus.onClicked.addListener(function(){var t=j(w().m(function t(e,n){return w().w(function(t){for(;;)switch(t.n){case 0:if("saveToNest"!==e.menuItemId||!n){t.n=1;break}return t.n=1,P(n,e.linkUrl);case 1:return t.a(2)}},t)}));return function(e,n){return t.apply(this,arguments)}}()),chrome.action.onClicked.addListener(function(){var t=j(w().m(function t(e){return w().w(function(t){for(;;)switch(t.n){case 0:return t.n=1,chrome.sidePanel.open({tabId:e.id});case 1:return t.a(2)}},t)}));return function(e){return t.apply(this,arguments)}}()),chrome.runtime.onMessage.addListener(function(t,e,n){return j(w().m(function r(){var o,i,a;return w().w(function(r){for(;;)switch(r.n){case 0:r.p=0,i=t.action,r.n="saveCurrentPage"===i?1:"getPageContent"===i?4:"openSidePanel"===i?7:10;break;case 1:if(!e.tab){r.n=3;break}return r.n=2,P(e.tab);case 2:n({success:!0});case 3:return r.a(3,11);case 4:if(!e.tab){r.n=6;break}return r.n=5,D(e.tab.id);case 5:o=r.v,n(o);case 6:return r.a(3,11);case 7:if(!e.tab){r.n=9;break}return r.n=8,chrome.sidePanel.open({tabId:e.tab.id});case 8:n({success:!0});case 9:return r.a(3,11);case 10:n({error:"Unknown action"});case 11:r.n=13;break;case 12:r.p=12,a=r.v,console.error("Background script error:",a),n({error:a.message});case 13:return r.a(2)}},r,null,[[0,12]])}))(),!0}),chrome.commands.onCommand.addListener(function(){var t=j(w().m(function t(e){var n;return w().w(function(t){for(;;)switch(t.n){case 0:if("save-page"!==e){t.n=2;break}return t.n=1,chrome.tabs.query({active:!0,currentWindow:!0});case 1:if(!(n=t.v)[0]){t.n=2;break}return t.n=2,P(n[0]);case 2:return t.a(2)}},t)}));return function(e){return t.apply(this,arguments)}}())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,